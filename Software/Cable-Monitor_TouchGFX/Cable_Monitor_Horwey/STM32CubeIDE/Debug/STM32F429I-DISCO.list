
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002e8c8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171f0  0802ea78  0802ea78  0003ea78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08045c68  08045c68  00055c68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08049960  08049960  00059960  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000734  08049bac  08049bac  00059bac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  0804a2e0  0804a2e0  0005a2e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cf3d0  080cf3d0  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080cf3d0  080cf3d0  000df3d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cf3d8  080cf3d8  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cf3d8  080cf3d8  000df3d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cf3ec  080cf3ec  000df3ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080cf3f0  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014304  20000170  080cf55c  000e0170  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014474  080cf55c  000e4474  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY
 18 .debug_line   00097393  00000000  00000000  000e02ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00177661  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00251164  00000000  00000000  001776f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002caf5  00000000  00000000  003c8858  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004498  00000000  00000000  003f5350  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00120a9a  00000000  00000000  003f97e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008804  00000000  00000000  0051a282  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 000359cc  00000000  00000000  00522a86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003b885  00000000  00000000  00558452  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000cdc8  00000000  00000000  00593cd8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    0000350f  00000000  00000000  005a0aa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000150  00000000  00000000  005a3faf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802ea60 	.word	0x0802ea60

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0802ea60 	.word	0x0802ea60

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:
    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 

  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f00a fc3f 	bl	800b564 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02d f93f 	bl	802df68 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 fd07 	bl	80016fc <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	080cf3f0 	.word	0x080cf3f0
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 8000d00:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000d04:	20014474 	.word	0x20014474

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8000d0c:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8000d10:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 8000d14:	4293      	cmp	r3, r2
 8000d16:	d905      	bls.n	8000d24 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 8000d18:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 8000d1c:	4291      	cmp	r1, r2
 8000d1e:	d803      	bhi.n	8000d28 <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 8000d20:	2001      	movs	r0, #1
 8000d22:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 8000d24:	2000      	movs	r0, #0
 8000d26:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 8000d28:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 8000d2c:	4291      	cmp	r1, r2
 8000d2e:	d960      	bls.n	8000df2 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 8000d30:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 8000d34:	4293      	cmp	r3, r2
 8000d36:	d95e      	bls.n	8000df6 <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 8000d38:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 8000d3c:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 8000d40:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8000d44:	4291      	cmp	r1, r2
 8000d46:	d95a      	bls.n	8000dfe <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 8000d48:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8000d4c:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 8000d50:	4291      	cmp	r1, r2
 8000d52:	d952      	bls.n	8000dfa <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 8000d54:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 8000d58:	4291      	cmp	r1, r2
 8000d5a:	d952      	bls.n	8000e02 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8000d5c:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 8000d60:	4291      	cmp	r1, r2
 8000d62:	d950      	bls.n	8000e06 <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8000d64:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 8000d68:	4291      	cmp	r1, r2
 8000d6a:	d94e      	bls.n	8000e0a <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000d6c:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000d70:	4291      	cmp	r1, r2
 8000d72:	d94c      	bls.n	8000e0e <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000d74:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 8000d78:	4291      	cmp	r1, r2
 8000d7a:	d94a      	bls.n	8000e12 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000d7c:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000d80:	4291      	cmp	r1, r2
 8000d82:	d948      	bls.n	8000e16 <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000d84:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 8000d88:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000d8c:	4288      	cmp	r0, r1
 8000d8e:	d944      	bls.n	8000e1a <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000d90:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000d94:	458c      	cmp	ip, r1
 8000d96:	d942      	bls.n	8000e1e <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 8000d98:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000d9c:	458c      	cmp	ip, r1
 8000d9e:	d940      	bls.n	8000e22 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000da0:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000da4:	4288      	cmp	r0, r1
 8000da6:	d93e      	bls.n	8000e26 <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 8000da8:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000dac:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000db0:	4288      	cmp	r0, r1
 8000db2:	d93a      	bls.n	8000e2a <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000db4:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 8000db8:	4291      	cmp	r1, r2
 8000dba:	d938      	bls.n	8000e2e <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000dbc:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000dc0:	4291      	cmp	r1, r2
 8000dc2:	d938      	bls.n	8000e36 <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000dc4:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 8000dc8:	4291      	cmp	r1, r2
 8000dca:	d932      	bls.n	8000e32 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000dcc:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000dd0:	4291      	cmp	r1, r2
 8000dd2:	d936      	bls.n	8000e42 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000dd4:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 8000dd8:	4291      	cmp	r1, r2
 8000dda:	d930      	bls.n	8000e3e <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000ddc:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000de0:	4291      	cmp	r1, r2
 8000de2:	d92a      	bls.n	8000e3a <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000de4:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 8000de8:	4293      	cmp	r3, r2
 8000dea:	bf94      	ite	ls
 8000dec:	2017      	movls	r0, #23
 8000dee:	2000      	movhi	r0, #0
 8000df0:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000df2:	2002      	movs	r0, #2
 8000df4:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 8000df6:	2003      	movs	r0, #3
 8000df8:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 8000dfa:	2005      	movs	r0, #5
 8000dfc:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000dfe:	2004      	movs	r0, #4
 8000e00:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000e02:	2006      	movs	r0, #6
 8000e04:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 8000e06:	2007      	movs	r0, #7
 8000e08:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 8000e0a:	2008      	movs	r0, #8
 8000e0c:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 8000e0e:	2009      	movs	r0, #9
 8000e10:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 8000e12:	200a      	movs	r0, #10
 8000e14:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 8000e16:	200b      	movs	r0, #11
 8000e18:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 8000e1a:	200c      	movs	r0, #12
 8000e1c:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 8000e1e:	200d      	movs	r0, #13
 8000e20:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 8000e22:	200e      	movs	r0, #14
 8000e24:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 8000e26:	200f      	movs	r0, #15
 8000e28:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 8000e2a:	2010      	movs	r0, #16
 8000e2c:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 8000e2e:	2011      	movs	r0, #17
 8000e30:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 8000e32:	2013      	movs	r0, #19
 8000e34:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 8000e36:	2012      	movs	r0, #18
 8000e38:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 8000e3a:	2016      	movs	r0, #22
  }
  return sector;
}
 8000e3c:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 8000e3e:	2015      	movs	r0, #21
 8000e40:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 8000e42:	2014      	movs	r0, #20
 8000e44:	4770      	bx	lr
 8000e46:	bf00      	nop

08000e48 <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8000e48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e4a:	4607      	mov	r7, r0
 8000e4c:	b083      	sub	sp, #12
 8000e4e:	4616      	mov	r6, r2
 8000e50:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 8000e52:	f00a fd45 	bl	800b8e0 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8000e56:	4638      	mov	r0, r7
 8000e58:	f7ff ff58 	bl	8000d0c <GetSector>
 8000e5c:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 8000e5e:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8000e62:	f7ff ff53 	bl	8000d0c <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e66:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e68:	4813      	ldr	r0, [pc, #76]	; (8000eb8 <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e6a:	1b1b      	subs	r3, r3, r4
 8000e6c:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e70:	2300      	movs	r3, #0
 8000e72:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e74:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8000e76:	2302      	movs	r3, #2
 8000e78:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e7a:	f00a fdaf 	bl	800b9dc <HAL_FLASHEx_Erase>
 8000e7e:	b988      	cbnz	r0, 8000ea4 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000e80:	b1a6      	cbz	r6, 8000eac <Flash_Write_Data+0x64>
 8000e82:	1b7f      	subs	r7, r7, r5
 8000e84:	4604      	mov	r4, r0
 8000e86:	3d04      	subs	r5, #4
 8000e88:	3704      	adds	r7, #4
 8000e8a:	e001      	b.n	8000e90 <Flash_Write_Data+0x48>
 8000e8c:	42a6      	cmp	r6, r4
 8000e8e:	d00d      	beq.n	8000eac <Flash_Write_Data+0x64>
 8000e90:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e92:	2300      	movs	r3, #0
 8000e94:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8000e98:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 8000e9a:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e9c:	f00a fc7e 	bl	800b79c <HAL_FLASH_Program>
 8000ea0:	2800      	cmp	r0, #0
 8000ea2:	d0f3      	beq.n	8000e8c <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000ea4:	f00a fd3a 	bl	800b91c <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8000ea8:	b003      	add	sp, #12
 8000eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000eac:	f00a fd2c 	bl	800b908 <HAL_FLASH_Lock>
	   return 0;
 8000eb0:	2000      	movs	r0, #0
}
 8000eb2:	b003      	add	sp, #12
 8000eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eb6:	bf00      	nop
 8000eb8:	2000018c 	.word	0x2000018c

08000ebc <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000ebc:	460b      	mov	r3, r1
 8000ebe:	3201      	adds	r2, #1
 8000ec0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000ec4:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8000ec6:	581a      	ldr	r2, [r3, r0]
 8000ec8:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000ecc:	428b      	cmp	r3, r1
 8000ece:	d1fa      	bne.n	8000ec6 <Flash_Read_Data+0xa>
	}
}
 8000ed0:	4770      	bx	lr
 8000ed2:	bf00      	nop

08000ed4 <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(float32_t input_samples[]) {
 8000ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ed8:	ed2d 8b02 	vpush	{d8}
 8000edc:	b088      	sub	sp, #32
 8000ede:	af00      	add	r7, sp, #0
 8000ee0:	4605      	mov	r5, r0
 8000ee2:	460e      	mov	r6, r1
    // Perform FFT using CMSIS-DSP library
    const uint8_t fft_size = MEAS_get_num_of_samples();
 8000ee4:	f001 f96c 	bl	80021c0 <MEAS_get_num_of_samples>
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
 8000ee8:	4604      	mov	r4, r0
 8000eea:	2800      	cmp	r0, #0
 8000eec:	f000 8089 	beq.w	8001002 <calculate_freq_and_signalstrength+0x12e>
 8000ef0:	2204      	movs	r2, #4
        input_samples[i] -= 2047.5;
 8000ef2:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8001008 <calculate_freq_and_signalstrength+0x134>
 8000ef6:	4633      	mov	r3, r6
 8000ef8:	fb12 6200 	smlabb	r2, r2, r0, r6
 8000efc:	edd3 7a00 	vldr	s15, [r3]
 8000f00:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000f04:	ece3 7a01 	vstmia	r3!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000f08:	429a      	cmp	r2, r3
 8000f0a:	d1f7      	bne.n	8000efc <calculate_freq_and_signalstrength+0x28>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * fft_size];
 8000f0c:	b223      	sxth	r3, r4
 8000f0e:	00db      	lsls	r3, r3, #3
 8000f10:	ebad 0d03 	sub.w	sp, sp, r3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f14:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * fft_size];
 8000f18:	46e8      	mov	r8, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f1a:	b2a1      	uxth	r1, r4
 8000f1c:	f107 0008 	add.w	r0, r7, #8
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f20:	eef8 8ae7 	vcvt.f32.s32	s17, s15
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f24:	f02a fd74 	bl	802ba10 <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f28:	2300      	movs	r3, #0
 8000f2a:	4631      	mov	r1, r6
 8000f2c:	f107 0008 	add.w	r0, r7, #8
 8000f30:	4642      	mov	r2, r8
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f32:	f3c4 0647 	ubfx	r6, r4, #1, #8
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f36:	f02a fdef 	bl	802bb18 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f3a:	4632      	mov	r2, r6
 8000f3c:	4641      	mov	r1, r8
 8000f3e:	4640      	mov	r0, r8
 8000f40:	f02b fa58 	bl	802c3f4 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000f44:	463b      	mov	r3, r7
 8000f46:	1d3a      	adds	r2, r7, #4
 8000f48:	4631      	mov	r1, r6
 8000f4a:	4640      	mov	r0, r8
 8000f4c:	f02a fcf8 	bl	802b940 <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f50:	edd7 7a00 	vldr	s15, [r7]
 8000f54:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000f58:	f001 f934 	bl	80021c4 <MEAS_get_samp_freq>
 8000f5c:	ee07 0a90 	vmov	s15, r0
 8000f60:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f64:	ed9f 7a29 	vldr	s14, [pc, #164]	; 800100c <calculate_freq_and_signalstrength+0x138>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f68:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000f6c:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f70:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000f74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f78:	d817      	bhi.n	8000faa <calculate_freq_and_signalstrength+0xd6>
 8000f7a:	eddf 7a25 	vldr	s15, [pc, #148]	; 8001010 <calculate_freq_and_signalstrength+0x13c>
 8000f7e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000f82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f86:	db28      	blt.n	8000fda <calculate_freq_and_signalstrength+0x106>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000f88:	f001 f91c 	bl	80021c4 <MEAS_get_samp_freq>
 8000f8c:	2332      	movs	r3, #50	; 0x32
 8000f8e:	fb04 f303 	mul.w	r3, r4, r3
 8000f92:	fbb3 f0f0 	udiv	r0, r3, r0
    // set the signal strength to 0
    float signal_strength = 0;
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000f96:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8000f9a:	edd0 7a00 	vldr	s15, [r0]
 8000f9e:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000fa2:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000fa4:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000fa8:	e00b      	b.n	8000fc2 <calculate_freq_and_signalstrength+0xee>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000faa:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fb6:	d91c      	bls.n	8000ff2 <calculate_freq_and_signalstrength+0x11e>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000fb8:	f001 f904 	bl	80021c4 <MEAS_get_samp_freq>
    float signal_strength = 0;
 8000fbc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001018 <calculate_freq_and_signalstrength+0x144>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000fc0:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
}
 8000fc2:	4628      	mov	r0, r5
 8000fc4:	3720      	adds	r7, #32
    return fft;
 8000fc6:	ed85 8a00 	vstr	s16, [r5]
 8000fca:	ed85 7a01 	vstr	s14, [r5, #4]
 8000fce:	722b      	strb	r3, [r5, #8]
}
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	ecbd 8b02 	vpop	{d8}
 8000fd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000fda:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fde:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fe6:	d8e7      	bhi.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
 8000fe8:	eeb4 8a47 	vcmp.f32	s16, s14
 8000fec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ff0:	d1e2      	bne.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000ff2:	f001 f8e7 	bl	80021c4 <MEAS_get_samp_freq>
 8000ff6:	ebc4 1304 	rsb	r3, r4, r4, lsl #4
 8000ffa:	009b      	lsls	r3, r3, #2
 8000ffc:	fbb3 f0f0 	udiv	r0, r3, r0
    if (given_frequency != 0) {
 8001000:	e7c9      	b.n	8000f96 <calculate_freq_and_signalstrength+0xc2>
    for (uint32_t i = 0; i < fft_size; i++) {
 8001002:	4603      	mov	r3, r0
 8001004:	e784      	b.n	8000f10 <calculate_freq_and_signalstrength+0x3c>
 8001006:	bf00      	nop
 8001008:	44fff000 	.word	0x44fff000
 800100c:	425c0000 	.word	0x425c0000
 8001010:	42340000 	.word	0x42340000
 8001014:	42820000 	.word	0x42820000
 8001018:	00000000 	.word	0x00000000

0800101c <accurate_FFT>:
 * to obtain accurate results and returns the calculated values in an instance of the
 * ACCU_FFT structure.
 *
 * @return The calculated signal strength and main frequency for each channel.
 */
ACCU_FFT accurate_FFT(void){
 800101c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001020:	ed2d 8b04 	vpush	{d8-d9}
 8001024:	b0a7      	sub	sp, #156	; 0x9c
 8001026:	af00      	add	r7, sp, #0
 8001028:	6078      	str	r0, [r7, #4]
    float32_t accu_strength_HSR[ACCURATE_MEASUREMENT_LOOPS];
    float32_t accu_strength_HSL[ACCURATE_MEASUREMENT_LOOPS];

    uint32_t* samples;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 800102a:	f001 f8c9 	bl	80021c0 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800102e:	b203      	sxth	r3, r0
 8001030:	009b      	lsls	r3, r3, #2
 8001032:	3307      	adds	r3, #7
 8001034:	f023 0307 	bic.w	r3, r3, #7
 8001038:	ebad 0d03 	sub.w	sp, sp, r3
 800103c:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 800103e:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 8001042:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 8001046:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 8001048:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 800104c:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 8001050:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 8001052:	ebad 0d03 	sub.w	sp, sp, r3
 8001056:	466b      	mov	r3, sp
 8001058:	ee09 3a90 	vmov	s19, r3
 800105c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001060:	613b      	str	r3, [r7, #16]
 8001062:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001066:	617b      	str	r3, [r7, #20]
 8001068:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800106c:	60fb      	str	r3, [r7, #12]
    float32_t samples_HSR[buffer_size];
 800106e:	ee09 2a10 	vmov	s18, r2
 8001072:	f107 0364 	add.w	r3, r7, #100	; 0x64
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001076:	4682      	mov	sl, r0

    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001078:	60bb      	str	r3, [r7, #8]
        // Start the measurement
        samples = MEAS_start_measure();
 800107a:	f001 f873 	bl	8002164 <MEAS_start_measure>
 800107e:	4605      	mov	r5, r0

        // Convert the samples to the specific channel
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001080:	f1ba 0f00 	cmp.w	sl, #0
 8001084:	d03e      	beq.n	8001104 <accurate_FFT+0xe8>
 8001086:	ee18 9a10 	vmov	r9, s16
 800108a:	ee18 8a90 	vmov	r8, s17
 800108e:	ee19 6a10 	vmov	r6, s18
 8001092:	ee19 ba90 	vmov	fp, s19
 8001096:	2400      	movs	r4, #0
            samples_PR[j] = (float32_t)samples[j * MEAS_get_num_of_chan()];
 8001098:	f001 f890 	bl	80021bc <MEAS_get_num_of_chan>
 800109c:	fb04 f000 	mul.w	r0, r4, r0
 80010a0:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010a4:	edd3 7a00 	vldr	s15, [r3]
 80010a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010ac:	ece9 7a01 	vstmia	r9!, {s15}
            samples_PL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 1];
 80010b0:	f001 f884 	bl	80021bc <MEAS_get_num_of_chan>
 80010b4:	fb04 f000 	mul.w	r0, r4, r0
 80010b8:	3001      	adds	r0, #1
 80010ba:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010be:	edd3 7a00 	vldr	s15, [r3]
 80010c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010c6:	ece8 7a01 	vstmia	r8!, {s15}
            samples_HSR[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 2];
 80010ca:	f001 f877 	bl	80021bc <MEAS_get_num_of_chan>
 80010ce:	fb04 f000 	mul.w	r0, r4, r0
 80010d2:	3002      	adds	r0, #2
 80010d4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010d8:	edd3 7a00 	vldr	s15, [r3]
 80010dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010e0:	ece6 7a01 	vstmia	r6!, {s15}
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010e4:	f001 f86a 	bl	80021bc <MEAS_get_num_of_chan>
 80010e8:	fb04 f000 	mul.w	r0, r4, r0
 80010ec:	3003      	adds	r0, #3
 80010ee:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010f2:	edd3 7a00 	vldr	s15, [r3]
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010f6:	3401      	adds	r4, #1
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010fc:	45a2      	cmp	sl, r4
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010fe:	eceb 7a01 	vstmia	fp!, {s15}
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001102:	d1c9      	bne.n	8001098 <accurate_FFT+0x7c>
        }
        // Calculate the Signal Strength and the main frequency for each channel using FFT

        fft = calculate_freq_and_signalstrength(samples_PR);
 8001104:	ee18 1a10 	vmov	r1, s16
 8001108:	f107 001c 	add.w	r0, r7, #28
 800110c:	f7ff fee2 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PR[i] = fft.signal_strength;
 8001110:	697c      	ldr	r4, [r7, #20]
 8001112:	6a3b      	ldr	r3, [r7, #32]
 8001114:	f844 3b04 	str.w	r3, [r4], #4
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001118:	ee18 1a90 	vmov	r1, s17
 800111c:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PR[i] = fft.signal_strength;
 8001120:	617c      	str	r4, [r7, #20]
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001122:	f7ff fed7 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PL[i] = fft.signal_strength;
 8001126:	693a      	ldr	r2, [r7, #16]
 8001128:	6a3b      	ldr	r3, [r7, #32]
 800112a:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSR);
 800112e:	ee19 1a10 	vmov	r1, s18
 8001132:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PL[i] = fft.signal_strength;
 8001136:	613a      	str	r2, [r7, #16]
        fft = calculate_freq_and_signalstrength(samples_HSR);
 8001138:	f7ff fecc 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSR[i] = fft.signal_strength;
 800113c:	68fa      	ldr	r2, [r7, #12]
 800113e:	6a3b      	ldr	r3, [r7, #32]
 8001140:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSL);
 8001144:	ee19 1a90 	vmov	r1, s19
 8001148:	f107 001c 	add.w	r0, r7, #28
        accu_strength_HSR[i] = fft.signal_strength;
 800114c:	60fa      	str	r2, [r7, #12]
        fft = calculate_freq_and_signalstrength(samples_HSL);
 800114e:	f7ff fec1 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSL[i] = fft.signal_strength;
 8001152:	68ba      	ldr	r2, [r7, #8]
 8001154:	6a3b      	ldr	r3, [r7, #32]
 8001156:	f842 3b04 	str.w	r3, [r2], #4
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 800115a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800115e:	429c      	cmp	r4, r3
        accu_strength_HSL[i] = fft.signal_strength;
 8001160:	60ba      	str	r2, [r7, #8]
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001162:	d18a      	bne.n	800107a <accurate_FFT+0x5e>
        //current[i] = single_meas.current;
    }
    arm_mean_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr);
 8001164:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8001168:	f107 0278 	add.w	r2, r7, #120	; 0x78
 800116c:	2105      	movs	r1, #5
 800116e:	f02a fbb3 	bl	802b8d8 <arm_mean_f32>
    //arm_std_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr_std_dev);
    arm_mean_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl);
 8001172:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8001176:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 800117a:	2105      	movs	r1, #5
 800117c:	f02a fbac 	bl	802b8d8 <arm_mean_f32>
    //arm_std_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl_std_dev);
    arm_mean_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr);
 8001180:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8001184:	f107 0050 	add.w	r0, r7, #80	; 0x50
 8001188:	2105      	movs	r1, #5
 800118a:	f02a fba5 	bl	802b8d8 <arm_mean_f32>
    //arm_std_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr_std_dev);
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
    //arm_std_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl_std_dev);

    return accu_fft;
 800118e:	f107 0478 	add.w	r4, r7, #120	; 0x78
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
 8001192:	f107 0290 	add.w	r2, r7, #144	; 0x90
 8001196:	f107 0064 	add.w	r0, r7, #100	; 0x64
 800119a:	2105      	movs	r1, #5
 800119c:	f02a fb9c 	bl	802b8d8 <arm_mean_f32>
    return accu_fft;
 80011a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80011a2:	687e      	ldr	r6, [r7, #4]
 80011a4:	4635      	mov	r5, r6
 80011a6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80011a8:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
}
 80011ac:	379c      	adds	r7, #156	; 0x9c
    return accu_fft;
 80011ae:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 80011b2:	4630      	mov	r0, r6
 80011b4:	46bd      	mov	sp, r7
 80011b6:	ecbd 8b04 	vpop	{d8-d9}
 80011ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80011be:	bf00      	nop

080011c0 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80011c0:	ed90 6a02 	vldr	s12, [r0, #8]
 80011c4:	edd0 7a01 	vldr	s15, [r0, #4]
 80011c8:	ed90 5a00 	vldr	s10, [r0]
 80011cc:	ed91 7a02 	vldr	s14, [r1, #8]
 80011d0:	edd1 4a00 	vldr	s9, [r1]
 80011d4:	ed91 4a01 	vldr	s8, [r1, #4]
 80011d8:	ee66 6a06 	vmul.f32	s13, s12, s12
 80011dc:	ee77 5ac6 	vsub.f32	s11, s15, s12
 80011e0:	ee65 4a24 	vmul.f32	s9, s10, s9
 80011e4:	ee66 6a87 	vmul.f32	s13, s13, s14
 80011e8:	ee27 7a46 	vnmul.f32	s14, s14, s12
 80011ec:	eee5 6aa4 	vfma.f32	s13, s11, s9
 80011f0:	eea7 7a84 	vfma.f32	s14, s15, s8
 80011f4:	ee67 3aa7 	vmul.f32	s7, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80011f8:	ee77 4a86 	vadd.f32	s9, s15, s12
 80011fc:	eee4 6a63 	vfms.f32	s13, s8, s7
 8001200:	ee67 7a86 	vmul.f32	s15, s15, s12
 8001204:	ee35 6a64 	vsub.f32	s12, s10, s9
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001208:	ee27 7a27 	vmul.f32	s14, s14, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800120c:	eee5 7a06 	vfma.f32	s15, s10, s12
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001210:	eea5 7a26 	vfma.f32	s14, s10, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001214:	ee65 5aa7 	vmul.f32	s11, s11, s15
 8001218:	eec7 7a25 	vdiv.f32	s15, s14, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800121c:	edc2 7a00 	vstr	s15, [r2]
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001220:	edd0 7a01 	vldr	s15, [r0, #4]
 8001224:	ed91 3a01 	vldr	s6, [r1, #4]
 8001228:	ed91 7a00 	vldr	s14, [r1]
 800122c:	edd0 6a02 	vldr	s13, [r0, #8]
 8001230:	edd1 5a02 	vldr	s11, [r1, #8]
 8001234:	edd0 4a00 	vldr	s9, [r0]
 8001238:	ee67 2aa7 	vmul.f32	s5, s15, s15
 800123c:	ee33 6a47 	vsub.f32	s12, s6, s14
 8001240:	ee26 5aa6 	vmul.f32	s10, s13, s13
 8001244:	ee37 7a65 	vsub.f32	s14, s14, s11
 8001248:	ee26 6a22 	vmul.f32	s12, s12, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800124c:	ee77 3aa6 	vadd.f32	s7, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001250:	eea7 6a05 	vfma.f32	s12, s14, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001254:	ee27 4aa6 	vmul.f32	s8, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001258:	ee24 7aa4 	vmul.f32	s14, s9, s9
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800125c:	ee74 3ae3 	vsub.f32	s7, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001260:	ee25 5a22 	vmul.f32	s10, s10, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001264:	eea4 4aa3 	vfma.f32	s8, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001268:	ee75 5ac3 	vsub.f32	s11, s11, s6
 800126c:	ee27 7a06 	vmul.f32	s14, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001270:	ee77 7ae6 	vsub.f32	s15, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001274:	eea5 7a25 	vfma.f32	s14, s10, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001278:	ee67 7a84 	vmul.f32	s15, s15, s8
 800127c:	eec7 6a27 	vdiv.f32	s13, s14, s15
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001280:	edc3 6a00 	vstr	s13, [r3]

    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001284:	edd1 7a00 	vldr	s15, [r1]
 8001288:	ed91 4a02 	vldr	s8, [r1, #8]
 800128c:	ed90 6a02 	vldr	s12, [r0, #8]
 8001290:	edd1 6a01 	vldr	s13, [r1, #4]
 8001294:	ed90 7a01 	vldr	s14, [r0, #4]
 8001298:	9b00      	ldr	r3, [sp, #0]
 800129a:	ee74 5a67 	vsub.f32	s11, s8, s15
 800129e:	ee77 4ae6 	vsub.f32	s9, s15, s13
 80012a2:	ee65 5a86 	vmul.f32	s11, s11, s12
 80012a6:	edd0 7a00 	vldr	s15, [r0]
 80012aa:	eee7 5a24 	vfma.f32	s11, s14, s9
 80012ae:	ee27 5a06 	vmul.f32	s10, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012b2:	ee77 4a06 	vadd.f32	s9, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012b6:	ee76 6ac4 	vsub.f32	s13, s13, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012ba:	ee77 4ae4 	vsub.f32	s9, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012be:	ee66 6a85 	vmul.f32	s13, s13, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012c2:	eea7 5aa4 	vfma.f32	s10, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012c6:	eee7 6aa5 	vfma.f32	s13, s15, s11
 80012ca:	ee67 7a87 	vmul.f32	s15, s15, s14
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012ce:	ee37 7a46 	vsub.f32	s14, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012d2:	ee67 7a86 	vmul.f32	s15, s15, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012d6:	ee27 7a05 	vmul.f32	s14, s14, s10
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012da:	ee67 7aa6 	vmul.f32	s15, s15, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012de:	eec7 6a87 	vdiv.f32	s13, s15, s14
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012e2:	edc3 6a00 	vstr	s13, [r3]
}
 80012e6:	4770      	bx	lr

080012e8 <calculate_distance_and_angle>:
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 80012e8:	b530      	push	{r4, r5, lr}
    float32_t distance[3] = {10, 50, 100};
 80012ea:	4b37      	ldr	r3, [pc, #220]	; (80013c8 <calculate_distance_and_angle+0xe0>)
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 80012ec:	ed2d 8b02 	vpush	{d8}
    float32_t distance[3] = {10, 50, 100};
 80012f0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 80012f4:	b097      	sub	sp, #92	; 0x5c
    float32_t distance[3] = {10, 50, 100};
 80012f6:	f10d 0e1c 	add.w	lr, sp, #28
 80012fa:	e88e 0007 	stmia.w	lr, {r0, r1, r2}
    float32_t signal_r[3] = {1030, 717, 543};
 80012fe:	f103 020c 	add.w	r2, r3, #12
 8001302:	ca07      	ldmia	r2, {r0, r1, r2}
 8001304:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8001308:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    float32_t signal_l[3] = {920, 655, 553};
 800130c:	f103 0218 	add.w	r2, r3, #24
 8001310:	ca07      	ldmia	r2, {r0, r1, r2}
 8001312:	ac0d      	add	r4, sp, #52	; 0x34
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 8001314:	ab12      	add	r3, sp, #72	; 0x48
 8001316:	9300      	str	r3, [sp, #0]
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 8001318:	ad15      	add	r5, sp, #84	; 0x54
    float32_t signal_l[3] = {920, 655, 553};
 800131a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 800131e:	ab11      	add	r3, sp, #68	; 0x44
 8001320:	4660      	mov	r0, ip
 8001322:	4671      	mov	r1, lr
 8001324:	aa10      	add	r2, sp, #64	; 0x40
 8001326:	f7ff ff4b 	bl	80011c0 <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 800132a:	ab14      	add	r3, sp, #80	; 0x50
 800132c:	aa13      	add	r2, sp, #76	; 0x4c
 800132e:	4620      	mov	r0, r4
 8001330:	9500      	str	r5, [sp, #0]
 8001332:	f7ff ff45 	bl	80011c0 <calculate_coefficients_single_pad>
    return calibration;
 8001336:	ed9d 7a11 	vldr	s14, [sp, #68]	; 0x44
 800133a:	eddd 7a14 	vldr	s15, [sp, #80]	; 0x50
 800133e:	eddd 6a15 	vldr	s13, [sp, #84]	; 0x54
 8001342:	ed9d 6a10 	vldr	s12, [sp, #64]	; 0x40
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001346:	ee87 8a00 	vdiv.f32	s16, s14, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800134a:	eec7 8aa0 	vdiv.f32	s17, s15, s1
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800134e:	ee20 0a00 	vmul.f32	s0, s0, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001352:	ee60 0aa0 	vmul.f32	s1, s1, s1
    return calibration;
 8001356:	eddd 7a12 	vldr	s15, [sp, #72]	; 0x48
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800135a:	ee87 7a80 	vdiv.f32	s14, s15, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800135e:	eec6 7aa0 	vdiv.f32	s15, s13, s1
    return calibration;
 8001362:	eddd 6a13 	vldr	s13, [sp, #76]	; 0x4c
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001366:	ee38 8a06 	vadd.f32	s16, s16, s12
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800136a:	ee78 8aa6 	vadd.f32	s17, s17, s13
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800136e:	ee38 8a07 	vadd.f32	s16, s16, s14
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001372:	ee78 8aa7 	vadd.f32	s17, s17, s15
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001376:	ee78 7ac8 	vsub.f32	s15, s17, s16
 800137a:	ee17 0a90 	vmov	r0, s15
 800137e:	f7ff fa75 	bl	800086c <__aeabi_f2d>
 8001382:	a30f      	add	r3, pc, #60	; (adr r3, 80013c0 <calculate_distance_and_angle+0xd8>)
 8001384:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001388:	f7fe ffe2 	bl	8000350 <__aeabi_dmul>
 800138c:	f7ff fac6 	bl	800091c <__aeabi_d2f>
 8001390:	ee00 0a10 	vmov	s0, r0
 8001394:	f02b fc44 	bl	802cc20 <atanf>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001398:	ee38 1a28 	vadd.f32	s2, s16, s17
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 800139c:	eddf 1a0b 	vldr	s3, [pc, #44]	; 80013cc <calculate_distance_and_angle+0xe4>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 80013a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
}
 80013a4:	ee60 1a21 	vmul.f32	s3, s0, s3
 80013a8:	ee21 1a07 	vmul.f32	s2, s2, s14
 80013ac:	eef0 0a68 	vmov.f32	s1, s17
 80013b0:	eeb0 0a48 	vmov.f32	s0, s16
 80013b4:	b017      	add	sp, #92	; 0x5c
 80013b6:	ecbd 8b02 	vpop	{d8}
 80013ba:	bd30      	pop	{r4, r5, pc}
 80013bc:	f3af 8000 	nop.w
 80013c0:	a8ef1b4a 	.word	0xa8ef1b4a
 80013c4:	3f99fd66 	.word	0x3f99fd66
 80013c8:	0802ea78 	.word	0x0802ea78
 80013cc:	42652ee0 	.word	0x42652ee0

080013d0 <single_measurement>:
SINGLE_MEAS single_measurement(uint32_t* samples) {
 80013d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80013d4:	ed2d 8b04 	vpush	{d8-d9}
 80013d8:	b093      	sub	sp, #76	; 0x4c
 80013da:	af00      	add	r7, sp, #0
 80013dc:	4605      	mov	r5, r0
    uint8_t buffer_size = MEAS_get_num_of_samples();
 80013de:	f000 feef 	bl	80021c0 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 80013e2:	b203      	sxth	r3, r0
 80013e4:	009b      	lsls	r3, r3, #2
 80013e6:	3307      	adds	r3, #7
 80013e8:	f023 0307 	bic.w	r3, r3, #7
 80013ec:	ebad 0d03 	sub.w	sp, sp, r3
 80013f0:	46e9      	mov	r9, sp
    float32_t samples_PL[buffer_size];
 80013f2:	ebad 0d03 	sub.w	sp, sp, r3
 80013f6:	46e8      	mov	r8, sp
    float32_t samples_HSR[buffer_size];
 80013f8:	ebad 0d03 	sub.w	sp, sp, r3
 80013fc:	466e      	mov	r6, sp
    float32_t samples_HSL[buffer_size];
 80013fe:	ebad 0d03 	sub.w	sp, sp, r3
 8001402:	46eb      	mov	fp, sp
    float32_t samples_PR[buffer_size];
 8001404:	ee08 9a10 	vmov	s16, r9
    float32_t samples_PL[buffer_size];
 8001408:	ee08 8a90 	vmov	s17, r8
    float32_t samples_HSR[buffer_size];
 800140c:	ee09 6a10 	vmov	s18, r6
    float32_t samples_HSL[buffer_size];
 8001410:	ee09 ba90 	vmov	s19, fp
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001414:	b3b8      	cbz	r0, 8001486 <single_measurement+0xb6>
 8001416:	4682      	mov	sl, r0
 8001418:	2400      	movs	r4, #0
        samples_PR[i] = (float32_t)samples[i * MEAS_get_num_of_chan()];
 800141a:	f000 fecf 	bl	80021bc <MEAS_get_num_of_chan>
 800141e:	fb04 f000 	mul.w	r0, r4, r0
 8001422:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001426:	edd3 7a00 	vldr	s15, [r3]
 800142a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800142e:	ece9 7a01 	vstmia	r9!, {s15}
        samples_PL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 1];
 8001432:	f000 fec3 	bl	80021bc <MEAS_get_num_of_chan>
 8001436:	fb04 f000 	mul.w	r0, r4, r0
 800143a:	3001      	adds	r0, #1
 800143c:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001440:	edd3 7a00 	vldr	s15, [r3]
 8001444:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001448:	ece8 7a01 	vstmia	r8!, {s15}
        samples_HSR[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 2];
 800144c:	f000 feb6 	bl	80021bc <MEAS_get_num_of_chan>
 8001450:	fb04 f000 	mul.w	r0, r4, r0
 8001454:	3002      	adds	r0, #2
 8001456:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800145a:	edd3 7a00 	vldr	s15, [r3]
 800145e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001462:	ece6 7a01 	vstmia	r6!, {s15}
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001466:	f000 fea9 	bl	80021bc <MEAS_get_num_of_chan>
 800146a:	fb04 f000 	mul.w	r0, r4, r0
 800146e:	3003      	adds	r0, #3
 8001470:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001474:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001478:	3401      	adds	r4, #1
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 800147a:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < buffer_size; i++) {
 800147e:	45a2      	cmp	sl, r4
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001480:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001484:	d1c9      	bne.n	800141a <single_measurement+0x4a>
    fft = calculate_freq_and_signalstrength(samples_PR);
 8001486:	ee18 1a10 	vmov	r1, s16
 800148a:	f107 001c 	add.w	r0, r7, #28
 800148e:	f7ff fd21 	bl	8000ed4 <calculate_freq_and_signalstrength>
 8001492:	ed97 0a08 	vldr	s0, [r7, #32]
 8001496:	ed97 8a07 	vldr	s16, [r7, #28]
 800149a:	ed87 0a00 	vstr	s0, [r7]
    fft = calculate_freq_and_signalstrength(samples_PL);
 800149e:	ee18 1a90 	vmov	r1, s17
 80014a2:	f107 001c 	add.w	r0, r7, #28
 80014a6:	f7ff fd15 	bl	8000ed4 <calculate_freq_and_signalstrength>
 80014aa:	edd7 0a08 	vldr	s1, [r7, #32]
 80014ae:	edd7 8a07 	vldr	s17, [r7, #28]
 80014b2:	edc7 0a01 	vstr	s1, [r7, #4]
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80014b6:	ee19 1a10 	vmov	r1, s18
 80014ba:	f107 001c 	add.w	r0, r7, #28
 80014be:	f7ff fd09 	bl	8000ed4 <calculate_freq_and_signalstrength>
    fft = calculate_freq_and_signalstrength(samples_HSL);
 80014c2:	f107 001c 	add.w	r0, r7, #28
 80014c6:	ee19 1a90 	vmov	r1, s19
 80014ca:	f7ff fd03 	bl	8000ed4 <calculate_freq_and_signalstrength>
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 80014ce:	edd7 0a01 	vldr	s1, [r7, #4]
 80014d2:	ed97 0a00 	vldr	s0, [r7]
 80014d6:	f7ff ff07 	bl	80012e8 <calculate_distance_and_angle>
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 80014da:	ee38 8a28 	vadd.f32	s16, s16, s17
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 80014de:	eeb0 0a41 	vmov.f32	s0, s2
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 80014e2:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
}
 80014e6:	eef0 0a61 	vmov.f32	s1, s3
 80014ea:	ee28 1a01 	vmul.f32	s2, s16, s2
 80014ee:	eddf 1a04 	vldr	s3, [pc, #16]	; 8001500 <single_measurement+0x130>
 80014f2:	374c      	adds	r7, #76	; 0x4c
 80014f4:	46bd      	mov	sp, r7
 80014f6:	ecbd 8b04 	vpop	{d8-d9}
 80014fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80014fe:	bf00      	nop
 8001500:	00000000 	.word	0x00000000

08001504 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001504:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001506:	2064      	movs	r0, #100	; 0x64
 8001508:	f00e fa12 	bl	800f930 <osDelay>
  for(;;)
 800150c:	e7fb      	b.n	8001506 <StartDefaultTask+0x2>
 800150e:	bf00      	nop

08001510 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001510:	b580      	push	{r7, lr}
 8001512:	4c19      	ldr	r4, [pc, #100]	; (8001578 <StartTimeoutTask+0x68>)
 8001514:	f8df 8074 	ldr.w	r8, [pc, #116]	; 800158c <StartTimeoutTask+0x7c>
 8001518:	4e18      	ldr	r6, [pc, #96]	; (800157c <StartTimeoutTask+0x6c>)
 800151a:	4d19      	ldr	r5, [pc, #100]	; (8001580 <StartTimeoutTask+0x70>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800151c:	4f19      	ldr	r7, [pc, #100]	; (8001584 <StartTimeoutTask+0x74>)
	  sleep_timeout_value--;
 800151e:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001520:	4915      	ldr	r1, [pc, #84]	; (8001578 <StartTimeoutTask+0x68>)
 8001522:	2300      	movs	r3, #0
 8001524:	461a      	mov	r2, r3
	  sleep_timeout_value--;
 8001526:	f100 3cff 	add.w	ip, r0, #4294967295
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800152a:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 800152e:	f8c4 c000 	str.w	ip, [r4]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001532:	f00e faf9 	bl	800fb28 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 8001536:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 8001538:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800153a:	4638      	mov	r0, r7
 800153c:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 800153e:	b912      	cbnz	r2, 8001546 <StartTimeoutTask+0x36>
		  sleep_timeout_value = 60;
 8001540:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001542:	f00a fc1f 	bl	800bd84 <HAL_GPIO_WritePin>
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001546:	4810      	ldr	r0, [pc, #64]	; (8001588 <StartTimeoutTask+0x78>)
 8001548:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800154c:	f00a fc1e 	bl	800bd8c <HAL_GPIO_TogglePin>

	  //pwm test
	  static uint8_t prescaler = 140;
	  HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 8001550:	2100      	movs	r1, #0
 8001552:	4630      	mov	r0, r6
 8001554:	f00d fd14 	bl	800ef80 <HAL_TIM_PWM_Stop>
	  htim14.Init.Prescaler = prescaler-1;
 8001558:	782b      	ldrb	r3, [r5, #0]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 800155a:	2100      	movs	r1, #0
	  htim14.Init.Prescaler = prescaler-1;
 800155c:	3b01      	subs	r3, #1
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 800155e:	4630      	mov	r0, r6
	  htim14.Init.Prescaler = prescaler-1;
 8001560:	6073      	str	r3, [r6, #4]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8001562:	f00d fc9d 	bl	800eea0 <HAL_TIM_PWM_Start>
	  prescaler = prescaler + 10;
 8001566:	782b      	ldrb	r3, [r5, #0]
	  if(prescaler > 420)
	  {
		  prescaler = 140;
	  }

	  osDelay(1000);
 8001568:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
	  prescaler = prescaler + 10;
 800156c:	330a      	adds	r3, #10
 800156e:	702b      	strb	r3, [r5, #0]
	  osDelay(1000);
 8001570:	f00e f9de 	bl	800f930 <osDelay>
  {
 8001574:	e7d3      	b.n	800151e <StartTimeoutTask+0xe>
 8001576:	bf00      	nop
 8001578:	20000010 	.word	0x20000010
 800157c:	20000374 	.word	0x20000374
 8001580:	2000000c 	.word	0x2000000c
 8001584:	40021000 	.word	0x40021000
 8001588:	40021800 	.word	0x40021800
 800158c:	200001d8 	.word	0x200001d8

08001590 <gyro_disable>:
{
 8001590:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001592:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001594:	4e1f      	ldr	r6, [pc, #124]	; (8001614 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001596:	4d20      	ldr	r5, [pc, #128]	; (8001618 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001598:	4c20      	ldr	r4, [pc, #128]	; (800161c <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800159a:	2700      	movs	r7, #0
 800159c:	9700      	str	r7, [sp, #0]
 800159e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015a0:	f043 0304 	orr.w	r3, r3, #4
 80015a4:	6333      	str	r3, [r6, #48]	; 0x30
 80015a6:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015a8:	f003 0304 	and.w	r3, r3, #4
 80015ac:	9300      	str	r3, [sp, #0]
 80015ae:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80015b0:	682b      	ldr	r3, [r5, #0]
 80015b2:	f023 030c 	bic.w	r3, r3, #12
 80015b6:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 80015b8:	682b      	ldr	r3, [r5, #0]
 80015ba:	f043 0304 	orr.w	r3, r3, #4
 80015be:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 80015c0:	69ab      	ldr	r3, [r5, #24]
 80015c2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80015c6:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 80015c8:	200a      	movs	r0, #10
 80015ca:	f00a f805 	bl	800b5d8 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 80015ce:	682b      	ldr	r3, [r5, #0]
 80015d0:	f043 030c 	orr.w	r3, r3, #12
 80015d4:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80015d6:	9701      	str	r7, [sp, #4]
 80015d8:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015da:	f043 0320 	orr.w	r3, r3, #32
 80015de:	6333      	str	r3, [r6, #48]	; 0x30
 80015e0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015e2:	f003 0320 	and.w	r3, r3, #32
 80015e6:	9301      	str	r3, [sp, #4]
 80015e8:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80015ea:	68a3      	ldr	r3, [r4, #8]
 80015ec:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80015f0:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 80015f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80015f4:	f023 030f 	bic.w	r3, r3, #15
 80015f8:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 80015fa:	68e3      	ldr	r3, [r4, #12]
 80015fc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001600:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001602:	200a      	movs	r0, #10
 8001604:	f009 ffe8 	bl	800b5d8 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001608:	6823      	ldr	r3, [r4, #0]
 800160a:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 800160e:	6023      	str	r3, [r4, #0]
}
 8001610:	b003      	add	sp, #12
 8001612:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001614:	40023800 	.word	0x40023800
 8001618:	40020800 	.word	0x40020800
 800161c:	40021400 	.word	0x40021400

08001620 <setCalibrationFlashValues>:
{
 8001620:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001624:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8001626:	009b      	lsls	r3, r3, #2
 8001628:	3307      	adds	r3, #7
 800162a:	466d      	mov	r5, sp
 800162c:	08db      	lsrs	r3, r3, #3
 800162e:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8001632:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8001634:	469d      	mov	sp, r3
 8001636:	46e8      	mov	r8, sp
{
 8001638:	4615      	mov	r5, r2
 800163a:	460e      	mov	r6, r1
 800163c:	4681      	mov	r9, r0
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 800163e:	4622      	mov	r2, r4
 8001640:	4641      	mov	r1, r8
 8001642:	f7ff fc3b 	bl	8000ebc <Flash_Read_Data>
	Rx_Data[index] = value;
 8001646:	f848 6025 	str.w	r6, [r8, r5, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 800164a:	4622      	mov	r2, r4
 800164c:	4641      	mov	r1, r8
 800164e:	4648      	mov	r0, r9
 8001650:	f7ff fbfa 	bl	8000e48 <Flash_Write_Data>
	Calibration_Data[index] = value;
 8001654:	4b02      	ldr	r3, [pc, #8]	; (8001660 <setCalibrationFlashValues+0x40>)
 8001656:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
}
 800165a:	46bd      	mov	sp, r7
 800165c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001660:	200001a0 	.word	0x200001a0

08001664 <SystemClock_Config>:
{
 8001664:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001666:	2400      	movs	r4, #0
{
 8001668:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800166a:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800166e:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001672:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001676:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800167a:	4a1e      	ldr	r2, [pc, #120]	; (80016f4 <SystemClock_Config+0x90>)
 800167c:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800167e:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001680:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001682:	4b1d      	ldr	r3, [pc, #116]	; (80016f8 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001684:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001688:	6411      	str	r1, [r2, #64]	; 0x40
 800168a:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800168c:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001690:	9201      	str	r2, [sp, #4]
 8001692:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001694:	9402      	str	r4, [sp, #8]
 8001696:	681a      	ldr	r2, [r3, #0]
 8001698:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800169c:	601a      	str	r2, [r3, #0]
 800169e:	681b      	ldr	r3, [r3, #0]
 80016a0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80016a4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80016a6:	2201      	movs	r2, #1
 80016a8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016ac:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80016b0:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80016b2:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80016b4:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016b6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80016ba:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016be:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80016c2:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80016c4:	2202      	movs	r2, #2
 80016c6:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016c8:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80016ca:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80016ce:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016d0:	f00c f996 	bl	800da00 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80016d4:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80016d6:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80016da:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80016de:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80016e2:	a803      	add	r0, sp, #12
 80016e4:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80016e6:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80016ea:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80016ec:	f00c fba0 	bl	800de30 <HAL_RCC_ClockConfig>
}
 80016f0:	b015      	add	sp, #84	; 0x54
 80016f2:	bd30      	pop	{r4, r5, pc}
 80016f4:	40023800 	.word	0x40023800
 80016f8:	40007000 	.word	0x40007000

080016fc <main>:
{
 80016fc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001700:	2400      	movs	r4, #0
{
 8001702:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001704:	f009 ff3c 	bl	800b580 <HAL_Init>
  SystemClock_Config();
 8001708:	f7ff ffac 	bl	8001664 <SystemClock_Config>
  gyro_disable();
 800170c:	f7ff ff40 	bl	8001590 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001710:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001714:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001718:	4bc3      	ldr	r3, [pc, #780]	; (8001a28 <main+0x32c>)
 800171a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800171c:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800171e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001720:	48c2      	ldr	r0, [pc, #776]	; (8001a2c <main+0x330>)
  hi2c3.Instance = I2C3;
 8001722:	f8df a33c 	ldr.w	sl, [pc, #828]	; 8001a60 <main+0x364>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001726:	f041 0110 	orr.w	r1, r1, #16
 800172a:	6319      	str	r1, [r3, #48]	; 0x30
 800172c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800172e:	f001 0110 	and.w	r1, r1, #16
 8001732:	9100      	str	r1, [sp, #0]
 8001734:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001736:	9401      	str	r4, [sp, #4]
 8001738:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800173a:	f041 0120 	orr.w	r1, r1, #32
 800173e:	6319      	str	r1, [r3, #48]	; 0x30
 8001740:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001742:	f001 0120 	and.w	r1, r1, #32
 8001746:	9101      	str	r1, [sp, #4]
 8001748:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800174a:	9402      	str	r4, [sp, #8]
 800174c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800174e:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001752:	6319      	str	r1, [r3, #48]	; 0x30
 8001754:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001756:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800175a:	9102      	str	r1, [sp, #8]
 800175c:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800175e:	9403      	str	r4, [sp, #12]
 8001760:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001762:	f041 0104 	orr.w	r1, r1, #4
 8001766:	6319      	str	r1, [r3, #48]	; 0x30
 8001768:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800176a:	f001 0104 	and.w	r1, r1, #4
 800176e:	9103      	str	r1, [sp, #12]
 8001770:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001772:	9404      	str	r4, [sp, #16]
 8001774:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001776:	f041 0101 	orr.w	r1, r1, #1
 800177a:	6319      	str	r1, [r3, #48]	; 0x30
 800177c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800177e:	f001 0101 	and.w	r1, r1, #1
 8001782:	9104      	str	r1, [sp, #16]
 8001784:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001786:	9405      	str	r4, [sp, #20]
 8001788:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800178a:	f041 0102 	orr.w	r1, r1, #2
 800178e:	6319      	str	r1, [r3, #48]	; 0x30
 8001790:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001792:	f001 0102 	and.w	r1, r1, #2
 8001796:	9105      	str	r1, [sp, #20]
 8001798:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800179a:	9406      	str	r4, [sp, #24]
 800179c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800179e:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80017a2:	6319      	str	r1, [r3, #48]	; 0x30
 80017a4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017a6:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80017aa:	9106      	str	r1, [sp, #24]
 80017ac:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017ae:	9407      	str	r4, [sp, #28]
 80017b0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017b2:	f041 0108 	orr.w	r1, r1, #8
 80017b6:	6319      	str	r1, [r3, #48]	; 0x30
 80017b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017ba:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017be:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017c0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017c2:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017c4:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017c6:	f00a fadd 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80017ca:	4898      	ldr	r0, [pc, #608]	; (8001a2c <main+0x330>)
 80017cc:	2120      	movs	r1, #32
 80017ce:	2201      	movs	r2, #1
 80017d0:	f00a fad8 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 80017d4:	4896      	ldr	r0, [pc, #600]	; (8001a30 <main+0x334>)
 80017d6:	4622      	mov	r2, r4
 80017d8:	2114      	movs	r1, #20
 80017da:	f00a fad3 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80017de:	4895      	ldr	r0, [pc, #596]	; (8001a34 <main+0x338>)
 80017e0:	4622      	mov	r2, r4
 80017e2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80017e6:	f00a facd 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80017ea:	4893      	ldr	r0, [pc, #588]	; (8001a38 <main+0x33c>)
 80017ec:	4622      	mov	r2, r4
 80017ee:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80017f2:	f00a fac7 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 80017f6:	4891      	ldr	r0, [pc, #580]	; (8001a3c <main+0x340>)
 80017f8:	4622      	mov	r2, r4
 80017fa:	2104      	movs	r1, #4
 80017fc:	f00a fac2 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001800:	2201      	movs	r2, #1
 8001802:	488e      	ldr	r0, [pc, #568]	; (8001a3c <main+0x340>)
 8001804:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001808:	f00a fabc 	bl	800bd84 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800180c:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001810:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001814:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001816:	4885      	ldr	r0, [pc, #532]	; (8001a2c <main+0x330>)
 8001818:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800181a:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800181c:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001820:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001824:	f00a f96a 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001828:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800182c:	487f      	ldr	r0, [pc, #508]	; (8001a2c <main+0x330>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800182e:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001830:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001832:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001834:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001836:	f00a f961 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800183a:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800183c:	487b      	ldr	r0, [pc, #492]	; (8001a2c <main+0x330>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800183e:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001840:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001842:	2502      	movs	r5, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001844:	2704      	movs	r7, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001846:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800184a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800184c:	f00a f956 	bl	800bafc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001850:	4877      	ldr	r0, [pc, #476]	; (8001a30 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001852:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001854:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8001856:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800185a:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800185e:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001860:	f00a f94c 	bl	800bafc <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001864:	4872      	ldr	r0, [pc, #456]	; (8001a30 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001866:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001868:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800186a:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 800186e:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001872:	f00a f943 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001876:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800187a:	486e      	ldr	r0, [pc, #440]	; (8001a34 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800187c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800187e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001880:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001884:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001886:	f00a f939 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800188a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800188e:	486a      	ldr	r0, [pc, #424]	; (8001a38 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001890:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001892:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001894:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001898:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800189a:	f00a f92f 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 800189e:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018a2:	4866      	ldr	r0, [pc, #408]	; (8001a3c <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80018a4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018a6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018a8:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018ac:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018ae:	f00a f925 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80018b2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018b6:	4862      	ldr	r0, [pc, #392]	; (8001a40 <main+0x344>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80018b8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018ba:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80018bc:	230f      	movs	r3, #15
 80018be:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018c0:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018c4:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018c6:	f00a f919 	bl	800bafc <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80018ca:	2105      	movs	r1, #5
 80018cc:	4622      	mov	r2, r4
 80018ce:	2009      	movs	r0, #9
 80018d0:	f009 fea6 	bl	800b620 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80018d4:	2009      	movs	r0, #9
 80018d6:	f009 fee1 	bl	800b69c <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 80018da:	485a      	ldr	r0, [pc, #360]	; (8001a44 <main+0x348>)
 80018dc:	4a5a      	ldr	r2, [pc, #360]	; (8001a48 <main+0x34c>)
 80018de:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80018e0:	f009 feea 	bl	800b6b8 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80018e4:	4959      	ldr	r1, [pc, #356]	; (8001a4c <main+0x350>)
 80018e6:	4a5a      	ldr	r2, [pc, #360]	; (8001a50 <main+0x354>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80018e8:	4650      	mov	r0, sl
  hi2c3.Init.ClockSpeed = 100000;
 80018ea:	e9ca 1200 	strd	r1, r2, [sl]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80018ee:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80018f2:	f8ca 2010 	str.w	r2, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80018f6:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.OwnAddress2 = 0;
 80018fa:	e9ca 4405 	strd	r4, r4, [sl, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018fe:	e9ca 4407 	strd	r4, r4, [sl, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001902:	f00a fca5 	bl	800c250 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001906:	4649      	mov	r1, r9
 8001908:	4650      	mov	r0, sl
 800190a:	f00b fe6d 	bl	800d5e8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800190e:	4621      	mov	r1, r4
 8001910:	4650      	mov	r0, sl
 8001912:	f00b fe89 	bl	800d628 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001916:	f8df c14c 	ldr.w	ip, [pc, #332]	; 8001a64 <main+0x368>
  hspi5.Instance = SPI5;
 800191a:	484e      	ldr	r0, [pc, #312]	; (8001a54 <main+0x358>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800191c:	f8df a148 	ldr.w	sl, [pc, #328]	; 8001a68 <main+0x36c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001920:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001922:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001926:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800192a:	f44f 7e00 	mov.w	lr, #512	; 0x200
 800192e:	2218      	movs	r2, #24
 8001930:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001934:	220a      	movs	r2, #10
 8001936:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001938:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800193c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001940:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001944:	f00c fd62 	bl	800e40c <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001948:	2207      	movs	r2, #7
 800194a:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 800194c:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800194e:	4a42      	ldr	r2, [pc, #264]	; (8001a58 <main+0x35c>)
 8001950:	f8ca 2000 	str.w	r2, [sl]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001954:	2040      	movs	r0, #64	; 0x40
 8001956:	f44f 72c0 	mov.w	r2, #384	; 0x180
 800195a:	e9ca 0205 	strd	r0, r2, [sl, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800195e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001962:	f8ca 2020 	str.w	r2, [sl, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001966:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001968:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800196c:	4650      	mov	r0, sl
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800196e:	e9ca 8401 	strd	r8, r4, [sl, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001972:	e9ca 7903 	strd	r7, r9, [sl, #12]
  SdramTiming.RPDelay = 2;
 8001976:	e9cd b513 	strd	fp, r5, [sp, #76]	; 0x4c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800197a:	f8ca 2028 	str.w	r2, [sl, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800197e:	f8ca 401c 	str.w	r4, [sl, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001982:	f8ca 4024 	str.w	r4, [sl, #36]	; 0x24
  SdramTiming.LoadToActiveDelay = 2;
 8001986:	950f      	str	r5, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
 8001988:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 800198a:	9515      	str	r5, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800198c:	f00c fc4c 	bl	800e228 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001990:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001994:	a90b      	add	r1, sp, #44	; 0x2c
 8001996:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001998:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800199c:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80019a0:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019a2:	f00c fc63 	bl	800e26c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80019a6:	4640      	mov	r0, r8
 80019a8:	f009 fe16 	bl	800b5d8 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019b0:	a90b      	add	r1, sp, #44	; 0x2c
 80019b2:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019b4:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80019b8:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019bc:	f00c fc56 	bl	800e26c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019c4:	a90b      	add	r1, sp, #44	; 0x2c
 80019c6:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019c8:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80019cc:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019d0:	f00c fc4c 	bl	800e26c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80019d4:	f44f 720c 	mov.w	r2, #560	; 0x230
 80019d8:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80019da:	9908      	ldr	r1, [sp, #32]
 80019dc:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019de:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019e2:	a90b      	add	r1, sp, #44	; 0x2c
 80019e4:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019e6:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 80019ea:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019ee:	f00c fc3d 	bl	800e26c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80019f2:	4650      	mov	r0, sl
 80019f4:	f240 516a 	movw	r1, #1386	; 0x56a
 80019f8:	f00c fc56 	bl	800e2a8 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 80019fc:	f8df a06c 	ldr.w	sl, [pc, #108]	; 8001a6c <main+0x370>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001a00:	2234      	movs	r2, #52	; 0x34
 8001a02:	4621      	mov	r1, r4
 8001a04:	a80f      	add	r0, sp, #60	; 0x3c
 8001a06:	f02c f9b0 	bl	802dd6a <memset>
  hltdc.Instance = LTDC;
 8001a0a:	4a14      	ldr	r2, [pc, #80]	; (8001a5c <main+0x360>)
 8001a0c:	f8ca 2000 	str.w	r2, [sl]
  hltdc.Init.HorizontalSync = 9;
 8001a10:	2209      	movs	r2, #9
 8001a12:	f8ca 2014 	str.w	r2, [sl, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001a16:	221d      	movs	r2, #29
 8001a18:	f8ca 201c 	str.w	r2, [sl, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001a1c:	f240 130d 	movw	r3, #269	; 0x10d
 8001a20:	f240 1243 	movw	r2, #323	; 0x143
 8001a24:	e024      	b.n	8001a70 <main+0x374>
 8001a26:	bf00      	nop
 8001a28:	40023800 	.word	0x40023800
 8001a2c:	40021000 	.word	0x40021000
 8001a30:	40020800 	.word	0x40020800
 8001a34:	40020400 	.word	0x40020400
 8001a38:	40020c00 	.word	0x40020c00
 8001a3c:	40021800 	.word	0x40021800
 8001a40:	40020000 	.word	0x40020000
 8001a44:	200001e4 	.word	0x200001e4
 8001a48:	40023000 	.word	0x40023000
 8001a4c:	40005c00 	.word	0x40005c00
 8001a50:	000186a0 	.word	0x000186a0
 8001a54:	2000031c 	.word	0x2000031c
 8001a58:	a0000140 	.word	0xa0000140
 8001a5c:	40016800 	.word	0x40016800
 8001a60:	200001ec 	.word	0x200001ec
 8001a64:	40015000 	.word	0x40015000
 8001a68:	200002e8 	.word	0x200002e8
 8001a6c:	20000240 	.word	0x20000240
 8001a70:	e9ca 3209 	strd	r3, r2, [sl, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001a74:	f240 1117 	movw	r1, #279	; 0x117
 8001a78:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8001a7c:	f8aa 4034 	strh.w	r4, [sl, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a80:	4650      	mov	r0, sl
  hltdc.Init.TotalHeigh = 327;
 8001a82:	e9ca 120b 	strd	r1, r2, [sl, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001a86:	f8ca 8018 	str.w	r8, [sl, #24]
  hltdc.Init.AccumulatedVBP = 3;
 8001a8a:	f8ca b020 	str.w	fp, [sl, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001a8e:	e9ca 4401 	strd	r4, r4, [sl, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001a92:	e9ca 4403 	strd	r4, r4, [sl, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001a96:	f88a 4036 	strb.w	r4, [sl, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a9a:	f00b fde9 	bl	800d670 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001a9e:	23f0      	movs	r3, #240	; 0xf0
 8001aa0:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001aa2:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8001aa4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001aa8:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001aaa:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001aac:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001aae:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001ab2:	4622      	mov	r2, r4
 8001ab4:	a90f      	add	r1, sp, #60	; 0x3c
 8001ab6:	4650      	mov	r0, sl
  pLayerCfg.Alpha = 255;
 8001ab8:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001aba:	2305      	movs	r3, #5
 8001abc:	e9cd e316 	strd	lr, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001ac0:	f8df 826c 	ldr.w	r8, [pc, #620]	; 8001d30 <main+0x634>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001ac4:	9513      	str	r5, [sp, #76]	; 0x4c
  pLayerCfg.WindowX0 = 0;
 8001ac6:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001ac8:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001aca:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001acc:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001ace:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001ad2:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001ad6:	f00b fea1 	bl	800d81c <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001ada:	4b82      	ldr	r3, [pc, #520]	; (8001ce4 <main+0x5e8>)
 8001adc:	f8c8 3000 	str.w	r3, [r8]
  LcdDrv->Init();
 8001ae0:	681b      	ldr	r3, [r3, #0]
  htim2.Instance = TIM2;
 8001ae2:	f8df a250 	ldr.w	sl, [pc, #592]	; 8001d34 <main+0x638>
  LcdDrv->Init();
 8001ae6:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001ae8:	f8d8 3000 	ldr.w	r3, [r8]
  htim3.Instance = TIM3;
 8001aec:	f8df 8248 	ldr.w	r8, [pc, #584]	; 8001d38 <main+0x63c>
  LcdDrv->DisplayOff();
 8001af0:	68db      	ldr	r3, [r3, #12]
 8001af2:	4798      	blx	r3
  htim3.Instance = TIM3;
 8001af4:	4b7c      	ldr	r3, [pc, #496]	; (8001ce8 <main+0x5ec>)
 8001af6:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001afa:	4640      	mov	r0, r8
  htim3.Init.Period = 65535;
 8001afc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001b00:	f8c8 300c 	str.w	r3, [r8, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b04:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b08:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b0c:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b10:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001b14:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001b18:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001b1c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b20:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001b24:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001b26:	f00d f861 	bl	800ebec <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b2a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001b2e:	a90b      	add	r1, sp, #44	; 0x2c
 8001b30:	4640      	mov	r0, r8
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b32:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001b34:	f00d fb84 	bl	800f240 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001b38:	a90f      	add	r1, sp, #60	; 0x3c
 8001b3a:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001b3c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001b40:	f00d fc2e 	bl	800f3a0 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001b44:	a909      	add	r1, sp, #36	; 0x24
 8001b46:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b48:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001b4c:	f00d fd66 	bl	800f61c <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Period = 100-1;
 8001b50:	2363      	movs	r3, #99	; 0x63
  htim2.Instance = TIM2;
 8001b52:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 168-1;
 8001b56:	21a7      	movs	r1, #167	; 0xa7
  htim2.Init.Period = 100-1;
 8001b58:	f8ca 300c 	str.w	r3, [sl, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001b5c:	4650      	mov	r0, sl
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b5e:	2380      	movs	r3, #128	; 0x80
  htim2.Instance = TIM2;
 8001b60:	f8ca b000 	str.w	fp, [sl]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b64:	f8ca 3018 	str.w	r3, [sl, #24]
  htim2.Init.Prescaler = 168-1;
 8001b68:	f8ca 1004 	str.w	r1, [sl, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b6c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001b70:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b74:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b78:	f8ca 4008 	str.w	r4, [sl, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b7c:	f8ca 4010 	str.w	r4, [sl, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001b80:	f00d f834 	bl	800ebec <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b84:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001b88:	a90f      	add	r1, sp, #60	; 0x3c
 8001b8a:	4650      	mov	r0, sl
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b8c:	930f      	str	r3, [sp, #60]	; 0x3c
  TIM2->CCR1 = 50;
 8001b8e:	f04f 0832 	mov.w	r8, #50	; 0x32
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001b92:	f00d fb55 	bl	800f240 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b96:	a90b      	add	r1, sp, #44	; 0x2c
 8001b98:	4650      	mov	r0, sl
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b9a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b9e:	f00d fd3d 	bl	800f61c <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 50;
 8001ba2:	f8cb 8034 	str.w	r8, [fp, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001ba6:	4621      	mov	r1, r4
 8001ba8:	4650      	mov	r0, sl
 8001baa:	f00d f979 	bl	800eea0 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001bae:	4639      	mov	r1, r7
  TIM2->CCR2 = 50;
 8001bb0:	f8cb 8038 	str.w	r8, [fp, #56]	; 0x38
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001bb4:	4650      	mov	r0, sl
 8001bb6:	f00d f973 	bl	800eea0 <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 8001bba:	4f4c      	ldr	r7, [pc, #304]	; (8001cec <main+0x5f0>)
  TIM2->CCR3 = 50;
 8001bbc:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001bc0:	4631      	mov	r1, r6
 8001bc2:	4650      	mov	r0, sl
 8001bc4:	f00d f96c 	bl	800eea0 <HAL_TIM_PWM_Start>
  htim14.Init.Prescaler = 210-1;
 8001bc8:	4949      	ldr	r1, [pc, #292]	; (8001cf0 <main+0x5f4>)
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001bca:	60bc      	str	r4, [r7, #8]
  htim14.Init.Period = 100-1;
 8001bcc:	2363      	movs	r3, #99	; 0x63
  htim14.Init.Prescaler = 210-1;
 8001bce:	22d1      	movs	r2, #209	; 0xd1
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001bd0:	e9c7 3403 	strd	r3, r4, [r7, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001bd4:	4638      	mov	r0, r7
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001bd6:	2380      	movs	r3, #128	; 0x80
 8001bd8:	61bb      	str	r3, [r7, #24]
  htim14.Init.Prescaler = 210-1;
 8001bda:	e9c7 1200 	strd	r1, r2, [r7]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001bde:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001be2:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001be6:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001bea:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001bec:	f00c fffe 	bl	800ebec <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001bf0:	4638      	mov	r0, r7
 8001bf2:	f00d f8c7 	bl	800ed84 <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001bf6:	f04f 0b60 	mov.w	fp, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001bfa:	4622      	mov	r2, r4
 8001bfc:	a90f      	add	r1, sp, #60	; 0x3c
 8001bfe:	4638      	mov	r0, r7
  htim9.Instance = TIM9;
 8001c00:	4e3c      	ldr	r6, [pc, #240]	; (8001cf4 <main+0x5f8>)
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001c02:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c04:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c08:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c0c:	f00d fa08 	bl	800f020 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 8001c10:	4638      	mov	r0, r7
 8001c12:	f000 fcfd 	bl	8002610 <HAL_TIM_MspPostInit>
  htim9.Init.Period = 100-1;
 8001c16:	2363      	movs	r3, #99	; 0x63
  htim9.Init.Prescaler = 84-1;
 8001c18:	4f37      	ldr	r7, [pc, #220]	; (8001cf8 <main+0x5fc>)
  htim9.Init.Period = 100-1;
 8001c1a:	60f3      	str	r3, [r6, #12]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001c1c:	2380      	movs	r3, #128	; 0x80
 8001c1e:	61b3      	str	r3, [r6, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001c20:	4630      	mov	r0, r6
  htim9.Init.Prescaler = 84-1;
 8001c22:	2353      	movs	r3, #83	; 0x53
 8001c24:	e9c6 7300 	strd	r7, r3, [r6]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001c28:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001c2c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001c30:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001c34:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001c38:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001c3c:	9415      	str	r4, [sp, #84]	; 0x54
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c3e:	60b4      	str	r4, [r6, #8]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c40:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001c42:	f00c ffd3 	bl	800ebec <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c46:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001c4a:	a90b      	add	r1, sp, #44	; 0x2c
 8001c4c:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c4e:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001c50:	f00d faf6 	bl	800f240 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 8001c54:	4630      	mov	r0, r6
 8001c56:	f00d f895 	bl	800ed84 <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c5a:	4622      	mov	r2, r4
 8001c5c:	a90f      	add	r1, sp, #60	; 0x3c
 8001c5e:	4630      	mov	r0, r6
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c60:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c64:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001c68:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c6a:	f00d f9d9 	bl	800f020 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001c6e:	4621      	mov	r1, r4
  TIM9->CCR1 = 50;
 8001c70:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001c74:	4630      	mov	r0, r6
 8001c76:	f00d f913 	bl	800eea0 <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim9);
 8001c7a:	4630      	mov	r0, r6
 8001c7c:	f000 fcc8 	bl	8002610 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001c80:	f000 fe5c 	bl	800293c <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001c84:	f000 fe58 	bl	8002938 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001c88:	f7ff fc82 	bl	8001590 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001c8c:	f000 f958 	bl	8001f40 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001c90:	f000 f98a 	bl	8001fa8 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001c94:	4919      	ldr	r1, [pc, #100]	; (8001cfc <main+0x600>)
 8001c96:	481a      	ldr	r0, [pc, #104]	; (8001d00 <main+0x604>)
 8001c98:	220c      	movs	r2, #12
 8001c9a:	f7ff f90f 	bl	8000ebc <Flash_Read_Data>
  osKernelInitialize();
 8001c9e:	f00d fdcf 	bl	800f840 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001ca2:	4629      	mov	r1, r5
 8001ca4:	4a17      	ldr	r2, [pc, #92]	; (8001d04 <main+0x608>)
 8001ca6:	4648      	mov	r0, r9
 8001ca8:	f00d ff04 	bl	800fab4 <osMessageQueueNew>
 8001cac:	4b16      	ldr	r3, [pc, #88]	; (8001d08 <main+0x60c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cae:	4a17      	ldr	r2, [pc, #92]	; (8001d0c <main+0x610>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001cb0:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cb2:	4621      	mov	r1, r4
 8001cb4:	4816      	ldr	r0, [pc, #88]	; (8001d10 <main+0x614>)
 8001cb6:	f00d fdef 	bl	800f898 <osThreadNew>
 8001cba:	4b16      	ldr	r3, [pc, #88]	; (8001d14 <main+0x618>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cbc:	4a16      	ldr	r2, [pc, #88]	; (8001d18 <main+0x61c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cbe:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cc0:	4621      	mov	r1, r4
 8001cc2:	4816      	ldr	r0, [pc, #88]	; (8001d1c <main+0x620>)
 8001cc4:	f00d fde8 	bl	800f898 <osThreadNew>
 8001cc8:	4b15      	ldr	r3, [pc, #84]	; (8001d20 <main+0x624>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001cca:	4a16      	ldr	r2, [pc, #88]	; (8001d24 <main+0x628>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001ccc:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001cce:	4621      	mov	r1, r4
 8001cd0:	4815      	ldr	r0, [pc, #84]	; (8001d28 <main+0x62c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cd2:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001cd4:	f00d fde0 	bl	800f898 <osThreadNew>
 8001cd8:	4b14      	ldr	r3, [pc, #80]	; (8001d2c <main+0x630>)
 8001cda:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001cdc:	f00d fdc2 	bl	800f864 <osKernelStart>
  while (1)
 8001ce0:	e7fe      	b.n	8001ce0 <main+0x5e4>
 8001ce2:	bf00      	nop
 8001ce4:	2000001c 	.word	0x2000001c
 8001ce8:	40000400 	.word	0x40000400
 8001cec:	20000374 	.word	0x20000374
 8001cf0:	40002000 	.word	0x40002000
 8001cf4:	2000044c 	.word	0x2000044c
 8001cf8:	40014000 	.word	0x40014000
 8001cfc:	200001a0 	.word	0x200001a0
 8001d00:	081e0000 	.word	0x081e0000
 8001d04:	0802eb34 	.word	0x0802eb34
 8001d08:	200001d8 	.word	0x200001d8
 8001d0c:	0802eb70 	.word	0x0802eb70
 8001d10:	08001505 	.word	0x08001505
 8001d14:	200001e0 	.word	0x200001e0
 8001d18:	0802eb10 	.word	0x0802eb10
 8001d1c:	0800294d 	.word	0x0800294d
 8001d20:	200001d0 	.word	0x200001d0
 8001d24:	0802eb4c 	.word	0x0802eb4c
 8001d28:	08001511 	.word	0x08001511
 8001d2c:	200001dc 	.word	0x200001dc
 8001d30:	200001d4 	.word	0x200001d4
 8001d34:	200003bc 	.word	0x200003bc
 8001d38:	20000404 	.word	0x20000404

08001d3c <IOE_Init>:
 8001d3c:	4770      	bx	lr
 8001d3e:	bf00      	nop

08001d40 <IOE_ITConfig>:
 8001d40:	4770      	bx	lr
 8001d42:	bf00      	nop

08001d44 <IOE_Write>:
{
 8001d44:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d46:	4c09      	ldr	r4, [pc, #36]	; (8001d6c <IOE_Write+0x28>)
{
 8001d48:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d4a:	6824      	ldr	r4, [r4, #0]
 8001d4c:	9402      	str	r4, [sp, #8]
{
 8001d4e:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d50:	2301      	movs	r3, #1
 8001d52:	f88d 4017 	strb.w	r4, [sp, #23]
 8001d56:	f10d 0417 	add.w	r4, sp, #23
 8001d5a:	460a      	mov	r2, r1
 8001d5c:	9301      	str	r3, [sp, #4]
 8001d5e:	4601      	mov	r1, r0
 8001d60:	9400      	str	r4, [sp, #0]
 8001d62:	4803      	ldr	r0, [pc, #12]	; (8001d70 <IOE_Write+0x2c>)
 8001d64:	f00a fb3c 	bl	800c3e0 <HAL_I2C_Mem_Write>
}
 8001d68:	b006      	add	sp, #24
 8001d6a:	bd10      	pop	{r4, pc}
 8001d6c:	20000004 	.word	0x20000004
 8001d70:	200001ec 	.word	0x200001ec

08001d74 <IOE_Read>:
{
 8001d74:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d76:	4b0b      	ldr	r3, [pc, #44]	; (8001da4 <IOE_Read+0x30>)
{
 8001d78:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	9302      	str	r3, [sp, #8]
{
 8001d7e:	4684      	mov	ip, r0
 8001d80:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d82:	2301      	movs	r3, #1
 8001d84:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001d88:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d8a:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001d8e:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d92:	4661      	mov	r1, ip
 8001d94:	4804      	ldr	r0, [pc, #16]	; (8001da8 <IOE_Read+0x34>)
 8001d96:	f00a fc15 	bl	800c5c4 <HAL_I2C_Mem_Read>
}
 8001d9a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001d9e:	b007      	add	sp, #28
 8001da0:	f85d fb04 	ldr.w	pc, [sp], #4
 8001da4:	20000004 	.word	0x20000004
 8001da8:	200001ec 	.word	0x200001ec

08001dac <IOE_ReadMultiple>:
{
 8001dac:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001dae:	4c09      	ldr	r4, [pc, #36]	; (8001dd4 <IOE_ReadMultiple+0x28>)
{
 8001db0:	b084      	sub	sp, #16
 8001db2:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001db4:	6820      	ldr	r0, [r4, #0]
 8001db6:	9002      	str	r0, [sp, #8]
 8001db8:	e9cd 2300 	strd	r2, r3, [sp]
 8001dbc:	4806      	ldr	r0, [pc, #24]	; (8001dd8 <IOE_ReadMultiple+0x2c>)
 8001dbe:	460a      	mov	r2, r1
 8001dc0:	2301      	movs	r3, #1
 8001dc2:	4661      	mov	r1, ip
 8001dc4:	f00a fbfe 	bl	800c5c4 <HAL_I2C_Mem_Read>
}
 8001dc8:	3800      	subs	r0, #0
 8001dca:	bf18      	it	ne
 8001dcc:	2001      	movne	r0, #1
 8001dce:	b004      	add	sp, #16
 8001dd0:	bd10      	pop	{r4, pc}
 8001dd2:	bf00      	nop
 8001dd4:	20000004 	.word	0x20000004
 8001dd8:	200001ec 	.word	0x200001ec

08001ddc <IOE_Delay>:
 8001ddc:	f009 bbfc 	b.w	800b5d8 <HAL_Delay>

08001de0 <LCD_IO_Init>:
{
 8001de0:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001de2:	4806      	ldr	r0, [pc, #24]	; (8001dfc <LCD_IO_Init+0x1c>)
 8001de4:	2200      	movs	r2, #0
 8001de6:	2104      	movs	r1, #4
 8001de8:	f009 ffcc 	bl	800bd84 <HAL_GPIO_WritePin>
}
 8001dec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001df0:	4802      	ldr	r0, [pc, #8]	; (8001dfc <LCD_IO_Init+0x1c>)
 8001df2:	2201      	movs	r2, #1
 8001df4:	2104      	movs	r1, #4
 8001df6:	f009 bfc5 	b.w	800bd84 <HAL_GPIO_WritePin>
 8001dfa:	bf00      	nop
 8001dfc:	40020800 	.word	0x40020800

08001e00 <LCD_IO_WriteData>:
{
 8001e00:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e02:	4d10      	ldr	r5, [pc, #64]	; (8001e44 <LCD_IO_WriteData+0x44>)
{
 8001e04:	b083      	sub	sp, #12
 8001e06:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e08:	2201      	movs	r2, #1
 8001e0a:	480f      	ldr	r0, [pc, #60]	; (8001e48 <LCD_IO_WriteData+0x48>)
 8001e0c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e10:	f009 ffb8 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e14:	4628      	mov	r0, r5
 8001e16:	2200      	movs	r2, #0
 8001e18:	2104      	movs	r1, #4
 8001e1a:	f009 ffb3 	bl	800bd84 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e1e:	4b0b      	ldr	r3, [pc, #44]	; (8001e4c <LCD_IO_WriteData+0x4c>)
 8001e20:	480b      	ldr	r0, [pc, #44]	; (8001e50 <LCD_IO_WriteData+0x50>)
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001e28:	f10d 0106 	add.w	r1, sp, #6
 8001e2c:	2201      	movs	r2, #1
 8001e2e:	f00c fb4f 	bl	800e4d0 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e32:	2201      	movs	r2, #1
 8001e34:	2104      	movs	r1, #4
 8001e36:	4628      	mov	r0, r5
}
 8001e38:	b003      	add	sp, #12
 8001e3a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e3e:	f009 bfa1 	b.w	800bd84 <HAL_GPIO_WritePin>
 8001e42:	bf00      	nop
 8001e44:	40020800 	.word	0x40020800
 8001e48:	40020c00 	.word	0x40020c00
 8001e4c:	20000008 	.word	0x20000008
 8001e50:	2000031c 	.word	0x2000031c

08001e54 <LCD_IO_WriteReg>:
{
 8001e54:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e56:	4d10      	ldr	r5, [pc, #64]	; (8001e98 <LCD_IO_WriteReg+0x44>)
{
 8001e58:	b083      	sub	sp, #12
 8001e5a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e5c:	2200      	movs	r2, #0
 8001e5e:	480f      	ldr	r0, [pc, #60]	; (8001e9c <LCD_IO_WriteReg+0x48>)
 8001e60:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e64:	f009 ff8e 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e68:	4628      	mov	r0, r5
 8001e6a:	2200      	movs	r2, #0
 8001e6c:	2104      	movs	r1, #4
 8001e6e:	f009 ff89 	bl	800bd84 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e72:	4b0b      	ldr	r3, [pc, #44]	; (8001ea0 <LCD_IO_WriteReg+0x4c>)
 8001e74:	480b      	ldr	r0, [pc, #44]	; (8001ea4 <LCD_IO_WriteReg+0x50>)
 8001e76:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001e78:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e7c:	f10d 0106 	add.w	r1, sp, #6
 8001e80:	2201      	movs	r2, #1
 8001e82:	f00c fb25 	bl	800e4d0 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e86:	2201      	movs	r2, #1
 8001e88:	2104      	movs	r1, #4
 8001e8a:	4628      	mov	r0, r5
}
 8001e8c:	b003      	add	sp, #12
 8001e8e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e92:	f009 bf77 	b.w	800bd84 <HAL_GPIO_WritePin>
 8001e96:	bf00      	nop
 8001e98:	40020800 	.word	0x40020800
 8001e9c:	40020c00 	.word	0x40020c00
 8001ea0:	20000008 	.word	0x20000008
 8001ea4:	2000031c 	.word	0x2000031c

08001ea8 <LCD_IO_ReadData>:
{
 8001ea8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001eac:	4e19      	ldr	r6, [pc, #100]	; (8001f14 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001eae:	4f1a      	ldr	r7, [pc, #104]	; (8001f18 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001eb0:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001f1c <LCD_IO_ReadData+0x74>
 8001eb4:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001f20 <LCD_IO_ReadData+0x78>
{
 8001eb8:	b083      	sub	sp, #12
 8001eba:	460c      	mov	r4, r1
 8001ebc:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ebe:	2200      	movs	r2, #0
 8001ec0:	4630      	mov	r0, r6
 8001ec2:	2104      	movs	r1, #4
 8001ec4:	f009 ff5e 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ec8:	4638      	mov	r0, r7
 8001eca:	2200      	movs	r2, #0
 8001ecc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ed0:	f009 ff58 	bl	800bd84 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ed4:	f8d9 3000 	ldr.w	r3, [r9]
 8001ed8:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001edc:	a901      	add	r1, sp, #4
 8001ede:	2201      	movs	r2, #1
 8001ee0:	4640      	mov	r0, r8
 8001ee2:	f00c faf5 	bl	800e4d0 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001ee6:	f8d9 3000 	ldr.w	r3, [r9]
 8001eea:	4622      	mov	r2, r4
 8001eec:	a901      	add	r1, sp, #4
 8001eee:	4640      	mov	r0, r8
 8001ef0:	f00c fd96 	bl	800ea20 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ef4:	4638      	mov	r0, r7
 8001ef6:	2201      	movs	r2, #1
 8001ef8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001efc:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001efe:	f009 ff41 	bl	800bd84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001f02:	4630      	mov	r0, r6
 8001f04:	2201      	movs	r2, #1
 8001f06:	2104      	movs	r1, #4
 8001f08:	f009 ff3c 	bl	800bd84 <HAL_GPIO_WritePin>
}
 8001f0c:	4620      	mov	r0, r4
 8001f0e:	b003      	add	sp, #12
 8001f10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001f14:	40020800 	.word	0x40020800
 8001f18:	40020c00 	.word	0x40020c00
 8001f1c:	20000008 	.word	0x20000008
 8001f20:	2000031c 	.word	0x2000031c

08001f24 <LCD_Delay>:
  HAL_Delay(Delay);
 8001f24:	f009 bb58 	b.w	800b5d8 <HAL_Delay>

08001f28 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001f28:	4b03      	ldr	r3, [pc, #12]	; (8001f38 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001f2a:	6802      	ldr	r2, [r0, #0]
 8001f2c:	429a      	cmp	r2, r3
 8001f2e:	d000      	beq.n	8001f32 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001f30:	4770      	bx	lr
    HAL_IncTick();
 8001f32:	f009 bb3f 	b.w	800b5b4 <HAL_IncTick>
 8001f36:	bf00      	nop
 8001f38:	40001000 	.word	0x40001000

08001f3c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001f3c:	4770      	bx	lr
 8001f3e:	bf00      	nop

08001f40 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001f40:	b410      	push	{r4}
 8001f42:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001f44:	4b15      	ldr	r3, [pc, #84]	; (8001f9c <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001f46:	4916      	ldr	r1, [pc, #88]	; (8001fa0 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001f48:	2400      	movs	r4, #0
 8001f4a:	9400      	str	r4, [sp, #0]
 8001f4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f4e:	f042 0220 	orr.w	r2, r2, #32
 8001f52:	631a      	str	r2, [r3, #48]	; 0x30
 8001f54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f56:	f002 0220 	and.w	r2, r2, #32
 8001f5a:	9200      	str	r2, [sp, #0]
 8001f5c:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001f5e:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001f60:	4a10      	ldr	r2, [pc, #64]	; (8001fa4 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001f62:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001f66:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001f68:	6808      	ldr	r0, [r1, #0]
 8001f6a:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001f6e:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001f70:	9401      	str	r4, [sp, #4]
 8001f72:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f74:	f041 0104 	orr.w	r1, r1, #4
 8001f78:	6319      	str	r1, [r3, #48]	; 0x30
 8001f7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f7c:	f003 0304 	and.w	r3, r3, #4
 8001f80:	9301      	str	r3, [sp, #4]
 8001f82:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001f84:	6813      	ldr	r3, [r2, #0]
 8001f86:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001f8a:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001f8c:	6813      	ldr	r3, [r2, #0]
 8001f8e:	f043 030c 	orr.w	r3, r3, #12
 8001f92:	6013      	str	r3, [r2, #0]
}
 8001f94:	b003      	add	sp, #12
 8001f96:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001f9a:	4770      	bx	lr
 8001f9c:	40023800 	.word	0x40023800
 8001fa0:	40021400 	.word	0x40021400
 8001fa4:	40020800 	.word	0x40020800

08001fa8 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001fa8:	b410      	push	{r4}
 8001faa:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001fac:	4a0e      	ldr	r2, [pc, #56]	; (8001fe8 <MEAS_timer_init+0x40>)
 8001fae:	2000      	movs	r0, #0
 8001fb0:	9001      	str	r0, [sp, #4]
 8001fb2:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001fb4:	f041 0101 	orr.w	r1, r1, #1
 8001fb8:	6411      	str	r1, [r2, #64]	; 0x40
 8001fba:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001fbc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001fc0:	f002 0201 	and.w	r2, r2, #1
 8001fc4:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001fc6:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001fca:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001fcc:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001fce:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001fd0:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001fd2:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001fd4:	4905      	ldr	r1, [pc, #20]	; (8001fec <MEAS_timer_init+0x44>)
 8001fd6:	f042 0220 	orr.w	r2, r2, #32
 8001fda:	605a      	str	r2, [r3, #4]
 8001fdc:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001fe0:	b003      	add	sp, #12
 8001fe2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001fe6:	4770      	bx	lr
 8001fe8:	40023800 	.word	0x40023800
 8001fec:	e000e100 	.word	0xe000e100

08001ff0 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001ff0:	b410      	push	{r4}
 8001ff2:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001ff4:	4a36      	ldr	r2, [pc, #216]	; (80020d0 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001ff6:	4b37      	ldr	r3, [pc, #220]	; (80020d4 <MEAS_ADC3_scan_init+0xe4>)
 8001ff8:	4c37      	ldr	r4, [pc, #220]	; (80020d8 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001ffa:	2100      	movs	r1, #0
 8001ffc:	9100      	str	r1, [sp, #0]
 8001ffe:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002000:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8002004:	6450      	str	r0, [r2, #68]	; 0x44
 8002006:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002008:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 800200c:	9000      	str	r0, [sp, #0]
 800200e:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8002010:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8002012:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8002016:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8002018:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800201a:	f040 0004 	orr.w	r0, r0, #4
 800201e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8002020:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002022:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8002026:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8002028:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800202a:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 800202e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8002030:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002032:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8002036:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8002038:	6858      	ldr	r0, [r3, #4]
 800203a:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800203e:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8002040:	6898      	ldr	r0, [r3, #8]
 8002042:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8002046:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8002048:	6898      	ldr	r0, [r3, #8]
 800204a:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 800204e:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8002050:	6898      	ldr	r0, [r3, #8]
 8002052:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8002056:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8002058:	9101      	str	r1, [sp, #4]
 800205a:	6b10      	ldr	r0, [r2, #48]	; 0x30
 800205c:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8002060:	6310      	str	r0, [r2, #48]	; 0x30
 8002062:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8002064:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8002068:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 800206a:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 800206e:	9a01      	ldr	r2, [sp, #4]
 8002070:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8002074:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002076:	f022 0201 	bic.w	r2, r2, #1
 800207a:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 800207c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800207e:	07d2      	lsls	r2, r2, #31
 8002080:	d4fc      	bmi.n	800207c <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8002082:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8002084:	4815      	ldr	r0, [pc, #84]	; (80020dc <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8002086:	4916      	ldr	r1, [pc, #88]	; (80020e0 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8002088:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800208c:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 800208e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002090:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002094:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8002096:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002098:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800209c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 800209e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80020a0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80020a4:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 80020a6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80020a8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80020ac:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 80020ae:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80020b0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80020b4:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 80020b6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80020b8:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 80020bc:	f042 0210 	orr.w	r2, r2, #16
 80020c0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80020c2:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80020c4:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80020c6:	6359      	str	r1, [r3, #52]	; 0x34
}
 80020c8:	b003      	add	sp, #12
 80020ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80020ce:	4770      	bx	lr
 80020d0:	40023800 	.word	0x40023800
 80020d4:	40012200 	.word	0x40012200
 80020d8:	e000e100 	.word	0xe000e100
 80020dc:	4001224c 	.word	0x4001224c
 80020e0:	20000494 	.word	0x20000494

080020e4 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 80020e4:	4b1b      	ldr	r3, [pc, #108]	; (8002154 <DMA2_Stream1_IRQHandler+0x70>)
 80020e6:	681a      	ldr	r2, [r3, #0]
 80020e8:	0511      	lsls	r1, r2, #20
 80020ea:	d400      	bmi.n	80020ee <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 80020ec:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020ee:	4a1a      	ldr	r2, [pc, #104]	; (8002158 <DMA2_Stream1_IRQHandler+0x74>)
 80020f0:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80020f4:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80020f8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80020fc:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002100:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8002104:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002106:	f022 0201 	bic.w	r2, r2, #1
 800210a:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800210c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800210e:	07d2      	lsls	r2, r2, #31
 8002110:	d4fc      	bmi.n	800210c <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002112:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002114:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002118:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800211c:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800211e:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002120:	490e      	ldr	r1, [pc, #56]	; (800215c <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002122:	f023 0301 	bic.w	r3, r3, #1
 8002126:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002128:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800212a:	4b0d      	ldr	r3, [pc, #52]	; (8002160 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800212c:	f020 0001 	bic.w	r0, r0, #1
 8002130:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8002132:	6888      	ldr	r0, [r1, #8]
 8002134:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8002138:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800213a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800213c:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8002140:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8002142:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002144:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8002148:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 800214a:	6813      	ldr	r3, [r2, #0]
 800214c:	f023 0301 	bic.w	r3, r3, #1
 8002150:	6013      	str	r3, [r2, #0]
}
 8002152:	4770      	bx	lr
 8002154:	40026400 	.word	0x40026400
 8002158:	e000e100 	.word	0xe000e100
 800215c:	40012200 	.word	0x40012200
 8002160:	40023800 	.word	0x40023800

08002164 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8002164:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8002166:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800216a:	2100      	movs	r1, #0
 800216c:	480f      	ldr	r0, [pc, #60]	; (80021ac <MEAS_start_measure+0x48>)
 800216e:	f02b fdfc 	bl	802dd6a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8002172:	f7ff ff3d 	bl	8001ff0 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8002176:	4a0e      	ldr	r2, [pc, #56]	; (80021b0 <MEAS_start_measure+0x4c>)
 8002178:	490e      	ldr	r1, [pc, #56]	; (80021b4 <MEAS_start_measure+0x50>)
 800217a:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800217c:	480e      	ldr	r0, [pc, #56]	; (80021b8 <MEAS_start_measure+0x54>)
 800217e:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8002182:	f043 0301 	orr.w	r3, r3, #1
 8002186:	6293      	str	r3, [r2, #40]	; 0x28
 8002188:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800218c:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800218e:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8002190:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002194:	f043 0301 	orr.w	r3, r3, #1
 8002198:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800219a:	680b      	ldr	r3, [r1, #0]
 800219c:	f043 0301 	orr.w	r3, r3, #1
 80021a0:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80021a2:	6a93      	ldr	r3, [r2, #40]	; 0x28
 80021a4:	07db      	lsls	r3, r3, #31
 80021a6:	d4fc      	bmi.n	80021a2 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 80021a8:	4800      	ldr	r0, [pc, #0]	; (80021ac <MEAS_start_measure+0x48>)
 80021aa:	bd10      	pop	{r4, pc}
 80021ac:	20000494 	.word	0x20000494
 80021b0:	40026400 	.word	0x40026400
 80021b4:	e000e100 	.word	0xe000e100
 80021b8:	40012200 	.word	0x40012200

080021bc <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 80021bc:	2004      	movs	r0, #4
 80021be:	4770      	bx	lr

080021c0 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 80021c0:	2040      	movs	r0, #64	; 0x40
 80021c2:	4770      	bx	lr

080021c4 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 80021c4:	f44f 7020 	mov.w	r0, #640	; 0x280
 80021c8:	4770      	bx	lr
 80021ca:	bf00      	nop

080021cc <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80021cc:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80021ce:	4b0e      	ldr	r3, [pc, #56]	; (8002208 <HAL_MspInit+0x3c>)
 80021d0:	2200      	movs	r2, #0
 80021d2:	9200      	str	r2, [sp, #0]
 80021d4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021d6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80021da:	6459      	str	r1, [r3, #68]	; 0x44
 80021dc:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80021de:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 80021e2:	9000      	str	r0, [sp, #0]
 80021e4:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80021e6:	9201      	str	r2, [sp, #4]
 80021e8:	6c18      	ldr	r0, [r3, #64]	; 0x40
 80021ea:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80021ee:	6418      	str	r0, [r3, #64]	; 0x40
 80021f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021f2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021f6:	9301      	str	r3, [sp, #4]
 80021f8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021fa:	210f      	movs	r1, #15
 80021fc:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002200:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002202:	f009 ba0d 	b.w	800b620 <HAL_NVIC_SetPriority>
 8002206:	bf00      	nop
 8002208:	40023800 	.word	0x40023800

0800220c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 800220c:	4b0b      	ldr	r3, [pc, #44]	; (800223c <HAL_CRC_MspInit+0x30>)
 800220e:	6802      	ldr	r2, [r0, #0]
 8002210:	429a      	cmp	r2, r3
 8002212:	d000      	beq.n	8002216 <HAL_CRC_MspInit+0xa>
 8002214:	4770      	bx	lr
{
 8002216:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002218:	2200      	movs	r2, #0
 800221a:	9201      	str	r2, [sp, #4]
 800221c:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8002220:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002224:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8002228:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800222c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800222e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002232:	9301      	str	r3, [sp, #4]
 8002234:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002236:	b002      	add	sp, #8
 8002238:	4770      	bx	lr
 800223a:	bf00      	nop
 800223c:	40023000 	.word	0x40023000

08002240 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002240:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8002244:	4b2e      	ldr	r3, [pc, #184]	; (8002300 <HAL_I2C_MspInit+0xc0>)
 8002246:	6802      	ldr	r2, [r0, #0]
{
 8002248:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800224a:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 800224c:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800224e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8002252:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8002256:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8002258:	d002      	beq.n	8002260 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800225a:	b00a      	add	sp, #40	; 0x28
 800225c:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002260:	4d28      	ldr	r5, [pc, #160]	; (8002304 <HAL_I2C_MspInit+0xc4>)
 8002262:	9401      	str	r4, [sp, #4]
 8002264:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002266:	4828      	ldr	r0, [pc, #160]	; (8002308 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002268:	f043 0304 	orr.w	r3, r3, #4
 800226c:	632b      	str	r3, [r5, #48]	; 0x30
 800226e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002270:	f003 0304 	and.w	r3, r3, #4
 8002274:	9301      	str	r3, [sp, #4]
 8002276:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002278:	9402      	str	r4, [sp, #8]
 800227a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800227c:	f043 0301 	orr.w	r3, r3, #1
 8002280:	632b      	str	r3, [r5, #48]	; 0x30
 8002282:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002284:	f003 0301 	and.w	r3, r3, #1
 8002288:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800228a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800228e:	f04f 0801 	mov.w	r8, #1
 8002292:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002296:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002298:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800229a:	2312      	movs	r3, #18
 800229c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80022a0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022a4:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022a6:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022a8:	f009 fc28 	bl	800bafc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022ac:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022ae:	f44f 7280 	mov.w	r2, #256	; 0x100
 80022b2:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022b4:	4815      	ldr	r0, [pc, #84]	; (800230c <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022b6:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022b8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80022bc:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022c0:	f009 fc1c 	bl	800bafc <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022c4:	9403      	str	r4, [sp, #12]
 80022c6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80022c8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022cc:	642b      	str	r3, [r5, #64]	; 0x40
 80022ce:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80022d0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80022d4:	4622      	mov	r2, r4
 80022d6:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022d8:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80022da:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022dc:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80022de:	f009 f99f 	bl	800b620 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 80022e2:	2048      	movs	r0, #72	; 0x48
 80022e4:	f009 f9da 	bl	800b69c <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 80022e8:	6a2b      	ldr	r3, [r5, #32]
 80022ea:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022ee:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80022f0:	6a2b      	ldr	r3, [r5, #32]
 80022f2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80022f6:	622b      	str	r3, [r5, #32]
}
 80022f8:	b00a      	add	sp, #40	; 0x28
 80022fa:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80022fe:	bf00      	nop
 8002300:	40005c00 	.word	0x40005c00
 8002304:	40023800 	.word	0x40023800
 8002308:	40020800 	.word	0x40020800
 800230c:	40020000 	.word	0x40020000

08002310 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002310:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002314:	4604      	mov	r4, r0
 8002316:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002318:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800231a:	2230      	movs	r2, #48	; 0x30
 800231c:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800231e:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8002322:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8002326:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002328:	f02b fd1f 	bl	802dd6a <memset>
  if(hltdc->Instance==LTDC)
 800232c:	4b67      	ldr	r3, [pc, #412]	; (80024cc <HAL_LTDC_MspInit+0x1bc>)
 800232e:	6822      	ldr	r2, [r4, #0]
 8002330:	429a      	cmp	r2, r3
 8002332:	d002      	beq.n	800233a <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002334:	b01a      	add	sp, #104	; 0x68
 8002336:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800233a:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800233c:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800233e:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002340:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002342:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002344:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002348:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800234a:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800234c:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800234e:	f00b fe3f 	bl	800dfd0 <HAL_RCCEx_PeriphCLKConfig>
 8002352:	2800      	cmp	r0, #0
 8002354:	f040 80b7 	bne.w	80024c6 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002358:	4b5d      	ldr	r3, [pc, #372]	; (80024d0 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800235a:	485e      	ldr	r0, [pc, #376]	; (80024d4 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 800235c:	2400      	movs	r4, #0
 800235e:	9401      	str	r4, [sp, #4]
 8002360:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002362:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002366:	645a      	str	r2, [r3, #68]	; 0x44
 8002368:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800236a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 800236e:	9201      	str	r2, [sp, #4]
 8002370:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002372:	9402      	str	r4, [sp, #8]
 8002374:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002376:	f042 0220 	orr.w	r2, r2, #32
 800237a:	631a      	str	r2, [r3, #48]	; 0x30
 800237c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800237e:	f002 0220 	and.w	r2, r2, #32
 8002382:	9202      	str	r2, [sp, #8]
 8002384:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002386:	9403      	str	r4, [sp, #12]
 8002388:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800238a:	f042 0201 	orr.w	r2, r2, #1
 800238e:	631a      	str	r2, [r3, #48]	; 0x30
 8002390:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002392:	f002 0201 	and.w	r2, r2, #1
 8002396:	9203      	str	r2, [sp, #12]
 8002398:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800239a:	9404      	str	r4, [sp, #16]
 800239c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800239e:	f042 0202 	orr.w	r2, r2, #2
 80023a2:	631a      	str	r2, [r3, #48]	; 0x30
 80023a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023a6:	f002 0202 	and.w	r2, r2, #2
 80023aa:	9204      	str	r2, [sp, #16]
 80023ac:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80023ae:	9405      	str	r4, [sp, #20]
 80023b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023b2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80023b6:	631a      	str	r2, [r3, #48]	; 0x30
 80023b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023ba:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80023be:	9205      	str	r2, [sp, #20]
 80023c0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023c2:	9406      	str	r4, [sp, #24]
 80023c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023c6:	f042 0204 	orr.w	r2, r2, #4
 80023ca:	631a      	str	r2, [r3, #48]	; 0x30
 80023cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023ce:	f002 0204 	and.w	r2, r2, #4
 80023d2:	9206      	str	r2, [sp, #24]
 80023d4:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023d6:	9407      	str	r4, [sp, #28]
 80023d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023da:	f042 0208 	orr.w	r2, r2, #8
 80023de:	631a      	str	r2, [r3, #48]	; 0x30
 80023e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023e2:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80023e6:	2600      	movs	r6, #0
 80023e8:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023ea:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023ec:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023ee:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80023f0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80023f4:	2302      	movs	r3, #2
 80023f6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023fa:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023fe:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002400:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002402:	f009 fb7b 	bl	800bafc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002406:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002408:	f641 0258 	movw	r2, #6232	; 0x1858
 800240c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800240e:	4832      	ldr	r0, [pc, #200]	; (80024d8 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002410:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002412:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002416:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800241a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800241e:	f009 fb6d 	bl	800bafc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002422:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002424:	2203      	movs	r2, #3
 8002426:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002428:	482c      	ldr	r0, [pc, #176]	; (80024dc <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800242a:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800242e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002432:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002436:	f009 fb61 	bl	800bafc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800243a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800243c:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002440:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002442:	4826      	ldr	r0, [pc, #152]	; (80024dc <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002444:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002446:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800244a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800244e:	f009 fb55 	bl	800bafc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002452:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002454:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002458:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800245a:	4821      	ldr	r0, [pc, #132]	; (80024e0 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800245c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800245e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002462:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002466:	f009 fb49 	bl	800bafc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800246a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800246c:	22c0      	movs	r2, #192	; 0xc0
 800246e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002470:	481c      	ldr	r0, [pc, #112]	; (80024e4 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002472:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002474:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002478:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800247c:	f009 fb3e 	bl	800bafc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002480:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002482:	2208      	movs	r2, #8
 8002484:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002486:	4818      	ldr	r0, [pc, #96]	; (80024e8 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002488:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800248a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800248e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002492:	f009 fb33 	bl	800bafc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002496:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002498:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800249a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800249e:	4810      	ldr	r0, [pc, #64]	; (80024e0 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80024a0:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80024a4:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80024a8:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80024ac:	f009 fb26 	bl	800bafc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80024b0:	4622      	mov	r2, r4
 80024b2:	2105      	movs	r1, #5
 80024b4:	2058      	movs	r0, #88	; 0x58
 80024b6:	f009 f8b3 	bl	800b620 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80024ba:	2058      	movs	r0, #88	; 0x58
 80024bc:	f009 f8ee 	bl	800b69c <HAL_NVIC_EnableIRQ>
}
 80024c0:	b01a      	add	sp, #104	; 0x68
 80024c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80024c6:	f7ff fd39 	bl	8001f3c <Error_Handler>
 80024ca:	e745      	b.n	8002358 <HAL_LTDC_MspInit+0x48>
 80024cc:	40016800 	.word	0x40016800
 80024d0:	40023800 	.word	0x40023800
 80024d4:	40021400 	.word	0x40021400
 80024d8:	40020000 	.word	0x40020000
 80024dc:	40020400 	.word	0x40020400
 80024e0:	40021800 	.word	0x40021800
 80024e4:	40020800 	.word	0x40020800
 80024e8:	40020c00 	.word	0x40020c00
 80024ec:	00000000 	.word	0x00000000

080024f0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024f0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 80024f2:	4a1b      	ldr	r2, [pc, #108]	; (8002560 <HAL_SPI_MspInit+0x70>)
 80024f4:	6801      	ldr	r1, [r0, #0]
{
 80024f6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024f8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 80024fa:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024fc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002500:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002504:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8002506:	d001      	beq.n	800250c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002508:	b008      	add	sp, #32
 800250a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800250c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002510:	9300      	str	r3, [sp, #0]
 8002512:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002514:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002518:	6450      	str	r0, [r2, #68]	; 0x44
 800251a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800251c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002520:	9000      	str	r0, [sp, #0]
 8002522:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002524:	9301      	str	r3, [sp, #4]
 8002526:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002528:	480e      	ldr	r0, [pc, #56]	; (8002564 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800252a:	f043 0320 	orr.w	r3, r3, #32
 800252e:	6313      	str	r3, [r2, #48]	; 0x30
 8002530:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002532:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002558 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002536:	f003 0320 	and.w	r3, r3, #32
 800253a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800253c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800253e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002540:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002542:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002546:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800254a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800254c:	f009 fad6 	bl	800bafc <HAL_GPIO_Init>
}
 8002550:	b008      	add	sp, #32
 8002552:	bd10      	pop	{r4, pc}
 8002554:	f3af 8000 	nop.w
 8002558:	00000380 	.word	0x00000380
 800255c:	00000002 	.word	0x00000002
 8002560:	40015000 	.word	0x40015000
 8002564:	40021400 	.word	0x40021400

08002568 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 8002568:	6803      	ldr	r3, [r0, #0]
 800256a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 800256e:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM2)
 8002570:	d018      	beq.n	80025a4 <HAL_TIM_Base_MspInit+0x3c>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8002572:	4a22      	ldr	r2, [pc, #136]	; (80025fc <HAL_TIM_Base_MspInit+0x94>)
 8002574:	4293      	cmp	r3, r2
 8002576:	d007      	beq.n	8002588 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM9)
 8002578:	4a21      	ldr	r2, [pc, #132]	; (8002600 <HAL_TIM_Base_MspInit+0x98>)
 800257a:	4293      	cmp	r3, r2
 800257c:	d021      	beq.n	80025c2 <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM9_CLK_ENABLE();
  /* USER CODE BEGIN TIM9_MspInit 1 */

  /* USER CODE END TIM9_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 800257e:	4a21      	ldr	r2, [pc, #132]	; (8002604 <HAL_TIM_Base_MspInit+0x9c>)
 8002580:	4293      	cmp	r3, r2
 8002582:	d02c      	beq.n	80025de <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 8002584:	b004      	add	sp, #16
 8002586:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002588:	4b1f      	ldr	r3, [pc, #124]	; (8002608 <HAL_TIM_Base_MspInit+0xa0>)
 800258a:	2200      	movs	r2, #0
 800258c:	9201      	str	r2, [sp, #4]
 800258e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002590:	f042 0202 	orr.w	r2, r2, #2
 8002594:	641a      	str	r2, [r3, #64]	; 0x40
 8002596:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002598:	f003 0302 	and.w	r3, r3, #2
 800259c:	9301      	str	r3, [sp, #4]
 800259e:	9b01      	ldr	r3, [sp, #4]
}
 80025a0:	b004      	add	sp, #16
 80025a2:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 80025a4:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80025a8:	2200      	movs	r2, #0
 80025aa:	9200      	str	r2, [sp, #0]
 80025ac:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80025ae:	f042 0201 	orr.w	r2, r2, #1
 80025b2:	641a      	str	r2, [r3, #64]	; 0x40
 80025b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025b6:	f003 0301 	and.w	r3, r3, #1
 80025ba:	9300      	str	r3, [sp, #0]
 80025bc:	9b00      	ldr	r3, [sp, #0]
}
 80025be:	b004      	add	sp, #16
 80025c0:	4770      	bx	lr
    __HAL_RCC_TIM9_CLK_ENABLE();
 80025c2:	4b11      	ldr	r3, [pc, #68]	; (8002608 <HAL_TIM_Base_MspInit+0xa0>)
 80025c4:	2200      	movs	r2, #0
 80025c6:	9202      	str	r2, [sp, #8]
 80025c8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80025ca:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80025ce:	645a      	str	r2, [r3, #68]	; 0x44
 80025d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80025d2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80025d6:	9302      	str	r3, [sp, #8]
 80025d8:	9b02      	ldr	r3, [sp, #8]
}
 80025da:	b004      	add	sp, #16
 80025dc:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 80025de:	4b0a      	ldr	r3, [pc, #40]	; (8002608 <HAL_TIM_Base_MspInit+0xa0>)
 80025e0:	2200      	movs	r2, #0
 80025e2:	9203      	str	r2, [sp, #12]
 80025e4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80025e6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80025ea:	641a      	str	r2, [r3, #64]	; 0x40
 80025ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80025f2:	9303      	str	r3, [sp, #12]
 80025f4:	9b03      	ldr	r3, [sp, #12]
}
 80025f6:	b004      	add	sp, #16
 80025f8:	4770      	bx	lr
 80025fa:	bf00      	nop
 80025fc:	40000400 	.word	0x40000400
 8002600:	40014000 	.word	0x40014000
 8002604:	40002000 	.word	0x40002000
 8002608:	40023800 	.word	0x40023800
 800260c:	00000000 	.word	0x00000000

08002610 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002610:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM9)
 8002612:	6802      	ldr	r2, [r0, #0]
 8002614:	4924      	ldr	r1, [pc, #144]	; (80026a8 <HAL_TIM_MspPostInit+0x98>)
{
 8002616:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002618:	2300      	movs	r3, #0
  if(htim->Instance==TIM9)
 800261a:	428a      	cmp	r2, r1
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800261c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002620:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002624:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM9)
 8002626:	d005      	beq.n	8002634 <HAL_TIM_MspPostInit+0x24>

  /* USER CODE BEGIN TIM9_MspPostInit 1 */

  /* USER CODE END TIM9_MspPostInit 1 */
  }
  else if(htim->Instance==TIM14)
 8002628:	4920      	ldr	r1, [pc, #128]	; (80026ac <HAL_TIM_MspPostInit+0x9c>)
 800262a:	428a      	cmp	r2, r1
 800262c:	d01a      	beq.n	8002664 <HAL_TIM_MspPostInit+0x54>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 800262e:	b009      	add	sp, #36	; 0x24
 8002630:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002634:	4a1e      	ldr	r2, [pc, #120]	; (80026b0 <HAL_TIM_MspPostInit+0xa0>)
 8002636:	9300      	str	r3, [sp, #0]
 8002638:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800263a:	481e      	ldr	r0, [pc, #120]	; (80026b4 <HAL_TIM_MspPostInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800263c:	f043 0301 	orr.w	r3, r3, #1
 8002640:	6313      	str	r3, [r2, #48]	; 0x30
 8002642:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002644:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8002698 <HAL_TIM_MspPostInit+0x88>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002648:	f003 0301 	and.w	r3, r3, #1
 800264c:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800264e:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8002650:	2303      	movs	r3, #3
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002652:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002656:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8002658:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800265a:	f009 fa4f 	bl	800bafc <HAL_GPIO_Init>
}
 800265e:	b009      	add	sp, #36	; 0x24
 8002660:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002664:	4a12      	ldr	r2, [pc, #72]	; (80026b0 <HAL_TIM_MspPostInit+0xa0>)
 8002666:	9301      	str	r3, [sp, #4]
 8002668:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800266a:	f043 0301 	orr.w	r3, r3, #1
 800266e:	6313      	str	r3, [r2, #48]	; 0x30
 8002670:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 8002672:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 80026a0 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002676:	f003 0301 	and.w	r3, r3, #1
 800267a:	9301      	str	r3, [sp, #4]
 800267c:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 800267e:	480d      	ldr	r0, [pc, #52]	; (80026b4 <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002680:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8002682:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8002684:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 8002686:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800268a:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 800268c:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 800268e:	f009 fa35 	bl	800bafc <HAL_GPIO_Init>
}
 8002692:	b009      	add	sp, #36	; 0x24
 8002694:	f85d fb04 	ldr.w	pc, [sp], #4
 8002698:	00000004 	.word	0x00000004
 800269c:	00000002 	.word	0x00000002
 80026a0:	00000080 	.word	0x00000080
 80026a4:	00000002 	.word	0x00000002
 80026a8:	40014000 	.word	0x40014000
 80026ac:	40002000 	.word	0x40002000
 80026b0:	40023800 	.word	0x40023800
 80026b4:	40020000 	.word	0x40020000

080026b8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80026b8:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 80026ba:	4b2b      	ldr	r3, [pc, #172]	; (8002768 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80026bc:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 80026be:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80026c0:	2200      	movs	r2, #0
 80026c2:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 80026c4:	2c00      	cmp	r4, #0
 80026c6:	d14c      	bne.n	8002762 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 80026c8:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 80026ca:	4a28      	ldr	r2, [pc, #160]	; (800276c <HAL_SDRAM_MspInit+0xb4>)
 80026cc:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 80026ce:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 80026d0:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026d2:	4827      	ldr	r0, [pc, #156]	; (8002770 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80026d4:	433b      	orrs	r3, r7
 80026d6:	6393      	str	r3, [r2, #56]	; 0x38
 80026d8:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80026da:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026dc:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026de:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80026e0:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 80026e4:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026e6:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80026e8:	2302      	movs	r3, #2
 80026ea:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026ee:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80026f2:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026f4:	f009 fa02 	bl	800bafc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026f8:	481e      	ldr	r0, [pc, #120]	; (8002774 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80026fa:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026fc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026fe:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002700:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002704:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002708:	f009 f9f8 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800270c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002710:	4819      	ldr	r0, [pc, #100]	; (8002778 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002712:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002714:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002716:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800271a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800271e:	f009 f9ed 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002722:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002726:	4815      	ldr	r0, [pc, #84]	; (800277c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002728:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800272a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800272c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002730:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002734:	f009 f9e2 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002738:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800273c:	4810      	ldr	r0, [pc, #64]	; (8002780 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800273e:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002740:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002742:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002746:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800274a:	f009 f9d7 	bl	800bafc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800274e:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002750:	480c      	ldr	r0, [pc, #48]	; (8002784 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002752:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002754:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002756:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800275a:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800275c:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800275e:	f009 f9cd 	bl	800bafc <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002762:	b009      	add	sp, #36	; 0x24
 8002764:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002766:	bf00      	nop
 8002768:	20000894 	.word	0x20000894
 800276c:	40023800 	.word	0x40023800
 8002770:	40021400 	.word	0x40021400
 8002774:	40020800 	.word	0x40020800
 8002778:	40021800 	.word	0x40021800
 800277c:	40021000 	.word	0x40021000
 8002780:	40020c00 	.word	0x40020c00
 8002784:	40020400 	.word	0x40020400

08002788 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002788:	b570      	push	{r4, r5, r6, lr}
 800278a:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800278c:	4b23      	ldr	r3, [pc, #140]	; (800281c <HAL_InitTick+0x94>)
 800278e:	2200      	movs	r2, #0
 8002790:	9202      	str	r2, [sp, #8]
 8002792:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002794:	f042 0210 	orr.w	r2, r2, #16
 8002798:	641a      	str	r2, [r3, #64]	; 0x40
 800279a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800279c:	f003 0310 	and.w	r3, r3, #16
 80027a0:	9302      	str	r3, [sp, #8]
{
 80027a2:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80027a4:	a901      	add	r1, sp, #4
 80027a6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80027a8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80027aa:	f00b fbef 	bl	800df8c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80027ae:	9b06      	ldr	r3, [sp, #24]
 80027b0:	b9d3      	cbnz	r3, 80027e8 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80027b2:	f00b fbdb 	bl	800df6c <HAL_RCC_GetPCLK1Freq>
 80027b6:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80027b8:	4a19      	ldr	r2, [pc, #100]	; (8002820 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80027ba:	4c1a      	ldr	r4, [pc, #104]	; (8002824 <HAL_InitTick+0x9c>)
 80027bc:	491a      	ldr	r1, [pc, #104]	; (8002828 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80027be:	fba2 2303 	umull	r2, r3, r2, r3
 80027c2:	0c9b      	lsrs	r3, r3, #18
 80027c4:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80027c6:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80027c8:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80027cc:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80027ce:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80027d2:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027d4:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80027d6:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80027d8:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80027da:	f00c fa07 	bl	800ebec <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80027de:	4606      	mov	r6, r0
 80027e0:	b130      	cbz	r0, 80027f0 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80027e2:	4630      	mov	r0, r6
 80027e4:	b008      	add	sp, #32
 80027e6:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80027e8:	f00b fbc0 	bl	800df6c <HAL_RCC_GetPCLK1Freq>
 80027ec:	0043      	lsls	r3, r0, #1
 80027ee:	e7e3      	b.n	80027b8 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80027f0:	4620      	mov	r0, r4
 80027f2:	f00c fa89 	bl	800ed08 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80027f6:	4606      	mov	r6, r0
 80027f8:	2800      	cmp	r0, #0
 80027fa:	d1f2      	bne.n	80027e2 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80027fc:	2036      	movs	r0, #54	; 0x36
 80027fe:	f008 ff4d 	bl	800b69c <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002802:	2d0f      	cmp	r5, #15
 8002804:	d901      	bls.n	800280a <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8002806:	2601      	movs	r6, #1
 8002808:	e7eb      	b.n	80027e2 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800280a:	4632      	mov	r2, r6
 800280c:	4629      	mov	r1, r5
 800280e:	2036      	movs	r0, #54	; 0x36
 8002810:	f008 ff06 	bl	800b620 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002814:	4b05      	ldr	r3, [pc, #20]	; (800282c <HAL_InitTick+0xa4>)
 8002816:	601d      	str	r5, [r3, #0]
 8002818:	e7e3      	b.n	80027e2 <HAL_InitTick+0x5a>
 800281a:	bf00      	nop
 800281c:	40023800 	.word	0x40023800
 8002820:	431bde83 	.word	0x431bde83
 8002824:	20000898 	.word	0x20000898
 8002828:	40001000 	.word	0x40001000
 800282c:	20000084 	.word	0x20000084

08002830 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002830:	4770      	bx	lr
 8002832:	bf00      	nop

08002834 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002834:	e7fe      	b.n	8002834 <HardFault_Handler>
 8002836:	bf00      	nop

08002838 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002838:	e7fe      	b.n	8002838 <MemManage_Handler>
 800283a:	bf00      	nop

0800283c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800283c:	e7fe      	b.n	800283c <BusFault_Handler>
 800283e:	bf00      	nop

08002840 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002840:	e7fe      	b.n	8002840 <UsageFault_Handler>
 8002842:	bf00      	nop

08002844 <DebugMon_Handler>:
 8002844:	4770      	bx	lr
 8002846:	bf00      	nop

08002848 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002848:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 800284a:	20c8      	movs	r0, #200	; 0xc8
 800284c:	f008 fec4 	bl	800b5d8 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002850:	4804      	ldr	r0, [pc, #16]	; (8002864 <EXTI3_IRQHandler+0x1c>)
 8002852:	2200      	movs	r2, #0
 8002854:	2120      	movs	r1, #32
 8002856:	f009 fa95 	bl	800bd84 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800285a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 800285e:	2008      	movs	r0, #8
 8002860:	f009 baa0 	b.w	800bda4 <HAL_GPIO_EXTI_IRQHandler>
 8002864:	40021000 	.word	0x40021000

08002868 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002868:	4801      	ldr	r0, [pc, #4]	; (8002870 <TIM6_DAC_IRQHandler+0x8>)
 800286a:	f00c be2d 	b.w	800f4c8 <HAL_TIM_IRQHandler>
 800286e:	bf00      	nop
 8002870:	20000898 	.word	0x20000898

08002874 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002874:	4801      	ldr	r0, [pc, #4]	; (800287c <I2C3_EV_IRQHandler+0x8>)
 8002876:	f00a b9f5 	b.w	800cc64 <HAL_I2C_EV_IRQHandler>
 800287a:	bf00      	nop
 800287c:	200001ec 	.word	0x200001ec

08002880 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002880:	4801      	ldr	r0, [pc, #4]	; (8002888 <LTDC_IRQHandler+0x8>)
 8002882:	f00a bf69 	b.w	800d758 <HAL_LTDC_IRQHandler>
 8002886:	bf00      	nop
 8002888:	20000240 	.word	0x20000240

0800288c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800288c:	2001      	movs	r0, #1
 800288e:	4770      	bx	lr

08002890 <_kill>:

int _kill(int pid, int sig)
{
 8002890:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002892:	f02b fb63 	bl	802df5c <__errno>
 8002896:	2316      	movs	r3, #22
 8002898:	6003      	str	r3, [r0, #0]
	return -1;
}
 800289a:	f04f 30ff 	mov.w	r0, #4294967295
 800289e:	bd08      	pop	{r3, pc}

080028a0 <_exit>:

void _exit (int status)
{
 80028a0:	b508      	push	{r3, lr}
	errno = EINVAL;
 80028a2:	f02b fb5b 	bl	802df5c <__errno>
 80028a6:	2316      	movs	r3, #22
 80028a8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80028aa:	e7fe      	b.n	80028aa <_exit+0xa>

080028ac <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80028ac:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028ae:	1e16      	subs	r6, r2, #0
 80028b0:	dd07      	ble.n	80028c2 <_read+0x16>
 80028b2:	460c      	mov	r4, r1
 80028b4:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80028b6:	f3af 8000 	nop.w
 80028ba:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028be:	42a5      	cmp	r5, r4
 80028c0:	d1f9      	bne.n	80028b6 <_read+0xa>
	}

return len;
}
 80028c2:	4630      	mov	r0, r6
 80028c4:	bd70      	pop	{r4, r5, r6, pc}
 80028c6:	bf00      	nop

080028c8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80028c8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028ca:	1e16      	subs	r6, r2, #0
 80028cc:	dd07      	ble.n	80028de <_write+0x16>
 80028ce:	460c      	mov	r4, r1
 80028d0:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80028d2:	f814 0b01 	ldrb.w	r0, [r4], #1
 80028d6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028da:	42ac      	cmp	r4, r5
 80028dc:	d1f9      	bne.n	80028d2 <_write+0xa>
	}
	return len;
}
 80028de:	4630      	mov	r0, r6
 80028e0:	bd70      	pop	{r4, r5, r6, pc}
 80028e2:	bf00      	nop

080028e4 <_close>:

int _close(int file)
{
	return -1;
}
 80028e4:	f04f 30ff 	mov.w	r0, #4294967295
 80028e8:	4770      	bx	lr
 80028ea:	bf00      	nop

080028ec <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80028ec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80028f0:	604b      	str	r3, [r1, #4]
	return 0;
}
 80028f2:	2000      	movs	r0, #0
 80028f4:	4770      	bx	lr
 80028f6:	bf00      	nop

080028f8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80028f8:	2001      	movs	r0, #1
 80028fa:	4770      	bx	lr

080028fc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80028fc:	2000      	movs	r0, #0
 80028fe:	4770      	bx	lr

08002900 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002900:	4a0b      	ldr	r2, [pc, #44]	; (8002930 <_sbrk+0x30>)
{
 8002902:	b508      	push	{r3, lr}
 8002904:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002906:	6810      	ldr	r0, [r2, #0]
 8002908:	b128      	cbz	r0, 8002916 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 800290a:	4403      	add	r3, r0
 800290c:	4669      	mov	r1, sp
 800290e:	428b      	cmp	r3, r1
 8002910:	d807      	bhi.n	8002922 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002912:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002914:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002916:	4807      	ldr	r0, [pc, #28]	; (8002934 <_sbrk+0x34>)
 8002918:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800291a:	4403      	add	r3, r0
 800291c:	4669      	mov	r1, sp
 800291e:	428b      	cmp	r3, r1
 8002920:	d9f7      	bls.n	8002912 <_sbrk+0x12>
		errno = ENOMEM;
 8002922:	f02b fb1b 	bl	802df5c <__errno>
 8002926:	230c      	movs	r3, #12
 8002928:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800292a:	f04f 30ff 	mov.w	r0, #4294967295
}
 800292e:	bd08      	pop	{r3, pc}
 8002930:	200008e0 	.word	0x200008e0
 8002934:	20014478 	.word	0x20014478

08002938 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8002938:	4770      	bx	lr
 800293a:	bf00      	nop

0800293c <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800293c:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800293e:	f000 fbab 	bl	8003098 <touchgfx_components_init>
  touchgfx_init();
}
 8002942:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8002946:	f000 bb33 	b.w	8002fb0 <touchgfx_init>
 800294a:	bf00      	nop

0800294c <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800294c:	f000 bba6 	b.w	800309c <touchgfx_taskEntry>

08002950 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8002950:	4770      	bx	lr

08002952 <_ZN20STM32TouchControllerD0Ev>:
 8002952:	b510      	push	{r4, lr}
 8002954:	2104      	movs	r1, #4
 8002956:	4604      	mov	r4, r0
 8002958:	f02a f91b 	bl	802cb92 <_ZdlPvj>
 800295c:	4620      	mov	r0, r4
 800295e:	bd10      	pop	{r4, pc}

08002960 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8002960:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8002962:	4b0c      	ldr	r3, [pc, #48]	; (8002994 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002964:	4c0c      	ldr	r4, [pc, #48]	; (8002998 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8002966:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8002968:	4b0c      	ldr	r3, [pc, #48]	; (800299c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800296a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800296c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800296e:	6863      	ldr	r3, [r4, #4]
 8002970:	4798      	blx	r3
 8002972:	f640 0311 	movw	r3, #2065	; 0x811
 8002976:	4298      	cmp	r0, r3
 8002978:	d10a      	bne.n	8002990 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800297a:	4d09      	ldr	r5, [pc, #36]	; (80029a0 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800297c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800297e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8002980:	2082      	movs	r0, #130	; 0x82
 8002982:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8002984:	682b      	ldr	r3, [r5, #0]
 8002986:	2082      	movs	r0, #130	; 0x82
 8002988:	68db      	ldr	r3, [r3, #12]
 800298a:	4798      	blx	r3
 800298c:	2000      	movs	r0, #0
    }

    return ret;
}
 800298e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8002990:	2001      	movs	r0, #1
 8002992:	e7fc      	b.n	800298e <_Z11BSP_TS_Inittt+0x2e>
 8002994:	200008e4 	.word	0x200008e4
 8002998:	20000054 	.word	0x20000054
 800299c:	200008e6 	.word	0x200008e6
 80029a0:	200008e8 	.word	0x200008e8

080029a4 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80029a4:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80029a8:	20f0      	movs	r0, #240	; 0xf0
 80029aa:	f7ff bfd9 	b.w	8002960 <_Z11BSP_TS_Inittt>
	...

080029b0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80029b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80029b2:	4d33      	ldr	r5, [pc, #204]	; (8002a80 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 80029b4:	682b      	ldr	r3, [r5, #0]
{
 80029b6:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80029b8:	691b      	ldr	r3, [r3, #16]
 80029ba:	2082      	movs	r0, #130	; 0x82
 80029bc:	4798      	blx	r3
 80029be:	b280      	uxth	r0, r0
 80029c0:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 80029c2:	2800      	cmp	r0, #0
 80029c4:	d04a      	beq.n	8002a5c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 80029c6:	682b      	ldr	r3, [r5, #0]
 80029c8:	f10d 0206 	add.w	r2, sp, #6
 80029cc:	695b      	ldr	r3, [r3, #20]
 80029ce:	a901      	add	r1, sp, #4
 80029d0:	2082      	movs	r0, #130	; 0x82
 80029d2:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 80029d4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80029d8:	f640 6274 	movw	r2, #3700	; 0xe74
 80029dc:	4293      	cmp	r3, r2
 80029de:	d93f      	bls.n	8002a60 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 80029e0:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 80029e4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80029e8:	1ad2      	subs	r2, r2, r3
 80029ea:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80029ec:	2a0a      	cmp	r2, #10
 80029ee:	d93d      	bls.n	8002a6c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 80029f0:	230b      	movs	r3, #11
 80029f2:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80029f6:	4b23      	ldr	r3, [pc, #140]	; (8002a84 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80029f8:	881b      	ldrh	r3, [r3, #0]
 80029fa:	429a      	cmp	r2, r3
 80029fc:	d901      	bls.n	8002a02 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80029fe:	3b01      	subs	r3, #1
 8002a00:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8002a02:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002a06:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002a0a:	428b      	cmp	r3, r1
 8002a0c:	d830      	bhi.n	8002a70 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8002a0e:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8002a12:	330e      	adds	r3, #14
 8002a14:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8002a16:	210f      	movs	r1, #15
 8002a18:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002a1c:	491a      	ldr	r1, [pc, #104]	; (8002a88 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8002a1e:	8809      	ldrh	r1, [r1, #0]
 8002a20:	428b      	cmp	r3, r1
 8002a22:	d901      	bls.n	8002a28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8002a24:	3901      	subs	r1, #1
 8002a26:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a28:	4e18      	ldr	r6, [pc, #96]	; (8002a8c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a2a:	4d19      	ldr	r5, [pc, #100]	; (8002a90 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a2c:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a2e:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a30:	4283      	cmp	r3, r0
 8002a32:	b281      	uxth	r1, r0
 8002a34:	bf8c      	ite	hi
 8002a36:	1a59      	subhi	r1, r3, r1
 8002a38:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a3a:	b2b8      	uxth	r0, r7
 8002a3c:	42ba      	cmp	r2, r7
 8002a3e:	bf8c      	ite	hi
 8002a40:	1a10      	subhi	r0, r2, r0
 8002a42:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a44:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a46:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8002a48:	4401      	add	r1, r0
 8002a4a:	2905      	cmp	r1, #5
        {
            _x = x;
 8002a4c:	bfc8      	it	gt
 8002a4e:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8002a50:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8002a52:	bfc8      	it	gt
 8002a54:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8002a56:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8002a58:	682b      	ldr	r3, [r5, #0]
 8002a5a:	80a3      	strh	r3, [r4, #4]
    }
}
 8002a5c:	b003      	add	sp, #12
 8002a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8002a60:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8002a62:	bf9c      	itt	ls
 8002a64:	23b4      	movls	r3, #180	; 0xb4
 8002a66:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8002a6a:	e7bb      	b.n	80029e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8002a6c:	2200      	movs	r2, #0
 8002a6e:	e7c8      	b.n	8002a02 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8002a70:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8002a74:	3308      	adds	r3, #8
 8002a76:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8002a78:	2b0e      	cmp	r3, #14
 8002a7a:	d8cc      	bhi.n	8002a16 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8002a7c:	2300      	movs	r3, #0
 8002a7e:	e7d3      	b.n	8002a28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8002a80:	200008e8 	.word	0x200008e8
 8002a84:	200008e6 	.word	0x200008e6
 8002a88:	200008e4 	.word	0x200008e4
 8002a8c:	200008ec 	.word	0x200008ec
 8002a90:	200008f0 	.word	0x200008f0

08002a94 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8002a94:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8002a96:	4668      	mov	r0, sp
{
 8002a98:	460d      	mov	r5, r1
 8002a9a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8002a9c:	f7ff ff88 	bl	80029b0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8002aa0:	f8bd 0000 	ldrh.w	r0, [sp]
 8002aa4:	b148      	cbz	r0, 8002aba <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8002aa6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8002aaa:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002aac:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002ab0:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8002ab2:	4b03      	ldr	r3, [pc, #12]	; (8002ac0 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002ab4:	223c      	movs	r2, #60	; 0x3c
 8002ab6:	601a      	str	r2, [r3, #0]
        return true;
 8002ab8:	2001      	movs	r0, #1
}
 8002aba:	b003      	add	sp, #12
 8002abc:	bd30      	pop	{r4, r5, pc}
 8002abe:	bf00      	nop
 8002ac0:	20000010 	.word	0x20000010

08002ac4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002ac4:	b110      	cbz	r0, 8002acc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8002ac6:	2802      	cmp	r0, #2
 8002ac8:	d009      	beq.n	8002ade <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8002aca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002acc:	4b07      	ldr	r3, [pc, #28]	; (8002aec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002ace:	681a      	ldr	r2, [r3, #0]
 8002ad0:	fab2 f282 	clz	r2, r2
 8002ad4:	0952      	lsrs	r2, r2, #5
 8002ad6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8002ad8:	4805      	ldr	r0, [pc, #20]	; (8002af0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8002ada:	f009 b953 	b.w	800bd84 <HAL_GPIO_WritePin>
 8002ade:	4b03      	ldr	r3, [pc, #12]	; (8002aec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002ae0:	689a      	ldr	r2, [r3, #8]
 8002ae2:	fab2 f282 	clz	r2, r2
 8002ae6:	0952      	lsrs	r2, r2, #5
 8002ae8:	2110      	movs	r1, #16
 8002aea:	e7f5      	b.n	8002ad8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002aec:	200008f4 	.word	0x200008f4
 8002af0:	40021000 	.word	0x40021000

08002af4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002af4:	b110      	cbz	r0, 8002afc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8002af6:	2802      	cmp	r0, #2
 8002af8:	d009      	beq.n	8002b0e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002afa:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002afc:	4b07      	ldr	r3, [pc, #28]	; (8002b1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002afe:	681a      	ldr	r2, [r3, #0]
 8002b00:	3a00      	subs	r2, #0
 8002b02:	bf18      	it	ne
 8002b04:	2201      	movne	r2, #1
 8002b06:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002b08:	4805      	ldr	r0, [pc, #20]	; (8002b20 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002b0a:	f009 b93b 	b.w	800bd84 <HAL_GPIO_WritePin>
 8002b0e:	4b03      	ldr	r3, [pc, #12]	; (8002b1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002b10:	689a      	ldr	r2, [r3, #8]
 8002b12:	3a00      	subs	r2, #0
 8002b14:	bf18      	it	ne
 8002b16:	2201      	movne	r2, #1
 8002b18:	2110      	movs	r1, #16
 8002b1a:	e7f5      	b.n	8002b08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002b1c:	200008f4 	.word	0x200008f4
 8002b20:	40021000 	.word	0x40021000

08002b24 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002b24:	b110      	cbz	r0, 8002b2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8002b26:	2802      	cmp	r0, #2
 8002b28:	d004      	beq.n	8002b34 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8002b2a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002b2c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002b2e:	4802      	ldr	r0, [pc, #8]	; (8002b38 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8002b30:	f009 b92c 	b.w	800bd8c <HAL_GPIO_TogglePin>
 8002b34:	2110      	movs	r1, #16
 8002b36:	e7fa      	b.n	8002b2e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8002b38:	40021000 	.word	0x40021000

08002b3c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002b3c:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8002b3e:	b130      	cbz	r0, 8002b4e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8002b40:	2802      	cmp	r0, #2
 8002b42:	d009      	beq.n	8002b58 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002b44:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002b46:	1e43      	subs	r3, r0, #1
 8002b48:	4258      	negs	r0, r3
 8002b4a:	4158      	adcs	r0, r3
 8002b4c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002b4e:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002b50:	4802      	ldr	r0, [pc, #8]	; (8002b5c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8002b52:	f009 f911 	bl	800bd78 <HAL_GPIO_ReadPin>
        break;
 8002b56:	e7f6      	b.n	8002b46 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002b58:	2110      	movs	r1, #16
 8002b5a:	e7f9      	b.n	8002b50 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8002b5c:	40021000 	.word	0x40021000

08002b60 <_ZN8touchgfx4GPIO4initEv>:
{
 8002b60:	b570      	push	{r4, r5, r6, lr}
 8002b62:	4d08      	ldr	r5, [pc, #32]	; (8002b84 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002b64:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8002b66:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8002b68:	b2e0      	uxtb	r0, r4
 8002b6a:	f7ff ffe7 	bl	8002b3c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8002b6e:	b118      	cbz	r0, 8002b78 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8002b70:	682b      	ldr	r3, [r5, #0]
 8002b72:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002b74:	bf18      	it	ne
 8002b76:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8002b78:	3401      	adds	r4, #1
 8002b7a:	2c05      	cmp	r4, #5
 8002b7c:	f105 0504 	add.w	r5, r5, #4
 8002b80:	d1f2      	bne.n	8002b68 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8002b82:	bd70      	pop	{r4, r5, r6, pc}
 8002b84:	200008f4 	.word	0x200008f4

08002b88 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002b88:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002b8a:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8002b8e:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002b92:	4770      	bx	lr

08002b94 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002b94:	2000      	movs	r0, #0
 8002b96:	4770      	bx	lr

08002b98 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b98:	4b03      	ldr	r3, [pc, #12]	; (8002ba8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8002b9a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b9c:	3900      	subs	r1, #0
 8002b9e:	bf18      	it	ne
 8002ba0:	2101      	movne	r1, #1
 8002ba2:	7019      	strb	r1, [r3, #0]
    }
 8002ba4:	4770      	bx	lr
 8002ba6:	bf00      	nop
 8002ba8:	2001383b 	.word	0x2001383b

08002bac <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002bac:	2000      	movs	r0, #0
 8002bae:	4770      	bx	lr

08002bb0 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002bb0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002bb2:	b10b      	cbz	r3, 8002bb8 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002bb4:	4608      	mov	r0, r1
 8002bb6:	4718      	bx	r3
        }
    }
 8002bb8:	4770      	bx	lr

08002bba <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002bba:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002bbe:	4770      	bx	lr

08002bc0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002bc0:	6840      	ldr	r0, [r0, #4]
 8002bc2:	6803      	ldr	r3, [r0, #0]
 8002bc4:	699b      	ldr	r3, [r3, #24]
 8002bc6:	4718      	bx	r3

08002bc8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002bc8:	4770      	bx	lr

08002bca <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8002bca:	4770      	bx	lr

08002bcc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002bcc:	4770      	bx	lr
	...

08002bd0 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002bd0:	b510      	push	{r4, lr}
 8002bd2:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002bd4:	f000 fb4e 	bl	8003274 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002bd8:	6823      	ldr	r3, [r4, #0]
 8002bda:	4903      	ldr	r1, [pc, #12]	; (8002be8 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002bdc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002be0:	4620      	mov	r0, r4
}
 8002be2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002be6:	4718      	bx	r3
 8002be8:	d0000000 	.word	0xd0000000

08002bec <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002bec:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8002bee:	6803      	ldr	r3, [r0, #0]
{
 8002bf0:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002bf2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002bf6:	4798      	blx	r3
    enableInterrupts();
 8002bf8:	6823      	ldr	r3, [r4, #0]
 8002bfa:	4620      	mov	r0, r4
 8002bfc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002bfe:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002c00:	f000 f8ec 	bl	8002ddc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002c04:	6823      	ldr	r3, [r4, #0]
 8002c06:	4620      	mov	r0, r4
 8002c08:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c0a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002c0c:	2029      	movs	r0, #41	; 0x29
 8002c0e:	f7ff f921 	bl	8001e54 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002c12:	f000 f8e3 	bl	8002ddc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002c16:	6823      	ldr	r3, [r4, #0]
 8002c18:	4620      	mov	r0, r4
 8002c1a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c1c:	4798      	blx	r3
    for (;;)
 8002c1e:	e7f8      	b.n	8002c12 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002c20 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002c20:	b510      	push	{r4, lr}
 8002c22:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002c24:	f011 fa92 	bl	801414c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002c28:	6823      	ldr	r3, [r4, #0]
 8002c2a:	4620      	mov	r0, r4
 8002c2c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8002c30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002c34:	4718      	bx	r3

08002c36 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002c36:	f000 bb0f 	b.w	8003258 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002c3a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002c3a:	f000 bb13 	b.w	8003264 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002c3e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002c3e:	f000 bb37 	b.w	80032b0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08002c42 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8002c42:	f000 badf 	b.w	8003204 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002c46 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002c46:	f000 bae5 	b.w	8003214 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002c4a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002c4a:	f000 bb3d 	b.w	80032c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002c4e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002c4e:	f000 bae9 	b.w	8003224 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08002c52 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002c52:	f010 bce6 	b.w	8013622 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002c56 <_ZN11TouchGFXHALD0Ev>:
 8002c56:	b510      	push	{r4, lr}
 8002c58:	217c      	movs	r1, #124	; 0x7c
 8002c5a:	4604      	mov	r4, r0
 8002c5c:	f029 ff99 	bl	802cb92 <_ZdlPvj>
 8002c60:	4620      	mov	r0, r4
 8002c62:	bd10      	pop	{r4, pc}

08002c64 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002c64:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002c68:	b11b      	cbz	r3, 8002c72 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8002c6a:	6840      	ldr	r0, [r0, #4]
 8002c6c:	6803      	ldr	r3, [r0, #0]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	4718      	bx	r3
    }
 8002c72:	4618      	mov	r0, r3
 8002c74:	4770      	bx	lr
	...

08002c78 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002c78:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002c7a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8002c7e:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002c82:	4b0c      	ldr	r3, [pc, #48]	; (8002cb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002c84:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002c86:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002c88:	d009      	beq.n	8002c9e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002c8a:	b93a      	cbnz	r2, 8002c9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c8c:	4a0a      	ldr	r2, [pc, #40]	; (8002cb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002c8e:	490b      	ldr	r1, [pc, #44]	; (8002cbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c90:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002c92:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002c94:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c96:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002c98:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8002c9a:	701a      	strb	r2, [r3, #0]
    }
 8002c9c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002c9e:	2a00      	cmp	r2, #0
 8002ca0:	d0fc      	beq.n	8002c9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002ca2:	4a05      	ldr	r2, [pc, #20]	; (8002cb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002ca4:	4905      	ldr	r1, [pc, #20]	; (8002cbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002ca6:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002ca8:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8002caa:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002cac:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002cae:	2200      	movs	r2, #0
 8002cb0:	e7f3      	b.n	8002c9a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002cb2:	bf00      	nop
 8002cb4:	20013834 	.word	0x20013834
 8002cb8:	20013830 	.word	0x20013830
 8002cbc:	20013832 	.word	0x20013832

08002cc0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002cc0:	b570      	push	{r4, r5, r6, lr}
 8002cc2:	460d      	mov	r5, r1
 8002cc4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002cc6:	b935      	cbnz	r5, 8002cd6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002cc8:	4b09      	ldr	r3, [pc, #36]	; (8002cf0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002cca:	4a0a      	ldr	r2, [pc, #40]	; (8002cf4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002ccc:	480a      	ldr	r0, [pc, #40]	; (8002cf8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002cce:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002cd2:	f02a fe45 	bl	802d960 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002cd6:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002cda:	4b08      	ldr	r3, [pc, #32]	; (8002cfc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002cdc:	3a00      	subs	r2, #0
 8002cde:	bf18      	it	ne
 8002ce0:	2201      	movne	r2, #1
 8002ce2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002ce4:	6803      	ldr	r3, [r0, #0]
    }
 8002ce6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002cea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002cee:	4718      	bx	r3
 8002cf0:	0802ebac 	.word	0x0802ebac
 8002cf4:	0802ebe4 	.word	0x0802ebe4
 8002cf8:	0802ec32 	.word	0x0802ec32
 8002cfc:	2001383a 	.word	0x2001383a

08002d00 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002d00:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002d02:	4b09      	ldr	r3, [pc, #36]	; (8002d28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002d04:	881b      	ldrh	r3, [r3, #0]
 8002d06:	428b      	cmp	r3, r1
 8002d08:	d803      	bhi.n	8002d12 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002d0a:	4b08      	ldr	r3, [pc, #32]	; (8002d2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002d0c:	881b      	ldrh	r3, [r3, #0]
 8002d0e:	4293      	cmp	r3, r2
 8002d10:	d905      	bls.n	8002d1e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002d12:	4b07      	ldr	r3, [pc, #28]	; (8002d30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002d14:	4a07      	ldr	r2, [pc, #28]	; (8002d34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002d16:	4808      	ldr	r0, [pc, #32]	; (8002d38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002d18:	219e      	movs	r1, #158	; 0x9e
 8002d1a:	f02a fe21 	bl	802d960 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002d1e:	4b07      	ldr	r3, [pc, #28]	; (8002d3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002d20:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002d22:	4b07      	ldr	r3, [pc, #28]	; (8002d40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002d24:	801a      	strh	r2, [r3, #0]
    }
 8002d26:	bd08      	pop	{r3, pc}
 8002d28:	20013830 	.word	0x20013830
 8002d2c:	20013832 	.word	0x20013832
 8002d30:	0802ec77 	.word	0x0802ec77
 8002d34:	0802ecda 	.word	0x0802ecda
 8002d38:	0802ec32 	.word	0x0802ec32
 8002d3c:	20013836 	.word	0x20013836
 8002d40:	20013838 	.word	0x20013838

08002d44 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002d44:	2101      	movs	r1, #1
{
 8002d46:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002d48:	2200      	movs	r2, #0
 8002d4a:	4608      	mov	r0, r1
 8002d4c:	f00c fdfe 	bl	800f94c <osSemaphoreNew>
 8002d50:	4b0a      	ldr	r3, [pc, #40]	; (8002d7c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002d52:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002d54:	b928      	cbnz	r0, 8002d62 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002d56:	4b0a      	ldr	r3, [pc, #40]	; (8002d80 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002d58:	4a0a      	ldr	r2, [pc, #40]	; (8002d84 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002d5a:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002d5c:	480a      	ldr	r0, [pc, #40]	; (8002d88 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002d5e:	f02a fdff 	bl	802d960 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002d62:	2200      	movs	r2, #0
 8002d64:	2104      	movs	r1, #4
 8002d66:	2001      	movs	r0, #1
 8002d68:	f00c fea4 	bl	800fab4 <osMessageQueueNew>
 8002d6c:	4b07      	ldr	r3, [pc, #28]	; (8002d8c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002d6e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002d70:	b918      	cbnz	r0, 8002d7a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002d72:	4b07      	ldr	r3, [pc, #28]	; (8002d90 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002d74:	4a03      	ldr	r2, [pc, #12]	; (8002d84 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002d76:	212c      	movs	r1, #44	; 0x2c
 8002d78:	e7f0      	b.n	8002d5c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002d7a:	bd08      	pop	{r3, pc}
 8002d7c:	20000908 	.word	0x20000908
 8002d80:	0802edf8 	.word	0x0802edf8
 8002d84:	0802ee41 	.word	0x0802ee41
 8002d88:	0802ee70 	.word	0x0802ee70
 8002d8c:	20000904 	.word	0x20000904
 8002d90:	0802eeea 	.word	0x0802eeea

08002d94 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002d94:	4b02      	ldr	r3, [pc, #8]	; (8002da0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002d96:	f04f 31ff 	mov.w	r1, #4294967295
 8002d9a:	6818      	ldr	r0, [r3, #0]
 8002d9c:	f00c be2a 	b.w	800f9f4 <osSemaphoreAcquire>
 8002da0:	20000908 	.word	0x20000908

08002da4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002da4:	4b01      	ldr	r3, [pc, #4]	; (8002dac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002da6:	6818      	ldr	r0, [r3, #0]
 8002da8:	f00c be58 	b.w	800fa5c <osSemaphoreRelease>
 8002dac:	20000908 	.word	0x20000908

08002db0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002db0:	4b02      	ldr	r3, [pc, #8]	; (8002dbc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002db2:	2100      	movs	r1, #0
 8002db4:	6818      	ldr	r0, [r3, #0]
 8002db6:	f00c be1d 	b.w	800f9f4 <osSemaphoreAcquire>
 8002dba:	bf00      	nop
 8002dbc:	20000908 	.word	0x20000908

08002dc0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002dc0:	f7ff bff0 	b.w	8002da4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002dc4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002dc4:	4803      	ldr	r0, [pc, #12]	; (8002dd4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002dc6:	4904      	ldr	r1, [pc, #16]	; (8002dd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002dc8:	6800      	ldr	r0, [r0, #0]
 8002dca:	2300      	movs	r3, #0
 8002dcc:	461a      	mov	r2, r3
 8002dce:	f00c beab 	b.w	800fb28 <osMessageQueuePut>
 8002dd2:	bf00      	nop
 8002dd4:	20000904 	.word	0x20000904
 8002dd8:	20000014 	.word	0x20000014

08002ddc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002ddc:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002dde:	4c08      	ldr	r4, [pc, #32]	; (8002e00 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002de0:	2300      	movs	r3, #0
 8002de2:	461a      	mov	r2, r3
 8002de4:	a901      	add	r1, sp, #4
 8002de6:	6820      	ldr	r0, [r4, #0]
 8002de8:	f00c fed4 	bl	800fb94 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002dec:	6820      	ldr	r0, [r4, #0]
 8002dee:	f04f 33ff 	mov.w	r3, #4294967295
 8002df2:	2200      	movs	r2, #0
 8002df4:	a901      	add	r1, sp, #4
 8002df6:	f00c fecd 	bl	800fb94 <osMessageQueueGet>
}
 8002dfa:	b002      	add	sp, #8
 8002dfc:	bd10      	pop	{r4, pc}
 8002dfe:	bf00      	nop
 8002e00:	20000904 	.word	0x20000904

08002e04 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002e04:	4770      	bx	lr

08002e06 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002e06:	2000      	movs	r0, #0
 8002e08:	4770      	bx	lr

08002e0a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002e0a:	4770      	bx	lr

08002e0c <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002e0c:	4770      	bx	lr

08002e0e <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002e0e:	2000      	movs	r0, #0
 8002e10:	4770      	bx	lr

08002e12 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002e12:	4770      	bx	lr

08002e14 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002e14:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002e16:	4a03      	ldr	r2, [pc, #12]	; (8002e24 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002e18:	4b03      	ldr	r3, [pc, #12]	; (8002e28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002e1a:	4804      	ldr	r0, [pc, #16]	; (8002e2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002e1c:	2122      	movs	r1, #34	; 0x22
 8002e1e:	f02a fd9f 	bl	802d960 <__assert_func>
 8002e22:	bf00      	nop
 8002e24:	0802ef4f 	.word	0x0802ef4f
 8002e28:	0802ef2c 	.word	0x0802ef2c
 8002e2c:	0802ef8d 	.word	0x0802ef8d

08002e30 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8002e30:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002e32:	4a03      	ldr	r2, [pc, #12]	; (8002e40 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002e34:	4b03      	ldr	r3, [pc, #12]	; (8002e44 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002e36:	4804      	ldr	r0, [pc, #16]	; (8002e48 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002e38:	2127      	movs	r1, #39	; 0x27
 8002e3a:	f02a fd91 	bl	802d960 <__assert_func>
 8002e3e:	bf00      	nop
 8002e40:	0802f005 	.word	0x0802f005
 8002e44:	0802ef2c 	.word	0x0802ef2c
 8002e48:	0802ef8d 	.word	0x0802ef8d

08002e4c <_ZN8STM32DMAD0Ev>:
 8002e4c:	b510      	push	{r4, lr}
 8002e4e:	2144      	movs	r1, #68	; 0x44
 8002e50:	4604      	mov	r4, r0
 8002e52:	f029 fe9e 	bl	802cb92 <_ZdlPvj>
 8002e56:	4620      	mov	r0, r4
 8002e58:	bd10      	pop	{r4, pc}
	...

08002e5c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002e5c:	b538      	push	{r3, r4, r5, lr}
 8002e5e:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002e60:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002e62:	2500      	movs	r5, #0
 8002e64:	4b06      	ldr	r3, [pc, #24]	; (8002e80 <_ZN8STM32DMAC1Ev+0x24>)
 8002e66:	7225      	strb	r5, [r4, #8]
 8002e68:	300c      	adds	r0, #12
 8002e6a:	6060      	str	r0, [r4, #4]
 8002e6c:	7265      	strb	r5, [r4, #9]
 8002e6e:	2201      	movs	r2, #1
 8002e70:	f841 3b20 	str.w	r3, [r1], #32
 8002e74:	f011 fac2 	bl	80143fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002e78:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002e7a:	4620      	mov	r0, r4
 8002e7c:	bd38      	pop	{r3, r4, r5, pc}
 8002e7e:	bf00      	nop
 8002e80:	0802f04c 	.word	0x0802f04c

08002e84 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002e84:	2001      	movs	r0, #1
 8002e86:	4770      	bx	lr

08002e88 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002e88:	2038      	movs	r0, #56	; 0x38
 8002e8a:	4770      	bx	lr

08002e8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002e8c:	2338      	movs	r3, #56	; 0x38
 8002e8e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e92:	3008      	adds	r0, #8
 8002e94:	4770      	bx	lr

08002e96 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002e96:	2338      	movs	r3, #56	; 0x38
 8002e98:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e9c:	3008      	adds	r0, #8
 8002e9e:	4770      	bx	lr

08002ea0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002ea0:	2001      	movs	r0, #1
 8002ea2:	4770      	bx	lr

08002ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002ea4:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002ea8:	4770      	bx	lr

08002eaa <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002eaa:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002eae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002eb2:	3008      	adds	r0, #8
 8002eb4:	4770      	bx	lr

08002eb6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002eb6:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002eba:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002ebe:	3008      	adds	r0, #8
 8002ec0:	4770      	bx	lr

08002ec2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002ec2:	2001      	movs	r0, #1
 8002ec4:	4770      	bx	lr

08002ec6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002ec6:	2010      	movs	r0, #16
 8002ec8:	4770      	bx	lr

08002eca <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002eca:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002ece:	3008      	adds	r0, #8
 8002ed0:	4770      	bx	lr

08002ed2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002ed2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002ed6:	3008      	adds	r0, #8
 8002ed8:	4770      	bx	lr

08002eda <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002eda:	4608      	mov	r0, r1
 8002edc:	f002 bb44 	b.w	8005568 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002ee0:	b510      	push	{r4, lr}
 8002ee2:	4b03      	ldr	r3, [pc, #12]	; (8002ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002ee4:	6003      	str	r3, [r0, #0]
 8002ee6:	4604      	mov	r4, r0
 8002ee8:	f00f fab1 	bl	801244e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002eec:	4620      	mov	r0, r4
 8002eee:	bd10      	pop	{r4, pc}
 8002ef0:	0802f104 	.word	0x0802f104

08002ef4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002ef4:	b510      	push	{r4, lr}
 8002ef6:	4604      	mov	r4, r0
 8002ef8:	f7ff fff2 	bl	8002ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002efc:	4620      	mov	r0, r4
 8002efe:	2140      	movs	r1, #64	; 0x40
 8002f00:	f029 fe47 	bl	802cb92 <_ZdlPvj>
 8002f04:	4620      	mov	r0, r4
 8002f06:	bd10      	pop	{r4, pc}

08002f08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002f08:	b510      	push	{r4, lr}
 8002f0a:	4b03      	ldr	r3, [pc, #12]	; (8002f18 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002f0c:	6003      	str	r3, [r0, #0]
 8002f0e:	4604      	mov	r4, r0
 8002f10:	f00f fa9d 	bl	801244e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002f14:	4620      	mov	r0, r4
 8002f16:	bd10      	pop	{r4, pc}
 8002f18:	0802f0d0 	.word	0x0802f0d0

08002f1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002f1c:	b510      	push	{r4, lr}
 8002f1e:	4604      	mov	r4, r0
 8002f20:	f7ff fff2 	bl	8002f08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f24:	4620      	mov	r0, r4
 8002f26:	f641 510c 	movw	r1, #7436	; 0x1d0c
 8002f2a:	f029 fe32 	bl	802cb92 <_ZdlPvj>
 8002f2e:	4620      	mov	r0, r4
 8002f30:	bd10      	pop	{r4, pc}
	...

08002f34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002f34:	b510      	push	{r4, lr}
 8002f36:	4b03      	ldr	r3, [pc, #12]	; (8002f44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002f38:	6003      	str	r3, [r0, #0]
 8002f3a:	4604      	mov	r4, r0
 8002f3c:	f00f fa87 	bl	801244e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002f40:	4620      	mov	r0, r4
 8002f42:	bd10      	pop	{r4, pc}
 8002f44:	0802f09c 	.word	0x0802f09c

08002f48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002f48:	b510      	push	{r4, lr}
 8002f4a:	4604      	mov	r4, r0
 8002f4c:	f7ff fff2 	bl	8002f34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f50:	4620      	mov	r0, r4
 8002f52:	2118      	movs	r1, #24
 8002f54:	f029 fe1d 	bl	802cb92 <_ZdlPvj>
 8002f58:	4620      	mov	r0, r4
 8002f5a:	bd10      	pop	{r4, pc}

08002f5c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002f5c:	b510      	push	{r4, lr}
 8002f5e:	4b09      	ldr	r3, [pc, #36]	; (8002f84 <_ZN12FrontendHeapD1Ev+0x28>)
 8002f60:	6003      	str	r3, [r0, #0]
 8002f62:	4604      	mov	r4, r0
 8002f64:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 8002f68:	3018      	adds	r0, #24
 8002f6a:	f7ff ffb9 	bl	8002ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002f6e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002f72:	f7ff ffc9 	bl	8002f08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f76:	f104 0014 	add.w	r0, r4, #20
 8002f7a:	f7ff ffdb 	bl	8002f34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f7e:	4620      	mov	r0, r4
 8002f80:	bd10      	pop	{r4, pc}
 8002f82:	bf00      	nop
 8002f84:	0802f138 	.word	0x0802f138

08002f88 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002f88:	b508      	push	{r3, lr}
 8002f8a:	4802      	ldr	r0, [pc, #8]	; (8002f94 <__tcf_0+0xc>)
 8002f8c:	f7ff ffe6 	bl	8002f5c <_ZN12FrontendHeapD1Ev>
 8002f90:	bd08      	pop	{r3, pc}
 8002f92:	bf00      	nop
 8002f94:	20000910 	.word	0x20000910

08002f98 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002f98:	b510      	push	{r4, lr}
 8002f9a:	4604      	mov	r4, r0
 8002f9c:	f7ff ffde 	bl	8002f5c <_ZN12FrontendHeapD1Ev>
 8002fa0:	4620      	mov	r0, r4
 8002fa2:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002fa6:	f029 fdf4 	bl	802cb92 <_ZdlPvj>
 8002faa:	4620      	mov	r0, r4
 8002fac:	bd10      	pop	{r4, pc}
	...

08002fb0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002fb0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002fb4:	f000 fa5c 	bl	8003470 <_ZN14BitmapDatabase11getInstanceEv>
 8002fb8:	4605      	mov	r5, r0
 8002fba:	f000 fa5d 	bl	8003478 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002fbe:	2400      	movs	r4, #0
 8002fc0:	4601      	mov	r1, r0
 8002fc2:	4623      	mov	r3, r4
 8002fc4:	4628      	mov	r0, r5
 8002fc6:	4622      	mov	r2, r4
 8002fc8:	9400      	str	r4, [sp, #0]
 8002fca:	f019 f935 	bl	801c238 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002fce:	4b26      	ldr	r3, [pc, #152]	; (8003068 <touchgfx_init+0xb8>)
 8002fd0:	4a26      	ldr	r2, [pc, #152]	; (800306c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002fd2:	4d27      	ldr	r5, [pc, #156]	; (8003070 <touchgfx_init+0xc0>)
 8002fd4:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002fd6:	4620      	mov	r0, r4
 8002fd8:	f007 fb26 	bl	800a628 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002fdc:	4825      	ldr	r0, [pc, #148]	; (8003074 <touchgfx_init+0xc4>)
 8002fde:	f019 f893 	bl	801c108 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002fe2:	682b      	ldr	r3, [r5, #0]
 8002fe4:	f3bf 8f5b 	dmb	ish
 8002fe8:	07db      	lsls	r3, r3, #31
 8002fea:	d436      	bmi.n	800305a <touchgfx_init+0xaa>
 8002fec:	4628      	mov	r0, r5
 8002fee:	f029 fdd2 	bl	802cb96 <__cxa_guard_acquire>
 8002ff2:	b390      	cbz	r0, 800305a <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002ff4:	4c20      	ldr	r4, [pc, #128]	; (8003078 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002ff6:	4b21      	ldr	r3, [pc, #132]	; (800307c <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002ff8:	4f21      	ldr	r7, [pc, #132]	; (8003080 <touchgfx_init+0xd0>)
 8002ffa:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8002ffc:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8003000:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8003004:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8003008:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 800300a:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 800300e:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8003010:	6126      	str	r6, [r4, #16]
 8003012:	f00f fa1d 	bl	8012450 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003016:	4b1b      	ldr	r3, [pc, #108]	; (8003084 <touchgfx_init+0xd4>)
 8003018:	6163      	str	r3, [r4, #20]
 800301a:	4640      	mov	r0, r8
 800301c:	f00f fa18 	bl	8012450 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003020:	4b19      	ldr	r3, [pc, #100]	; (8003088 <touchgfx_init+0xd8>)
 8003022:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003024:	4638      	mov	r0, r7
 8003026:	f00f fa13 	bl	8012450 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800302a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800302e:	4a17      	ldr	r2, [pc, #92]	; (800308c <touchgfx_init+0xdc>)
 8003030:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 8003034:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 8003038:	f007 ff54 	bl	800aee4 <_ZN5ModelC1Ev>
 800303c:	4622      	mov	r2, r4
 800303e:	f1a6 0108 	sub.w	r1, r6, #8
 8003042:	4630      	mov	r0, r6
 8003044:	f007 fc76 	bl	800a934 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8003048:	4630      	mov	r0, r6
 800304a:	f002 fa8d 	bl	8005568 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800304e:	4810      	ldr	r0, [pc, #64]	; (8003090 <touchgfx_init+0xe0>)
 8003050:	f02a fca4 	bl	802d99c <atexit>
 8003054:	4628      	mov	r0, r5
 8003056:	f029 fdaa 	bl	802cbae <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800305a:	480e      	ldr	r0, [pc, #56]	; (8003094 <touchgfx_init+0xe4>)
}
 800305c:	b002      	add	sp, #8
 800305e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8003062:	f7ff bdb5 	b.w	8002bd0 <_ZN11TouchGFXHAL10initializeEv>
 8003066:	bf00      	nop
 8003068:	200138a0 	.word	0x200138a0
 800306c:	200028b0 	.word	0x200028b0
 8003070:	2000090c 	.word	0x2000090c
 8003074:	20000018 	.word	0x20000018
 8003078:	20000910 	.word	0x20000910
 800307c:	0802f138 	.word	0x0802f138
 8003080:	20002648 	.word	0x20002648
 8003084:	0802f09c 	.word	0x0802f09c
 8003088:	0802f0d0 	.word	0x0802f0d0
 800308c:	0802f104 	.word	0x0802f104
 8003090:	08002f89 	.word	0x08002f89
 8003094:	20002834 	.word	0x20002834

08003098 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8003098:	4770      	bx	lr
	...

0800309c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800309c:	4801      	ldr	r0, [pc, #4]	; (80030a4 <touchgfx_taskEntry+0x8>)
 800309e:	f7ff bda5 	b.w	8002bec <_ZN11TouchGFXHAL9taskEntryEv>
 80030a2:	bf00      	nop
 80030a4:	20002834 	.word	0x20002834

080030a8 <_GLOBAL__sub_I_touchgfx_init>:
}
 80030a8:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80030aa:	4e22      	ldr	r6, [pc, #136]	; (8003134 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 80030ac:	4c22      	ldr	r4, [pc, #136]	; (8003138 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 80030ae:	4d23      	ldr	r5, [pc, #140]	; (800313c <_GLOBAL__sub_I_touchgfx_init+0x94>)
 80030b0:	4b23      	ldr	r3, [pc, #140]	; (8003140 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80030b2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80030b4:	4630      	mov	r0, r6
 80030b6:	f7ff fed1 	bl	8002e5c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80030ba:	4628      	mov	r0, r5
 80030bc:	f01d fb88 	bl	80207d0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 80030c0:	4b20      	ldr	r3, [pc, #128]	; (8003144 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80030c2:	4821      	ldr	r0, [pc, #132]	; (8003148 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 80030c4:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 80030c6:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80030c8:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 80030cc:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 80030d0:	491e      	ldr	r1, [pc, #120]	; (800314c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80030d2:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80030d4:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80030d8:	491d      	ldr	r1, [pc, #116]	; (8003150 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80030da:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80030dc:	491d      	ldr	r1, [pc, #116]	; (8003154 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80030de:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80030e2:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80030e4:	21f0      	movs	r1, #240	; 0xf0
 80030e6:	8001      	strh	r1, [r0, #0]
 80030e8:	481b      	ldr	r0, [pc, #108]	; (8003158 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80030ea:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80030ec:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80030ee:	481b      	ldr	r0, [pc, #108]	; (800315c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80030f0:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80030f4:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80030f8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80030fc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8003100:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8003104:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8003108:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 800310c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8003110:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8003114:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8003118:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 800311a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800311e:	8001      	strh	r1, [r0, #0]
 8003120:	480f      	ldr	r0, [pc, #60]	; (8003160 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8003122:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8003124:	490f      	ldr	r1, [pc, #60]	; (8003164 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8003126:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8003128:	2201      	movs	r2, #1
 800312a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800312e:	4a0e      	ldr	r2, [pc, #56]	; (8003168 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8003130:	601a      	str	r2, [r3, #0]
}
 8003132:	bd70      	pop	{r4, r5, r6, pc}
 8003134:	200027f0 	.word	0x200027f0
 8003138:	200027ec 	.word	0x200027ec
 800313c:	200028b4 	.word	0x200028b4
 8003140:	0802eb9c 	.word	0x0802eb9c
 8003144:	20002834 	.word	0x20002834
 8003148:	20013830 	.word	0x20013830
 800314c:	01000001 	.word	0x01000001
 8003150:	01010000 	.word	0x01010000
 8003154:	2001383c 	.word	0x2001383c
 8003158:	20013836 	.word	0x20013836
 800315c:	20013832 	.word	0x20013832
 8003160:	20013838 	.word	0x20013838
 8003164:	20013834 	.word	0x20013834
 8003168:	0802ed28 	.word	0x0802ed28

0800316c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800316c:	2000      	movs	r0, #0
 800316e:	4770      	bx	lr

08003170 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8003170:	8081      	strh	r1, [r0, #4]
    }
 8003172:	4770      	bx	lr

08003174 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8003174:	80c1      	strh	r1, [r0, #6]
    }
 8003176:	4770      	bx	lr

08003178 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003178:	8101      	strh	r1, [r0, #8]
    }
 800317a:	4770      	bx	lr

0800317c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800317c:	8141      	strh	r1, [r0, #10]
    }
 800317e:	4770      	bx	lr

08003180 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8003180:	4770      	bx	lr

08003182 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8003182:	4770      	bx	lr

08003184 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8003184:	4770      	bx	lr

08003186 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8003186:	4770      	bx	lr

08003188 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003188:	4770      	bx	lr

0800318a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800318a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800318c:	88c4      	ldrh	r4, [r0, #6]
 800318e:	6803      	ldr	r3, [r0, #0]
 8003190:	1b12      	subs	r2, r2, r4
 8003192:	8884      	ldrh	r4, [r0, #4]
 8003194:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003196:	1b09      	subs	r1, r1, r4
 8003198:	b212      	sxth	r2, r2
    }
 800319a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800319e:	b209      	sxth	r1, r1
 80031a0:	4718      	bx	r3

080031a2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80031a2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80031a6:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80031a8:	f04f 33ff 	mov.w	r3, #4294967295
 80031ac:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80031ae:	6813      	ldr	r3, [r2, #0]
 80031b0:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80031b2:	6010      	str	r0, [r2, #0]
    }
 80031b4:	4770      	bx	lr

080031b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80031b6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80031ba:	b11a      	cbz	r2, 80031c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80031bc:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80031c0:	b102      	cbz	r2, 80031c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80031c2:	6018      	str	r0, [r3, #0]
        }
    }
 80031c4:	4770      	bx	lr

080031c6 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80031c6:	2000      	movs	r0, #0
 80031c8:	4770      	bx	lr

080031ca <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80031ca:	888b      	ldrh	r3, [r1, #4]
 80031cc:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80031ce:	2001      	movs	r0, #1
 80031d0:	4770      	bx	lr

080031d2 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80031d2:	4770      	bx	lr

080031d4 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80031d4:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80031d8:	4770      	bx	lr

080031da <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80031da:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80031de:	4770      	bx	lr

080031e0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80031e0:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80031e2:	2200      	movs	r2, #0
        return rect.width;
 80031e4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80031e8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80031ec:	8002      	strh	r2, [r0, #0]
 80031ee:	8042      	strh	r2, [r0, #2]
 80031f0:	8084      	strh	r4, [r0, #4]
 80031f2:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80031f4:	bd10      	pop	{r4, pc}

080031f6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80031f6:	2200      	movs	r2, #0
 80031f8:	8002      	strh	r2, [r0, #0]
 80031fa:	8042      	strh	r2, [r0, #2]
 80031fc:	8082      	strh	r2, [r0, #4]
 80031fe:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003200:	4770      	bx	lr
	...

08003204 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003204:	4b02      	ldr	r3, [pc, #8]	; (8003210 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8003206:	2290      	movs	r2, #144	; 0x90
 8003208:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800320c:	4770      	bx	lr
 800320e:	bf00      	nop
 8003210:	e000e100 	.word	0xe000e100

08003214 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003214:	4b02      	ldr	r3, [pc, #8]	; (8003220 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8003216:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800321a:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 800321c:	4770      	bx	lr
 800321e:	bf00      	nop
 8003220:	e000e100 	.word	0xe000e100

08003224 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8003224:	4a09      	ldr	r2, [pc, #36]	; (800324c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8003226:	490a      	ldr	r1, [pc, #40]	; (8003250 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8003228:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800322a:	480a      	ldr	r0, [pc, #40]	; (8003254 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800322c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003230:	3b01      	subs	r3, #1
 8003232:	b29b      	uxth	r3, r3
 8003234:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8003236:	6911      	ldr	r1, [r2, #16]
 8003238:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800323c:	3901      	subs	r1, #1
 800323e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8003240:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8003242:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003244:	f043 0301 	orr.w	r3, r3, #1
 8003248:	6353      	str	r3, [r2, #52]	; 0x34
}
 800324a:	4770      	bx	lr
 800324c:	40016800 	.word	0x40016800
 8003250:	2000293a 	.word	0x2000293a
 8003254:	20002938 	.word	0x20002938

08003258 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8003258:	4b01      	ldr	r3, [pc, #4]	; (8003260 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800325a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800325e:	4770      	bx	lr
 8003260:	40016800 	.word	0x40016800

08003264 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8003264:	4b02      	ldr	r3, [pc, #8]	; (8003270 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8003266:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8003268:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800326c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800326e:	4770      	bx	lr
 8003270:	40016800 	.word	0x40016800

08003274 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8003274:	b570      	push	{r4, r5, r6, lr}
 8003276:	4604      	mov	r4, r0
    HAL::initialize();
 8003278:	f010 fa29 	bl	80136ce <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800327c:	6823      	ldr	r3, [r4, #0]
 800327e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8003280:	f015 fb9e 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 8003284:	4601      	mov	r1, r0
 8003286:	4620      	mov	r0, r4
 8003288:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800328a:	6823      	ldr	r3, [r4, #0]
 800328c:	4a05      	ldr	r2, [pc, #20]	; (80032a4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800328e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8003292:	4620      	mov	r0, r4
 8003294:	46ac      	mov	ip, r5
 8003296:	2300      	movs	r3, #0
}
 8003298:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800329c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80032a0:	4760      	bx	ip
 80032a2:	bf00      	nop
 80032a4:	d004b000 	.word	0xd004b000

080032a8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80032a8:	f010 b9f8 	b.w	801369c <_ZN8touchgfx3HAL10beginFrameEv>

080032ac <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80032ac:	f010 ba02 	b.w	80136b4 <_ZN8touchgfx3HAL8endFrameEv>

080032b0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80032b0:	f010 b9bd 	b.w	801362e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080032b4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80032b4:	f010 bb1f 	b.w	80138f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080032b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80032b8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80032bc:	b112      	cbz	r2, 80032c4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80032be:	6803      	ldr	r3, [r0, #0]
 80032c0:	695b      	ldr	r3, [r3, #20]
 80032c2:	4718      	bx	r3
    }
 80032c4:	4770      	bx	lr
	...

080032c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80032c8:	4b04      	ldr	r3, [pc, #16]	; (80032dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80032ca:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80032ce:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80032d2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80032d6:	f3bf 8f6f 	isb	sy
}
 80032da:	4770      	bx	lr
 80032dc:	e000e100 	.word	0xe000e100

080032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80032e0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80032e2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80032e4:	4e12      	ldr	r6, [pc, #72]	; (8003330 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80032e6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80032e8:	4b12      	ldr	r3, [pc, #72]	; (8003334 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80032ea:	6003      	str	r3, [r0, #0]
 80032ec:	6833      	ldr	r3, [r6, #0]
 80032ee:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80032f2:	4605      	mov	r5, r0
 80032f4:	b10a      	cbz	r2, 80032fa <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80032f6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80032f8:	b900      	cbnz	r0, 80032fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80032fa:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80032fc:	6803      	ldr	r3, [r0, #0]
 80032fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003300:	4798      	blx	r3
        return auxiliaryLCD;
 8003302:	6833      	ldr	r3, [r6, #0]
 8003304:	fab0 f480 	clz	r4, r0
 8003308:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800330a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 800330c:	b130      	cbz	r0, 800331c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800330e:	6803      	ldr	r3, [r0, #0]
 8003310:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003312:	4798      	blx	r3
 8003314:	2800      	cmp	r0, #0
 8003316:	bf08      	it	eq
 8003318:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800331c:	b92c      	cbnz	r4, 800332a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800331e:	4b06      	ldr	r3, [pc, #24]	; (8003338 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003320:	4a06      	ldr	r2, [pc, #24]	; (800333c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003322:	4807      	ldr	r0, [pc, #28]	; (8003340 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003324:	212c      	movs	r1, #44	; 0x2c
 8003326:	f02a fb1b 	bl	802d960 <__assert_func>
    }
 800332a:	4628      	mov	r0, r5
 800332c:	bd70      	pop	{r4, r5, r6, pc}
 800332e:	bf00      	nop
 8003330:	2001383c 	.word	0x2001383c
 8003334:	0802f248 	.word	0x0802f248
 8003338:	0802f144 	.word	0x0802f144
 800333c:	0802f1a2 	.word	0x0802f1a2
 8003340:	0802f1db 	.word	0x0802f1db

08003344 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8003344:	4770      	bx	lr
	...

08003348 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8003348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 800334c:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 800334e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8003352:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8003356:	d105      	bne.n	8003364 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8003358:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 800335c:	4281      	cmp	r1, r0
 800335e:	d8fb      	bhi.n	8003358 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8003360:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8003364:	4f17      	ldr	r7, [pc, #92]	; (80033c4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003366:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800336a:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800336e:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003372:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003376:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003378:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800337a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800337c:	b2db      	uxtb	r3, r3
 800337e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8003380:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003384:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003388:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800338c:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003390:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003394:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003398:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800339c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80033a0:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80033a2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80033a6:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80033aa:	fb03 4e0e 	mla	lr, r3, lr, r4
 80033ae:	fbbe fef5 	udiv	lr, lr, r5
 80033b2:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80033b6:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80033ba:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 80033be:	4281      	cmp	r1, r0
 80033c0:	d8de      	bhi.n	8003380 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 80033c2:	e7cd      	b.n	8003360 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 80033c4:	fffff800 	.word	0xfffff800

080033c8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80033c8:	b510      	push	{r4, lr}
        return instance;
 80033ca:	4c14      	ldr	r4, [pc, #80]	; (800341c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80033cc:	6823      	ldr	r3, [r4, #0]
 80033ce:	b323      	cbz	r3, 800341a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80033d0:	4b13      	ldr	r3, [pc, #76]	; (8003420 <HAL_LTDC_LineEventCallback+0x58>)
 80033d2:	4a14      	ldr	r2, [pc, #80]	; (8003424 <HAL_LTDC_LineEventCallback+0x5c>)
 80033d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033d6:	8811      	ldrh	r1, [r2, #0]
 80033d8:	428b      	cmp	r3, r1
 80033da:	d113      	bne.n	8003404 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80033dc:	4b12      	ldr	r3, [pc, #72]	; (8003428 <HAL_LTDC_LineEventCallback+0x60>)
 80033de:	8819      	ldrh	r1, [r3, #0]
 80033e0:	f00a faec 	bl	800d9bc <HAL_LTDC_ProgramLineEvent>
 80033e4:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80033e6:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80033ea:	3301      	adds	r3, #1
 80033ec:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80033f0:	f7ff fce8 	bl	8002dc4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80033f4:	6820      	ldr	r0, [r4, #0]
 80033f6:	f010 fea9 	bl	801414c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80033fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80033fe:	2000      	movs	r0, #0
 8003400:	f7ff bb60 	b.w	8002ac4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8003404:	f00a fada 	bl	800d9bc <HAL_LTDC_ProgramLineEvent>
        return instance;
 8003408:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800340a:	6803      	ldr	r3, [r0, #0]
 800340c:	6a1b      	ldr	r3, [r3, #32]
 800340e:	4798      	blx	r3
    }
 8003410:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8003414:	2000      	movs	r0, #0
 8003416:	f7ff bb6d 	b.w	8002af4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800341a:	bd10      	pop	{r4, pc}
 800341c:	2001383c 	.word	0x2001383c
 8003420:	40016800 	.word	0x40016800
 8003424:	2000293a 	.word	0x2000293a
 8003428:	20002938 	.word	0x20002938

0800342c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800342c:	4770      	bx	lr

0800342e <_ZN23ApplicationFontProviderD0Ev>:
 800342e:	b510      	push	{r4, lr}
 8003430:	2104      	movs	r1, #4
 8003432:	4604      	mov	r4, r0
 8003434:	f029 fbad 	bl	802cb92 <_ZdlPvj>
 8003438:	4620      	mov	r0, r4
 800343a:	bd10      	pop	{r4, pc}

0800343c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800343c:	b508      	push	{r3, lr}
    switch (typography)
 800343e:	2903      	cmp	r1, #3
 8003440:	d813      	bhi.n	800346a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8003442:	e8df f001 	tbb	[pc, r1]
 8003446:	0602      	.short	0x0602
 8003448:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800344a:	f007 f939 	bl	800a6c0 <_ZN17TypedTextDatabase8getFontsEv>
 800344e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8003450:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8003452:	f007 f935 	bl	800a6c0 <_ZN17TypedTextDatabase8getFontsEv>
 8003456:	6840      	ldr	r0, [r0, #4]
 8003458:	e7fa      	b.n	8003450 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800345a:	f007 f931 	bl	800a6c0 <_ZN17TypedTextDatabase8getFontsEv>
 800345e:	6880      	ldr	r0, [r0, #8]
 8003460:	e7f6      	b.n	8003450 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8003462:	f007 f92d 	bl	800a6c0 <_ZN17TypedTextDatabase8getFontsEv>
 8003466:	68c0      	ldr	r0, [r0, #12]
 8003468:	e7f2      	b.n	8003450 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800346a:	2000      	movs	r0, #0
 800346c:	e7f0      	b.n	8003450 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08003470 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8003470:	4800      	ldr	r0, [pc, #0]	; (8003474 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8003472:	4770      	bx	lr
 8003474:	0802f274 	.word	0x0802f274

08003478 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8003478:	200c      	movs	r0, #12
 800347a:	4770      	bx	lr

0800347c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800347c:	b513      	push	{r0, r1, r4, lr}
 800347e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8003480:	b151      	cbz	r1, 8003498 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8003482:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8003484:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8003486:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800348a:	aa01      	add	r2, sp, #4
 800348c:	689c      	ldr	r4, [r3, #8]
 800348e:	f10d 0303 	add.w	r3, sp, #3
 8003492:	47a0      	blx	r4
        return glyph;
    }
 8003494:	b002      	add	sp, #8
 8003496:	bd10      	pop	{r4, pc}
            return 0;
 8003498:	4608      	mov	r0, r1
 800349a:	e7fb      	b.n	8003494 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800349c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800349c:	89c0      	ldrh	r0, [r0, #14]
 800349e:	4770      	bx	lr

080034a0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80034a0:	8a00      	ldrh	r0, [r0, #16]
 80034a2:	4770      	bx	lr

080034a4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80034a4:	88c0      	ldrh	r0, [r0, #6]
 80034a6:	4770      	bx	lr

080034a8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80034a8:	8880      	ldrh	r0, [r0, #4]
 80034aa:	4770      	bx	lr

080034ac <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80034ac:	7a80      	ldrb	r0, [r0, #10]
    }
 80034ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80034b2:	4770      	bx	lr

080034b4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80034b4:	7a80      	ldrb	r0, [r0, #10]
    }
 80034b6:	09c0      	lsrs	r0, r0, #7
 80034b8:	4770      	bx	lr

080034ba <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80034ba:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80034bc:	4770      	bx	lr

080034be <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80034be:	4770      	bx	lr

080034c0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80034c0:	4770      	bx	lr

080034c2 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80034c2:	4770      	bx	lr

080034c4 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80034c4:	4770      	bx	lr

080034c6 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80034c6:	4770      	bx	lr

080034c8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80034c8:	4770      	bx	lr

080034ca <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80034ca:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80034cc:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80034ce:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80034d0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80034d2:	466d      	mov	r5, sp
 80034d4:	4601      	mov	r1, r0
 80034d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80034da:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80034dc:	4628      	mov	r0, r5
 80034de:	4798      	blx	r3
 80034e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034e4:	343c      	adds	r4, #60	; 0x3c
 80034e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80034ea:	b005      	add	sp, #20
 80034ec:	bd30      	pop	{r4, r5, pc}

080034ee <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80034ee:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80034f0:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80034f2:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80034f4:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80034f6:	466d      	mov	r5, sp
 80034f8:	4601      	mov	r1, r0
 80034fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80034fe:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003500:	4628      	mov	r0, r5
 8003502:	4798      	blx	r3
 8003504:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003508:	343c      	adds	r4, #60	; 0x3c
 800350a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800350e:	b005      	add	sp, #20
 8003510:	bd30      	pop	{r4, r5, pc}

08003512 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8003512:	2200      	movs	r2, #0
 8003514:	8002      	strh	r2, [r0, #0]
 8003516:	8042      	strh	r2, [r0, #2]
 8003518:	8082      	strh	r2, [r0, #4]
 800351a:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800351c:	4770      	bx	lr

0800351e <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800351e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8003522:	4770      	bx	lr

08003524 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003524:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8003526:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003528:	4604      	mov	r4, r0
        setX(x);
 800352a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800352c:	4615      	mov	r5, r2
        setX(x);
 800352e:	4798      	blx	r3
        setBaselineY(baselineY);
 8003530:	6823      	ldr	r3, [r4, #0]
 8003532:	4629      	mov	r1, r5
 8003534:	4620      	mov	r0, r4
 8003536:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8003538:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 800353c:	4718      	bx	r3

0800353e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800353e:	2000      	movs	r0, #0
 8003540:	4770      	bx	lr

08003542 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8003542:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8003544:	4770      	bx	lr

08003546 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003546:	4770      	bx	lr

08003548 <_ZN23Calibration_PadViewBase19update_CoefficientsEv>:
    virtual void update_Coefficients()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003548:	4770      	bx	lr

0800354a <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 800354a:	6803      	ldr	r3, [r0, #0]
 800354c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800354e:	4718      	bx	r3

08003550 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction_begin
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 8003550:	6803      	ldr	r3, [r0, #0]
 8003552:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003554:	4718      	bx	r3

08003556 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003556:	4770      	bx	lr

08003558 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003558:	4770      	bx	lr

0800355a <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 800355a:	4770      	bx	lr

0800355c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800355c:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800355e:	68c2      	ldr	r2, [r0, #12]
 8003560:	6844      	ldr	r4, [r0, #4]
 8003562:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003564:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003566:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800356a:	07d2      	lsls	r2, r2, #31
 800356c:	bf48      	it	mi
 800356e:	5962      	ldrmi	r2, [r4, r5]
 8003570:	689b      	ldr	r3, [r3, #8]
    }
 8003572:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003574:	bf48      	it	mi
 8003576:	58d3      	ldrmi	r3, [r2, r3]
 8003578:	4718      	bx	r3

0800357a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800357a:	6843      	ldr	r3, [r0, #4]
 800357c:	b12b      	cbz	r3, 800358a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800357e:	6883      	ldr	r3, [r0, #8]
 8003580:	b92b      	cbnz	r3, 800358e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003582:	68c0      	ldr	r0, [r0, #12]
 8003584:	f000 0001 	and.w	r0, r0, #1
 8003588:	4770      	bx	lr
 800358a:	4618      	mov	r0, r3
 800358c:	4770      	bx	lr
 800358e:	2001      	movs	r0, #1
    }
 8003590:	4770      	bx	lr

08003592 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003592:	b510      	push	{r4, lr}
    }
 8003594:	2108      	movs	r1, #8
    virtual ~TypedText()
 8003596:	4604      	mov	r4, r0
    }
 8003598:	f029 fafb 	bl	802cb92 <_ZdlPvj>
 800359c:	4620      	mov	r0, r4
 800359e:	bd10      	pop	{r4, pc}

080035a0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80035a0:	b510      	push	{r4, lr}
 80035a2:	214c      	movs	r1, #76	; 0x4c
 80035a4:	4604      	mov	r4, r0
 80035a6:	f029 faf4 	bl	802cb92 <_ZdlPvj>
 80035aa:	4620      	mov	r0, r4
 80035ac:	bd10      	pop	{r4, pc}

080035ae <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80035ae:	b510      	push	{r4, lr}
 80035b0:	2110      	movs	r1, #16
 80035b2:	4604      	mov	r4, r0
 80035b4:	f029 faed 	bl	802cb92 <_ZdlPvj>
 80035b8:	4620      	mov	r0, r4
 80035ba:	bd10      	pop	{r4, pc}

080035bc <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 80035bc:	b510      	push	{r4, lr}
 80035be:	218c      	movs	r1, #140	; 0x8c
 80035c0:	4604      	mov	r4, r0
 80035c2:	f029 fae6 	bl	802cb92 <_ZdlPvj>
 80035c6:	4620      	mov	r0, r4
 80035c8:	bd10      	pop	{r4, pc}
	...

080035cc <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80035cc:	b538      	push	{r3, r4, r5, lr}
 80035ce:	4605      	mov	r5, r0
 80035d0:	4b05      	ldr	r3, [pc, #20]	; (80035e8 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 80035d2:	f845 3be0 	str.w	r3, [r5], #224
 80035d6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80035d8:	f013 fcf0 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 80035dc:	4628      	mov	r0, r5
 80035de:	f00f fba5 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80035e2:	4620      	mov	r0, r4
 80035e4:	bd38      	pop	{r3, r4, r5, pc}
 80035e6:	bf00      	nop
 80035e8:	0802f65c 	.word	0x0802f65c

080035ec <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80035ec:	b510      	push	{r4, lr}
 80035ee:	4604      	mov	r4, r0
}
 80035f0:	f7ff ffec 	bl	80035cc <_ZN23Calibration_PadViewBaseD1Ev>
 80035f4:	4620      	mov	r0, r4
 80035f6:	f641 5104 	movw	r1, #7428	; 0x1d04
 80035fa:	f029 faca 	bl	802cb92 <_ZdlPvj>
 80035fe:	4620      	mov	r0, r4
 8003600:	bd10      	pop	{r4, pc}

08003602 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003602:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003604:	f7ff fe58 	bl	80032b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003608:	bd08      	pop	{r3, pc}
	...

0800360c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800360c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800360e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003610:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003612:	4b12      	ldr	r3, [pc, #72]	; (800365c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003614:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003616:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003618:	b28d      	uxth	r5, r1
 800361a:	b92b      	cbnz	r3, 8003628 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 800361c:	4b10      	ldr	r3, [pc, #64]	; (8003660 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800361e:	4a11      	ldr	r2, [pc, #68]	; (8003664 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003620:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003622:	4811      	ldr	r0, [pc, #68]	; (8003668 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003624:	f02a f99c 	bl	802d960 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003628:	4910      	ldr	r1, [pc, #64]	; (800366c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800362a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800362c:	8809      	ldrh	r1, [r1, #0]
 800362e:	4291      	cmp	r1, r2
 8003630:	d803      	bhi.n	800363a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003632:	4b0f      	ldr	r3, [pc, #60]	; (8003670 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003634:	4a0b      	ldr	r2, [pc, #44]	; (8003664 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003636:	216d      	movs	r1, #109	; 0x6d
 8003638:	e7f3      	b.n	8003622 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800363a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800363e:	4b0d      	ldr	r3, [pc, #52]	; (8003674 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003646:	6803      	ldr	r3, [r0, #0]
 8003648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800364a:	4798      	blx	r3
 800364c:	1a28      	subs	r0, r5, r0
 800364e:	b201      	sxth	r1, r0
 8003650:	4633      	mov	r3, r6
 8003652:	4620      	mov	r0, r4
    }
 8003654:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003658:	4718      	bx	r3
 800365a:	bf00      	nop
 800365c:	20013894 	.word	0x20013894
 8003660:	0802f364 	.word	0x0802f364
 8003664:	0802f3a6 	.word	0x0802f3a6
 8003668:	0802f3e1 	.word	0x0802f3e1
 800366c:	20013898 	.word	0x20013898
 8003670:	0802f428 	.word	0x0802f428
 8003674:	2001389c 	.word	0x2001389c

08003678 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8003678:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800367a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800367c:	4604      	mov	r4, r0
        setX(x);
 800367e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8003680:	4615      	mov	r5, r2
        setX(x);
 8003682:	4798      	blx	r3
        setY(y);
 8003684:	6823      	ldr	r3, [r4, #0]
 8003686:	4629      	mov	r1, r5
 8003688:	4620      	mov	r0, r4
 800368a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800368c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003690:	4718      	bx	r3

08003692 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003692:	b570      	push	{r4, r5, r6, lr}
 8003694:	4604      	mov	r4, r0
 8003696:	461d      	mov	r5, r3
 8003698:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800369c:	f7ff ffec 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80036a0:	6823      	ldr	r3, [r4, #0]
 80036a2:	4629      	mov	r1, r5
 80036a4:	4620      	mov	r0, r4
 80036a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80036a8:	4798      	blx	r3
        setHeight(height);
 80036aa:	6823      	ldr	r3, [r4, #0]
 80036ac:	4631      	mov	r1, r6
 80036ae:	4620      	mov	r0, r4
 80036b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80036b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80036b6:	4718      	bx	r3

080036b8 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 80036b8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80036bc:	2200      	movs	r2, #0
 80036be:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 80036c0:	4905      	ldr	r1, [pc, #20]	; (80036d8 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 80036c2:	6001      	str	r1, [r0, #0]
 80036c4:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80036c8:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80036cc:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80036d0:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80036d4:	6282      	str	r2, [r0, #40]	; 0x28
    }
 80036d6:	4770      	bx	lr
 80036d8:	08031588 	.word	0x08031588

080036dc <_ZN8touchgfx6WidgetC1Ev>:
 80036dc:	2200      	movs	r2, #0
 80036de:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80036e2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80036e6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80036ea:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80036ee:	f44f 7280 	mov.w	r2, #256	; 0x100
 80036f2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80036f4:	4a01      	ldr	r2, [pc, #4]	; (80036fc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80036f6:	6002      	str	r2, [r0, #0]
 80036f8:	4770      	bx	lr
 80036fa:	bf00      	nop
 80036fc:	0802f4ac 	.word	0x0802f4ac

08003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003700:	4b1a      	ldr	r3, [pc, #104]	; (800376c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003702:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003704:	881b      	ldrh	r3, [r3, #0]
 8003706:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003708:	428b      	cmp	r3, r1
    void updateTextPosition()
 800370a:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 800370c:	d92b      	bls.n	8003766 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800370e:	4b18      	ldr	r3, [pc, #96]	; (8003770 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003710:	681b      	ldr	r3, [r3, #0]
 8003712:	b92b      	cbnz	r3, 8003720 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003714:	4b17      	ldr	r3, [pc, #92]	; (8003774 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003716:	4a18      	ldr	r2, [pc, #96]	; (8003778 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003718:	4818      	ldr	r0, [pc, #96]	; (800377c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800371a:	216c      	movs	r1, #108	; 0x6c
 800371c:	f02a f920 	bl	802d960 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003720:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003724:	4b16      	ldr	r3, [pc, #88]	; (8003780 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8003726:	681b      	ldr	r3, [r3, #0]
 8003728:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 800372c:	4b15      	ldr	r3, [pc, #84]	; (8003784 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 800372e:	6818      	ldr	r0, [r3, #0]
 8003730:	f006 ffb6 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003734:	682b      	ldr	r3, [r5, #0]
 8003736:	9001      	str	r0, [sp, #4]
 8003738:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800373a:	4628      	mov	r0, r5
 800373c:	4798      	blx	r3
 800373e:	682b      	ldr	r3, [r5, #0]
 8003740:	9901      	ldr	r1, [sp, #4]
 8003742:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003744:	4604      	mov	r4, r0
 8003746:	4628      	mov	r0, r5
 8003748:	4798      	blx	r3
 800374a:	682b      	ldr	r3, [r5, #0]
 800374c:	9901      	ldr	r1, [sp, #4]
 800374e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003750:	fb14 f400 	smulbb	r4, r4, r0
 8003754:	4628      	mov	r0, r5
 8003756:	4798      	blx	r3
 8003758:	b2a4      	uxth	r4, r4
 800375a:	1823      	adds	r3, r4, r0
 800375c:	b21b      	sxth	r3, r3
 800375e:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8003762:	b002      	add	sp, #8
 8003764:	bd70      	pop	{r4, r5, r6, pc}
 8003766:	2300      	movs	r3, #0
 8003768:	e7f9      	b.n	800375e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800376a:	bf00      	nop
 800376c:	20013898 	.word	0x20013898
 8003770:	20013894 	.word	0x20013894
 8003774:	0802f364 	.word	0x0802f364
 8003778:	0802f3a6 	.word	0x0802f3a6
 800377c:	0802f3e1 	.word	0x0802f3e1
 8003780:	2001389c 	.word	0x2001389c
 8003784:	200138a0 	.word	0x200138a0

08003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003788:	2200      	movs	r2, #0
 800378a:	f04f 31ff 	mov.w	r1, #4294967295
 800378e:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8003792:	6082      	str	r2, [r0, #8]
        {
        }
 8003794:	4770      	bx	lr

08003796 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8003796:	b510      	push	{r4, lr}
 8003798:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 800379a:	f7ff fff5 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800379e:	4620      	mov	r0, r4
 80037a0:	bd10      	pop	{r4, pc}
	...

080037a4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80037a4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80037a6:	2100      	movs	r1, #0
    TextArea()
 80037a8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80037aa:	2226      	movs	r2, #38	; 0x26
 80037ac:	f02a fadd 	bl	802dd6a <memset>
 80037b0:	4620      	mov	r0, r4
 80037b2:	f7ff ff93 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 80037b6:	4b09      	ldr	r3, [pc, #36]	; (80037dc <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 80037b8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80037ba:	4b09      	ldr	r3, [pc, #36]	; (80037e0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80037bc:	62a3      	str	r3, [r4, #40]	; 0x28
 80037be:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80037c2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80037c4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80037c8:	2300      	movs	r3, #0
 80037ca:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 80037ce:	8723      	strh	r3, [r4, #56]	; 0x38
 80037d0:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 80037d4:	f7ff ffd8 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 80037d8:	4620      	mov	r0, r4
 80037da:	bd10      	pop	{r4, pc}
 80037dc:	080319e0 	.word	0x080319e0
 80037e0:	0802f514 	.word	0x0802f514

080037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 80037e4:	b510      	push	{r4, lr}
 80037e6:	4604      	mov	r4, r0
        : TextArea()
 80037e8:	f7ff ffdc 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80037ec:	4b02      	ldr	r3, [pc, #8]	; (80037f8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 80037ee:	6023      	str	r3, [r4, #0]
 80037f0:	2300      	movs	r3, #0
 80037f2:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80037f4:	4620      	mov	r0, r4
 80037f6:	bd10      	pop	{r4, pc}
 80037f8:	0802f5b4 	.word	0x0802f5b4

080037fc <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 80037fc:	b510      	push	{r4, lr}
 80037fe:	4604      	mov	r4, r0
 8003800:	460b      	mov	r3, r1
 8003802:	490d      	ldr	r1, [pc, #52]	; (8003838 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8003804:	f844 1b04 	str.w	r1, [r4], #4
 8003808:	4602      	mov	r2, r0
 800380a:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 800380e:	e884 0003 	stmia.w	r4, {r0, r1}
 8003812:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8003816:	f102 040c 	add.w	r4, r2, #12
 800381a:	e884 0003 	stmia.w	r4, {r0, r1}
 800381e:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8003822:	695c      	ldr	r4, [r3, #20]
 8003824:	61d1      	str	r1, [r2, #28]
 8003826:	6a19      	ldr	r1, [r3, #32]
 8003828:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800382a:	6211      	str	r1, [r2, #32]
 800382c:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8003830:	8493      	strh	r3, [r2, #36]	; 0x24
 8003832:	4610      	mov	r0, r2
 8003834:	bd10      	pop	{r4, pc}
 8003836:	bf00      	nop
 8003838:	08031e00 	.word	0x08031e00

0800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 800383c:	b538      	push	{r3, r4, r5, lr}
 800383e:	460d      	mov	r5, r1
 8003840:	4604      	mov	r4, r0
class Container : public Drawable
 8003842:	f7ff ffdb 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
 8003846:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8003848:	62a3      	str	r3, [r4, #40]	; 0x28
 800384a:	4b2b      	ldr	r3, [pc, #172]	; (80038f8 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 800384c:	6023      	str	r3, [r4, #0]
 800384e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8003850:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003852:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8003854:	6323      	str	r3, [r4, #48]	; 0x30
 8003856:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003858:	6363      	str	r3, [r4, #52]	; 0x34
 800385a:	f105 0138 	add.w	r1, r5, #56	; 0x38
 800385e:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8003862:	f7ff ffcb 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
 8003866:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8003868:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 800386a:	4b24      	ldr	r3, [pc, #144]	; (80038fc <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 800386c:	63a3      	str	r3, [r4, #56]	; 0x38
 800386e:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8003872:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8003876:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 800387a:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 800387e:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8003882:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8003886:	f7ff ffb9 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
 800388a:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 800388e:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8003892:	4b1b      	ldr	r3, [pc, #108]	; (8003900 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8003894:	66a3      	str	r3, [r4, #104]	; 0x68
 8003896:	f105 0194 	add.w	r1, r5, #148	; 0x94
 800389a:	f104 0094 	add.w	r0, r4, #148	; 0x94
 800389e:	f7ff ffad 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 80038a2:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 80038a6:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 80038aa:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 80038ae:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 80038b2:	4b14      	ldr	r3, [pc, #80]	; (8003904 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 80038b4:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80038b8:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 80038bc:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 80038c0:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 80038c4:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 80038c8:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 80038cc:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 80038d0:	f7ff ff94 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
 80038d4:	4b0c      	ldr	r3, [pc, #48]	; (8003908 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 80038d6:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 80038da:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 80038de:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 80038e2:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 80038e6:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 80038ea:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 80038ee:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 80038f2:	4620      	mov	r0, r4
 80038f4:	bd38      	pop	{r3, r4, r5, pc}
 80038f6:	bf00      	nop
 80038f8:	08031618 	.word	0x08031618
 80038fc:	080316dc 	.word	0x080316dc
 8003900:	0802f524 	.word	0x0802f524
 8003904:	08031ad8 	.word	0x08031ad8
 8003908:	08031cbc 	.word	0x08031cbc

0800390c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 800390c:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithIcon_LP1)
 800390e:	f500 731e 	add.w	r3, r0, #632	; 0x278
 8003912:	4299      	cmp	r1, r3
{
 8003914:	b0c7      	sub	sp, #284	; 0x11c
 8003916:	4604      	mov	r4, r0
 8003918:	460d      	mov	r5, r1
    if (&src == &buttonWithIcon_LP1)
 800391a:	d122      	bne.n	8003962 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        SwipeContainer swipeContainer = swipeContainer1;
 800391c:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 8003920:	4631      	mov	r1, r6
 8003922:	a809      	add	r0, sp, #36	; 0x24
 8003924:	f7ff ff8a 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003928:	a801      	add	r0, sp, #4
 800392a:	f7fd fb77 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 0, 12);
 800392e:	eddd 7a03 	vldr	s15, [sp, #12]
 8003932:	48cf      	ldr	r0, [pc, #828]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003934:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003938:	230c      	movs	r3, #12
 800393a:	ee17 7a90 	vmov	r7, s15
 800393e:	ee17 1a90 	vmov	r1, s15
 8003942:	2200      	movs	r2, #0
 8003944:	f7fd fe6c 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003948:	4aca      	ldr	r2, [pc, #808]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 800394a:	463b      	mov	r3, r7
 800394c:	210a      	movs	r1, #10
 800394e:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8003952:	f018 f9e3 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003956:	4630      	mov	r0, r6
 8003958:	f016 f91a 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800395c:	a809      	add	r0, sp, #36	; 0x24
 800395e:	f00f f9e5 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8003962:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003966:	429d      	cmp	r5, r3
 8003968:	d122      	bne.n	80039b0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>
        SwipeContainer swipeContainer = swipeContainer1;
 800396a:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 800396e:	4631      	mov	r1, r6
 8003970:	a809      	add	r0, sp, #36	; 0x24
 8003972:	f7ff ff63 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003976:	a801      	add	r0, sp, #4
 8003978:	f7fd fb50 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 1, 12);
 800397c:	eddd 7a03 	vldr	s15, [sp, #12]
 8003980:	48bb      	ldr	r0, [pc, #748]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003982:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003986:	230c      	movs	r3, #12
 8003988:	ee17 7a90 	vmov	r7, s15
 800398c:	ee17 1a90 	vmov	r1, s15
 8003990:	2201      	movs	r2, #1
 8003992:	f7fd fe45 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003996:	4ab7      	ldr	r2, [pc, #732]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003998:	463b      	mov	r3, r7
 800399a:	210a      	movs	r1, #10
 800399c:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 80039a0:	f018 f9bc 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039a4:	4630      	mov	r0, r6
 80039a6:	f016 f8f3 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80039aa:	a809      	add	r0, sp, #36	; 0x24
 80039ac:	f00f f9be 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 80039b0:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80039b4:	429d      	cmp	r5, r3
 80039b6:	d122      	bne.n	80039fe <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xf2>
        SwipeContainer swipeContainer = swipeContainer1;
 80039b8:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80039bc:	4631      	mov	r1, r6
 80039be:	a809      	add	r0, sp, #36	; 0x24
 80039c0:	f7ff ff3c 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 80039c4:	a801      	add	r0, sp, #4
 80039c6:	f7fd fb29 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 2, 12);
 80039ca:	eddd 7a03 	vldr	s15, [sp, #12]
 80039ce:	48a8      	ldr	r0, [pc, #672]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 80039d0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80039d4:	230c      	movs	r3, #12
 80039d6:	ee17 7a90 	vmov	r7, s15
 80039da:	ee17 1a90 	vmov	r1, s15
 80039de:	2202      	movs	r2, #2
 80039e0:	f7fd fe1e 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 80039e4:	4aa3      	ldr	r2, [pc, #652]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 80039e6:	463b      	mov	r3, r7
 80039e8:	210a      	movs	r1, #10
 80039ea:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 80039ee:	f018 f995 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039f2:	4630      	mov	r0, r6
 80039f4:	f016 f8cc 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80039f8:	a809      	add	r0, sp, #36	; 0x24
 80039fa:	f00f f997 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 80039fe:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8003a02:	429d      	cmp	r5, r3
 8003a04:	d122      	bne.n	8003a4c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x140>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a06:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a0a:	4631      	mov	r1, r6
 8003a0c:	a809      	add	r0, sp, #36	; 0x24
 8003a0e:	f7ff ff15 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a12:	a801      	add	r0, sp, #4
 8003a14:	f7fd fb02 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 3, 12);
 8003a18:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a1c:	4894      	ldr	r0, [pc, #592]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003a1e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a22:	230c      	movs	r3, #12
 8003a24:	ee17 7a90 	vmov	r7, s15
 8003a28:	ee17 1a90 	vmov	r1, s15
 8003a2c:	2203      	movs	r2, #3
 8003a2e:	f7fd fdf7 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003a32:	4a90      	ldr	r2, [pc, #576]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003a34:	463b      	mov	r3, r7
 8003a36:	210a      	movs	r1, #10
 8003a38:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8003a3c:	f018 f96e 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a40:	4630      	mov	r0, r6
 8003a42:	f016 f8a5 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a46:	a809      	add	r0, sp, #36	; 0x24
 8003a48:	f00f f970 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8003a4c:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8003a50:	429d      	cmp	r5, r3
 8003a52:	d122      	bne.n	8003a9a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18e>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a54:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a58:	4631      	mov	r1, r6
 8003a5a:	a809      	add	r0, sp, #36	; 0x24
 8003a5c:	f7ff feee 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a60:	a801      	add	r0, sp, #4
 8003a62:	f7fd fadb 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 4, 12);
 8003a66:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a6a:	4881      	ldr	r0, [pc, #516]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003a6c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a70:	230c      	movs	r3, #12
 8003a72:	ee17 7a90 	vmov	r7, s15
 8003a76:	ee17 1a90 	vmov	r1, s15
 8003a7a:	2204      	movs	r2, #4
 8003a7c:	f7fd fdd0 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003a80:	4a7c      	ldr	r2, [pc, #496]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003a82:	463b      	mov	r3, r7
 8003a84:	210a      	movs	r1, #10
 8003a86:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8003a8a:	f018 f947 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a8e:	4630      	mov	r0, r6
 8003a90:	f016 f87e 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a94:	a809      	add	r0, sp, #36	; 0x24
 8003a96:	f00f f949 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8003a9a:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8003a9e:	429d      	cmp	r5, r3
 8003aa0:	d122      	bne.n	8003ae8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1dc>
        SwipeContainer swipeContainer = swipeContainer1;
 8003aa2:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003aa6:	4631      	mov	r1, r6
 8003aa8:	a809      	add	r0, sp, #36	; 0x24
 8003aaa:	f7ff fec7 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003aae:	a801      	add	r0, sp, #4
 8003ab0:	f7fd fab4 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 5, 12);
 8003ab4:	eddd 7a01 	vldr	s15, [sp, #4]
 8003ab8:	486d      	ldr	r0, [pc, #436]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003aba:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003abe:	230c      	movs	r3, #12
 8003ac0:	ee17 7a90 	vmov	r7, s15
 8003ac4:	ee17 1a90 	vmov	r1, s15
 8003ac8:	2205      	movs	r2, #5
 8003aca:	f7fd fda9 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003ace:	4a69      	ldr	r2, [pc, #420]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003ad0:	463b      	mov	r3, r7
 8003ad2:	210a      	movs	r1, #10
 8003ad4:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8003ad8:	f018 f920 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003adc:	4630      	mov	r0, r6
 8003ade:	f016 f857 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003ae2:	a809      	add	r0, sp, #36	; 0x24
 8003ae4:	f00f f922 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8003ae8:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8003aec:	429d      	cmp	r5, r3
 8003aee:	d122      	bne.n	8003b36 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22a>
        SwipeContainer swipeContainer = swipeContainer1;
 8003af0:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003af4:	4631      	mov	r1, r6
 8003af6:	a809      	add	r0, sp, #36	; 0x24
 8003af8:	f7ff fea0 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003afc:	a801      	add	r0, sp, #4
 8003afe:	f7fd fa8d 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 6, 12);
 8003b02:	eddd 7a07 	vldr	s15, [sp, #28]
 8003b06:	485a      	ldr	r0, [pc, #360]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003b08:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b0c:	230c      	movs	r3, #12
 8003b0e:	ee17 7a90 	vmov	r7, s15
 8003b12:	ee17 1a90 	vmov	r1, s15
 8003b16:	2206      	movs	r2, #6
 8003b18:	f7fd fd82 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003b1c:	4a55      	ldr	r2, [pc, #340]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003b1e:	463b      	mov	r3, r7
 8003b20:	210a      	movs	r1, #10
 8003b22:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8003b26:	f018 f8f9 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b2a:	4630      	mov	r0, r6
 8003b2c:	f016 f830 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b30:	a809      	add	r0, sp, #36	; 0x24
 8003b32:	f00f f8fb 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8003b36:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8003b3a:	429d      	cmp	r5, r3
 8003b3c:	d122      	bne.n	8003b84 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x278>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b3e:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b42:	4631      	mov	r1, r6
 8003b44:	a809      	add	r0, sp, #36	; 0x24
 8003b46:	f7ff fe79 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b4a:	a801      	add	r0, sp, #4
 8003b4c:	f7fd fa66 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 7, 12);
 8003b50:	eddd 7a07 	vldr	s15, [sp, #28]
 8003b54:	4846      	ldr	r0, [pc, #280]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003b56:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b5a:	230c      	movs	r3, #12
 8003b5c:	ee17 7a90 	vmov	r7, s15
 8003b60:	ee17 1a90 	vmov	r1, s15
 8003b64:	2207      	movs	r2, #7
 8003b66:	f7fd fd5b 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003b6a:	4a42      	ldr	r2, [pc, #264]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003b6c:	463b      	mov	r3, r7
 8003b6e:	210a      	movs	r1, #10
 8003b70:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8003b74:	f018 f8d2 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b78:	4630      	mov	r0, r6
 8003b7a:	f016 f809 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b7e:	a809      	add	r0, sp, #36	; 0x24
 8003b80:	f00f f8d4 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8003b84:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8003b88:	429d      	cmp	r5, r3
 8003b8a:	d122      	bne.n	8003bd2 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c6>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b8c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b90:	4631      	mov	r1, r6
 8003b92:	a809      	add	r0, sp, #36	; 0x24
 8003b94:	f7ff fe52 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b98:	a801      	add	r0, sp, #4
 8003b9a:	f7fd fa3f 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 8, 12);
 8003b9e:	eddd 7a07 	vldr	s15, [sp, #28]
 8003ba2:	4833      	ldr	r0, [pc, #204]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003ba4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ba8:	230c      	movs	r3, #12
 8003baa:	ee17 7a90 	vmov	r7, s15
 8003bae:	ee17 1a90 	vmov	r1, s15
 8003bb2:	2208      	movs	r2, #8
 8003bb4:	f7fd fd34 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003bb8:	4a2e      	ldr	r2, [pc, #184]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003bba:	463b      	mov	r3, r7
 8003bbc:	210a      	movs	r1, #10
 8003bbe:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8003bc2:	f018 f8ab 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003bc6:	4630      	mov	r0, r6
 8003bc8:	f015 ffe2 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003bcc:	a809      	add	r0, sp, #36	; 0x24
 8003bce:	f00f f8ad 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8003bd2:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8003bd6:	429d      	cmp	r5, r3
 8003bd8:	d122      	bne.n	8003c20 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x314>
        SwipeContainer swipeContainer = swipeContainer1;
 8003bda:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003bde:	4631      	mov	r1, r6
 8003be0:	a809      	add	r0, sp, #36	; 0x24
 8003be2:	f7ff fe2b 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003be6:	a801      	add	r0, sp, #4
 8003be8:	f7fd fa18 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 9, 12);
 8003bec:	eddd 7a05 	vldr	s15, [sp, #20]
 8003bf0:	481f      	ldr	r0, [pc, #124]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003bf2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bf6:	230c      	movs	r3, #12
 8003bf8:	ee17 7a90 	vmov	r7, s15
 8003bfc:	ee17 1a90 	vmov	r1, s15
 8003c00:	2209      	movs	r2, #9
 8003c02:	f7fd fd0d 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003c06:	4a1b      	ldr	r2, [pc, #108]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003c08:	463b      	mov	r3, r7
 8003c0a:	210a      	movs	r1, #10
 8003c0c:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003c10:	f018 f884 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c14:	4630      	mov	r0, r6
 8003c16:	f015 ffbb 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c1a:	a809      	add	r0, sp, #36	; 0x24
 8003c1c:	f00f f886 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH2)
 8003c20:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003c24:	429d      	cmp	r5, r3
 8003c26:	d127      	bne.n	8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36c>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c28:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c2c:	4631      	mov	r1, r6
 8003c2e:	a809      	add	r0, sp, #36	; 0x24
 8003c30:	f7ff fe04 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c34:	a801      	add	r0, sp, #4
 8003c36:	f7fd f9f1 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 10, 12);
 8003c3a:	eddd 7a05 	vldr	s15, [sp, #20]
 8003c3e:	480c      	ldr	r0, [pc, #48]	; (8003c70 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003c40:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c44:	230c      	movs	r3, #12
 8003c46:	ee17 7a90 	vmov	r7, s15
 8003c4a:	ee17 1a90 	vmov	r1, s15
 8003c4e:	220a      	movs	r2, #10
 8003c50:	f7fd fce6 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003c54:	4a07      	ldr	r2, [pc, #28]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003c56:	463b      	mov	r3, r7
 8003c58:	210a      	movs	r1, #10
 8003c5a:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8003c5e:	f018 f85d 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c62:	4630      	mov	r0, r6
 8003c64:	f015 ff94 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c68:	a809      	add	r0, sp, #36	; 0x24
 8003c6a:	f00f f85f 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
 8003c6e:	e003      	b.n	8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36c>
 8003c70:	081e0000 	.word	0x081e0000
 8003c74:	0802f466 	.word	0x0802f466
    if (&src == &buttonWithIcon_RH3)
 8003c78:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8003c7c:	429d      	cmp	r5, r3
 8003c7e:	d122      	bne.n	8003cc6 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3ba>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c80:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c84:	4631      	mov	r1, r6
 8003c86:	a809      	add	r0, sp, #36	; 0x24
 8003c88:	f7ff fdd8 	bl	800383c <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c8c:	a801      	add	r0, sp, #4
 8003c8e:	f7fd f9c5 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 11, 12);
 8003c92:	eddd 7a05 	vldr	s15, [sp, #20]
 8003c96:	4814      	ldr	r0, [pc, #80]	; (8003ce8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3dc>)
 8003c98:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c9c:	230c      	movs	r3, #12
 8003c9e:	ee17 7a90 	vmov	r7, s15
 8003ca2:	ee17 1a90 	vmov	r1, s15
 8003ca6:	220b      	movs	r2, #11
 8003ca8:	f7fd fcba 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003cac:	4a0f      	ldr	r2, [pc, #60]	; (8003cec <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e0>)
 8003cae:	463b      	mov	r3, r7
 8003cb0:	210a      	movs	r1, #10
 8003cb2:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8003cb6:	f018 f831 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003cba:	4630      	mov	r0, r6
 8003cbc:	f015 ff68 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003cc0:	a809      	add	r0, sp, #36	; 0x24
 8003cc2:	f00f f833 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithLabel3)
 8003cc6:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8003cca:	429d      	cmp	r5, r3
 8003ccc:	d10a      	bne.n	8003ce4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d8>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003cce:	f014 fe77 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenNoTransition();
 8003cd2:	f001 fc49 	bl	8005568 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        update_Coefficients();
 8003cd6:	6823      	ldr	r3, [r4, #0]
 8003cd8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003cda:	4620      	mov	r0, r4
}
 8003cdc:	b047      	add	sp, #284	; 0x11c
 8003cde:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        update_Coefficients();
 8003ce2:	4718      	bx	r3
}
 8003ce4:	b047      	add	sp, #284	; 0x11c
 8003ce6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003ce8:	081e0000 	.word	0x081e0000
 8003cec:	0802f466 	.word	0x0802f466

08003cf0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003cf0:	0152      	lsls	r2, r2, #5
 8003cf2:	0149      	lsls	r1, r1, #5
 8003cf4:	f010 bf6e 	b.w	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003cf8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003cf8:	0152      	lsls	r2, r2, #5
 8003cfa:	0149      	lsls	r1, r1, #5
 8003cfc:	f010 bf75 	b.w	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003d00 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003d00:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003d02:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003d04:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003d08:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003d0c:	d004      	beq.n	8003d18 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8003d0e:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003d12:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003d14:	f010 be68 	b.w	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003d18:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003d1c:	4770      	bx	lr
	...

08003d20 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d24:	ed2d 8b10 	vpush	{d8-d15}
 8003d28:	4604      	mov	r4, r0
 8003d2a:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003d2c:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003d2e:	2500      	movs	r5, #0
 8003d30:	f016 fac6 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 8003d34:	4be5      	ldr	r3, [pc, #916]	; (80040cc <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003d36:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003d38:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003d3c:	2226      	movs	r2, #38	; 0x26
 8003d3e:	4629      	mov	r1, r5
 8003d40:	4648      	mov	r0, r9
 8003d42:	f02a f812 	bl	802dd6a <memset>
 8003d46:	4648      	mov	r0, r9
 8003d48:	f7ff fcc8 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8003d4c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003d50:	26ff      	movs	r6, #255	; 0xff
 8003d52:	4bdf      	ldr	r3, [pc, #892]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003d54:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003d56:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003d58:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003d5c:	4629      	mov	r1, r5
 8003d5e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003d62:	4640      	mov	r0, r8
        : color(col)
 8003d64:	66a5      	str	r5, [r4, #104]	; 0x68
 8003d66:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003d6a:	f029 fffe 	bl	802dd6a <memset>
 8003d6e:	4640      	mov	r0, r8
 8003d70:	f7ff fcb4 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8003d74:	4bd7      	ldr	r3, [pc, #860]	; (80040d4 <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003d76:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003d78:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8003d7c:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003d80:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003d84:	ae29      	add	r6, sp, #164	; 0xa4
 8003d86:	4631      	mov	r1, r6
 8003d88:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003d8c:	4640      	mov	r0, r8
 8003d8e:	f012 f918 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d92:	4658      	mov	r0, fp
 8003d94:	f012 fa4c 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d98:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003d9c:	4618      	mov	r0, r3
 8003d9e:	ee08 3a10 	vmov	s16, r3
 8003da2:	f00f f8f1 	bl	8012f88 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003da6:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 8003daa:	4618      	mov	r0, r3
 8003dac:	ee08 3a90 	vmov	s17, r3
 8003db0:	f7ff fc82 	bl	80036b8 <_ZN8touchgfx9ContainerC1Ev>
 8003db4:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003db8:	4618      	mov	r0, r3
 8003dba:	9311      	str	r3, [sp, #68]	; 0x44
 8003dbc:	f012 f8da 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003dc0:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003dc4:	f504 771e 	add.w	r7, r4, #632	; 0x278
 8003dc8:	4618      	mov	r0, r3
 8003dca:	9312      	str	r3, [sp, #72]	; 0x48
 8003dcc:	f012 f8d2 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003dd0:	4638      	mov	r0, r7
 8003dd2:	f012 f8cf 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003dd6:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8003dda:	4618      	mov	r0, r3
 8003ddc:	ee0d 3a90 	vmov	s27, r3
 8003de0:	f7ff fd00 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003de4:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003de8:	4618      	mov	r0, r3
 8003dea:	ee0e 3a10 	vmov	s28, r3
 8003dee:	f7ff fcf9 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003df2:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003df6:	4618      	mov	r0, r3
 8003df8:	ee0e 3a90 	vmov	s29, r3
 8003dfc:	f7ff fcf2 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e00:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003e04:	4618      	mov	r0, r3
 8003e06:	ee0a 3a90 	vmov	s21, r3
 8003e0a:	f010 fdcd 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8003e0e:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003e12:	4618      	mov	r0, r3
 8003e14:	931c      	str	r3, [sp, #112]	; 0x70
 8003e16:	f7ff fa63 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e1a:	4baf      	ldr	r3, [pc, #700]	; (80040d8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e1c:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003e20:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003e24:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003e28:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003e2c:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003e2e:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003e32:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003e36:	9107      	str	r1, [sp, #28]
 8003e38:	f7ff fcb4 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8003e3c:	4650      	mov	r0, sl
 8003e3e:	f7ff fc3b 	bl	80036b8 <_ZN8touchgfx9ContainerC1Ev>
 8003e42:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003e46:	4608      	mov	r0, r1
 8003e48:	9113      	str	r1, [sp, #76]	; 0x4c
 8003e4a:	f012 f893 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e4e:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003e52:	4608      	mov	r0, r1
 8003e54:	9114      	str	r1, [sp, #80]	; 0x50
 8003e56:	f012 f88d 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e5a:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 8003e5e:	4608      	mov	r0, r1
 8003e60:	9115      	str	r1, [sp, #84]	; 0x54
 8003e62:	f012 f887 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e66:	f204 5144 	addw	r1, r4, #1348	; 0x544
 8003e6a:	4608      	mov	r0, r1
 8003e6c:	9108      	str	r1, [sp, #32]
 8003e6e:	f7ff fcb9 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e72:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003e76:	4608      	mov	r0, r1
 8003e78:	9109      	str	r1, [sp, #36]	; 0x24
 8003e7a:	f7ff fcb3 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e7e:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003e82:	4608      	mov	r0, r1
 8003e84:	910a      	str	r1, [sp, #40]	; 0x28
 8003e86:	f7ff fcad 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e8a:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 8003e8e:	4608      	mov	r0, r1
 8003e90:	ee0b 1a10 	vmov	s22, r1
 8003e94:	f010 fd88 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8003e98:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 8003e9c:	4608      	mov	r0, r1
 8003e9e:	911d      	str	r1, [sp, #116]	; 0x74
 8003ea0:	f7ff fa1e 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003ea4:	4b8c      	ldr	r3, [pc, #560]	; (80040d8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003ea6:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 8003eaa:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003eae:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 8003eb2:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 8003eb6:	4608      	mov	r0, r1
 8003eb8:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 8003ebc:	ee0f 1a10 	vmov	s30, r1
 8003ec0:	f7ff fc70 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8003ec4:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 8003ec8:	4608      	mov	r0, r1
 8003eca:	ee09 1a10 	vmov	s18, r1
 8003ece:	f7ff fbf3 	bl	80036b8 <_ZN8touchgfx9ContainerC1Ev>
 8003ed2:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 8003ed6:	4608      	mov	r0, r1
 8003ed8:	9116      	str	r1, [sp, #88]	; 0x58
 8003eda:	f012 f84b 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ede:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 8003ee2:	4608      	mov	r0, r1
 8003ee4:	9117      	str	r1, [sp, #92]	; 0x5c
 8003ee6:	f012 f845 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003eea:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 8003eee:	4608      	mov	r0, r1
 8003ef0:	9118      	str	r1, [sp, #96]	; 0x60
 8003ef2:	f012 f83f 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ef6:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 8003efa:	4608      	mov	r0, r1
 8003efc:	910b      	str	r1, [sp, #44]	; 0x2c
 8003efe:	f7ff fc71 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f02:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8003f06:	4608      	mov	r0, r1
 8003f08:	910c      	str	r1, [sp, #48]	; 0x30
 8003f0a:	f7ff fc6b 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f0e:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8003f12:	4608      	mov	r0, r1
 8003f14:	910d      	str	r1, [sp, #52]	; 0x34
 8003f16:	f7ff fc65 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f1a:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 8003f1e:	4608      	mov	r0, r1
 8003f20:	ee0b 1a90 	vmov	s23, r1
 8003f24:	f010 fd40 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8003f28:	f604 1128 	addw	r1, r4, #2344	; 0x928
 8003f2c:	4608      	mov	r0, r1
 8003f2e:	911e      	str	r1, [sp, #120]	; 0x78
 8003f30:	f7ff f9d6 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003f34:	4b68      	ldr	r3, [pc, #416]	; (80040d8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003f36:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 8003f3a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003f3e:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8003f42:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003f46:	4608      	mov	r0, r1
 8003f48:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 8003f4c:	ee0f 1a90 	vmov	s31, r1
 8003f50:	f7ff fc28 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8003f54:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003f58:	4608      	mov	r0, r1
 8003f5a:	ee09 1a90 	vmov	s19, r1
 8003f5e:	f7ff fbab 	bl	80036b8 <_ZN8touchgfx9ContainerC1Ev>
 8003f62:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 8003f66:	4608      	mov	r0, r1
 8003f68:	9119      	str	r1, [sp, #100]	; 0x64
 8003f6a:	f012 f803 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f6e:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 8003f72:	4608      	mov	r0, r1
 8003f74:	911a      	str	r1, [sp, #104]	; 0x68
 8003f76:	f011 fffd 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f7a:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 8003f7e:	4608      	mov	r0, r1
 8003f80:	911b      	str	r1, [sp, #108]	; 0x6c
 8003f82:	f011 fff7 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f86:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 8003f8a:	4608      	mov	r0, r1
 8003f8c:	910e      	str	r1, [sp, #56]	; 0x38
 8003f8e:	f7ff fc29 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f92:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 8003f96:	4608      	mov	r0, r1
 8003f98:	910f      	str	r1, [sp, #60]	; 0x3c
 8003f9a:	f7ff fc23 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f9e:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 8003fa2:	4608      	mov	r0, r1
 8003fa4:	9110      	str	r1, [sp, #64]	; 0x40
 8003fa6:	f7ff fc1d 	bl	80037e4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003faa:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 8003fae:	4608      	mov	r0, r1
 8003fb0:	ee0c 1a10 	vmov	s24, r1
 8003fb4:	f010 fcf8 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8003fb8:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 8003fbc:	4608      	mov	r0, r1
 8003fbe:	911f      	str	r1, [sp, #124]	; 0x7c
 8003fc0:	f7ff f98e 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fc4:	4b44      	ldr	r3, [pc, #272]	; (80040d8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fc6:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 8003fca:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003fce:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 8003fd2:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 8003fd6:	4608      	mov	r0, r1
 8003fd8:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 8003fdc:	9103      	str	r1, [sp, #12]
 8003fde:	f7ff fbe1 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8003fe2:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 8003fe6:	4608      	mov	r0, r1
 8003fe8:	ee0c 1a90 	vmov	s25, r1
 8003fec:	f010 fcdc 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8003ff0:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8003ff4:	4608      	mov	r0, r1
 8003ff6:	9120      	str	r1, [sp, #128]	; 0x80
 8003ff8:	f7ff f972 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003ffc:	4b36      	ldr	r3, [pc, #216]	; (80040d8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003ffe:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 8004002:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004006:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 800400a:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 800400e:	4608      	mov	r0, r1
 8004010:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8004014:	9104      	str	r1, [sp, #16]
 8004016:	f7ff fbc5 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 800401a:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 800401e:	4608      	mov	r0, r1
 8004020:	ee0d 1a10 	vmov	s26, r1
 8004024:	f010 fcc0 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8004028:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 800402c:	4608      	mov	r0, r1
 800402e:	9121      	str	r1, [sp, #132]	; 0x84
 8004030:	f7ff f956 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004034:	4b28      	ldr	r3, [pc, #160]	; (80040d8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8004036:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 800403a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800403e:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 8004042:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 8004046:	4618      	mov	r0, r3
 8004048:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 800404c:	9305      	str	r3, [sp, #20]
 800404e:	f7ff fba9 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8004052:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 8004056:	4618      	mov	r0, r3
 8004058:	9306      	str	r3, [sp, #24]
 800405a:	f7ff fba3 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800405e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8004062:	4a1e      	ldr	r2, [pc, #120]	; (80040dc <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8004064:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8004068:	4a1d      	ldr	r2, [pc, #116]	; (80040e0 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 800406a:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 800406e:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 8004072:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004076:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800407a:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 800407e:	f012 ff93 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8004082:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004086:	462a      	mov	r2, r5
 8004088:	4648      	mov	r0, r9
 800408a:	9300      	str	r3, [sp, #0]
 800408c:	4629      	mov	r1, r5
 800408e:	23f0      	movs	r3, #240	; 0xf0
 8004090:	f7ff faff 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8004094:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004098:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800409a:	1d23      	adds	r3, r4, #4
 800409c:	4618      	mov	r0, r3
 800409e:	4649      	mov	r1, r9
 80040a0:	ee0a 3a10 	vmov	s20, r3
 80040a4:	f00e fbb4 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80040a8:	462a      	mov	r2, r5
 80040aa:	4640      	mov	r0, r8
 80040ac:	4629      	mov	r1, r5
 80040ae:	f7ff fae3 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80040b2:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80040b4:	4640      	mov	r0, r8
 80040b6:	4631      	mov	r1, r6
 80040b8:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80040bc:	f011 ff81 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80040c0:	4641      	mov	r1, r8
 80040c2:	ee1a 0a10 	vmov	r0, s20
 80040c6:	f00e fba3 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80040ca:	e00b      	b.n	80040e4 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 80040cc:	0802f65c 	.word	0x0802f65c
 80040d0:	08031a70 	.word	0x08031a70
 80040d4:	08031cbc 	.word	0x08031cbc
 80040d8:	080317a4 	.word	0x080317a4
 80040dc:	0802f644 	.word	0x0802f644
 80040e0:	0800390d 	.word	0x0800390d
    buttonWithLabel3.setXY(33, 257);
 80040e4:	4658      	mov	r0, fp
 80040e6:	f240 1201 	movw	r2, #257	; 0x101
 80040ea:	2121      	movs	r1, #33	; 0x21
 80040ec:	f7ff fac4 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80040f0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80040f2:	4632      	mov	r2, r6
 80040f4:	a928      	add	r1, sp, #160	; 0xa0
 80040f6:	4658      	mov	r0, fp
 80040f8:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 80040fc:	2302      	movs	r3, #2
 80040fe:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004102:	f011 fd68 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8004106:	233b      	movs	r3, #59	; 0x3b
        updateTextPosition();
 8004108:	4658      	mov	r0, fp
 800410a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800410e:	f7ff faf7 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8004112:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8004116:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 800411a:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 800411e:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8004120:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8004124:	4659      	mov	r1, fp
 8004126:	ee1a 0a10 	vmov	r0, s20
 800412a:	9302      	str	r3, [sp, #8]
 800412c:	f00e fb70 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8004130:	ee18 0a10 	vmov	r0, s16
 8004134:	2255      	movs	r2, #85	; 0x55
 8004136:	4629      	mov	r1, r5
 8004138:	f7ff fa9e 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800413c:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 800413e:	ee18 0a10 	vmov	r0, s16
 8004142:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8004146:	4632      	mov	r2, r6
 8004148:	2307      	movs	r3, #7
 800414a:	a928      	add	r1, sp, #160	; 0xa0
 800414c:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004150:	f00e ffb8 	bl	80130c4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 8004154:	228c      	movs	r2, #140	; 0x8c
 8004156:	ee18 0a10 	vmov	r0, s16
 800415a:	2150      	movs	r1, #80	; 0x50
 800415c:	f00e fe60 	bl	8012e20 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8004160:	ee18 0a10 	vmov	r0, s16
 8004164:	2132      	movs	r1, #50	; 0x32
 8004166:	f00e fdde 	bl	8012d26 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 800416a:	ee18 0a10 	vmov	r0, s16
 800416e:	2132      	movs	r1, #50	; 0x32
 8004170:	f00e fe54 	bl	8012e1c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8004174:	4b47      	ldr	r3, [pc, #284]	; (8004294 <_ZN23Calibration_PadViewBaseC1Ev+0x574>)
    buttonWithIcon_LP3.setXY(194, 97);
 8004176:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004178:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 800417c:	2261      	movs	r2, #97	; 0x61
 800417e:	21c2      	movs	r1, #194	; 0xc2
 8004180:	f7ff fa7a 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8004184:	f04f 0809 	mov.w	r8, #9
 8004188:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800418c:	aa27      	add	r2, sp, #156	; 0x9c
 800418e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004190:	9600      	str	r6, [sp, #0]
 8004192:	ab28      	add	r3, sp, #160	; 0xa0
 8004194:	a926      	add	r1, sp, #152	; 0x98
 8004196:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800419a:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800419e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80041a2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80041a6:	f011 fe50 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80041aa:	9b02      	ldr	r3, [sp, #8]
 80041ac:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80041b0:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80041b2:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80041b6:	ee18 0a90 	vmov	r0, s17
 80041ba:	f00e fb29 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80041be:	9812      	ldr	r0, [sp, #72]	; 0x48
 80041c0:	223d      	movs	r2, #61	; 0x3d
 80041c2:	21c2      	movs	r1, #194	; 0xc2
 80041c4:	f7ff fa58 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80041c8:	aa27      	add	r2, sp, #156	; 0x9c
 80041ca:	9812      	ldr	r0, [sp, #72]	; 0x48
 80041cc:	9600      	str	r6, [sp, #0]
 80041ce:	ab28      	add	r3, sp, #160	; 0xa0
 80041d0:	a926      	add	r1, sp, #152	; 0x98
 80041d2:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80041d6:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80041da:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80041de:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80041e2:	f011 fe32 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80041e6:	9b02      	ldr	r3, [sp, #8]
 80041e8:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 80041ec:	9912      	ldr	r1, [sp, #72]	; 0x48
 80041ee:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 80041f2:	ee18 0a90 	vmov	r0, s17
 80041f6:	f00e fb0b 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 80041fa:	4638      	mov	r0, r7
 80041fc:	2219      	movs	r2, #25
 80041fe:	21c2      	movs	r1, #194	; 0xc2
 8004200:	f7ff fa3a 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004204:	aa27      	add	r2, sp, #156	; 0x9c
 8004206:	4638      	mov	r0, r7
 8004208:	ab28      	add	r3, sp, #160	; 0xa0
 800420a:	a926      	add	r1, sp, #152	; 0x98
 800420c:	9600      	str	r6, [sp, #0]
 800420e:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004212:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004216:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800421a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800421e:	f011 fe14 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004222:	9b02      	ldr	r3, [sp, #8]
 8004224:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8004228:	4639      	mov	r1, r7
 800422a:	ee18 0a90 	vmov	r0, s17
 800422e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8004232:	f00e faed 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 8004236:	2268      	movs	r2, #104	; 0x68
 8004238:	ee1d 0a90 	vmov	r0, s27
 800423c:	210a      	movs	r1, #10
 800423e:	f7ff fa1b 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004242:	f04f 33ff 	mov.w	r3, #4294967295
 8004246:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 800424a:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 800424e:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 8004252:	af22      	add	r7, sp, #136	; 0x88
 8004254:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004258:	ee1d 1a90 	vmov	r1, s27
 800425c:	4638      	mov	r0, r7
 800425e:	4798      	blx	r3
 8004260:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004264:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8004268:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800426c:	4b0a      	ldr	r3, [pc, #40]	; (8004298 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
 800426e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8004270:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 8004274:	b92b      	cbnz	r3, 8004282 <_ZN23Calibration_PadViewBaseC1Ev+0x562>
 8004276:	4b09      	ldr	r3, [pc, #36]	; (800429c <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 8004278:	4a09      	ldr	r2, [pc, #36]	; (80042a0 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 800427a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800427c:	4809      	ldr	r0, [pc, #36]	; (80042a4 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 800427e:	f029 fb6f 	bl	802d960 <__assert_func>
 8004282:	4b09      	ldr	r3, [pc, #36]	; (80042a8 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 8004284:	881b      	ldrh	r3, [r3, #0]
 8004286:	2b26      	cmp	r3, #38	; 0x26
 8004288:	d812      	bhi.n	80042b0 <_ZN23Calibration_PadViewBaseC1Ev+0x590>
 800428a:	4b08      	ldr	r3, [pc, #32]	; (80042ac <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 800428c:	4a04      	ldr	r2, [pc, #16]	; (80042a0 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 800428e:	2161      	movs	r1, #97	; 0x61
 8004290:	e7f4      	b.n	800427c <_ZN23Calibration_PadViewBaseC1Ev+0x55c>
 8004292:	bf00      	nop
 8004294:	00ac00f0 	.word	0x00ac00f0
 8004298:	20013894 	.word	0x20013894
 800429c:	0802f364 	.word	0x0802f364
 80042a0:	0802f469 	.word	0x0802f469
 80042a4:	0802f3e1 	.word	0x0802f3e1
 80042a8:	20013898 	.word	0x20013898
 80042ac:	0802f428 	.word	0x0802f428
        return texts->getText(typedTextId);
 80042b0:	4bdb      	ldr	r3, [pc, #876]	; (8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80042b2:	2126      	movs	r1, #38	; 0x26
 80042b4:	6818      	ldr	r0, [r3, #0]
 80042b6:	f006 f9f3 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80042ba:	4ada      	ldr	r2, [pc, #872]	; (8004624 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80042bc:	4603      	mov	r3, r0
 80042be:	210a      	movs	r1, #10
 80042c0:	4648      	mov	r0, r9
 80042c2:	f017 fd2b 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80042c6:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 80042ca:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 80042ce:	f011 f8a7 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80042d2:	4bd5      	ldr	r3, [pc, #852]	; (8004628 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80042d4:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80042d6:	ee1d 0a90 	vmov	r0, s27
 80042da:	2327      	movs	r3, #39	; 0x27
 80042dc:	4631      	mov	r1, r6
 80042de:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80042e2:	f011 f8bd 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 80042e6:	ee1d 1a90 	vmov	r1, s27
 80042ea:	ee18 0a90 	vmov	r0, s17
 80042ee:	f00e fa8f 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 80042f2:	ee1e 0a10 	vmov	r0, s28
 80042f6:	2244      	movs	r2, #68	; 0x44
 80042f8:	2116      	movs	r1, #22
 80042fa:	f7ff f9bd 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80042fe:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 8004302:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 8004306:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 800430a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800430e:	f8c4 2330 	str.w	r2, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8004312:	ee1e 1a10 	vmov	r1, s28
 8004316:	4638      	mov	r0, r7
 8004318:	4798      	blx	r3
 800431a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800431e:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8004322:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004326:	4ac1      	ldr	r2, [pc, #772]	; (800462c <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 8004328:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 800432a:	f604 6908 	addw	r9, r4, #3592	; 0xe08
 800432e:	2b00      	cmp	r3, #0
 8004330:	d0a1      	beq.n	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004332:	4abf      	ldr	r2, [pc, #764]	; (8004630 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 8004334:	8813      	ldrh	r3, [r2, #0]
 8004336:	2b28      	cmp	r3, #40	; 0x28
 8004338:	d9a7      	bls.n	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800433a:	48b9      	ldr	r0, [pc, #740]	; (8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800433c:	2128      	movs	r1, #40	; 0x28
 800433e:	6800      	ldr	r0, [r0, #0]
 8004340:	f006 f9ae 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8004344:	4ab7      	ldr	r2, [pc, #732]	; (8004624 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004346:	4603      	mov	r3, r0
 8004348:	210a      	movs	r1, #10
 800434a:	4648      	mov	r0, r9
 800434c:	f017 fce6 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 8004350:	ee1e 0a10 	vmov	r0, s28
 8004354:	f8c4 9348 	str.w	r9, [r4, #840]	; 0x348
 8004358:	f011 f862 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800435c:	4bb2      	ldr	r3, [pc, #712]	; (8004628 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 800435e:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004360:	ee1e 0a10 	vmov	r0, s28
 8004364:	2329      	movs	r3, #41	; 0x29
 8004366:	4631      	mov	r1, r6
 8004368:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800436c:	f011 f878 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 8004370:	ee1e 1a10 	vmov	r1, s28
 8004374:	ee18 0a90 	vmov	r0, s17
 8004378:	f00e fa4a 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 800437c:	2220      	movs	r2, #32
 800437e:	ee1e 0a90 	vmov	r0, s29
 8004382:	2116      	movs	r1, #22
 8004384:	f7ff f978 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8004388:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 800438c:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 8004390:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8004394:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004398:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 800439c:	4638      	mov	r0, r7
 800439e:	ee1e 1a90 	vmov	r1, s29
 80043a2:	4798      	blx	r3
 80043a4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80043a8:	f504 7362 	add.w	r3, r4, #904	; 0x388
 80043ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80043b0:	499e      	ldr	r1, [pc, #632]	; (800462c <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80043b2:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80043b4:	f604 691c 	addw	r9, r4, #3612	; 0xe1c
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	f43f af5c 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80043be:	4a9c      	ldr	r2, [pc, #624]	; (8004630 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80043c0:	8813      	ldrh	r3, [r2, #0]
 80043c2:	2b2a      	cmp	r3, #42	; 0x2a
 80043c4:	f67f af61 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80043c8:	4895      	ldr	r0, [pc, #596]	; (8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80043ca:	212a      	movs	r1, #42	; 0x2a
 80043cc:	6800      	ldr	r0, [r0, #0]
 80043ce:	f006 f967 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80043d2:	4a94      	ldr	r2, [pc, #592]	; (8004624 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80043d4:	4603      	mov	r3, r0
 80043d6:	210a      	movs	r1, #10
 80043d8:	4648      	mov	r0, r9
 80043da:	f017 fc9f 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 80043de:	ee1e 0a90 	vmov	r0, s29
 80043e2:	f8c4 9394 	str.w	r9, [r4, #916]	; 0x394
 80043e6:	f011 f81b 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80043ea:	4b8f      	ldr	r3, [pc, #572]	; (8004628 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80043ec:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043ee:	ee1e 0a90 	vmov	r0, s29
 80043f2:	2331      	movs	r3, #49	; 0x31
 80043f4:	4631      	mov	r1, r6
 80043f6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    line1_LP.setPosition(0, 15, 240, 10);
 80043fa:	f04f 090a 	mov.w	r9, #10
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043fe:	f011 f82f 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 8004402:	ee1e 1a90 	vmov	r1, s29
 8004406:	ee18 0a90 	vmov	r0, s17
 800440a:	f00e fa01 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 800440e:	23f0      	movs	r3, #240	; 0xf0
 8004410:	ee1a 0a90 	vmov	r0, s21
 8004414:	220f      	movs	r2, #15
 8004416:	4629      	mov	r1, r5
 8004418:	f8cd 9000 	str.w	r9, [sp]
 800441c:	f7ff f939 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004420:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 8004424:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004426:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 800442a:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800442c:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 8004430:	ee1a 0a90 	vmov	r0, s21
 8004434:	f8c4 13c0 	str.w	r1, [r4, #960]	; 0x3c0
 8004438:	4611      	mov	r1, r2
 800443a:	f7ff fc59 	bl	8003cf0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 800443e:	2205      	movs	r2, #5
 8004440:	ee1a 0a90 	vmov	r0, s21
 8004444:	21eb      	movs	r1, #235	; 0xeb
 8004446:	f7ff fc57 	bl	8003cf8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 800444a:	ee1a 0a90 	vmov	r0, s21
 800444e:	4659      	mov	r1, fp
 8004450:	f7ff fc56 	bl	8003d00 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004454:	ee1a 0a90 	vmov	r0, s21
 8004458:	4659      	mov	r1, fp
 800445a:	f010 fbd1 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 800445e:	ee1a 1a90 	vmov	r1, s21
 8004462:	ee18 0a90 	vmov	r0, s17
 8004466:	f00e f9d3 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 800446a:	462a      	mov	r2, r5
 800446c:	9807      	ldr	r0, [sp, #28]
 800446e:	2160      	movs	r1, #96	; 0x60
 8004470:	f7ff f902 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004474:	f04f 3eff 	mov.w	lr, #4294967295
 8004478:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        boundingArea = calculateBoundingArea();
 800447c:	4638      	mov	r0, r7
 800447e:	9907      	ldr	r1, [sp, #28]
        linespace = space;
 8004480:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 8004484:	f010 fd52 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004488:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800448c:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 8004490:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004494:	4b64      	ldr	r3, [pc, #400]	; (8004628 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 8004496:	9807      	ldr	r0, [sp, #28]
 8004498:	9329      	str	r3, [sp, #164]	; 0xa4
 800449a:	4631      	mov	r1, r6
 800449c:	2325      	movs	r3, #37	; 0x25
 800449e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80044a2:	f010 ffdd 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 80044a6:	9907      	ldr	r1, [sp, #28]
 80044a8:	ee18 0a90 	vmov	r0, s17
 80044ac:	f00e f9b0 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80044b0:	ee18 1a90 	vmov	r1, s17
 80044b4:	ee18 0a10 	vmov	r0, s16
 80044b8:	f00e fe8d 	bl	80131d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80044bc:	4b5d      	ldr	r3, [pc, #372]	; (8004634 <_ZN23Calibration_PadViewBaseC1Ev+0x914>)
    buttonWithIcon_RP3.setXY(194, 97);
 80044be:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80044c0:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
 80044c4:	2261      	movs	r2, #97	; 0x61
 80044c6:	21c2      	movs	r1, #194	; 0xc2
 80044c8:	f7ff f8d6 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80044cc:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80044d0:	4673      	mov	r3, lr
 80044d2:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80044d6:	4672      	mov	r2, lr
 80044d8:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80044dc:	4671      	mov	r1, lr
 80044de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80044e0:	9600      	str	r6, [sp, #0]
 80044e2:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80044e6:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80044ea:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80044ee:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80044f2:	f011 fcaa 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80044f6:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 80044f8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80044fa:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 80044fe:	4650      	mov	r0, sl
 8004500:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 8004504:	f00e f984 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 8004508:	9814      	ldr	r0, [sp, #80]	; 0x50
 800450a:	223d      	movs	r2, #61	; 0x3d
 800450c:	21c2      	movs	r1, #194	; 0xc2
 800450e:	f7ff f8b3 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004512:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004516:	4673      	mov	r3, lr
 8004518:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800451c:	4672      	mov	r2, lr
 800451e:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004522:	4671      	mov	r1, lr
 8004524:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004526:	9600      	str	r6, [sp, #0]
 8004528:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800452c:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004530:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004534:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004538:	f011 fc87 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800453c:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 800453e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8004540:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 8004544:	4650      	mov	r0, sl
 8004546:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 800454a:	f00e f961 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 800454e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004550:	2219      	movs	r2, #25
 8004552:	21c2      	movs	r1, #194	; 0xc2
 8004554:	f7ff f890 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004558:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 800455c:	4673      	mov	r3, lr
 800455e:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8004562:	4672      	mov	r2, lr
 8004564:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004568:	4671      	mov	r1, lr
 800456a:	9815      	ldr	r0, [sp, #84]	; 0x54
 800456c:	9600      	str	r6, [sp, #0]
 800456e:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004572:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004576:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800457a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800457e:	f011 fc64 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004582:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 8004584:	9915      	ldr	r1, [sp, #84]	; 0x54
 8004586:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 800458a:	4650      	mov	r0, sl
 800458c:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 8004590:	f00e f93e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 8004594:	2268      	movs	r2, #104	; 0x68
 8004596:	4649      	mov	r1, r9
 8004598:	9808      	ldr	r0, [sp, #32]
 800459a:	f7ff f86d 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800459e:	f04f 3eff 	mov.w	lr, #4294967295
 80045a2:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 80045a6:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 80045aa:	4630      	mov	r0, r6
 80045ac:	f7ff f8ec 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80045b0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80045b4:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 80045b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80045bc:	491b      	ldr	r1, [pc, #108]	; (800462c <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80045be:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80045c0:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 80045c4:	2b00      	cmp	r3, #0
 80045c6:	f43f ae56 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80045ca:	4a19      	ldr	r2, [pc, #100]	; (8004630 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80045cc:	8813      	ldrh	r3, [r2, #0]
 80045ce:	2b2f      	cmp	r3, #47	; 0x2f
 80045d0:	f67f ae5b 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80045d4:	4812      	ldr	r0, [pc, #72]	; (8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80045d6:	212f      	movs	r1, #47	; 0x2f
 80045d8:	6800      	ldr	r0, [r0, #0]
 80045da:	f006 f861 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80045de:	4a11      	ldr	r2, [pc, #68]	; (8004624 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80045e0:	4603      	mov	r3, r0
 80045e2:	4649      	mov	r1, r9
 80045e4:	4638      	mov	r0, r7
 80045e6:	f017 fb99 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 80045ea:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 80045ec:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 80045f0:	f010 ff16 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80045f4:	4f0c      	ldr	r7, [pc, #48]	; (8004628 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 80045f6:	9808      	ldr	r0, [sp, #32]
 80045f8:	9729      	str	r7, [sp, #164]	; 0xa4
 80045fa:	2330      	movs	r3, #48	; 0x30
 80045fc:	4631      	mov	r1, r6
 80045fe:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004602:	f010 ff2d 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 8004606:	9908      	ldr	r1, [sp, #32]
 8004608:	4650      	mov	r0, sl
 800460a:	f00e f901 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 800460e:	2244      	movs	r2, #68	; 0x44
 8004610:	2116      	movs	r1, #22
 8004612:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004614:	f7ff f830 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004618:	f04f 33ff 	mov.w	r3, #4294967295
 800461c:	e00c      	b.n	8004638 <_ZN23Calibration_PadViewBaseC1Ev+0x918>
 800461e:	bf00      	nop
 8004620:	200138a0 	.word	0x200138a0
 8004624:	0802f4a1 	.word	0x0802f4a1
 8004628:	0802f514 	.word	0x0802f514
 800462c:	20013894 	.word	0x20013894
 8004630:	20013898 	.word	0x20013898
 8004634:	00ac00f0 	.word	0x00ac00f0
 8004638:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
        linespace = space;
 800463c:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8004640:	4630      	mov	r0, r6
 8004642:	f7ff f8a1 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004646:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800464a:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 800464e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004652:	49da      	ldr	r1, [pc, #872]	; (80049bc <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>)
 8004654:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 8004656:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 800465a:	2b00      	cmp	r3, #0
 800465c:	f43f ae0b 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004660:	4ad7      	ldr	r2, [pc, #860]	; (80049c0 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004662:	8813      	ldrh	r3, [r2, #0]
 8004664:	2b2d      	cmp	r3, #45	; 0x2d
 8004666:	f67f ae10 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800466a:	48d6      	ldr	r0, [pc, #856]	; (80049c4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800466c:	f8df b34c 	ldr.w	fp, [pc, #844]	; 80049bc <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>
        return texts->getText(typedTextId);
 8004670:	6800      	ldr	r0, [r0, #0]
 8004672:	212d      	movs	r1, #45	; 0x2d
 8004674:	f006 f814 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8004678:	4ad3      	ldr	r2, [pc, #844]	; (80049c8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 800467a:	4603      	mov	r3, r0
 800467c:	4649      	mov	r1, r9
 800467e:	4628      	mov	r0, r5
 8004680:	f017 fb4c 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 8004684:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 8004686:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 800468a:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 800468c:	f010 fec8 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004690:	232e      	movs	r3, #46	; 0x2e
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8004692:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004694:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004698:	4629      	mov	r1, r5
 800469a:	9729      	str	r7, [sp, #164]	; 0xa4
 800469c:	f010 fee0 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 80046a0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80046a2:	4650      	mov	r0, sl
 80046a4:	f00e f8b4 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80046a8:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 80046ac:	2220      	movs	r2, #32
 80046ae:	2116      	movs	r1, #22
 80046b0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80046b2:	f7fe ffe1 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80046b6:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 80046ba:	2600      	movs	r6, #0
 80046bc:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 80046c0:	4628      	mov	r0, r5
 80046c2:	f7ff f861 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80046c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80046ca:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 80046ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80046d2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 80046d6:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 80046da:	2b00      	cmp	r3, #0
 80046dc:	f43f adcb 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80046e0:	4ab7      	ldr	r2, [pc, #732]	; (80049c0 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80046e2:	8813      	ldrh	r3, [r2, #0]
 80046e4:	2b2c      	cmp	r3, #44	; 0x2c
 80046e6:	f67f add0 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80046ea:	48b6      	ldr	r0, [pc, #728]	; (80049c4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80046ec:	212c      	movs	r1, #44	; 0x2c
 80046ee:	6800      	ldr	r0, [r0, #0]
 80046f0:	f005 ffd6 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80046f4:	4ab4      	ldr	r2, [pc, #720]	; (80049c8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80046f6:	4603      	mov	r3, r0
 80046f8:	4649      	mov	r1, r9
 80046fa:	4638      	mov	r0, r7
 80046fc:	f017 fb0e 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8004700:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8004702:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 8004706:	f010 fe8b 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800470a:	4fb0      	ldr	r7, [pc, #704]	; (80049cc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 800470c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800470e:	9729      	str	r7, [sp, #164]	; 0xa4
 8004710:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8004714:	4629      	mov	r1, r5
 8004716:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 800471a:	f010 fea1 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 800471e:	4650      	mov	r0, sl
 8004720:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004722:	f00e f875 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 8004726:	ee1b 0a10 	vmov	r0, s22
 800472a:	23f0      	movs	r3, #240	; 0xf0
 800472c:	220f      	movs	r2, #15
 800472e:	4631      	mov	r1, r6
 8004730:	f8cd 9000 	str.w	r9, [sp]
 8004734:	f7fe ffad 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004738:	f04f 33ff 	mov.w	r3, #4294967295
 800473c:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8004740:	2205      	movs	r2, #5
 8004742:	f8c4 36a4 	str.w	r3, [r4, #1700]	; 0x6a4
 8004746:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004748:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 800474c:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
 8004750:	4611      	mov	r1, r2
 8004752:	ee1b 0a10 	vmov	r0, s22
 8004756:	f7ff facb 	bl	8003cf0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 800475a:	2205      	movs	r2, #5
 800475c:	ee1b 0a10 	vmov	r0, s22
 8004760:	21eb      	movs	r1, #235	; 0xeb
 8004762:	f7ff fac9 	bl	8003cf8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 8004766:	ee1b 0a10 	vmov	r0, s22
 800476a:	2101      	movs	r1, #1
 800476c:	f7ff fac8 	bl	8003d00 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004770:	ee1b 0a10 	vmov	r0, s22
 8004774:	2101      	movs	r1, #1
 8004776:	f010 fa43 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 800477a:	4650      	mov	r0, sl
 800477c:	ee1b 1a10 	vmov	r1, s22
 8004780:	f00e f846 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 8004784:	4632      	mov	r2, r6
 8004786:	ee1f 0a10 	vmov	r0, s30
 800478a:	215c      	movs	r1, #92	; 0x5c
 800478c:	f7fe ff74 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004790:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8004794:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004798:	4660      	mov	r0, ip
 800479a:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 800479e:	f8c4 36dc 	str.w	r3, [r4, #1756]	; 0x6dc
        linespace = space;
 80047a2:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 80047a6:	f010 fbc1 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80047aa:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 80047ae:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 80047b2:	ee1f 3a10 	vmov	r3, s30
 80047b6:	333c      	adds	r3, #60	; 0x3c
 80047b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80047bc:	232b      	movs	r3, #43	; 0x2b
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 80047be:	ee1f 0a10 	vmov	r0, s30
 80047c2:	4629      	mov	r1, r5
 80047c4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80047c8:	9729      	str	r7, [sp, #164]	; 0xa4
 80047ca:	f010 fe49 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 80047ce:	4650      	mov	r0, sl
 80047d0:	ee1f 1a10 	vmov	r1, s30
 80047d4:	f00e f81c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 80047d8:	4651      	mov	r1, sl
 80047da:	ee18 0a10 	vmov	r0, s16
 80047de:	f00e fcfa 	bl	80131d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80047e2:	497b      	ldr	r1, [pc, #492]	; (80049d0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
    buttonWithIcon_LH3.setXY(194, 97);
 80047e4:	9816      	ldr	r0, [sp, #88]	; 0x58
 80047e6:	f8c4 16fc 	str.w	r1, [r4, #1788]	; 0x6fc
 80047ea:	2261      	movs	r2, #97	; 0x61
 80047ec:	21c2      	movs	r1, #194	; 0xc2
 80047ee:	f7fe ff43 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80047f2:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80047f6:	4663      	mov	r3, ip
 80047f8:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 80047fc:	4662      	mov	r2, ip
 80047fe:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004802:	2709      	movs	r7, #9
 8004804:	4661      	mov	r1, ip
 8004806:	f04f 0801 	mov.w	r8, #1
 800480a:	9816      	ldr	r0, [sp, #88]	; 0x58
 800480c:	9500      	str	r5, [sp, #0]
 800480e:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004812:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004816:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 800481a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 800481e:	f011 fb14 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004822:	9b02      	ldr	r3, [sp, #8]
 8004824:	f8c4 3748 	str.w	r3, [r4, #1864]	; 0x748
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8004828:	9916      	ldr	r1, [sp, #88]	; 0x58
 800482a:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 800482e:	ee19 0a10 	vmov	r0, s18
 8004832:	f00d ffed 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 8004836:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004838:	223d      	movs	r2, #61	; 0x3d
 800483a:	21c2      	movs	r1, #194	; 0xc2
 800483c:	f7fe ff1c 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004840:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8004844:	4663      	mov	r3, ip
 8004846:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 800484a:	4662      	mov	r2, ip
 800484c:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004850:	4661      	mov	r1, ip
 8004852:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004854:	9500      	str	r5, [sp, #0]
 8004856:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800485a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800485e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004862:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004866:	f011 faf0 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800486a:	9b02      	ldr	r3, [sp, #8]
 800486c:	f8c4 3784 	str.w	r3, [r4, #1924]	; 0x784
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8004870:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8004872:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 8004876:	ee19 0a10 	vmov	r0, s18
 800487a:	f00d ffc9 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 800487e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004880:	2219      	movs	r2, #25
 8004882:	21c2      	movs	r1, #194	; 0xc2
 8004884:	f7fe fef8 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004888:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 800488c:	4663      	mov	r3, ip
 800488e:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8004892:	4662      	mov	r2, ip
 8004894:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004898:	4661      	mov	r1, ip
 800489a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800489c:	9500      	str	r5, [sp, #0]
 800489e:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 80048a2:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 80048a6:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80048aa:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80048ae:	f011 facc 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80048b2:	9b02      	ldr	r3, [sp, #8]
 80048b4:	f8c4 37c0 	str.w	r3, [r4, #1984]	; 0x7c0
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 80048b8:	9918      	ldr	r1, [sp, #96]	; 0x60
 80048ba:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 80048be:	ee19 0a10 	vmov	r0, s18
 80048c2:	f00d ffa5 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 80048c6:	2268      	movs	r2, #104	; 0x68
 80048c8:	4649      	mov	r1, r9
 80048ca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80048cc:	f7fe fed4 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80048d0:	f04f 3cff 	mov.w	ip, #4294967295
 80048d4:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 80048d8:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 80048dc:	4628      	mov	r0, r5
 80048de:	f7fe ff53 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80048e2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80048e6:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 80048ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048ee:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 80048f2:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	f43f acbd 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048fc:	4a30      	ldr	r2, [pc, #192]	; (80049c0 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80048fe:	8813      	ldrh	r3, [r2, #0]
 8004900:	2b24      	cmp	r3, #36	; 0x24
 8004902:	f67f acc2 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004906:	482f      	ldr	r0, [pc, #188]	; (80049c4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004908:	2124      	movs	r1, #36	; 0x24
 800490a:	6800      	ldr	r0, [r0, #0]
 800490c:	f005 fec8 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8004910:	4a2d      	ldr	r2, [pc, #180]	; (80049c8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004912:	4603      	mov	r3, r0
 8004914:	4649      	mov	r1, r9
 8004916:	4650      	mov	r0, sl
 8004918:	f017 fa00 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 800491c:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 800491e:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 8004922:	f010 fd7d 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004926:	4b29      	ldr	r3, [pc, #164]	; (80049cc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004928:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800492a:	9329      	str	r3, [sp, #164]	; 0xa4
 800492c:	4629      	mov	r1, r5
 800492e:	2327      	movs	r3, #39	; 0x27
 8004930:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004934:	f010 fd94 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8004938:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800493a:	ee19 0a10 	vmov	r0, s18
 800493e:	f00d ff67 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 8004942:	2244      	movs	r2, #68	; 0x44
 8004944:	2116      	movs	r1, #22
 8004946:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004948:	f7fe fe96 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800494c:	f04f 3cff 	mov.w	ip, #4294967295
 8004950:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 8004954:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8004958:	4628      	mov	r0, r5
 800495a:	f7fe ff15 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800495e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004962:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 8004966:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800496a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 800496e:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 8004972:	2b00      	cmp	r3, #0
 8004974:	f43f ac7f 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004978:	4a11      	ldr	r2, [pc, #68]	; (80049c0 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 800497a:	8813      	ldrh	r3, [r2, #0]
 800497c:	2b23      	cmp	r3, #35	; 0x23
 800497e:	f67f ac84 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004982:	4810      	ldr	r0, [pc, #64]	; (80049c4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004984:	2123      	movs	r1, #35	; 0x23
 8004986:	6800      	ldr	r0, [r0, #0]
 8004988:	f005 fe8a 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 800498c:	4a0e      	ldr	r2, [pc, #56]	; (80049c8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 800498e:	4603      	mov	r3, r0
 8004990:	4649      	mov	r1, r9
 8004992:	4650      	mov	r0, sl
 8004994:	f017 f9c2 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8004998:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 800499a:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 800499e:	f010 fd3f 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80049a2:	4b0a      	ldr	r3, [pc, #40]	; (80049cc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 80049a4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80049a6:	9329      	str	r3, [sp, #164]	; 0xa4
 80049a8:	4629      	mov	r1, r5
 80049aa:	2329      	movs	r3, #41	; 0x29
 80049ac:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80049b0:	f010 fd56 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 80049b4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80049b6:	ee19 0a10 	vmov	r0, s18
 80049ba:	e00b      	b.n	80049d4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>
 80049bc:	20013894 	.word	0x20013894
 80049c0:	20013898 	.word	0x20013898
 80049c4:	200138a0 	.word	0x200138a0
 80049c8:	0802f4a1 	.word	0x0802f4a1
 80049cc:	0802f514 	.word	0x0802f514
 80049d0:	00ac00f0 	.word	0x00ac00f0
 80049d4:	f00d ff1c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 80049d8:	2220      	movs	r2, #32
 80049da:	2116      	movs	r1, #22
 80049dc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80049de:	f7fe fe4b 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80049e2:	f04f 3cff 	mov.w	ip, #4294967295
 80049e6:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 80049ea:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 80049ee:	4628      	mov	r0, r5
 80049f0:	f7fe feca 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80049f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80049f8:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 80049fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a00:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 8004a04:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8004a08:	2b00      	cmp	r3, #0
 8004a0a:	f43f ac34 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a0e:	4ada      	ldr	r2, [pc, #872]	; (8004d78 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004a10:	8813      	ldrh	r3, [r2, #0]
 8004a12:	2b22      	cmp	r3, #34	; 0x22
 8004a14:	f67f ac39 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004a18:	48d8      	ldr	r0, [pc, #864]	; (8004d7c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004a1a:	2122      	movs	r1, #34	; 0x22
 8004a1c:	6800      	ldr	r0, [r0, #0]
 8004a1e:	f005 fe3f 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8004a22:	4ad7      	ldr	r2, [pc, #860]	; (8004d80 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004a24:	4603      	mov	r3, r0
 8004a26:	4649      	mov	r1, r9
 8004a28:	4650      	mov	r0, sl
 8004a2a:	f017 f977 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8004a2e:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8004a30:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8004a34:	f010 fcf4 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004a38:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8004a3c:	4bd1      	ldr	r3, [pc, #836]	; (8004d84 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004a3e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004a40:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8004a44:	4629      	mov	r1, r5
 8004a46:	9329      	str	r3, [sp, #164]	; 0xa4
 8004a48:	f010 fd0a 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8004a4c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004a4e:	ee19 0a10 	vmov	r0, s18
 8004a52:	f00d fedd 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8004a56:	ee1b 0a90 	vmov	r0, s23
 8004a5a:	23f0      	movs	r3, #240	; 0xf0
 8004a5c:	220f      	movs	r2, #15
 8004a5e:	4631      	mov	r1, r6
 8004a60:	f8cd 9000 	str.w	r9, [sp]
 8004a64:	f7fe fe15 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004a68:	f04f 30ff 	mov.w	r0, #4294967295
 8004a6c:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_LH.setStart(5, 5);
 8004a70:	2205      	movs	r2, #5
 8004a72:	f8c4 0934 	str.w	r0, [r4, #2356]	; 0x934
 8004a76:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004a78:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
 8004a7c:	4611      	mov	r1, r2
 8004a7e:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8004a82:	ee1b 0a90 	vmov	r0, s23
 8004a86:	f7ff f933 	bl	8003cf0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8004a8a:	2205      	movs	r2, #5
 8004a8c:	ee1b 0a90 	vmov	r0, s23
 8004a90:	21eb      	movs	r1, #235	; 0xeb
 8004a92:	f7ff f931 	bl	8003cf8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8004a96:	ee1b 0a90 	vmov	r0, s23
 8004a9a:	4641      	mov	r1, r8
 8004a9c:	f7ff f930 	bl	8003d00 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004aa0:	ee1b 0a90 	vmov	r0, s23
 8004aa4:	4641      	mov	r1, r8
 8004aa6:	f010 f8ab 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8004aaa:	ee1b 1a90 	vmov	r1, s23
 8004aae:	ee19 0a10 	vmov	r0, s18
 8004ab2:	f00d fead 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8004ab6:	4632      	mov	r2, r6
 8004ab8:	ee1f 0a90 	vmov	r0, s31
 8004abc:	2149      	movs	r1, #73	; 0x49
 8004abe:	f7fe fddb 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004ac2:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8004ac6:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8004aca:	f8c4 096c 	str.w	r0, [r4, #2412]	; 0x96c
        linespace = space;
 8004ace:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8004ad2:	a822      	add	r0, sp, #136	; 0x88
 8004ad4:	f010 fa2a 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ad8:	ee1f 0a90 	vmov	r0, s31
 8004adc:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8004ae0:	a822      	add	r0, sp, #136	; 0x88
 8004ae2:	c807      	ldmia	r0, {r0, r1, r2}
 8004ae4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004ae8:	4ba6      	ldr	r3, [pc, #664]	; (8004d84 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004aea:	9329      	str	r3, [sp, #164]	; 0xa4
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8004aec:	4629      	mov	r1, r5
 8004aee:	2321      	movs	r3, #33	; 0x21
 8004af0:	ee1f 0a90 	vmov	r0, s31
 8004af4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004af8:	f010 fcb2 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8004afc:	ee1f 1a90 	vmov	r1, s31
 8004b00:	ee19 0a10 	vmov	r0, s18
 8004b04:	f00d fe84 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8004b08:	ee19 1a10 	vmov	r1, s18
 8004b0c:	ee18 0a10 	vmov	r0, s16
 8004b10:	f00e fb61 	bl	80131d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004b14:	499c      	ldr	r1, [pc, #624]	; (8004d88 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    buttonWithIcon_RH3.setXY(194, 97);
 8004b16:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004b18:	f8c4 198c 	str.w	r1, [r4, #2444]	; 0x98c
 8004b1c:	2261      	movs	r2, #97	; 0x61
 8004b1e:	21c2      	movs	r1, #194	; 0xc2
 8004b20:	f7fe fdaa 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b24:	a927      	add	r1, sp, #156	; 0x9c
 8004b26:	460a      	mov	r2, r1
 8004b28:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004b2a:	9500      	str	r5, [sp, #0]
 8004b2c:	ab28      	add	r3, sp, #160	; 0xa0
 8004b2e:	a926      	add	r1, sp, #152	; 0x98
 8004b30:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b34:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b38:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b3c:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b40:	f011 f983 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b44:	9b02      	ldr	r3, [sp, #8]
 8004b46:	f8c4 39d8 	str.w	r3, [r4, #2520]	; 0x9d8
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8004b4a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004b4c:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8004b50:	ee19 0a90 	vmov	r0, s19
 8004b54:	f00d fe5c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8004b58:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b5a:	223d      	movs	r2, #61	; 0x3d
 8004b5c:	21c2      	movs	r1, #194	; 0xc2
 8004b5e:	f7fe fd8b 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b62:	a927      	add	r1, sp, #156	; 0x9c
 8004b64:	460a      	mov	r2, r1
 8004b66:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b68:	9500      	str	r5, [sp, #0]
 8004b6a:	ab28      	add	r3, sp, #160	; 0xa0
 8004b6c:	a926      	add	r1, sp, #152	; 0x98
 8004b6e:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b72:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b76:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b7a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b7e:	f011 f964 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b82:	9b02      	ldr	r3, [sp, #8]
 8004b84:	f8c4 3a14 	str.w	r3, [r4, #2580]	; 0xa14
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8004b88:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004b8a:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8004b8e:	ee19 0a90 	vmov	r0, s19
 8004b92:	f00d fe3d 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8004b96:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004b98:	2219      	movs	r2, #25
 8004b9a:	21c2      	movs	r1, #194	; 0xc2
 8004b9c:	f7fe fd6c 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004ba0:	a927      	add	r1, sp, #156	; 0x9c
 8004ba2:	460a      	mov	r2, r1
 8004ba4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004ba6:	9500      	str	r5, [sp, #0]
 8004ba8:	ab28      	add	r3, sp, #160	; 0xa0
 8004baa:	a926      	add	r1, sp, #152	; 0x98
 8004bac:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004bb0:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004bb4:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004bb8:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004bbc:	f011 f945 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004bc0:	9b02      	ldr	r3, [sp, #8]
 8004bc2:	f8c4 3a50 	str.w	r3, [r4, #2640]	; 0xa50
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8004bc6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8004bc8:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8004bcc:	ee19 0a90 	vmov	r0, s19
 8004bd0:	f00d fe1e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8004bd4:	2268      	movs	r2, #104	; 0x68
 8004bd6:	4649      	mov	r1, r9
 8004bd8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004bda:	f7fe fd4d 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004bde:	f04f 33ff 	mov.w	r3, #4294967295
 8004be2:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8004be6:	4628      	mov	r0, r5
        linespace = space;
 8004be8:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004bec:	f7fe fdcc 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004bf0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004bf4:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8004bf8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004bfc:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004c00:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8004c04:	2b00      	cmp	r3, #0
 8004c06:	f43f ab36 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c0a:	4a5b      	ldr	r2, [pc, #364]	; (8004d78 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004c0c:	8813      	ldrh	r3, [r2, #0]
 8004c0e:	2b20      	cmp	r3, #32
 8004c10:	f67f ab3b 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004c14:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8004d7c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>
        : typedTextId(id)
 8004c18:	f8df a168 	ldr.w	sl, [pc, #360]	; 8004d84 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>
        return texts->getText(typedTextId);
 8004c1c:	f8d8 0000 	ldr.w	r0, [r8]
 8004c20:	2120      	movs	r1, #32
 8004c22:	f005 fd3d 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8004c26:	4a56      	ldr	r2, [pc, #344]	; (8004d80 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004c28:	4603      	mov	r3, r0
 8004c2a:	4649      	mov	r1, r9
 8004c2c:	4628      	mov	r0, r5
 8004c2e:	f017 f875 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004c32:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004c34:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004c38:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8004c3a:	f010 fbf1 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004c3e:	2327      	movs	r3, #39	; 0x27
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004c40:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004c42:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004c46:	4629      	mov	r1, r5
 8004c48:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004c4c:	f010 fc08 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004c50:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004c52:	ee19 0a90 	vmov	r0, s19
 8004c56:	f00d fddb 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004c5a:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8004c5e:	2244      	movs	r2, #68	; 0x44
 8004c60:	2116      	movs	r1, #22
 8004c62:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004c64:	f7fe fd08 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8004c68:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8004c6c:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004c70:	4628      	mov	r0, r5
 8004c72:	f7fe fd89 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004c76:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004c7a:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8004c7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c82:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8004c86:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8004c8a:	2b00      	cmp	r3, #0
 8004c8c:	f43f aaf3 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c90:	4a39      	ldr	r2, [pc, #228]	; (8004d78 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004c92:	8813      	ldrh	r3, [r2, #0]
 8004c94:	2b1f      	cmp	r3, #31
 8004c96:	f67f aaf8 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004c9a:	211f      	movs	r1, #31
 8004c9c:	f8d8 0000 	ldr.w	r0, [r8]
 8004ca0:	f005 fcfe 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8004ca4:	4a36      	ldr	r2, [pc, #216]	; (8004d80 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004ca6:	4603      	mov	r3, r0
 8004ca8:	210a      	movs	r1, #10
 8004caa:	4648      	mov	r0, r9
 8004cac:	f017 f836 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8004cb0:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8004cb2:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 8004cb6:	f010 fbb3 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004cba:	2329      	movs	r3, #41	; 0x29
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004cbc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004cbe:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004cc2:	4629      	mov	r1, r5
 8004cc4:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004cc8:	f010 fbca 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8004ccc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004cce:	ee19 0a90 	vmov	r0, s19
 8004cd2:	f00d fd9d 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004cd6:	2220      	movs	r2, #32
 8004cd8:	2116      	movs	r1, #22
 8004cda:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004cdc:	f7fe fccc 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004ce0:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004ce4:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8004ce8:	4628      	mov	r0, r5
 8004cea:	f7fe fd4d 	bl	8003788 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004cee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004cf2:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004cf6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004cfa:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004cfe:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	f43f aab7 	beq.w	8004276 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004d08:	4a1b      	ldr	r2, [pc, #108]	; (8004d78 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004d0a:	8813      	ldrh	r3, [r2, #0]
 8004d0c:	2b1e      	cmp	r3, #30
 8004d0e:	f67f aabc 	bls.w	800428a <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004d12:	f8d8 0000 	ldr.w	r0, [r8]
 8004d16:	211e      	movs	r1, #30
 8004d18:	f005 fcc2 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8004d1c:	4a18      	ldr	r2, [pc, #96]	; (8004d80 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004d1e:	4603      	mov	r3, r0
 8004d20:	210a      	movs	r1, #10
 8004d22:	4648      	mov	r0, r9
 8004d24:	f016 fffa 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004d28:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004d2a:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004d2e:	f010 fb77 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004d32:	2331      	movs	r3, #49	; 0x31
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004d34:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004d36:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004d3a:	4629      	mov	r1, r5
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004d3c:	f04f 090a 	mov.w	r9, #10
 8004d40:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004d44:	f010 fb8c 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004d48:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004d4a:	ee19 0a90 	vmov	r0, s19
 8004d4e:	f00d fd5f 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004d52:	ee1c 0a10 	vmov	r0, s24
 8004d56:	4631      	mov	r1, r6
 8004d58:	f8cd 9000 	str.w	r9, [sp]
 8004d5c:	23f0      	movs	r3, #240	; 0xf0
 8004d5e:	220f      	movs	r2, #15
 8004d60:	f7fe fc97 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004d66:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004d6a:	2205      	movs	r2, #5
 8004d6c:	ee1c 0a10 	vmov	r0, s24
 8004d70:	4611      	mov	r1, r2
 8004d72:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 8004d76:	e009      	b.n	8004d8c <_ZN23Calibration_PadViewBaseC1Ev+0x106c>
 8004d78:	20013898 	.word	0x20013898
 8004d7c:	200138a0 	.word	0x200138a0
 8004d80:	0802f4a1 	.word	0x0802f4a1
 8004d84:	0802f514 	.word	0x0802f514
 8004d88:	00ac00f0 	.word	0x00ac00f0
 8004d8c:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 8004d90:	f7fe ffae 	bl	8003cf0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 8004d94:	2205      	movs	r2, #5
 8004d96:	ee1c 0a10 	vmov	r0, s24
 8004d9a:	21eb      	movs	r1, #235	; 0xeb
 8004d9c:	f7fe ffac 	bl	8003cf8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 8004da0:	ee1c 0a10 	vmov	r0, s24
 8004da4:	2101      	movs	r1, #1
 8004da6:	f7fe ffab 	bl	8003d00 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004daa:	ee1c 0a10 	vmov	r0, s24
 8004dae:	2101      	movs	r1, #1
 8004db0:	f00f ff26 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 8004db4:	ee1c 1a10 	vmov	r1, s24
 8004db8:	ee19 0a90 	vmov	r0, s19
 8004dbc:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8004dc0:	f00d fd26 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 8004dc4:	4632      	mov	r2, r6
 8004dc6:	9803      	ldr	r0, [sp, #12]
 8004dc8:	2149      	movs	r1, #73	; 0x49
 8004dca:	f7fe fc55 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8004dce:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004dd0:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 8004dd4:	4640      	mov	r0, r8
        linespace = space;
 8004dd6:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004dda:	f010 f8a7 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004dde:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004de2:	9b03      	ldr	r3, [sp, #12]
 8004de4:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004de8:	333c      	adds	r3, #60	; 0x3c
 8004dea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004dee:	231d      	movs	r3, #29
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 8004df0:	9803      	ldr	r0, [sp, #12]
 8004df2:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004df6:	4629      	mov	r1, r5
 8004df8:	f010 fb32 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004dfc:	9903      	ldr	r1, [sp, #12]
 8004dfe:	ee19 0a90 	vmov	r0, s19
 8004e02:	f00d fd05 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004e06:	ee19 1a90 	vmov	r1, s19
 8004e0a:	ee18 0a10 	vmov	r0, s16
 8004e0e:	f00e f9e2 	bl	80131d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8004e12:	ee18 0a10 	vmov	r0, s16
 8004e16:	4631      	mov	r1, r6
 8004e18:	f00e f9ce 	bl	80131b8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004e1c:	ee18 1a10 	vmov	r1, s16
 8004e20:	ee1a 0a10 	vmov	r0, s20
 8004e24:	f00d fcf4 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004e28:	ee1c 0a90 	vmov	r0, s25
 8004e2c:	4631      	mov	r1, r6
 8004e2e:	f8cd 9000 	str.w	r9, [sp]
 8004e32:	23f0      	movs	r3, #240	; 0xf0
 8004e34:	224b      	movs	r2, #75	; 0x4b
 8004e36:	f7fe fc2c 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004e3a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004e3e:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 8004e42:	2205      	movs	r2, #5
 8004e44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004e46:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004e4a:	ee1c 0a90 	vmov	r0, s25
 8004e4e:	4611      	mov	r1, r2
 8004e50:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004e54:	f7fe ff4c 	bl	8003cf0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004e58:	2205      	movs	r2, #5
 8004e5a:	ee1c 0a90 	vmov	r0, s25
 8004e5e:	21eb      	movs	r1, #235	; 0xeb
 8004e60:	f7fe ff4a 	bl	8003cf8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004e64:	ee1c 0a90 	vmov	r0, s25
 8004e68:	2101      	movs	r1, #1
 8004e6a:	f7fe ff49 	bl	8003d00 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004e6e:	ee1c 0a90 	vmov	r0, s25
 8004e72:	2101      	movs	r1, #1
 8004e74:	f00f fec4 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004e78:	ee1c 1a90 	vmov	r1, s25
 8004e7c:	ee1a 0a10 	vmov	r0, s20
 8004e80:	f00d fcc6 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004e84:	9804      	ldr	r0, [sp, #16]
 8004e86:	223c      	movs	r2, #60	; 0x3c
 8004e88:	2146      	movs	r1, #70	; 0x46
 8004e8a:	f7fe fbf5 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8004e8e:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004e90:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004e94:	4640      	mov	r0, r8
        linespace = space;
 8004e96:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 8004e9a:	f010 f847 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e9e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004ea2:	9b04      	ldr	r3, [sp, #16]
 8004ea4:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004ea8:	333c      	adds	r3, #60	; 0x3c
 8004eaa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004eae:	233a      	movs	r3, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004eb0:	9804      	ldr	r0, [sp, #16]
 8004eb2:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004eb6:	4629      	mov	r1, r5
 8004eb8:	f010 fad2 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ebc:	9904      	ldr	r1, [sp, #16]
 8004ebe:	ee1a 0a10 	vmov	r0, s20
 8004ec2:	f00d fca5 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004ec6:	ee1d 0a10 	vmov	r0, s26
 8004eca:	4631      	mov	r1, r6
 8004ecc:	f8cd 9000 	str.w	r9, [sp]
 8004ed0:	23f0      	movs	r3, #240	; 0xf0
 8004ed2:	2232      	movs	r2, #50	; 0x32
 8004ed4:	f7fe fbdd 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ed8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004eda:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 8004ede:	2205      	movs	r2, #5
 8004ee0:	ee1d 0a10 	vmov	r0, s26
 8004ee4:	4611      	mov	r1, r2
 8004ee6:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8004eea:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 8004eee:	f7fe feff 	bl	8003cf0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 8004ef2:	2205      	movs	r2, #5
 8004ef4:	ee1d 0a10 	vmov	r0, s26
 8004ef8:	21eb      	movs	r1, #235	; 0xeb
 8004efa:	f7fe fefd 	bl	8003cf8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8004efe:	ee1d 0a10 	vmov	r0, s26
 8004f02:	2101      	movs	r1, #1
 8004f04:	f7fe fefc 	bl	8003d00 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004f08:	ee1d 0a10 	vmov	r0, s26
 8004f0c:	2101      	movs	r1, #1
 8004f0e:	f00f fe77 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004f12:	ee1d 1a10 	vmov	r1, s26
 8004f16:	ee1a 0a10 	vmov	r0, s20
 8004f1a:	f00d fc79 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8004f1e:	9805      	ldr	r0, [sp, #20]
 8004f20:	2223      	movs	r2, #35	; 0x23
 8004f22:	2145      	movs	r1, #69	; 0x45
 8004f24:	f7fe fba8 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8004f28:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004f2a:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 8004f2e:	4640      	mov	r0, r8
        linespace = space;
 8004f30:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004f34:	f00f fffa 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f38:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004f3c:	9b05      	ldr	r3, [sp, #20]
 8004f3e:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f42:	333c      	adds	r3, #60	; 0x3c
 8004f44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f48:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004f4a:	9805      	ldr	r0, [sp, #20]
 8004f4c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f50:	4629      	mov	r1, r5
 8004f52:	f010 fa85 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f56:	9905      	ldr	r1, [sp, #20]
 8004f58:	ee1a 0a10 	vmov	r0, s20
 8004f5c:	f00d fc58 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8004f60:	9806      	ldr	r0, [sp, #24]
 8004f62:	220c      	movs	r2, #12
 8004f64:	2136      	movs	r1, #54	; 0x36
 8004f66:	f7fe fb87 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8004f6a:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004f6c:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 8004f70:	4640      	mov	r0, r8
        linespace = space;
 8004f72:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8004f76:	f00f ffd9 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f7a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004f7e:	9b06      	ldr	r3, [sp, #24]
 8004f80:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f84:	333c      	adds	r3, #60	; 0x3c
 8004f86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f8a:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8004f8c:	9806      	ldr	r0, [sp, #24]
 8004f8e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f92:	4629      	mov	r1, r5
 8004f94:	f010 fa64 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f98:	ee1a 0a10 	vmov	r0, s20
 8004f9c:	9906      	ldr	r1, [sp, #24]
 8004f9e:	f00d fc37 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004fa2:	4620      	mov	r0, r4
 8004fa4:	b02d      	add	sp, #180	; 0xb4
 8004fa6:	ecbd 8b10 	vpop	{d8-d15}
 8004faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004fae:	bf00      	nop

08004fb0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004fb0:	4770      	bx	lr

08004fb2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004fb2:	4770      	bx	lr

08004fb4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004fb4:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004fb8:	6808      	ldr	r0, [r1, #0]
 8004fba:	6849      	ldr	r1, [r1, #4]
 8004fbc:	c303      	stmia	r3!, {r0, r1}
    }
 8004fbe:	4770      	bx	lr

08004fc0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004fc0:	4770      	bx	lr

08004fc2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004fc2:	4770      	bx	lr

08004fc4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004fc4:	6041      	str	r1, [r0, #4]
    }
 8004fc6:	4770      	bx	lr

08004fc8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004fc8:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004fca:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8004fcc:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004fd0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004fd4:	8002      	strh	r2, [r0, #0]
 8004fd6:	8042      	strh	r2, [r0, #2]
 8004fd8:	8084      	strh	r4, [r0, #4]
 8004fda:	80c1      	strh	r1, [r0, #6]
        }
 8004fdc:	bd10      	pop	{r4, pc}

08004fde <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8004fde:	4770      	bx	lr

08004fe0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004fe0:	4770      	bx	lr
	...

08004fe4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004fe4:	4b06      	ldr	r3, [pc, #24]	; (8005000 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004fe6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004fea:	2300      	movs	r3, #0
 8004fec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004ff0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004ff4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004ff8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004ffc:	4770      	bx	lr
 8004ffe:	bf00      	nop
 8005000:	080053a1 	.word	0x080053a1

08005004 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8005004:	2301      	movs	r3, #1
 8005006:	7203      	strb	r3, [r0, #8]
    }
 8005008:	4770      	bx	lr

0800500a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800500a:	4770      	bx	lr

0800500c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800500c:	4770      	bx	lr

0800500e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800500e:	4770      	bx	lr

08005010 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8005010:	4770      	bx	lr

08005012 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8005012:	4770      	bx	lr

08005014 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8005014:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8005016:	6840      	ldr	r0, [r0, #4]
 8005018:	6803      	ldr	r3, [r0, #0]
 800501a:	3110      	adds	r1, #16
 800501c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800501e:	4718      	bx	r3

08005020 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8005020:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8005022:	6840      	ldr	r0, [r0, #4]
 8005024:	6803      	ldr	r3, [r0, #0]
 8005026:	3110      	adds	r1, #16
 8005028:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800502a:	4718      	bx	r3

0800502c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800502c:	4770      	bx	lr

0800502e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800502e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8005030:	6840      	ldr	r0, [r0, #4]
 8005032:	6803      	ldr	r3, [r0, #0]
 8005034:	3110      	adds	r1, #16
 8005036:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005038:	4718      	bx	r3

0800503a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800503a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800503c:	6840      	ldr	r0, [r0, #4]
 800503e:	6803      	ldr	r3, [r0, #0]
 8005040:	3110      	adds	r1, #16
 8005042:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005044:	4718      	bx	r3

08005046 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8005046:	4770      	bx	lr

08005048 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8005048:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800504a:	68c2      	ldr	r2, [r0, #12]
 800504c:	6841      	ldr	r1, [r0, #4]
 800504e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8005050:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8005052:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8005056:	07d2      	lsls	r2, r2, #31
 8005058:	bf48      	it	mi
 800505a:	590a      	ldrmi	r2, [r1, r4]
 800505c:	689b      	ldr	r3, [r3, #8]
    }
 800505e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8005062:	bf48      	it	mi
 8005064:	58d3      	ldrmi	r3, [r2, r3]
 8005066:	4718      	bx	r3

08005068 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8005068:	6843      	ldr	r3, [r0, #4]
 800506a:	b12b      	cbz	r3, 8005078 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800506c:	6883      	ldr	r3, [r0, #8]
 800506e:	b92b      	cbnz	r3, 800507c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8005070:	68c0      	ldr	r0, [r0, #12]
 8005072:	f000 0001 	and.w	r0, r0, #1
 8005076:	4770      	bx	lr
 8005078:	4618      	mov	r0, r3
 800507a:	4770      	bx	lr
 800507c:	2001      	movs	r0, #1
    }
 800507e:	4770      	bx	lr

08005080 <_ZN8touchgfx12NoTransitionD0Ev>:
 8005080:	b510      	push	{r4, lr}
 8005082:	210c      	movs	r1, #12
 8005084:	4604      	mov	r4, r0
 8005086:	f027 fd84 	bl	802cb92 <_ZdlPvj>
 800508a:	4620      	mov	r0, r4
 800508c:	bd10      	pop	{r4, pc}

0800508e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800508e:	b510      	push	{r4, lr}
 8005090:	2110      	movs	r1, #16
 8005092:	4604      	mov	r4, r0
 8005094:	f027 fd7d 	bl	802cb92 <_ZdlPvj>
 8005098:	4620      	mov	r0, r4
 800509a:	bd10      	pop	{r4, pc}

0800509c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800509c:	b510      	push	{r4, lr}
 800509e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80050a2:	4604      	mov	r4, r0
 80050a4:	f027 fd75 	bl	802cb92 <_ZdlPvj>
 80050a8:	4620      	mov	r0, r4
 80050aa:	bd10      	pop	{r4, pc}

080050ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80050ac:	b510      	push	{r4, lr}
 80050ae:	2138      	movs	r1, #56	; 0x38
 80050b0:	4604      	mov	r4, r0
 80050b2:	f027 fd6e 	bl	802cb92 <_ZdlPvj>
 80050b6:	4620      	mov	r0, r4
 80050b8:	bd10      	pop	{r4, pc}

080050ba <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80050ba:	b510      	push	{r4, lr}
 80050bc:	2128      	movs	r1, #40	; 0x28
 80050be:	4604      	mov	r4, r0
 80050c0:	f027 fd67 	bl	802cb92 <_ZdlPvj>
 80050c4:	4620      	mov	r0, r4
 80050c6:	bd10      	pop	{r4, pc}

080050c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80050c8:	b510      	push	{r4, lr}
 80050ca:	2138      	movs	r1, #56	; 0x38
 80050cc:	4604      	mov	r4, r0
 80050ce:	f027 fd60 	bl	802cb92 <_ZdlPvj>
 80050d2:	4620      	mov	r0, r4
 80050d4:	bd10      	pop	{r4, pc}

080050d6 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80050d6:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80050d8:	f013 fc72 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 80050dc:	6803      	ldr	r3, [r0, #0]
    }
 80050de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80050e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80050e4:	4718      	bx	r3
	...

080050e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80050e8:	b513      	push	{r0, r1, r4, lr}
 80050ea:	4604      	mov	r4, r0
        animationCounter++;
 80050ec:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80050ee:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80050f0:	3001      	adds	r0, #1
 80050f2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80050f4:	4298      	cmp	r0, r3
        animationCounter++;
 80050f6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80050f8:	d905      	bls.n	8005106 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80050fa:	2301      	movs	r3, #1
 80050fc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80050fe:	2300      	movs	r3, #0
 8005100:	72a3      	strb	r3, [r4, #10]
    }
 8005102:	b002      	add	sp, #8
 8005104:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005106:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800510a:	2100      	movs	r1, #0
 800510c:	f015 fac8 	bl	801a6a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005110:	f010 0201 	ands.w	r2, r0, #1
 8005114:	b283      	uxth	r3, r0
 8005116:	d12a      	bne.n	800516e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005118:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800511a:	4a19      	ldr	r2, [pc, #100]	; (8005180 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800511c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8005120:	89e3      	ldrh	r3, [r4, #14]
 8005122:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8005124:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8005128:	82a0      	strh	r0, [r4, #20]
 800512a:	2000      	movs	r0, #0
 800512c:	1ad2      	subs	r2, r2, r3
 800512e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8005132:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8005134:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8005136:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005138:	4a12      	ldr	r2, [pc, #72]	; (8005184 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800513a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800513e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005140:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8005144:	691b      	ldr	r3, [r3, #16]
 8005146:	f8ad 1000 	strh.w	r1, [sp]
 800514a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800514e:	4669      	mov	r1, sp
 8005150:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8005152:	7aa3      	ldrb	r3, [r4, #10]
 8005154:	2b01      	cmp	r3, #1
 8005156:	d1d4      	bne.n	8005102 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8005158:	4b0b      	ldr	r3, [pc, #44]	; (8005188 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800515a:	781b      	ldrb	r3, [r3, #0]
 800515c:	2b00      	cmp	r3, #0
 800515e:	d0d0      	beq.n	8005102 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005160:	f013 fc2e 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8005164:	b002      	add	sp, #8
 8005166:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800516a:	f013 bc2f 	b.w	80189cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800516e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8005172:	2800      	cmp	r0, #0
 8005174:	bfd8      	it	le
 8005176:	460a      	movle	r2, r1
 8005178:	4413      	add	r3, r2
 800517a:	81e3      	strh	r3, [r4, #14]
 800517c:	e7cd      	b.n	800511a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800517e:	bf00      	nop
 8005180:	20013830 	.word	0x20013830
 8005184:	20013832 	.word	0x20013832
 8005188:	2001383a 	.word	0x2001383a

0800518c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800518c:	b510      	push	{r4, lr}
 800518e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8005190:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8005194:	b158      	cbz	r0, 80051ae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8005196:	6803      	ldr	r3, [r0, #0]
 8005198:	68db      	ldr	r3, [r3, #12]
 800519a:	4798      	blx	r3
 800519c:	b138      	cbz	r0, 80051ae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800519e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80051a2:	6803      	ldr	r3, [r0, #0]
 80051a4:	689b      	ldr	r3, [r3, #8]
 80051a6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80051a8:	2300      	movs	r3, #0
 80051aa:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80051ae:	bd10      	pop	{r4, pc}

080051b0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80051b0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051b4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80051b8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051ba:	68a8      	ldr	r0, [r5, #8]
 80051bc:	6803      	ldr	r3, [r0, #0]
 80051be:	6a1b      	ldr	r3, [r3, #32]
 80051c0:	4798      	blx	r3
 80051c2:	2897      	cmp	r0, #151	; 0x97
 80051c4:	d805      	bhi.n	80051d2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80051c6:	4b46      	ldr	r3, [pc, #280]	; (80052e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80051c8:	4a46      	ldr	r2, [pc, #280]	; (80052e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051ca:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80051cc:	4846      	ldr	r0, [pc, #280]	; (80052e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80051ce:	f028 fbc7 	bl	802d960 <__assert_func>
 80051d2:	6868      	ldr	r0, [r5, #4]
 80051d4:	6803      	ldr	r3, [r0, #0]
 80051d6:	6a1b      	ldr	r3, [r3, #32]
 80051d8:	4798      	blx	r3
 80051da:	280f      	cmp	r0, #15
 80051dc:	d803      	bhi.n	80051e6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80051de:	4b43      	ldr	r3, [pc, #268]	; (80052ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80051e0:	4a40      	ldr	r2, [pc, #256]	; (80052e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051e2:	21a4      	movs	r1, #164	; 0xa4
 80051e4:	e7f2      	b.n	80051cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80051e6:	68e8      	ldr	r0, [r5, #12]
 80051e8:	6803      	ldr	r3, [r0, #0]
 80051ea:	6a1b      	ldr	r3, [r3, #32]
 80051ec:	4798      	blx	r3
 80051ee:	280b      	cmp	r0, #11
 80051f0:	d803      	bhi.n	80051fa <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80051f2:	4b3f      	ldr	r3, [pc, #252]	; (80052f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80051f4:	4a3b      	ldr	r2, [pc, #236]	; (80052e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051f6:	21a5      	movs	r1, #165	; 0xa5
 80051f8:	e7e8      	b.n	80051cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80051fa:	f013 fbe1 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051fe:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80052f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8005202:	3004      	adds	r0, #4
 8005204:	f013 fc42 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005208:	f8d9 0000 	ldr.w	r0, [r9]
 800520c:	b110      	cbz	r0, 8005214 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800520e:	6803      	ldr	r3, [r0, #0]
 8005210:	68db      	ldr	r3, [r3, #12]
 8005212:	4798      	blx	r3
    if (*currentTrans)
 8005214:	f8d9 0000 	ldr.w	r0, [r9]
 8005218:	b110      	cbz	r0, 8005220 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800521a:	6803      	ldr	r3, [r0, #0]
 800521c:	681b      	ldr	r3, [r3, #0]
 800521e:	4798      	blx	r3
    if (*currentScreen)
 8005220:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80052fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8005224:	f8d8 0000 	ldr.w	r0, [r8]
 8005228:	b110      	cbz	r0, 8005230 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800522a:	6803      	ldr	r3, [r0, #0]
 800522c:	695b      	ldr	r3, [r3, #20]
 800522e:	4798      	blx	r3
    if (*currentPresenter)
 8005230:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005234:	b110      	cbz	r0, 800523c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8005236:	6803      	ldr	r3, [r0, #0]
 8005238:	685b      	ldr	r3, [r3, #4]
 800523a:	4798      	blx	r3
    if (*currentScreen)
 800523c:	f8d8 0000 	ldr.w	r0, [r8]
 8005240:	b110      	cbz	r0, 8005248 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8005242:	6803      	ldr	r3, [r0, #0]
 8005244:	681b      	ldr	r3, [r3, #0]
 8005246:	4798      	blx	r3
    if (*currentPresenter)
 8005248:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800524c:	b110      	cbz	r0, 8005254 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800524e:	6803      	ldr	r3, [r0, #0]
 8005250:	689b      	ldr	r3, [r3, #8]
 8005252:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005254:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8005256:	6803      	ldr	r3, [r0, #0]
 8005258:	2100      	movs	r1, #0
 800525a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800525c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800525e:	f04f 0b00 	mov.w	fp, #0
 8005262:	4b24      	ldr	r3, [pc, #144]	; (80052f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8005264:	6003      	str	r3, [r0, #0]
 8005266:	4604      	mov	r4, r0
 8005268:	f8c0 b004 	str.w	fp, [r0, #4]
 800526c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005270:	68a8      	ldr	r0, [r5, #8]
 8005272:	6803      	ldr	r3, [r0, #0]
 8005274:	4659      	mov	r1, fp
 8005276:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005278:	4798      	blx	r3
 800527a:	4606      	mov	r6, r0
 800527c:	f005 fee4 	bl	800b048 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005280:	6868      	ldr	r0, [r5, #4]
 8005282:	6803      	ldr	r3, [r0, #0]
 8005284:	4659      	mov	r1, fp
 8005286:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005288:	4798      	blx	r3
 800528a:	4631      	mov	r1, r6
 800528c:	4605      	mov	r5, r0
 800528e:	f005 feb7 	bl	800b000 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8005292:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005296:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800529a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800529e:	b1e5      	cbz	r5, 80052da <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80052a0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80052a2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80052a6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80052a8:	f8c5 a008 	str.w	sl, [r5, #8]
 80052ac:	4630      	mov	r0, r6
 80052ae:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80052b0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80052b2:	4798      	blx	r3
    newPresenter->activate();
 80052b4:	682b      	ldr	r3, [r5, #0]
 80052b6:	4628      	mov	r0, r5
 80052b8:	681b      	ldr	r3, [r3, #0]
 80052ba:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052bc:	4621      	mov	r1, r4
 80052be:	4630      	mov	r0, r6
 80052c0:	f015 f9aa 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052c4:	6823      	ldr	r3, [r4, #0]
 80052c6:	4620      	mov	r0, r4
 80052c8:	691b      	ldr	r3, [r3, #16]
 80052ca:	4798      	blx	r3
    newTransition->invalidate();
 80052cc:	6823      	ldr	r3, [r4, #0]
 80052ce:	695b      	ldr	r3, [r3, #20]
 80052d0:	4620      	mov	r0, r4
}
 80052d2:	b001      	add	sp, #4
 80052d4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052d8:	4718      	bx	r3
    model->bind(newPresenter);
 80052da:	462b      	mov	r3, r5
 80052dc:	e7e1      	b.n	80052a2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80052de:	bf00      	nop
 80052e0:	0802f694 	.word	0x0802f694
 80052e4:	0802f722 	.word	0x0802f722
 80052e8:	0802f830 	.word	0x0802f830
 80052ec:	0802f877 	.word	0x0802f877
 80052f0:	0802f91a 	.word	0x0802f91a
 80052f4:	080309d4 	.word	0x080309d4
 80052f8:	20013884 	.word	0x20013884
 80052fc:	20013880 	.word	0x20013880

08005300 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8005300:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005302:	4604      	mov	r4, r0
        animationCounter++;
 8005304:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8005306:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8005308:	3001      	adds	r0, #1
 800530a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800530c:	4298      	cmp	r0, r3
        animationCounter++;
 800530e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8005310:	d905      	bls.n	800531e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8005312:	2301      	movs	r3, #1
 8005314:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8005316:	2300      	movs	r3, #0
 8005318:	72a3      	strb	r3, [r4, #10]
    }
 800531a:	b003      	add	sp, #12
 800531c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800531e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005322:	2100      	movs	r1, #0
 8005324:	f015 f9bc 	bl	801a6a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005328:	f010 0201 	ands.w	r2, r0, #1
 800532c:	b283      	uxth	r3, r0
 800532e:	d128      	bne.n	8005382 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005330:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005332:	4b18      	ldr	r3, [pc, #96]	; (8005394 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8005334:	4818      	ldr	r0, [pc, #96]	; (8005398 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005336:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8005338:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800533a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800533c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8005340:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005344:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8005346:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8005348:	442b      	add	r3, r5
 800534a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800534c:	b212      	sxth	r2, r2
 800534e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8005352:	6803      	ldr	r3, [r0, #0]
 8005354:	8322      	strh	r2, [r4, #24]
 8005356:	f8ad 2000 	strh.w	r2, [sp]
 800535a:	2200      	movs	r2, #0
 800535c:	691b      	ldr	r3, [r3, #16]
 800535e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8005362:	4669      	mov	r1, sp
 8005364:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8005366:	7aa3      	ldrb	r3, [r4, #10]
 8005368:	2b01      	cmp	r3, #1
 800536a:	d1d6      	bne.n	800531a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 800536c:	4b0b      	ldr	r3, [pc, #44]	; (800539c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800536e:	781b      	ldrb	r3, [r3, #0]
 8005370:	2b00      	cmp	r3, #0
 8005372:	d0d2      	beq.n	800531a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005374:	f013 fb24 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8005378:	b003      	add	sp, #12
 800537a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800537e:	f013 bb25 	b.w	80189cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8005382:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8005386:	2800      	cmp	r0, #0
 8005388:	bfd8      	it	le
 800538a:	460a      	movle	r2, r1
 800538c:	4413      	add	r3, r2
 800538e:	81e3      	strh	r3, [r4, #14]
 8005390:	e7cf      	b.n	8005332 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8005392:	bf00      	nop
 8005394:	20013830 	.word	0x20013830
 8005398:	20013832 	.word	0x20013832
 800539c:	2001383a 	.word	0x2001383a

080053a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80053a0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80053a4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80053a8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80053aa:	68a8      	ldr	r0, [r5, #8]
 80053ac:	6803      	ldr	r3, [r0, #0]
 80053ae:	6a1b      	ldr	r3, [r3, #32]
 80053b0:	4798      	blx	r3
 80053b2:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 80053b6:	d205      	bcs.n	80053c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x24>
 80053b8:	4b45      	ldr	r3, [pc, #276]	; (80054d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x130>)
 80053ba:	4a46      	ldr	r2, [pc, #280]	; (80054d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053bc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053be:	4846      	ldr	r0, [pc, #280]	; (80054d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80053c0:	f028 face 	bl	802d960 <__assert_func>
 80053c4:	6868      	ldr	r0, [r5, #4]
 80053c6:	6803      	ldr	r3, [r0, #0]
 80053c8:	6a1b      	ldr	r3, [r3, #32]
 80053ca:	4798      	blx	r3
 80053cc:	280f      	cmp	r0, #15
 80053ce:	d803      	bhi.n	80053d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x38>
 80053d0:	4b42      	ldr	r3, [pc, #264]	; (80054dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80053d2:	4a40      	ldr	r2, [pc, #256]	; (80054d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053d4:	21a4      	movs	r1, #164	; 0xa4
 80053d6:	e7f2      	b.n	80053be <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053d8:	68e8      	ldr	r0, [r5, #12]
 80053da:	6803      	ldr	r3, [r0, #0]
 80053dc:	6a1b      	ldr	r3, [r3, #32]
 80053de:	4798      	blx	r3
 80053e0:	280b      	cmp	r0, #11
 80053e2:	d803      	bhi.n	80053ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4c>
 80053e4:	4b3e      	ldr	r3, [pc, #248]	; (80054e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80053e6:	4a3b      	ldr	r2, [pc, #236]	; (80054d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053e8:	21a5      	movs	r1, #165	; 0xa5
 80053ea:	e7e8      	b.n	80053be <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80053ec:	f013 fae8 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053f0:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 80054e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>
 80053f4:	3004      	adds	r0, #4
 80053f6:	f013 fb49 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053fa:	f8d9 0000 	ldr.w	r0, [r9]
 80053fe:	b110      	cbz	r0, 8005406 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8005400:	6803      	ldr	r3, [r0, #0]
 8005402:	68db      	ldr	r3, [r3, #12]
 8005404:	4798      	blx	r3
    if (*currentTrans)
 8005406:	f8d9 0000 	ldr.w	r0, [r9]
 800540a:	b110      	cbz	r0, 8005412 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 800540c:	6803      	ldr	r3, [r0, #0]
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	4798      	blx	r3
    if (*currentScreen)
 8005412:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80054ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8005416:	f8d8 0000 	ldr.w	r0, [r8]
 800541a:	b110      	cbz	r0, 8005422 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800541c:	6803      	ldr	r3, [r0, #0]
 800541e:	695b      	ldr	r3, [r3, #20]
 8005420:	4798      	blx	r3
    if (*currentPresenter)
 8005422:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005426:	b110      	cbz	r0, 800542e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005428:	6803      	ldr	r3, [r0, #0]
 800542a:	685b      	ldr	r3, [r3, #4]
 800542c:	4798      	blx	r3
    if (*currentScreen)
 800542e:	f8d8 0000 	ldr.w	r0, [r8]
 8005432:	b110      	cbz	r0, 800543a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005434:	6803      	ldr	r3, [r0, #0]
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	4798      	blx	r3
    if (*currentPresenter)
 800543a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800543e:	b110      	cbz	r0, 8005446 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005440:	6803      	ldr	r3, [r0, #0]
 8005442:	689b      	ldr	r3, [r3, #8]
 8005444:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005446:	68e8      	ldr	r0, [r5, #12]
 8005448:	6803      	ldr	r3, [r0, #0]
 800544a:	2100      	movs	r1, #0
 800544c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800544e:	4798      	blx	r3
 8005450:	f04f 0b00 	mov.w	fp, #0
 8005454:	4b23      	ldr	r3, [pc, #140]	; (80054e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8005456:	6003      	str	r3, [r0, #0]
 8005458:	4604      	mov	r4, r0
 800545a:	f8c0 b004 	str.w	fp, [r0, #4]
 800545e:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005462:	68a8      	ldr	r0, [r5, #8]
 8005464:	6803      	ldr	r3, [r0, #0]
 8005466:	4659      	mov	r1, fp
 8005468:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800546a:	4798      	blx	r3
 800546c:	4606      	mov	r6, r0
 800546e:	f005 faa7 	bl	800a9c0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005472:	6868      	ldr	r0, [r5, #4]
 8005474:	6803      	ldr	r3, [r0, #0]
 8005476:	4659      	mov	r1, fp
 8005478:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800547a:	4798      	blx	r3
 800547c:	4631      	mov	r1, r6
 800547e:	4605      	mov	r5, r0
 8005480:	f005 fa78 	bl	800a974 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8005484:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005488:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800548c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005490:	b1e5      	cbz	r5, 80054cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12c>
 8005492:	1d2b      	adds	r3, r5, #4
 8005494:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005498:	6833      	ldr	r3, [r6, #0]
 800549a:	f8c5 a008 	str.w	sl, [r5, #8]
 800549e:	4630      	mov	r0, r6
 80054a0:	68db      	ldr	r3, [r3, #12]
 80054a2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80054a4:	4798      	blx	r3
    newPresenter->activate();
 80054a6:	682b      	ldr	r3, [r5, #0]
 80054a8:	4628      	mov	r0, r5
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80054ae:	4621      	mov	r1, r4
 80054b0:	4630      	mov	r0, r6
 80054b2:	f015 f8b1 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80054b6:	6823      	ldr	r3, [r4, #0]
 80054b8:	4620      	mov	r0, r4
 80054ba:	691b      	ldr	r3, [r3, #16]
 80054bc:	4798      	blx	r3
    newTransition->invalidate();
 80054be:	6823      	ldr	r3, [r4, #0]
 80054c0:	695b      	ldr	r3, [r3, #20]
 80054c2:	4620      	mov	r0, r4
}
 80054c4:	b001      	add	sp, #4
 80054c6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054ca:	4718      	bx	r3
    model->bind(newPresenter);
 80054cc:	462b      	mov	r3, r5
 80054ce:	e7e1      	b.n	8005494 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf4>
 80054d0:	0802f694 	.word	0x0802f694
 80054d4:	0802f9bd 	.word	0x0802f9bd
 80054d8:	0802f830 	.word	0x0802f830
 80054dc:	0802f877 	.word	0x0802f877
 80054e0:	0802f91a 	.word	0x0802f91a
 80054e4:	080309d4 	.word	0x080309d4
 80054e8:	20013884 	.word	0x20013884
 80054ec:	20013880 	.word	0x20013880

080054f0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80054f0:	4b04      	ldr	r3, [pc, #16]	; (8005504 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80054f8:	b10a      	cbz	r2, 80054fe <_ZN8touchgfx3HAL3lcdEv+0xe>
 80054fa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80054fc:	b900      	cbnz	r0, 8005500 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80054fe:	6898      	ldr	r0, [r3, #8]
    }
 8005500:	4770      	bx	lr
 8005502:	bf00      	nop
 8005504:	2001383c 	.word	0x2001383c

08005508 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8005508:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800550a:	4604      	mov	r4, r0
 800550c:	4617      	mov	r7, r2
 800550e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8005510:	f013 fb8a 	bl	8018c28 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8005514:	4b10      	ldr	r3, [pc, #64]	; (8005558 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8005516:	601c      	str	r4, [r3, #0]
      model(m)
 8005518:	4b10      	ldr	r3, [pc, #64]	; (800555c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800551a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800551c:	4b10      	ldr	r3, [pc, #64]	; (8005560 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800551e:	2500      	movs	r5, #0
 8005520:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8005524:	4b0f      	ldr	r3, [pc, #60]	; (8005564 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8005526:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800552a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800552c:	6803      	ldr	r3, [r0, #0]
 800552e:	2101      	movs	r1, #1
 8005530:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8005532:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8005536:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800553a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800553c:	4628      	mov	r0, r5
 800553e:	f005 f873 	bl	800a628 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8005542:	f7ff ffd5 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8005546:	f01c ff72 	bl	802242e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800554a:	f7ff ffd1 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 800554e:	f01c ffe9 	bl	8022524 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8005552:	4620      	mov	r0, r4
 8005554:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005556:	bf00      	nop
 8005558:	20013890 	.word	0x20013890
 800555c:	08030980 	.word	0x08030980
 8005560:	08030968 	.word	0x08030968
 8005564:	2001383c 	.word	0x2001383c

08005568 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005568:	4b06      	ldr	r3, [pc, #24]	; (8005584 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800556a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800556e:	2300      	movs	r3, #0
 8005570:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005574:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005578:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800557c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005580:	4770      	bx	lr
 8005582:	bf00      	nop
 8005584:	080053a1 	.word	0x080053a1

08005588 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8005588:	4b06      	ldr	r3, [pc, #24]	; (80055a4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 800558a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800558e:	2300      	movs	r3, #0
 8005590:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005594:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005598:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800559c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055a0:	4770      	bx	lr
 80055a2:	bf00      	nop
 80055a4:	08005a0d 	.word	0x08005a0d

080055a8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80055a8:	4b06      	ldr	r3, [pc, #24]	; (80055c4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80055aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055ae:	2300      	movs	r3, #0
 80055b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055c0:	4770      	bx	lr
 80055c2:	bf00      	nop
 80055c4:	080065b1 	.word	0x080065b1

080055c8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80055c8:	4b06      	ldr	r3, [pc, #24]	; (80055e4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80055ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055ce:	2300      	movs	r3, #0
 80055d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055e0:	4770      	bx	lr
 80055e2:	bf00      	nop
 80055e4:	080058cd 	.word	0x080058cd

080055e8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80055e8:	4b06      	ldr	r3, [pc, #24]	; (8005604 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80055ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055ee:	2300      	movs	r3, #0
 80055f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005600:	4770      	bx	lr
 8005602:	bf00      	nop
 8005604:	08006471 	.word	0x08006471

08005608 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8005608:	4b06      	ldr	r3, [pc, #24]	; (8005624 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800560a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800560e:	2300      	movs	r3, #0
 8005610:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005614:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005618:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800561c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005620:	4770      	bx	lr
 8005622:	bf00      	nop
 8005624:	08006331 	.word	0x08006331

08005628 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8005628:	4b06      	ldr	r3, [pc, #24]	; (8005644 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800562a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800562e:	2300      	movs	r3, #0
 8005630:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005634:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005638:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800563c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005640:	4770      	bx	lr
 8005642:	bf00      	nop
 8005644:	080061f1 	.word	0x080061f1

08005648 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8005648:	4b06      	ldr	r3, [pc, #24]	; (8005664 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800564a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800564e:	2300      	movs	r3, #0
 8005650:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005654:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005658:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800565c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005660:	4770      	bx	lr
 8005662:	bf00      	nop
 8005664:	080060b1 	.word	0x080060b1

08005668 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8005668:	4b06      	ldr	r3, [pc, #24]	; (8005684 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 800566a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800566e:	2300      	movs	r3, #0
 8005670:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005674:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005678:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800567c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005680:	4770      	bx	lr
 8005682:	bf00      	nop
 8005684:	0800578d 	.word	0x0800578d

08005688 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8005688:	4b06      	ldr	r3, [pc, #24]	; (80056a4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 800568a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800568e:	2300      	movs	r3, #0
 8005690:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005694:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005698:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800569c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056a0:	4770      	bx	lr
 80056a2:	bf00      	nop
 80056a4:	08005f71 	.word	0x08005f71

080056a8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 80056a8:	4b06      	ldr	r3, [pc, #24]	; (80056c4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 80056aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056ae:	2300      	movs	r3, #0
 80056b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056c0:	4770      	bx	lr
 80056c2:	bf00      	nop
 80056c4:	08005e31 	.word	0x08005e31

080056c8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80056c8:	4b06      	ldr	r3, [pc, #24]	; (80056e4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80056ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056ce:	2300      	movs	r3, #0
 80056d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056e0:	4770      	bx	lr
 80056e2:	bf00      	nop
 80056e4:	08005cf1 	.word	0x08005cf1

080056e8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80056e8:	4b06      	ldr	r3, [pc, #24]	; (8005704 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80056ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056ee:	2300      	movs	r3, #0
 80056f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005700:	4770      	bx	lr
 8005702:	bf00      	nop
 8005704:	08005bb1 	.word	0x08005bb1

08005708 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8005708:	4b06      	ldr	r3, [pc, #24]	; (8005724 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 800570a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800570e:	2300      	movs	r3, #0
 8005710:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005714:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005718:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800571c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005720:	4770      	bx	lr
 8005722:	bf00      	nop
 8005724:	080051b1 	.word	0x080051b1

08005728 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8005728:	6803      	ldr	r3, [r0, #0]
 800572a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800572c:	4718      	bx	r3
	...

08005730 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8005730:	4b12      	ldr	r3, [pc, #72]	; (800577c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005732:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005734:	6003      	str	r3, [r0, #0]
 8005736:	f44f 7380 	mov.w	r3, #256	; 0x100
 800573a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800573c:	4b10      	ldr	r3, [pc, #64]	; (8005780 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800573e:	7241      	strb	r1, [r0, #9]
 8005740:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005742:	4910      	ldr	r1, [pc, #64]	; (8005784 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005744:	4b10      	ldr	r3, [pc, #64]	; (8005788 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005746:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800574a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800574e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005750:	2200      	movs	r2, #0
 8005752:	6042      	str	r2, [r0, #4]
 8005754:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005756:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005758:	81c2      	strh	r2, [r0, #14]
          solid()
 800575a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800575e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005762:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005766:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800576a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800576c:	9100      	str	r1, [sp, #0]
 800576e:	3010      	adds	r0, #16
 8005770:	4611      	mov	r1, r2
 8005772:	f7fd ff8e 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005776:	4620      	mov	r0, r4
 8005778:	b002      	add	sp, #8
 800577a:	bd10      	pop	{r4, pc}
 800577c:	08030a1c 	.word	0x08030a1c
 8005780:	08030900 	.word	0x08030900
 8005784:	20013832 	.word	0x20013832
 8005788:	20013830 	.word	0x20013830

0800578c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 800578c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005790:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005794:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005796:	68a0      	ldr	r0, [r4, #8]
 8005798:	6803      	ldr	r3, [r0, #0]
 800579a:	6a1b      	ldr	r3, [r3, #32]
 800579c:	4798      	blx	r3
 800579e:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80057a2:	4298      	cmp	r0, r3
 80057a4:	d805      	bhi.n	80057b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x26>
 80057a6:	4b42      	ldr	r3, [pc, #264]	; (80058b0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 80057a8:	4a42      	ldr	r2, [pc, #264]	; (80058b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80057aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80057ac:	4842      	ldr	r0, [pc, #264]	; (80058b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 80057ae:	f028 f8d7 	bl	802d960 <__assert_func>
 80057b2:	6860      	ldr	r0, [r4, #4]
 80057b4:	6803      	ldr	r3, [r0, #0]
 80057b6:	6a1b      	ldr	r3, [r3, #32]
 80057b8:	4798      	blx	r3
 80057ba:	280f      	cmp	r0, #15
 80057bc:	d803      	bhi.n	80057c6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x3a>
 80057be:	4b3f      	ldr	r3, [pc, #252]	; (80058bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 80057c0:	4a3c      	ldr	r2, [pc, #240]	; (80058b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80057c2:	21a4      	movs	r1, #164	; 0xa4
 80057c4:	e7f2      	b.n	80057ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80057c6:	68e0      	ldr	r0, [r4, #12]
 80057c8:	6803      	ldr	r3, [r0, #0]
 80057ca:	6a1b      	ldr	r3, [r3, #32]
 80057cc:	4798      	blx	r3
 80057ce:	2837      	cmp	r0, #55	; 0x37
 80057d0:	d803      	bhi.n	80057da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4e>
 80057d2:	4b3b      	ldr	r3, [pc, #236]	; (80058c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80057d4:	4a37      	ldr	r2, [pc, #220]	; (80058b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80057d6:	21a5      	movs	r1, #165	; 0xa5
 80057d8:	e7e8      	b.n	80057ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80057da:	f013 f8f1 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80057de:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80058c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80057e2:	3004      	adds	r0, #4
 80057e4:	f013 f952 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057e8:	f8d9 0000 	ldr.w	r0, [r9]
 80057ec:	b110      	cbz	r0, 80057f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 80057ee:	6803      	ldr	r3, [r0, #0]
 80057f0:	68db      	ldr	r3, [r3, #12]
 80057f2:	4798      	blx	r3
    if (*currentTrans)
 80057f4:	f8d9 0000 	ldr.w	r0, [r9]
 80057f8:	b110      	cbz	r0, 8005800 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 80057fa:	6803      	ldr	r3, [r0, #0]
 80057fc:	681b      	ldr	r3, [r3, #0]
 80057fe:	4798      	blx	r3
    if (*currentScreen)
 8005800:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80058c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8005804:	f8d8 0000 	ldr.w	r0, [r8]
 8005808:	b110      	cbz	r0, 8005810 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800580a:	6803      	ldr	r3, [r0, #0]
 800580c:	695b      	ldr	r3, [r3, #20]
 800580e:	4798      	blx	r3
    if (*currentPresenter)
 8005810:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005814:	b110      	cbz	r0, 800581c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005816:	6803      	ldr	r3, [r0, #0]
 8005818:	685b      	ldr	r3, [r3, #4]
 800581a:	4798      	blx	r3
    if (*currentScreen)
 800581c:	f8d8 0000 	ldr.w	r0, [r8]
 8005820:	b110      	cbz	r0, 8005828 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005822:	6803      	ldr	r3, [r0, #0]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	4798      	blx	r3
    if (*currentPresenter)
 8005828:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800582c:	b110      	cbz	r0, 8005834 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800582e:	6803      	ldr	r3, [r0, #0]
 8005830:	689b      	ldr	r3, [r3, #8]
 8005832:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005834:	68e0      	ldr	r0, [r4, #12]
 8005836:	2100      	movs	r1, #0
 8005838:	f7ff ff76 	bl	8005728 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800583c:	2114      	movs	r1, #20
 800583e:	4605      	mov	r5, r0
 8005840:	f7ff ff76 	bl	8005730 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005844:	68a0      	ldr	r0, [r4, #8]
 8005846:	6803      	ldr	r3, [r0, #0]
 8005848:	2100      	movs	r1, #0
 800584a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800584c:	4798      	blx	r3
 800584e:	4606      	mov	r6, r0
 8005850:	f005 f976 	bl	800ab40 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005854:	6860      	ldr	r0, [r4, #4]
 8005856:	6803      	ldr	r3, [r0, #0]
 8005858:	2100      	movs	r1, #0
 800585a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800585c:	4798      	blx	r3
 800585e:	4631      	mov	r1, r6
 8005860:	4604      	mov	r4, r0
 8005862:	f005 f947 	bl	800aaf4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8005866:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800586a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800586e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005872:	b1dc      	cbz	r4, 80058ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x120>
 8005874:	1d23      	adds	r3, r4, #4
 8005876:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800587a:	6833      	ldr	r3, [r6, #0]
 800587c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005880:	4630      	mov	r0, r6
 8005882:	68db      	ldr	r3, [r3, #12]
 8005884:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005886:	4798      	blx	r3
    newPresenter->activate();
 8005888:	6823      	ldr	r3, [r4, #0]
 800588a:	4620      	mov	r0, r4
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005890:	4629      	mov	r1, r5
 8005892:	4630      	mov	r0, r6
 8005894:	f014 fec0 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005898:	682b      	ldr	r3, [r5, #0]
 800589a:	4628      	mov	r0, r5
 800589c:	691b      	ldr	r3, [r3, #16]
 800589e:	4798      	blx	r3
    newTransition->invalidate();
 80058a0:	682b      	ldr	r3, [r5, #0]
 80058a2:	4628      	mov	r0, r5
 80058a4:	695b      	ldr	r3, [r3, #20]
}
 80058a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058aa:	4718      	bx	r3
    model->bind(newPresenter);
 80058ac:	4623      	mov	r3, r4
 80058ae:	e7e2      	b.n	8005876 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xea>
 80058b0:	0802f694 	.word	0x0802f694
 80058b4:	0802fac5 	.word	0x0802fac5
 80058b8:	0802f830 	.word	0x0802f830
 80058bc:	0802f877 	.word	0x0802f877
 80058c0:	0802f91a 	.word	0x0802f91a
 80058c4:	20013884 	.word	0x20013884
 80058c8:	20013880 	.word	0x20013880

080058cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80058cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80058d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058d6:	68a0      	ldr	r0, [r4, #8]
 80058d8:	6803      	ldr	r3, [r0, #0]
 80058da:	6a1b      	ldr	r3, [r3, #32]
 80058dc:	4798      	blx	r3
 80058de:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80058e2:	4298      	cmp	r0, r3
 80058e4:	d805      	bhi.n	80058f2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x26>
 80058e6:	4b42      	ldr	r3, [pc, #264]	; (80059f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80058e8:	4a42      	ldr	r2, [pc, #264]	; (80059f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058ec:	4842      	ldr	r0, [pc, #264]	; (80059f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80058ee:	f028 f837 	bl	802d960 <__assert_func>
 80058f2:	6860      	ldr	r0, [r4, #4]
 80058f4:	6803      	ldr	r3, [r0, #0]
 80058f6:	6a1b      	ldr	r3, [r3, #32]
 80058f8:	4798      	blx	r3
 80058fa:	280f      	cmp	r0, #15
 80058fc:	d803      	bhi.n	8005906 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x3a>
 80058fe:	4b3f      	ldr	r3, [pc, #252]	; (80059fc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8005900:	4a3c      	ldr	r2, [pc, #240]	; (80059f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8005902:	21a4      	movs	r1, #164	; 0xa4
 8005904:	e7f2      	b.n	80058ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005906:	68e0      	ldr	r0, [r4, #12]
 8005908:	6803      	ldr	r3, [r0, #0]
 800590a:	6a1b      	ldr	r3, [r3, #32]
 800590c:	4798      	blx	r3
 800590e:	2837      	cmp	r0, #55	; 0x37
 8005910:	d803      	bhi.n	800591a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4e>
 8005912:	4b3b      	ldr	r3, [pc, #236]	; (8005a00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8005914:	4a37      	ldr	r2, [pc, #220]	; (80059f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8005916:	21a5      	movs	r1, #165	; 0xa5
 8005918:	e7e8      	b.n	80058ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800591a:	f013 f851 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800591e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005a04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8005922:	3004      	adds	r0, #4
 8005924:	f013 f8b2 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005928:	f8d9 0000 	ldr.w	r0, [r9]
 800592c:	b110      	cbz	r0, 8005934 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800592e:	6803      	ldr	r3, [r0, #0]
 8005930:	68db      	ldr	r3, [r3, #12]
 8005932:	4798      	blx	r3
    if (*currentTrans)
 8005934:	f8d9 0000 	ldr.w	r0, [r9]
 8005938:	b110      	cbz	r0, 8005940 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 800593a:	6803      	ldr	r3, [r0, #0]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	4798      	blx	r3
    if (*currentScreen)
 8005940:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005a08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8005944:	f8d8 0000 	ldr.w	r0, [r8]
 8005948:	b110      	cbz	r0, 8005950 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800594a:	6803      	ldr	r3, [r0, #0]
 800594c:	695b      	ldr	r3, [r3, #20]
 800594e:	4798      	blx	r3
    if (*currentPresenter)
 8005950:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005954:	b110      	cbz	r0, 800595c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005956:	6803      	ldr	r3, [r0, #0]
 8005958:	685b      	ldr	r3, [r3, #4]
 800595a:	4798      	blx	r3
    if (*currentScreen)
 800595c:	f8d8 0000 	ldr.w	r0, [r8]
 8005960:	b110      	cbz	r0, 8005968 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005962:	6803      	ldr	r3, [r0, #0]
 8005964:	681b      	ldr	r3, [r3, #0]
 8005966:	4798      	blx	r3
    if (*currentPresenter)
 8005968:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800596c:	b110      	cbz	r0, 8005974 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800596e:	6803      	ldr	r3, [r0, #0]
 8005970:	689b      	ldr	r3, [r3, #8]
 8005972:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005974:	68e0      	ldr	r0, [r4, #12]
 8005976:	2100      	movs	r1, #0
 8005978:	f7ff fed6 	bl	8005728 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800597c:	2114      	movs	r1, #20
 800597e:	4605      	mov	r5, r0
 8005980:	f7ff fed6 	bl	8005730 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005984:	68a0      	ldr	r0, [r4, #8]
 8005986:	6803      	ldr	r3, [r0, #0]
 8005988:	2100      	movs	r1, #0
 800598a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800598c:	4798      	blx	r3
 800598e:	4606      	mov	r6, r0
 8005990:	f005 f876 	bl	800aa80 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005994:	6860      	ldr	r0, [r4, #4]
 8005996:	6803      	ldr	r3, [r0, #0]
 8005998:	2100      	movs	r1, #0
 800599a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800599c:	4798      	blx	r3
 800599e:	4631      	mov	r1, r6
 80059a0:	4604      	mov	r4, r0
 80059a2:	f005 f847 	bl	800aa34 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80059a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80059aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80059ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80059b2:	b1dc      	cbz	r4, 80059ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x120>
 80059b4:	1d23      	adds	r3, r4, #4
 80059b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80059ba:	6833      	ldr	r3, [r6, #0]
 80059bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80059c0:	4630      	mov	r0, r6
 80059c2:	68db      	ldr	r3, [r3, #12]
 80059c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80059c6:	4798      	blx	r3
    newPresenter->activate();
 80059c8:	6823      	ldr	r3, [r4, #0]
 80059ca:	4620      	mov	r0, r4
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059d0:	4629      	mov	r1, r5
 80059d2:	4630      	mov	r0, r6
 80059d4:	f014 fe20 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059d8:	682b      	ldr	r3, [r5, #0]
 80059da:	4628      	mov	r0, r5
 80059dc:	691b      	ldr	r3, [r3, #16]
 80059de:	4798      	blx	r3
    newTransition->invalidate();
 80059e0:	682b      	ldr	r3, [r5, #0]
 80059e2:	4628      	mov	r0, r5
 80059e4:	695b      	ldr	r3, [r3, #20]
}
 80059e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059ea:	4718      	bx	r3
    model->bind(newPresenter);
 80059ec:	4623      	mov	r3, r4
 80059ee:	e7e2      	b.n	80059b6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xea>
 80059f0:	0802f694 	.word	0x0802f694
 80059f4:	0802fbf5 	.word	0x0802fbf5
 80059f8:	0802f830 	.word	0x0802f830
 80059fc:	0802f877 	.word	0x0802f877
 8005a00:	0802f91a 	.word	0x0802f91a
 8005a04:	20013884 	.word	0x20013884
 8005a08:	20013880 	.word	0x20013880

08005a0c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8005a0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005a10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005a14:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005a16:	68a0      	ldr	r0, [r4, #8]
 8005a18:	6803      	ldr	r3, [r0, #0]
 8005a1a:	6a1b      	ldr	r3, [r3, #32]
 8005a1c:	4798      	blx	r3
 8005a1e:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 8005a22:	d205      	bcs.n	8005a30 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x24>
 8005a24:	4b42      	ldr	r3, [pc, #264]	; (8005b30 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8005a26:	4a43      	ldr	r2, [pc, #268]	; (8005b34 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a28:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a2a:	4843      	ldr	r0, [pc, #268]	; (8005b38 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8005a2c:	f027 ff98 	bl	802d960 <__assert_func>
 8005a30:	6860      	ldr	r0, [r4, #4]
 8005a32:	6803      	ldr	r3, [r0, #0]
 8005a34:	6a1b      	ldr	r3, [r3, #32]
 8005a36:	4798      	blx	r3
 8005a38:	280f      	cmp	r0, #15
 8005a3a:	d803      	bhi.n	8005a44 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x38>
 8005a3c:	4b3f      	ldr	r3, [pc, #252]	; (8005b3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8005a3e:	4a3d      	ldr	r2, [pc, #244]	; (8005b34 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a40:	21a4      	movs	r1, #164	; 0xa4
 8005a42:	e7f2      	b.n	8005a2a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a44:	68e0      	ldr	r0, [r4, #12]
 8005a46:	6803      	ldr	r3, [r0, #0]
 8005a48:	6a1b      	ldr	r3, [r3, #32]
 8005a4a:	4798      	blx	r3
 8005a4c:	2837      	cmp	r0, #55	; 0x37
 8005a4e:	d803      	bhi.n	8005a58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4c>
 8005a50:	4b3b      	ldr	r3, [pc, #236]	; (8005b40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8005a52:	4a38      	ldr	r2, [pc, #224]	; (8005b34 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a54:	21a5      	movs	r1, #165	; 0xa5
 8005a56:	e7e8      	b.n	8005a2a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005a58:	f012 ffb2 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a5c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b44 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8005a60:	3004      	adds	r0, #4
 8005a62:	f013 f813 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a66:	f8d9 0000 	ldr.w	r0, [r9]
 8005a6a:	b110      	cbz	r0, 8005a72 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005a6c:	6803      	ldr	r3, [r0, #0]
 8005a6e:	68db      	ldr	r3, [r3, #12]
 8005a70:	4798      	blx	r3
    if (*currentTrans)
 8005a72:	f8d9 0000 	ldr.w	r0, [r9]
 8005a76:	b110      	cbz	r0, 8005a7e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005a78:	6803      	ldr	r3, [r0, #0]
 8005a7a:	681b      	ldr	r3, [r3, #0]
 8005a7c:	4798      	blx	r3
    if (*currentScreen)
 8005a7e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005b48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8005a82:	f8d8 0000 	ldr.w	r0, [r8]
 8005a86:	b110      	cbz	r0, 8005a8e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005a88:	6803      	ldr	r3, [r0, #0]
 8005a8a:	695b      	ldr	r3, [r3, #20]
 8005a8c:	4798      	blx	r3
    if (*currentPresenter)
 8005a8e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a92:	b110      	cbz	r0, 8005a9a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005a94:	6803      	ldr	r3, [r0, #0]
 8005a96:	685b      	ldr	r3, [r3, #4]
 8005a98:	4798      	blx	r3
    if (*currentScreen)
 8005a9a:	f8d8 0000 	ldr.w	r0, [r8]
 8005a9e:	b110      	cbz	r0, 8005aa6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005aa0:	6803      	ldr	r3, [r0, #0]
 8005aa2:	681b      	ldr	r3, [r3, #0]
 8005aa4:	4798      	blx	r3
    if (*currentPresenter)
 8005aa6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005aaa:	b110      	cbz	r0, 8005ab2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005aac:	6803      	ldr	r3, [r0, #0]
 8005aae:	689b      	ldr	r3, [r3, #8]
 8005ab0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005ab2:	68e0      	ldr	r0, [r4, #12]
 8005ab4:	2100      	movs	r1, #0
 8005ab6:	f7ff fe37 	bl	8005728 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005aba:	2114      	movs	r1, #20
 8005abc:	4605      	mov	r5, r0
 8005abe:	f7ff fe37 	bl	8005730 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ac2:	68a0      	ldr	r0, [r4, #8]
 8005ac4:	6803      	ldr	r3, [r0, #0]
 8005ac6:	2100      	movs	r1, #0
 8005ac8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aca:	4798      	blx	r3
 8005acc:	4606      	mov	r6, r0
 8005ace:	f004 ff77 	bl	800a9c0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ad2:	6860      	ldr	r0, [r4, #4]
 8005ad4:	6803      	ldr	r3, [r0, #0]
 8005ad6:	2100      	movs	r1, #0
 8005ad8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ada:	4798      	blx	r3
 8005adc:	4631      	mov	r1, r6
 8005ade:	4604      	mov	r4, r0
 8005ae0:	f004 ff48 	bl	800a974 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8005ae4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ae8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005aec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005af0:	b1dc      	cbz	r4, 8005b2a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x11e>
 8005af2:	1d23      	adds	r3, r4, #4
 8005af4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005af8:	6833      	ldr	r3, [r6, #0]
 8005afa:	f8c4 a008 	str.w	sl, [r4, #8]
 8005afe:	4630      	mov	r0, r6
 8005b00:	68db      	ldr	r3, [r3, #12]
 8005b02:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005b04:	4798      	blx	r3
    newPresenter->activate();
 8005b06:	6823      	ldr	r3, [r4, #0]
 8005b08:	4620      	mov	r0, r4
 8005b0a:	681b      	ldr	r3, [r3, #0]
 8005b0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b0e:	4629      	mov	r1, r5
 8005b10:	4630      	mov	r0, r6
 8005b12:	f014 fd81 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b16:	682b      	ldr	r3, [r5, #0]
 8005b18:	4628      	mov	r0, r5
 8005b1a:	691b      	ldr	r3, [r3, #16]
 8005b1c:	4798      	blx	r3
    newTransition->invalidate();
 8005b1e:	682b      	ldr	r3, [r5, #0]
 8005b20:	4628      	mov	r0, r5
 8005b22:	695b      	ldr	r3, [r3, #20]
}
 8005b24:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b28:	4718      	bx	r3
    model->bind(newPresenter);
 8005b2a:	4623      	mov	r3, r4
 8005b2c:	e7e2      	b.n	8005af4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xe8>
 8005b2e:	bf00      	nop
 8005b30:	0802f694 	.word	0x0802f694
 8005b34:	0802fd13 	.word	0x0802fd13
 8005b38:	0802f830 	.word	0x0802f830
 8005b3c:	0802f877 	.word	0x0802f877
 8005b40:	0802f91a 	.word	0x0802f91a
 8005b44:	20013884 	.word	0x20013884
 8005b48:	20013880 	.word	0x20013880

08005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8005b4c:	6803      	ldr	r3, [r0, #0]
 8005b4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b50:	4718      	bx	r3
	...

08005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005b54:	4b12      	ldr	r3, [pc, #72]	; (8005ba0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b56:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005b58:	6003      	str	r3, [r0, #0]
 8005b5a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005b5e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005b60:	4b10      	ldr	r3, [pc, #64]	; (8005ba4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005b62:	7241      	strb	r1, [r0, #9]
 8005b64:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b66:	4910      	ldr	r1, [pc, #64]	; (8005ba8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005b68:	4b10      	ldr	r3, [pc, #64]	; (8005bac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b6a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005b6e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005b72:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005b74:	2200      	movs	r2, #0
 8005b76:	6042      	str	r2, [r0, #4]
 8005b78:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005b7a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005b7c:	81c2      	strh	r2, [r0, #14]
          solid()
 8005b7e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005b82:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005b86:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005b8a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b8e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b90:	9100      	str	r1, [sp, #0]
 8005b92:	3010      	adds	r0, #16
 8005b94:	4611      	mov	r1, r2
 8005b96:	f7fd fd7c 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005b9a:	4620      	mov	r0, r4
 8005b9c:	b002      	add	sp, #8
 8005b9e:	bd10      	pop	{r4, pc}
 8005ba0:	080309f8 	.word	0x080309f8
 8005ba4:	08030900 	.word	0x08030900
 8005ba8:	20013832 	.word	0x20013832
 8005bac:	20013830 	.word	0x20013830

08005bb0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8005bb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005bb4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005bb8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005bba:	68a0      	ldr	r0, [r4, #8]
 8005bbc:	6803      	ldr	r3, [r0, #0]
 8005bbe:	6a1b      	ldr	r3, [r3, #32]
 8005bc0:	4798      	blx	r3
 8005bc2:	f241 137b 	movw	r3, #4475	; 0x117b
 8005bc6:	4298      	cmp	r0, r3
 8005bc8:	d805      	bhi.n	8005bd6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8005bca:	4b42      	ldr	r3, [pc, #264]	; (8005cd4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005bcc:	4a42      	ldr	r2, [pc, #264]	; (8005cd8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005bce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005bd0:	4842      	ldr	r0, [pc, #264]	; (8005cdc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005bd2:	f027 fec5 	bl	802d960 <__assert_func>
 8005bd6:	6860      	ldr	r0, [r4, #4]
 8005bd8:	6803      	ldr	r3, [r0, #0]
 8005bda:	6a1b      	ldr	r3, [r3, #32]
 8005bdc:	4798      	blx	r3
 8005bde:	280f      	cmp	r0, #15
 8005be0:	d803      	bhi.n	8005bea <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005be2:	4b3f      	ldr	r3, [pc, #252]	; (8005ce0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005be4:	4a3c      	ldr	r2, [pc, #240]	; (8005cd8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005be6:	21a4      	movs	r1, #164	; 0xa4
 8005be8:	e7f2      	b.n	8005bd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005bea:	68e0      	ldr	r0, [r4, #12]
 8005bec:	6803      	ldr	r3, [r0, #0]
 8005bee:	6a1b      	ldr	r3, [r3, #32]
 8005bf0:	4798      	blx	r3
 8005bf2:	2837      	cmp	r0, #55	; 0x37
 8005bf4:	d803      	bhi.n	8005bfe <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005bf6:	4b3b      	ldr	r3, [pc, #236]	; (8005ce4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005bf8:	4a37      	ldr	r2, [pc, #220]	; (8005cd8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005bfa:	21a5      	movs	r1, #165	; 0xa5
 8005bfc:	e7e8      	b.n	8005bd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005bfe:	f012 fedf 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005c02:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005ce8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005c06:	3004      	adds	r0, #4
 8005c08:	f012 ff40 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005c0c:	f8d9 0000 	ldr.w	r0, [r9]
 8005c10:	b110      	cbz	r0, 8005c18 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005c12:	6803      	ldr	r3, [r0, #0]
 8005c14:	68db      	ldr	r3, [r3, #12]
 8005c16:	4798      	blx	r3
    if (*currentTrans)
 8005c18:	f8d9 0000 	ldr.w	r0, [r9]
 8005c1c:	b110      	cbz	r0, 8005c24 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005c1e:	6803      	ldr	r3, [r0, #0]
 8005c20:	681b      	ldr	r3, [r3, #0]
 8005c22:	4798      	blx	r3
    if (*currentScreen)
 8005c24:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005cec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005c28:	f8d8 0000 	ldr.w	r0, [r8]
 8005c2c:	b110      	cbz	r0, 8005c34 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005c2e:	6803      	ldr	r3, [r0, #0]
 8005c30:	695b      	ldr	r3, [r3, #20]
 8005c32:	4798      	blx	r3
    if (*currentPresenter)
 8005c34:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c38:	b110      	cbz	r0, 8005c40 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005c3a:	6803      	ldr	r3, [r0, #0]
 8005c3c:	685b      	ldr	r3, [r3, #4]
 8005c3e:	4798      	blx	r3
    if (*currentScreen)
 8005c40:	f8d8 0000 	ldr.w	r0, [r8]
 8005c44:	b110      	cbz	r0, 8005c4c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005c46:	6803      	ldr	r3, [r0, #0]
 8005c48:	681b      	ldr	r3, [r3, #0]
 8005c4a:	4798      	blx	r3
    if (*currentPresenter)
 8005c4c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c50:	b110      	cbz	r0, 8005c58 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005c52:	6803      	ldr	r3, [r0, #0]
 8005c54:	689b      	ldr	r3, [r3, #8]
 8005c56:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c58:	68e0      	ldr	r0, [r4, #12]
 8005c5a:	2100      	movs	r1, #0
 8005c5c:	f7ff ff76 	bl	8005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005c60:	2114      	movs	r1, #20
 8005c62:	4605      	mov	r5, r0
 8005c64:	f7ff ff76 	bl	8005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c68:	68a0      	ldr	r0, [r4, #8]
 8005c6a:	6803      	ldr	r3, [r0, #0]
 8005c6c:	2100      	movs	r1, #0
 8005c6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c70:	4798      	blx	r3
 8005c72:	4606      	mov	r6, r0
 8005c74:	f005 f990 	bl	800af98 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c78:	6860      	ldr	r0, [r4, #4]
 8005c7a:	6803      	ldr	r3, [r0, #0]
 8005c7c:	2100      	movs	r1, #0
 8005c7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c80:	4798      	blx	r3
 8005c82:	4631      	mov	r1, r6
 8005c84:	4604      	mov	r4, r0
 8005c86:	f005 f961 	bl	800af4c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005c8a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c8e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c92:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c96:	b1dc      	cbz	r4, 8005cd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005c98:	1d23      	adds	r3, r4, #4
 8005c9a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c9e:	6833      	ldr	r3, [r6, #0]
 8005ca0:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ca4:	4630      	mov	r0, r6
 8005ca6:	68db      	ldr	r3, [r3, #12]
 8005ca8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005caa:	4798      	blx	r3
    newPresenter->activate();
 8005cac:	6823      	ldr	r3, [r4, #0]
 8005cae:	4620      	mov	r0, r4
 8005cb0:	681b      	ldr	r3, [r3, #0]
 8005cb2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005cb4:	4629      	mov	r1, r5
 8005cb6:	4630      	mov	r0, r6
 8005cb8:	f014 fcae 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005cbc:	682b      	ldr	r3, [r5, #0]
 8005cbe:	4628      	mov	r0, r5
 8005cc0:	691b      	ldr	r3, [r3, #16]
 8005cc2:	4798      	blx	r3
    newTransition->invalidate();
 8005cc4:	682b      	ldr	r3, [r5, #0]
 8005cc6:	4628      	mov	r0, r5
 8005cc8:	695b      	ldr	r3, [r3, #20]
}
 8005cca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005cce:	4718      	bx	r3
    model->bind(newPresenter);
 8005cd0:	4623      	mov	r3, r4
 8005cd2:	e7e2      	b.n	8005c9a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005cd4:	0802f694 	.word	0x0802f694
 8005cd8:	0802fe2d 	.word	0x0802fe2d
 8005cdc:	0802f830 	.word	0x0802f830
 8005ce0:	0802f877 	.word	0x0802f877
 8005ce4:	0802f91a 	.word	0x0802f91a
 8005ce8:	20013884 	.word	0x20013884
 8005cec:	20013880 	.word	0x20013880

08005cf0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005cf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005cf4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005cf8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005cfa:	68a0      	ldr	r0, [r4, #8]
 8005cfc:	6803      	ldr	r3, [r0, #0]
 8005cfe:	6a1b      	ldr	r3, [r3, #32]
 8005d00:	4798      	blx	r3
 8005d02:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005d06:	4298      	cmp	r0, r3
 8005d08:	d805      	bhi.n	8005d16 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005d0a:	4b42      	ldr	r3, [pc, #264]	; (8005e14 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005d0c:	4a42      	ldr	r2, [pc, #264]	; (8005e18 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005d0e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005d10:	4842      	ldr	r0, [pc, #264]	; (8005e1c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005d12:	f027 fe25 	bl	802d960 <__assert_func>
 8005d16:	6860      	ldr	r0, [r4, #4]
 8005d18:	6803      	ldr	r3, [r0, #0]
 8005d1a:	6a1b      	ldr	r3, [r3, #32]
 8005d1c:	4798      	blx	r3
 8005d1e:	280f      	cmp	r0, #15
 8005d20:	d803      	bhi.n	8005d2a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005d22:	4b3f      	ldr	r3, [pc, #252]	; (8005e20 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005d24:	4a3c      	ldr	r2, [pc, #240]	; (8005e18 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005d26:	21a4      	movs	r1, #164	; 0xa4
 8005d28:	e7f2      	b.n	8005d10 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005d2a:	68e0      	ldr	r0, [r4, #12]
 8005d2c:	6803      	ldr	r3, [r0, #0]
 8005d2e:	6a1b      	ldr	r3, [r3, #32]
 8005d30:	4798      	blx	r3
 8005d32:	2837      	cmp	r0, #55	; 0x37
 8005d34:	d803      	bhi.n	8005d3e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005d36:	4b3b      	ldr	r3, [pc, #236]	; (8005e24 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005d38:	4a37      	ldr	r2, [pc, #220]	; (8005e18 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005d3a:	21a5      	movs	r1, #165	; 0xa5
 8005d3c:	e7e8      	b.n	8005d10 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005d3e:	f012 fe3f 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005d42:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005e28 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005d46:	3004      	adds	r0, #4
 8005d48:	f012 fea0 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005d4c:	f8d9 0000 	ldr.w	r0, [r9]
 8005d50:	b110      	cbz	r0, 8005d58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005d52:	6803      	ldr	r3, [r0, #0]
 8005d54:	68db      	ldr	r3, [r3, #12]
 8005d56:	4798      	blx	r3
    if (*currentTrans)
 8005d58:	f8d9 0000 	ldr.w	r0, [r9]
 8005d5c:	b110      	cbz	r0, 8005d64 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005d5e:	6803      	ldr	r3, [r0, #0]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	4798      	blx	r3
    if (*currentScreen)
 8005d64:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005e2c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005d68:	f8d8 0000 	ldr.w	r0, [r8]
 8005d6c:	b110      	cbz	r0, 8005d74 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005d6e:	6803      	ldr	r3, [r0, #0]
 8005d70:	695b      	ldr	r3, [r3, #20]
 8005d72:	4798      	blx	r3
    if (*currentPresenter)
 8005d74:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d78:	b110      	cbz	r0, 8005d80 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005d7a:	6803      	ldr	r3, [r0, #0]
 8005d7c:	685b      	ldr	r3, [r3, #4]
 8005d7e:	4798      	blx	r3
    if (*currentScreen)
 8005d80:	f8d8 0000 	ldr.w	r0, [r8]
 8005d84:	b110      	cbz	r0, 8005d8c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005d86:	6803      	ldr	r3, [r0, #0]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	4798      	blx	r3
    if (*currentPresenter)
 8005d8c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d90:	b110      	cbz	r0, 8005d98 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005d92:	6803      	ldr	r3, [r0, #0]
 8005d94:	689b      	ldr	r3, [r3, #8]
 8005d96:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d98:	68e0      	ldr	r0, [r4, #12]
 8005d9a:	2100      	movs	r1, #0
 8005d9c:	f7ff fed6 	bl	8005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005da0:	2114      	movs	r1, #20
 8005da2:	4605      	mov	r5, r0
 8005da4:	f7ff fed6 	bl	8005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005da8:	68a0      	ldr	r0, [r4, #8]
 8005daa:	6803      	ldr	r3, [r0, #0]
 8005dac:	2100      	movs	r1, #0
 8005dae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005db0:	4798      	blx	r3
 8005db2:	4606      	mov	r6, r0
 8005db4:	f004 fcd0 	bl	800a758 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005db8:	6860      	ldr	r0, [r4, #4]
 8005dba:	6803      	ldr	r3, [r0, #0]
 8005dbc:	2100      	movs	r1, #0
 8005dbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005dc0:	4798      	blx	r3
 8005dc2:	4631      	mov	r1, r6
 8005dc4:	4604      	mov	r4, r0
 8005dc6:	f004 fca1 	bl	800a70c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005dca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005dce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005dd2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005dd6:	b1dc      	cbz	r4, 8005e10 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005dd8:	1d23      	adds	r3, r4, #4
 8005dda:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005dde:	6833      	ldr	r3, [r6, #0]
 8005de0:	f8c4 a008 	str.w	sl, [r4, #8]
 8005de4:	4630      	mov	r0, r6
 8005de6:	68db      	ldr	r3, [r3, #12]
 8005de8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005dea:	4798      	blx	r3
    newPresenter->activate();
 8005dec:	6823      	ldr	r3, [r4, #0]
 8005dee:	4620      	mov	r0, r4
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005df4:	4629      	mov	r1, r5
 8005df6:	4630      	mov	r0, r6
 8005df8:	f014 fc0e 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005dfc:	682b      	ldr	r3, [r5, #0]
 8005dfe:	4628      	mov	r0, r5
 8005e00:	691b      	ldr	r3, [r3, #16]
 8005e02:	4798      	blx	r3
    newTransition->invalidate();
 8005e04:	682b      	ldr	r3, [r5, #0]
 8005e06:	4628      	mov	r0, r5
 8005e08:	695b      	ldr	r3, [r3, #20]
}
 8005e0a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e0e:	4718      	bx	r3
    model->bind(newPresenter);
 8005e10:	4623      	mov	r3, r4
 8005e12:	e7e2      	b.n	8005dda <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005e14:	0802f694 	.word	0x0802f694
 8005e18:	0802ff4d 	.word	0x0802ff4d
 8005e1c:	0802f830 	.word	0x0802f830
 8005e20:	0802f877 	.word	0x0802f877
 8005e24:	0802f91a 	.word	0x0802f91a
 8005e28:	20013884 	.word	0x20013884
 8005e2c:	20013880 	.word	0x20013880

08005e30 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005e30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005e34:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005e38:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005e3a:	68a0      	ldr	r0, [r4, #8]
 8005e3c:	6803      	ldr	r3, [r0, #0]
 8005e3e:	6a1b      	ldr	r3, [r3, #32]
 8005e40:	4798      	blx	r3
 8005e42:	f241 4377 	movw	r3, #5239	; 0x1477
 8005e46:	4298      	cmp	r0, r3
 8005e48:	d805      	bhi.n	8005e56 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005e4a:	4b42      	ldr	r3, [pc, #264]	; (8005f54 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005e4c:	4a42      	ldr	r2, [pc, #264]	; (8005f58 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e4e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005e50:	4842      	ldr	r0, [pc, #264]	; (8005f5c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005e52:	f027 fd85 	bl	802d960 <__assert_func>
 8005e56:	6860      	ldr	r0, [r4, #4]
 8005e58:	6803      	ldr	r3, [r0, #0]
 8005e5a:	6a1b      	ldr	r3, [r3, #32]
 8005e5c:	4798      	blx	r3
 8005e5e:	280f      	cmp	r0, #15
 8005e60:	d803      	bhi.n	8005e6a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005e62:	4b3f      	ldr	r3, [pc, #252]	; (8005f60 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005e64:	4a3c      	ldr	r2, [pc, #240]	; (8005f58 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e66:	21a4      	movs	r1, #164	; 0xa4
 8005e68:	e7f2      	b.n	8005e50 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005e6a:	68e0      	ldr	r0, [r4, #12]
 8005e6c:	6803      	ldr	r3, [r0, #0]
 8005e6e:	6a1b      	ldr	r3, [r3, #32]
 8005e70:	4798      	blx	r3
 8005e72:	2837      	cmp	r0, #55	; 0x37
 8005e74:	d803      	bhi.n	8005e7e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005e76:	4b3b      	ldr	r3, [pc, #236]	; (8005f64 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005e78:	4a37      	ldr	r2, [pc, #220]	; (8005f58 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e7a:	21a5      	movs	r1, #165	; 0xa5
 8005e7c:	e7e8      	b.n	8005e50 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005e7e:	f012 fd9f 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005e82:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005f68 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005e86:	3004      	adds	r0, #4
 8005e88:	f012 fe00 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005e8c:	f8d9 0000 	ldr.w	r0, [r9]
 8005e90:	b110      	cbz	r0, 8005e98 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005e92:	6803      	ldr	r3, [r0, #0]
 8005e94:	68db      	ldr	r3, [r3, #12]
 8005e96:	4798      	blx	r3
    if (*currentTrans)
 8005e98:	f8d9 0000 	ldr.w	r0, [r9]
 8005e9c:	b110      	cbz	r0, 8005ea4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005e9e:	6803      	ldr	r3, [r0, #0]
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	4798      	blx	r3
    if (*currentScreen)
 8005ea4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005f6c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005ea8:	f8d8 0000 	ldr.w	r0, [r8]
 8005eac:	b110      	cbz	r0, 8005eb4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005eae:	6803      	ldr	r3, [r0, #0]
 8005eb0:	695b      	ldr	r3, [r3, #20]
 8005eb2:	4798      	blx	r3
    if (*currentPresenter)
 8005eb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005eb8:	b110      	cbz	r0, 8005ec0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005eba:	6803      	ldr	r3, [r0, #0]
 8005ebc:	685b      	ldr	r3, [r3, #4]
 8005ebe:	4798      	blx	r3
    if (*currentScreen)
 8005ec0:	f8d8 0000 	ldr.w	r0, [r8]
 8005ec4:	b110      	cbz	r0, 8005ecc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005ec6:	6803      	ldr	r3, [r0, #0]
 8005ec8:	681b      	ldr	r3, [r3, #0]
 8005eca:	4798      	blx	r3
    if (*currentPresenter)
 8005ecc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ed0:	b110      	cbz	r0, 8005ed8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005ed2:	6803      	ldr	r3, [r0, #0]
 8005ed4:	689b      	ldr	r3, [r3, #8]
 8005ed6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005ed8:	68e0      	ldr	r0, [r4, #12]
 8005eda:	2100      	movs	r1, #0
 8005edc:	f7ff fe36 	bl	8005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005ee0:	2114      	movs	r1, #20
 8005ee2:	4605      	mov	r5, r0
 8005ee4:	f7ff fe36 	bl	8005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ee8:	68a0      	ldr	r0, [r4, #8]
 8005eea:	6803      	ldr	r3, [r0, #0]
 8005eec:	2100      	movs	r1, #0
 8005eee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ef0:	4798      	blx	r3
 8005ef2:	4606      	mov	r6, r0
 8005ef4:	f004 fec0 	bl	800ac78 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ef8:	6860      	ldr	r0, [r4, #4]
 8005efa:	6803      	ldr	r3, [r0, #0]
 8005efc:	2100      	movs	r1, #0
 8005efe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f00:	4798      	blx	r3
 8005f02:	4631      	mov	r1, r6
 8005f04:	4604      	mov	r4, r0
 8005f06:	f004 fe91 	bl	800ac2c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005f0a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005f0e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005f12:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005f16:	b1dc      	cbz	r4, 8005f50 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005f18:	1d23      	adds	r3, r4, #4
 8005f1a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005f1e:	6833      	ldr	r3, [r6, #0]
 8005f20:	f8c4 a008 	str.w	sl, [r4, #8]
 8005f24:	4630      	mov	r0, r6
 8005f26:	68db      	ldr	r3, [r3, #12]
 8005f28:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005f2a:	4798      	blx	r3
    newPresenter->activate();
 8005f2c:	6823      	ldr	r3, [r4, #0]
 8005f2e:	4620      	mov	r0, r4
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005f34:	4629      	mov	r1, r5
 8005f36:	4630      	mov	r0, r6
 8005f38:	f014 fb6e 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005f3c:	682b      	ldr	r3, [r5, #0]
 8005f3e:	4628      	mov	r0, r5
 8005f40:	691b      	ldr	r3, [r3, #16]
 8005f42:	4798      	blx	r3
    newTransition->invalidate();
 8005f44:	682b      	ldr	r3, [r5, #0]
 8005f46:	4628      	mov	r0, r5
 8005f48:	695b      	ldr	r3, [r3, #20]
}
 8005f4a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f4e:	4718      	bx	r3
    model->bind(newPresenter);
 8005f50:	4623      	mov	r3, r4
 8005f52:	e7e2      	b.n	8005f1a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005f54:	0802f694 	.word	0x0802f694
 8005f58:	08030073 	.word	0x08030073
 8005f5c:	0802f830 	.word	0x0802f830
 8005f60:	0802f877 	.word	0x0802f877
 8005f64:	0802f91a 	.word	0x0802f91a
 8005f68:	20013884 	.word	0x20013884
 8005f6c:	20013880 	.word	0x20013880

08005f70 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005f70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005f74:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005f78:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005f7a:	68a0      	ldr	r0, [r4, #8]
 8005f7c:	6803      	ldr	r3, [r0, #0]
 8005f7e:	6a1b      	ldr	r3, [r3, #32]
 8005f80:	4798      	blx	r3
 8005f82:	f241 4377 	movw	r3, #5239	; 0x1477
 8005f86:	4298      	cmp	r0, r3
 8005f88:	d805      	bhi.n	8005f96 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8005f8a:	4b42      	ldr	r3, [pc, #264]	; (8006094 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005f8c:	4a42      	ldr	r2, [pc, #264]	; (8006098 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f8e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005f90:	4842      	ldr	r0, [pc, #264]	; (800609c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005f92:	f027 fce5 	bl	802d960 <__assert_func>
 8005f96:	6860      	ldr	r0, [r4, #4]
 8005f98:	6803      	ldr	r3, [r0, #0]
 8005f9a:	6a1b      	ldr	r3, [r3, #32]
 8005f9c:	4798      	blx	r3
 8005f9e:	280f      	cmp	r0, #15
 8005fa0:	d803      	bhi.n	8005faa <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005fa2:	4b3f      	ldr	r3, [pc, #252]	; (80060a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005fa4:	4a3c      	ldr	r2, [pc, #240]	; (8006098 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005fa6:	21a4      	movs	r1, #164	; 0xa4
 8005fa8:	e7f2      	b.n	8005f90 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005faa:	68e0      	ldr	r0, [r4, #12]
 8005fac:	6803      	ldr	r3, [r0, #0]
 8005fae:	6a1b      	ldr	r3, [r3, #32]
 8005fb0:	4798      	blx	r3
 8005fb2:	2837      	cmp	r0, #55	; 0x37
 8005fb4:	d803      	bhi.n	8005fbe <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8005fb6:	4b3b      	ldr	r3, [pc, #236]	; (80060a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8005fb8:	4a37      	ldr	r2, [pc, #220]	; (8006098 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005fba:	21a5      	movs	r1, #165	; 0xa5
 8005fbc:	e7e8      	b.n	8005f90 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005fbe:	f012 fcff 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005fc2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80060a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8005fc6:	3004      	adds	r0, #4
 8005fc8:	f012 fd60 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005fcc:	f8d9 0000 	ldr.w	r0, [r9]
 8005fd0:	b110      	cbz	r0, 8005fd8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005fd2:	6803      	ldr	r3, [r0, #0]
 8005fd4:	68db      	ldr	r3, [r3, #12]
 8005fd6:	4798      	blx	r3
    if (*currentTrans)
 8005fd8:	f8d9 0000 	ldr.w	r0, [r9]
 8005fdc:	b110      	cbz	r0, 8005fe4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005fde:	6803      	ldr	r3, [r0, #0]
 8005fe0:	681b      	ldr	r3, [r3, #0]
 8005fe2:	4798      	blx	r3
    if (*currentScreen)
 8005fe4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80060ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005fe8:	f8d8 0000 	ldr.w	r0, [r8]
 8005fec:	b110      	cbz	r0, 8005ff4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005fee:	6803      	ldr	r3, [r0, #0]
 8005ff0:	695b      	ldr	r3, [r3, #20]
 8005ff2:	4798      	blx	r3
    if (*currentPresenter)
 8005ff4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ff8:	b110      	cbz	r0, 8006000 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005ffa:	6803      	ldr	r3, [r0, #0]
 8005ffc:	685b      	ldr	r3, [r3, #4]
 8005ffe:	4798      	blx	r3
    if (*currentScreen)
 8006000:	f8d8 0000 	ldr.w	r0, [r8]
 8006004:	b110      	cbz	r0, 800600c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006006:	6803      	ldr	r3, [r0, #0]
 8006008:	681b      	ldr	r3, [r3, #0]
 800600a:	4798      	blx	r3
    if (*currentPresenter)
 800600c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006010:	b110      	cbz	r0, 8006018 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006012:	6803      	ldr	r3, [r0, #0]
 8006014:	689b      	ldr	r3, [r3, #8]
 8006016:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006018:	68e0      	ldr	r0, [r4, #12]
 800601a:	2100      	movs	r1, #0
 800601c:	f7ff fd96 	bl	8005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006020:	2114      	movs	r1, #20
 8006022:	4605      	mov	r5, r0
 8006024:	f7ff fd96 	bl	8005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006028:	68a0      	ldr	r0, [r4, #8]
 800602a:	6803      	ldr	r3, [r0, #0]
 800602c:	2100      	movs	r1, #0
 800602e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006030:	4798      	blx	r3
 8006032:	4606      	mov	r6, r0
 8006034:	f004 fdde 	bl	800abf4 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006038:	6860      	ldr	r0, [r4, #4]
 800603a:	6803      	ldr	r3, [r0, #0]
 800603c:	2100      	movs	r1, #0
 800603e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006040:	4798      	blx	r3
 8006042:	4631      	mov	r1, r6
 8006044:	4604      	mov	r4, r0
 8006046:	f004 fdaf 	bl	800aba8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800604a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800604e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006052:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006056:	b1dc      	cbz	r4, 8006090 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8006058:	1d23      	adds	r3, r4, #4
 800605a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800605e:	6833      	ldr	r3, [r6, #0]
 8006060:	f8c4 a008 	str.w	sl, [r4, #8]
 8006064:	4630      	mov	r0, r6
 8006066:	68db      	ldr	r3, [r3, #12]
 8006068:	63f4      	str	r4, [r6, #60]	; 0x3c
 800606a:	4798      	blx	r3
    newPresenter->activate();
 800606c:	6823      	ldr	r3, [r4, #0]
 800606e:	4620      	mov	r0, r4
 8006070:	681b      	ldr	r3, [r3, #0]
 8006072:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8006074:	4629      	mov	r1, r5
 8006076:	4630      	mov	r0, r6
 8006078:	f014 face 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800607c:	682b      	ldr	r3, [r5, #0]
 800607e:	4628      	mov	r0, r5
 8006080:	691b      	ldr	r3, [r3, #16]
 8006082:	4798      	blx	r3
    newTransition->invalidate();
 8006084:	682b      	ldr	r3, [r5, #0]
 8006086:	4628      	mov	r0, r5
 8006088:	695b      	ldr	r3, [r3, #20]
}
 800608a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800608e:	4718      	bx	r3
    model->bind(newPresenter);
 8006090:	4623      	mov	r3, r4
 8006092:	e7e2      	b.n	800605a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8006094:	0802f694 	.word	0x0802f694
 8006098:	080301b7 	.word	0x080301b7
 800609c:	0802f830 	.word	0x0802f830
 80060a0:	0802f877 	.word	0x0802f877
 80060a4:	0802f91a 	.word	0x0802f91a
 80060a8:	20013884 	.word	0x20013884
 80060ac:	20013880 	.word	0x20013880

080060b0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80060b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80060b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80060b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80060ba:	68a0      	ldr	r0, [r4, #8]
 80060bc:	6803      	ldr	r3, [r0, #0]
 80060be:	6a1b      	ldr	r3, [r3, #32]
 80060c0:	4798      	blx	r3
 80060c2:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80060c6:	4298      	cmp	r0, r3
 80060c8:	d805      	bhi.n	80060d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x26>
 80060ca:	4b42      	ldr	r3, [pc, #264]	; (80061d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80060cc:	4a42      	ldr	r2, [pc, #264]	; (80061d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060ce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80060d0:	4842      	ldr	r0, [pc, #264]	; (80061dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80060d2:	f027 fc45 	bl	802d960 <__assert_func>
 80060d6:	6860      	ldr	r0, [r4, #4]
 80060d8:	6803      	ldr	r3, [r0, #0]
 80060da:	6a1b      	ldr	r3, [r3, #32]
 80060dc:	4798      	blx	r3
 80060de:	280f      	cmp	r0, #15
 80060e0:	d803      	bhi.n	80060ea <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x3a>
 80060e2:	4b3f      	ldr	r3, [pc, #252]	; (80061e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80060e4:	4a3c      	ldr	r2, [pc, #240]	; (80061d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060e6:	21a4      	movs	r1, #164	; 0xa4
 80060e8:	e7f2      	b.n	80060d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80060ea:	68e0      	ldr	r0, [r4, #12]
 80060ec:	6803      	ldr	r3, [r0, #0]
 80060ee:	6a1b      	ldr	r3, [r3, #32]
 80060f0:	4798      	blx	r3
 80060f2:	2837      	cmp	r0, #55	; 0x37
 80060f4:	d803      	bhi.n	80060fe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4e>
 80060f6:	4b3b      	ldr	r3, [pc, #236]	; (80061e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80060f8:	4a37      	ldr	r2, [pc, #220]	; (80061d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060fa:	21a5      	movs	r1, #165	; 0xa5
 80060fc:	e7e8      	b.n	80060d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80060fe:	f012 fc5f 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8006102:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80061e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8006106:	3004      	adds	r0, #4
 8006108:	f012 fcc0 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800610c:	f8d9 0000 	ldr.w	r0, [r9]
 8006110:	b110      	cbz	r0, 8006118 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8006112:	6803      	ldr	r3, [r0, #0]
 8006114:	68db      	ldr	r3, [r3, #12]
 8006116:	4798      	blx	r3
    if (*currentTrans)
 8006118:	f8d9 0000 	ldr.w	r0, [r9]
 800611c:	b110      	cbz	r0, 8006124 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800611e:	6803      	ldr	r3, [r0, #0]
 8006120:	681b      	ldr	r3, [r3, #0]
 8006122:	4798      	blx	r3
    if (*currentScreen)
 8006124:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80061ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8006128:	f8d8 0000 	ldr.w	r0, [r8]
 800612c:	b110      	cbz	r0, 8006134 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800612e:	6803      	ldr	r3, [r0, #0]
 8006130:	695b      	ldr	r3, [r3, #20]
 8006132:	4798      	blx	r3
    if (*currentPresenter)
 8006134:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006138:	b110      	cbz	r0, 8006140 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800613a:	6803      	ldr	r3, [r0, #0]
 800613c:	685b      	ldr	r3, [r3, #4]
 800613e:	4798      	blx	r3
    if (*currentScreen)
 8006140:	f8d8 0000 	ldr.w	r0, [r8]
 8006144:	b110      	cbz	r0, 800614c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006146:	6803      	ldr	r3, [r0, #0]
 8006148:	681b      	ldr	r3, [r3, #0]
 800614a:	4798      	blx	r3
    if (*currentPresenter)
 800614c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006150:	b110      	cbz	r0, 8006158 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006152:	6803      	ldr	r3, [r0, #0]
 8006154:	689b      	ldr	r3, [r3, #8]
 8006156:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006158:	68e0      	ldr	r0, [r4, #12]
 800615a:	2100      	movs	r1, #0
 800615c:	f7ff fcf6 	bl	8005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006160:	2114      	movs	r1, #20
 8006162:	4605      	mov	r5, r0
 8006164:	f7ff fcf6 	bl	8005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006168:	68a0      	ldr	r0, [r4, #8]
 800616a:	6803      	ldr	r3, [r0, #0]
 800616c:	2100      	movs	r1, #0
 800616e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006170:	4798      	blx	r3
 8006172:	4606      	mov	r6, r0
 8006174:	f004 fce4 	bl	800ab40 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006178:	6860      	ldr	r0, [r4, #4]
 800617a:	6803      	ldr	r3, [r0, #0]
 800617c:	2100      	movs	r1, #0
 800617e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006180:	4798      	blx	r3
 8006182:	4631      	mov	r1, r6
 8006184:	4604      	mov	r4, r0
 8006186:	f004 fcb5 	bl	800aaf4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800618a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800618e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006192:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006196:	b1dc      	cbz	r4, 80061d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x120>
 8006198:	1d23      	adds	r3, r4, #4
 800619a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800619e:	6833      	ldr	r3, [r6, #0]
 80061a0:	f8c4 a008 	str.w	sl, [r4, #8]
 80061a4:	4630      	mov	r0, r6
 80061a6:	68db      	ldr	r3, [r3, #12]
 80061a8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80061aa:	4798      	blx	r3
    newPresenter->activate();
 80061ac:	6823      	ldr	r3, [r4, #0]
 80061ae:	4620      	mov	r0, r4
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80061b4:	4629      	mov	r1, r5
 80061b6:	4630      	mov	r0, r6
 80061b8:	f014 fa2e 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80061bc:	682b      	ldr	r3, [r5, #0]
 80061be:	4628      	mov	r0, r5
 80061c0:	691b      	ldr	r3, [r3, #16]
 80061c2:	4798      	blx	r3
    newTransition->invalidate();
 80061c4:	682b      	ldr	r3, [r5, #0]
 80061c6:	4628      	mov	r0, r5
 80061c8:	695b      	ldr	r3, [r3, #20]
}
 80061ca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80061ce:	4718      	bx	r3
    model->bind(newPresenter);
 80061d0:	4623      	mov	r3, r4
 80061d2:	e7e2      	b.n	800619a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xea>
 80061d4:	0802f694 	.word	0x0802f694
 80061d8:	080302f7 	.word	0x080302f7
 80061dc:	0802f830 	.word	0x0802f830
 80061e0:	0802f877 	.word	0x0802f877
 80061e4:	0802f91a 	.word	0x0802f91a
 80061e8:	20013884 	.word	0x20013884
 80061ec:	20013880 	.word	0x20013880

080061f0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80061f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80061f4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80061f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80061fa:	68a0      	ldr	r0, [r4, #8]
 80061fc:	6803      	ldr	r3, [r0, #0]
 80061fe:	6a1b      	ldr	r3, [r3, #32]
 8006200:	4798      	blx	r3
 8006202:	f241 4377 	movw	r3, #5239	; 0x1477
 8006206:	4298      	cmp	r0, r3
 8006208:	d805      	bhi.n	8006216 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800620a:	4b42      	ldr	r3, [pc, #264]	; (8006314 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 800620c:	4a42      	ldr	r2, [pc, #264]	; (8006318 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800620e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006210:	4842      	ldr	r0, [pc, #264]	; (800631c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8006212:	f027 fba5 	bl	802d960 <__assert_func>
 8006216:	6860      	ldr	r0, [r4, #4]
 8006218:	6803      	ldr	r3, [r0, #0]
 800621a:	6a1b      	ldr	r3, [r3, #32]
 800621c:	4798      	blx	r3
 800621e:	280f      	cmp	r0, #15
 8006220:	d803      	bhi.n	800622a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8006222:	4b3f      	ldr	r3, [pc, #252]	; (8006320 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8006224:	4a3c      	ldr	r2, [pc, #240]	; (8006318 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8006226:	21a4      	movs	r1, #164	; 0xa4
 8006228:	e7f2      	b.n	8006210 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800622a:	68e0      	ldr	r0, [r4, #12]
 800622c:	6803      	ldr	r3, [r0, #0]
 800622e:	6a1b      	ldr	r3, [r3, #32]
 8006230:	4798      	blx	r3
 8006232:	2837      	cmp	r0, #55	; 0x37
 8006234:	d803      	bhi.n	800623e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8006236:	4b3b      	ldr	r3, [pc, #236]	; (8006324 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8006238:	4a37      	ldr	r2, [pc, #220]	; (8006318 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800623a:	21a5      	movs	r1, #165	; 0xa5
 800623c:	e7e8      	b.n	8006210 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800623e:	f012 fbbf 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8006242:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006328 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8006246:	3004      	adds	r0, #4
 8006248:	f012 fc20 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800624c:	f8d9 0000 	ldr.w	r0, [r9]
 8006250:	b110      	cbz	r0, 8006258 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8006252:	6803      	ldr	r3, [r0, #0]
 8006254:	68db      	ldr	r3, [r3, #12]
 8006256:	4798      	blx	r3
    if (*currentTrans)
 8006258:	f8d9 0000 	ldr.w	r0, [r9]
 800625c:	b110      	cbz	r0, 8006264 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800625e:	6803      	ldr	r3, [r0, #0]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	4798      	blx	r3
    if (*currentScreen)
 8006264:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800632c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8006268:	f8d8 0000 	ldr.w	r0, [r8]
 800626c:	b110      	cbz	r0, 8006274 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800626e:	6803      	ldr	r3, [r0, #0]
 8006270:	695b      	ldr	r3, [r3, #20]
 8006272:	4798      	blx	r3
    if (*currentPresenter)
 8006274:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006278:	b110      	cbz	r0, 8006280 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800627a:	6803      	ldr	r3, [r0, #0]
 800627c:	685b      	ldr	r3, [r3, #4]
 800627e:	4798      	blx	r3
    if (*currentScreen)
 8006280:	f8d8 0000 	ldr.w	r0, [r8]
 8006284:	b110      	cbz	r0, 800628c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006286:	6803      	ldr	r3, [r0, #0]
 8006288:	681b      	ldr	r3, [r3, #0]
 800628a:	4798      	blx	r3
    if (*currentPresenter)
 800628c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006290:	b110      	cbz	r0, 8006298 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006292:	6803      	ldr	r3, [r0, #0]
 8006294:	689b      	ldr	r3, [r3, #8]
 8006296:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006298:	68e0      	ldr	r0, [r4, #12]
 800629a:	2100      	movs	r1, #0
 800629c:	f7ff fc56 	bl	8005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80062a0:	2114      	movs	r1, #20
 80062a2:	4605      	mov	r5, r0
 80062a4:	f7ff fc56 	bl	8005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80062a8:	68a0      	ldr	r0, [r4, #8]
 80062aa:	6803      	ldr	r3, [r0, #0]
 80062ac:	2100      	movs	r1, #0
 80062ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062b0:	4798      	blx	r3
 80062b2:	4606      	mov	r6, r0
 80062b4:	f004 fe0a 	bl	800aecc <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80062b8:	6860      	ldr	r0, [r4, #4]
 80062ba:	6803      	ldr	r3, [r0, #0]
 80062bc:	2100      	movs	r1, #0
 80062be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062c0:	4798      	blx	r3
 80062c2:	4631      	mov	r1, r6
 80062c4:	4604      	mov	r4, r0
 80062c6:	f004 fddb 	bl	800ae80 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80062ca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80062ce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80062d2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80062d6:	b1dc      	cbz	r4, 8006310 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80062d8:	1d23      	adds	r3, r4, #4
 80062da:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80062de:	6833      	ldr	r3, [r6, #0]
 80062e0:	f8c4 a008 	str.w	sl, [r4, #8]
 80062e4:	4630      	mov	r0, r6
 80062e6:	68db      	ldr	r3, [r3, #12]
 80062e8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80062ea:	4798      	blx	r3
    newPresenter->activate();
 80062ec:	6823      	ldr	r3, [r4, #0]
 80062ee:	4620      	mov	r0, r4
 80062f0:	681b      	ldr	r3, [r3, #0]
 80062f2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80062f4:	4629      	mov	r1, r5
 80062f6:	4630      	mov	r0, r6
 80062f8:	f014 f98e 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80062fc:	682b      	ldr	r3, [r5, #0]
 80062fe:	4628      	mov	r0, r5
 8006300:	691b      	ldr	r3, [r3, #16]
 8006302:	4798      	blx	r3
    newTransition->invalidate();
 8006304:	682b      	ldr	r3, [r5, #0]
 8006306:	4628      	mov	r0, r5
 8006308:	695b      	ldr	r3, [r3, #20]
}
 800630a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800630e:	4718      	bx	r3
    model->bind(newPresenter);
 8006310:	4623      	mov	r3, r4
 8006312:	e7e2      	b.n	80062da <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8006314:	0802f694 	.word	0x0802f694
 8006318:	08030427 	.word	0x08030427
 800631c:	0802f830 	.word	0x0802f830
 8006320:	0802f877 	.word	0x0802f877
 8006324:	0802f91a 	.word	0x0802f91a
 8006328:	20013884 	.word	0x20013884
 800632c:	20013880 	.word	0x20013880

08006330 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8006330:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8006334:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006338:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800633a:	68a0      	ldr	r0, [r4, #8]
 800633c:	6803      	ldr	r3, [r0, #0]
 800633e:	6a1b      	ldr	r3, [r3, #32]
 8006340:	4798      	blx	r3
 8006342:	f241 437b 	movw	r3, #5243	; 0x147b
 8006346:	4298      	cmp	r0, r3
 8006348:	d805      	bhi.n	8006356 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800634a:	4b42      	ldr	r3, [pc, #264]	; (8006454 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 800634c:	4a42      	ldr	r2, [pc, #264]	; (8006458 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800634e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006350:	4842      	ldr	r0, [pc, #264]	; (800645c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8006352:	f027 fb05 	bl	802d960 <__assert_func>
 8006356:	6860      	ldr	r0, [r4, #4]
 8006358:	6803      	ldr	r3, [r0, #0]
 800635a:	6a1b      	ldr	r3, [r3, #32]
 800635c:	4798      	blx	r3
 800635e:	280f      	cmp	r0, #15
 8006360:	d803      	bhi.n	800636a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8006362:	4b3f      	ldr	r3, [pc, #252]	; (8006460 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8006364:	4a3c      	ldr	r2, [pc, #240]	; (8006458 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006366:	21a4      	movs	r1, #164	; 0xa4
 8006368:	e7f2      	b.n	8006350 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800636a:	68e0      	ldr	r0, [r4, #12]
 800636c:	6803      	ldr	r3, [r0, #0]
 800636e:	6a1b      	ldr	r3, [r3, #32]
 8006370:	4798      	blx	r3
 8006372:	2837      	cmp	r0, #55	; 0x37
 8006374:	d803      	bhi.n	800637e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8006376:	4b3b      	ldr	r3, [pc, #236]	; (8006464 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8006378:	4a37      	ldr	r2, [pc, #220]	; (8006458 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800637a:	21a5      	movs	r1, #165	; 0xa5
 800637c:	e7e8      	b.n	8006350 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800637e:	f012 fb1f 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8006382:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006468 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8006386:	3004      	adds	r0, #4
 8006388:	f012 fb80 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800638c:	f8d9 0000 	ldr.w	r0, [r9]
 8006390:	b110      	cbz	r0, 8006398 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8006392:	6803      	ldr	r3, [r0, #0]
 8006394:	68db      	ldr	r3, [r3, #12]
 8006396:	4798      	blx	r3
    if (*currentTrans)
 8006398:	f8d9 0000 	ldr.w	r0, [r9]
 800639c:	b110      	cbz	r0, 80063a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800639e:	6803      	ldr	r3, [r0, #0]
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	4798      	blx	r3
    if (*currentScreen)
 80063a4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800646c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80063a8:	f8d8 0000 	ldr.w	r0, [r8]
 80063ac:	b110      	cbz	r0, 80063b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80063ae:	6803      	ldr	r3, [r0, #0]
 80063b0:	695b      	ldr	r3, [r3, #20]
 80063b2:	4798      	blx	r3
    if (*currentPresenter)
 80063b4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80063b8:	b110      	cbz	r0, 80063c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80063ba:	6803      	ldr	r3, [r0, #0]
 80063bc:	685b      	ldr	r3, [r3, #4]
 80063be:	4798      	blx	r3
    if (*currentScreen)
 80063c0:	f8d8 0000 	ldr.w	r0, [r8]
 80063c4:	b110      	cbz	r0, 80063cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80063c6:	6803      	ldr	r3, [r0, #0]
 80063c8:	681b      	ldr	r3, [r3, #0]
 80063ca:	4798      	blx	r3
    if (*currentPresenter)
 80063cc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80063d0:	b110      	cbz	r0, 80063d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80063d2:	6803      	ldr	r3, [r0, #0]
 80063d4:	689b      	ldr	r3, [r3, #8]
 80063d6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80063d8:	68e0      	ldr	r0, [r4, #12]
 80063da:	2100      	movs	r1, #0
 80063dc:	f7ff fbb6 	bl	8005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80063e0:	2114      	movs	r1, #20
 80063e2:	4605      	mov	r5, r0
 80063e4:	f7ff fbb6 	bl	8005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80063e8:	68a0      	ldr	r0, [r4, #8]
 80063ea:	6803      	ldr	r3, [r0, #0]
 80063ec:	2100      	movs	r1, #0
 80063ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063f0:	4798      	blx	r3
 80063f2:	4606      	mov	r6, r0
 80063f4:	f004 fce2 	bl	800adbc <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80063f8:	6860      	ldr	r0, [r4, #4]
 80063fa:	6803      	ldr	r3, [r0, #0]
 80063fc:	2100      	movs	r1, #0
 80063fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006400:	4798      	blx	r3
 8006402:	4631      	mov	r1, r6
 8006404:	4604      	mov	r4, r0
 8006406:	f004 fcb3 	bl	800ad70 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800640a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800640e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006412:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006416:	b1dc      	cbz	r4, 8006450 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8006418:	1d23      	adds	r3, r4, #4
 800641a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800641e:	6833      	ldr	r3, [r6, #0]
 8006420:	f8c4 a008 	str.w	sl, [r4, #8]
 8006424:	4630      	mov	r0, r6
 8006426:	68db      	ldr	r3, [r3, #12]
 8006428:	63f4      	str	r4, [r6, #60]	; 0x3c
 800642a:	4798      	blx	r3
    newPresenter->activate();
 800642c:	6823      	ldr	r3, [r4, #0]
 800642e:	4620      	mov	r0, r4
 8006430:	681b      	ldr	r3, [r3, #0]
 8006432:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8006434:	4629      	mov	r1, r5
 8006436:	4630      	mov	r0, r6
 8006438:	f014 f8ee 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800643c:	682b      	ldr	r3, [r5, #0]
 800643e:	4628      	mov	r0, r5
 8006440:	691b      	ldr	r3, [r3, #16]
 8006442:	4798      	blx	r3
    newTransition->invalidate();
 8006444:	682b      	ldr	r3, [r5, #0]
 8006446:	4628      	mov	r0, r5
 8006448:	695b      	ldr	r3, [r3, #20]
}
 800644a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800644e:	4718      	bx	r3
    model->bind(newPresenter);
 8006450:	4623      	mov	r3, r4
 8006452:	e7e2      	b.n	800641a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8006454:	0802f694 	.word	0x0802f694
 8006458:	08030569 	.word	0x08030569
 800645c:	0802f830 	.word	0x0802f830
 8006460:	0802f877 	.word	0x0802f877
 8006464:	0802f91a 	.word	0x0802f91a
 8006468:	20013884 	.word	0x20013884
 800646c:	20013880 	.word	0x20013880

08006470 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8006470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8006474:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006478:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800647a:	68a0      	ldr	r0, [r4, #8]
 800647c:	6803      	ldr	r3, [r0, #0]
 800647e:	6a1b      	ldr	r3, [r3, #32]
 8006480:	4798      	blx	r3
 8006482:	f241 13c3 	movw	r3, #4547	; 0x11c3
 8006486:	4298      	cmp	r0, r3
 8006488:	d805      	bhi.n	8006496 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x26>
 800648a:	4b42      	ldr	r3, [pc, #264]	; (8006594 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 800648c:	4a42      	ldr	r2, [pc, #264]	; (8006598 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 800648e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006490:	4842      	ldr	r0, [pc, #264]	; (800659c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8006492:	f027 fa65 	bl	802d960 <__assert_func>
 8006496:	6860      	ldr	r0, [r4, #4]
 8006498:	6803      	ldr	r3, [r0, #0]
 800649a:	6a1b      	ldr	r3, [r3, #32]
 800649c:	4798      	blx	r3
 800649e:	280f      	cmp	r0, #15
 80064a0:	d803      	bhi.n	80064aa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x3a>
 80064a2:	4b3f      	ldr	r3, [pc, #252]	; (80065a0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80064a4:	4a3c      	ldr	r2, [pc, #240]	; (8006598 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80064a6:	21a4      	movs	r1, #164	; 0xa4
 80064a8:	e7f2      	b.n	8006490 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80064aa:	68e0      	ldr	r0, [r4, #12]
 80064ac:	6803      	ldr	r3, [r0, #0]
 80064ae:	6a1b      	ldr	r3, [r3, #32]
 80064b0:	4798      	blx	r3
 80064b2:	2837      	cmp	r0, #55	; 0x37
 80064b4:	d803      	bhi.n	80064be <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4e>
 80064b6:	4b3b      	ldr	r3, [pc, #236]	; (80065a4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80064b8:	4a37      	ldr	r2, [pc, #220]	; (8006598 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80064ba:	21a5      	movs	r1, #165	; 0xa5
 80064bc:	e7e8      	b.n	8006490 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80064be:	f012 fa7f 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80064c2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80065a8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80064c6:	3004      	adds	r0, #4
 80064c8:	f012 fae0 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80064cc:	f8d9 0000 	ldr.w	r0, [r9]
 80064d0:	b110      	cbz	r0, 80064d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80064d2:	6803      	ldr	r3, [r0, #0]
 80064d4:	68db      	ldr	r3, [r3, #12]
 80064d6:	4798      	blx	r3
    if (*currentTrans)
 80064d8:	f8d9 0000 	ldr.w	r0, [r9]
 80064dc:	b110      	cbz	r0, 80064e4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80064de:	6803      	ldr	r3, [r0, #0]
 80064e0:	681b      	ldr	r3, [r3, #0]
 80064e2:	4798      	blx	r3
    if (*currentScreen)
 80064e4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80065ac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 80064e8:	f8d8 0000 	ldr.w	r0, [r8]
 80064ec:	b110      	cbz	r0, 80064f4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80064ee:	6803      	ldr	r3, [r0, #0]
 80064f0:	695b      	ldr	r3, [r3, #20]
 80064f2:	4798      	blx	r3
    if (*currentPresenter)
 80064f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064f8:	b110      	cbz	r0, 8006500 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80064fa:	6803      	ldr	r3, [r0, #0]
 80064fc:	685b      	ldr	r3, [r3, #4]
 80064fe:	4798      	blx	r3
    if (*currentScreen)
 8006500:	f8d8 0000 	ldr.w	r0, [r8]
 8006504:	b110      	cbz	r0, 800650c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006506:	6803      	ldr	r3, [r0, #0]
 8006508:	681b      	ldr	r3, [r3, #0]
 800650a:	4798      	blx	r3
    if (*currentPresenter)
 800650c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006510:	b110      	cbz	r0, 8006518 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006512:	6803      	ldr	r3, [r0, #0]
 8006514:	689b      	ldr	r3, [r3, #8]
 8006516:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006518:	68e0      	ldr	r0, [r4, #12]
 800651a:	2100      	movs	r1, #0
 800651c:	f7ff fb16 	bl	8005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006520:	2114      	movs	r1, #20
 8006522:	4605      	mov	r5, r0
 8006524:	f7ff fb16 	bl	8005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006528:	68a0      	ldr	r0, [r4, #8]
 800652a:	6803      	ldr	r3, [r0, #0]
 800652c:	2100      	movs	r1, #0
 800652e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006530:	4798      	blx	r3
 8006532:	4606      	mov	r6, r0
 8006534:	f004 fbe8 	bl	800ad08 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006538:	6860      	ldr	r0, [r4, #4]
 800653a:	6803      	ldr	r3, [r0, #0]
 800653c:	2100      	movs	r1, #0
 800653e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006540:	4798      	blx	r3
 8006542:	4631      	mov	r1, r6
 8006544:	4604      	mov	r4, r0
 8006546:	f004 fbb9 	bl	800acbc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 800654a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800654e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006552:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006556:	b1dc      	cbz	r4, 8006590 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x120>
 8006558:	1d23      	adds	r3, r4, #4
 800655a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800655e:	6833      	ldr	r3, [r6, #0]
 8006560:	f8c4 a008 	str.w	sl, [r4, #8]
 8006564:	4630      	mov	r0, r6
 8006566:	68db      	ldr	r3, [r3, #12]
 8006568:	63f4      	str	r4, [r6, #60]	; 0x3c
 800656a:	4798      	blx	r3
    newPresenter->activate();
 800656c:	6823      	ldr	r3, [r4, #0]
 800656e:	4620      	mov	r0, r4
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8006574:	4629      	mov	r1, r5
 8006576:	4630      	mov	r0, r6
 8006578:	f014 f84e 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800657c:	682b      	ldr	r3, [r5, #0]
 800657e:	4628      	mov	r0, r5
 8006580:	691b      	ldr	r3, [r3, #16]
 8006582:	4798      	blx	r3
    newTransition->invalidate();
 8006584:	682b      	ldr	r3, [r5, #0]
 8006586:	4628      	mov	r0, r5
 8006588:	695b      	ldr	r3, [r3, #20]
}
 800658a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800658e:	4718      	bx	r3
    model->bind(newPresenter);
 8006590:	4623      	mov	r3, r4
 8006592:	e7e2      	b.n	800655a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xea>
 8006594:	0802f694 	.word	0x0802f694
 8006598:	080306ab 	.word	0x080306ab
 800659c:	0802f830 	.word	0x0802f830
 80065a0:	0802f877 	.word	0x0802f877
 80065a4:	0802f91a 	.word	0x0802f91a
 80065a8:	20013884 	.word	0x20013884
 80065ac:	20013880 	.word	0x20013880

080065b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80065b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80065b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80065b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80065ba:	68a0      	ldr	r0, [r4, #8]
 80065bc:	6803      	ldr	r3, [r0, #0]
 80065be:	6a1b      	ldr	r3, [r3, #32]
 80065c0:	4798      	blx	r3
 80065c2:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80065c6:	4298      	cmp	r0, r3
 80065c8:	d805      	bhi.n	80065d6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x26>
 80065ca:	4b42      	ldr	r3, [pc, #264]	; (80066d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80065cc:	4a42      	ldr	r2, [pc, #264]	; (80066d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065ce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80065d0:	4842      	ldr	r0, [pc, #264]	; (80066dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 80065d2:	f027 f9c5 	bl	802d960 <__assert_func>
 80065d6:	6860      	ldr	r0, [r4, #4]
 80065d8:	6803      	ldr	r3, [r0, #0]
 80065da:	6a1b      	ldr	r3, [r3, #32]
 80065dc:	4798      	blx	r3
 80065de:	280f      	cmp	r0, #15
 80065e0:	d803      	bhi.n	80065ea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x3a>
 80065e2:	4b3f      	ldr	r3, [pc, #252]	; (80066e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 80065e4:	4a3c      	ldr	r2, [pc, #240]	; (80066d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065e6:	21a4      	movs	r1, #164	; 0xa4
 80065e8:	e7f2      	b.n	80065d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80065ea:	68e0      	ldr	r0, [r4, #12]
 80065ec:	6803      	ldr	r3, [r0, #0]
 80065ee:	6a1b      	ldr	r3, [r3, #32]
 80065f0:	4798      	blx	r3
 80065f2:	2837      	cmp	r0, #55	; 0x37
 80065f4:	d803      	bhi.n	80065fe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4e>
 80065f6:	4b3b      	ldr	r3, [pc, #236]	; (80066e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 80065f8:	4a37      	ldr	r2, [pc, #220]	; (80066d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065fa:	21a5      	movs	r1, #165	; 0xa5
 80065fc:	e7e8      	b.n	80065d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80065fe:	f012 f9df 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8006602:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80066e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8006606:	3004      	adds	r0, #4
 8006608:	f012 fa40 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800660c:	f8d9 0000 	ldr.w	r0, [r9]
 8006610:	b110      	cbz	r0, 8006618 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8006612:	6803      	ldr	r3, [r0, #0]
 8006614:	68db      	ldr	r3, [r3, #12]
 8006616:	4798      	blx	r3
    if (*currentTrans)
 8006618:	f8d9 0000 	ldr.w	r0, [r9]
 800661c:	b110      	cbz	r0, 8006624 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800661e:	6803      	ldr	r3, [r0, #0]
 8006620:	681b      	ldr	r3, [r3, #0]
 8006622:	4798      	blx	r3
    if (*currentScreen)
 8006624:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80066ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8006628:	f8d8 0000 	ldr.w	r0, [r8]
 800662c:	b110      	cbz	r0, 8006634 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800662e:	6803      	ldr	r3, [r0, #0]
 8006630:	695b      	ldr	r3, [r3, #20]
 8006632:	4798      	blx	r3
    if (*currentPresenter)
 8006634:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006638:	b110      	cbz	r0, 8006640 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800663a:	6803      	ldr	r3, [r0, #0]
 800663c:	685b      	ldr	r3, [r3, #4]
 800663e:	4798      	blx	r3
    if (*currentScreen)
 8006640:	f8d8 0000 	ldr.w	r0, [r8]
 8006644:	b110      	cbz	r0, 800664c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006646:	6803      	ldr	r3, [r0, #0]
 8006648:	681b      	ldr	r3, [r3, #0]
 800664a:	4798      	blx	r3
    if (*currentPresenter)
 800664c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006650:	b110      	cbz	r0, 8006658 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006652:	6803      	ldr	r3, [r0, #0]
 8006654:	689b      	ldr	r3, [r3, #8]
 8006656:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006658:	68e0      	ldr	r0, [r4, #12]
 800665a:	2100      	movs	r1, #0
 800665c:	f7ff fa76 	bl	8005b4c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006660:	2114      	movs	r1, #20
 8006662:	4605      	mov	r5, r0
 8006664:	f7ff fa76 	bl	8005b54 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006668:	68a0      	ldr	r0, [r4, #8]
 800666a:	6803      	ldr	r3, [r0, #0]
 800666c:	2100      	movs	r1, #0
 800666e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006670:	4798      	blx	r3
 8006672:	4606      	mov	r6, r0
 8006674:	f004 fa04 	bl	800aa80 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006678:	6860      	ldr	r0, [r4, #4]
 800667a:	6803      	ldr	r3, [r0, #0]
 800667c:	2100      	movs	r1, #0
 800667e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006680:	4798      	blx	r3
 8006682:	4631      	mov	r1, r6
 8006684:	4604      	mov	r4, r0
 8006686:	f004 f9d5 	bl	800aa34 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 800668a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800668e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006692:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006696:	b1dc      	cbz	r4, 80066d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x120>
 8006698:	1d23      	adds	r3, r4, #4
 800669a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800669e:	6833      	ldr	r3, [r6, #0]
 80066a0:	f8c4 a008 	str.w	sl, [r4, #8]
 80066a4:	4630      	mov	r0, r6
 80066a6:	68db      	ldr	r3, [r3, #12]
 80066a8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80066aa:	4798      	blx	r3
    newPresenter->activate();
 80066ac:	6823      	ldr	r3, [r4, #0]
 80066ae:	4620      	mov	r0, r4
 80066b0:	681b      	ldr	r3, [r3, #0]
 80066b2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80066b4:	4629      	mov	r1, r5
 80066b6:	4630      	mov	r0, r6
 80066b8:	f013 ffae 	bl	801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80066bc:	682b      	ldr	r3, [r5, #0]
 80066be:	4628      	mov	r0, r5
 80066c0:	691b      	ldr	r3, [r3, #16]
 80066c2:	4798      	blx	r3
    newTransition->invalidate();
 80066c4:	682b      	ldr	r3, [r5, #0]
 80066c6:	4628      	mov	r0, r5
 80066c8:	695b      	ldr	r3, [r3, #20]
}
 80066ca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80066ce:	4718      	bx	r3
    model->bind(newPresenter);
 80066d0:	4623      	mov	r3, r4
 80066d2:	e7e2      	b.n	800669a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xea>
 80066d4:	0802f694 	.word	0x0802f694
 80066d8:	080307d7 	.word	0x080307d7
 80066dc:	0802f830 	.word	0x0802f830
 80066e0:	0802f877 	.word	0x0802f877
 80066e4:	0802f91a 	.word	0x0802f91a
 80066e8:	20013884 	.word	0x20013884
 80066ec:	20013880 	.word	0x20013880

080066f0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80066f0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80066f2:	4770      	bx	lr

080066f4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80066f4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80066f6:	4770      	bx	lr

080066f8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80066f8:	4770      	bx	lr

080066fa <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80066fa:	888b      	ldrh	r3, [r1, #4]
 80066fc:	69c0      	ldr	r0, [r0, #28]
 80066fe:	680a      	ldr	r2, [r1, #0]
 8006700:	0adb      	lsrs	r3, r3, #11
 8006702:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8006706:	4410      	add	r0, r2
 8006708:	4770      	bx	lr

0800670a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800670a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800670c:	b1c2      	cbz	r2, 8006740 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800670e:	7b13      	ldrb	r3, [r2, #12]
 8006710:	b1b3      	cbz	r3, 8006740 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8006712:	7b54      	ldrb	r4, [r2, #13]
 8006714:	7ad2      	ldrb	r2, [r2, #11]
 8006716:	0224      	lsls	r4, r4, #8
 8006718:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800671c:	4314      	orrs	r4, r2
 800671e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006720:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006722:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8006726:	8813      	ldrh	r3, [r2, #0]
 8006728:	428b      	cmp	r3, r1
 800672a:	d102      	bne.n	8006732 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800672c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006730:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8006732:	d805      	bhi.n	8006740 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006734:	3801      	subs	r0, #1
 8006736:	b280      	uxth	r0, r0
 8006738:	3204      	adds	r2, #4
 800673a:	2800      	cmp	r0, #0
 800673c:	d1f3      	bne.n	8006726 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800673e:	e7f7      	b.n	8006730 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006740:	2000      	movs	r0, #0
 8006742:	e7f5      	b.n	8006730 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08006744 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8006744:	b510      	push	{r4, lr}
 8006746:	212c      	movs	r1, #44	; 0x2c
 8006748:	4604      	mov	r4, r0
 800674a:	f026 fa22 	bl	802cb92 <_ZdlPvj>
 800674e:	4620      	mov	r0, r4
 8006750:	bd10      	pop	{r4, pc}
	...

08006754 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8006754:	b530      	push	{r4, r5, lr}
 8006756:	b08b      	sub	sp, #44	; 0x2c
 8006758:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800675a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800675e:	9508      	str	r5, [sp, #32]
 8006760:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8006764:	9507      	str	r5, [sp, #28]
 8006766:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800676a:	9506      	str	r5, [sp, #24]
 800676c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8006770:	9505      	str	r5, [sp, #20]
 8006772:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8006776:	9504      	str	r5, [sp, #16]
 8006778:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800677c:	9503      	str	r5, [sp, #12]
 800677e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8006782:	9502      	str	r5, [sp, #8]
 8006784:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006788:	9501      	str	r5, [sp, #4]
 800678a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800678e:	9500      	str	r5, [sp, #0]
 8006790:	f013 faac 	bl	8019cec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8006794:	4b06      	ldr	r3, [pc, #24]	; (80067b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8006796:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006798:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800679a:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 800679c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800679e:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80067a0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80067a2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80067a4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80067a6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80067a8:	4620      	mov	r0, r4
 80067aa:	b00b      	add	sp, #44	; 0x2c
 80067ac:	bd30      	pop	{r4, r5, pc}
 80067ae:	bf00      	nop
 80067b0:	08030a40 	.word	0x08030a40

080067b4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80067b4:	4770      	bx	lr

080067b6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067b6:	4770      	bx	lr

080067b8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80067b8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067ba:	68c2      	ldr	r2, [r0, #12]
 80067bc:	6844      	ldr	r4, [r0, #4]
 80067be:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80067c0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80067c2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80067c6:	07d2      	lsls	r2, r2, #31
 80067c8:	bf48      	it	mi
 80067ca:	5962      	ldrmi	r2, [r4, r5]
 80067cc:	689b      	ldr	r3, [r3, #8]
    }
 80067ce:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067d0:	bf48      	it	mi
 80067d2:	58d3      	ldrmi	r3, [r2, r3]
 80067d4:	4718      	bx	r3

080067d6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80067d6:	6843      	ldr	r3, [r0, #4]
 80067d8:	b12b      	cbz	r3, 80067e6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80067da:	6883      	ldr	r3, [r0, #8]
 80067dc:	b92b      	cbnz	r3, 80067ea <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80067de:	68c0      	ldr	r0, [r0, #12]
 80067e0:	f000 0001 	and.w	r0, r0, #1
 80067e4:	4770      	bx	lr
 80067e6:	4618      	mov	r0, r3
 80067e8:	4770      	bx	lr
 80067ea:	2001      	movs	r0, #1
    }
 80067ec:	4770      	bx	lr

080067ee <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067ee:	b510      	push	{r4, lr}
 80067f0:	2110      	movs	r1, #16
 80067f2:	4604      	mov	r4, r0
 80067f4:	f026 f9cd 	bl	802cb92 <_ZdlPvj>
 80067f8:	4620      	mov	r0, r4
 80067fa:	bd10      	pop	{r4, pc}

080067fc <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80067fc:	b510      	push	{r4, lr}
 80067fe:	4b03      	ldr	r3, [pc, #12]	; (800680c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8006800:	6003      	str	r3, [r0, #0]
 8006802:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006804:	f010 fbda 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006808:	4620      	mov	r0, r4
 800680a:	bd10      	pop	{r4, pc}
 800680c:	08030ab8 	.word	0x08030ab8

08006810 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006810:	b507      	push	{r0, r1, r2, lr}
 8006812:	4b07      	ldr	r3, [pc, #28]	; (8006830 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8006814:	6003      	str	r3, [r0, #0]
 8006816:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006818:	f010 fbd0 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800681c:	9801      	ldr	r0, [sp, #4]
 800681e:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 8006822:	f026 f9b6 	bl	802cb92 <_ZdlPvj>
 8006826:	9801      	ldr	r0, [sp, #4]
 8006828:	b003      	add	sp, #12
 800682a:	f85d fb04 	ldr.w	pc, [sp], #4
 800682e:	bf00      	nop
 8006830:	08030ab8 	.word	0x08030ab8

08006834 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006834:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Measure)
 8006836:	f500 73ba 	add.w	r3, r0, #372	; 0x174
 800683a:	4299      	cmp	r1, r3
{
 800683c:	4604      	mov	r4, r0
 800683e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Measure)
 8006840:	d103      	bne.n	800684a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006842:	f012 f8bd 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Measure clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8006846:	f7fe feaf 	bl	80055a8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Calibration)
 800684a:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800684e:	429d      	cmp	r5, r3
 8006850:	d103      	bne.n	800685a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006852:	f012 f8b5 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Calibration clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8006856:	f7fe ff37 	bl	80056c8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_ProjectInfo)
 800685a:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800685e:	429d      	cmp	r5, r3
 8006860:	d103      	bne.n	800686a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8006862:	f012 f8ad 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel_ProjectInfo clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8006866:	f7fe ff3f 	bl	80056e8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon_turn_off)
 800686a:	f504 7467 	add.w	r4, r4, #924	; 0x39c
 800686e:	42a5      	cmp	r5, r4
 8006870:	d10a      	bne.n	8006888 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon_turn_off clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8006872:	4806      	ldr	r0, [pc, #24]	; (800688c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8006874:	2200      	movs	r2, #0
 8006876:	2120      	movs	r1, #32
 8006878:	f005 fa84 	bl	800bd84 <HAL_GPIO_WritePin>
 800687c:	f012 f8a0 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon_turn_off clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8006880:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8006884:	f7fe bf40 	b.w	8005708 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006888:	bd38      	pop	{r3, r4, r5, pc}
 800688a:	bf00      	nop
 800688c:	40021000 	.word	0x40021000

08006890 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8006890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006894:	ed2d 8b08 	vpush	{d8-d11}
 8006898:	4604      	mov	r4, r0
 800689a:	b091      	sub	sp, #68	; 0x44
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 800689c:	46a2      	mov	sl, r4
        : presenter(0)
 800689e:	2500      	movs	r5, #0
 80068a0:	f013 fd0e 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 80068a4:	4b75      	ldr	r3, [pc, #468]	; (8006a7c <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
 80068a6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80068a8:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 80068ac:	2226      	movs	r2, #38	; 0x26
 80068ae:	4629      	mov	r1, r5
 80068b0:	4650      	mov	r0, sl
 80068b2:	f027 fa5a 	bl	802dd6a <memset>
 80068b6:	4650      	mov	r0, sl
 80068b8:	f7fc ff10 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 80068bc:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 80068c0:	26ff      	movs	r6, #255	; 0xff
 80068c2:	4b6f      	ldr	r3, [pc, #444]	; (8006a80 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80068c4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80068c6:	2226      	movs	r2, #38	; 0x26
 80068c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80068cc:	4629      	mov	r1, r5
 80068ce:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80068d2:	4648      	mov	r0, r9
        : color(col)
 80068d4:	66a5      	str	r5, [r4, #104]	; 0x68
 80068d6:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80068da:	f027 fa46 	bl	802dd6a <memset>
 80068de:	4648      	mov	r0, r9
 80068e0:	f7fc fefc 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 80068e4:	4b67      	ldr	r3, [pc, #412]	; (8006a84 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>)
 80068e6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80068e8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80068ec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80068f0:	a90e      	add	r1, sp, #56	; 0x38
 80068f2:	4648      	mov	r0, r9
 80068f4:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80068f8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80068fc:	f00f fb61 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006900:	4640      	mov	r0, r8
 8006902:	f7fc ff4f 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006906:	4b60      	ldr	r3, [pc, #384]	; (8006a88 <_ZN17Main_MenuViewBaseC1Ev+0x1f8>)
 8006908:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800690c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006910:	4618      	mov	r0, r3
 8006912:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006916:	ee09 3a90 	vmov	s19, r3
 800691a:	f00f fc89 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800691e:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006922:	4618      	mov	r0, r3
 8006924:	ee0a 3a10 	vmov	s20, r3
 8006928:	f00f fc82 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800692c:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006930:	4618      	mov	r0, r3
 8006932:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8006936:	ee0a 3a90 	vmov	s21, r3
 800693a:	f00f fc79 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800693e:	4638      	mov	r0, r7
 8006940:	f00e f832 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006944:	4e51      	ldr	r6, [pc, #324]	; (8006a8c <_ZN17Main_MenuViewBaseC1Ev+0x1fc>)
 8006946:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 800694a:	4618      	mov	r0, r3
 800694c:	9304      	str	r3, [sp, #16]
 800694e:	f7fc fcc7 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006952:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006956:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 800695a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800695e:	4618      	mov	r0, r3
 8006960:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8006964:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006968:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 800696c:	ee08 3a10 	vmov	s16, r3
 8006970:	f7fc ff18 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006974:	4658      	mov	r0, fp
 8006976:	f00e f817 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 800697a:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 800697e:	4618      	mov	r0, r3
 8006980:	9305      	str	r3, [sp, #20]
 8006982:	f7fc fcad 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006986:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800698a:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 800698e:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8006992:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8006996:	4618      	mov	r0, r3
 8006998:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 800699c:	ee08 3a90 	vmov	s17, r3
 80069a0:	f7fc ff00 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80069a4:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80069a8:	4618      	mov	r0, r3
 80069aa:	ee09 3a10 	vmov	s18, r3
 80069ae:	f7fc fef9 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80069b2:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 80069b6:	4618      	mov	r0, r3
 80069b8:	ee0b 3a10 	vmov	s22, r3
 80069bc:	f00f fada 	bl	8015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80069c0:	4a33      	ldr	r2, [pc, #204]	; (8006a90 <_ZN17Main_MenuViewBaseC1Ev+0x200>)
 80069c2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80069c6:	e9c3 247c 	strd	r2, r4, [r3, #496]	; 0x1f0
 80069ca:	4a32      	ldr	r2, [pc, #200]	; (8006a94 <_ZN17Main_MenuViewBaseC1Ev+0x204>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80069cc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80069d0:	e9c3 257e 	strd	r2, r5, [r3, #504]	; 0x1f8
 80069d4:	f504 7078 	add.w	r0, r4, #992	; 0x3e0
 80069d8:	f010 fae6 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80069dc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80069e0:	462a      	mov	r2, r5
 80069e2:	4650      	mov	r0, sl
 80069e4:	9300      	str	r3, [sp, #0]
 80069e6:	4629      	mov	r1, r5
 80069e8:	23f0      	movs	r3, #240	; 0xf0
 80069ea:	f7fc fe52 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069ee:	1d26      	adds	r6, r4, #4
        color = newColor;
 80069f0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80069f4:	66a3      	str	r3, [r4, #104]	; 0x68
 80069f6:	4651      	mov	r1, sl
 80069f8:	4630      	mov	r0, r6
 80069fa:	f00b ff09 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80069fe:	462a      	mov	r2, r5
 8006a00:	4648      	mov	r0, r9
 8006a02:	4629      	mov	r1, r5
 8006a04:	f7fc fe38 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8006a08:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006a0a:	4648      	mov	r0, r9
 8006a0c:	a90e      	add	r1, sp, #56	; 0x38
 8006a0e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006a12:	f00f fad6 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006a16:	4649      	mov	r1, r9
 8006a18:	4630      	mov	r0, r6
 8006a1a:	f00b fef9 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006a1e:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006a22:	2156      	movs	r1, #86	; 0x56
 8006a24:	4640      	mov	r0, r8
 8006a26:	f7fc fe27 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8006a2a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006a2e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006a32:	f10d 0918 	add.w	r9, sp, #24
        color = newColor;
 8006a36:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8006a3a:	4648      	mov	r0, r9
 8006a3c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006a40:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006a44:	4641      	mov	r1, r8
 8006a46:	4798      	blx	r3
 8006a48:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006a4c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006a50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a54:	4b10      	ldr	r3, [pc, #64]	; (8006a98 <_ZN17Main_MenuViewBaseC1Ev+0x208>)
 8006a56:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8006a58:	f504 7976 	add.w	r9, r4, #984	; 0x3d8
 8006a5c:	b92b      	cbnz	r3, 8006a6a <_ZN17Main_MenuViewBaseC1Ev+0x1da>
 8006a5e:	4b0f      	ldr	r3, [pc, #60]	; (8006a9c <_ZN17Main_MenuViewBaseC1Ev+0x20c>)
 8006a60:	4a0f      	ldr	r2, [pc, #60]	; (8006aa0 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006a62:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a64:	480f      	ldr	r0, [pc, #60]	; (8006aa4 <_ZN17Main_MenuViewBaseC1Ev+0x214>)
 8006a66:	f026 ff7b 	bl	802d960 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006a6a:	4b0f      	ldr	r3, [pc, #60]	; (8006aa8 <_ZN17Main_MenuViewBaseC1Ev+0x218>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a6c:	881b      	ldrh	r3, [r3, #0]
 8006a6e:	2b54      	cmp	r3, #84	; 0x54
 8006a70:	d81e      	bhi.n	8006ab0 <_ZN17Main_MenuViewBaseC1Ev+0x220>
 8006a72:	4b0e      	ldr	r3, [pc, #56]	; (8006aac <_ZN17Main_MenuViewBaseC1Ev+0x21c>)
 8006a74:	4a0a      	ldr	r2, [pc, #40]	; (8006aa0 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006a76:	2161      	movs	r1, #97	; 0x61
 8006a78:	e7f4      	b.n	8006a64 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>
 8006a7a:	bf00      	nop
 8006a7c:	08030ab8 	.word	0x08030ab8
 8006a80:	08031a70 	.word	0x08031a70
 8006a84:	08031cbc 	.word	0x08031cbc
 8006a88:	0802f5b4 	.word	0x0802f5b4
 8006a8c:	080317a4 	.word	0x080317a4
 8006a90:	08030aa0 	.word	0x08030aa0
 8006a94:	08006835 	.word	0x08006835
 8006a98:	20013894 	.word	0x20013894
 8006a9c:	0802f364 	.word	0x0802f364
 8006aa0:	0802f469 	.word	0x0802f469
 8006aa4:	0802f3e1 	.word	0x0802f3e1
 8006aa8:	20013898 	.word	0x20013898
 8006aac:	0802f428 	.word	0x0802f428
        return texts->getText(typedTextId);
 8006ab0:	4bc1      	ldr	r3, [pc, #772]	; (8006db8 <_ZN17Main_MenuViewBaseC1Ev+0x528>)
 8006ab2:	2154      	movs	r1, #84	; 0x54
 8006ab4:	6818      	ldr	r0, [r3, #0]
 8006ab6:	f003 fdf3 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8006aba:	4ac0      	ldr	r2, [pc, #768]	; (8006dbc <_ZN17Main_MenuViewBaseC1Ev+0x52c>)
 8006abc:	4603      	mov	r3, r0
 8006abe:	2104      	movs	r1, #4
 8006ac0:	4648      	mov	r0, r9
 8006ac2:	f015 f92b 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8006ac6:	4640      	mov	r0, r8
        wc1 = value;
 8006ac8:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8006acc:	f00e fca8 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006ad0:	4bbb      	ldr	r3, [pc, #748]	; (8006dc0 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006ad2:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006ad4:	4640      	mov	r0, r8
 8006ad6:	2355      	movs	r3, #85	; 0x55
 8006ad8:	a90e      	add	r1, sp, #56	; 0x38
 8006ada:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006ade:	f00e fcbf 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ae2:	4641      	mov	r1, r8
 8006ae4:	4630      	mov	r0, r6
 8006ae6:	f00b fe93 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_ProjectInfo.setXY(33, 240);
 8006aea:	ee19 0a90 	vmov	r0, s19
 8006aee:	22f0      	movs	r2, #240	; 0xf0
 8006af0:	2121      	movs	r1, #33	; 0x21
 8006af2:	f7fc fdc1 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8006af6:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel_ProjectInfo.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006afa:	aa0e      	add	r2, sp, #56	; 0x38
 8006afc:	f04f 0802 	mov.w	r8, #2
 8006b00:	a90d      	add	r1, sp, #52	; 0x34
 8006b02:	ee19 0a90 	vmov	r0, s19
 8006b06:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b0a:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b0e:	f00f f862 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006b12:	236f      	movs	r3, #111	; 0x6f
        updateTextPosition();
 8006b14:	ee19 0a90 	vmov	r0, s19
 8006b18:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 8006b1c:	f7fc fdf0 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_ProjectInfo.setAction(buttonCallback);
 8006b20:	f504 538f 	add.w	r3, r4, #4576	; 0x11e0
 8006b24:	3310      	adds	r3, #16
 8006b26:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8006b2a:	ee19 1a90 	vmov	r1, s19
 8006b2e:	4630      	mov	r0, r6
        colorPressed = col;
 8006b30:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8006b34:	9303      	str	r3, [sp, #12]
 8006b36:	f00b fe6b 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Calibration.setXY(33, 170);
 8006b3a:	ee1a 0a10 	vmov	r0, s20
 8006b3e:	22aa      	movs	r2, #170	; 0xaa
 8006b40:	2121      	movs	r1, #33	; 0x21
 8006b42:	f7fc fd99 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Calibration.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b46:	aa0e      	add	r2, sp, #56	; 0x38
 8006b48:	a90d      	add	r1, sp, #52	; 0x34
 8006b4a:	ee1a 0a10 	vmov	r0, s20
 8006b4e:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b52:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b56:	f00f f83e 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b5a:	2370      	movs	r3, #112	; 0x70
        updateTextPosition();
 8006b5c:	ee1a 0a10 	vmov	r0, s20
 8006b60:	f8a4 3164 	strh.w	r3, [r4, #356]	; 0x164
 8006b64:	f7fc fdcc 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b68:	9b03      	ldr	r3, [sp, #12]
 8006b6a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006b6e:	ee1a 1a10 	vmov	r1, s20
 8006b72:	4630      	mov	r0, r6
        colorPressed = col;
 8006b74:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8006b78:	f00b fe4a 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Measure.setXY(33, 100);
 8006b7c:	ee1a 0a90 	vmov	r0, s21
 8006b80:	2264      	movs	r2, #100	; 0x64
 8006b82:	2121      	movs	r1, #33	; 0x21
 8006b84:	f7fc fd78 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Measure.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b88:	aa0e      	add	r2, sp, #56	; 0x38
 8006b8a:	a90d      	add	r1, sp, #52	; 0x34
 8006b8c:	ee1a 0a90 	vmov	r0, s21
 8006b90:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b94:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b98:	f00f f81d 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b9c:	2371      	movs	r3, #113	; 0x71
        updateTextPosition();
 8006b9e:	ee1a 0a90 	vmov	r0, s21
 8006ba2:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006ba6:	f7fc fdab 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006baa:	9b03      	ldr	r3, [sp, #12]
 8006bac:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006bb0:	ee1a 1a90 	vmov	r1, s21
 8006bb4:	4630      	mov	r0, r6
        colorPressed = col;
 8006bb6:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8006bba:	f00b fe29 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8006bbe:	230a      	movs	r3, #10
 8006bc0:	9300      	str	r3, [sp, #0]
 8006bc2:	224b      	movs	r2, #75	; 0x4b
 8006bc4:	23f0      	movs	r3, #240	; 0xf0
 8006bc6:	4629      	mov	r1, r5
 8006bc8:	4638      	mov	r0, r7
 8006bca:	f7fc fd62 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bce:	9b04      	ldr	r3, [sp, #16]
 8006bd0:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006bd4:	22a0      	movs	r2, #160	; 0xa0
 8006bd6:	4611      	mov	r1, r2
 8006bd8:	4638      	mov	r0, r7
 8006bda:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006bde:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8006be2:	f00d fff7 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006be6:	22a0      	movs	r2, #160	; 0xa0
 8006be8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006bec:	4638      	mov	r0, r7
 8006bee:	f00d fffc 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006bf2:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8006bf6:	2b20      	cmp	r3, #32
 8006bf8:	d005      	beq.n	8006c06 <_ZN17Main_MenuViewBaseC1Ev+0x376>
        lineWidthQ5 = widthQ5;
 8006bfa:	2320      	movs	r3, #32
 8006bfc:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8006c00:	4638      	mov	r0, r7
 8006c02:	f00d fef1 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006c06:	4638      	mov	r0, r7
 8006c08:	2101      	movs	r1, #1
 8006c0a:	f00d fff9 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006c0e:	4639      	mov	r1, r7
 8006c10:	4630      	mov	r0, r6
 8006c12:	f00b fdfd 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006c16:	f04f 35ff 	mov.w	r5, #4294967295
    textArea_menu.setXY(88, 60);
 8006c1a:	223c      	movs	r2, #60	; 0x3c
 8006c1c:	ee18 0a10 	vmov	r0, s16
 8006c20:	2158      	movs	r1, #88	; 0x58
        linespace = space;
 8006c22:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006c24:	f10d 0818 	add.w	r8, sp, #24
 8006c28:	f7fc fd26 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8006c2c:	ee18 1a10 	vmov	r1, s16
 8006c30:	4640      	mov	r0, r8
        color = newColor;
 8006c32:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
        linespace = space;
 8006c36:	f8a4 7274 	strh.w	r7, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8006c3a:	f00e f977 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c3e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006c42:	ee18 3a10 	vmov	r3, s16
 8006c46:	333c      	adds	r3, #60	; 0x3c
 8006c48:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006c4c:	4b5c      	ldr	r3, [pc, #368]	; (8006dc0 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006c4e:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006c50:	ee18 0a10 	vmov	r0, s16
 8006c54:	2344      	movs	r3, #68	; 0x44
 8006c56:	a90e      	add	r1, sp, #56	; 0x38
 8006c58:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006c5c:	f00e fc00 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c60:	ee18 1a10 	vmov	r1, s16
 8006c64:	4630      	mov	r0, r6
 8006c66:	f00b fdd3 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006c6a:	230a      	movs	r3, #10
 8006c6c:	9300      	str	r3, [sp, #0]
 8006c6e:	2232      	movs	r2, #50	; 0x32
 8006c70:	23f0      	movs	r3, #240	; 0xf0
 8006c72:	4639      	mov	r1, r7
 8006c74:	4658      	mov	r0, fp
 8006c76:	f7fc fd0c 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c7a:	9b05      	ldr	r3, [sp, #20]
 8006c7c:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c80:	22a0      	movs	r2, #160	; 0xa0
 8006c82:	4611      	mov	r1, r2
 8006c84:	4658      	mov	r0, fp
 8006c86:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006c8a:	f8a4 5308 	strh.w	r5, [r4, #776]	; 0x308
 8006c8e:	f00d ffa1 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c92:	22a0      	movs	r2, #160	; 0xa0
 8006c94:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006c98:	4658      	mov	r0, fp
 8006c9a:	f00d ffa6 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006c9e:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8006ca2:	2b20      	cmp	r3, #32
 8006ca4:	d005      	beq.n	8006cb2 <_ZN17Main_MenuViewBaseC1Ev+0x422>
        lineWidthQ5 = widthQ5;
 8006ca6:	2320      	movs	r3, #32
 8006ca8:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8006cac:	4658      	mov	r0, fp
 8006cae:	f00d fe9b 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006cb2:	4658      	mov	r0, fp
 8006cb4:	2101      	movs	r1, #1
 8006cb6:	f00d ffa3 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006cba:	4659      	mov	r1, fp
 8006cbc:	4630      	mov	r0, r6
 8006cbe:	f00b fda7 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006cc2:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006cc4:	ad06      	add	r5, sp, #24
    textArea_name.setXY(69, 35);
 8006cc6:	ee18 0a90 	vmov	r0, s17
 8006cca:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8006ccc:	f04f 39ff 	mov.w	r9, #4294967295
 8006cd0:	2145      	movs	r1, #69	; 0x45
 8006cd2:	f7fc fcd1 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006cd6:	ee18 1a90 	vmov	r1, s17
 8006cda:	4628      	mov	r0, r5
        color = newColor;
 8006cdc:	f8c4 933c 	str.w	r9, [r4, #828]	; 0x33c
        linespace = space;
 8006ce0:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8006ce4:	f00e f922 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ce8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006cec:	ee18 3a90 	vmov	r3, s17
 8006cf0:	333c      	adds	r3, #60	; 0x3c
 8006cf2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8006cf6:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8006cfa:	4b31      	ldr	r3, [pc, #196]	; (8006dc0 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006cfc:	930e      	str	r3, [sp, #56]	; 0x38
 8006cfe:	ee18 0a90 	vmov	r0, s17
 8006d02:	236d      	movs	r3, #109	; 0x6d
 8006d04:	4641      	mov	r1, r8
 8006d06:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006d0a:	f00e fba9 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d0e:	ee18 1a90 	vmov	r1, s17
 8006d12:	4630      	mov	r0, r6
 8006d14:	f00b fd7c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8006d18:	ee19 0a10 	vmov	r0, s18
 8006d1c:	220c      	movs	r2, #12
 8006d1e:	2136      	movs	r1, #54	; 0x36
 8006d20:	f7fc fcaa 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8006d24:	ee19 1a10 	vmov	r1, s18
 8006d28:	4628      	mov	r0, r5
        color = newColor;
 8006d2a:	f8c4 9384 	str.w	r9, [r4, #900]	; 0x384
        linespace = space;
 8006d2e:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8006d32:	f00e f8fb 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d36:	ee19 2a10 	vmov	r2, s18
 8006d3a:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8006d3e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006d42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d46:	4b1e      	ldr	r3, [pc, #120]	; (8006dc0 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006d48:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006d4a:	ee19 0a10 	vmov	r0, s18
 8006d4e:	236e      	movs	r3, #110	; 0x6e
 8006d50:	4641      	mov	r1, r8
 8006d52:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006d56:	f00e fb83 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d5a:	ee19 1a10 	vmov	r1, s18
 8006d5e:	4630      	mov	r0, r6
 8006d60:	f00b fd56 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_turn_off.setXY(198, 5);
 8006d64:	ee1b 0a10 	vmov	r0, s22
 8006d68:	2205      	movs	r2, #5
 8006d6a:	21c6      	movs	r1, #198	; 0xc6
 8006d6c:	f7fc fc84 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8006d70:	2301      	movs	r3, #1
 8006d72:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006d76:	230a      	movs	r3, #10
    buttonWithIcon_turn_off.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006d78:	ee1b 0a10 	vmov	r0, s22
 8006d7c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006d80:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006d84:	aa0c      	add	r2, sp, #48	; 0x30
 8006d86:	ab0d      	add	r3, sp, #52	; 0x34
 8006d88:	a90b      	add	r1, sp, #44	; 0x2c
 8006d8a:	f8cd 8000 	str.w	r8, [sp]
 8006d8e:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8006d92:	f00f f85a 	bl	8015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006d96:	9b03      	ldr	r3, [sp, #12]
 8006d98:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
 8006d9c:	4630      	mov	r0, r6
 8006d9e:	ee1b 1a10 	vmov	r1, s22
 8006da2:	f8c4 33c4 	str.w	r3, [r4, #964]	; 0x3c4
 8006da6:	f00b fd33 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006daa:	4620      	mov	r0, r4
 8006dac:	b011      	add	sp, #68	; 0x44
 8006dae:	ecbd 8b08 	vpop	{d8-d11}
 8006db2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006db6:	bf00      	nop
 8006db8:	200138a0 	.word	0x200138a0
 8006dbc:	0802f4a1 	.word	0x0802f4a1
 8006dc0:	0802f514 	.word	0x0802f514

08006dc4 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006dc4:	4770      	bx	lr

08006dc6 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006dc6:	4770      	bx	lr

08006dc8 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006dc8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006dca:	68c2      	ldr	r2, [r0, #12]
 8006dcc:	6844      	ldr	r4, [r0, #4]
 8006dce:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006dd0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006dd2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006dd6:	07d2      	lsls	r2, r2, #31
 8006dd8:	bf48      	it	mi
 8006dda:	5962      	ldrmi	r2, [r4, r5]
 8006ddc:	689b      	ldr	r3, [r3, #8]
    }
 8006dde:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006de0:	bf48      	it	mi
 8006de2:	58d3      	ldrmi	r3, [r2, r3]
 8006de4:	4718      	bx	r3

08006de6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006de6:	6843      	ldr	r3, [r0, #4]
 8006de8:	b12b      	cbz	r3, 8006df6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006dea:	6883      	ldr	r3, [r0, #8]
 8006dec:	b92b      	cbnz	r3, 8006dfa <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006dee:	68c0      	ldr	r0, [r0, #12]
 8006df0:	f000 0001 	and.w	r0, r0, #1
 8006df4:	4770      	bx	lr
 8006df6:	4618      	mov	r0, r3
 8006df8:	4770      	bx	lr
 8006dfa:	2001      	movs	r0, #1
    }
 8006dfc:	4770      	bx	lr

08006dfe <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006dfe:	b510      	push	{r4, lr}
 8006e00:	2110      	movs	r1, #16
 8006e02:	4604      	mov	r4, r0
 8006e04:	f025 fec5 	bl	802cb92 <_ZdlPvj>
 8006e08:	4620      	mov	r0, r4
 8006e0a:	bd10      	pop	{r4, pc}

08006e0c <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006e0c:	b510      	push	{r4, lr}
 8006e0e:	4b03      	ldr	r3, [pc, #12]	; (8006e1c <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006e10:	6003      	str	r3, [r0, #0]
 8006e12:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e14:	f010 f8d2 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e18:	4620      	mov	r0, r4
 8006e1a:	bd10      	pop	{r4, pc}
 8006e1c:	08030b04 	.word	0x08030b04

08006e20 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006e20:	b507      	push	{r0, r1, r2, lr}
 8006e22:	4b07      	ldr	r3, [pc, #28]	; (8006e40 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006e24:	6003      	str	r3, [r0, #0]
 8006e26:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e28:	f010 f8c8 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e2c:	9801      	ldr	r0, [sp, #4]
 8006e2e:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8006e32:	f025 feae 	bl	802cb92 <_ZdlPvj>
 8006e36:	9801      	ldr	r0, [sp, #4]
 8006e38:	b003      	add	sp, #12
 8006e3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e3e:	bf00      	nop
 8006e40:	08030b04 	.word	0x08030b04

08006e44 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006e44:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 8006e46:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8006e4a:	4299      	cmp	r1, r3
{
 8006e4c:	4604      	mov	r4, r0
 8006e4e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8006e50:	d103      	bne.n	8006e5a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e52:	f011 fdb5 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006e56:	f7fe fb97 	bl	8005588 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_Single)
 8006e5a:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006e5e:	429d      	cmp	r5, r3
 8006e60:	d103      	bne.n	8006e6a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006e62:	f011 fdad 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Single clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006e66:	f7fe fbbf 	bl	80055e8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Accurate)
 8006e6a:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8006e6e:	42a5      	cmp	r5, r4
 8006e70:	d105      	bne.n	8006e7e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006e72:	f011 fda5 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_Accurate clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006e76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006e7a:	f7fe bbe5 	b.w	8005648 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006e7e:	bd38      	pop	{r3, r4, r5, pc}

08006e80 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e84:	ed2d 8b06 	vpush	{d8-d10}
 8006e88:	4604      	mov	r4, r0
 8006e8a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006e8c:	46a2      	mov	sl, r4
 8006e8e:	2500      	movs	r5, #0
 8006e90:	f013 fa16 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 8006e94:	4b71      	ldr	r3, [pc, #452]	; (800705c <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
 8006e96:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e98:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006e9c:	2226      	movs	r2, #38	; 0x26
 8006e9e:	4629      	mov	r1, r5
 8006ea0:	4650      	mov	r0, sl
 8006ea2:	f026 ff62 	bl	802dd6a <memset>
 8006ea6:	4650      	mov	r0, sl
 8006ea8:	f7fc fc18 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8006eac:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006eb0:	26ff      	movs	r6, #255	; 0xff
 8006eb2:	4b6b      	ldr	r3, [pc, #428]	; (8007060 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006eb4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006eb6:	2226      	movs	r2, #38	; 0x26
 8006eb8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006ebc:	4629      	mov	r1, r5
 8006ebe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006ec2:	4648      	mov	r0, r9
 8006ec4:	66a5      	str	r5, [r4, #104]	; 0x68
 8006ec6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006eca:	f026 ff4e 	bl	802dd6a <memset>
 8006ece:	4648      	mov	r0, r9
 8006ed0:	f7fc fc04 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8006ed4:	4b63      	ldr	r3, [pc, #396]	; (8007064 <_ZN19MeasurementViewBaseC1Ev+0x1e4>)
 8006ed6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006ed8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006edc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006ee0:	a90a      	add	r1, sp, #40	; 0x28
 8006ee2:	4648      	mov	r0, r9
 8006ee4:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006ee8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006eec:	f00f f869 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006ef0:	4640      	mov	r0, r8
 8006ef2:	f7fc fc57 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006ef6:	4b5c      	ldr	r3, [pc, #368]	; (8007068 <_ZN19MeasurementViewBaseC1Ev+0x1e8>)
 8006ef8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006efc:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006f00:	4618      	mov	r0, r3
 8006f02:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006f06:	ee09 3a90 	vmov	s19, r3
 8006f0a:	f00f f991 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f0e:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006f12:	4618      	mov	r0, r3
 8006f14:	ee0a 3a10 	vmov	s20, r3
 8006f18:	f00f f98a 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f1c:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006f20:	4618      	mov	r0, r3
 8006f22:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8006f26:	ee0a 3a90 	vmov	s21, r3
 8006f2a:	f00f f981 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f2e:	4638      	mov	r0, r7
 8006f30:	f00d fd3a 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006f34:	4e4d      	ldr	r6, [pc, #308]	; (800706c <_ZN19MeasurementViewBaseC1Ev+0x1ec>)
 8006f36:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006f3a:	4618      	mov	r0, r3
 8006f3c:	9302      	str	r3, [sp, #8]
 8006f3e:	f7fc f9cf 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f42:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006f46:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006f4a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006f4e:	4618      	mov	r0, r3
 8006f50:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8006f54:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006f58:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006f5c:	ee08 3a10 	vmov	s16, r3
 8006f60:	f7fc fc20 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006f64:	4658      	mov	r0, fp
 8006f66:	f00d fd1f 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8006f6a:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006f6e:	4618      	mov	r0, r3
 8006f70:	9303      	str	r3, [sp, #12]
 8006f72:	f7fc f9b5 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f76:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006f7a:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006f7e:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8006f82:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8006f86:	4618      	mov	r0, r3
 8006f88:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006f8c:	ee08 3a90 	vmov	s17, r3
 8006f90:	f7fc fc08 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006f94:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006f98:	4618      	mov	r0, r3
 8006f9a:	ee09 3a10 	vmov	s18, r3
 8006f9e:	f7fc fc01 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006fa2:	4a33      	ldr	r2, [pc, #204]	; (8007070 <_ZN19MeasurementViewBaseC1Ev+0x1f0>)
 8006fa4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006fa8:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8006fac:	4a31      	ldr	r2, [pc, #196]	; (8007074 <_ZN19MeasurementViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006fae:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006fb2:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8006fb6:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8006fba:	f00f fff5 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006fbe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006fc2:	462a      	mov	r2, r5
 8006fc4:	4650      	mov	r0, sl
 8006fc6:	9300      	str	r3, [sp, #0]
 8006fc8:	4629      	mov	r1, r5
 8006fca:	23f0      	movs	r3, #240	; 0xf0
 8006fcc:	f7fc fb61 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006fd0:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006fd2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006fd6:	66a3      	str	r3, [r4, #104]	; 0x68
 8006fd8:	4651      	mov	r1, sl
 8006fda:	4630      	mov	r0, r6
 8006fdc:	f00b fc18 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8006fe0:	462a      	mov	r2, r5
 8006fe2:	4648      	mov	r0, r9
 8006fe4:	4629      	mov	r1, r5
 8006fe6:	f7fc fb47 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8006fea:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006fec:	4648      	mov	r0, r9
 8006fee:	a90a      	add	r1, sp, #40	; 0x28
 8006ff0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006ff4:	f00e ffe5 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006ff8:	4649      	mov	r1, r9
 8006ffa:	4630      	mov	r0, r6
 8006ffc:	f00b fc08 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8007000:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007004:	2156      	movs	r1, #86	; 0x56
 8007006:	4640      	mov	r0, r8
 8007008:	f7fc fb36 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800700c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007010:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007014:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8007018:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 800701c:	4648      	mov	r0, r9
 800701e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007022:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007026:	4641      	mov	r1, r8
 8007028:	4798      	blx	r3
 800702a:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800702e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007032:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007036:	4b10      	ldr	r3, [pc, #64]	; (8007078 <_ZN19MeasurementViewBaseC1Ev+0x1f8>)
 8007038:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 800703a:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 800703e:	b92b      	cbnz	r3, 800704c <_ZN19MeasurementViewBaseC1Ev+0x1cc>
 8007040:	4b0e      	ldr	r3, [pc, #56]	; (800707c <_ZN19MeasurementViewBaseC1Ev+0x1fc>)
 8007042:	4a0f      	ldr	r2, [pc, #60]	; (8007080 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8007044:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007046:	480f      	ldr	r0, [pc, #60]	; (8007084 <_ZN19MeasurementViewBaseC1Ev+0x204>)
 8007048:	f026 fc8a 	bl	802d960 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800704c:	4b0e      	ldr	r3, [pc, #56]	; (8007088 <_ZN19MeasurementViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800704e:	881b      	ldrh	r3, [r3, #0]
 8007050:	2b45      	cmp	r3, #69	; 0x45
 8007052:	d81d      	bhi.n	8007090 <_ZN19MeasurementViewBaseC1Ev+0x210>
 8007054:	4b0d      	ldr	r3, [pc, #52]	; (800708c <_ZN19MeasurementViewBaseC1Ev+0x20c>)
 8007056:	4a0a      	ldr	r2, [pc, #40]	; (8007080 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8007058:	2161      	movs	r1, #97	; 0x61
 800705a:	e7f4      	b.n	8007046 <_ZN19MeasurementViewBaseC1Ev+0x1c6>
 800705c:	08030b04 	.word	0x08030b04
 8007060:	08031a70 	.word	0x08031a70
 8007064:	08031cbc 	.word	0x08031cbc
 8007068:	0802f5b4 	.word	0x0802f5b4
 800706c:	080317a4 	.word	0x080317a4
 8007070:	08030aec 	.word	0x08030aec
 8007074:	08006e45 	.word	0x08006e45
 8007078:	20013894 	.word	0x20013894
 800707c:	0802f364 	.word	0x0802f364
 8007080:	0802f469 	.word	0x0802f469
 8007084:	0802f3e1 	.word	0x0802f3e1
 8007088:	20013898 	.word	0x20013898
 800708c:	0802f428 	.word	0x0802f428
        return texts->getText(typedTextId);
 8007090:	4bad      	ldr	r3, [pc, #692]	; (8007348 <_ZN19MeasurementViewBaseC1Ev+0x4c8>)
 8007092:	2145      	movs	r1, #69	; 0x45
 8007094:	6818      	ldr	r0, [r3, #0]
 8007096:	f003 fb03 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 800709a:	4aac      	ldr	r2, [pc, #688]	; (800734c <_ZN19MeasurementViewBaseC1Ev+0x4cc>)
 800709c:	4603      	mov	r3, r0
 800709e:	2104      	movs	r1, #4
 80070a0:	4648      	mov	r0, r9
 80070a2:	f014 fe3b 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 80070a6:	4640      	mov	r0, r8
        wc1 = value;
 80070a8:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 80070ac:	f00e f9b8 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80070b0:	4ba7      	ldr	r3, [pc, #668]	; (8007350 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80070b2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80070b4:	4640      	mov	r0, r8
 80070b6:	2346      	movs	r3, #70	; 0x46
 80070b8:	a90a      	add	r1, sp, #40	; 0x28
 80070ba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070be:	f00e f9cf 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070c2:	4641      	mov	r1, r8
 80070c4:	4630      	mov	r0, r6
 80070c6:	f00b fba3 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 80070ca:	ee19 0a90 	vmov	r0, s19
 80070ce:	22f0      	movs	r2, #240	; 0xf0
 80070d0:	2121      	movs	r1, #33	; 0x21
 80070d2:	f7fc fad1 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80070d6:	f04f 0802 	mov.w	r8, #2
 80070da:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070dc:	a909      	add	r1, sp, #36	; 0x24
 80070de:	ee19 0a90 	vmov	r0, s19
 80070e2:	aa0a      	add	r2, sp, #40	; 0x28
 80070e4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80070e8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 80070ec:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070f0:	f00e fd71 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80070f4:	226a      	movs	r2, #106	; 0x6a
 80070f6:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 80070fa:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 80070fe:	ee19 0a90 	vmov	r0, s19
 8007102:	f7fc fafd 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007106:	ee19 1a90 	vmov	r1, s19
 800710a:	4630      	mov	r0, r6
        colorPressed = col;
 800710c:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8007110:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 8007114:	f00b fb7c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Accurate.setXY(33, 170);
 8007118:	ee1a 0a10 	vmov	r0, s20
 800711c:	22aa      	movs	r2, #170	; 0xaa
 800711e:	2121      	movs	r1, #33	; 0x21
 8007120:	f7fc faaa 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8007124:	2303      	movs	r3, #3
    buttonWithLabel_Accurate.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007126:	a909      	add	r1, sp, #36	; 0x24
 8007128:	ee1a 0a10 	vmov	r0, s20
 800712c:	aa0a      	add	r2, sp, #40	; 0x28
 800712e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007132:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007136:	f00e fd4e 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800713a:	2269      	movs	r2, #105	; 0x69
 800713c:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8007140:	ee1a 0a10 	vmov	r0, s20
 8007144:	f7fc fadc 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007148:	ee1a 1a10 	vmov	r1, s20
 800714c:	4630      	mov	r0, r6
        colorPressed = col;
 800714e:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8007152:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8007156:	f00b fb5b 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Single.setXY(33, 100);
 800715a:	ee1a 0a90 	vmov	r0, s21
 800715e:	2264      	movs	r2, #100	; 0x64
 8007160:	2121      	movs	r1, #33	; 0x21
 8007162:	f7fc fa89 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Single.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007166:	aa0a      	add	r2, sp, #40	; 0x28
 8007168:	2303      	movs	r3, #3
 800716a:	a909      	add	r1, sp, #36	; 0x24
 800716c:	ee1a 0a90 	vmov	r0, s21
 8007170:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007174:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007178:	f00e fd2d 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800717c:	2368      	movs	r3, #104	; 0x68
 800717e:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8007182:	ee1a 0a90 	vmov	r0, s21
 8007186:	f7fc fabb 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800718a:	ee1a 1a90 	vmov	r1, s21
 800718e:	4630      	mov	r0, r6
        colorPressed = col;
 8007190:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8007194:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007198:	f00b fb3a 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800719c:	230a      	movs	r3, #10
 800719e:	9300      	str	r3, [sp, #0]
 80071a0:	224b      	movs	r2, #75	; 0x4b
 80071a2:	23f0      	movs	r3, #240	; 0xf0
 80071a4:	4629      	mov	r1, r5
 80071a6:	4638      	mov	r0, r7
 80071a8:	f7fc fa73 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 80071ac:	9b02      	ldr	r3, [sp, #8]
 80071ae:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071b2:	22a0      	movs	r2, #160	; 0xa0
 80071b4:	4611      	mov	r1, r2
 80071b6:	4638      	mov	r0, r7
 80071b8:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 80071bc:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 80071c0:	f00d fd08 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071c4:	22a0      	movs	r2, #160	; 0xa0
 80071c6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80071ca:	4638      	mov	r0, r7
 80071cc:	f00d fd0d 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80071d0:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 80071d4:	2b20      	cmp	r3, #32
 80071d6:	d005      	beq.n	80071e4 <_ZN19MeasurementViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 80071d8:	2320      	movs	r3, #32
 80071da:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 80071de:	4638      	mov	r0, r7
 80071e0:	f00d fc02 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80071e4:	4638      	mov	r0, r7
 80071e6:	2101      	movs	r1, #1
 80071e8:	f00d fd0a 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80071ec:	4639      	mov	r1, r7
 80071ee:	4630      	mov	r0, r6
 80071f0:	f00b fb0e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80071f4:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(61, 60);
 80071f8:	223c      	movs	r2, #60	; 0x3c
 80071fa:	ee18 0a10 	vmov	r0, s16
 80071fe:	213d      	movs	r1, #61	; 0x3d
        linespace = space;
 8007200:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8007204:	ad04      	add	r5, sp, #16
 8007206:	f7fc fa37 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800720a:	ee18 1a10 	vmov	r1, s16
 800720e:	4628      	mov	r0, r5
        color = newColor;
 8007210:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007214:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007218:	f00d fe88 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800721c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007220:	ee18 3a10 	vmov	r3, s16
 8007224:	333c      	adds	r3, #60	; 0x3c
 8007226:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800722a:	4b49      	ldr	r3, [pc, #292]	; (8007350 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 800722c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 800722e:	ee18 0a10 	vmov	r0, s16
 8007232:	2353      	movs	r3, #83	; 0x53
 8007234:	a90a      	add	r1, sp, #40	; 0x28
 8007236:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800723a:	f00e f911 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800723e:	ee18 1a10 	vmov	r1, s16
 8007242:	4630      	mov	r0, r6
 8007244:	f00b fae4 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007248:	230a      	movs	r3, #10
 800724a:	9300      	str	r3, [sp, #0]
 800724c:	2232      	movs	r2, #50	; 0x32
 800724e:	23f0      	movs	r3, #240	; 0xf0
 8007250:	4641      	mov	r1, r8
 8007252:	4658      	mov	r0, fp
 8007254:	f7fc fa1d 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007258:	9b03      	ldr	r3, [sp, #12]
 800725a:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800725e:	22a0      	movs	r2, #160	; 0xa0
 8007260:	4611      	mov	r1, r2
 8007262:	4658      	mov	r0, fp
 8007264:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8007268:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 800726c:	f00d fcb2 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007270:	22a0      	movs	r2, #160	; 0xa0
 8007272:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007276:	4658      	mov	r0, fp
 8007278:	f00d fcb7 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800727c:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007280:	2b20      	cmp	r3, #32
 8007282:	d005      	beq.n	8007290 <_ZN19MeasurementViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8007284:	2320      	movs	r3, #32
 8007286:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 800728a:	4658      	mov	r0, fp
 800728c:	f00d fbac 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007290:	4658      	mov	r0, fp
 8007292:	2101      	movs	r1, #1
 8007294:	f00d fcb4 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007298:	4659      	mov	r1, fp
 800729a:	4630      	mov	r0, r6
 800729c:	f00b fab8 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80072a0:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 80072a4:	ee18 0a90 	vmov	r0, s17
 80072a8:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80072aa:	2700      	movs	r7, #0
 80072ac:	2145      	movs	r1, #69	; 0x45
 80072ae:	f7fc f9e3 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80072b2:	ee18 1a90 	vmov	r1, s17
 80072b6:	4628      	mov	r0, r5
        color = newColor;
 80072b8:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 80072bc:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 80072c0:	f00d fe34 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80072c8:	ee18 3a90 	vmov	r3, s17
 80072cc:	333c      	adds	r3, #60	; 0x3c
 80072ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072d2:	4b1f      	ldr	r3, [pc, #124]	; (8007350 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80072d4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80072d6:	ee18 0a90 	vmov	r0, s17
 80072da:	236b      	movs	r3, #107	; 0x6b
 80072dc:	a90a      	add	r1, sp, #40	; 0x28
 80072de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072e2:	f00e f8bd 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072e6:	ee18 1a90 	vmov	r1, s17
 80072ea:	4630      	mov	r0, r6
 80072ec:	f00b fa90 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80072f0:	ee19 0a10 	vmov	r0, s18
 80072f4:	220c      	movs	r2, #12
 80072f6:	2136      	movs	r1, #54	; 0x36
 80072f8:	f7fc f9be 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80072fc:	ee19 1a10 	vmov	r1, s18
 8007300:	4628      	mov	r0, r5
        color = newColor;
 8007302:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8007306:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 800730a:	f00d fe0f 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800730e:	ee19 2a10 	vmov	r2, s18
 8007312:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8007316:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800731a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800731e:	4b0c      	ldr	r3, [pc, #48]	; (8007350 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007320:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8007322:	ee19 0a10 	vmov	r0, s18
 8007326:	236c      	movs	r3, #108	; 0x6c
 8007328:	a90a      	add	r1, sp, #40	; 0x28
 800732a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800732e:	f00e f897 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007332:	4630      	mov	r0, r6
 8007334:	ee19 1a10 	vmov	r1, s18
 8007338:	f00b fa6a 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800733c:	4620      	mov	r0, r4
 800733e:	b00d      	add	sp, #52	; 0x34
 8007340:	ecbd 8b06 	vpop	{d8-d10}
 8007344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007348:	200138a0 	.word	0x200138a0
 800734c:	0802f4a1 	.word	0x0802f4a1
 8007350:	0802f514 	.word	0x0802f514

08007354 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8007354:	4770      	bx	lr

08007356 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007356:	4770      	bx	lr

08007358 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007358:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800735a:	68c2      	ldr	r2, [r0, #12]
 800735c:	6844      	ldr	r4, [r0, #4]
 800735e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007360:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007362:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007366:	07d2      	lsls	r2, r2, #31
 8007368:	bf48      	it	mi
 800736a:	5962      	ldrmi	r2, [r4, r5]
 800736c:	689b      	ldr	r3, [r3, #8]
    }
 800736e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007370:	bf48      	it	mi
 8007372:	58d3      	ldrmi	r3, [r2, r3]
 8007374:	4718      	bx	r3

08007376 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007376:	6843      	ldr	r3, [r0, #4]
 8007378:	b12b      	cbz	r3, 8007386 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800737a:	6883      	ldr	r3, [r0, #8]
 800737c:	b92b      	cbnz	r3, 800738a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800737e:	68c0      	ldr	r0, [r0, #12]
 8007380:	f000 0001 	and.w	r0, r0, #1
 8007384:	4770      	bx	lr
 8007386:	4618      	mov	r0, r3
 8007388:	4770      	bx	lr
 800738a:	2001      	movs	r0, #1
    }
 800738c:	4770      	bx	lr

0800738e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800738e:	b510      	push	{r4, lr}
 8007390:	2110      	movs	r1, #16
 8007392:	4604      	mov	r4, r0
 8007394:	f025 fbfd 	bl	802cb92 <_ZdlPvj>
 8007398:	4620      	mov	r0, r4
 800739a:	bd10      	pop	{r4, pc}

0800739c <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 800739c:	b510      	push	{r4, lr}
 800739e:	4b03      	ldr	r3, [pc, #12]	; (80073ac <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 80073a0:	6003      	str	r3, [r0, #0]
 80073a2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80073a4:	f00f fe0a 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80073a8:	4620      	mov	r0, r4
 80073aa:	bd10      	pop	{r4, pc}
 80073ac:	08030b50 	.word	0x08030b50

080073b0 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80073b0:	b507      	push	{r0, r1, r2, lr}
 80073b2:	4b07      	ldr	r3, [pc, #28]	; (80073d0 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 80073b4:	6003      	str	r3, [r0, #0]
 80073b6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80073b8:	f00f fe00 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80073bc:	9801      	ldr	r0, [sp, #4]
 80073be:	f241 11c4 	movw	r1, #4548	; 0x11c4
 80073c2:	f025 fbe6 	bl	802cb92 <_ZdlPvj>
 80073c6:	9801      	ldr	r0, [sp, #4]
 80073c8:	b003      	add	sp, #12
 80073ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80073ce:	bf00      	nop
 80073d0:	08030b50 	.word	0x08030b50

080073d4 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80073d4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 80073d6:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 80073da:	4299      	cmp	r1, r3
{
 80073dc:	4604      	mov	r4, r0
 80073de:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 80073e0:	d103      	bne.n	80073ea <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80073e2:	f011 faed 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80073e6:	f7fe f8ef 	bl	80055c8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 80073ea:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80073ee:	429d      	cmp	r5, r3
 80073f0:	d103      	bne.n	80073fa <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80073f2:	f011 fae5 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80073f6:	f7fe f957 	bl	80056a8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 80073fa:	f504 74ba 	add.w	r4, r4, #372	; 0x174
 80073fe:	42a5      	cmp	r5, r4
 8007400:	d105      	bne.n	800740e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8007402:	f011 fadd 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8007406:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 800740a:	f7fe b93d 	b.w	8005688 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 800740e:	bd38      	pop	{r3, r4, r5, pc}

08007410 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8007410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007414:	ed2d 8b06 	vpush	{d8-d10}
 8007418:	4604      	mov	r4, r0
 800741a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 800741c:	46a2      	mov	sl, r4
 800741e:	2500      	movs	r5, #0
 8007420:	f012 ff4e 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 8007424:	4b71      	ldr	r3, [pc, #452]	; (80075ec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
 8007426:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007428:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 800742c:	2226      	movs	r2, #38	; 0x26
 800742e:	4629      	mov	r1, r5
 8007430:	4650      	mov	r0, sl
 8007432:	f026 fc9a 	bl	802dd6a <memset>
 8007436:	4650      	mov	r0, sl
 8007438:	f7fc f950 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 800743c:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8007440:	26ff      	movs	r6, #255	; 0xff
 8007442:	4b6b      	ldr	r3, [pc, #428]	; (80075f0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8007444:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007446:	2226      	movs	r2, #38	; 0x26
 8007448:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800744c:	4629      	mov	r1, r5
 800744e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007452:	4648      	mov	r0, r9
 8007454:	66a5      	str	r5, [r4, #104]	; 0x68
 8007456:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800745a:	f026 fc86 	bl	802dd6a <memset>
 800745e:	4648      	mov	r0, r9
 8007460:	f7fc f93c 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8007464:	4b63      	ldr	r3, [pc, #396]	; (80075f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>)
 8007466:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007468:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800746c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007470:	a90a      	add	r1, sp, #40	; 0x28
 8007472:	4648      	mov	r0, r9
 8007474:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007478:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800747c:	f00e fda1 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007480:	4640      	mov	r0, r8
 8007482:	f7fc f98f 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007486:	4b5c      	ldr	r3, [pc, #368]	; (80075f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e8>)
 8007488:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800748c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007490:	4618      	mov	r0, r3
 8007492:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007496:	ee09 3a90 	vmov	s19, r3
 800749a:	f00e fec9 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800749e:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80074a2:	4618      	mov	r0, r3
 80074a4:	ee0a 3a10 	vmov	s20, r3
 80074a8:	f00e fec2 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80074ac:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80074b0:	4618      	mov	r0, r3
 80074b2:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 80074b6:	ee0a 3a90 	vmov	s21, r3
 80074ba:	f00e feb9 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80074be:	4638      	mov	r0, r7
 80074c0:	f00d fa72 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80074c4:	4e4d      	ldr	r6, [pc, #308]	; (80075fc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1ec>)
 80074c6:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80074ca:	4618      	mov	r0, r3
 80074cc:	9302      	str	r3, [sp, #8]
 80074ce:	f7fb ff07 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80074d2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80074d6:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 80074da:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80074de:	4618      	mov	r0, r3
 80074e0:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 80074e4:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80074e8:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 80074ec:	ee08 3a10 	vmov	s16, r3
 80074f0:	f7fc f958 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80074f4:	4658      	mov	r0, fp
 80074f6:	f00d fa57 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 80074fa:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80074fe:	4618      	mov	r0, r3
 8007500:	9303      	str	r3, [sp, #12]
 8007502:	f7fb feed 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007506:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800750a:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 800750e:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8007512:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8007516:	4618      	mov	r0, r3
 8007518:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 800751c:	ee08 3a90 	vmov	s17, r3
 8007520:	f7fc f940 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007524:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007528:	4618      	mov	r0, r3
 800752a:	ee09 3a10 	vmov	s18, r3
 800752e:	f7fc f939 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007532:	4a33      	ldr	r2, [pc, #204]	; (8007600 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f0>)
 8007534:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007538:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 800753c:	4a31      	ldr	r2, [pc, #196]	; (8007604 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800753e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007542:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8007546:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 800754a:	f00f fd2d 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800754e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007552:	462a      	mov	r2, r5
 8007554:	4650      	mov	r0, sl
 8007556:	9300      	str	r3, [sp, #0]
 8007558:	4629      	mov	r1, r5
 800755a:	23f0      	movs	r3, #240	; 0xf0
 800755c:	f7fc f899 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007560:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007562:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007566:	66a3      	str	r3, [r4, #104]	; 0x68
 8007568:	4651      	mov	r1, sl
 800756a:	4630      	mov	r0, r6
 800756c:	f00b f950 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_return.setXY(0, 0);
 8007570:	462a      	mov	r2, r5
 8007572:	4648      	mov	r0, r9
 8007574:	4629      	mov	r1, r5
 8007576:	f7fc f87f 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800757a:	2308      	movs	r3, #8
    image_return.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800757c:	4648      	mov	r0, r9
 800757e:	a90a      	add	r1, sp, #40	; 0x28
 8007580:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007584:	f00e fd1d 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007588:	4649      	mov	r1, r9
 800758a:	4630      	mov	r0, r6
 800758c:	f00b f940 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8007590:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007594:	2156      	movs	r1, #86	; 0x56
 8007596:	4640      	mov	r0, r8
 8007598:	f7fc f86e 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800759c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80075a0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80075a4:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 80075a8:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 80075ac:	4648      	mov	r0, r9
 80075ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80075b2:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80075b6:	4641      	mov	r1, r8
 80075b8:	4798      	blx	r3
 80075ba:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80075be:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80075c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80075c6:	4b10      	ldr	r3, [pc, #64]	; (8007608 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f8>)
 80075c8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80075ca:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 80075ce:	b92b      	cbnz	r3, 80075dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>
 80075d0:	4b0e      	ldr	r3, [pc, #56]	; (800760c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1fc>)
 80075d2:	4a0f      	ldr	r2, [pc, #60]	; (8007610 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 80075d4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80075d6:	480f      	ldr	r0, [pc, #60]	; (8007614 <_ZN28Measurement_AccurateViewBaseC1Ev+0x204>)
 80075d8:	f026 f9c2 	bl	802d960 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80075dc:	4b0e      	ldr	r3, [pc, #56]	; (8007618 <_ZN28Measurement_AccurateViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80075de:	881b      	ldrh	r3, [r3, #0]
 80075e0:	2b40      	cmp	r3, #64	; 0x40
 80075e2:	d81d      	bhi.n	8007620 <_ZN28Measurement_AccurateViewBaseC1Ev+0x210>
 80075e4:	4b0d      	ldr	r3, [pc, #52]	; (800761c <_ZN28Measurement_AccurateViewBaseC1Ev+0x20c>)
 80075e6:	4a0a      	ldr	r2, [pc, #40]	; (8007610 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 80075e8:	2161      	movs	r1, #97	; 0x61
 80075ea:	e7f4      	b.n	80075d6 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c6>
 80075ec:	08030b50 	.word	0x08030b50
 80075f0:	08031a70 	.word	0x08031a70
 80075f4:	08031cbc 	.word	0x08031cbc
 80075f8:	0802f5b4 	.word	0x0802f5b4
 80075fc:	080317a4 	.word	0x080317a4
 8007600:	08030b38 	.word	0x08030b38
 8007604:	080073d5 	.word	0x080073d5
 8007608:	20013894 	.word	0x20013894
 800760c:	0802f364 	.word	0x0802f364
 8007610:	0802f469 	.word	0x0802f469
 8007614:	0802f3e1 	.word	0x0802f3e1
 8007618:	20013898 	.word	0x20013898
 800761c:	0802f428 	.word	0x0802f428
        return texts->getText(typedTextId);
 8007620:	4bad      	ldr	r3, [pc, #692]	; (80078d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4c8>)
 8007622:	2140      	movs	r1, #64	; 0x40
 8007624:	6818      	ldr	r0, [r3, #0]
 8007626:	f003 f83b 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 800762a:	4aac      	ldr	r2, [pc, #688]	; (80078dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x4cc>)
 800762c:	4603      	mov	r3, r0
 800762e:	2104      	movs	r1, #4
 8007630:	4648      	mov	r0, r9
 8007632:	f014 fb73 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8007636:	4640      	mov	r0, r8
        wc1 = value;
 8007638:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 800763c:	f00d fef0 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007640:	4ba7      	ldr	r3, [pc, #668]	; (80078e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 8007642:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8007644:	4640      	mov	r0, r8
 8007646:	2341      	movs	r3, #65	; 0x41
 8007648:	a90a      	add	r1, sp, #40	; 0x28
 800764a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800764e:	f00d ff07 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007652:	4641      	mov	r1, r8
 8007654:	4630      	mov	r0, r6
 8007656:	f00b f8db 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 800765a:	ee19 0a90 	vmov	r0, s19
 800765e:	22f0      	movs	r2, #240	; 0xf0
 8007660:	2121      	movs	r1, #33	; 0x21
 8007662:	f7fc f809 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8007666:	f04f 0802 	mov.w	r8, #2
 800766a:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800766c:	a909      	add	r1, sp, #36	; 0x24
 800766e:	ee19 0a90 	vmov	r0, s19
 8007672:	aa0a      	add	r2, sp, #40	; 0x28
 8007674:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007678:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 800767c:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007680:	f00e faa9 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007684:	225e      	movs	r2, #94	; 0x5e
 8007686:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 800768a:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 800768e:	ee19 0a90 	vmov	r0, s19
 8007692:	f7fc f835 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007696:	ee19 1a90 	vmov	r1, s19
 800769a:	4630      	mov	r0, r6
        colorPressed = col;
 800769c:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 80076a0:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 80076a4:	f00b f8b4 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 80076a8:	ee1a 0a10 	vmov	r0, s20
 80076ac:	22aa      	movs	r2, #170	; 0xaa
 80076ae:	2121      	movs	r1, #33	; 0x21
 80076b0:	f7fb ffe2 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80076b4:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076b6:	a909      	add	r1, sp, #36	; 0x24
 80076b8:	ee1a 0a10 	vmov	r0, s20
 80076bc:	aa0a      	add	r2, sp, #40	; 0x28
 80076be:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80076c2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076c6:	f00e fa86 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076ca:	225d      	movs	r2, #93	; 0x5d
 80076cc:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 80076d0:	ee1a 0a10 	vmov	r0, s20
 80076d4:	f7fc f814 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076d8:	ee1a 1a10 	vmov	r1, s20
 80076dc:	4630      	mov	r0, r6
        colorPressed = col;
 80076de:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 80076e2:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 80076e6:	f00b f893 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 80076ea:	ee1a 0a90 	vmov	r0, s21
 80076ee:	2264      	movs	r2, #100	; 0x64
 80076f0:	2121      	movs	r1, #33	; 0x21
 80076f2:	f7fb ffc1 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076f6:	aa0a      	add	r2, sp, #40	; 0x28
 80076f8:	2303      	movs	r3, #3
 80076fa:	a909      	add	r1, sp, #36	; 0x24
 80076fc:	ee1a 0a90 	vmov	r0, s21
 8007700:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007704:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007708:	f00e fa65 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800770c:	235c      	movs	r3, #92	; 0x5c
 800770e:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8007712:	ee1a 0a90 	vmov	r0, s21
 8007716:	f7fb fff3 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800771a:	ee1a 1a90 	vmov	r1, s21
 800771e:	4630      	mov	r0, r6
        colorPressed = col;
 8007720:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8007724:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007728:	f00b f872 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800772c:	230a      	movs	r3, #10
 800772e:	9300      	str	r3, [sp, #0]
 8007730:	224b      	movs	r2, #75	; 0x4b
 8007732:	23f0      	movs	r3, #240	; 0xf0
 8007734:	4629      	mov	r1, r5
 8007736:	4638      	mov	r0, r7
 8007738:	f7fb ffab 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 800773c:	9b02      	ldr	r3, [sp, #8]
 800773e:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007742:	22a0      	movs	r2, #160	; 0xa0
 8007744:	4611      	mov	r1, r2
 8007746:	4638      	mov	r0, r7
 8007748:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 800774c:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8007750:	f00d fa40 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007754:	22a0      	movs	r2, #160	; 0xa0
 8007756:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800775a:	4638      	mov	r0, r7
 800775c:	f00d fa45 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007760:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8007764:	2b20      	cmp	r3, #32
 8007766:	d005      	beq.n	8007774 <_ZN28Measurement_AccurateViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8007768:	2320      	movs	r3, #32
 800776a:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 800776e:	4638      	mov	r0, r7
 8007770:	f00d f93a 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007774:	4638      	mov	r0, r7
 8007776:	2101      	movs	r1, #1
 8007778:	f00d fa42 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800777c:	4639      	mov	r1, r7
 800777e:	4630      	mov	r0, r6
 8007780:	f00b f846 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007784:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(33, 60);
 8007788:	223c      	movs	r2, #60	; 0x3c
 800778a:	ee18 0a10 	vmov	r0, s16
 800778e:	2121      	movs	r1, #33	; 0x21
        linespace = space;
 8007790:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8007794:	ad04      	add	r5, sp, #16
 8007796:	f7fb ff6f 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800779a:	ee18 1a10 	vmov	r1, s16
 800779e:	4628      	mov	r0, r5
        color = newColor;
 80077a0:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 80077a4:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 80077a8:	f00d fbc0 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80077ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80077b0:	ee18 3a10 	vmov	r3, s16
 80077b4:	333c      	adds	r3, #60	; 0x3c
 80077b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80077ba:	4b49      	ldr	r3, [pc, #292]	; (80078e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80077bc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80077be:	ee18 0a10 	vmov	r0, s16
 80077c2:	234f      	movs	r3, #79	; 0x4f
 80077c4:	a90a      	add	r1, sp, #40	; 0x28
 80077c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80077ca:	f00d fe49 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077ce:	ee18 1a10 	vmov	r1, s16
 80077d2:	4630      	mov	r0, r6
 80077d4:	f00b f81c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80077d8:	230a      	movs	r3, #10
 80077da:	9300      	str	r3, [sp, #0]
 80077dc:	2232      	movs	r2, #50	; 0x32
 80077de:	23f0      	movs	r3, #240	; 0xf0
 80077e0:	4641      	mov	r1, r8
 80077e2:	4658      	mov	r0, fp
 80077e4:	f7fb ff55 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 80077e8:	9b03      	ldr	r3, [sp, #12]
 80077ea:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077ee:	22a0      	movs	r2, #160	; 0xa0
 80077f0:	4611      	mov	r1, r2
 80077f2:	4658      	mov	r0, fp
 80077f4:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 80077f8:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 80077fc:	f00d f9ea 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007800:	22a0      	movs	r2, #160	; 0xa0
 8007802:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007806:	4658      	mov	r0, fp
 8007808:	f00d f9ef 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800780c:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007810:	2b20      	cmp	r3, #32
 8007812:	d005      	beq.n	8007820 <_ZN28Measurement_AccurateViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8007814:	2320      	movs	r3, #32
 8007816:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 800781a:	4658      	mov	r0, fp
 800781c:	f00d f8e4 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007820:	4658      	mov	r0, fp
 8007822:	2101      	movs	r1, #1
 8007824:	f00d f9ec 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007828:	4659      	mov	r1, fp
 800782a:	4630      	mov	r0, r6
 800782c:	f00a fff0 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007830:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 8007834:	ee18 0a90 	vmov	r0, s17
 8007838:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800783a:	2700      	movs	r7, #0
 800783c:	2145      	movs	r1, #69	; 0x45
 800783e:	f7fb ff1b 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007842:	ee18 1a90 	vmov	r1, s17
 8007846:	4628      	mov	r0, r5
        color = newColor;
 8007848:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 800784c:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8007850:	f00d fb6c 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007854:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007858:	ee18 3a90 	vmov	r3, s17
 800785c:	333c      	adds	r3, #60	; 0x3c
 800785e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007862:	4b1f      	ldr	r3, [pc, #124]	; (80078e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 8007864:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8007866:	ee18 0a90 	vmov	r0, s17
 800786a:	2360      	movs	r3, #96	; 0x60
 800786c:	a90a      	add	r1, sp, #40	; 0x28
 800786e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007872:	f00d fdf5 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007876:	ee18 1a90 	vmov	r1, s17
 800787a:	4630      	mov	r0, r6
 800787c:	f00a ffc8 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007880:	ee19 0a10 	vmov	r0, s18
 8007884:	220c      	movs	r2, #12
 8007886:	2136      	movs	r1, #54	; 0x36
 8007888:	f7fb fef6 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800788c:	ee19 1a10 	vmov	r1, s18
 8007890:	4628      	mov	r0, r5
        color = newColor;
 8007892:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8007896:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 800789a:	f00d fb47 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800789e:	ee19 2a10 	vmov	r2, s18
 80078a2:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 80078a6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80078aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80078ae:	4b0c      	ldr	r3, [pc, #48]	; (80078e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80078b0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80078b2:	ee19 0a10 	vmov	r0, s18
 80078b6:	235f      	movs	r3, #95	; 0x5f
 80078b8:	a90a      	add	r1, sp, #40	; 0x28
 80078ba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078be:	f00d fdcf 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078c2:	4630      	mov	r0, r6
 80078c4:	ee19 1a10 	vmov	r1, s18
 80078c8:	f00a ffa2 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80078cc:	4620      	mov	r0, r4
 80078ce:	b00d      	add	sp, #52	; 0x34
 80078d0:	ecbd 8b06 	vpop	{d8-d10}
 80078d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078d8:	200138a0 	.word	0x200138a0
 80078dc:	0802f4a1 	.word	0x0802f4a1
 80078e0:	0802f514 	.word	0x0802f514

080078e4 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 80078e4:	4770      	bx	lr

080078e6 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80078e6:	4770      	bx	lr

080078e8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80078e8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078ea:	68c2      	ldr	r2, [r0, #12]
 80078ec:	6844      	ldr	r4, [r0, #4]
 80078ee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80078f0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80078f2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80078f6:	07d2      	lsls	r2, r2, #31
 80078f8:	bf48      	it	mi
 80078fa:	5962      	ldrmi	r2, [r4, r5]
 80078fc:	689b      	ldr	r3, [r3, #8]
    }
 80078fe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007900:	bf48      	it	mi
 8007902:	58d3      	ldrmi	r3, [r2, r3]
 8007904:	4718      	bx	r3

08007906 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007906:	6843      	ldr	r3, [r0, #4]
 8007908:	b12b      	cbz	r3, 8007916 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800790a:	6883      	ldr	r3, [r0, #8]
 800790c:	b92b      	cbnz	r3, 800791a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800790e:	68c0      	ldr	r0, [r0, #12]
 8007910:	f000 0001 	and.w	r0, r0, #1
 8007914:	4770      	bx	lr
 8007916:	4618      	mov	r0, r3
 8007918:	4770      	bx	lr
 800791a:	2001      	movs	r0, #1
    }
 800791c:	4770      	bx	lr

0800791e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800791e:	b510      	push	{r4, lr}
 8007920:	2110      	movs	r1, #16
 8007922:	4604      	mov	r4, r0
 8007924:	f025 f935 	bl	802cb92 <_ZdlPvj>
 8007928:	4620      	mov	r0, r4
 800792a:	bd10      	pop	{r4, pc}

0800792c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800792c:	b510      	push	{r4, lr}
 800792e:	4b03      	ldr	r3, [pc, #12]	; (800793c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8007930:	6003      	str	r3, [r0, #0]
 8007932:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007934:	f00f fb42 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007938:	4620      	mov	r0, r4
 800793a:	bd10      	pop	{r4, pc}
 800793c:	08030b9c 	.word	0x08030b9c

08007940 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007940:	b507      	push	{r0, r1, r2, lr}
 8007942:	4b07      	ldr	r3, [pc, #28]	; (8007960 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8007944:	6003      	str	r3, [r0, #0]
 8007946:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007948:	f00f fb38 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800794c:	9801      	ldr	r0, [sp, #4]
 800794e:	f241 4178 	movw	r1, #5240	; 0x1478
 8007952:	f025 f91e 	bl	802cb92 <_ZdlPvj>
 8007956:	9801      	ldr	r0, [sp, #4]
 8007958:	b003      	add	sp, #12
 800795a:	f85d fb04 	ldr.w	pc, [sp], #4
 800795e:	bf00      	nop
 8007960:	08030b9c 	.word	0x08030b9c

08007964 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8007964:	3098      	adds	r0, #152	; 0x98
 8007966:	4288      	cmp	r0, r1
{
 8007968:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 800796a:	d105      	bne.n	8007978 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800796c:	f011 f828 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007970:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007974:	f7fd be78 	b.w	8005668 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007978:	bd08      	pop	{r3, pc}
	...

0800797c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 800797c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007980:	ed2d 8b0a 	vpush	{d8-d12}
 8007984:	4604      	mov	r4, r0
 8007986:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007988:	46a0      	mov	r8, r4
 800798a:	2500      	movs	r5, #0
 800798c:	f012 fc98 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 8007990:	4bce      	ldr	r3, [pc, #824]	; (8007ccc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x350>)
 8007992:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007994:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8007998:	2226      	movs	r2, #38	; 0x26
 800799a:	4629      	mov	r1, r5
 800799c:	4640      	mov	r0, r8
 800799e:	f026 f9e4 	bl	802dd6a <memset>
 80079a2:	4640      	mov	r0, r8
 80079a4:	f7fb fe9a 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 80079a8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80079ac:	26ff      	movs	r6, #255	; 0xff
 80079ae:	4bc8      	ldr	r3, [pc, #800]	; (8007cd0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x354>)
 80079b0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80079b2:	2226      	movs	r2, #38	; 0x26
 80079b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80079b8:	4629      	mov	r1, r5
 80079ba:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80079be:	4638      	mov	r0, r7
 80079c0:	66a5      	str	r5, [r4, #104]	; 0x68
 80079c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079c6:	f026 f9d0 	bl	802dd6a <memset>
 80079ca:	4638      	mov	r0, r7
 80079cc:	f7fb fe86 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 80079d0:	4bc0      	ldr	r3, [pc, #768]	; (8007cd4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x358>)
 80079d2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80079d4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80079d8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80079dc:	a90a      	add	r1, sp, #40	; 0x28
 80079de:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80079e2:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 80079e4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80079e8:	f00e faeb 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80079ec:	4658      	mov	r0, fp
 80079ee:	f00e fc1f 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80079f2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80079f6:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80079fa:	4618      	mov	r0, r3
 80079fc:	ee0a 3a90 	vmov	s21, r3
 8007a00:	f7fb fed0 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007a04:	4648      	mov	r0, r9
 8007a06:	f7fb fecd 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007a0a:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8007a0e:	4618      	mov	r0, r3
 8007a10:	ee0b 3a10 	vmov	s22, r3
 8007a14:	f7fb fec6 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007a18:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8007a1c:	4618      	mov	r0, r3
 8007a1e:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007a22:	4ead      	ldr	r6, [pc, #692]	; (8007cd8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x35c>)
        : TextArea()
 8007a24:	f7fb febe 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007a28:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8007a2c:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8007a30:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007a32:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8007a36:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8007a3a:	f7fb feb3 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007a3e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8007a42:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007a44:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8007a48:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8007a4c:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8007a50:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8007a54:	f7fb fea6 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007a58:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8007a5c:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8007a60:	4650      	mov	r0, sl
 8007a62:	f00d ff71 	bl	8015948 <_ZN8touchgfx5GaugeC1Ev>
 8007a66:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8007a6a:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007a6c:	4e9b      	ldr	r6, [pc, #620]	; (8007cdc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x360>)
 8007a6e:	ee08 3a10 	vmov	s16, r3
 8007a72:	f00c ff99 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8007a76:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8007a7a:	4618      	mov	r0, r3
 8007a7c:	9302      	str	r3, [sp, #8]
 8007a7e:	f7fb fc2f 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007a82:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007a86:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007a8a:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007a8e:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8007a92:	4618      	mov	r0, r3
 8007a94:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007a98:	ee09 3a10 	vmov	s18, r3
 8007a9c:	f7fb fe82 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007aa0:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007aa4:	4618      	mov	r0, r3
 8007aa6:	ee08 3a90 	vmov	s17, r3
 8007aaa:	f00c ff7d 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8007aae:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8007ab2:	4618      	mov	r0, r3
 8007ab4:	9303      	str	r3, [sp, #12]
 8007ab6:	f7fb fc13 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007aba:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007abe:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8007ac2:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8007ac6:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8007aca:	4618      	mov	r0, r3
 8007acc:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8007ad0:	ee09 3a90 	vmov	s19, r3
 8007ad4:	f7fb fe66 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007ad8:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8007adc:	4618      	mov	r0, r3
 8007ade:	ee0a 3a10 	vmov	s20, r3
 8007ae2:	f7fb fe5f 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007ae6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007aea:	4a7d      	ldr	r2, [pc, #500]	; (8007ce0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x364>)
 8007aec:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8007af0:	4a7c      	ldr	r2, [pc, #496]	; (8007ce4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x368>)
 8007af2:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8007af6:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8007afa:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007afe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007b02:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8007b06:	f00f fa4f 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007b0a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007b0e:	462a      	mov	r2, r5
 8007b10:	4640      	mov	r0, r8
 8007b12:	9300      	str	r3, [sp, #0]
 8007b14:	4629      	mov	r1, r5
 8007b16:	23f0      	movs	r3, #240	; 0xf0
 8007b18:	f7fb fdbb 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b1c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007b1e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b22:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b24:	4641      	mov	r1, r8
 8007b26:	4630      	mov	r0, r6
 8007b28:	f00a fe72 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8007b2c:	462a      	mov	r2, r5
 8007b2e:	4638      	mov	r0, r7
 8007b30:	4629      	mov	r1, r5
 8007b32:	f7fb fda1 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8007b36:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007b3a:	4638      	mov	r0, r7
 8007b3c:	a90a      	add	r1, sp, #40	; 0x28
 8007b3e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b42:	f00e fa3e 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b46:	4639      	mov	r1, r7
 8007b48:	4630      	mov	r0, r6
 8007b4a:	f00a fe61 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 8007b4e:	4658      	mov	r0, fp
 8007b50:	f240 1201 	movw	r2, #257	; 0x101
 8007b54:	2121      	movs	r1, #33	; 0x21
 8007b56:	f7fb fd8f 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8007b5a:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b5c:	a909      	add	r1, sp, #36	; 0x24
 8007b5e:	4658      	mov	r0, fp
 8007b60:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007b64:	aa0a      	add	r2, sp, #40	; 0x28
 8007b66:	2302      	movs	r3, #2
 8007b68:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b6c:	f00e f833 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007b70:	f04f 024b 	mov.w	r2, #75	; 0x4b
 8007b74:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 8007b78:	4658      	mov	r0, fp
 8007b7a:	f7fb fdc1 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8007b7e:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8007b82:	f04f 38ff 	mov.w	r8, #4294967295
 8007b86:	3308      	adds	r3, #8
 8007b88:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007b8c:	4659      	mov	r1, fp
 8007b8e:	4630      	mov	r0, r6
        colorPressed = col;
 8007b90:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8007b94:	af04      	add	r7, sp, #16
 8007b96:	f00a fe3b 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8007b9a:	22c2      	movs	r2, #194	; 0xc2
 8007b9c:	ee1a 0a90 	vmov	r0, s21
 8007ba0:	4629      	mov	r1, r5
 8007ba2:	f7fb fd69 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8007ba6:	ee1a 1a90 	vmov	r1, s21
 8007baa:	4638      	mov	r0, r7
        color = newColor;
 8007bac:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8007bb0:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007bb4:	f00d f9ba 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bb8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007bbc:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007bc0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007bc4:	f04f 0b0a 	mov.w	fp, #10
 8007bc8:	4b47      	ldr	r3, [pc, #284]	; (8007ce8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007bca:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HYQ8));
 8007bcc:	ee1a 0a90 	vmov	r0, s21
 8007bd0:	a90a      	add	r1, sp, #40	; 0x28
 8007bd2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8007bd6:	f00d fc43 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bda:	ee1a 1a90 	vmov	r1, s21
 8007bde:	4630      	mov	r0, r6
 8007be0:	f00a fe16 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8007be4:	22c2      	movs	r2, #194	; 0xc2
 8007be6:	4648      	mov	r0, r9
 8007be8:	21d9      	movs	r1, #217	; 0xd9
 8007bea:	f7fb fd45 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8007bee:	4649      	mov	r1, r9
 8007bf0:	4638      	mov	r0, r7
        color = newColor;
 8007bf2:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8007bf6:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8007bfa:	f00d f997 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bfe:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c02:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8007c06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c0a:	4b37      	ldr	r3, [pc, #220]	; (8007ce8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007c0c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MW1V));
 8007c0e:	4648      	mov	r0, r9
 8007c10:	2309      	movs	r3, #9
 8007c12:	a90a      	add	r1, sp, #40	; 0x28
 8007c14:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c18:	f00d fc22 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c1c:	4649      	mov	r1, r9
 8007c1e:	4630      	mov	r0, r6
 8007c20:	f00a fdf6 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8007c24:	2255      	movs	r2, #85	; 0x55
 8007c26:	ee1b 0a10 	vmov	r0, s22
 8007c2a:	2171      	movs	r1, #113	; 0x71
 8007c2c:	f7fb fd24 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8007c30:	ee1b 1a10 	vmov	r1, s22
 8007c34:	4638      	mov	r0, r7
        color = newColor;
 8007c36:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8007c3a:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8007c3e:	f00d f975 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c42:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c46:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007c4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c4e:	4b26      	ldr	r3, [pc, #152]	; (8007ce8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007c50:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3VA));
 8007c52:	ee1b 0a10 	vmov	r0, s22
 8007c56:	f04f 0308 	mov.w	r3, #8
 8007c5a:	a90a      	add	r1, sp, #40	; 0x28
 8007c5c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c60:	f00d fbfe 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c64:	ee1b 1a10 	vmov	r1, s22
 8007c68:	4630      	mov	r0, r6
 8007c6a:	f00a fdd1 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Current.setPosition(0, 239, 240, 15);
 8007c6e:	230f      	movs	r3, #15
 8007c70:	22ef      	movs	r2, #239	; 0xef
 8007c72:	ee1b 0a90 	vmov	r0, s23
 8007c76:	9300      	str	r3, [sp, #0]
 8007c78:	4629      	mov	r1, r5
 8007c7a:	23f0      	movs	r3, #240	; 0xf0
 8007c7c:	f7fb fd09 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c80:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8007c84:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8007c88:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007c8c:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8007c90:	ee1b 1a90 	vmov	r1, s23
 8007c94:	4638      	mov	r0, r7
 8007c96:	4798      	blx	r3
 8007c98:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c9c:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007ca0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007ca4:	4b11      	ldr	r3, [pc, #68]	; (8007cec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x370>)
 8007ca6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(AMD1_CurrentBuffer, AMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DKHH).getText());
 8007ca8:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8007cac:	b92b      	cbnz	r3, 8007cba <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x33e>
 8007cae:	4b10      	ldr	r3, [pc, #64]	; (8007cf0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x374>)
 8007cb0:	4a10      	ldr	r2, [pc, #64]	; (8007cf4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007cb2:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007cb4:	4810      	ldr	r0, [pc, #64]	; (8007cf8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x37c>)
 8007cb6:	f025 fe53 	bl	802d960 <__assert_func>
 8007cba:	4b10      	ldr	r3, [pc, #64]	; (8007cfc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x380>)
 8007cbc:	881b      	ldrh	r3, [r3, #0]
 8007cbe:	2b0e      	cmp	r3, #14
 8007cc0:	d820      	bhi.n	8007d04 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x388>
 8007cc2:	4b0f      	ldr	r3, [pc, #60]	; (8007d00 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x384>)
 8007cc4:	4a0b      	ldr	r2, [pc, #44]	; (8007cf4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007cc6:	2161      	movs	r1, #97	; 0x61
 8007cc8:	e7f4      	b.n	8007cb4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x338>
 8007cca:	bf00      	nop
 8007ccc:	08030b9c 	.word	0x08030b9c
 8007cd0:	08031a70 	.word	0x08031a70
 8007cd4:	08031cbc 	.word	0x08031cbc
 8007cd8:	0802f5b4 	.word	0x0802f5b4
 8007cdc:	080317a4 	.word	0x080317a4
 8007ce0:	08030b84 	.word	0x08030b84
 8007ce4:	08007965 	.word	0x08007965
 8007ce8:	0802f514 	.word	0x0802f514
 8007cec:	20013894 	.word	0x20013894
 8007cf0:	0802f364 	.word	0x0802f364
 8007cf4:	0802f469 	.word	0x0802f469
 8007cf8:	0802f3e1 	.word	0x0802f3e1
 8007cfc:	20013898 	.word	0x20013898
 8007d00:	0802f428 	.word	0x0802f428
        return texts->getText(typedTextId);
 8007d04:	4bde      	ldr	r3, [pc, #888]	; (8008080 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007d06:	210e      	movs	r1, #14
 8007d08:	6818      	ldr	r0, [r3, #0]
 8007d0a:	f002 fcc9 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8007d0e:	4add      	ldr	r2, [pc, #884]	; (8008084 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007d10:	4603      	mov	r3, r0
 8007d12:	4659      	mov	r1, fp
 8007d14:	4648      	mov	r0, r9
 8007d16:	f014 f801 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007d1a:	f04f 010f 	mov.w	r1, #15
 8007d1e:	4ada      	ldr	r2, [pc, #872]	; (8008088 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
        wc1 = value;
 8007d20:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    AMD1_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENTAMD1_CURRENT));
 8007d24:	ee1b 0a90 	vmov	r0, s23
 8007d28:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007d2c:	a90a      	add	r1, sp, #40	; 0x28
 8007d2e:	920a      	str	r2, [sp, #40]	; 0x28
 8007d30:	f00d fb96 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d34:	ee1b 1a90 	vmov	r1, s23
 8007d38:	4630      	mov	r0, r6
 8007d3a:	f00a fd69 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Frequency.setPosition(0, 224, 240, 15);
 8007d3e:	210f      	movs	r1, #15
 8007d40:	22e0      	movs	r2, #224	; 0xe0
 8007d42:	ee1c 0a10 	vmov	r0, s24
 8007d46:	9100      	str	r1, [sp, #0]
 8007d48:	23f0      	movs	r3, #240	; 0xf0
 8007d4a:	4629      	mov	r1, r5
 8007d4c:	f7fb fca1 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d50:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8007d54:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8007d58:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007d5c:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8007d60:	ee1c 1a10 	vmov	r1, s24
 8007d64:	4638      	mov	r0, r7
 8007d66:	4798      	blx	r3
 8007d68:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d6c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007d70:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007d74:	49c5      	ldr	r1, [pc, #788]	; (800808c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007d76:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_FrequencyBuffer, AMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_23ZO).getText());
 8007d78:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	d096      	beq.n	8007cae <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007d80:	48c3      	ldr	r0, [pc, #780]	; (8008090 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007d82:	8803      	ldrh	r3, [r0, #0]
 8007d84:	2b0c      	cmp	r3, #12
 8007d86:	d99c      	bls.n	8007cc2 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007d88:	4bbd      	ldr	r3, [pc, #756]	; (8008080 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007d8a:	210c      	movs	r1, #12
 8007d8c:	6818      	ldr	r0, [r3, #0]
 8007d8e:	f002 fc87 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8007d92:	4abc      	ldr	r2, [pc, #752]	; (8008084 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007d94:	4603      	mov	r3, r0
 8007d96:	4659      	mov	r1, fp
 8007d98:	4648      	mov	r0, r9
 8007d9a:	f013 ffbf 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    AMD1_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8007d9e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8007da2:	4ab9      	ldr	r2, [pc, #740]	; (8008088 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007da4:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8007da8:	230d      	movs	r3, #13
 8007daa:	4661      	mov	r1, ip
 8007dac:	ee1c 0a10 	vmov	r0, s24
 8007db0:	920a      	str	r2, [sp, #40]	; 0x28
 8007db2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007db6:	f00d fb53 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007dba:	ee1c 1a10 	vmov	r1, s24
 8007dbe:	4630      	mov	r0, r6
 8007dc0:	f00a fd26 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Distance.setPosition(0, 209, 240, 15);
 8007dc4:	f04f 0c0f 	mov.w	ip, #15
 8007dc8:	22d1      	movs	r2, #209	; 0xd1
 8007dca:	ee1c 0a90 	vmov	r0, s25
 8007dce:	f8cd c000 	str.w	ip, [sp]
 8007dd2:	23f0      	movs	r3, #240	; 0xf0
 8007dd4:	4629      	mov	r1, r5
 8007dd6:	f7fb fc5c 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007dda:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8007dde:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8007de2:	4638      	mov	r0, r7
 8007de4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007de8:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8007dec:	ee1c 1a90 	vmov	r1, s25
 8007df0:	4798      	blx	r3
 8007df2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007df6:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8007dfa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007dfe:	49a3      	ldr	r1, [pc, #652]	; (800808c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007e00:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_DistanceBuffer, AMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7DZL).getText());
 8007e02:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8007e06:	2b00      	cmp	r3, #0
 8007e08:	f43f af51 	beq.w	8007cae <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007e0c:	48a0      	ldr	r0, [pc, #640]	; (8008090 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007e0e:	8803      	ldrh	r3, [r0, #0]
 8007e10:	2b0b      	cmp	r3, #11
 8007e12:	f67f af56 	bls.w	8007cc2 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007e16:	4b9a      	ldr	r3, [pc, #616]	; (8008080 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007e18:	210b      	movs	r1, #11
 8007e1a:	6818      	ldr	r0, [r3, #0]
 8007e1c:	f002 fc40 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8007e20:	4a98      	ldr	r2, [pc, #608]	; (8008084 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007e22:	4603      	mov	r3, r0
 8007e24:	4659      	mov	r1, fp
 8007e26:	4638      	mov	r0, r7
 8007e28:	f013 ff78 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007e2c:	4a96      	ldr	r2, [pc, #600]	; (8008088 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007e2e:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8007e32:	2336      	movs	r3, #54	; 0x36
    AMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8007e34:	ee1c 0a90 	vmov	r0, s25
 8007e38:	a90a      	add	r1, sp, #40	; 0x28
 8007e3a:	920a      	str	r2, [sp, #40]	; 0x28
 8007e3c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007e40:	f00d fb0e 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e44:	ee1c 1a90 	vmov	r1, s25
 8007e48:	4630      	mov	r0, r6
 8007e4a:	f00a fce1 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e4e:	2304      	movs	r3, #4
    AMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007e50:	a90a      	add	r1, sp, #40	; 0x28
 8007e52:	4650      	mov	r0, sl
 8007e54:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e58:	f00a fc6c 	bl	8012734 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD1_Gauge.setPosition(28, 103, 184, 106);
 8007e5c:	236a      	movs	r3, #106	; 0x6a
 8007e5e:	9300      	str	r3, [sp, #0]
 8007e60:	2267      	movs	r2, #103	; 0x67
 8007e62:	23b8      	movs	r3, #184	; 0xb8
 8007e64:	211c      	movs	r1, #28
 8007e66:	4650      	mov	r0, sl
 8007e68:	f7fb fc13 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD1_Gauge.setCenter(92, 92);
 8007e6c:	225c      	movs	r2, #92	; 0x5c
 8007e6e:	4611      	mov	r1, r2
 8007e70:	4650      	mov	r0, sl
 8007e72:	f00d fe14 	bl	8015a9e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD1_Gauge.setStartEndAngle(-90, 90);
 8007e76:	225a      	movs	r2, #90	; 0x5a
 8007e78:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007e7c:	4650      	mov	r0, sl
 8007e7e:	f00d fe93 	bl	8015ba8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD1_Gauge.setRange(-90, 90);
 8007e82:	462b      	mov	r3, r5
 8007e84:	225a      	movs	r2, #90	; 0x5a
 8007e86:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007e8a:	4650      	mov	r0, sl
 8007e8c:	9500      	str	r5, [sp, #0]
 8007e8e:	f00a fafe 	bl	801248e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD1_Gauge.setValue(0);
 8007e92:	4629      	mov	r1, r5
 8007e94:	4650      	mov	r0, sl
 8007e96:	f00d fe31 	bl	8015afc <_ZN8touchgfx5Gauge8setValueEi>
    AMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007e9a:	2335      	movs	r3, #53	; 0x35
 8007e9c:	2208      	movs	r2, #8
 8007e9e:	2105      	movs	r1, #5
 8007ea0:	4650      	mov	r0, sl
 8007ea2:	f00d fde7 	bl	8015a74 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007ea6:	2101      	movs	r1, #1
 8007ea8:	4650      	mov	r0, sl
 8007eaa:	f00d fd85 	bl	80159b8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007eae:	2101      	movs	r1, #1
 8007eb0:	4650      	mov	r0, sl
 8007eb2:	f00d fd84 	bl	80159be <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007eb6:	4651      	mov	r1, sl
 8007eb8:	4630      	mov	r0, r6
 8007eba:	f00a fca9 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007ebe:	ee18 0a10 	vmov	r0, s16
 8007ec2:	23f0      	movs	r3, #240	; 0xf0
 8007ec4:	224b      	movs	r2, #75	; 0x4b
 8007ec6:	4629      	mov	r1, r5
 8007ec8:	f8cd b000 	str.w	fp, [sp]
 8007ecc:	f7fb fbe1 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ed0:	9b02      	ldr	r3, [sp, #8]
 8007ed2:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007ed6:	22a0      	movs	r2, #160	; 0xa0
 8007ed8:	4611      	mov	r1, r2
 8007eda:	ee18 0a10 	vmov	r0, s16
 8007ede:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007ee2:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8007ee6:	f00c fe75 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007eea:	ee18 0a10 	vmov	r0, s16
 8007eee:	22a0      	movs	r2, #160	; 0xa0
 8007ef0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007ef4:	f00c fe79 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007ef8:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007efc:	2b20      	cmp	r3, #32
 8007efe:	d006      	beq.n	8007f0e <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x592>
        lineWidthQ5 = widthQ5;
 8007f00:	2320      	movs	r3, #32
        updateCachedShape();
 8007f02:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8007f06:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007f0a:	f00c fd6d 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007f0e:	ee18 0a10 	vmov	r0, s16
 8007f12:	2101      	movs	r1, #1
 8007f14:	f00c fe74 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007f18:	ee18 1a10 	vmov	r1, s16
 8007f1c:	4630      	mov	r0, r6
 8007f1e:	f00a fc77 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007f22:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 8007f26:	223c      	movs	r2, #60	; 0x3c
 8007f28:	ee19 0a10 	vmov	r0, s18
 8007f2c:	2117      	movs	r1, #23
        linespace = space;
 8007f2e:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8007f32:	ad04      	add	r5, sp, #16
 8007f34:	f7fb fba0 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8007f38:	ee19 1a10 	vmov	r1, s18
 8007f3c:	4628      	mov	r0, r5
        color = newColor;
 8007f3e:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8007f42:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007f46:	f00c fff1 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007f4a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007f4e:	ee19 3a10 	vmov	r3, s18
 8007f52:	333c      	adds	r3, #60	; 0x3c
 8007f54:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007f58:	4f4b      	ldr	r7, [pc, #300]	; (8008088 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007f5a:	970a      	str	r7, [sp, #40]	; 0x28
 8007f5c:	234c      	movs	r3, #76	; 0x4c
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8007f5e:	ee19 0a10 	vmov	r0, s18
 8007f62:	a90a      	add	r1, sp, #40	; 0x28
 8007f64:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007f68:	f00d fa7a 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007f6c:	ee19 1a10 	vmov	r1, s18
 8007f70:	4630      	mov	r0, r6
 8007f72:	f00a fc4d 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007f76:	230a      	movs	r3, #10
 8007f78:	ee18 0a90 	vmov	r0, s17
 8007f7c:	9300      	str	r3, [sp, #0]
 8007f7e:	2232      	movs	r2, #50	; 0x32
 8007f80:	23f0      	movs	r3, #240	; 0xf0
 8007f82:	4649      	mov	r1, r9
 8007f84:	f7fb fb85 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f88:	9b03      	ldr	r3, [sp, #12]
 8007f8a:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f8e:	22a0      	movs	r2, #160	; 0xa0
 8007f90:	4611      	mov	r1, r2
 8007f92:	ee18 0a90 	vmov	r0, s17
 8007f96:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8007f9a:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8007f9e:	f00c fe19 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007fa2:	ee18 0a90 	vmov	r0, s17
 8007fa6:	22a0      	movs	r2, #160	; 0xa0
 8007fa8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007fac:	f00c fe1d 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007fb0:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8007fb4:	2b20      	cmp	r3, #32
 8007fb6:	d006      	beq.n	8007fc6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x64a>
        lineWidthQ5 = widthQ5;
 8007fb8:	2320      	movs	r3, #32
        updateCachedShape();
 8007fba:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8007fbe:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8007fc2:	f00c fd11 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007fc6:	ee18 0a90 	vmov	r0, s17
 8007fca:	2101      	movs	r1, #1
 8007fcc:	f00c fe18 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007fd0:	ee18 1a90 	vmov	r1, s17
 8007fd4:	4630      	mov	r0, r6
 8007fd6:	f00a fc1b 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007fda:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8007fde:	ee19 0a90 	vmov	r0, s19
 8007fe2:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007fe4:	f04f 0800 	mov.w	r8, #0
 8007fe8:	2145      	movs	r1, #69	; 0x45
 8007fea:	f7fb fb45 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007fee:	ee19 1a90 	vmov	r1, s19
 8007ff2:	4628      	mov	r0, r5
        color = newColor;
 8007ff4:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8007ff8:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8007ffc:	f00c ff96 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008000:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008004:	ee19 3a90 	vmov	r3, s19
 8008008:	333c      	adds	r3, #60	; 0x3c
 800800a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800800e:	234d      	movs	r3, #77	; 0x4d
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8008010:	ee19 0a90 	vmov	r0, s19
 8008014:	a90a      	add	r1, sp, #40	; 0x28
 8008016:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800801a:	970a      	str	r7, [sp, #40]	; 0x28
 800801c:	f00d fa20 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008020:	ee19 1a90 	vmov	r1, s19
 8008024:	4630      	mov	r0, r6
 8008026:	f00a fbf3 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800802a:	ee1a 0a10 	vmov	r0, s20
 800802e:	220c      	movs	r2, #12
 8008030:	2136      	movs	r1, #54	; 0x36
 8008032:	f7fb fb21 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8008036:	ee1a 1a10 	vmov	r1, s20
 800803a:	4628      	mov	r0, r5
        color = newColor;
 800803c:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8008040:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8008044:	f00c ff72 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008048:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800804c:	ee1a 3a10 	vmov	r3, s20
 8008050:	333c      	adds	r3, #60	; 0x3c
 8008052:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008056:	234e      	movs	r3, #78	; 0x4e
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8008058:	ee1a 0a10 	vmov	r0, s20
 800805c:	a90a      	add	r1, sp, #40	; 0x28
 800805e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008062:	970a      	str	r7, [sp, #40]	; 0x28
 8008064:	f00d f9fc 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008068:	4630      	mov	r0, r6
 800806a:	ee1a 1a10 	vmov	r1, s20
 800806e:	f00a fbcf 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008072:	4620      	mov	r0, r4
 8008074:	b00d      	add	sp, #52	; 0x34
 8008076:	ecbd 8b0a 	vpop	{d8-d12}
 800807a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800807e:	bf00      	nop
 8008080:	200138a0 	.word	0x200138a0
 8008084:	0802f4a1 	.word	0x0802f4a1
 8008088:	0802f514 	.word	0x0802f514
 800808c:	20013894 	.word	0x20013894
 8008090:	20013898 	.word	0x20013898

08008094 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8008094:	4770      	bx	lr

08008096 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008096:	4770      	bx	lr

08008098 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008098:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800809a:	68c2      	ldr	r2, [r0, #12]
 800809c:	6844      	ldr	r4, [r0, #4]
 800809e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80080a0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80080a2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80080a6:	07d2      	lsls	r2, r2, #31
 80080a8:	bf48      	it	mi
 80080aa:	5962      	ldrmi	r2, [r4, r5]
 80080ac:	689b      	ldr	r3, [r3, #8]
    }
 80080ae:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80080b0:	bf48      	it	mi
 80080b2:	58d3      	ldrmi	r3, [r2, r3]
 80080b4:	4718      	bx	r3

080080b6 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80080b6:	6843      	ldr	r3, [r0, #4]
 80080b8:	b12b      	cbz	r3, 80080c6 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80080ba:	6883      	ldr	r3, [r0, #8]
 80080bc:	b92b      	cbnz	r3, 80080ca <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80080be:	68c0      	ldr	r0, [r0, #12]
 80080c0:	f000 0001 	and.w	r0, r0, #1
 80080c4:	4770      	bx	lr
 80080c6:	4618      	mov	r0, r3
 80080c8:	4770      	bx	lr
 80080ca:	2001      	movs	r0, #1
    }
 80080cc:	4770      	bx	lr

080080ce <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80080ce:	b510      	push	{r4, lr}
 80080d0:	2110      	movs	r1, #16
 80080d2:	4604      	mov	r4, r0
 80080d4:	f024 fd5d 	bl	802cb92 <_ZdlPvj>
 80080d8:	4620      	mov	r0, r4
 80080da:	bd10      	pop	{r4, pc}

080080dc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80080dc:	b510      	push	{r4, lr}
 80080de:	4b03      	ldr	r3, [pc, #12]	; (80080ec <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 80080e0:	6003      	str	r3, [r0, #0]
 80080e2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80080e4:	f00e ff6a 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80080e8:	4620      	mov	r0, r4
 80080ea:	bd10      	pop	{r4, pc}
 80080ec:	08030be8 	.word	0x08030be8

080080f0 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80080f0:	b507      	push	{r0, r1, r2, lr}
 80080f2:	4b07      	ldr	r3, [pc, #28]	; (8008110 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 80080f4:	6003      	str	r3, [r0, #0]
 80080f6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80080f8:	f00e ff60 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80080fc:	9801      	ldr	r0, [sp, #4]
 80080fe:	f241 4178 	movw	r1, #5240	; 0x1478
 8008102:	f024 fd46 	bl	802cb92 <_ZdlPvj>
 8008106:	9801      	ldr	r0, [sp, #4]
 8008108:	b003      	add	sp, #12
 800810a:	f85d fb04 	ldr.w	pc, [sp], #4
 800810e:	bf00      	nop
 8008110:	08030be8 	.word	0x08030be8

08008114 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8008114:	3098      	adds	r0, #152	; 0x98
 8008116:	4288      	cmp	r0, r1
{
 8008118:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 800811a:	d105      	bne.n	8008128 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800811c:	f010 fc50 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8008120:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8008124:	f7fd baa0 	b.w	8005668 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8008128:	bd08      	pop	{r3, pc}
	...

0800812c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 800812c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008130:	ed2d 8b0a 	vpush	{d8-d12}
 8008134:	4604      	mov	r4, r0
 8008136:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8008138:	46a0      	mov	r8, r4
 800813a:	2500      	movs	r5, #0
 800813c:	f012 f8c0 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 8008140:	4bcf      	ldr	r3, [pc, #828]	; (8008480 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x354>)
 8008142:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008144:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008148:	2226      	movs	r2, #38	; 0x26
 800814a:	4629      	mov	r1, r5
 800814c:	4640      	mov	r0, r8
 800814e:	f025 fe0c 	bl	802dd6a <memset>
 8008152:	4640      	mov	r0, r8
 8008154:	f7fb fac2 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8008158:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800815c:	26ff      	movs	r6, #255	; 0xff
 800815e:	4bc9      	ldr	r3, [pc, #804]	; (8008484 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x358>)
 8008160:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008162:	2226      	movs	r2, #38	; 0x26
 8008164:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008168:	4629      	mov	r1, r5
 800816a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800816e:	4638      	mov	r0, r7
 8008170:	66a5      	str	r5, [r4, #104]	; 0x68
 8008172:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008176:	f025 fdf8 	bl	802dd6a <memset>
 800817a:	4638      	mov	r0, r7
 800817c:	f7fb faae 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8008180:	4bc1      	ldr	r3, [pc, #772]	; (8008488 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x35c>)
 8008182:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008184:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008188:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800818c:	a90c      	add	r1, sp, #48	; 0x30
 800818e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8008192:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8008194:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008198:	f00d ff13 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800819c:	4658      	mov	r0, fp
 800819e:	f00e f847 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80081a2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80081a6:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80081aa:	4618      	mov	r0, r3
 80081ac:	ee0a 3a90 	vmov	s21, r3
 80081b0:	f7fb faf8 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80081b4:	4648      	mov	r0, r9
 80081b6:	f7fb faf5 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80081ba:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80081be:	4618      	mov	r0, r3
 80081c0:	ee0b 3a10 	vmov	s22, r3
 80081c4:	f7fb faee 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80081c8:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 80081cc:	4618      	mov	r0, r3
 80081ce:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081d2:	4eae      	ldr	r6, [pc, #696]	; (800848c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x360>)
        : TextArea()
 80081d4:	f7fb fae6 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80081d8:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 80081dc:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 80081e0:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081e2:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 80081e6:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80081ea:	f7fb fadb 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80081ee:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80081f2:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081f4:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 80081f8:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 80081fc:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8008200:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8008204:	f7fb face 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008208:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 800820c:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008210:	4650      	mov	r0, sl
 8008212:	f00d fb99 	bl	8015948 <_ZN8touchgfx5GaugeC1Ev>
 8008216:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 800821a:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800821c:	4e9c      	ldr	r6, [pc, #624]	; (8008490 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x364>)
 800821e:	ee08 3a10 	vmov	s16, r3
 8008222:	f00c fbc1 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8008226:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 800822a:	4618      	mov	r0, r3
 800822c:	9303      	str	r3, [sp, #12]
 800822e:	f7fb f857 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008232:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008236:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 800823a:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 800823e:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8008242:	4618      	mov	r0, r3
 8008244:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008248:	ee09 3a10 	vmov	s18, r3
 800824c:	f7fb faaa 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008250:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8008254:	4618      	mov	r0, r3
 8008256:	ee08 3a90 	vmov	s17, r3
 800825a:	f00c fba5 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 800825e:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8008262:	4618      	mov	r0, r3
 8008264:	9304      	str	r3, [sp, #16]
 8008266:	f7fb f83b 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800826a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800826e:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8008272:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8008276:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 800827a:	4618      	mov	r0, r3
 800827c:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008280:	ee09 3a90 	vmov	s19, r3
 8008284:	f7fb fa8e 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008288:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 800828c:	4618      	mov	r0, r3
 800828e:	ee0a 3a10 	vmov	s20, r3
 8008292:	f7fb fa87 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008296:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800829a:	4a7e      	ldr	r2, [pc, #504]	; (8008494 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x368>)
 800829c:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 80082a0:	4a7d      	ldr	r2, [pc, #500]	; (8008498 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x36c>)
 80082a2:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 80082a6:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 80082aa:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80082ae:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80082b2:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80082b6:	f00e fe77 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80082ba:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80082be:	462a      	mov	r2, r5
 80082c0:	4640      	mov	r0, r8
 80082c2:	9300      	str	r3, [sp, #0]
 80082c4:	4629      	mov	r1, r5
 80082c6:	23f0      	movs	r3, #240	; 0xf0
 80082c8:	f7fb f9e3 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 80082cc:	1d26      	adds	r6, r4, #4
        color = newColor;
 80082ce:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80082d2:	66a3      	str	r3, [r4, #104]	; 0x68
 80082d4:	4641      	mov	r1, r8
 80082d6:	4630      	mov	r0, r6
 80082d8:	f00a fa9a 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80082dc:	462a      	mov	r2, r5
 80082de:	4638      	mov	r0, r7
 80082e0:	4629      	mov	r1, r5
 80082e2:	f7fb f9c9 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80082e6:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80082ea:	4638      	mov	r0, r7
 80082ec:	a90c      	add	r1, sp, #48	; 0x30
 80082ee:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80082f2:	f00d fe66 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80082f6:	4639      	mov	r1, r7
 80082f8:	4630      	mov	r0, r6
 80082fa:	f00a fa89 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 80082fe:	4658      	mov	r0, fp
 8008300:	f240 1201 	movw	r2, #257	; 0x101
 8008304:	2121      	movs	r1, #33	; 0x21
 8008306:	f7fb f9b7 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800830a:	f04f 0303 	mov.w	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800830e:	aa0c      	add	r2, sp, #48	; 0x30
 8008310:	a90b      	add	r1, sp, #44	; 0x2c
 8008312:	4658      	mov	r0, fp
 8008314:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008318:	f04f 0302 	mov.w	r3, #2
 800831c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008320:	f00d fc59 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008324:	2347      	movs	r3, #71	; 0x47
        updateTextPosition();
 8008326:	4658      	mov	r0, fp
 8008328:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800832c:	f7fb f9e8 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8008330:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8008334:	f04f 38ff 	mov.w	r8, #4294967295
 8008338:	3308      	adds	r3, #8
 800833a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800833e:	4659      	mov	r1, fp
 8008340:	4630      	mov	r0, r6
        colorPressed = col;
 8008342:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8008346:	af06      	add	r7, sp, #24
 8008348:	f00a fa62 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 800834c:	22c2      	movs	r2, #194	; 0xc2
 800834e:	ee1a 0a90 	vmov	r0, s21
 8008352:	4629      	mov	r1, r5
 8008354:	f7fb f990 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8008358:	ee1a 1a90 	vmov	r1, s21
 800835c:	4638      	mov	r0, r7
        color = newColor;
 800835e:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8008362:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8008366:	f00c fde1 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800836a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800836e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8008372:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008376:	4b49      	ldr	r3, [pc, #292]	; (800849c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008378:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TIF0));
 800837a:	ee1a 0a90 	vmov	r0, s21
 800837e:	2307      	movs	r3, #7
 8008380:	a90c      	add	r1, sp, #48	; 0x30
 8008382:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008386:	f00d f86b 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800838a:	ee1a 1a90 	vmov	r1, s21
 800838e:	4630      	mov	r0, r6
 8008390:	f00a fa3e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8008394:	22c2      	movs	r2, #194	; 0xc2
 8008396:	4648      	mov	r0, r9
 8008398:	21d9      	movs	r1, #217	; 0xd9
 800839a:	f7fb f96d 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800839e:	4649      	mov	r1, r9
 80083a0:	4638      	mov	r0, r7
        color = newColor;
 80083a2:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80083a6:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80083aa:	f00c fdbf 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80083ae:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80083b2:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80083b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80083ba:	4b38      	ldr	r3, [pc, #224]	; (800849c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80083bc:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H7OA));
 80083be:	4648      	mov	r0, r9
 80083c0:	2306      	movs	r3, #6
 80083c2:	a90c      	add	r1, sp, #48	; 0x30
 80083c4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80083c8:	f00d f84a 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083cc:	4649      	mov	r1, r9
 80083ce:	4630      	mov	r0, r6
 80083d0:	f00a fa1e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 80083d4:	2255      	movs	r2, #85	; 0x55
 80083d6:	ee1b 0a10 	vmov	r0, s22
 80083da:	2171      	movs	r1, #113	; 0x71
 80083dc:	f7fb f94c 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80083e0:	ee1b 1a10 	vmov	r1, s22
 80083e4:	4638      	mov	r0, r7
        color = newColor;
 80083e6:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 80083ea:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 80083ee:	f00c fd9d 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80083f2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80083f6:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80083fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80083fe:	4b27      	ldr	r3, [pc, #156]	; (800849c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008400:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_61VS));
 8008402:	ee1b 0a10 	vmov	r0, s22
 8008406:	f04f 0305 	mov.w	r3, #5
 800840a:	a90c      	add	r1, sp, #48	; 0x30
 800840c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008410:	f00d f826 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008414:	ee1b 1a10 	vmov	r1, s22
 8008418:	4630      	mov	r0, r6
 800841a:	f00a f9f9 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Current.setPosition(0, 239, 240, 15);
 800841e:	230f      	movs	r3, #15
 8008420:	22ef      	movs	r2, #239	; 0xef
 8008422:	ee1b 0a90 	vmov	r0, s23
 8008426:	9300      	str	r3, [sp, #0]
 8008428:	4629      	mov	r1, r5
 800842a:	23f0      	movs	r3, #240	; 0xf0
 800842c:	f7fb f931 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008430:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8008434:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8008438:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800843c:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8008440:	ee1b 1a90 	vmov	r1, s23
 8008444:	4638      	mov	r0, r7
 8008446:	4798      	blx	r3
 8008448:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800844c:	f8df 9064 	ldr.w	r9, [pc, #100]	; 80084b4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x388>
 8008450:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8008454:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008458:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_CurrentBuffer, AMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VDGC).getText());
 800845c:	f204 6b1c 	addw	fp, r4, #1564	; 0x61c
 8008460:	b92b      	cbnz	r3, 800846e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x342>
 8008462:	4b0f      	ldr	r3, [pc, #60]	; (80084a0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x374>)
 8008464:	4a0f      	ldr	r2, [pc, #60]	; (80084a4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 8008466:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008468:	480f      	ldr	r0, [pc, #60]	; (80084a8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x37c>)
 800846a:	f025 fa79 	bl	802d960 <__assert_func>
 800846e:	4b0f      	ldr	r3, [pc, #60]	; (80084ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x380>)
 8008470:	881b      	ldrh	r3, [r3, #0]
 8008472:	2b04      	cmp	r3, #4
 8008474:	d820      	bhi.n	80084b8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x38c>
 8008476:	4b0e      	ldr	r3, [pc, #56]	; (80084b0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x384>)
 8008478:	4a0a      	ldr	r2, [pc, #40]	; (80084a4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 800847a:	2161      	movs	r1, #97	; 0x61
 800847c:	e7f4      	b.n	8008468 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x33c>
 800847e:	bf00      	nop
 8008480:	08030be8 	.word	0x08030be8
 8008484:	08031a70 	.word	0x08031a70
 8008488:	08031cbc 	.word	0x08031cbc
 800848c:	0802f5b4 	.word	0x0802f5b4
 8008490:	080317a4 	.word	0x080317a4
 8008494:	08030bd0 	.word	0x08030bd0
 8008498:	08008115 	.word	0x08008115
 800849c:	0802f514 	.word	0x0802f514
 80084a0:	0802f364 	.word	0x0802f364
 80084a4:	0802f469 	.word	0x0802f469
 80084a8:	0802f3e1 	.word	0x0802f3e1
 80084ac:	20013898 	.word	0x20013898
 80084b0:	0802f428 	.word	0x0802f428
 80084b4:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 80084b8:	4bdd      	ldr	r3, [pc, #884]	; (8008830 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80084ba:	2104      	movs	r1, #4
 80084bc:	6818      	ldr	r0, [r3, #0]
 80084be:	f002 f8ef 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80084c2:	4adc      	ldr	r2, [pc, #880]	; (8008834 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 80084c4:	4603      	mov	r3, r0
 80084c6:	210a      	movs	r1, #10
 80084c8:	4658      	mov	r0, fp
 80084ca:	f013 fc27 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80084ce:	4ada      	ldr	r2, [pc, #872]	; (8008838 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
        wc1 = value;
 80084d0:	f8c4 b200 	str.w	fp, [r4, #512]	; 0x200
    AMD3_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENT));
 80084d4:	ee1b 0a90 	vmov	r0, s23
 80084d8:	a90c      	add	r1, sp, #48	; 0x30
 80084da:	f04f 0b01 	mov.w	fp, #1
 80084de:	920c      	str	r2, [sp, #48]	; 0x30
 80084e0:	f8ad b034 	strh.w	fp, [sp, #52]	; 0x34
 80084e4:	f00c ffbc 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084e8:	ee1b 1a90 	vmov	r1, s23
 80084ec:	4630      	mov	r0, r6
 80084ee:	f00a f98f 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Frequency.setPosition(0, 224, 240, 15);
 80084f2:	210f      	movs	r1, #15
 80084f4:	22e0      	movs	r2, #224	; 0xe0
 80084f6:	ee1c 0a10 	vmov	r0, s24
 80084fa:	9100      	str	r1, [sp, #0]
 80084fc:	23f0      	movs	r3, #240	; 0xf0
 80084fe:	4629      	mov	r1, r5
 8008500:	f7fb f8c7 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008504:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8008508:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 800850c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008510:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8008514:	ee1c 1a10 	vmov	r1, s24
 8008518:	4638      	mov	r0, r7
 800851a:	4798      	blx	r3
 800851c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008520:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008524:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008528:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_FrequencyBuffer, AMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RCRP).getText());
 800852c:	f504 61c6 	add.w	r1, r4, #1584	; 0x630
 8008530:	9105      	str	r1, [sp, #20]
 8008532:	2b00      	cmp	r3, #0
 8008534:	d095      	beq.n	8008462 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008536:	49c1      	ldr	r1, [pc, #772]	; (800883c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 8008538:	880b      	ldrh	r3, [r1, #0]
 800853a:	2b03      	cmp	r3, #3
 800853c:	d99b      	bls.n	8008476 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 800853e:	4bbc      	ldr	r3, [pc, #752]	; (8008830 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 8008540:	2103      	movs	r1, #3
 8008542:	6818      	ldr	r0, [r3, #0]
 8008544:	f002 f8ac 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8008548:	4aba      	ldr	r2, [pc, #744]	; (8008834 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 800854a:	4603      	mov	r3, r0
 800854c:	210a      	movs	r1, #10
 800854e:	9805      	ldr	r0, [sp, #20]
 8008550:	f013 fbe4 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8008554:	9805      	ldr	r0, [sp, #20]
 8008556:	f8c4 024c 	str.w	r0, [r4, #588]	; 0x24c
    AMD3_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 800855a:	a80c      	add	r0, sp, #48	; 0x30
        : typedTextId(id)
 800855c:	4ab6      	ldr	r2, [pc, #728]	; (8008838 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 800855e:	920c      	str	r2, [sp, #48]	; 0x30
 8008560:	230d      	movs	r3, #13
 8008562:	4601      	mov	r1, r0
 8008564:	ee1c 0a10 	vmov	r0, s24
 8008568:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800856c:	f00c ff78 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008570:	ee1c 1a10 	vmov	r1, s24
 8008574:	4630      	mov	r0, r6
 8008576:	f00a f94b 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Distance.setPosition(0, 209, 240, 15);
 800857a:	200f      	movs	r0, #15
 800857c:	22d1      	movs	r2, #209	; 0xd1
 800857e:	9000      	str	r0, [sp, #0]
 8008580:	23f0      	movs	r3, #240	; 0xf0
 8008582:	ee1c 0a90 	vmov	r0, s25
 8008586:	4629      	mov	r1, r5
 8008588:	f7fb f883 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 800858c:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8008590:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8008594:	4638      	mov	r0, r7
 8008596:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800859a:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 800859e:	ee1c 1a90 	vmov	r1, s25
 80085a2:	4798      	blx	r3
 80085a4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80085a8:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 80085ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80085b0:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_DistanceBuffer, AMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VKRM).getText());
 80085b4:	f204 6744 	addw	r7, r4, #1604	; 0x644
 80085b8:	2b00      	cmp	r3, #0
 80085ba:	f43f af52 	beq.w	8008462 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80085be:	499f      	ldr	r1, [pc, #636]	; (800883c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 80085c0:	880b      	ldrh	r3, [r1, #0]
 80085c2:	2b02      	cmp	r3, #2
 80085c4:	f67f af57 	bls.w	8008476 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 80085c8:	4b99      	ldr	r3, [pc, #612]	; (8008830 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80085ca:	2102      	movs	r1, #2
 80085cc:	6818      	ldr	r0, [r3, #0]
 80085ce:	f002 f867 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80085d2:	4a98      	ldr	r2, [pc, #608]	; (8008834 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 80085d4:	4603      	mov	r3, r0
 80085d6:	210a      	movs	r1, #10
 80085d8:	4638      	mov	r0, r7
 80085da:	f013 fb9f 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80085de:	4a96      	ldr	r2, [pc, #600]	; (8008838 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 80085e0:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 80085e4:	2336      	movs	r3, #54	; 0x36
    AMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 80085e6:	ee1c 0a90 	vmov	r0, s25
 80085ea:	a90c      	add	r1, sp, #48	; 0x30
 80085ec:	920c      	str	r2, [sp, #48]	; 0x30
 80085ee:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80085f2:	f00c ff35 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80085f6:	ee1c 1a90 	vmov	r1, s25
 80085fa:	4630      	mov	r0, r6
 80085fc:	f00a f908 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008600:	2304      	movs	r3, #4
    AMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8008602:	a90c      	add	r1, sp, #48	; 0x30
 8008604:	4650      	mov	r0, sl
 8008606:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800860a:	f00a f893 	bl	8012734 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD3_Gauge.setPosition(28, 103, 184, 106);
 800860e:	236a      	movs	r3, #106	; 0x6a
 8008610:	9300      	str	r3, [sp, #0]
 8008612:	2267      	movs	r2, #103	; 0x67
 8008614:	23b8      	movs	r3, #184	; 0xb8
 8008616:	211c      	movs	r1, #28
 8008618:	4650      	mov	r0, sl
 800861a:	f7fb f83a 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD3_Gauge.setCenter(92, 92);
 800861e:	225c      	movs	r2, #92	; 0x5c
 8008620:	4611      	mov	r1, r2
 8008622:	4650      	mov	r0, sl
 8008624:	f00d fa3b 	bl	8015a9e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD3_Gauge.setStartEndAngle(-90, 90);
 8008628:	225a      	movs	r2, #90	; 0x5a
 800862a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800862e:	4650      	mov	r0, sl
 8008630:	f00d faba 	bl	8015ba8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD3_Gauge.setRange(-90, 90);
 8008634:	462b      	mov	r3, r5
 8008636:	225a      	movs	r2, #90	; 0x5a
 8008638:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800863c:	4650      	mov	r0, sl
 800863e:	9500      	str	r5, [sp, #0]
 8008640:	f009 ff25 	bl	801248e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD3_Gauge.setValue(0);
 8008644:	4629      	mov	r1, r5
 8008646:	4650      	mov	r0, sl
 8008648:	f00d fa58 	bl	8015afc <_ZN8touchgfx5Gauge8setValueEi>
    AMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800864c:	2335      	movs	r3, #53	; 0x35
 800864e:	2208      	movs	r2, #8
 8008650:	2105      	movs	r1, #5
 8008652:	4650      	mov	r0, sl
 8008654:	f00d fa0e 	bl	8015a74 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008658:	4659      	mov	r1, fp
 800865a:	4650      	mov	r0, sl
 800865c:	f00d f9ac 	bl	80159b8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008660:	4659      	mov	r1, fp
 8008662:	4650      	mov	r0, sl
 8008664:	f00d f9ab 	bl	80159be <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8008668:	4651      	mov	r1, sl
 800866a:	4630      	mov	r0, r6
 800866c:	f00a f8d0 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008670:	230a      	movs	r3, #10
 8008672:	ee18 0a10 	vmov	r0, s16
 8008676:	9300      	str	r3, [sp, #0]
 8008678:	224b      	movs	r2, #75	; 0x4b
 800867a:	23f0      	movs	r3, #240	; 0xf0
 800867c:	4629      	mov	r1, r5
 800867e:	f7fb f808 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008682:	9b03      	ldr	r3, [sp, #12]
 8008684:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008688:	22a0      	movs	r2, #160	; 0xa0
 800868a:	4611      	mov	r1, r2
 800868c:	ee18 0a10 	vmov	r0, s16
 8008690:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008694:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8008698:	f00c fa9c 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800869c:	ee18 0a10 	vmov	r0, s16
 80086a0:	22a0      	movs	r2, #160	; 0xa0
 80086a2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80086a6:	f00c faa0 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80086aa:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80086ae:	2b20      	cmp	r3, #32
 80086b0:	d006      	beq.n	80086c0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x594>
        lineWidthQ5 = widthQ5;
 80086b2:	2320      	movs	r3, #32
        updateCachedShape();
 80086b4:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 80086b8:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80086bc:	f00c f994 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80086c0:	ee18 0a10 	vmov	r0, s16
 80086c4:	2101      	movs	r1, #1
 80086c6:	f00c fa9b 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80086ca:	ee18 1a10 	vmov	r1, s16
 80086ce:	4630      	mov	r0, r6
 80086d0:	f00a f89e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80086d4:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 80086d8:	223c      	movs	r2, #60	; 0x3c
 80086da:	ee19 0a10 	vmov	r0, s18
 80086de:	2117      	movs	r1, #23
        linespace = space;
 80086e0:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 80086e4:	ad06      	add	r5, sp, #24
 80086e6:	f7fa ffc7 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80086ea:	ee19 1a10 	vmov	r1, s18
 80086ee:	4628      	mov	r0, r5
        color = newColor;
 80086f0:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 80086f4:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80086f8:	f00c fc18 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80086fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008700:	ee19 3a10 	vmov	r3, s18
 8008704:	333c      	adds	r3, #60	; 0x3c
 8008706:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800870a:	4f4b      	ldr	r7, [pc, #300]	; (8008838 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 800870c:	970c      	str	r7, [sp, #48]	; 0x30
 800870e:	2348      	movs	r3, #72	; 0x48
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8008710:	ee19 0a10 	vmov	r0, s18
 8008714:	a90c      	add	r1, sp, #48	; 0x30
 8008716:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800871a:	f00c fea1 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800871e:	ee19 1a10 	vmov	r1, s18
 8008722:	4630      	mov	r0, r6
 8008724:	f00a f874 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008728:	230a      	movs	r3, #10
 800872a:	ee18 0a90 	vmov	r0, s17
 800872e:	9300      	str	r3, [sp, #0]
 8008730:	2232      	movs	r2, #50	; 0x32
 8008732:	23f0      	movs	r3, #240	; 0xf0
 8008734:	4649      	mov	r1, r9
 8008736:	f7fa ffac 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 800873a:	9b04      	ldr	r3, [sp, #16]
 800873c:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008740:	22a0      	movs	r2, #160	; 0xa0
 8008742:	4611      	mov	r1, r2
 8008744:	ee18 0a90 	vmov	r0, s17
 8008748:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 800874c:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8008750:	f00c fa40 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008754:	ee18 0a90 	vmov	r0, s17
 8008758:	22a0      	movs	r2, #160	; 0xa0
 800875a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800875e:	f00c fa44 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008762:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8008766:	2b20      	cmp	r3, #32
 8008768:	d006      	beq.n	8008778 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x64c>
        lineWidthQ5 = widthQ5;
 800876a:	2320      	movs	r3, #32
        updateCachedShape();
 800876c:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8008770:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8008774:	f00c f938 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008778:	ee18 0a90 	vmov	r0, s17
 800877c:	2101      	movs	r1, #1
 800877e:	f00c fa3f 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008782:	ee18 1a90 	vmov	r1, s17
 8008786:	4630      	mov	r0, r6
 8008788:	f00a f842 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800878c:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8008790:	ee19 0a90 	vmov	r0, s19
 8008794:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008796:	f04f 0800 	mov.w	r8, #0
 800879a:	2145      	movs	r1, #69	; 0x45
 800879c:	f7fa ff6c 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80087a0:	ee19 1a90 	vmov	r1, s19
 80087a4:	4628      	mov	r0, r5
        color = newColor;
 80087a6:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 80087aa:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 80087ae:	f00c fbbd 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80087b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80087b6:	ee19 3a90 	vmov	r3, s19
 80087ba:	333c      	adds	r3, #60	; 0x3c
 80087bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80087c0:	2349      	movs	r3, #73	; 0x49
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80087c2:	ee19 0a90 	vmov	r0, s19
 80087c6:	a90c      	add	r1, sp, #48	; 0x30
 80087c8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80087cc:	970c      	str	r7, [sp, #48]	; 0x30
 80087ce:	f00c fe47 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80087d2:	ee19 1a90 	vmov	r1, s19
 80087d6:	4630      	mov	r0, r6
 80087d8:	f00a f81a 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80087dc:	ee1a 0a10 	vmov	r0, s20
 80087e0:	220c      	movs	r2, #12
 80087e2:	2136      	movs	r1, #54	; 0x36
 80087e4:	f7fa ff48 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80087e8:	ee1a 1a10 	vmov	r1, s20
 80087ec:	4628      	mov	r0, r5
        color = newColor;
 80087ee:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 80087f2:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 80087f6:	f00c fb99 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80087fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80087fe:	ee1a 3a10 	vmov	r3, s20
 8008802:	333c      	adds	r3, #60	; 0x3c
 8008804:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008808:	234a      	movs	r3, #74	; 0x4a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 800880a:	ee1a 0a10 	vmov	r0, s20
 800880e:	a90c      	add	r1, sp, #48	; 0x30
 8008810:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008814:	970c      	str	r7, [sp, #48]	; 0x30
 8008816:	f00c fe23 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800881a:	4630      	mov	r0, r6
 800881c:	ee1a 1a10 	vmov	r1, s20
 8008820:	f009 fff6 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008824:	4620      	mov	r0, r4
 8008826:	b00f      	add	sp, #60	; 0x3c
 8008828:	ecbd 8b0a 	vpop	{d8-d12}
 800882c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008830:	200138a0 	.word	0x200138a0
 8008834:	0802f4a1 	.word	0x0802f4a1
 8008838:	0802f514 	.word	0x0802f514
 800883c:	20013898 	.word	0x20013898

08008840 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8008840:	4770      	bx	lr

08008842 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008842:	4770      	bx	lr

08008844 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008844:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008846:	68c2      	ldr	r2, [r0, #12]
 8008848:	6844      	ldr	r4, [r0, #4]
 800884a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800884c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800884e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008852:	07d2      	lsls	r2, r2, #31
 8008854:	bf48      	it	mi
 8008856:	5962      	ldrmi	r2, [r4, r5]
 8008858:	689b      	ldr	r3, [r3, #8]
    }
 800885a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800885c:	bf48      	it	mi
 800885e:	58d3      	ldrmi	r3, [r2, r3]
 8008860:	4718      	bx	r3

08008862 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008862:	6843      	ldr	r3, [r0, #4]
 8008864:	b12b      	cbz	r3, 8008872 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008866:	6883      	ldr	r3, [r0, #8]
 8008868:	b92b      	cbnz	r3, 8008876 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800886a:	68c0      	ldr	r0, [r0, #12]
 800886c:	f000 0001 	and.w	r0, r0, #1
 8008870:	4770      	bx	lr
 8008872:	4618      	mov	r0, r3
 8008874:	4770      	bx	lr
 8008876:	2001      	movs	r0, #1
    }
 8008878:	4770      	bx	lr

0800887a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800887a:	b510      	push	{r4, lr}
 800887c:	2110      	movs	r1, #16
 800887e:	4604      	mov	r4, r0
 8008880:	f024 f987 	bl	802cb92 <_ZdlPvj>
 8008884:	4620      	mov	r0, r4
 8008886:	bd10      	pop	{r4, pc}

08008888 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8008888:	b510      	push	{r4, lr}
 800888a:	4b03      	ldr	r3, [pc, #12]	; (8008898 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 800888c:	6003      	str	r3, [r0, #0]
 800888e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008890:	f00e fb94 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008894:	4620      	mov	r0, r4
 8008896:	bd10      	pop	{r4, pc}
 8008898:	08030c34 	.word	0x08030c34

0800889c <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800889c:	b507      	push	{r0, r1, r2, lr}
 800889e:	4b07      	ldr	r3, [pc, #28]	; (80088bc <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80088a0:	6003      	str	r3, [r0, #0]
 80088a2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80088a4:	f00e fb8a 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80088a8:	9801      	ldr	r0, [sp, #4]
 80088aa:	f241 11c4 	movw	r1, #4548	; 0x11c4
 80088ae:	f024 f970 	bl	802cb92 <_ZdlPvj>
 80088b2:	9801      	ldr	r0, [sp, #4]
 80088b4:	b003      	add	sp, #12
 80088b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80088ba:	bf00      	nop
 80088bc:	08030c34 	.word	0x08030c34

080088c0 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80088c0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 80088c2:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 80088c6:	4299      	cmp	r1, r3
{
 80088c8:	4604      	mov	r4, r0
 80088ca:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 80088cc:	d103      	bne.n	80088d6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80088ce:	f010 f877 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80088d2:	f7fc fe79 	bl	80055c8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 80088d6:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80088da:	429d      	cmp	r5, r3
 80088dc:	d103      	bne.n	80088e6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80088de:	f010 f86f 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80088e2:	f7fc fe91 	bl	8005608 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 80088e6:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 80088ea:	42a5      	cmp	r5, r4
 80088ec:	d105      	bne.n	80088fa <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80088ee:	f010 f867 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80088f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80088f6:	f7fc be97 	b.w	8005628 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80088fa:	bd38      	pop	{r3, r4, r5, pc}

080088fc <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80088fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008900:	ed2d 8b06 	vpush	{d8-d10}
 8008904:	4604      	mov	r4, r0
 8008906:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8008908:	46a2      	mov	sl, r4
 800890a:	2500      	movs	r5, #0
 800890c:	f011 fcd8 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 8008910:	4b71      	ldr	r3, [pc, #452]	; (8008ad8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
 8008912:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008914:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8008918:	2226      	movs	r2, #38	; 0x26
 800891a:	4629      	mov	r1, r5
 800891c:	4650      	mov	r0, sl
 800891e:	f025 fa24 	bl	802dd6a <memset>
 8008922:	4650      	mov	r0, sl
 8008924:	f7fa feda 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8008928:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 800892c:	26ff      	movs	r6, #255	; 0xff
 800892e:	4b6b      	ldr	r3, [pc, #428]	; (8008adc <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8008930:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008932:	2226      	movs	r2, #38	; 0x26
 8008934:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008938:	4629      	mov	r1, r5
 800893a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800893e:	4648      	mov	r0, r9
 8008940:	66a5      	str	r5, [r4, #104]	; 0x68
 8008942:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008946:	f025 fa10 	bl	802dd6a <memset>
 800894a:	4648      	mov	r0, r9
 800894c:	f7fa fec6 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8008950:	4b63      	ldr	r3, [pc, #396]	; (8008ae0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>)
 8008952:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008954:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008958:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800895c:	a90a      	add	r1, sp, #40	; 0x28
 800895e:	4648      	mov	r0, r9
 8008960:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008964:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008968:	f00d fb2b 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800896c:	4640      	mov	r0, r8
 800896e:	f7fa ff19 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008972:	4b5c      	ldr	r3, [pc, #368]	; (8008ae4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e8>)
 8008974:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008978:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800897c:	4618      	mov	r0, r3
 800897e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8008982:	ee09 3a90 	vmov	s19, r3
 8008986:	f00d fc53 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800898a:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800898e:	4618      	mov	r0, r3
 8008990:	ee0a 3a10 	vmov	s20, r3
 8008994:	f00d fc4c 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008998:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 800899c:	4618      	mov	r0, r3
 800899e:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 80089a2:	ee0a 3a90 	vmov	s21, r3
 80089a6:	f00d fc43 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80089aa:	4638      	mov	r0, r7
 80089ac:	f00b fffc 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80089b0:	4e4d      	ldr	r6, [pc, #308]	; (8008ae8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1ec>)
 80089b2:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80089b6:	4618      	mov	r0, r3
 80089b8:	9302      	str	r3, [sp, #8]
 80089ba:	f7fa fc91 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80089be:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80089c2:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 80089c6:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80089ca:	4618      	mov	r0, r3
 80089cc:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 80089d0:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80089d4:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 80089d8:	ee08 3a10 	vmov	s16, r3
 80089dc:	f7fa fee2 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80089e0:	4658      	mov	r0, fp
 80089e2:	f00b ffe1 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 80089e6:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80089ea:	4618      	mov	r0, r3
 80089ec:	9303      	str	r3, [sp, #12]
 80089ee:	f7fa fc77 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80089f2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80089f6:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80089fa:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 80089fe:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8008a02:	4618      	mov	r0, r3
 8008a04:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8008a08:	ee08 3a90 	vmov	s17, r3
 8008a0c:	f7fa feca 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008a10:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8008a14:	4618      	mov	r0, r3
 8008a16:	ee09 3a10 	vmov	s18, r3
 8008a1a:	f7fa fec3 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008a1e:	4a33      	ldr	r2, [pc, #204]	; (8008aec <_ZN26Measurement_SingleViewBaseC1Ev+0x1f0>)
 8008a20:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008a24:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8008a28:	4a31      	ldr	r2, [pc, #196]	; (8008af0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008a2a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008a2e:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8008a32:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8008a36:	f00e fab7 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008a3a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008a3e:	462a      	mov	r2, r5
 8008a40:	4650      	mov	r0, sl
 8008a42:	9300      	str	r3, [sp, #0]
 8008a44:	4629      	mov	r1, r5
 8008a46:	23f0      	movs	r3, #240	; 0xf0
 8008a48:	f7fa fe23 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008a4c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008a4e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008a52:	66a3      	str	r3, [r4, #104]	; 0x68
 8008a54:	4651      	mov	r1, sl
 8008a56:	4630      	mov	r0, r6
 8008a58:	f009 feda 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008a5c:	462a      	mov	r2, r5
 8008a5e:	4648      	mov	r0, r9
 8008a60:	4629      	mov	r1, r5
 8008a62:	f7fa fe09 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8008a66:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008a68:	4648      	mov	r0, r9
 8008a6a:	a90a      	add	r1, sp, #40	; 0x28
 8008a6c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a70:	f00d faa7 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008a74:	4649      	mov	r1, r9
 8008a76:	4630      	mov	r0, r6
 8008a78:	f009 feca 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8008a7c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008a80:	2156      	movs	r1, #86	; 0x56
 8008a82:	4640      	mov	r0, r8
 8008a84:	f7fa fdf8 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8008a88:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008a8c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008a90:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8008a94:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8008a98:	4648      	mov	r0, r9
 8008a9a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008a9e:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008aa2:	4641      	mov	r1, r8
 8008aa4:	4798      	blx	r3
 8008aa6:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8008aaa:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008aae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008ab2:	4b10      	ldr	r3, [pc, #64]	; (8008af4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f8>)
 8008ab4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8008ab6:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8008aba:	b92b      	cbnz	r3, 8008ac8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>
 8008abc:	4b0e      	ldr	r3, [pc, #56]	; (8008af8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1fc>)
 8008abe:	4a0f      	ldr	r2, [pc, #60]	; (8008afc <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008ac0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008ac2:	480f      	ldr	r0, [pc, #60]	; (8008b00 <_ZN26Measurement_SingleViewBaseC1Ev+0x204>)
 8008ac4:	f024 ff4c 	bl	802d960 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008ac8:	4b0e      	ldr	r3, [pc, #56]	; (8008b04 <_ZN26Measurement_SingleViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008aca:	881b      	ldrh	r3, [r3, #0]
 8008acc:	2b42      	cmp	r3, #66	; 0x42
 8008ace:	d81d      	bhi.n	8008b0c <_ZN26Measurement_SingleViewBaseC1Ev+0x210>
 8008ad0:	4b0d      	ldr	r3, [pc, #52]	; (8008b08 <_ZN26Measurement_SingleViewBaseC1Ev+0x20c>)
 8008ad2:	4a0a      	ldr	r2, [pc, #40]	; (8008afc <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008ad4:	2161      	movs	r1, #97	; 0x61
 8008ad6:	e7f4      	b.n	8008ac2 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c6>
 8008ad8:	08030c34 	.word	0x08030c34
 8008adc:	08031a70 	.word	0x08031a70
 8008ae0:	08031cbc 	.word	0x08031cbc
 8008ae4:	0802f5b4 	.word	0x0802f5b4
 8008ae8:	080317a4 	.word	0x080317a4
 8008aec:	08030c1c 	.word	0x08030c1c
 8008af0:	080088c1 	.word	0x080088c1
 8008af4:	20013894 	.word	0x20013894
 8008af8:	0802f364 	.word	0x0802f364
 8008afc:	0802f469 	.word	0x0802f469
 8008b00:	0802f3e1 	.word	0x0802f3e1
 8008b04:	20013898 	.word	0x20013898
 8008b08:	0802f428 	.word	0x0802f428
        return texts->getText(typedTextId);
 8008b0c:	4bad      	ldr	r3, [pc, #692]	; (8008dc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4c8>)
 8008b0e:	2142      	movs	r1, #66	; 0x42
 8008b10:	6818      	ldr	r0, [r3, #0]
 8008b12:	f001 fdc5 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8008b16:	4aac      	ldr	r2, [pc, #688]	; (8008dc8 <_ZN26Measurement_SingleViewBaseC1Ev+0x4cc>)
 8008b18:	4603      	mov	r3, r0
 8008b1a:	2104      	movs	r1, #4
 8008b1c:	4648      	mov	r0, r9
 8008b1e:	f013 f8fd 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8008b22:	4640      	mov	r0, r8
        wc1 = value;
 8008b24:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8008b28:	f00c fc7a 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008b2c:	4ba7      	ldr	r3, [pc, #668]	; (8008dcc <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008b2e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8008b30:	4640      	mov	r0, r8
 8008b32:	2343      	movs	r3, #67	; 0x43
 8008b34:	a90a      	add	r1, sp, #40	; 0x28
 8008b36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008b3a:	f00c fc91 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008b3e:	4641      	mov	r1, r8
 8008b40:	4630      	mov	r0, r6
 8008b42:	f009 fe65 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8008b46:	ee19 0a90 	vmov	r0, s19
 8008b4a:	22f0      	movs	r2, #240	; 0xf0
 8008b4c:	2121      	movs	r1, #33	; 0x21
 8008b4e:	f7fa fd93 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8008b52:	f04f 0802 	mov.w	r8, #2
 8008b56:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b58:	a909      	add	r1, sp, #36	; 0x24
 8008b5a:	ee19 0a90 	vmov	r0, s19
 8008b5e:	aa0a      	add	r2, sp, #40	; 0x28
 8008b60:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008b64:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8008b68:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b6c:	f00d f833 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008b70:	2263      	movs	r2, #99	; 0x63
 8008b72:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8008b76:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8008b7a:	ee19 0a90 	vmov	r0, s19
 8008b7e:	f7fa fdbf 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008b82:	ee19 1a90 	vmov	r1, s19
 8008b86:	4630      	mov	r0, r6
        colorPressed = col;
 8008b88:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8008b8c:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 8008b90:	f009 fe3e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 8008b94:	ee1a 0a10 	vmov	r0, s20
 8008b98:	22aa      	movs	r2, #170	; 0xaa
 8008b9a:	2121      	movs	r1, #33	; 0x21
 8008b9c:	f7fa fd6c 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8008ba0:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008ba2:	a909      	add	r1, sp, #36	; 0x24
 8008ba4:	ee1a 0a10 	vmov	r0, s20
 8008ba8:	aa0a      	add	r2, sp, #40	; 0x28
 8008baa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008bae:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008bb2:	f00d f810 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008bb6:	2262      	movs	r2, #98	; 0x62
 8008bb8:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8008bbc:	ee1a 0a10 	vmov	r0, s20
 8008bc0:	f7fa fd9e 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008bc4:	ee1a 1a10 	vmov	r1, s20
 8008bc8:	4630      	mov	r0, r6
        colorPressed = col;
 8008bca:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8008bce:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8008bd2:	f009 fe1d 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 8008bd6:	ee1a 0a90 	vmov	r0, s21
 8008bda:	2264      	movs	r2, #100	; 0x64
 8008bdc:	2121      	movs	r1, #33	; 0x21
 8008bde:	f7fa fd4b 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008be2:	aa0a      	add	r2, sp, #40	; 0x28
 8008be4:	2303      	movs	r3, #3
 8008be6:	a909      	add	r1, sp, #36	; 0x24
 8008be8:	ee1a 0a90 	vmov	r0, s21
 8008bec:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008bf0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008bf4:	f00c ffef 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008bf8:	2361      	movs	r3, #97	; 0x61
 8008bfa:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8008bfe:	ee1a 0a90 	vmov	r0, s21
 8008c02:	f7fa fd7d 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008c06:	ee1a 1a90 	vmov	r1, s21
 8008c0a:	4630      	mov	r0, r6
        colorPressed = col;
 8008c0c:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8008c10:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8008c14:	f009 fdfc 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008c18:	230a      	movs	r3, #10
 8008c1a:	9300      	str	r3, [sp, #0]
 8008c1c:	224b      	movs	r2, #75	; 0x4b
 8008c1e:	23f0      	movs	r3, #240	; 0xf0
 8008c20:	4629      	mov	r1, r5
 8008c22:	4638      	mov	r0, r7
 8008c24:	f7fa fd35 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008c28:	9b02      	ldr	r3, [sp, #8]
 8008c2a:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008c2e:	22a0      	movs	r2, #160	; 0xa0
 8008c30:	4611      	mov	r1, r2
 8008c32:	4638      	mov	r0, r7
 8008c34:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008c38:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8008c3c:	f00b ffca 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008c40:	22a0      	movs	r2, #160	; 0xa0
 8008c42:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008c46:	4638      	mov	r0, r7
 8008c48:	f00b ffcf 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008c4c:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8008c50:	2b20      	cmp	r3, #32
 8008c52:	d005      	beq.n	8008c60 <_ZN26Measurement_SingleViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8008c54:	2320      	movs	r3, #32
 8008c56:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8008c5a:	4638      	mov	r0, r7
 8008c5c:	f00b fec4 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008c60:	4638      	mov	r0, r7
 8008c62:	2101      	movs	r1, #1
 8008c64:	f00b ffcc 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008c68:	4639      	mov	r1, r7
 8008c6a:	4630      	mov	r0, r6
 8008c6c:	f009 fdd0 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008c70:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(41, 60);
 8008c74:	223c      	movs	r2, #60	; 0x3c
 8008c76:	ee18 0a10 	vmov	r0, s16
 8008c7a:	2129      	movs	r1, #41	; 0x29
        linespace = space;
 8008c7c:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8008c80:	ad04      	add	r5, sp, #16
 8008c82:	f7fa fcf9 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8008c86:	ee18 1a10 	vmov	r1, s16
 8008c8a:	4628      	mov	r0, r5
        color = newColor;
 8008c8c:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008c90:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008c94:	f00c f94a 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008c98:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008c9c:	ee18 3a10 	vmov	r3, s16
 8008ca0:	333c      	adds	r3, #60	; 0x3c
 8008ca2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008ca6:	4b49      	ldr	r3, [pc, #292]	; (8008dcc <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008ca8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8008caa:	ee18 0a10 	vmov	r0, s16
 8008cae:	2352      	movs	r3, #82	; 0x52
 8008cb0:	a90a      	add	r1, sp, #40	; 0x28
 8008cb2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008cb6:	f00c fbd3 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008cba:	ee18 1a10 	vmov	r1, s16
 8008cbe:	4630      	mov	r0, r6
 8008cc0:	f009 fda6 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008cc4:	230a      	movs	r3, #10
 8008cc6:	9300      	str	r3, [sp, #0]
 8008cc8:	2232      	movs	r2, #50	; 0x32
 8008cca:	23f0      	movs	r3, #240	; 0xf0
 8008ccc:	4641      	mov	r1, r8
 8008cce:	4658      	mov	r0, fp
 8008cd0:	f7fa fcdf 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008cd4:	9b03      	ldr	r3, [sp, #12]
 8008cd6:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008cda:	22a0      	movs	r2, #160	; 0xa0
 8008cdc:	4611      	mov	r1, r2
 8008cde:	4658      	mov	r0, fp
 8008ce0:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8008ce4:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8008ce8:	f00b ff74 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008cec:	22a0      	movs	r2, #160	; 0xa0
 8008cee:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008cf2:	4658      	mov	r0, fp
 8008cf4:	f00b ff79 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008cf8:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8008cfc:	2b20      	cmp	r3, #32
 8008cfe:	d005      	beq.n	8008d0c <_ZN26Measurement_SingleViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8008d00:	2320      	movs	r3, #32
 8008d02:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8008d06:	4658      	mov	r0, fp
 8008d08:	f00b fe6e 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008d0c:	4658      	mov	r0, fp
 8008d0e:	2101      	movs	r1, #1
 8008d10:	f00b ff76 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008d14:	4659      	mov	r1, fp
 8008d16:	4630      	mov	r0, r6
 8008d18:	f009 fd7a 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008d1c:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 8008d20:	ee18 0a90 	vmov	r0, s17
 8008d24:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008d26:	2700      	movs	r7, #0
 8008d28:	2145      	movs	r1, #69	; 0x45
 8008d2a:	f7fa fca5 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008d2e:	ee18 1a90 	vmov	r1, s17
 8008d32:	4628      	mov	r0, r5
        color = newColor;
 8008d34:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8008d38:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8008d3c:	f00c f8f6 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008d40:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008d44:	ee18 3a90 	vmov	r3, s17
 8008d48:	333c      	adds	r3, #60	; 0x3c
 8008d4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008d4e:	4b1f      	ldr	r3, [pc, #124]	; (8008dcc <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008d50:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8008d52:	ee18 0a90 	vmov	r0, s17
 8008d56:	2311      	movs	r3, #17
 8008d58:	a90a      	add	r1, sp, #40	; 0x28
 8008d5a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008d5e:	f00c fb7f 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008d62:	ee18 1a90 	vmov	r1, s17
 8008d66:	4630      	mov	r0, r6
 8008d68:	f009 fd52 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008d6c:	ee19 0a10 	vmov	r0, s18
 8008d70:	220c      	movs	r2, #12
 8008d72:	2136      	movs	r1, #54	; 0x36
 8008d74:	f7fa fc80 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8008d78:	ee19 1a10 	vmov	r1, s18
 8008d7c:	4628      	mov	r0, r5
        color = newColor;
 8008d7e:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8008d82:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8008d86:	f00c f8d1 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008d8a:	ee19 2a10 	vmov	r2, s18
 8008d8e:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8008d92:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008d96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008d9a:	4b0c      	ldr	r3, [pc, #48]	; (8008dcc <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008d9c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8008d9e:	ee19 0a10 	vmov	r0, s18
 8008da2:	2310      	movs	r3, #16
 8008da4:	a90a      	add	r1, sp, #40	; 0x28
 8008da6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008daa:	f00c fb59 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008dae:	4630      	mov	r0, r6
 8008db0:	ee19 1a10 	vmov	r1, s18
 8008db4:	f009 fd2c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008db8:	4620      	mov	r0, r4
 8008dba:	b00d      	add	sp, #52	; 0x34
 8008dbc:	ecbd 8b06 	vpop	{d8-d10}
 8008dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008dc4:	200138a0 	.word	0x200138a0
 8008dc8:	0802f4a1 	.word	0x0802f4a1
 8008dcc:	0802f514 	.word	0x0802f514

08008dd0 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8008dd0:	4770      	bx	lr

08008dd2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8008dd2:	4770      	bx	lr

08008dd4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008dd4:	4770      	bx	lr

08008dd6 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008dd6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008dd8:	68c2      	ldr	r2, [r0, #12]
 8008dda:	6844      	ldr	r4, [r0, #4]
 8008ddc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008dde:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008de0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008de4:	07d2      	lsls	r2, r2, #31
 8008de6:	bf48      	it	mi
 8008de8:	5962      	ldrmi	r2, [r4, r5]
 8008dea:	689b      	ldr	r3, [r3, #8]
    }
 8008dec:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008dee:	bf48      	it	mi
 8008df0:	58d3      	ldrmi	r3, [r2, r3]
 8008df2:	4718      	bx	r3

08008df4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008df4:	6843      	ldr	r3, [r0, #4]
 8008df6:	b12b      	cbz	r3, 8008e04 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008df8:	6883      	ldr	r3, [r0, #8]
 8008dfa:	b92b      	cbnz	r3, 8008e08 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008dfc:	68c0      	ldr	r0, [r0, #12]
 8008dfe:	f000 0001 	and.w	r0, r0, #1
 8008e02:	4770      	bx	lr
 8008e04:	4618      	mov	r0, r3
 8008e06:	4770      	bx	lr
 8008e08:	2001      	movs	r0, #1
    }
 8008e0a:	4770      	bx	lr

08008e0c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008e0c:	b510      	push	{r4, lr}
 8008e0e:	2110      	movs	r1, #16
 8008e10:	4604      	mov	r4, r0
 8008e12:	f023 febe 	bl	802cb92 <_ZdlPvj>
 8008e16:	4620      	mov	r0, r4
 8008e18:	bd10      	pop	{r4, pc}
	...

08008e1c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008e1c:	b510      	push	{r4, lr}
 8008e1e:	4b03      	ldr	r3, [pc, #12]	; (8008e2c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8008e20:	6003      	str	r3, [r0, #0]
 8008e22:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008e24:	f00e f8ca 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008e28:	4620      	mov	r0, r4
 8008e2a:	bd10      	pop	{r4, pc}
 8008e2c:	08030c80 	.word	0x08030c80

08008e30 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008e30:	b507      	push	{r0, r1, r2, lr}
 8008e32:	4b07      	ldr	r3, [pc, #28]	; (8008e50 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8008e34:	6003      	str	r3, [r0, #0]
 8008e36:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008e38:	f00e f8c0 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008e3c:	9801      	ldr	r0, [sp, #4]
 8008e3e:	f241 417c 	movw	r1, #5244	; 0x147c
 8008e42:	f023 fea6 	bl	802cb92 <_ZdlPvj>
 8008e46:	9801      	ldr	r0, [sp, #4]
 8008e48:	b003      	add	sp, #12
 8008e4a:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e4e:	bf00      	nop
 8008e50:	08030c80 	.word	0x08030c80

08008e54 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8008e54:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8008e56:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8008e5a:	f8d4 2478 	ldr.w	r2, [r4, #1144]	; 0x478
 8008e5e:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008e60:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8008e62:	f8c4 2478 	str.w	r2, [r4, #1144]	; 0x478
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008e66:	d105      	bne.n	8008e74 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8008e68:	6803      	ldr	r3, [r0, #0]
 8008e6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e6c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8008e6e:	2300      	movs	r3, #0
 8008e70:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
    }
}
 8008e74:	bd10      	pop	{r4, pc}

08008e76 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel_return)
 8008e76:	3098      	adds	r0, #152	; 0x98
 8008e78:	4288      	cmp	r0, r1
{
 8008e7a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 8008e7c:	d105      	bne.n	8008e8a <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008e7e:	f00f fd9f 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008e82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008e86:	f7fc bbaf 	b.w	80055e8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008e8a:	bd08      	pop	{r3, pc}

08008e8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8008e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e90:	ed2d 8b0a 	vpush	{d8-d12}
 8008e94:	4604      	mov	r4, r0
 8008e96:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8008e98:	46a0      	mov	r8, r4
 8008e9a:	2500      	movs	r5, #0
 8008e9c:	f011 fa10 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 8008ea0:	4bce      	ldr	r3, [pc, #824]	; (80091dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x350>)
 8008ea2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008ea4:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008ea8:	2226      	movs	r2, #38	; 0x26
 8008eaa:	4629      	mov	r1, r5
 8008eac:	4640      	mov	r0, r8
 8008eae:	f024 ff5c 	bl	802dd6a <memset>
 8008eb2:	4640      	mov	r0, r8
 8008eb4:	f7fa fc12 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8008eb8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008ebc:	26ff      	movs	r6, #255	; 0xff
 8008ebe:	4bc8      	ldr	r3, [pc, #800]	; (80091e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x354>)
 8008ec0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008ec2:	2226      	movs	r2, #38	; 0x26
 8008ec4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008ec8:	4629      	mov	r1, r5
 8008eca:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008ece:	4638      	mov	r0, r7
 8008ed0:	66a5      	str	r5, [r4, #104]	; 0x68
 8008ed2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008ed6:	f024 ff48 	bl	802dd6a <memset>
 8008eda:	4638      	mov	r0, r7
 8008edc:	f7fa fbfe 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8008ee0:	4bc0      	ldr	r3, [pc, #768]	; (80091e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x358>)
 8008ee2:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008ee4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008ee8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008eec:	a90a      	add	r1, sp, #40	; 0x28
 8008eee:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8008ef2:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8008ef4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008ef8:	f00d f863 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008efc:	4658      	mov	r0, fp
 8008efe:	f00d f997 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008f02:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8008f06:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8008f0a:	4618      	mov	r0, r3
 8008f0c:	ee0a 3a90 	vmov	s21, r3
 8008f10:	f7fa fc48 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008f14:	4648      	mov	r0, r9
 8008f16:	f7fa fc45 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008f1a:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8008f1e:	4618      	mov	r0, r3
 8008f20:	ee0b 3a10 	vmov	s22, r3
 8008f24:	f7fa fc3e 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008f28:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8008f2c:	4618      	mov	r0, r3
 8008f2e:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f32:	4ead      	ldr	r6, [pc, #692]	; (80091e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x35c>)
        : TextArea()
 8008f34:	f7fa fc36 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008f38:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8008f3c:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8008f40:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f42:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8008f46:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8008f4a:	f7fa fc2b 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008f4e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8008f52:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f54:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8008f58:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8008f5c:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8008f60:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8008f64:	f7fa fc1e 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008f68:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8008f6c:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008f70:	4650      	mov	r0, sl
 8008f72:	f00c fce9 	bl	8015948 <_ZN8touchgfx5GaugeC1Ev>
 8008f76:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8008f7a:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008f7c:	4e9b      	ldr	r6, [pc, #620]	; (80091ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x360>)
 8008f7e:	ee08 3a10 	vmov	s16, r3
 8008f82:	f00b fd11 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8008f86:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8008f8a:	4618      	mov	r0, r3
 8008f8c:	9302      	str	r3, [sp, #8]
 8008f8e:	f7fa f9a7 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008f92:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008f96:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8008f9a:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8008f9e:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8008fa2:	4618      	mov	r0, r3
 8008fa4:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008fa8:	ee09 3a10 	vmov	s18, r3
 8008fac:	f7fa fbfa 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008fb0:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8008fb4:	4618      	mov	r0, r3
 8008fb6:	ee08 3a90 	vmov	s17, r3
 8008fba:	f00b fcf5 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8008fbe:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8008fc2:	4618      	mov	r0, r3
 8008fc4:	9303      	str	r3, [sp, #12]
 8008fc6:	f7fa f98b 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008fca:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008fce:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8008fd2:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8008fd6:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8008fda:	4618      	mov	r0, r3
 8008fdc:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008fe0:	ee09 3a90 	vmov	s19, r3
 8008fe4:	f7fa fbde 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008fe8:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8008fec:	4618      	mov	r0, r3
 8008fee:	ee0a 3a10 	vmov	s20, r3
 8008ff2:	f7fa fbd7 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008ff6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008ffa:	4a7d      	ldr	r2, [pc, #500]	; (80091f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x364>)
 8008ffc:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8009000:	4a7c      	ldr	r2, [pc, #496]	; (80091f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x368>)
 8009002:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8009006:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 800900a:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
 800900e:	f8c3 5478 	str.w	r5, [r3, #1144]	; 0x478
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8009012:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8009016:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 800901a:	f00d ffc5 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800901e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8009022:	462a      	mov	r2, r5
 8009024:	4640      	mov	r0, r8
 8009026:	9300      	str	r3, [sp, #0]
 8009028:	4629      	mov	r1, r5
 800902a:	23f0      	movs	r3, #240	; 0xf0
 800902c:	f7fa fb31 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009030:	1d26      	adds	r6, r4, #4
        color = newColor;
 8009032:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009036:	66a3      	str	r3, [r4, #104]	; 0x68
 8009038:	4641      	mov	r1, r8
 800903a:	4630      	mov	r0, r6
 800903c:	f009 fbe8 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009040:	462a      	mov	r2, r5
 8009042:	4638      	mov	r0, r7
 8009044:	4629      	mov	r1, r5
 8009046:	f7fa fb17 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800904a:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800904e:	4638      	mov	r0, r7
 8009050:	a90a      	add	r1, sp, #40	; 0x28
 8009052:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009056:	f00c ffb4 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800905a:	4639      	mov	r1, r7
 800905c:	4630      	mov	r0, r6
 800905e:	f009 fbd7 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 8009062:	4658      	mov	r0, fp
 8009064:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009068:	2121      	movs	r1, #33	; 0x21
 800906a:	f7fa fb05 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800906e:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009070:	aa0a      	add	r2, sp, #40	; 0x28
 8009072:	a909      	add	r1, sp, #36	; 0x24
 8009074:	4658      	mov	r0, fp
 8009076:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800907a:	2302      	movs	r3, #2
 800907c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009080:	f00c fda9 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8009084:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 8009086:	4658      	mov	r0, fp
 8009088:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800908c:	f7fa fb38 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 8009090:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8009094:	f04f 38ff 	mov.w	r8, #4294967295
 8009098:	3308      	adds	r3, #8
 800909a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800909e:	4659      	mov	r1, fp
 80090a0:	4630      	mov	r0, r6
        colorPressed = col;
 80090a2:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 80090a6:	af04      	add	r7, sp, #16
 80090a8:	f009 fbb2 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 80090ac:	22c2      	movs	r2, #194	; 0xc2
 80090ae:	ee1a 0a90 	vmov	r0, s21
 80090b2:	4629      	mov	r1, r5
 80090b4:	f7fa fae0 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80090b8:	ee1a 1a90 	vmov	r1, s21
 80090bc:	4638      	mov	r0, r7
        color = newColor;
 80090be:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 80090c2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80090c6:	f00b ff31 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80090ca:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80090ce:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80090d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80090d6:	4b48      	ldr	r3, [pc, #288]	; (80091f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 80090d8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80090da:	ee1a 0a90 	vmov	r0, s21
 80090de:	2338      	movs	r3, #56	; 0x38
 80090e0:	a90a      	add	r1, sp, #40	; 0x28
 80090e2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80090e6:	f00c f9bb 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80090ea:	ee1a 1a90 	vmov	r1, s21
 80090ee:	4630      	mov	r0, r6
 80090f0:	f009 fb8e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 80090f4:	22c2      	movs	r2, #194	; 0xc2
 80090f6:	4648      	mov	r0, r9
 80090f8:	21d9      	movs	r1, #217	; 0xd9
 80090fa:	f7fa fabd 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80090fe:	4649      	mov	r1, r9
 8009100:	4638      	mov	r0, r7
        color = newColor;
 8009102:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8009106:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 800910a:	f00b ff0f 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800910e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009112:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8009116:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800911a:	4b37      	ldr	r3, [pc, #220]	; (80091f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 800911c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 800911e:	4648      	mov	r0, r9
 8009120:	2339      	movs	r3, #57	; 0x39
 8009122:	a90a      	add	r1, sp, #40	; 0x28
 8009124:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009128:	f00c f99a 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800912c:	4649      	mov	r1, r9
 800912e:	4630      	mov	r0, r6
 8009130:	f009 fb6e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8009134:	2255      	movs	r2, #85	; 0x55
 8009136:	ee1b 0a10 	vmov	r0, s22
 800913a:	2171      	movs	r1, #113	; 0x71
 800913c:	f7fa fa9c 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8009140:	ee1b 1a10 	vmov	r1, s22
 8009144:	4638      	mov	r0, r7
        color = newColor;
 8009146:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 800914a:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 800914e:	f00b feed 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009152:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009156:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800915a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800915e:	4b26      	ldr	r3, [pc, #152]	; (80091f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009160:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8009162:	ee1b 0a10 	vmov	r0, s22
 8009166:	2337      	movs	r3, #55	; 0x37
 8009168:	a90a      	add	r1, sp, #40	; 0x28
 800916a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800916e:	f00c f977 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009172:	ee1b 1a10 	vmov	r1, s22
 8009176:	4630      	mov	r0, r6
 8009178:	f009 fb4a 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 239, 240, 15);
 800917c:	230f      	movs	r3, #15
 800917e:	22ef      	movs	r2, #239	; 0xef
 8009180:	ee1b 0a90 	vmov	r0, s23
 8009184:	9300      	str	r3, [sp, #0]
 8009186:	4629      	mov	r1, r5
 8009188:	23f0      	movs	r3, #240	; 0xf0
 800918a:	f7fa fa82 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 800918e:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8009192:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8009196:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800919a:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 800919e:	ee1b 1a90 	vmov	r1, s23
 80091a2:	4638      	mov	r0, r7
 80091a4:	4798      	blx	r3
 80091a6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80091aa:	f8df b064 	ldr.w	fp, [pc, #100]	; 8009210 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x384>
 80091ae:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80091b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80091b6:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFLK).getText());
 80091ba:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 80091be:	b92b      	cbnz	r3, 80091cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x340>
 80091c0:	4b0e      	ldr	r3, [pc, #56]	; (80091fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x370>)
 80091c2:	4a0f      	ldr	r2, [pc, #60]	; (8009200 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 80091c4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80091c6:	480f      	ldr	r0, [pc, #60]	; (8009204 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x378>)
 80091c8:	f024 fbca 	bl	802d960 <__assert_func>
 80091cc:	4b0e      	ldr	r3, [pc, #56]	; (8009208 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x37c>)
 80091ce:	881b      	ldrh	r3, [r3, #0]
 80091d0:	2b1b      	cmp	r3, #27
 80091d2:	d81f      	bhi.n	8009214 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x388>
 80091d4:	4b0d      	ldr	r3, [pc, #52]	; (800920c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x380>)
 80091d6:	4a0a      	ldr	r2, [pc, #40]	; (8009200 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 80091d8:	2161      	movs	r1, #97	; 0x61
 80091da:	e7f4      	b.n	80091c6 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x33a>
 80091dc:	08030c80 	.word	0x08030c80
 80091e0:	08031a70 	.word	0x08031a70
 80091e4:	08031cbc 	.word	0x08031cbc
 80091e8:	0802f5b4 	.word	0x0802f5b4
 80091ec:	080317a4 	.word	0x080317a4
 80091f0:	08030c68 	.word	0x08030c68
 80091f4:	08008e77 	.word	0x08008e77
 80091f8:	0802f514 	.word	0x0802f514
 80091fc:	0802f364 	.word	0x0802f364
 8009200:	0802f469 	.word	0x0802f469
 8009204:	0802f3e1 	.word	0x0802f3e1
 8009208:	20013898 	.word	0x20013898
 800920c:	0802f428 	.word	0x0802f428
 8009210:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 8009214:	4bdd      	ldr	r3, [pc, #884]	; (800958c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 8009216:	211b      	movs	r1, #27
 8009218:	6818      	ldr	r0, [r3, #0]
 800921a:	f001 fa41 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 800921e:	4adc      	ldr	r2, [pc, #880]	; (8009590 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009220:	4603      	mov	r3, r0
 8009222:	210a      	movs	r1, #10
 8009224:	4648      	mov	r0, r9
 8009226:	f012 fd79 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800922a:	f04f 011c 	mov.w	r1, #28
 800922e:	4ad9      	ldr	r2, [pc, #868]	; (8009594 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
        wc1 = value;
 8009230:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G8ED));
 8009234:	ee1b 0a90 	vmov	r0, s23
 8009238:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800923c:	a90a      	add	r1, sp, #40	; 0x28
 800923e:	920a      	str	r2, [sp, #40]	; 0x28
 8009240:	f00c f90e 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009244:	ee1b 1a90 	vmov	r1, s23
 8009248:	4630      	mov	r0, r6
 800924a:	f009 fae1 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 224, 240, 15);
 800924e:	210f      	movs	r1, #15
 8009250:	22e0      	movs	r2, #224	; 0xe0
 8009252:	ee1c 0a10 	vmov	r0, s24
 8009256:	9100      	str	r1, [sp, #0]
 8009258:	23f0      	movs	r3, #240	; 0xf0
 800925a:	4629      	mov	r1, r5
 800925c:	f7fa fa19 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009260:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8009264:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009268:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800926c:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8009270:	ee1c 1a10 	vmov	r1, s24
 8009274:	4638      	mov	r0, r7
 8009276:	4798      	blx	r3
 8009278:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800927c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009280:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009284:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8009288:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 800928c:	2b00      	cmp	r3, #0
 800928e:	d097      	beq.n	80091c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009290:	49c1      	ldr	r1, [pc, #772]	; (8009598 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 8009292:	880b      	ldrh	r3, [r1, #0]
 8009294:	2b32      	cmp	r3, #50	; 0x32
 8009296:	d99d      	bls.n	80091d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 8009298:	4bbc      	ldr	r3, [pc, #752]	; (800958c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 800929a:	2132      	movs	r1, #50	; 0x32
 800929c:	6818      	ldr	r0, [r3, #0]
 800929e:	f001 f9ff 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80092a2:	4abb      	ldr	r2, [pc, #748]	; (8009590 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 80092a4:	4603      	mov	r3, r0
 80092a6:	210a      	movs	r1, #10
 80092a8:	4648      	mov	r0, r9
 80092aa:	f012 fd37 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80092ae:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 80092b0:	4ab8      	ldr	r2, [pc, #736]	; (8009594 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 80092b2:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 80092b6:	4601      	mov	r1, r0
 80092b8:	f04f 0935 	mov.w	r9, #53	; 0x35
 80092bc:	ee1c 0a10 	vmov	r0, s24
 80092c0:	920a      	str	r2, [sp, #40]	; 0x28
 80092c2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80092c6:	f00c f8cb 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80092ca:	ee1c 1a10 	vmov	r1, s24
 80092ce:	4630      	mov	r0, r6
 80092d0:	f009 fa9e 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 209, 240, 15);
 80092d4:	200f      	movs	r0, #15
 80092d6:	22d1      	movs	r2, #209	; 0xd1
 80092d8:	9000      	str	r0, [sp, #0]
 80092da:	23f0      	movs	r3, #240	; 0xf0
 80092dc:	ee1c 0a90 	vmov	r0, s25
 80092e0:	4629      	mov	r1, r5
 80092e2:	f7fa f9d6 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 80092e6:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 80092ea:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 80092ee:	4638      	mov	r0, r7
 80092f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80092f4:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 80092f8:	ee1c 1a90 	vmov	r1, s25
 80092fc:	4798      	blx	r3
 80092fe:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009302:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8009306:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800930a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800930e:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8009312:	2b00      	cmp	r3, #0
 8009314:	f43f af54 	beq.w	80091c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009318:	499f      	ldr	r1, [pc, #636]	; (8009598 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 800931a:	880b      	ldrh	r3, [r1, #0]
 800931c:	2b33      	cmp	r3, #51	; 0x33
 800931e:	f67f af59 	bls.w	80091d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 8009322:	4b9a      	ldr	r3, [pc, #616]	; (800958c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 8009324:	2133      	movs	r1, #51	; 0x33
 8009326:	6818      	ldr	r0, [r3, #0]
 8009328:	f001 f9ba 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 800932c:	4a98      	ldr	r2, [pc, #608]	; (8009590 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 800932e:	4603      	mov	r3, r0
 8009330:	210a      	movs	r1, #10
 8009332:	4638      	mov	r0, r7
 8009334:	f012 fcf2 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009338:	4a96      	ldr	r2, [pc, #600]	; (8009594 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 800933a:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 800933e:	2336      	movs	r3, #54	; 0x36
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009340:	ee1c 0a90 	vmov	r0, s25
 8009344:	a90a      	add	r1, sp, #40	; 0x28
 8009346:	920a      	str	r2, [sp, #40]	; 0x28
 8009348:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800934c:	f00c f888 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009350:	ee1c 1a90 	vmov	r1, s25
 8009354:	4630      	mov	r0, r6
 8009356:	f009 fa5b 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800935a:	2304      	movs	r3, #4
    SMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800935c:	a90a      	add	r1, sp, #40	; 0x28
 800935e:	4650      	mov	r0, sl
 8009360:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009364:	f009 f9e6 	bl	8012734 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_Gauge.setPosition(28, 103, 184, 106);
 8009368:	236a      	movs	r3, #106	; 0x6a
 800936a:	9300      	str	r3, [sp, #0]
 800936c:	2267      	movs	r2, #103	; 0x67
 800936e:	23b8      	movs	r3, #184	; 0xb8
 8009370:	211c      	movs	r1, #28
 8009372:	4650      	mov	r0, sl
 8009374:	f7fa f98d 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_Gauge.setCenter(92, 92);
 8009378:	225c      	movs	r2, #92	; 0x5c
 800937a:	4611      	mov	r1, r2
 800937c:	4650      	mov	r0, sl
 800937e:	f00c fb8e 	bl	8015a9e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_Gauge.setStartEndAngle(-90, 90);
 8009382:	225a      	movs	r2, #90	; 0x5a
 8009384:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009388:	4650      	mov	r0, sl
 800938a:	f00c fc0d 	bl	8015ba8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_Gauge.setRange(-90, 90);
 800938e:	462b      	mov	r3, r5
 8009390:	225a      	movs	r2, #90	; 0x5a
 8009392:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009396:	4650      	mov	r0, sl
 8009398:	9500      	str	r5, [sp, #0]
 800939a:	f009 f878 	bl	801248e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_Gauge.setValue(0);
 800939e:	4629      	mov	r1, r5
 80093a0:	4650      	mov	r0, sl
 80093a2:	f00c fbab 	bl	8015afc <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80093a6:	464b      	mov	r3, r9
 80093a8:	2208      	movs	r2, #8
 80093aa:	2105      	movs	r1, #5
 80093ac:	4650      	mov	r0, sl
 80093ae:	f00c fb61 	bl	8015a74 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80093b2:	2101      	movs	r1, #1
 80093b4:	4650      	mov	r0, sl
 80093b6:	f00c faff 	bl	80159b8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80093ba:	2101      	movs	r1, #1
 80093bc:	4650      	mov	r0, sl
 80093be:	f00c fafe 	bl	80159be <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80093c2:	4651      	mov	r1, sl
 80093c4:	4630      	mov	r0, r6
 80093c6:	f009 fa23 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80093ca:	230a      	movs	r3, #10
 80093cc:	ee18 0a10 	vmov	r0, s16
 80093d0:	9300      	str	r3, [sp, #0]
 80093d2:	224b      	movs	r2, #75	; 0x4b
 80093d4:	23f0      	movs	r3, #240	; 0xf0
 80093d6:	4629      	mov	r1, r5
 80093d8:	f7fa f95b 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 80093dc:	9b02      	ldr	r3, [sp, #8]
 80093de:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80093e2:	22a0      	movs	r2, #160	; 0xa0
 80093e4:	4611      	mov	r1, r2
 80093e6:	ee18 0a10 	vmov	r0, s16
 80093ea:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80093ee:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 80093f2:	f00b fbef 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80093f6:	ee18 0a10 	vmov	r0, s16
 80093fa:	22a0      	movs	r2, #160	; 0xa0
 80093fc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009400:	f00b fbf3 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009404:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009408:	2b20      	cmp	r3, #32
 800940a:	d006      	beq.n	800941a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x58e>
        lineWidthQ5 = widthQ5;
 800940c:	2320      	movs	r3, #32
        updateCachedShape();
 800940e:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8009412:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8009416:	f00b fae7 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800941a:	ee18 0a10 	vmov	r0, s16
 800941e:	2101      	movs	r1, #1
 8009420:	f00b fbee 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009424:	ee18 1a10 	vmov	r1, s16
 8009428:	4630      	mov	r0, r6
 800942a:	f009 f9f1 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800942e:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 8009432:	223c      	movs	r2, #60	; 0x3c
 8009434:	ee19 0a10 	vmov	r0, s18
 8009438:	211f      	movs	r1, #31
        linespace = space;
 800943a:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 800943e:	ad04      	add	r5, sp, #16
 8009440:	f7fa f91a 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8009444:	ee19 1a10 	vmov	r1, s18
 8009448:	4628      	mov	r0, r5
        color = newColor;
 800944a:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 800944e:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8009452:	f00b fd6b 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009456:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800945a:	ee19 3a10 	vmov	r3, s18
 800945e:	333c      	adds	r3, #60	; 0x3c
 8009460:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009464:	4f4b      	ldr	r7, [pc, #300]	; (8009594 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 8009466:	970a      	str	r7, [sp, #40]	; 0x28
 8009468:	2351      	movs	r3, #81	; 0x51
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 800946a:	ee19 0a10 	vmov	r0, s18
 800946e:	a90a      	add	r1, sp, #40	; 0x28
 8009470:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009474:	f00b fff4 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009478:	ee19 1a10 	vmov	r1, s18
 800947c:	4630      	mov	r0, r6
 800947e:	f009 f9c7 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8009482:	230a      	movs	r3, #10
 8009484:	ee18 0a90 	vmov	r0, s17
 8009488:	9300      	str	r3, [sp, #0]
 800948a:	2232      	movs	r2, #50	; 0x32
 800948c:	23f0      	movs	r3, #240	; 0xf0
 800948e:	4649      	mov	r1, r9
 8009490:	f7fa f8ff 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009494:	9b03      	ldr	r3, [sp, #12]
 8009496:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800949a:	22a0      	movs	r2, #160	; 0xa0
 800949c:	4611      	mov	r1, r2
 800949e:	ee18 0a90 	vmov	r0, s17
 80094a2:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 80094a6:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 80094aa:	f00b fb93 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80094ae:	ee18 0a90 	vmov	r0, s17
 80094b2:	22a0      	movs	r2, #160	; 0xa0
 80094b4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80094b8:	f00b fb97 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80094bc:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 80094c0:	2b20      	cmp	r3, #32
 80094c2:	d006      	beq.n	80094d2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x646>
        lineWidthQ5 = widthQ5;
 80094c4:	2320      	movs	r3, #32
        updateCachedShape();
 80094c6:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 80094ca:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 80094ce:	f00b fa8b 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80094d2:	ee18 0a90 	vmov	r0, s17
 80094d6:	2101      	movs	r1, #1
 80094d8:	f00b fb92 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80094dc:	ee18 1a90 	vmov	r1, s17
 80094e0:	4630      	mov	r0, r6
 80094e2:	f009 f995 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80094e6:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 80094ea:	ee19 0a90 	vmov	r0, s19
 80094ee:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80094f0:	f04f 0800 	mov.w	r8, #0
 80094f4:	2145      	movs	r1, #69	; 0x45
 80094f6:	f7fa f8bf 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80094fa:	ee19 1a90 	vmov	r1, s19
 80094fe:	4628      	mov	r0, r5
        color = newColor;
 8009500:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8009504:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009508:	f00b fd10 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800950c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009510:	ee19 3a90 	vmov	r3, s19
 8009514:	333c      	adds	r3, #60	; 0x3c
 8009516:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800951a:	2358      	movs	r3, #88	; 0x58
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 800951c:	ee19 0a90 	vmov	r0, s19
 8009520:	a90a      	add	r1, sp, #40	; 0x28
 8009522:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009526:	970a      	str	r7, [sp, #40]	; 0x28
 8009528:	f00b ff9a 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800952c:	ee19 1a90 	vmov	r1, s19
 8009530:	4630      	mov	r0, r6
 8009532:	f009 f96d 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_titel.setXY(54, 12);
 8009536:	ee1a 0a10 	vmov	r0, s20
 800953a:	220c      	movs	r2, #12
 800953c:	2136      	movs	r1, #54	; 0x36
 800953e:	f7fa f89b 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8009542:	ee1a 1a10 	vmov	r1, s20
 8009546:	4628      	mov	r0, r5
        color = newColor;
 8009548:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 800954c:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009550:	f00b fcec 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009554:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009558:	ee1a 3a10 	vmov	r3, s20
 800955c:	333c      	adds	r3, #60	; 0x3c
 800955e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009562:	2357      	movs	r3, #87	; 0x57
    textArea_titel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8009564:	ee1a 0a10 	vmov	r0, s20
 8009568:	a90a      	add	r1, sp, #40	; 0x28
 800956a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800956e:	970a      	str	r7, [sp, #40]	; 0x28
 8009570:	f00b ff76 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009574:	4630      	mov	r0, r6
 8009576:	ee1a 1a10 	vmov	r1, s20
 800957a:	f009 f949 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800957e:	4620      	mov	r0, r4
 8009580:	b00d      	add	sp, #52	; 0x34
 8009582:	ecbd 8b0a 	vpop	{d8-d12}
 8009586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800958a:	bf00      	nop
 800958c:	200138a0 	.word	0x200138a0
 8009590:	0802f4a1 	.word	0x0802f4a1
 8009594:	0802f514 	.word	0x0802f514
 8009598:	20013898 	.word	0x20013898

0800959c <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 800959c:	4770      	bx	lr

0800959e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800959e:	4770      	bx	lr

080095a0 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80095a0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80095a2:	68c2      	ldr	r2, [r0, #12]
 80095a4:	6844      	ldr	r4, [r0, #4]
 80095a6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80095a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80095aa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80095ae:	07d2      	lsls	r2, r2, #31
 80095b0:	bf48      	it	mi
 80095b2:	5962      	ldrmi	r2, [r4, r5]
 80095b4:	689b      	ldr	r3, [r3, #8]
    }
 80095b6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80095b8:	bf48      	it	mi
 80095ba:	58d3      	ldrmi	r3, [r2, r3]
 80095bc:	4718      	bx	r3

080095be <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80095be:	6843      	ldr	r3, [r0, #4]
 80095c0:	b12b      	cbz	r3, 80095ce <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80095c2:	6883      	ldr	r3, [r0, #8]
 80095c4:	b92b      	cbnz	r3, 80095d2 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80095c6:	68c0      	ldr	r0, [r0, #12]
 80095c8:	f000 0001 	and.w	r0, r0, #1
 80095cc:	4770      	bx	lr
 80095ce:	4618      	mov	r0, r3
 80095d0:	4770      	bx	lr
 80095d2:	2001      	movs	r0, #1
    }
 80095d4:	4770      	bx	lr

080095d6 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80095d6:	b510      	push	{r4, lr}
 80095d8:	2110      	movs	r1, #16
 80095da:	4604      	mov	r4, r0
 80095dc:	f023 fad9 	bl	802cb92 <_ZdlPvj>
 80095e0:	4620      	mov	r0, r4
 80095e2:	bd10      	pop	{r4, pc}

080095e4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80095e4:	b510      	push	{r4, lr}
 80095e6:	4b03      	ldr	r3, [pc, #12]	; (80095f4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 80095e8:	6003      	str	r3, [r0, #0]
 80095ea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80095ec:	f00d fce6 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80095f0:	4620      	mov	r0, r4
 80095f2:	bd10      	pop	{r4, pc}
 80095f4:	08030cd0 	.word	0x08030cd0

080095f8 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80095f8:	b507      	push	{r0, r1, r2, lr}
 80095fa:	4b07      	ldr	r3, [pc, #28]	; (8009618 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 80095fc:	6003      	str	r3, [r0, #0]
 80095fe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009600:	f00d fcdc 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009604:	9801      	ldr	r0, [sp, #4]
 8009606:	f241 4178 	movw	r1, #5240	; 0x1478
 800960a:	f023 fac2 	bl	802cb92 <_ZdlPvj>
 800960e:	9801      	ldr	r0, [sp, #4]
 8009610:	b003      	add	sp, #12
 8009612:	f85d fb04 	ldr.w	pc, [sp], #4
 8009616:	bf00      	nop
 8009618:	08030cd0 	.word	0x08030cd0

0800961c <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_return)
 800961c:	3098      	adds	r0, #152	; 0x98
 800961e:	4288      	cmp	r0, r1
{
 8009620:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 8009622:	d105      	bne.n	8009630 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009624:	f00f f9cc 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_return clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8009628:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800962c:	f7fb bfdc 	b.w	80055e8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8009630:	bd08      	pop	{r3, pc}
	...

08009634 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8009634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009638:	ed2d 8b0a 	vpush	{d8-d12}
 800963c:	4604      	mov	r4, r0
 800963e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8009640:	46a0      	mov	r8, r4
 8009642:	2500      	movs	r5, #0
 8009644:	f010 fe3c 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 8009648:	4bcd      	ldr	r3, [pc, #820]	; (8009980 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x34c>)
 800964a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800964c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8009650:	2226      	movs	r2, #38	; 0x26
 8009652:	4629      	mov	r1, r5
 8009654:	4640      	mov	r0, r8
 8009656:	f024 fb88 	bl	802dd6a <memset>
 800965a:	4640      	mov	r0, r8
 800965c:	f7fa f83e 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8009660:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8009664:	26ff      	movs	r6, #255	; 0xff
 8009666:	4bc7      	ldr	r3, [pc, #796]	; (8009984 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x350>)
 8009668:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800966a:	2226      	movs	r2, #38	; 0x26
 800966c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009670:	4629      	mov	r1, r5
 8009672:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009676:	4638      	mov	r0, r7
 8009678:	66a5      	str	r5, [r4, #104]	; 0x68
 800967a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800967e:	f024 fb74 	bl	802dd6a <memset>
 8009682:	4638      	mov	r0, r7
 8009684:	f7fa f82a 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8009688:	4bbf      	ldr	r3, [pc, #764]	; (8009988 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x354>)
 800968a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800968c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009690:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8009694:	a90a      	add	r1, sp, #40	; 0x28
 8009696:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800969a:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 800969c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80096a0:	f00c fc8f 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80096a4:	4658      	mov	r0, fp
 80096a6:	f00c fdc3 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80096aa:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80096ae:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80096b2:	4618      	mov	r0, r3
 80096b4:	ee0a 3a90 	vmov	s21, r3
 80096b8:	f7fa f874 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80096bc:	4648      	mov	r0, r9
 80096be:	f7fa f871 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80096c2:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80096c6:	4618      	mov	r0, r3
 80096c8:	ee0b 3a10 	vmov	s22, r3
 80096cc:	f7fa f86a 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80096d0:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 80096d4:	4618      	mov	r0, r3
 80096d6:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096da:	4eac      	ldr	r6, [pc, #688]	; (800998c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x358>)
        : TextArea()
 80096dc:	f7fa f862 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80096e0:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 80096e4:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 80096e8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096ea:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 80096ee:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80096f2:	f7fa f857 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 80096f6:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80096fa:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096fc:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8009700:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8009704:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8009708:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 800970c:	f7fa f84a 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009710:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8009714:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8009718:	4650      	mov	r0, sl
 800971a:	f00c f915 	bl	8015948 <_ZN8touchgfx5GaugeC1Ev>
 800971e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8009722:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009724:	4e9a      	ldr	r6, [pc, #616]	; (8009990 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x35c>)
 8009726:	ee08 3a10 	vmov	s16, r3
 800972a:	f00b f93d 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 800972e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8009732:	4618      	mov	r0, r3
 8009734:	9302      	str	r3, [sp, #8]
 8009736:	f7f9 fdd3 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800973a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800973e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8009742:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8009746:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 800974a:	4618      	mov	r0, r3
 800974c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8009750:	ee09 3a10 	vmov	s18, r3
 8009754:	f7fa f826 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8009758:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800975c:	4618      	mov	r0, r3
 800975e:	ee08 3a90 	vmov	s17, r3
 8009762:	f00b f921 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8009766:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 800976a:	4618      	mov	r0, r3
 800976c:	9303      	str	r3, [sp, #12]
 800976e:	f7f9 fdb7 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009772:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009776:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 800977a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 800977e:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8009782:	4618      	mov	r0, r3
 8009784:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8009788:	ee09 3a90 	vmov	s19, r3
 800978c:	f7fa f80a 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8009790:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8009794:	4618      	mov	r0, r3
 8009796:	ee0a 3a10 	vmov	s20, r3
 800979a:	f7fa f803 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800979e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80097a2:	4a7c      	ldr	r2, [pc, #496]	; (8009994 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x360>)
 80097a4:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 80097a8:	4a7b      	ldr	r2, [pc, #492]	; (8009998 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x364>)
 80097aa:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 80097ae:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 80097b2:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80097b6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80097ba:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80097be:	f00d fbf3 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80097c2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80097c6:	462a      	mov	r2, r5
 80097c8:	4640      	mov	r0, r8
 80097ca:	9300      	str	r3, [sp, #0]
 80097cc:	4629      	mov	r1, r5
 80097ce:	23f0      	movs	r3, #240	; 0xf0
 80097d0:	f7f9 ff5f 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 80097d4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80097d6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80097da:	66a3      	str	r3, [r4, #104]	; 0x68
 80097dc:	4641      	mov	r1, r8
 80097de:	4630      	mov	r0, r6
 80097e0:	f009 f816 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80097e4:	462a      	mov	r2, r5
 80097e6:	4638      	mov	r0, r7
 80097e8:	4629      	mov	r1, r5
 80097ea:	f7f9 ff45 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80097ee:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80097f2:	4638      	mov	r0, r7
 80097f4:	a90a      	add	r1, sp, #40	; 0x28
 80097f6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80097fa:	f00c fbe2 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80097fe:	4639      	mov	r1, r7
 8009800:	4630      	mov	r0, r6
 8009802:	f009 f805 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 8009806:	4658      	mov	r0, fp
 8009808:	f44f 7280 	mov.w	r2, #256	; 0x100
 800980c:	2121      	movs	r1, #33	; 0x21
 800980e:	f7f9 ff33 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8009812:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009814:	aa0a      	add	r2, sp, #40	; 0x28
 8009816:	a909      	add	r1, sp, #36	; 0x24
 8009818:	4658      	mov	r0, fp
 800981a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800981e:	2302      	movs	r3, #2
 8009820:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009824:	f00c f9d7 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8009828:	2359      	movs	r3, #89	; 0x59
        updateTextPosition();
 800982a:	4658      	mov	r0, fp
 800982c:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8009830:	f7f9 ff66 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 8009834:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8009838:	f04f 38ff 	mov.w	r8, #4294967295
 800983c:	3308      	adds	r3, #8
 800983e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8009842:	4659      	mov	r1, fp
 8009844:	4630      	mov	r0, r6
        colorPressed = col;
 8009846:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 800984a:	af04      	add	r7, sp, #16
 800984c:	f008 ffe0 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8009850:	22c2      	movs	r2, #194	; 0xc2
 8009852:	ee1a 0a90 	vmov	r0, s21
 8009856:	4629      	mov	r1, r5
 8009858:	f7f9 ff0e 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800985c:	ee1a 1a90 	vmov	r1, s21
 8009860:	4638      	mov	r0, r7
        color = newColor;
 8009862:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8009866:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800986a:	f00b fb5f 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800986e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009872:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8009876:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800987a:	4b48      	ldr	r3, [pc, #288]	; (800999c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 800987c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C7CD));
 800987e:	ee1a 0a90 	vmov	r0, s21
 8009882:	2313      	movs	r3, #19
 8009884:	a90a      	add	r1, sp, #40	; 0x28
 8009886:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800988a:	f00b fde9 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800988e:	ee1a 1a90 	vmov	r1, s21
 8009892:	4630      	mov	r0, r6
 8009894:	f008 ffbc 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8009898:	22c2      	movs	r2, #194	; 0xc2
 800989a:	4648      	mov	r0, r9
 800989c:	21d9      	movs	r1, #217	; 0xd9
 800989e:	f7f9 feeb 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80098a2:	4649      	mov	r1, r9
 80098a4:	4638      	mov	r0, r7
        color = newColor;
 80098a6:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80098aa:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80098ae:	f00b fb3d 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80098b2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80098b6:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80098ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80098be:	4b37      	ldr	r3, [pc, #220]	; (800999c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 80098c0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85IX));
 80098c2:	4648      	mov	r0, r9
 80098c4:	2312      	movs	r3, #18
 80098c6:	a90a      	add	r1, sp, #40	; 0x28
 80098c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80098cc:	f00b fdc8 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80098d0:	4649      	mov	r1, r9
 80098d2:	4630      	mov	r0, r6
 80098d4:	f008 ff9c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 80098d8:	2255      	movs	r2, #85	; 0x55
 80098da:	ee1b 0a10 	vmov	r0, s22
 80098de:	2171      	movs	r1, #113	; 0x71
 80098e0:	f7f9 feca 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80098e4:	ee1b 1a10 	vmov	r1, s22
 80098e8:	4638      	mov	r0, r7
        color = newColor;
 80098ea:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 80098ee:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 80098f2:	f00b fb1b 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80098f6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80098fa:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80098fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009902:	4b26      	ldr	r3, [pc, #152]	; (800999c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009904:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XVJO));
 8009906:	ee1b 0a10 	vmov	r0, s22
 800990a:	2314      	movs	r3, #20
 800990c:	a90a      	add	r1, sp, #40	; 0x28
 800990e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009912:	f00b fda5 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009916:	ee1b 1a10 	vmov	r1, s22
 800991a:	4630      	mov	r0, r6
 800991c:	f008 ff78 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Current.setPosition(0, 239, 240, 15);
 8009920:	230f      	movs	r3, #15
 8009922:	22ef      	movs	r2, #239	; 0xef
 8009924:	ee1b 0a90 	vmov	r0, s23
 8009928:	9300      	str	r3, [sp, #0]
 800992a:	4629      	mov	r1, r5
 800992c:	23f0      	movs	r3, #240	; 0xf0
 800992e:	f7f9 feb0 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009932:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8009936:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 800993a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800993e:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8009942:	ee1b 1a90 	vmov	r1, s23
 8009946:	4638      	mov	r0, r7
 8009948:	4798      	blx	r3
 800994a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800994e:	f8df b064 	ldr.w	fp, [pc, #100]	; 80099b4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x380>
 8009952:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8009956:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800995a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_CurrentBuffer, SMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HT0R).getText());
 800995e:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8009962:	b92b      	cbnz	r3, 8009970 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x33c>
 8009964:	4b0e      	ldr	r3, [pc, #56]	; (80099a0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x36c>)
 8009966:	4a0f      	ldr	r2, [pc, #60]	; (80099a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009968:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800996a:	480f      	ldr	r0, [pc, #60]	; (80099a8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x374>)
 800996c:	f023 fff8 	bl	802d960 <__assert_func>
 8009970:	4b0e      	ldr	r3, [pc, #56]	; (80099ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x378>)
 8009972:	881b      	ldrh	r3, [r3, #0]
 8009974:	2b18      	cmp	r3, #24
 8009976:	d81f      	bhi.n	80099b8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x384>
 8009978:	4b0d      	ldr	r3, [pc, #52]	; (80099b0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x37c>)
 800997a:	4a0a      	ldr	r2, [pc, #40]	; (80099a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 800997c:	2161      	movs	r1, #97	; 0x61
 800997e:	e7f4      	b.n	800996a <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x336>
 8009980:	08030cd0 	.word	0x08030cd0
 8009984:	08031a70 	.word	0x08031a70
 8009988:	08031cbc 	.word	0x08031cbc
 800998c:	0802f5b4 	.word	0x0802f5b4
 8009990:	080317a4 	.word	0x080317a4
 8009994:	08030cb8 	.word	0x08030cb8
 8009998:	0800961d 	.word	0x0800961d
 800999c:	0802f514 	.word	0x0802f514
 80099a0:	0802f364 	.word	0x0802f364
 80099a4:	0802f469 	.word	0x0802f469
 80099a8:	0802f3e1 	.word	0x0802f3e1
 80099ac:	20013898 	.word	0x20013898
 80099b0:	0802f428 	.word	0x0802f428
 80099b4:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 80099b8:	4bdc      	ldr	r3, [pc, #880]	; (8009d2c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 80099ba:	2118      	movs	r1, #24
 80099bc:	6818      	ldr	r0, [r3, #0]
 80099be:	f000 fe6f 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80099c2:	4adb      	ldr	r2, [pc, #876]	; (8009d30 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 80099c4:	4603      	mov	r3, r0
 80099c6:	210a      	movs	r1, #10
 80099c8:	4648      	mov	r0, r9
 80099ca:	f012 f9a7 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80099ce:	4ad9      	ldr	r2, [pc, #868]	; (8009d34 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
        wc1 = value;
 80099d0:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
 80099d4:	2319      	movs	r3, #25
    SMD3_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6OVJ));
 80099d6:	ee1b 0a90 	vmov	r0, s23
 80099da:	a90a      	add	r1, sp, #40	; 0x28
 80099dc:	920a      	str	r2, [sp, #40]	; 0x28
 80099de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80099e2:	f00b fd3d 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80099e6:	ee1b 1a90 	vmov	r1, s23
 80099ea:	4630      	mov	r0, r6
 80099ec:	f008 ff10 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Frequency.setPosition(0, 224, 240, 15);
 80099f0:	210f      	movs	r1, #15
 80099f2:	22e0      	movs	r2, #224	; 0xe0
 80099f4:	ee1c 0a10 	vmov	r0, s24
 80099f8:	9100      	str	r1, [sp, #0]
 80099fa:	23f0      	movs	r3, #240	; 0xf0
 80099fc:	4629      	mov	r1, r5
 80099fe:	f7f9 fe48 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009a02:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8009a06:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009a0a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009a0e:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8009a12:	ee1c 1a10 	vmov	r1, s24
 8009a16:	4638      	mov	r0, r7
 8009a18:	4798      	blx	r3
 8009a1a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009a1e:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009a22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009a26:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_FrequencyBuffer, SMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YT2E).getText());
 8009a2a:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8009a2e:	2b00      	cmp	r3, #0
 8009a30:	d098      	beq.n	8009964 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009a32:	49c1      	ldr	r1, [pc, #772]	; (8009d38 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009a34:	880b      	ldrh	r3, [r1, #0]
 8009a36:	2b16      	cmp	r3, #22
 8009a38:	d99e      	bls.n	8009978 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009a3a:	4bbc      	ldr	r3, [pc, #752]	; (8009d2c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009a3c:	2116      	movs	r1, #22
 8009a3e:	6818      	ldr	r0, [r3, #0]
 8009a40:	f000 fe2e 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8009a44:	4aba      	ldr	r2, [pc, #744]	; (8009d30 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009a46:	4603      	mov	r3, r0
 8009a48:	210a      	movs	r1, #10
 8009a4a:	4648      	mov	r0, r9
 8009a4c:	f012 f966 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD3_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W5I5));
 8009a50:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8009a52:	4ab8      	ldr	r2, [pc, #736]	; (8009d34 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009a54:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8009a58:	2317      	movs	r3, #23
 8009a5a:	4601      	mov	r1, r0
 8009a5c:	ee1c 0a10 	vmov	r0, s24
 8009a60:	920a      	str	r2, [sp, #40]	; 0x28
 8009a62:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009a66:	f00b fcfb 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a6a:	ee1c 1a10 	vmov	r1, s24
 8009a6e:	4630      	mov	r0, r6
 8009a70:	f008 fece 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Distance.setPosition(0, 209, 240, 15);
 8009a74:	200f      	movs	r0, #15
 8009a76:	22d1      	movs	r2, #209	; 0xd1
 8009a78:	9000      	str	r0, [sp, #0]
 8009a7a:	23f0      	movs	r3, #240	; 0xf0
 8009a7c:	ee1c 0a90 	vmov	r0, s25
 8009a80:	4629      	mov	r1, r5
 8009a82:	f7f9 fe06 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009a86:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8009a8a:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8009a8e:	4638      	mov	r0, r7
 8009a90:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009a94:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009a98:	ee1c 1a90 	vmov	r1, s25
 8009a9c:	4798      	blx	r3
 8009a9e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009aa2:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8009aa6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009aaa:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_DistanceBuffer, SMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EK4L).getText());
 8009aae:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8009ab2:	2b00      	cmp	r3, #0
 8009ab4:	f43f af56 	beq.w	8009964 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009ab8:	499f      	ldr	r1, [pc, #636]	; (8009d38 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009aba:	880b      	ldrh	r3, [r1, #0]
 8009abc:	2b15      	cmp	r3, #21
 8009abe:	f67f af5b 	bls.w	8009978 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009ac2:	4b9a      	ldr	r3, [pc, #616]	; (8009d2c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009ac4:	2115      	movs	r1, #21
 8009ac6:	6818      	ldr	r0, [r3, #0]
 8009ac8:	f000 fdea 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8009acc:	4a98      	ldr	r2, [pc, #608]	; (8009d30 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009ace:	4603      	mov	r3, r0
 8009ad0:	210a      	movs	r1, #10
 8009ad2:	4638      	mov	r0, r7
 8009ad4:	f012 f922 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009ad8:	4a96      	ldr	r2, [pc, #600]	; (8009d34 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009ada:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009ade:	2336      	movs	r3, #54	; 0x36
    SMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009ae0:	ee1c 0a90 	vmov	r0, s25
 8009ae4:	a90a      	add	r1, sp, #40	; 0x28
 8009ae6:	920a      	str	r2, [sp, #40]	; 0x28
 8009ae8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009aec:	f00b fcb8 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009af0:	ee1c 1a90 	vmov	r1, s25
 8009af4:	4630      	mov	r0, r6
 8009af6:	f008 fe8b 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009afa:	2304      	movs	r3, #4
    SMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009afc:	a90a      	add	r1, sp, #40	; 0x28
 8009afe:	4650      	mov	r0, sl
 8009b00:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009b04:	f008 fe16 	bl	8012734 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD3_Gauge.setPosition(28, 103, 184, 106);
 8009b08:	236a      	movs	r3, #106	; 0x6a
 8009b0a:	9300      	str	r3, [sp, #0]
 8009b0c:	2267      	movs	r2, #103	; 0x67
 8009b0e:	23b8      	movs	r3, #184	; 0xb8
 8009b10:	211c      	movs	r1, #28
 8009b12:	4650      	mov	r0, sl
 8009b14:	f7f9 fdbd 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD3_Gauge.setCenter(92, 92);
 8009b18:	225c      	movs	r2, #92	; 0x5c
 8009b1a:	4611      	mov	r1, r2
 8009b1c:	4650      	mov	r0, sl
 8009b1e:	f00b ffbe 	bl	8015a9e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD3_Gauge.setStartEndAngle(-90, 90);
 8009b22:	225a      	movs	r2, #90	; 0x5a
 8009b24:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009b28:	4650      	mov	r0, sl
 8009b2a:	f00c f83d 	bl	8015ba8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD3_Gauge.setRange(-90, 90);
 8009b2e:	462b      	mov	r3, r5
 8009b30:	225a      	movs	r2, #90	; 0x5a
 8009b32:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009b36:	4650      	mov	r0, sl
 8009b38:	9500      	str	r5, [sp, #0]
 8009b3a:	f008 fca8 	bl	801248e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD3_Gauge.setValue(0);
 8009b3e:	4629      	mov	r1, r5
 8009b40:	4650      	mov	r0, sl
 8009b42:	f00b ffdb 	bl	8015afc <_ZN8touchgfx5Gauge8setValueEi>
    SMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8009b46:	2335      	movs	r3, #53	; 0x35
 8009b48:	2208      	movs	r2, #8
 8009b4a:	2105      	movs	r1, #5
 8009b4c:	4650      	mov	r0, sl
 8009b4e:	f00b ff91 	bl	8015a74 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009b52:	2101      	movs	r1, #1
 8009b54:	4650      	mov	r0, sl
 8009b56:	f00b ff2f 	bl	80159b8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009b5a:	2101      	movs	r1, #1
 8009b5c:	4650      	mov	r0, sl
 8009b5e:	f00b ff2e 	bl	80159be <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8009b62:	4651      	mov	r1, sl
 8009b64:	4630      	mov	r0, r6
 8009b66:	f008 fe53 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8009b6a:	230a      	movs	r3, #10
 8009b6c:	ee18 0a10 	vmov	r0, s16
 8009b70:	9300      	str	r3, [sp, #0]
 8009b72:	224b      	movs	r2, #75	; 0x4b
 8009b74:	23f0      	movs	r3, #240	; 0xf0
 8009b76:	4629      	mov	r1, r5
 8009b78:	f7f9 fd8b 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009b7c:	9b02      	ldr	r3, [sp, #8]
 8009b7e:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009b82:	22a0      	movs	r2, #160	; 0xa0
 8009b84:	4611      	mov	r1, r2
 8009b86:	ee18 0a10 	vmov	r0, s16
 8009b8a:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009b8e:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8009b92:	f00b f81f 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009b96:	ee18 0a10 	vmov	r0, s16
 8009b9a:	22a0      	movs	r2, #160	; 0xa0
 8009b9c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009ba0:	f00b f823 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009ba4:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009ba8:	2b20      	cmp	r3, #32
 8009baa:	d006      	beq.n	8009bba <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x586>
        lineWidthQ5 = widthQ5;
 8009bac:	2320      	movs	r3, #32
        updateCachedShape();
 8009bae:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8009bb2:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8009bb6:	f00a ff17 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009bba:	ee18 0a10 	vmov	r0, s16
 8009bbe:	2101      	movs	r1, #1
 8009bc0:	f00b f81e 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009bc4:	ee18 1a10 	vmov	r1, s16
 8009bc8:	4630      	mov	r0, r6
 8009bca:	f008 fe21 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009bce:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 8009bd2:	223c      	movs	r2, #60	; 0x3c
 8009bd4:	ee19 0a10 	vmov	r0, s18
 8009bd8:	211f      	movs	r1, #31
        linespace = space;
 8009bda:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009bde:	ad04      	add	r5, sp, #16
 8009be0:	f7f9 fd4a 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8009be4:	ee19 1a10 	vmov	r1, s18
 8009be8:	4628      	mov	r0, r5
        color = newColor;
 8009bea:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009bee:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8009bf2:	f00b f99b 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009bf6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009bfa:	ee19 3a10 	vmov	r3, s18
 8009bfe:	333c      	adds	r3, #60	; 0x3c
 8009c00:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009c04:	4f4b      	ldr	r7, [pc, #300]	; (8009d34 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009c06:	970a      	str	r7, [sp, #40]	; 0x28
 8009c08:	2350      	movs	r3, #80	; 0x50
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8009c0a:	ee19 0a10 	vmov	r0, s18
 8009c0e:	a90a      	add	r1, sp, #40	; 0x28
 8009c10:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009c14:	f00b fc24 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009c18:	ee19 1a10 	vmov	r1, s18
 8009c1c:	4630      	mov	r0, r6
 8009c1e:	f008 fdf7 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8009c22:	230a      	movs	r3, #10
 8009c24:	ee18 0a90 	vmov	r0, s17
 8009c28:	9300      	str	r3, [sp, #0]
 8009c2a:	2232      	movs	r2, #50	; 0x32
 8009c2c:	23f0      	movs	r3, #240	; 0xf0
 8009c2e:	4649      	mov	r1, r9
 8009c30:	f7f9 fd2f 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009c34:	9b03      	ldr	r3, [sp, #12]
 8009c36:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009c3a:	22a0      	movs	r2, #160	; 0xa0
 8009c3c:	4611      	mov	r1, r2
 8009c3e:	ee18 0a90 	vmov	r0, s17
 8009c42:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8009c46:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009c4a:	f00a ffc3 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009c4e:	ee18 0a90 	vmov	r0, s17
 8009c52:	22a0      	movs	r2, #160	; 0xa0
 8009c54:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009c58:	f00a ffc7 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009c5c:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009c60:	2b20      	cmp	r3, #32
 8009c62:	d006      	beq.n	8009c72 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x63e>
        lineWidthQ5 = widthQ5;
 8009c64:	2320      	movs	r3, #32
        updateCachedShape();
 8009c66:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8009c6a:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8009c6e:	f00a febb 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009c72:	ee18 0a90 	vmov	r0, s17
 8009c76:	2101      	movs	r1, #1
 8009c78:	f00a ffc2 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009c7c:	ee18 1a90 	vmov	r1, s17
 8009c80:	4630      	mov	r0, r6
 8009c82:	f008 fdc5 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009c86:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8009c8a:	ee19 0a90 	vmov	r0, s19
 8009c8e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009c90:	f04f 0800 	mov.w	r8, #0
 8009c94:	2145      	movs	r1, #69	; 0x45
 8009c96:	f7f9 fcef 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009c9a:	ee19 1a90 	vmov	r1, s19
 8009c9e:	4628      	mov	r0, r5
        color = newColor;
 8009ca0:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8009ca4:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009ca8:	f00b f940 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009cac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009cb0:	ee19 3a90 	vmov	r3, s19
 8009cb4:	333c      	adds	r3, #60	; 0x3c
 8009cb6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009cba:	235b      	movs	r3, #91	; 0x5b
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8009cbc:	ee19 0a90 	vmov	r0, s19
 8009cc0:	a90a      	add	r1, sp, #40	; 0x28
 8009cc2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009cc6:	970a      	str	r7, [sp, #40]	; 0x28
 8009cc8:	f00b fbca 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009ccc:	ee19 1a90 	vmov	r1, s19
 8009cd0:	4630      	mov	r0, r6
 8009cd2:	f008 fd9d 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8009cd6:	ee1a 0a10 	vmov	r0, s20
 8009cda:	220c      	movs	r2, #12
 8009cdc:	2136      	movs	r1, #54	; 0x36
 8009cde:	f7f9 fccb 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8009ce2:	ee1a 1a10 	vmov	r1, s20
 8009ce6:	4628      	mov	r0, r5
        color = newColor;
 8009ce8:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009cec:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009cf0:	f00b f91c 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009cf4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009cf8:	ee1a 3a10 	vmov	r3, s20
 8009cfc:	333c      	adds	r3, #60	; 0x3c
 8009cfe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009d02:	235a      	movs	r3, #90	; 0x5a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8009d04:	ee1a 0a10 	vmov	r0, s20
 8009d08:	a90a      	add	r1, sp, #40	; 0x28
 8009d0a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009d0e:	970a      	str	r7, [sp, #40]	; 0x28
 8009d10:	f00b fba6 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009d14:	4630      	mov	r0, r6
 8009d16:	ee1a 1a10 	vmov	r1, s20
 8009d1a:	f008 fd79 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009d1e:	4620      	mov	r0, r4
 8009d20:	b00d      	add	sp, #52	; 0x34
 8009d22:	ecbd 8b0a 	vpop	{d8-d12}
 8009d26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d2a:	bf00      	nop
 8009d2c:	200138a0 	.word	0x200138a0
 8009d30:	0802f4a1 	.word	0x0802f4a1
 8009d34:	0802f514 	.word	0x0802f514
 8009d38:	20013898 	.word	0x20013898

08009d3c <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8009d3c:	4770      	bx	lr

08009d3e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009d3e:	4770      	bx	lr

08009d40 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009d40:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009d42:	68c2      	ldr	r2, [r0, #12]
 8009d44:	6844      	ldr	r4, [r0, #4]
 8009d46:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009d48:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009d4a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009d4e:	07d2      	lsls	r2, r2, #31
 8009d50:	bf48      	it	mi
 8009d52:	5962      	ldrmi	r2, [r4, r5]
 8009d54:	689b      	ldr	r3, [r3, #8]
    }
 8009d56:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009d58:	bf48      	it	mi
 8009d5a:	58d3      	ldrmi	r3, [r2, r3]
 8009d5c:	4718      	bx	r3

08009d5e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8009d5e:	6843      	ldr	r3, [r0, #4]
 8009d60:	b12b      	cbz	r3, 8009d6e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8009d62:	6883      	ldr	r3, [r0, #8]
 8009d64:	b92b      	cbnz	r3, 8009d72 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8009d66:	68c0      	ldr	r0, [r0, #12]
 8009d68:	f000 0001 	and.w	r0, r0, #1
 8009d6c:	4770      	bx	lr
 8009d6e:	4618      	mov	r0, r3
 8009d70:	4770      	bx	lr
 8009d72:	2001      	movs	r0, #1
    }
 8009d74:	4770      	bx	lr

08009d76 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009d76:	b510      	push	{r4, lr}
 8009d78:	2110      	movs	r1, #16
 8009d7a:	4604      	mov	r4, r0
 8009d7c:	f022 ff09 	bl	802cb92 <_ZdlPvj>
 8009d80:	4620      	mov	r0, r4
 8009d82:	bd10      	pop	{r4, pc}

08009d84 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009d84:	b510      	push	{r4, lr}
 8009d86:	4b03      	ldr	r3, [pc, #12]	; (8009d94 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8009d88:	6003      	str	r3, [r0, #0]
 8009d8a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009d8c:	f00d f916 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009d90:	4620      	mov	r0, r4
 8009d92:	bd10      	pop	{r4, pc}
 8009d94:	08030d1c 	.word	0x08030d1c

08009d98 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009d98:	b507      	push	{r0, r1, r2, lr}
 8009d9a:	4b07      	ldr	r3, [pc, #28]	; (8009db8 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8009d9c:	6003      	str	r3, [r0, #0]
 8009d9e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009da0:	f00d f90c 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009da4:	9801      	ldr	r0, [sp, #4]
 8009da6:	f241 117c 	movw	r1, #4476	; 0x117c
 8009daa:	f022 fef2 	bl	802cb92 <_ZdlPvj>
 8009dae:	9801      	ldr	r0, [sp, #4]
 8009db0:	b003      	add	sp, #12
 8009db2:	f85d fb04 	ldr.w	pc, [sp], #4
 8009db6:	bf00      	nop
 8009db8:	08030d1c 	.word	0x08030d1c

08009dbc <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8009dbc:	30e4      	adds	r0, #228	; 0xe4
 8009dbe:	4288      	cmp	r0, r1
{
 8009dc0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8009dc2:	d105      	bne.n	8009dd0 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009dc4:	f00e fdfc 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8009dc8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8009dcc:	f7fb bbdc 	b.w	8005588 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8009dd0:	bd08      	pop	{r3, pc}
	...

08009dd4 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8009dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dd8:	ed2d 8b06 	vpush	{d8-d10}
 8009ddc:	4604      	mov	r4, r0
 8009dde:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8009de0:	46a3      	mov	fp, r4
 8009de2:	2500      	movs	r5, #0
 8009de4:	f010 fa6c 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 8009de8:	4b6e      	ldr	r3, [pc, #440]	; (8009fa4 <_ZN20Project_InfoViewBaseC1Ev+0x1d0>)
 8009dea:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009dec:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8009df0:	2226      	movs	r2, #38	; 0x26
 8009df2:	4629      	mov	r1, r5
 8009df4:	4658      	mov	r0, fp
 8009df6:	f023 ffb8 	bl	802dd6a <memset>
 8009dfa:	4658      	mov	r0, fp
 8009dfc:	f7f9 fc6e 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8009e00:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8009e04:	26ff      	movs	r6, #255	; 0xff
 8009e06:	4b68      	ldr	r3, [pc, #416]	; (8009fa8 <_ZN20Project_InfoViewBaseC1Ev+0x1d4>)
 8009e08:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009e0a:	2226      	movs	r2, #38	; 0x26
 8009e0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009e10:	4629      	mov	r1, r5
 8009e12:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009e16:	4650      	mov	r0, sl
 8009e18:	66a5      	str	r5, [r4, #104]	; 0x68
 8009e1a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009e1e:	f023 ffa4 	bl	802dd6a <memset>
 8009e22:	4650      	mov	r0, sl
 8009e24:	f7f9 fc5a 	bl	80036dc <_ZN8touchgfx6WidgetC1Ev>
 8009e28:	4b60      	ldr	r3, [pc, #384]	; (8009fac <_ZN20Project_InfoViewBaseC1Ev+0x1d8>)
 8009e2a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009e2c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009e30:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8009e34:	a90a      	add	r1, sp, #40	; 0x28
 8009e36:	4650      	mov	r0, sl
 8009e38:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8009e3c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009e40:	f00c f8bf 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8009e44:	4648      	mov	r0, r9
 8009e46:	f7f9 fcad 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009e4a:	4b59      	ldr	r3, [pc, #356]	; (8009fb0 <_ZN20Project_InfoViewBaseC1Ev+0x1dc>)
 8009e4c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8009e50:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8009e54:	4618      	mov	r0, r3
 8009e56:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8009e5a:	ee09 3a90 	vmov	s19, r3
 8009e5e:	f00c f9e7 	bl	8016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009e62:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8009e66:	4618      	mov	r0, r3
 8009e68:	f504 78ba 	add.w	r8, r4, #372	; 0x174
 8009e6c:	ee0a 3a10 	vmov	s20, r3
 8009e70:	f7f9 fc98 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8009e74:	4640      	mov	r0, r8
 8009e76:	f00a fd97 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009e7a:	4e4e      	ldr	r6, [pc, #312]	; (8009fb4 <_ZN20Project_InfoViewBaseC1Ev+0x1e0>)
 8009e7c:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 8009e80:	4618      	mov	r0, r3
 8009e82:	9302      	str	r3, [sp, #8]
 8009e84:	f7f9 fa2c 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009e88:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009e8c:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 8009e90:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8009e94:	4618      	mov	r0, r3
 8009e96:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8009e9a:	f8c4 51f0 	str.w	r5, [r4, #496]	; 0x1f0
 8009e9e:	f504 7710 	add.w	r7, r4, #576	; 0x240
 8009ea2:	ee08 3a10 	vmov	s16, r3
 8009ea6:	f7f9 fc7d 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8009eaa:	4638      	mov	r0, r7
 8009eac:	f00a fd7c 	bl	80149a8 <_ZN8touchgfx4LineC1Ev>
 8009eb0:	f504 732c 	add.w	r3, r4, #688	; 0x2b0
 8009eb4:	4618      	mov	r0, r3
 8009eb6:	9303      	str	r3, [sp, #12]
 8009eb8:	f7f9 fa12 	bl	80032e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009ebc:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009ec0:	f8c4 32b8 	str.w	r3, [r4, #696]	; 0x2b8
 8009ec4:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8009ec8:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
 8009ecc:	4618      	mov	r0, r3
 8009ece:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
 8009ed2:	ee08 3a90 	vmov	s17, r3
 8009ed6:	f7f9 fc65 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
 8009eda:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8009ede:	4618      	mov	r0, r3
 8009ee0:	ee09 3a10 	vmov	s18, r3
 8009ee4:	f7f9 fc5e 	bl	80037a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009ee8:	4a33      	ldr	r2, [pc, #204]	; (8009fb8 <_ZN20Project_InfoViewBaseC1Ev+0x1e4>)
 8009eea:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8009eee:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8009ef2:	4a32      	ldr	r2, [pc, #200]	; (8009fbc <_ZN20Project_InfoViewBaseC1Ev+0x1e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8009ef4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8009ef8:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8009efc:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8009f00:	f00d f852 	bl	8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8009f04:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8009f08:	462a      	mov	r2, r5
 8009f0a:	4658      	mov	r0, fp
 8009f0c:	9300      	str	r3, [sp, #0]
 8009f0e:	4629      	mov	r1, r5
 8009f10:	23f0      	movs	r3, #240	; 0xf0
 8009f12:	f7f9 fbbe 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009f16:	1d26      	adds	r6, r4, #4
        color = newColor;
 8009f18:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009f1c:	66a3      	str	r3, [r4, #104]	; 0x68
 8009f1e:	4659      	mov	r1, fp
 8009f20:	4630      	mov	r0, r6
 8009f22:	f008 fc75 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009f26:	462a      	mov	r2, r5
 8009f28:	4650      	mov	r0, sl
 8009f2a:	4629      	mov	r1, r5
 8009f2c:	f7f9 fba4 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8009f30:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009f32:	4650      	mov	r0, sl
 8009f34:	a90a      	add	r1, sp, #40	; 0x28
 8009f36:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009f3a:	f00c f842 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009f3e:	4651      	mov	r1, sl
 8009f40:	4630      	mov	r0, r6
 8009f42:	f008 fc65 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8009f46:	f44f 729a 	mov.w	r2, #308	; 0x134
 8009f4a:	2156      	movs	r1, #86	; 0x56
 8009f4c:	4648      	mov	r0, r9
 8009f4e:	f7f9 fb93 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8009f52:	f04f 33ff 	mov.w	r3, #4294967295
 8009f56:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8009f5a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8009f5e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8009f62:	f10d 0b10 	add.w	fp, sp, #16
 8009f66:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f6a:	4649      	mov	r1, r9
 8009f6c:	4658      	mov	r0, fp
 8009f6e:	4798      	blx	r3
 8009f70:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8009f74:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8009f78:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009f7c:	4b10      	ldr	r3, [pc, #64]	; (8009fc0 <_ZN20Project_InfoViewBaseC1Ev+0x1ec>)
 8009f7e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8009f80:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8009f84:	b92b      	cbnz	r3, 8009f92 <_ZN20Project_InfoViewBaseC1Ev+0x1be>
 8009f86:	4b0f      	ldr	r3, [pc, #60]	; (8009fc4 <_ZN20Project_InfoViewBaseC1Ev+0x1f0>)
 8009f88:	4a0f      	ldr	r2, [pc, #60]	; (8009fc8 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009f8a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009f8c:	480f      	ldr	r0, [pc, #60]	; (8009fcc <_ZN20Project_InfoViewBaseC1Ev+0x1f8>)
 8009f8e:	f023 fce7 	bl	802d960 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8009f92:	4b0f      	ldr	r3, [pc, #60]	; (8009fd0 <_ZN20Project_InfoViewBaseC1Ev+0x1fc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009f94:	881b      	ldrh	r3, [r3, #0]
 8009f96:	2b3e      	cmp	r3, #62	; 0x3e
 8009f98:	d81e      	bhi.n	8009fd8 <_ZN20Project_InfoViewBaseC1Ev+0x204>
 8009f9a:	4b0e      	ldr	r3, [pc, #56]	; (8009fd4 <_ZN20Project_InfoViewBaseC1Ev+0x200>)
 8009f9c:	4a0a      	ldr	r2, [pc, #40]	; (8009fc8 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009f9e:	2161      	movs	r1, #97	; 0x61
 8009fa0:	e7f4      	b.n	8009f8c <_ZN20Project_InfoViewBaseC1Ev+0x1b8>
 8009fa2:	bf00      	nop
 8009fa4:	08030d1c 	.word	0x08030d1c
 8009fa8:	08031a70 	.word	0x08031a70
 8009fac:	08031cbc 	.word	0x08031cbc
 8009fb0:	0802f5b4 	.word	0x0802f5b4
 8009fb4:	080317a4 	.word	0x080317a4
 8009fb8:	08030d04 	.word	0x08030d04
 8009fbc:	08009dbd 	.word	0x08009dbd
 8009fc0:	20013894 	.word	0x20013894
 8009fc4:	0802f364 	.word	0x0802f364
 8009fc8:	0802f469 	.word	0x0802f469
 8009fcc:	0802f3e1 	.word	0x0802f3e1
 8009fd0:	20013898 	.word	0x20013898
 8009fd4:	0802f428 	.word	0x0802f428
        return texts->getText(typedTextId);
 8009fd8:	4ba0      	ldr	r3, [pc, #640]	; (800a25c <_ZN20Project_InfoViewBaseC1Ev+0x488>)
 8009fda:	213e      	movs	r1, #62	; 0x3e
 8009fdc:	6818      	ldr	r0, [r3, #0]
 8009fde:	f000 fb5f 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8009fe2:	4a9f      	ldr	r2, [pc, #636]	; (800a260 <_ZN20Project_InfoViewBaseC1Ev+0x48c>)
 8009fe4:	4603      	mov	r3, r0
 8009fe6:	2104      	movs	r1, #4
 8009fe8:	4650      	mov	r0, sl
 8009fea:	f011 fe97 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8009fee:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea_auto_off.resizeToCurrentText();
 8009ff2:	4648      	mov	r0, r9
 8009ff4:	f00b fa14 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8009ff8:	f8df a268 	ldr.w	sl, [pc, #616]	; 800a264 <_ZN20Project_InfoViewBaseC1Ev+0x490>
 8009ffc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a000:	233f      	movs	r3, #63	; 0x3f
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 800a002:	a90a      	add	r1, sp, #40	; 0x28
 800a004:	4648      	mov	r0, r9
 800a006:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a00a:	f00b fa29 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a00e:	4649      	mov	r1, r9
 800a010:	4630      	mov	r0, r6
 800a012:	f008 fbfd 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 800a016:	ee19 0a90 	vmov	r0, s19
 800a01a:	22f0      	movs	r2, #240	; 0xf0
 800a01c:	2121      	movs	r1, #33	; 0x21
 800a01e:	f7f9 fb2b 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800a022:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800a024:	aa0a      	add	r2, sp, #40	; 0x28
 800a026:	a909      	add	r1, sp, #36	; 0x24
 800a028:	ee19 0a90 	vmov	r0, s19
 800a02c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a030:	2302      	movs	r3, #2
 800a032:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800a036:	f00b fdce 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800a03a:	2364      	movs	r3, #100	; 0x64
        updateTextPosition();
 800a03c:	ee19 0a90 	vmov	r0, s19
 800a040:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 800a044:	f7f9 fb5c 	bl	8003700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800a048:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800a04c:	e9c4 3348 	strd	r3, r3, [r4, #288]	; 0x120
    buttonWithLabel_Return.setAction(buttonCallback);
 800a050:	f504 538b 	add.w	r3, r4, #4448	; 0x1160
 800a054:	330c      	adds	r3, #12
 800a056:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800a05a:	ee19 1a90 	vmov	r1, s19
 800a05e:	4630      	mov	r0, r6
 800a060:	f008 fbd6 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_Info.setXY(7, 91);
 800a064:	225b      	movs	r2, #91	; 0x5b
 800a066:	ee1a 0a10 	vmov	r0, s20
 800a06a:	2107      	movs	r1, #7
 800a06c:	f7f9 fb04 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800a070:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800a074:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 800a078:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 800a07c:	4658      	mov	r0, fp
        linespace = space;
 800a07e:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 800a082:	f00a ff53 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a086:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800a08a:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800a08e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800a092:	2365      	movs	r3, #101	; 0x65
    textArea_Info.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 800a094:	ee1a 0a10 	vmov	r0, s20
 800a098:	a90a      	add	r1, sp, #40	; 0x28
 800a09a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a09e:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a0a2:	f00b f9dd 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a0a6:	ee1a 1a10 	vmov	r1, s20
 800a0aa:	4630      	mov	r0, r6
 800a0ac:	f008 fbb0 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800a0b0:	230a      	movs	r3, #10
 800a0b2:	9300      	str	r3, [sp, #0]
 800a0b4:	224b      	movs	r2, #75	; 0x4b
 800a0b6:	23f0      	movs	r3, #240	; 0xf0
 800a0b8:	4629      	mov	r1, r5
 800a0ba:	4640      	mov	r0, r8
 800a0bc:	f7f9 fae9 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a0c0:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a0c4:	22a0      	movs	r2, #160	; 0xa0
 800a0c6:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
        color565 = LCD16bpp::getNativeColor(painterColor);
 800a0ca:	f8a4 31f4 	strh.w	r3, [r4, #500]	; 0x1f4
 800a0ce:	9b02      	ldr	r3, [sp, #8]
 800a0d0:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800a0d4:	4611      	mov	r1, r2
 800a0d6:	4640      	mov	r0, r8
 800a0d8:	f00a fd7c 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a0dc:	22a0      	movs	r2, #160	; 0xa0
 800a0de:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a0e2:	4640      	mov	r0, r8
 800a0e4:	f00a fd81 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a0e8:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 800a0ec:	2b20      	cmp	r3, #32
 800a0ee:	d005      	beq.n	800a0fc <_ZN20Project_InfoViewBaseC1Ev+0x328>
        lineWidthQ5 = widthQ5;
 800a0f0:	2320      	movs	r3, #32
 800a0f2:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
        updateCachedShape();
 800a0f6:	4640      	mov	r0, r8
 800a0f8:	f00a fc76 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a0fc:	4640      	mov	r0, r8
 800a0fe:	2101      	movs	r1, #1
 800a100:	f00a fd7e 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a104:	4641      	mov	r1, r8
 800a106:	4630      	mov	r0, r6
 800a108:	f008 fb82 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a10c:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(70, 60);
 800a110:	223c      	movs	r2, #60	; 0x3c
        linespace = space;
 800a112:	f04f 0900 	mov.w	r9, #0
 800a116:	ee18 0a10 	vmov	r0, s16
 800a11a:	2146      	movs	r1, #70	; 0x46
        boundingArea = calculateBoundingArea();
 800a11c:	ad04      	add	r5, sp, #16
 800a11e:	f7f9 faab 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800a122:	ee18 1a10 	vmov	r1, s16
 800a126:	4628      	mov	r0, r5
        color = newColor;
 800a128:	f8c4 8228 	str.w	r8, [r4, #552]	; 0x228
        linespace = space;
 800a12c:	f8a4 922c 	strh.w	r9, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800a130:	f00a fefc 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a134:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a138:	ee18 3a10 	vmov	r3, s16
 800a13c:	333c      	adds	r3, #60	; 0x3c
 800a13e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BYJD));
 800a142:	ee18 0a10 	vmov	r0, s16
 800a146:	a90a      	add	r1, sp, #40	; 0x28
 800a148:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a14c:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800a150:	f00b f986 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a154:	ee18 1a10 	vmov	r1, s16
 800a158:	4630      	mov	r0, r6
 800a15a:	f008 fb59 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800a15e:	230a      	movs	r3, #10
 800a160:	9300      	str	r3, [sp, #0]
 800a162:	2232      	movs	r2, #50	; 0x32
 800a164:	23f0      	movs	r3, #240	; 0xf0
 800a166:	4649      	mov	r1, r9
 800a168:	4638      	mov	r0, r7
 800a16a:	f7f9 fa92 	bl	8003692 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a16e:	9b03      	ldr	r3, [sp, #12]
 800a170:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a174:	22a0      	movs	r2, #160	; 0xa0
 800a176:	4611      	mov	r1, r2
 800a178:	4638      	mov	r0, r7
 800a17a:	f8c4 82bc 	str.w	r8, [r4, #700]	; 0x2bc
 800a17e:	f8a4 82c0 	strh.w	r8, [r4, #704]	; 0x2c0
 800a182:	f00a fd27 	bl	8014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a186:	22a0      	movs	r2, #160	; 0xa0
 800a188:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a18c:	4638      	mov	r0, r7
 800a18e:	f00a fd2c 	bl	8014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a192:	f8d4 327c 	ldr.w	r3, [r4, #636]	; 0x27c
 800a196:	2b20      	cmp	r3, #32
 800a198:	d005      	beq.n	800a1a6 <_ZN20Project_InfoViewBaseC1Ev+0x3d2>
        lineWidthQ5 = widthQ5;
 800a19a:	2320      	movs	r3, #32
 800a19c:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
        updateCachedShape();
 800a1a0:	4638      	mov	r0, r7
 800a1a2:	f00a fc21 	bl	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a1a6:	4638      	mov	r0, r7
 800a1a8:	2101      	movs	r1, #1
 800a1aa:	f00a fd29 	bl	8014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a1ae:	4639      	mov	r1, r7
 800a1b0:	4630      	mov	r0, r6
 800a1b2:	f008 fb2d 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a1b6:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800a1ba:	ee18 0a90 	vmov	r0, s17
 800a1be:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800a1c0:	2700      	movs	r7, #0
 800a1c2:	2145      	movs	r1, #69	; 0x45
 800a1c4:	f7f9 fa58 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800a1c8:	ee18 1a90 	vmov	r1, s17
 800a1cc:	4628      	mov	r0, r5
        color = newColor;
 800a1ce:	f8c4 82f4 	str.w	r8, [r4, #756]	; 0x2f4
        linespace = space;
 800a1d2:	f8a4 72f8 	strh.w	r7, [r4, #760]	; 0x2f8
        boundingArea = calculateBoundingArea();
 800a1d6:	f00a fea9 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a1da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a1de:	ee18 3a90 	vmov	r3, s17
 800a1e2:	333c      	adds	r3, #60	; 0x3c
 800a1e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a1e8:	2367      	movs	r3, #103	; 0x67
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800a1ea:	ee18 0a90 	vmov	r0, s17
 800a1ee:	a90a      	add	r1, sp, #40	; 0x28
 800a1f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a1f4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a1f8:	f00b f932 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a1fc:	ee18 1a90 	vmov	r1, s17
 800a200:	4630      	mov	r0, r6
 800a202:	f008 fb05 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800a206:	ee19 0a10 	vmov	r0, s18
 800a20a:	220c      	movs	r2, #12
 800a20c:	2136      	movs	r1, #54	; 0x36
 800a20e:	f7f9 fa33 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800a212:	ee19 1a10 	vmov	r1, s18
 800a216:	4628      	mov	r0, r5
        color = newColor;
 800a218:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 800a21c:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 800a220:	f00a fe84 	bl	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a224:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a228:	ee19 3a10 	vmov	r3, s18
 800a22c:	333c      	adds	r3, #60	; 0x3c
 800a22e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a232:	2366      	movs	r3, #102	; 0x66
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800a234:	ee19 0a10 	vmov	r0, s18
 800a238:	a90a      	add	r1, sp, #40	; 0x28
 800a23a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a23e:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a242:	f00b f90d 	bl	8015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a246:	4630      	mov	r0, r6
 800a248:	ee19 1a10 	vmov	r1, s18
 800a24c:	f008 fae0 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a250:	4620      	mov	r0, r4
 800a252:	b00d      	add	sp, #52	; 0x34
 800a254:	ecbd 8b06 	vpop	{d8-d10}
 800a258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a25c:	200138a0 	.word	0x200138a0
 800a260:	0802f4a1 	.word	0x0802f4a1
 800a264:	0802f514 	.word	0x0802f514

0800a268 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 800a268:	4770      	bx	lr

0800a26a <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800a26a:	4770      	bx	lr

0800a26c <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a26c:	b510      	push	{r4, lr}
}
 800a26e:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a270:	4604      	mov	r4, r0
}
 800a272:	f022 fc8e 	bl	802cb92 <_ZdlPvj>
 800a276:	4620      	mov	r0, r4
 800a278:	bd10      	pop	{r4, pc}
	...

0800a27c <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800a27c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a280:	4604      	mov	r4, r0
 800a282:	4626      	mov	r6, r4
 800a284:	f010 f81c 	bl	801a2c0 <_ZN8touchgfx6ScreenC1Ev>
 800a288:	2500      	movs	r5, #0
 800a28a:	4b2e      	ldr	r3, [pc, #184]	; (800a344 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800a28c:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a28e:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a292:	4b2d      	ldr	r3, [pc, #180]	; (800a348 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800a294:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800a296:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800a29a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800a29e:	23ff      	movs	r3, #255	; 0xff
 800a2a0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800a2a4:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800a2a8:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800a2ac:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800a2b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800a2b4:	4a25      	ldr	r2, [pc, #148]	; (800a34c <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800a2b6:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a2ba:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800a2be:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800a2c0:	a901      	add	r1, sp, #4
 800a2c2:	4638      	mov	r0, r7
 800a2c4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800a2c8:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800a2cc:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800a2d0:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800a2d4:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 800a2d8:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800a2dc:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800a2e0:	66a5      	str	r5, [r4, #104]	; 0x68
 800a2e2:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a2e6:	f00b fe6c 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800a2ea:	462a      	mov	r2, r5
 800a2ec:	4629      	mov	r1, r5
 800a2ee:	4630      	mov	r0, r6
 800a2f0:	f7f9 f9c2 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a2f4:	4630      	mov	r0, r6
 800a2f6:	21f0      	movs	r1, #240	; 0xf0
 800a2f8:	f7f8 ff3e 	bl	8003178 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800a2fc:	4630      	mov	r0, r6
 800a2fe:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a302:	f7f8 ff3b 	bl	800317c <_ZN8touchgfx8Drawable9setHeightEs>
 800a306:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800a30a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a30e:	66a3      	str	r3, [r4, #104]	; 0x68
 800a310:	4631      	mov	r1, r6
 800a312:	4640      	mov	r0, r8
 800a314:	f008 fa7c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_shutdown.setXY(-3, 0);
 800a318:	462a      	mov	r2, r5
 800a31a:	4638      	mov	r0, r7
 800a31c:	f06f 0102 	mvn.w	r1, #2
 800a320:	f7f9 f9aa 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 800a324:	230b      	movs	r3, #11
    image_shutdown.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 800a326:	a901      	add	r1, sp, #4
 800a328:	4638      	mov	r0, r7
 800a32a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a32e:	f00b fe48 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a332:	4640      	mov	r0, r8
 800a334:	4639      	mov	r1, r7
 800a336:	f008 fa6b 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a33a:	4620      	mov	r0, r4
 800a33c:	b002      	add	sp, #8
 800a33e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a342:	bf00      	nop
 800a344:	08030d50 	.word	0x08030d50
 800a348:	08031a70 	.word	0x08031a70
 800a34c:	08031cbc 	.word	0x08031cbc

0800a350 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a350:	4770      	bx	lr
	...

0800a354 <_Z23getFont_verdana_10_4bppv>:
{
 800a354:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a356:	4d17      	ldr	r5, [pc, #92]	; (800a3b4 <_Z23getFont_verdana_10_4bppv+0x60>)
 800a358:	682c      	ldr	r4, [r5, #0]
 800a35a:	f3bf 8f5b 	dmb	ish
 800a35e:	f014 0401 	ands.w	r4, r4, #1
{
 800a362:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a364:	d122      	bne.n	800a3ac <_Z23getFont_verdana_10_4bppv+0x58>
 800a366:	4628      	mov	r0, r5
 800a368:	f022 fc15 	bl	802cb96 <__cxa_guard_acquire>
 800a36c:	b1f0      	cbz	r0, 800a3ac <_Z23getFont_verdana_10_4bppv+0x58>
 800a36e:	233f      	movs	r3, #63	; 0x3f
 800a370:	9309      	str	r3, [sp, #36]	; 0x24
 800a372:	4b11      	ldr	r3, [pc, #68]	; (800a3b8 <_Z23getFont_verdana_10_4bppv+0x64>)
 800a374:	9308      	str	r3, [sp, #32]
 800a376:	4b11      	ldr	r3, [pc, #68]	; (800a3bc <_Z23getFont_verdana_10_4bppv+0x68>)
 800a378:	9307      	str	r3, [sp, #28]
 800a37a:	2301      	movs	r3, #1
 800a37c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a380:	9304      	str	r3, [sp, #16]
 800a382:	2304      	movs	r3, #4
 800a384:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a388:	230a      	movs	r3, #10
 800a38a:	490d      	ldr	r1, [pc, #52]	; (800a3c0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a38c:	9300      	str	r3, [sp, #0]
 800a38e:	225f      	movs	r2, #95	; 0x5f
 800a390:	230c      	movs	r3, #12
 800a392:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a396:	480b      	ldr	r0, [pc, #44]	; (800a3c4 <_Z23getFont_verdana_10_4bppv+0x70>)
 800a398:	940a      	str	r4, [sp, #40]	; 0x28
 800a39a:	9401      	str	r4, [sp, #4]
 800a39c:	f7fc f9da 	bl	8006754 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a3a0:	4809      	ldr	r0, [pc, #36]	; (800a3c8 <_Z23getFont_verdana_10_4bppv+0x74>)
 800a3a2:	f023 fafb 	bl	802d99c <atexit>
 800a3a6:	4628      	mov	r0, r5
 800a3a8:	f022 fc01 	bl	802cbae <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800a3ac:	4805      	ldr	r0, [pc, #20]	; (800a3c4 <_Z23getFont_verdana_10_4bppv+0x70>)
 800a3ae:	b00f      	add	sp, #60	; 0x3c
 800a3b0:	bd30      	pop	{r4, r5, pc}
 800a3b2:	bf00      	nop
 800a3b4:	2000293c 	.word	0x2000293c
 800a3b8:	08049960 	.word	0x08049960
 800a3bc:	08049b9c 	.word	0x08049b9c
 800a3c0:	080489a8 	.word	0x080489a8
 800a3c4:	20002940 	.word	0x20002940
 800a3c8:	0800a351 	.word	0x0800a351

0800a3cc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a3cc:	4770      	bx	lr
	...

0800a3d0 <_Z23getFont_verdana_12_4bppv>:
{
 800a3d0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a3d2:	4d17      	ldr	r5, [pc, #92]	; (800a430 <_Z23getFont_verdana_12_4bppv+0x60>)
 800a3d4:	682c      	ldr	r4, [r5, #0]
 800a3d6:	f3bf 8f5b 	dmb	ish
 800a3da:	f014 0401 	ands.w	r4, r4, #1
{
 800a3de:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a3e0:	d122      	bne.n	800a428 <_Z23getFont_verdana_12_4bppv+0x58>
 800a3e2:	4628      	mov	r0, r5
 800a3e4:	f022 fbd7 	bl	802cb96 <__cxa_guard_acquire>
 800a3e8:	b1f0      	cbz	r0, 800a428 <_Z23getFont_verdana_12_4bppv+0x58>
 800a3ea:	233f      	movs	r3, #63	; 0x3f
 800a3ec:	9309      	str	r3, [sp, #36]	; 0x24
 800a3ee:	4b11      	ldr	r3, [pc, #68]	; (800a434 <_Z23getFont_verdana_12_4bppv+0x64>)
 800a3f0:	9308      	str	r3, [sp, #32]
 800a3f2:	4b11      	ldr	r3, [pc, #68]	; (800a438 <_Z23getFont_verdana_12_4bppv+0x68>)
 800a3f4:	9307      	str	r3, [sp, #28]
 800a3f6:	2301      	movs	r3, #1
 800a3f8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a3fc:	9304      	str	r3, [sp, #16]
 800a3fe:	2304      	movs	r3, #4
 800a400:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a404:	230c      	movs	r3, #12
 800a406:	490d      	ldr	r1, [pc, #52]	; (800a43c <_Z23getFont_verdana_12_4bppv+0x6c>)
 800a408:	9300      	str	r3, [sp, #0]
 800a40a:	2260      	movs	r2, #96	; 0x60
 800a40c:	230f      	movs	r3, #15
 800a40e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a412:	480b      	ldr	r0, [pc, #44]	; (800a440 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a414:	940a      	str	r4, [sp, #40]	; 0x28
 800a416:	9401      	str	r4, [sp, #4]
 800a418:	f7fc f99c 	bl	8006754 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a41c:	4809      	ldr	r0, [pc, #36]	; (800a444 <_Z23getFont_verdana_12_4bppv+0x74>)
 800a41e:	f023 fabd 	bl	802d99c <atexit>
 800a422:	4628      	mov	r0, r5
 800a424:	f022 fbc3 	bl	802cbae <__cxa_guard_release>
    return verdana_12_4bpp;
}
 800a428:	4805      	ldr	r0, [pc, #20]	; (800a440 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a42a:	b00f      	add	sp, #60	; 0x3c
 800a42c:	bd30      	pop	{r4, r5, pc}
 800a42e:	bf00      	nop
 800a430:	2000296c 	.word	0x2000296c
 800a434:	08049994 	.word	0x08049994
 800a438:	08049ba0 	.word	0x08049ba0
 800a43c:	08048edc 	.word	0x08048edc
 800a440:	20002970 	.word	0x20002970
 800a444:	0800a3cd 	.word	0x0800a3cd

0800a448 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a448:	4770      	bx	lr
	...

0800a44c <_Z23getFont_verdana_19_4bppv>:
{
 800a44c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a44e:	4d17      	ldr	r5, [pc, #92]	; (800a4ac <_Z23getFont_verdana_19_4bppv+0x60>)
 800a450:	682c      	ldr	r4, [r5, #0]
 800a452:	f3bf 8f5b 	dmb	ish
 800a456:	f014 0401 	ands.w	r4, r4, #1
{
 800a45a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a45c:	d122      	bne.n	800a4a4 <_Z23getFont_verdana_19_4bppv+0x58>
 800a45e:	4628      	mov	r0, r5
 800a460:	f022 fb99 	bl	802cb96 <__cxa_guard_acquire>
 800a464:	b1f0      	cbz	r0, 800a4a4 <_Z23getFont_verdana_19_4bppv+0x58>
 800a466:	233f      	movs	r3, #63	; 0x3f
 800a468:	9309      	str	r3, [sp, #36]	; 0x24
 800a46a:	4b11      	ldr	r3, [pc, #68]	; (800a4b0 <_Z23getFont_verdana_19_4bppv+0x64>)
 800a46c:	9308      	str	r3, [sp, #32]
 800a46e:	4b11      	ldr	r3, [pc, #68]	; (800a4b4 <_Z23getFont_verdana_19_4bppv+0x68>)
 800a470:	9307      	str	r3, [sp, #28]
 800a472:	2301      	movs	r3, #1
 800a474:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a478:	9304      	str	r3, [sp, #16]
 800a47a:	2304      	movs	r3, #4
 800a47c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a480:	2313      	movs	r3, #19
 800a482:	490d      	ldr	r1, [pc, #52]	; (800a4b8 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800a484:	9300      	str	r3, [sp, #0]
 800a486:	225f      	movs	r2, #95	; 0x5f
 800a488:	2317      	movs	r3, #23
 800a48a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a48e:	480b      	ldr	r0, [pc, #44]	; (800a4bc <_Z23getFont_verdana_19_4bppv+0x70>)
 800a490:	940a      	str	r4, [sp, #40]	; 0x28
 800a492:	9401      	str	r4, [sp, #4]
 800a494:	f7fc f95e 	bl	8006754 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a498:	4809      	ldr	r0, [pc, #36]	; (800a4c0 <_Z23getFont_verdana_19_4bppv+0x74>)
 800a49a:	f023 fa7f 	bl	802d99c <atexit>
 800a49e:	4628      	mov	r0, r5
 800a4a0:	f022 fb85 	bl	802cbae <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800a4a4:	4805      	ldr	r0, [pc, #20]	; (800a4bc <_Z23getFont_verdana_19_4bppv+0x70>)
 800a4a6:	b00f      	add	sp, #60	; 0x3c
 800a4a8:	bd30      	pop	{r4, r5, pc}
 800a4aa:	bf00      	nop
 800a4ac:	2000299c 	.word	0x2000299c
 800a4b0:	08049a18 	.word	0x08049a18
 800a4b4:	08049ba4 	.word	0x08049ba4
 800a4b8:	0804941c 	.word	0x0804941c
 800a4bc:	200029a0 	.word	0x200029a0
 800a4c0:	0800a449 	.word	0x0800a449

0800a4c4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a4c4:	4770      	bx	lr
	...

0800a4c8 <_Z23getFont_verdana_40_4bppv>:
{
 800a4c8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a4ca:	4d16      	ldr	r5, [pc, #88]	; (800a524 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800a4cc:	682c      	ldr	r4, [r5, #0]
 800a4ce:	f3bf 8f5b 	dmb	ish
 800a4d2:	f014 0401 	ands.w	r4, r4, #1
{
 800a4d6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a4d8:	d120      	bne.n	800a51c <_Z23getFont_verdana_40_4bppv+0x54>
 800a4da:	4628      	mov	r0, r5
 800a4dc:	f022 fb5b 	bl	802cb96 <__cxa_guard_acquire>
 800a4e0:	b1e0      	cbz	r0, 800a51c <_Z23getFont_verdana_40_4bppv+0x54>
 800a4e2:	233f      	movs	r3, #63	; 0x3f
 800a4e4:	9309      	str	r3, [sp, #36]	; 0x24
 800a4e6:	4b10      	ldr	r3, [pc, #64]	; (800a528 <_Z23getFont_verdana_40_4bppv+0x60>)
 800a4e8:	9308      	str	r3, [sp, #32]
 800a4ea:	4b10      	ldr	r3, [pc, #64]	; (800a52c <_Z23getFont_verdana_40_4bppv+0x64>)
 800a4ec:	4910      	ldr	r1, [pc, #64]	; (800a530 <_Z23getFont_verdana_40_4bppv+0x68>)
 800a4ee:	4811      	ldr	r0, [pc, #68]	; (800a534 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a4f0:	940a      	str	r4, [sp, #40]	; 0x28
 800a4f2:	2201      	movs	r2, #1
 800a4f4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a4f8:	2304      	movs	r3, #4
 800a4fa:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a4fe:	2328      	movs	r3, #40	; 0x28
 800a500:	9300      	str	r3, [sp, #0]
 800a502:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a506:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a50a:	9405      	str	r4, [sp, #20]
 800a50c:	f7fc f922 	bl	8006754 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a510:	4809      	ldr	r0, [pc, #36]	; (800a538 <_Z23getFont_verdana_40_4bppv+0x70>)
 800a512:	f023 fa43 	bl	802d99c <atexit>
 800a516:	4628      	mov	r0, r5
 800a518:	f022 fb49 	bl	802cbae <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800a51c:	4805      	ldr	r0, [pc, #20]	; (800a534 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a51e:	b00f      	add	sp, #60	; 0x3c
 800a520:	bd30      	pop	{r4, r5, pc}
 800a522:	bf00      	nop
 800a524:	200029cc 	.word	0x200029cc
 800a528:	08049b98 	.word	0x08049b98
 800a52c:	08049ba8 	.word	0x08049ba8
 800a530:	08049950 	.word	0x08049950
 800a534:	200029d0 	.word	0x200029d0
 800a538:	0800a4c5 	.word	0x0800a4c5

0800a53c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800a53c:	2000      	movs	r0, #0
 800a53e:	4770      	bx	lr

0800a540 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800a540:	2000      	movs	r0, #0
 800a542:	4770      	bx	lr

0800a544 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a544:	b40e      	push	{r1, r2, r3}
 800a546:	b503      	push	{r0, r1, lr}
 800a548:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a54a:	2100      	movs	r1, #0
{
 800a54c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800a550:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a552:	f00f f9f3 	bl	801993c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a556:	b002      	add	sp, #8
 800a558:	f85d eb04 	ldr.w	lr, [sp], #4
 800a55c:	b003      	add	sp, #12
 800a55e:	4770      	bx	lr

0800a560 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a560:	b40c      	push	{r2, r3}
 800a562:	b507      	push	{r0, r1, r2, lr}
 800a564:	ab04      	add	r3, sp, #16
 800a566:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a56a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a56c:	f00f f9e6 	bl	801993c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a570:	b003      	add	sp, #12
 800a572:	f85d eb04 	ldr.w	lr, [sp], #4
 800a576:	b002      	add	sp, #8
 800a578:	4770      	bx	lr
	...

0800a57c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800a57c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800a57e:	b510      	push	{r4, lr}
 800a580:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800a582:	b373      	cbz	r3, 800a5e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a584:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800a586:	b92b      	cbnz	r3, 800a594 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800a588:	4b18      	ldr	r3, [pc, #96]	; (800a5ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800a58a:	4a19      	ldr	r2, [pc, #100]	; (800a5f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800a58c:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a58e:	4819      	ldr	r0, [pc, #100]	; (800a5f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800a590:	f023 f9e6 	bl	802d960 <__assert_func>
            return buffer[pos];
 800a594:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800a596:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a59a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800a59c:	b30b      	cbz	r3, 800a5e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800a59e:	f010 fe08 	bl	801b1b2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800a5a2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800a5a4:	2b01      	cmp	r3, #1
 800a5a6:	d803      	bhi.n	800a5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800a5a8:	4b13      	ldr	r3, [pc, #76]	; (800a5f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800a5aa:	4a14      	ldr	r2, [pc, #80]	; (800a5fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800a5ac:	21cb      	movs	r1, #203	; 0xcb
 800a5ae:	e7ee      	b.n	800a58e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800a5b0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a5b2:	1c53      	adds	r3, r2, #1
 800a5b4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800a5b6:	2b09      	cmp	r3, #9
 800a5b8:	4619      	mov	r1, r3
 800a5ba:	bf88      	it	hi
 800a5bc:	f1a3 010a 	subhi.w	r1, r3, #10
 800a5c0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a5c4:	f640 103f 	movw	r0, #2367	; 0x93f
 800a5c8:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800a5ca:	4281      	cmp	r1, r0
 800a5cc:	d109      	bne.n	800a5e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800a5ce:	2b0a      	cmp	r3, #10
 800a5d0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800a5d4:	bf28      	it	cs
 800a5d6:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800a5d8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800a5dc:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800a5de:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800a5e0:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a5e2:	4620      	mov	r0, r4
}
 800a5e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800a5e8:	f010 bce6 	b.w	801afb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a5ec:	08030d7c 	.word	0x08030d7c
 800a5f0:	08030d85 	.word	0x08030d85
 800a5f4:	08030e30 	.word	0x08030e30
 800a5f8:	08030e7a 	.word	0x08030e7a
 800a5fc:	08030e88 	.word	0x08030e88

0800a600 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800a600:	f010 bca1 	b.w	801af46 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800a604 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a604:	b510      	push	{r4, lr}
 800a606:	b086      	sub	sp, #24
 800a608:	ac02      	add	r4, sp, #8
 800a60a:	e884 0006 	stmia.w	r4, {r1, r2}
 800a60e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a610:	ab0a      	add	r3, sp, #40	; 0x28
 800a612:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a614:	9301      	str	r3, [sp, #4]
 800a616:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a618:	9300      	str	r3, [sp, #0]
 800a61a:	4621      	mov	r1, r4
 800a61c:	9b08      	ldr	r3, [sp, #32]
 800a61e:	f00d fd51 	bl	80180c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a622:	b006      	add	sp, #24
 800a624:	bd10      	pop	{r4, pc}
	...

0800a628 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a628:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a62a:	bb18      	cbnz	r0, 800a674 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800a62c:	4b12      	ldr	r3, [pc, #72]	; (800a678 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800a62e:	4813      	ldr	r0, [pc, #76]	; (800a67c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800a630:	681c      	ldr	r4, [r3, #0]
 800a632:	4913      	ldr	r1, [pc, #76]	; (800a680 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800a634:	b1b4      	cbz	r4, 800a664 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a636:	6822      	ldr	r2, [r4, #0]
 800a638:	4422      	add	r2, r4
 800a63a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a63c:	6862      	ldr	r2, [r4, #4]
 800a63e:	4422      	add	r2, r4
 800a640:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a642:	68a2      	ldr	r2, [r4, #8]
 800a644:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a646:	4b0f      	ldr	r3, [pc, #60]	; (800a684 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a648:	2200      	movs	r2, #0
 800a64a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a64c:	f000 f838 	bl	800a6c0 <_ZN17TypedTextDatabase8getFontsEv>
 800a650:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a652:	f000 f833 	bl	800a6bc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a656:	4b0c      	ldr	r3, [pc, #48]	; (800a688 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a658:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a65a:	4b0c      	ldr	r3, [pc, #48]	; (800a68c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a65c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a65e:	4b0c      	ldr	r3, [pc, #48]	; (800a690 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a660:	8018      	strh	r0, [r3, #0]
    }
}
 800a662:	e007      	b.n	800a674 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800a664:	4b0b      	ldr	r3, [pc, #44]	; (800a694 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a666:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a668:	4b0b      	ldr	r3, [pc, #44]	; (800a698 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a66a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a66c:	4b0b      	ldr	r3, [pc, #44]	; (800a69c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a66e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800a670:	2c00      	cmp	r4, #0
 800a672:	d1e8      	bne.n	800a646 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800a674:	bd38      	pop	{r3, r4, r5, pc}
 800a676:	bf00      	nop
 800a678:	200029fc 	.word	0x200029fc
 800a67c:	20002a00 	.word	0x20002a00
 800a680:	20002a04 	.word	0x20002a04
 800a684:	20002a08 	.word	0x20002a08
 800a688:	20013894 	.word	0x20013894
 800a68c:	2001389c 	.word	0x2001389c
 800a690:	20013898 	.word	0x20013898
 800a694:	08049d74 	.word	0x08049d74
 800a698:	08049bac 	.word	0x08049bac
 800a69c:	0804a2dc 	.word	0x0804a2dc

0800a6a0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a6a0:	4b04      	ldr	r3, [pc, #16]	; (800a6b4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a6a2:	681b      	ldr	r3, [r3, #0]
 800a6a4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800a6a8:	4b03      	ldr	r3, [pc, #12]	; (800a6b8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a6aa:	681b      	ldr	r3, [r3, #0]
}
 800a6ac:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a6b0:	4770      	bx	lr
 800a6b2:	bf00      	nop
 800a6b4:	20002a04 	.word	0x20002a04
 800a6b8:	20002a00 	.word	0x20002a00

0800a6bc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800a6bc:	2072      	movs	r0, #114	; 0x72
 800a6be:	4770      	bx	lr

0800a6c0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800a6c0:	4800      	ldr	r0, [pc, #0]	; (800a6c4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a6c2:	4770      	bx	lr
 800a6c4:	20002a0c 	.word	0x20002a0c

0800a6c8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a6c8:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800a6ca:	f7ff febf 	bl	800a44c <_Z23getFont_verdana_19_4bppv>
};
 800a6ce:	4c06      	ldr	r4, [pc, #24]	; (800a6e8 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800a6d0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800a6d2:	f7ff fef9 	bl	800a4c8 <_Z23getFont_verdana_40_4bppv>
};
 800a6d6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800a6d8:	f7ff fe3c 	bl	800a354 <_Z23getFont_verdana_10_4bppv>
};
 800a6dc:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800a6de:	f7ff fe77 	bl	800a3d0 <_Z23getFont_verdana_12_4bppv>
};
 800a6e2:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800a6e4:	bd10      	pop	{r4, pc}
 800a6e6:	bf00      	nop
 800a6e8:	20002a0c 	.word	0x20002a0c

0800a6ec <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800a6ec:	4770      	bx	lr

0800a6ee <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800a6ee:	3804      	subs	r0, #4
 800a6f0:	4770      	bx	lr

0800a6f2 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800a6f2:	4770      	bx	lr

0800a6f4 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800a6f4:	4770      	bx	lr

0800a6f6 <_ZN24Calibration_PadPresenterD0Ev>:
 800a6f6:	b510      	push	{r4, lr}
 800a6f8:	2110      	movs	r1, #16
 800a6fa:	4604      	mov	r4, r0
 800a6fc:	f022 fa49 	bl	802cb92 <_ZdlPvj>
 800a700:	4620      	mov	r0, r4
 800a702:	bd10      	pop	{r4, pc}

0800a704 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800a704:	f1a0 0004 	sub.w	r0, r0, #4
 800a708:	e7f5      	b.n	800a6f6 <_ZN24Calibration_PadPresenterD0Ev>

0800a70a <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800a70a:	4770      	bx	lr

0800a70c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800a70c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800a70e:	2200      	movs	r2, #0
 800a710:	6082      	str	r2, [r0, #8]
    : view(v)
 800a712:	4a04      	ldr	r2, [pc, #16]	; (800a724 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800a714:	60c1      	str	r1, [r0, #12]
 800a716:	f102 0408 	add.w	r4, r2, #8
 800a71a:	3224      	adds	r2, #36	; 0x24
 800a71c:	6004      	str	r4, [r0, #0]
 800a71e:	6042      	str	r2, [r0, #4]
}
 800a720:	bd10      	pop	{r4, pc}
 800a722:	bf00      	nop
 800a724:	08030f5c 	.word	0x08030f5c

0800a728 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800a728:	4770      	bx	lr

0800a72a <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800a72a:	4770      	bx	lr

0800a72c <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800a72c:	b510      	push	{r4, lr}
 800a72e:	4b03      	ldr	r3, [pc, #12]	; (800a73c <_ZN19Calibration_PadViewD1Ev+0x10>)
 800a730:	6003      	str	r3, [r0, #0]
 800a732:	4604      	mov	r4, r0
 800a734:	f7f8 ff4a 	bl	80035cc <_ZN23Calibration_PadViewBaseD1Ev>
 800a738:	4620      	mov	r0, r4
 800a73a:	bd10      	pop	{r4, pc}
 800a73c:	08030f94 	.word	0x08030f94

0800a740 <_ZN19Calibration_PadViewD0Ev>:
 800a740:	b510      	push	{r4, lr}
 800a742:	4604      	mov	r4, r0
 800a744:	f7ff fff2 	bl	800a72c <_ZN19Calibration_PadViewD1Ev>
 800a748:	4620      	mov	r0, r4
 800a74a:	f641 5104 	movw	r1, #7428	; 0x1d04
 800a74e:	f022 fa20 	bl	802cb92 <_ZdlPvj>
 800a752:	4620      	mov	r0, r4
 800a754:	bd10      	pop	{r4, pc}
	...

0800a758 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800a758:	b510      	push	{r4, lr}
 800a75a:	4604      	mov	r4, r0
 800a75c:	f7f9 fae0 	bl	8003d20 <_ZN23Calibration_PadViewBaseC1Ev>
 800a760:	4b01      	ldr	r3, [pc, #4]	; (800a768 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800a762:	6023      	str	r3, [r4, #0]
}
 800a764:	4620      	mov	r0, r4
 800a766:	bd10      	pop	{r4, pc}
 800a768:	08030f94 	.word	0x08030f94

0800a76c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 800a76c:	b570      	push	{r4, r5, r6, lr}
 800a76e:	4604      	mov	r4, r0
 800a770:	b0ca      	sub	sp, #296	; 0x128
 800a772:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 800a776:	4631      	mov	r1, r6
 800a778:	a80d      	add	r0, sp, #52	; 0x34
 800a77a:	f7f9 f83f 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
 800a77e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800a782:	9317      	str	r3, [sp, #92]	; 0x5c
 800a784:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800a788:	9318      	str	r3, [sp, #96]	; 0x60
 800a78a:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800a78e:	4a57      	ldr	r2, [pc, #348]	; (800a8ec <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 800a790:	9319      	str	r3, [sp, #100]	; 0x64
 800a792:	f504 718c 	add.w	r1, r4, #280	; 0x118
 800a796:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800a79a:	920d      	str	r2, [sp, #52]	; 0x34
 800a79c:	a81b      	add	r0, sp, #108	; 0x6c
 800a79e:	931a      	str	r3, [sp, #104]	; 0x68
 800a7a0:	f7f9 f82c 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
 800a7a4:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800a7a8:	9325      	str	r3, [sp, #148]	; 0x94
 800a7aa:	4b51      	ldr	r3, [pc, #324]	; (800a8f0 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 800a7ac:	931b      	str	r3, [sp, #108]	; 0x6c
 800a7ae:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 800a7b2:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 800a7b6:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 800a7ba:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 800a7be:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 800a7c2:	a827      	add	r0, sp, #156	; 0x9c
 800a7c4:	f7f9 f81a 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
 800a7c8:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 800a7cc:	9331      	str	r3, [sp, #196]	; 0xc4
 800a7ce:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800a7d2:	4b48      	ldr	r3, [pc, #288]	; (800a8f4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 800a7d4:	9327      	str	r3, [sp, #156]	; 0x9c
 800a7d6:	a832      	add	r0, sp, #200	; 0xc8
 800a7d8:	f7f9 f810 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 800a7dc:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 800a7e0:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 800a7e4:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 800a7e8:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 800a7ec:	4b42      	ldr	r3, [pc, #264]	; (800a8f8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 800a7ee:	9332      	str	r3, [sp, #200]	; 0xc8
 800a7f0:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800a7f4:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 800a7f8:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 800a7fc:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 800a800:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 800a804:	a83e      	add	r0, sp, #248	; 0xf8
 800a806:	f7f8 fff9 	bl	80037fc <_ZN8touchgfx8DrawableC1ERKS0_>
 800a80a:	4b3c      	ldr	r3, [pc, #240]	; (800a8fc <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 800a80c:	933e      	str	r3, [sp, #248]	; 0xf8
 800a80e:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a812:	4d3b      	ldr	r5, [pc, #236]	; (800a900 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 800a814:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 800a818:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 800a81c:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 800a820:	a901      	add	r1, sp, #4
 800a822:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 800a826:	4837      	ldr	r0, [pc, #220]	; (800a904 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 800a828:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 800a82c:	220c      	movs	r2, #12
 800a82e:	f7f6 fb45 	bl	8000ebc <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a832:	9b01      	ldr	r3, [sp, #4]
 800a834:	462a      	mov	r2, r5
 800a836:	210a      	movs	r1, #10
 800a838:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 800a83c:	f011 fa6e 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 800a840:	9b02      	ldr	r3, [sp, #8]
 800a842:	462a      	mov	r2, r5
 800a844:	210a      	movs	r1, #10
 800a846:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 800a84a:	f011 fa67 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 800a84e:	9b03      	ldr	r3, [sp, #12]
 800a850:	462a      	mov	r2, r5
 800a852:	210a      	movs	r1, #10
 800a854:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 800a858:	f011 fa60 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 800a85c:	9b04      	ldr	r3, [sp, #16]
 800a85e:	462a      	mov	r2, r5
 800a860:	210a      	movs	r1, #10
 800a862:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 800a866:	f011 fa59 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 800a86a:	9b05      	ldr	r3, [sp, #20]
 800a86c:	462a      	mov	r2, r5
 800a86e:	210a      	movs	r1, #10
 800a870:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 800a874:	f011 fa52 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 800a878:	9b06      	ldr	r3, [sp, #24]
 800a87a:	462a      	mov	r2, r5
 800a87c:	210a      	movs	r1, #10
 800a87e:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 800a882:	f011 fa4b 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 800a886:	9b07      	ldr	r3, [sp, #28]
 800a888:	462a      	mov	r2, r5
 800a88a:	210a      	movs	r1, #10
 800a88c:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 800a890:	f011 fa44 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 800a894:	9b08      	ldr	r3, [sp, #32]
 800a896:	462a      	mov	r2, r5
 800a898:	210a      	movs	r1, #10
 800a89a:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 800a89e:	f011 fa3d 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 800a8a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a8a4:	462a      	mov	r2, r5
 800a8a6:	210a      	movs	r1, #10
 800a8a8:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 800a8ac:	f011 fa36 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 800a8b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a8b2:	462a      	mov	r2, r5
 800a8b4:	210a      	movs	r1, #10
 800a8b6:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 800a8ba:	f011 fa2f 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 800a8be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a8c0:	462a      	mov	r2, r5
 800a8c2:	210a      	movs	r1, #10
 800a8c4:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800a8c8:	f011 fa28 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 800a8cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a8ce:	462a      	mov	r2, r5
 800a8d0:	210a      	movs	r1, #10
 800a8d2:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 800a8d6:	f011 fa21 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 800a8da:	4630      	mov	r0, r6
 800a8dc:	f00f f958 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>

#endif
}
 800a8e0:	a80d      	add	r0, sp, #52	; 0x34
 800a8e2:	f008 fa23 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
 800a8e6:	b04a      	add	sp, #296	; 0x128
 800a8e8:	bd70      	pop	{r4, r5, r6, pc}
 800a8ea:	bf00      	nop
 800a8ec:	08031618 	.word	0x08031618
 800a8f0:	080316dc 	.word	0x080316dc
 800a8f4:	0802f524 	.word	0x0802f524
 800a8f8:	08031ad8 	.word	0x08031ad8
 800a8fc:	08031cbc 	.word	0x08031cbc
 800a900:	0802f466 	.word	0x0802f466
 800a904:	081e0000 	.word	0x081e0000

0800a908 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800a908:	f7f8 be1f 	b.w	800354a <_ZN23Calibration_PadViewBase11setupScreenEv>

0800a90c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800a90c:	4770      	bx	lr

0800a90e <_ZN19FrontendApplicationD0Ev>:
 800a90e:	b510      	push	{r4, lr}
 800a910:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800a914:	4604      	mov	r4, r0
 800a916:	f022 f93c 	bl	802cb92 <_ZdlPvj>
 800a91a:	4620      	mov	r0, r4
 800a91c:	bd10      	pop	{r4, pc}

0800a91e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800a91e:	b510      	push	{r4, lr}
 800a920:	4604      	mov	r4, r0
    {
        model.tick();
 800a922:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800a926:	f000 fae3 	bl	800aef0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800a92a:	4620      	mov	r0, r4
    }
 800a92c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800a930:	f00e b90a 	b.w	8018b48 <_ZN8touchgfx11Application15handleTickEventEv>

0800a934 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a934:	b510      	push	{r4, lr}
 800a936:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800a938:	f7fa fde6 	bl	8005508 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a93c:	4b01      	ldr	r3, [pc, #4]	; (800a944 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800a93e:	6023      	str	r3, [r4, #0]
{

}
 800a940:	4620      	mov	r0, r4
 800a942:	bd10      	pop	{r4, pc}
 800a944:	08030fd8 	.word	0x08030fd8

0800a948 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800a948:	4770      	bx	lr

0800a94a <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800a94a:	3804      	subs	r0, #4
 800a94c:	4770      	bx	lr

0800a94e <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800a94e:	4770      	bx	lr

0800a950 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800a950:	68c0      	ldr	r0, [r0, #12]
 800a952:	6803      	ldr	r3, [r0, #0]
 800a954:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a956:	4718      	bx	r3

0800a958 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800a958:	f1a0 0004 	sub.w	r0, r0, #4
 800a95c:	f7ff bff8 	b.w	800a950 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800a960 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800a960:	b510      	push	{r4, lr}
 800a962:	2110      	movs	r1, #16
 800a964:	4604      	mov	r4, r0
 800a966:	f022 f914 	bl	802cb92 <_ZdlPvj>
 800a96a:	4620      	mov	r0, r4
 800a96c:	bd10      	pop	{r4, pc}

0800a96e <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800a96e:	f1a0 0004 	sub.w	r0, r0, #4
 800a972:	e7f5      	b.n	800a960 <_ZN18Main_MenuPresenterD0Ev>

0800a974 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800a974:	b510      	push	{r4, lr}
 800a976:	2200      	movs	r2, #0
 800a978:	6082      	str	r2, [r0, #8]
    : view(v)
 800a97a:	4a04      	ldr	r2, [pc, #16]	; (800a98c <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800a97c:	60c1      	str	r1, [r0, #12]
 800a97e:	f102 0408 	add.w	r4, r2, #8
 800a982:	3224      	adds	r2, #36	; 0x24
 800a984:	6004      	str	r4, [r0, #0]
 800a986:	6042      	str	r2, [r0, #4]
}
 800a988:	bd10      	pop	{r4, pc}
 800a98a:	bf00      	nop
 800a98c:	08031024 	.word	0x08031024

0800a990 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800a990:	4770      	bx	lr
	...

0800a994 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 800a994:	b510      	push	{r4, lr}
 800a996:	4b03      	ldr	r3, [pc, #12]	; (800a9a4 <_ZN13Main_MenuViewD1Ev+0x10>)
 800a998:	6003      	str	r3, [r0, #0]
 800a99a:	4604      	mov	r4, r0
 800a99c:	f7fb ff2e 	bl	80067fc <_ZN17Main_MenuViewBaseD1Ev>
 800a9a0:	4620      	mov	r0, r4
 800a9a2:	bd10      	pop	{r4, pc}
 800a9a4:	0803105c 	.word	0x0803105c

0800a9a8 <_ZN13Main_MenuViewD0Ev>:
 800a9a8:	b510      	push	{r4, lr}
 800a9aa:	4604      	mov	r4, r0
 800a9ac:	f7ff fff2 	bl	800a994 <_ZN13Main_MenuViewD1Ev>
 800a9b0:	4620      	mov	r0, r4
 800a9b2:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800a9b6:	f022 f8ec 	bl	802cb92 <_ZdlPvj>
 800a9ba:	4620      	mov	r0, r4
 800a9bc:	bd10      	pop	{r4, pc}
	...

0800a9c0 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800a9c0:	b510      	push	{r4, lr}
 800a9c2:	4604      	mov	r4, r0
 800a9c4:	f7fb ff64 	bl	8006890 <_ZN17Main_MenuViewBaseC1Ev>
 800a9c8:	4b01      	ldr	r3, [pc, #4]	; (800a9d0 <_ZN13Main_MenuViewC1Ev+0x10>)
 800a9ca:	6023      	str	r3, [r4, #0]
}
 800a9cc:	4620      	mov	r0, r4
 800a9ce:	bd10      	pop	{r4, pc}
 800a9d0:	0803105c 	.word	0x0803105c

0800a9d4 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 800a9d4:	f7fb beee 	b.w	80067b4 <_ZN17Main_MenuViewBase11setupScreenEv>

0800a9d8 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800a9d8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a9da:	4a0a      	ldr	r2, [pc, #40]	; (800aa04 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800a9dc:	4605      	mov	r5, r0
 800a9de:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a9e0:	460b      	mov	r3, r1
 800a9e2:	f500 7076 	add.w	r0, r0, #984	; 0x3d8
 800a9e6:	2104      	movs	r1, #4
 800a9e8:	f011 f998 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800a9ec:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800a9f0:	f00f f8ce 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800a9f4:	b92c      	cbnz	r4, 800aa02 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800a9f6:	f00d ffe3 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800a9fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800a9fe:	f7fa be83 	b.w	8005708 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800aa02:	bd38      	pop	{r3, r4, r5, pc}
 800aa04:	0802f466 	.word	0x0802f466

0800aa08 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 800aa08:	4770      	bx	lr

0800aa0a <_ZThn4_N20MeasurementPresenterD1Ev>:
 800aa0a:	3804      	subs	r0, #4
 800aa0c:	4770      	bx	lr

0800aa0e <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800aa0e:	4770      	bx	lr

0800aa10 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800aa10:	68c0      	ldr	r0, [r0, #12]
 800aa12:	6803      	ldr	r3, [r0, #0]
 800aa14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa16:	4718      	bx	r3

0800aa18 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aa18:	f1a0 0004 	sub.w	r0, r0, #4
 800aa1c:	f7ff bff8 	b.w	800aa10 <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800aa20 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800aa20:	b510      	push	{r4, lr}
 800aa22:	2110      	movs	r1, #16
 800aa24:	4604      	mov	r4, r0
 800aa26:	f022 f8b4 	bl	802cb92 <_ZdlPvj>
 800aa2a:	4620      	mov	r0, r4
 800aa2c:	bd10      	pop	{r4, pc}

0800aa2e <_ZThn4_N20MeasurementPresenterD0Ev>:
 800aa2e:	f1a0 0004 	sub.w	r0, r0, #4
 800aa32:	e7f5      	b.n	800aa20 <_ZN20MeasurementPresenterD0Ev>

0800aa34 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800aa34:	b510      	push	{r4, lr}
 800aa36:	2200      	movs	r2, #0
 800aa38:	6082      	str	r2, [r0, #8]
    : view(v)
 800aa3a:	4a04      	ldr	r2, [pc, #16]	; (800aa4c <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800aa3c:	60c1      	str	r1, [r0, #12]
 800aa3e:	f102 0408 	add.w	r4, r2, #8
 800aa42:	3224      	adds	r2, #36	; 0x24
 800aa44:	6004      	str	r4, [r0, #0]
 800aa46:	6042      	str	r2, [r0, #4]
}
 800aa48:	bd10      	pop	{r4, pc}
 800aa4a:	bf00      	nop
 800aa4c:	0803108c 	.word	0x0803108c

0800aa50 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800aa50:	4770      	bx	lr
	...

0800aa54 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800aa54:	b510      	push	{r4, lr}
 800aa56:	4b03      	ldr	r3, [pc, #12]	; (800aa64 <_ZN15MeasurementViewD1Ev+0x10>)
 800aa58:	6003      	str	r3, [r0, #0]
 800aa5a:	4604      	mov	r4, r0
 800aa5c:	f7fc f9d6 	bl	8006e0c <_ZN19MeasurementViewBaseD1Ev>
 800aa60:	4620      	mov	r0, r4
 800aa62:	bd10      	pop	{r4, pc}
 800aa64:	080310c4 	.word	0x080310c4

0800aa68 <_ZN15MeasurementViewD0Ev>:
 800aa68:	b510      	push	{r4, lr}
 800aa6a:	4604      	mov	r4, r0
 800aa6c:	f7ff fff2 	bl	800aa54 <_ZN15MeasurementViewD1Ev>
 800aa70:	4620      	mov	r0, r4
 800aa72:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800aa76:	f022 f88c 	bl	802cb92 <_ZdlPvj>
 800aa7a:	4620      	mov	r0, r4
 800aa7c:	bd10      	pop	{r4, pc}
	...

0800aa80 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800aa80:	b510      	push	{r4, lr}
 800aa82:	4604      	mov	r4, r0
 800aa84:	f7fc f9fc 	bl	8006e80 <_ZN19MeasurementViewBaseC1Ev>
 800aa88:	4b01      	ldr	r3, [pc, #4]	; (800aa90 <_ZN15MeasurementViewC1Ev+0x10>)
 800aa8a:	6023      	str	r3, [r4, #0]
}
 800aa8c:	4620      	mov	r0, r4
 800aa8e:	bd10      	pop	{r4, pc}
 800aa90:	080310c4 	.word	0x080310c4

0800aa94 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 800aa94:	f7fc b996 	b.w	8006dc4 <_ZN19MeasurementViewBase11setupScreenEv>

0800aa98 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800aa98:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aa9a:	4a0a      	ldr	r2, [pc, #40]	; (800aac4 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800aa9c:	4605      	mov	r5, r0
 800aa9e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aaa0:	460b      	mov	r3, r1
 800aaa2:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800aaa6:	2104      	movs	r1, #4
 800aaa8:	f011 f938 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800aaac:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800aab0:	f00f f86e 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800aab4:	b92c      	cbnz	r4, 800aac2 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800aab6:	f00d ff83 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800aaba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800aabe:	f7fa be23 	b.w	8005708 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800aac2:	bd38      	pop	{r3, r4, r5, pc}
 800aac4:	0802f466 	.word	0x0802f466

0800aac8 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800aac8:	4770      	bx	lr

0800aaca <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800aaca:	3804      	subs	r0, #4
 800aacc:	4770      	bx	lr

0800aace <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800aace:	4770      	bx	lr

0800aad0 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800aad0:	68c0      	ldr	r0, [r0, #12]
 800aad2:	6803      	ldr	r3, [r0, #0]
 800aad4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aad6:	4718      	bx	r3

0800aad8 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aad8:	f1a0 0004 	sub.w	r0, r0, #4
 800aadc:	f7ff bff8 	b.w	800aad0 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800aae0 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800aae0:	b510      	push	{r4, lr}
 800aae2:	2110      	movs	r1, #16
 800aae4:	4604      	mov	r4, r0
 800aae6:	f022 f854 	bl	802cb92 <_ZdlPvj>
 800aaea:	4620      	mov	r0, r4
 800aaec:	bd10      	pop	{r4, pc}

0800aaee <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800aaee:	f1a0 0004 	sub.w	r0, r0, #4
 800aaf2:	e7f5      	b.n	800aae0 <_ZN29Measurement_AccuratePresenterD0Ev>

0800aaf4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 800aaf4:	b510      	push	{r4, lr}
 800aaf6:	2200      	movs	r2, #0
 800aaf8:	6082      	str	r2, [r0, #8]
    : view(v)
 800aafa:	4a04      	ldr	r2, [pc, #16]	; (800ab0c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 800aafc:	60c1      	str	r1, [r0, #12]
 800aafe:	f102 0408 	add.w	r4, r2, #8
 800ab02:	3224      	adds	r2, #36	; 0x24
 800ab04:	6004      	str	r4, [r0, #0]
 800ab06:	6042      	str	r2, [r0, #4]
}
 800ab08:	bd10      	pop	{r4, pc}
 800ab0a:	bf00      	nop
 800ab0c:	080310f4 	.word	0x080310f4

0800ab10 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800ab10:	4770      	bx	lr
	...

0800ab14 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 800ab14:	b510      	push	{r4, lr}
 800ab16:	4b03      	ldr	r3, [pc, #12]	; (800ab24 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 800ab18:	6003      	str	r3, [r0, #0]
 800ab1a:	4604      	mov	r4, r0
 800ab1c:	f7fc fc3e 	bl	800739c <_ZN28Measurement_AccurateViewBaseD1Ev>
 800ab20:	4620      	mov	r0, r4
 800ab22:	bd10      	pop	{r4, pc}
 800ab24:	0803112c 	.word	0x0803112c

0800ab28 <_ZN24Measurement_AccurateViewD0Ev>:
 800ab28:	b510      	push	{r4, lr}
 800ab2a:	4604      	mov	r4, r0
 800ab2c:	f7ff fff2 	bl	800ab14 <_ZN24Measurement_AccurateViewD1Ev>
 800ab30:	4620      	mov	r0, r4
 800ab32:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ab36:	f022 f82c 	bl	802cb92 <_ZdlPvj>
 800ab3a:	4620      	mov	r0, r4
 800ab3c:	bd10      	pop	{r4, pc}
	...

0800ab40 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800ab40:	b510      	push	{r4, lr}
 800ab42:	4604      	mov	r4, r0
 800ab44:	f7fc fc64 	bl	8007410 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800ab48:	4b01      	ldr	r3, [pc, #4]	; (800ab50 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800ab4a:	6023      	str	r3, [r4, #0]
}
 800ab4c:	4620      	mov	r0, r4
 800ab4e:	bd10      	pop	{r4, pc}
 800ab50:	0803112c 	.word	0x0803112c

0800ab54 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800ab54:	f7fc bbfe 	b.w	8007354 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800ab58 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800ab58:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab5a:	4a0a      	ldr	r2, [pc, #40]	; (800ab84 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800ab5c:	4605      	mov	r5, r0
 800ab5e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab60:	460b      	mov	r3, r1
 800ab62:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ab66:	2104      	movs	r1, #4
 800ab68:	f011 f8d8 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ab6c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ab70:	f00f f80e 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ab74:	b92c      	cbnz	r4, 800ab82 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800ab76:	f00d ff23 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ab7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ab7e:	f7fa bdc3 	b.w	8005708 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ab82:	bd38      	pop	{r3, r4, r5, pc}
 800ab84:	0802f466 	.word	0x0802f466

0800ab88 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800ab88:	4770      	bx	lr

0800ab8a <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800ab8a:	3804      	subs	r0, #4
 800ab8c:	4770      	bx	lr

0800ab8e <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800ab8e:	4770      	bx	lr

0800ab90 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800ab90:	4770      	bx	lr

0800ab92 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800ab92:	b510      	push	{r4, lr}
 800ab94:	2110      	movs	r1, #16
 800ab96:	4604      	mov	r4, r0
 800ab98:	f021 fffb 	bl	802cb92 <_ZdlPvj>
 800ab9c:	4620      	mov	r0, r4
 800ab9e:	bd10      	pop	{r4, pc}

0800aba0 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800aba0:	f1a0 0004 	sub.w	r0, r0, #4
 800aba4:	e7f5      	b.n	800ab92 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800aba6 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800aba6:	4770      	bx	lr

0800aba8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800aba8:	b510      	push	{r4, lr}
 800abaa:	2200      	movs	r2, #0
 800abac:	6082      	str	r2, [r0, #8]
    : view(v)
 800abae:	4a04      	ldr	r2, [pc, #16]	; (800abc0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800abb0:	60c1      	str	r1, [r0, #12]
 800abb2:	f102 0408 	add.w	r4, r2, #8
 800abb6:	3224      	adds	r2, #36	; 0x24
 800abb8:	6004      	str	r4, [r0, #0]
 800abba:	6042      	str	r2, [r0, #4]
}
 800abbc:	bd10      	pop	{r4, pc}
 800abbe:	bf00      	nop
 800abc0:	0803115c 	.word	0x0803115c

0800abc4 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800abc4:	4770      	bx	lr
	...

0800abc8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800abc8:	b510      	push	{r4, lr}
 800abca:	4b03      	ldr	r3, [pc, #12]	; (800abd8 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 800abcc:	6003      	str	r3, [r0, #0]
 800abce:	4604      	mov	r4, r0
 800abd0:	f7fc feac 	bl	800792c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800abd4:	4620      	mov	r0, r4
 800abd6:	bd10      	pop	{r4, pc}
 800abd8:	08031194 	.word	0x08031194

0800abdc <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 800abdc:	b510      	push	{r4, lr}
 800abde:	4604      	mov	r4, r0
 800abe0:	f7ff fff2 	bl	800abc8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800abe4:	4620      	mov	r0, r4
 800abe6:	f241 4178 	movw	r1, #5240	; 0x1478
 800abea:	f021 ffd2 	bl	802cb92 <_ZdlPvj>
 800abee:	4620      	mov	r0, r4
 800abf0:	bd10      	pop	{r4, pc}
	...

0800abf4 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 800abf4:	b510      	push	{r4, lr}
 800abf6:	4604      	mov	r4, r0
 800abf8:	f7fc fec0 	bl	800797c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800abfc:	4b01      	ldr	r3, [pc, #4]	; (800ac04 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800abfe:	6023      	str	r3, [r4, #0]
}
 800ac00:	4620      	mov	r0, r4
 800ac02:	bd10      	pop	{r4, pc}
 800ac04:	08031194 	.word	0x08031194

0800ac08 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800ac08:	f7fc be6c 	b.w	80078e4 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800ac0c <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800ac0c:	4770      	bx	lr

0800ac0e <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800ac0e:	3804      	subs	r0, #4
 800ac10:	4770      	bx	lr

0800ac12 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800ac12:	4770      	bx	lr

0800ac14 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 800ac14:	4770      	bx	lr

0800ac16 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800ac16:	b510      	push	{r4, lr}
 800ac18:	2110      	movs	r1, #16
 800ac1a:	4604      	mov	r4, r0
 800ac1c:	f021 ffb9 	bl	802cb92 <_ZdlPvj>
 800ac20:	4620      	mov	r0, r4
 800ac22:	bd10      	pop	{r4, pc}

0800ac24 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 800ac24:	f1a0 0004 	sub.w	r0, r0, #4
 800ac28:	e7f5      	b.n	800ac16 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800ac2a <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800ac2a:	4770      	bx	lr

0800ac2c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800ac2c:	b510      	push	{r4, lr}
 800ac2e:	2200      	movs	r2, #0
 800ac30:	6082      	str	r2, [r0, #8]
    : view(v)
 800ac32:	4a04      	ldr	r2, [pc, #16]	; (800ac44 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 800ac34:	60c1      	str	r1, [r0, #12]
 800ac36:	f102 0408 	add.w	r4, r2, #8
 800ac3a:	3224      	adds	r2, #36	; 0x24
 800ac3c:	6004      	str	r4, [r0, #0]
 800ac3e:	6042      	str	r2, [r0, #4]
}
 800ac40:	bd10      	pop	{r4, pc}
 800ac42:	bf00      	nop
 800ac44:	080311c0 	.word	0x080311c0

0800ac48 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800ac48:	4770      	bx	lr
	...

0800ac4c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800ac4c:	b510      	push	{r4, lr}
 800ac4e:	4b03      	ldr	r3, [pc, #12]	; (800ac5c <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800ac50:	6003      	str	r3, [r0, #0]
 800ac52:	4604      	mov	r4, r0
 800ac54:	f7fd fa42 	bl	80080dc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800ac58:	4620      	mov	r0, r4
 800ac5a:	bd10      	pop	{r4, pc}
 800ac5c:	080311f8 	.word	0x080311f8

0800ac60 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800ac60:	b510      	push	{r4, lr}
 800ac62:	4604      	mov	r4, r0
 800ac64:	f7ff fff2 	bl	800ac4c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800ac68:	4620      	mov	r0, r4
 800ac6a:	f241 4178 	movw	r1, #5240	; 0x1478
 800ac6e:	f021 ff90 	bl	802cb92 <_ZdlPvj>
 800ac72:	4620      	mov	r0, r4
 800ac74:	bd10      	pop	{r4, pc}
	...

0800ac78 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800ac78:	b510      	push	{r4, lr}
 800ac7a:	4604      	mov	r4, r0
 800ac7c:	f7fd fa56 	bl	800812c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800ac80:	4b01      	ldr	r3, [pc, #4]	; (800ac88 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800ac82:	6023      	str	r3, [r4, #0]
}
 800ac84:	4620      	mov	r0, r4
 800ac86:	bd10      	pop	{r4, pc}
 800ac88:	080311f8 	.word	0x080311f8

0800ac8c <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800ac8c:	f7fd ba02 	b.w	8008094 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800ac90 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800ac90:	4770      	bx	lr

0800ac92 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800ac92:	3804      	subs	r0, #4
 800ac94:	4770      	bx	lr

0800ac96 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800ac96:	4770      	bx	lr

0800ac98 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800ac98:	68c0      	ldr	r0, [r0, #12]
 800ac9a:	6803      	ldr	r3, [r0, #0]
 800ac9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac9e:	4718      	bx	r3

0800aca0 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aca0:	f1a0 0004 	sub.w	r0, r0, #4
 800aca4:	f7ff bff8 	b.w	800ac98 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800aca8 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800aca8:	b510      	push	{r4, lr}
 800acaa:	2110      	movs	r1, #16
 800acac:	4604      	mov	r4, r0
 800acae:	f021 ff70 	bl	802cb92 <_ZdlPvj>
 800acb2:	4620      	mov	r0, r4
 800acb4:	bd10      	pop	{r4, pc}

0800acb6 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800acb6:	f1a0 0004 	sub.w	r0, r0, #4
 800acba:	e7f5      	b.n	800aca8 <_ZN27Measurement_SinglePresenterD0Ev>

0800acbc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 800acbc:	b510      	push	{r4, lr}
 800acbe:	2200      	movs	r2, #0
 800acc0:	6082      	str	r2, [r0, #8]
    : view(v)
 800acc2:	4a04      	ldr	r2, [pc, #16]	; (800acd4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800acc4:	60c1      	str	r1, [r0, #12]
 800acc6:	f102 0408 	add.w	r4, r2, #8
 800acca:	3224      	adds	r2, #36	; 0x24
 800accc:	6004      	str	r4, [r0, #0]
 800acce:	6042      	str	r2, [r0, #4]
}
 800acd0:	bd10      	pop	{r4, pc}
 800acd2:	bf00      	nop
 800acd4:	08031224 	.word	0x08031224

0800acd8 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800acd8:	4770      	bx	lr
	...

0800acdc <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 800acdc:	b510      	push	{r4, lr}
 800acde:	4b03      	ldr	r3, [pc, #12]	; (800acec <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800ace0:	6003      	str	r3, [r0, #0]
 800ace2:	4604      	mov	r4, r0
 800ace4:	f7fd fdd0 	bl	8008888 <_ZN26Measurement_SingleViewBaseD1Ev>
 800ace8:	4620      	mov	r0, r4
 800acea:	bd10      	pop	{r4, pc}
 800acec:	0803125c 	.word	0x0803125c

0800acf0 <_ZN22Measurement_SingleViewD0Ev>:
 800acf0:	b510      	push	{r4, lr}
 800acf2:	4604      	mov	r4, r0
 800acf4:	f7ff fff2 	bl	800acdc <_ZN22Measurement_SingleViewD1Ev>
 800acf8:	4620      	mov	r0, r4
 800acfa:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800acfe:	f021 ff48 	bl	802cb92 <_ZdlPvj>
 800ad02:	4620      	mov	r0, r4
 800ad04:	bd10      	pop	{r4, pc}
	...

0800ad08 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800ad08:	b510      	push	{r4, lr}
 800ad0a:	4604      	mov	r4, r0
 800ad0c:	f7fd fdf6 	bl	80088fc <_ZN26Measurement_SingleViewBaseC1Ev>
 800ad10:	4b01      	ldr	r3, [pc, #4]	; (800ad18 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800ad12:	6023      	str	r3, [r4, #0]
}
 800ad14:	4620      	mov	r0, r4
 800ad16:	bd10      	pop	{r4, pc}
 800ad18:	0803125c 	.word	0x0803125c

0800ad1c <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800ad1c:	f7fd bd90 	b.w	8008840 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800ad20 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800ad20:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ad22:	4a0a      	ldr	r2, [pc, #40]	; (800ad4c <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 800ad24:	4605      	mov	r5, r0
 800ad26:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ad28:	460b      	mov	r3, r1
 800ad2a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ad2e:	2104      	movs	r1, #4
 800ad30:	f010 fff4 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ad34:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ad38:	f00e ff2a 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ad3c:	b92c      	cbnz	r4, 800ad4a <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800ad3e:	f00d fe3f 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ad42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ad46:	f7fa bcdf 	b.w	8005708 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ad4a:	bd38      	pop	{r3, r4, r5, pc}
 800ad4c:	0802f466 	.word	0x0802f466

0800ad50 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800ad50:	4770      	bx	lr

0800ad52 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800ad52:	3804      	subs	r0, #4
 800ad54:	4770      	bx	lr

0800ad56 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800ad56:	4770      	bx	lr

0800ad58 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800ad58:	4770      	bx	lr

0800ad5a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800ad5a:	b510      	push	{r4, lr}
 800ad5c:	2110      	movs	r1, #16
 800ad5e:	4604      	mov	r4, r0
 800ad60:	f021 ff17 	bl	802cb92 <_ZdlPvj>
 800ad64:	4620      	mov	r0, r4
 800ad66:	bd10      	pop	{r4, pc}

0800ad68 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800ad68:	f1a0 0004 	sub.w	r0, r0, #4
 800ad6c:	e7f5      	b.n	800ad5a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800ad6e <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800ad6e:	4770      	bx	lr

0800ad70 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800ad70:	b510      	push	{r4, lr}
 800ad72:	2200      	movs	r2, #0
 800ad74:	6082      	str	r2, [r0, #8]
    : view(v)
 800ad76:	4a04      	ldr	r2, [pc, #16]	; (800ad88 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800ad78:	60c1      	str	r1, [r0, #12]
 800ad7a:	f102 0408 	add.w	r4, r2, #8
 800ad7e:	3224      	adds	r2, #36	; 0x24
 800ad80:	6004      	str	r4, [r0, #0]
 800ad82:	6042      	str	r2, [r0, #4]
}
 800ad84:	bd10      	pop	{r4, pc}
 800ad86:	bf00      	nop
 800ad88:	0803128c 	.word	0x0803128c

0800ad8c <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800ad8c:	4770      	bx	lr
	...

0800ad90 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800ad90:	b510      	push	{r4, lr}
 800ad92:	4b03      	ldr	r3, [pc, #12]	; (800ada0 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800ad94:	6003      	str	r3, [r0, #0]
 800ad96:	4604      	mov	r4, r0
 800ad98:	f7fe f840 	bl	8008e1c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800ad9c:	4620      	mov	r0, r4
 800ad9e:	bd10      	pop	{r4, pc}
 800ada0:	080312cc 	.word	0x080312cc

0800ada4 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800ada4:	b510      	push	{r4, lr}
 800ada6:	4604      	mov	r4, r0
 800ada8:	f7ff fff2 	bl	800ad90 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800adac:	4620      	mov	r0, r4
 800adae:	f241 417c 	movw	r1, #5244	; 0x147c
 800adb2:	f021 feee 	bl	802cb92 <_ZdlPvj>
 800adb6:	4620      	mov	r0, r4
 800adb8:	bd10      	pop	{r4, pc}
	...

0800adbc <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 800adbc:	b510      	push	{r4, lr}
 800adbe:	4604      	mov	r4, r0
 800adc0:	f7fe f864 	bl	8008e8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800adc4:	4b01      	ldr	r3, [pc, #4]	; (800adcc <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800adc6:	6023      	str	r3, [r4, #0]
}
 800adc8:	4620      	mov	r0, r4
 800adca:	bd10      	pop	{r4, pc}
 800adcc:	080312cc 	.word	0x080312cc

0800add0 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800add0:	f7fd bfff 	b.w	8008dd2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800add4 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800add4:	b510      	push	{r4, lr}
 800add6:	b088      	sub	sp, #32
 800add8:	4604      	mov	r4, r0
#ifndef SIMULATOR

	// Start measurement
	uint32_t* Samples = MEAS_start_measure();
 800adda:	f7f7 f9c3 	bl	8002164 <MEAS_start_measure>

	// calculate single measurement values
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800adde:	f7f6 faf7 	bl	80013d0 <single_measurement>

	//update GUI values
	//set gauge angle
	SMD1_Gauge.setValue(single_meas.angle);
 800ade2:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800ade6:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 800adea:	ee17 1a90 	vmov	r1, s15
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800adee:	ed8d 0a04 	vstr	s0, [sp, #16]
 800adf2:	ed8d 1a06 	vstr	s2, [sp, #24]
	SMD1_Gauge.setValue(single_meas.angle);
 800adf6:	9001      	str	r0, [sp, #4]
 800adf8:	f00a fe80 	bl	8015afc <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_Gauge.invalidate();
 800adfc:	9801      	ldr	r0, [sp, #4]
 800adfe:	f00e fec7 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintfFloat(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%.2f", 420.69);
 800ae02:	4b15      	ldr	r3, [pc, #84]	; (800ae58 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800ae04:	4a15      	ldr	r2, [pc, #84]	; (800ae5c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800ae06:	9303      	str	r3, [sp, #12]
 800ae08:	210a      	movs	r1, #10
 800ae0a:	ab03      	add	r3, sp, #12
 800ae0c:	f204 601c 	addw	r0, r4, #1564	; 0x61c
 800ae10:	f011 f970 	bl	801c0f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Current.invalidate();
 800ae14:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 800ae18:	f00e feba 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", single_meas.frequency);
 800ae1c:	9b06      	ldr	r3, [sp, #24]
 800ae1e:	4a0f      	ldr	r2, [pc, #60]	; (800ae5c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800ae20:	9303      	str	r3, [sp, #12]
 800ae22:	210a      	movs	r1, #10
 800ae24:	ab03      	add	r3, sp, #12
 800ae26:	f504 60c6 	add.w	r0, r4, #1584	; 0x630
 800ae2a:	f011 f963 	bl	801c0f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 800ae2e:	f504 7001 	add.w	r0, r4, #516	; 0x204
 800ae32:	f00e fead 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", single_meas.distance);
 800ae36:	9b04      	ldr	r3, [sp, #16]
 800ae38:	9303      	str	r3, [sp, #12]
 800ae3a:	4a08      	ldr	r2, [pc, #32]	; (800ae5c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800ae3c:	ab03      	add	r3, sp, #12
 800ae3e:	210a      	movs	r1, #10
 800ae40:	f204 6044 	addw	r0, r4, #1604	; 0x644
 800ae44:	f011 f956 	bl	801c0f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 800ae48:	f504 7014 	add.w	r0, r4, #592	; 0x250

#endif
}
 800ae4c:	b008      	add	sp, #32
 800ae4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	SMD1_Distance.invalidate();
 800ae52:	f00e be9d 	b.w	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ae56:	bf00      	nop
 800ae58:	43d25852 	.word	0x43d25852
 800ae5c:	080312bc 	.word	0x080312bc

0800ae60 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800ae60:	4770      	bx	lr

0800ae62 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800ae62:	3804      	subs	r0, #4
 800ae64:	4770      	bx	lr

0800ae66 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800ae66:	4770      	bx	lr

0800ae68 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800ae68:	4770      	bx	lr

0800ae6a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800ae6a:	b510      	push	{r4, lr}
 800ae6c:	2110      	movs	r1, #16
 800ae6e:	4604      	mov	r4, r0
 800ae70:	f021 fe8f 	bl	802cb92 <_ZdlPvj>
 800ae74:	4620      	mov	r0, r4
 800ae76:	bd10      	pop	{r4, pc}

0800ae78 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800ae78:	f1a0 0004 	sub.w	r0, r0, #4
 800ae7c:	e7f5      	b.n	800ae6a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800ae7e <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800ae7e:	4770      	bx	lr

0800ae80 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800ae80:	b510      	push	{r4, lr}
 800ae82:	2200      	movs	r2, #0
 800ae84:	6082      	str	r2, [r0, #8]
    : view(v)
 800ae86:	4a04      	ldr	r2, [pc, #16]	; (800ae98 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800ae88:	60c1      	str	r1, [r0, #12]
 800ae8a:	f102 0408 	add.w	r4, r2, #8
 800ae8e:	3224      	adds	r2, #36	; 0x24
 800ae90:	6004      	str	r4, [r0, #0]
 800ae92:	6042      	str	r2, [r0, #4]
}
 800ae94:	bd10      	pop	{r4, pc}
 800ae96:	bf00      	nop
 800ae98:	080312fc 	.word	0x080312fc

0800ae9c <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800ae9c:	4770      	bx	lr
	...

0800aea0 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800aea0:	b510      	push	{r4, lr}
 800aea2:	4b03      	ldr	r3, [pc, #12]	; (800aeb0 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 800aea4:	6003      	str	r3, [r0, #0]
 800aea6:	4604      	mov	r4, r0
 800aea8:	f7fe fb9c 	bl	80095e4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800aeac:	4620      	mov	r0, r4
 800aeae:	bd10      	pop	{r4, pc}
 800aeb0:	08031334 	.word	0x08031334

0800aeb4 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 800aeb4:	b510      	push	{r4, lr}
 800aeb6:	4604      	mov	r4, r0
 800aeb8:	f7ff fff2 	bl	800aea0 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800aebc:	4620      	mov	r0, r4
 800aebe:	f241 4178 	movw	r1, #5240	; 0x1478
 800aec2:	f021 fe66 	bl	802cb92 <_ZdlPvj>
 800aec6:	4620      	mov	r0, r4
 800aec8:	bd10      	pop	{r4, pc}
	...

0800aecc <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800aecc:	b510      	push	{r4, lr}
 800aece:	4604      	mov	r4, r0
 800aed0:	f7fe fbb0 	bl	8009634 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800aed4:	4b01      	ldr	r3, [pc, #4]	; (800aedc <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800aed6:	6023      	str	r3, [r4, #0]
}
 800aed8:	4620      	mov	r0, r4
 800aeda:	bd10      	pop	{r4, pc}
 800aedc:	08031334 	.word	0x08031334

0800aee0 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800aee0:	f7fe bb5c 	b.w	800959c <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800aee4 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800aee4:	2100      	movs	r1, #0
 800aee6:	223c      	movs	r2, #60	; 0x3c
 800aee8:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800aeec:	4770      	bx	lr
	...

0800aef0 <_ZN5Model4tickEv>:

void Model::tick()
{
 800aef0:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800aef2:	4d0a      	ldr	r5, [pc, #40]	; (800af1c <_ZN5Model4tickEv+0x2c>)
{
 800aef4:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800aef6:	6828      	ldr	r0, [r5, #0]
 800aef8:	f004 fe80 	bl	800fbfc <osMessageQueueGetCount>
 800aefc:	b168      	cbz	r0, 800af1a <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800aefe:	2300      	movs	r3, #0
 800af00:	6828      	ldr	r0, [r5, #0]
 800af02:	461a      	mov	r2, r3
 800af04:	1d21      	adds	r1, r4, #4
 800af06:	f004 fe45 	bl	800fb94 <osMessageQueueGet>
 800af0a:	b930      	cbnz	r0, 800af1a <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800af0c:	6820      	ldr	r0, [r4, #0]
 800af0e:	6861      	ldr	r1, [r4, #4]
 800af10:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800af12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800af16:	689b      	ldr	r3, [r3, #8]
 800af18:	4718      	bx	r3
}
 800af1a:	bd70      	pop	{r4, r5, r6, pc}
 800af1c:	200001d8 	.word	0x200001d8

0800af20 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 800af20:	4770      	bx	lr

0800af22 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800af22:	3804      	subs	r0, #4
 800af24:	4770      	bx	lr

0800af26 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800af26:	4770      	bx	lr

0800af28 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800af28:	68c0      	ldr	r0, [r0, #12]
 800af2a:	6803      	ldr	r3, [r0, #0]
 800af2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af2e:	4718      	bx	r3

0800af30 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800af30:	f1a0 0004 	sub.w	r0, r0, #4
 800af34:	f7ff bff8 	b.w	800af28 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

0800af38 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 800af38:	b510      	push	{r4, lr}
 800af3a:	2110      	movs	r1, #16
 800af3c:	4604      	mov	r4, r0
 800af3e:	f021 fe28 	bl	802cb92 <_ZdlPvj>
 800af42:	4620      	mov	r0, r4
 800af44:	bd10      	pop	{r4, pc}

0800af46 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800af46:	f1a0 0004 	sub.w	r0, r0, #4
 800af4a:	e7f5      	b.n	800af38 <_ZN21Project_InfoPresenterD0Ev>

0800af4c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800af4c:	b510      	push	{r4, lr}
 800af4e:	2200      	movs	r2, #0
 800af50:	6082      	str	r2, [r0, #8]
    : view(v)
 800af52:	4a04      	ldr	r2, [pc, #16]	; (800af64 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800af54:	60c1      	str	r1, [r0, #12]
 800af56:	f102 0408 	add.w	r4, r2, #8
 800af5a:	3224      	adds	r2, #36	; 0x24
 800af5c:	6004      	str	r4, [r0, #0]
 800af5e:	6042      	str	r2, [r0, #4]
}
 800af60:	bd10      	pop	{r4, pc}
 800af62:	bf00      	nop
 800af64:	08031360 	.word	0x08031360

0800af68 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800af68:	4770      	bx	lr
	...

0800af6c <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800af6c:	b510      	push	{r4, lr}
 800af6e:	4b03      	ldr	r3, [pc, #12]	; (800af7c <_ZN16Project_InfoViewD1Ev+0x10>)
 800af70:	6003      	str	r3, [r0, #0]
 800af72:	4604      	mov	r4, r0
 800af74:	f7fe ff06 	bl	8009d84 <_ZN20Project_InfoViewBaseD1Ev>
 800af78:	4620      	mov	r0, r4
 800af7a:	bd10      	pop	{r4, pc}
 800af7c:	08031398 	.word	0x08031398

0800af80 <_ZN16Project_InfoViewD0Ev>:
 800af80:	b510      	push	{r4, lr}
 800af82:	4604      	mov	r4, r0
 800af84:	f7ff fff2 	bl	800af6c <_ZN16Project_InfoViewD1Ev>
 800af88:	4620      	mov	r0, r4
 800af8a:	f241 117c 	movw	r1, #4476	; 0x117c
 800af8e:	f021 fe00 	bl	802cb92 <_ZdlPvj>
 800af92:	4620      	mov	r0, r4
 800af94:	bd10      	pop	{r4, pc}
	...

0800af98 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800af98:	b510      	push	{r4, lr}
 800af9a:	4604      	mov	r4, r0
 800af9c:	f7fe ff1a 	bl	8009dd4 <_ZN20Project_InfoViewBaseC1Ev>
 800afa0:	4b01      	ldr	r3, [pc, #4]	; (800afa8 <_ZN16Project_InfoViewC1Ev+0x10>)
 800afa2:	6023      	str	r3, [r4, #0]
}
 800afa4:	4620      	mov	r0, r4
 800afa6:	bd10      	pop	{r4, pc}
 800afa8:	08031398 	.word	0x08031398

0800afac <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800afac:	f7fe bec6 	b.w	8009d3c <_ZN20Project_InfoViewBase11setupScreenEv>

0800afb0 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800afb0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800afb2:	4a0a      	ldr	r2, [pc, #40]	; (800afdc <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800afb4:	4605      	mov	r5, r0
 800afb6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800afb8:	460b      	mov	r3, r1
 800afba:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800afbe:	2104      	movs	r1, #4
 800afc0:	f010 feac 	bl	801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800afc4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800afc8:	f00e fde2 	bl	8019b90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800afcc:	b92c      	cbnz	r4, 800afda <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800afce:	f00d fcf7 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800afd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800afd6:	f7fa bb97 	b.w	8005708 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800afda:	bd38      	pop	{r3, r4, r5, pc}
 800afdc:	0802f466 	.word	0x0802f466

0800afe0 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800afe0:	4770      	bx	lr

0800afe2 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800afe2:	3804      	subs	r0, #4
 800afe4:	4770      	bx	lr

0800afe6 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800afe6:	4770      	bx	lr

0800afe8 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800afe8:	4770      	bx	lr

0800afea <_ZN21Shutting_OffPresenterD0Ev>:
 800afea:	b510      	push	{r4, lr}
 800afec:	2110      	movs	r1, #16
 800afee:	4604      	mov	r4, r0
 800aff0:	f021 fdcf 	bl	802cb92 <_ZdlPvj>
 800aff4:	4620      	mov	r0, r4
 800aff6:	bd10      	pop	{r4, pc}

0800aff8 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800aff8:	f1a0 0004 	sub.w	r0, r0, #4
 800affc:	e7f5      	b.n	800afea <_ZN21Shutting_OffPresenterD0Ev>

0800affe <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800affe:	4770      	bx	lr

0800b000 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800b000:	b510      	push	{r4, lr}
 800b002:	2200      	movs	r2, #0
 800b004:	6082      	str	r2, [r0, #8]
    : view(v)
 800b006:	4a04      	ldr	r2, [pc, #16]	; (800b018 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800b008:	60c1      	str	r1, [r0, #12]
 800b00a:	f102 0408 	add.w	r4, r2, #8
 800b00e:	3224      	adds	r2, #36	; 0x24
 800b010:	6004      	str	r4, [r0, #0]
 800b012:	6042      	str	r2, [r0, #4]
}
 800b014:	bd10      	pop	{r4, pc}
 800b016:	bf00      	nop
 800b018:	080313c8 	.word	0x080313c8

0800b01c <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800b01c:	4770      	bx	lr
	...

0800b020 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800b020:	b510      	push	{r4, lr}
 800b022:	4b03      	ldr	r3, [pc, #12]	; (800b030 <_ZN16Shutting_OffViewD1Ev+0x10>)
 800b024:	6003      	str	r3, [r0, #0]
 800b026:	4604      	mov	r4, r0
 800b028:	f7ff f91e 	bl	800a268 <_ZN20Shutting_OffViewBaseD1Ev>
 800b02c:	4620      	mov	r0, r4
 800b02e:	bd10      	pop	{r4, pc}
 800b030:	08031400 	.word	0x08031400

0800b034 <_ZN16Shutting_OffViewD0Ev>:
 800b034:	b510      	push	{r4, lr}
 800b036:	4604      	mov	r4, r0
 800b038:	f7ff fff2 	bl	800b020 <_ZN16Shutting_OffViewD1Ev>
 800b03c:	4620      	mov	r0, r4
 800b03e:	2198      	movs	r1, #152	; 0x98
 800b040:	f021 fda7 	bl	802cb92 <_ZdlPvj>
 800b044:	4620      	mov	r0, r4
 800b046:	bd10      	pop	{r4, pc}

0800b048 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 800b048:	b510      	push	{r4, lr}
 800b04a:	4604      	mov	r4, r0
 800b04c:	f7ff f916 	bl	800a27c <_ZN20Shutting_OffViewBaseC1Ev>
 800b050:	4b01      	ldr	r3, [pc, #4]	; (800b058 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800b052:	6023      	str	r3, [r4, #0]
}
 800b054:	4620      	mov	r0, r4
 800b056:	bd10      	pop	{r4, pc}
 800b058:	08031400 	.word	0x08031400

0800b05c <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800b05c:	f7ff b905 	b.w	800a26a <_ZN20Shutting_OffViewBase11setupScreenEv>

0800b060 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800b060:	20f0      	movs	r0, #240	; 0xf0
 800b062:	4770      	bx	lr

0800b064 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800b064:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800b068:	4770      	bx	lr
 800b06a:	bf00      	nop

0800b06c <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800b06c:	2029      	movs	r0, #41	; 0x29
 800b06e:	f7f6 bef1 	b.w	8001e54 <LCD_IO_WriteReg>
 800b072:	bf00      	nop

0800b074 <ili9341_DisplayOff>:
 800b074:	2028      	movs	r0, #40	; 0x28
 800b076:	f7f6 beed 	b.w	8001e54 <LCD_IO_WriteReg>
 800b07a:	bf00      	nop

0800b07c <ili9341_Init>:
{
 800b07c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b07e:	f7f6 feaf 	bl	8001de0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800b082:	20ca      	movs	r0, #202	; 0xca
 800b084:	f7f6 fee6 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b088:	20c3      	movs	r0, #195	; 0xc3
 800b08a:	f7f6 feb9 	bl	8001e00 <LCD_IO_WriteData>
 800b08e:	2008      	movs	r0, #8
 800b090:	f7f6 feb6 	bl	8001e00 <LCD_IO_WriteData>
 800b094:	2050      	movs	r0, #80	; 0x50
 800b096:	f7f6 feb3 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b09a:	20cf      	movs	r0, #207	; 0xcf
 800b09c:	f7f6 feda 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0a0:	2000      	movs	r0, #0
 800b0a2:	f7f6 fead 	bl	8001e00 <LCD_IO_WriteData>
 800b0a6:	20c1      	movs	r0, #193	; 0xc1
 800b0a8:	f7f6 feaa 	bl	8001e00 <LCD_IO_WriteData>
 800b0ac:	2030      	movs	r0, #48	; 0x30
 800b0ae:	f7f6 fea7 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0b2:	20ed      	movs	r0, #237	; 0xed
 800b0b4:	f7f6 fece 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0b8:	2064      	movs	r0, #100	; 0x64
 800b0ba:	f7f6 fea1 	bl	8001e00 <LCD_IO_WriteData>
 800b0be:	2003      	movs	r0, #3
 800b0c0:	f7f6 fe9e 	bl	8001e00 <LCD_IO_WriteData>
 800b0c4:	2012      	movs	r0, #18
 800b0c6:	f7f6 fe9b 	bl	8001e00 <LCD_IO_WriteData>
 800b0ca:	2081      	movs	r0, #129	; 0x81
 800b0cc:	f7f6 fe98 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0d0:	20e8      	movs	r0, #232	; 0xe8
 800b0d2:	f7f6 febf 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0d6:	2085      	movs	r0, #133	; 0x85
 800b0d8:	f7f6 fe92 	bl	8001e00 <LCD_IO_WriteData>
 800b0dc:	2000      	movs	r0, #0
 800b0de:	f7f6 fe8f 	bl	8001e00 <LCD_IO_WriteData>
 800b0e2:	2078      	movs	r0, #120	; 0x78
 800b0e4:	f7f6 fe8c 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0e8:	20cb      	movs	r0, #203	; 0xcb
 800b0ea:	f7f6 feb3 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0ee:	2039      	movs	r0, #57	; 0x39
 800b0f0:	f7f6 fe86 	bl	8001e00 <LCD_IO_WriteData>
 800b0f4:	202c      	movs	r0, #44	; 0x2c
 800b0f6:	f7f6 fe83 	bl	8001e00 <LCD_IO_WriteData>
 800b0fa:	2000      	movs	r0, #0
 800b0fc:	f7f6 fe80 	bl	8001e00 <LCD_IO_WriteData>
 800b100:	2034      	movs	r0, #52	; 0x34
 800b102:	f7f6 fe7d 	bl	8001e00 <LCD_IO_WriteData>
 800b106:	2002      	movs	r0, #2
 800b108:	f7f6 fe7a 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b10c:	20f7      	movs	r0, #247	; 0xf7
 800b10e:	f7f6 fea1 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b112:	2020      	movs	r0, #32
 800b114:	f7f6 fe74 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b118:	20ea      	movs	r0, #234	; 0xea
 800b11a:	f7f6 fe9b 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b11e:	2000      	movs	r0, #0
 800b120:	f7f6 fe6e 	bl	8001e00 <LCD_IO_WriteData>
 800b124:	2000      	movs	r0, #0
 800b126:	f7f6 fe6b 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b12a:	20b1      	movs	r0, #177	; 0xb1
 800b12c:	f7f6 fe92 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b130:	2000      	movs	r0, #0
 800b132:	f7f6 fe65 	bl	8001e00 <LCD_IO_WriteData>
 800b136:	201b      	movs	r0, #27
 800b138:	f7f6 fe62 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b13c:	20b6      	movs	r0, #182	; 0xb6
 800b13e:	f7f6 fe89 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b142:	200a      	movs	r0, #10
 800b144:	f7f6 fe5c 	bl	8001e00 <LCD_IO_WriteData>
 800b148:	20a2      	movs	r0, #162	; 0xa2
 800b14a:	f7f6 fe59 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b14e:	20c0      	movs	r0, #192	; 0xc0
 800b150:	f7f6 fe80 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b154:	2010      	movs	r0, #16
 800b156:	f7f6 fe53 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b15a:	20c1      	movs	r0, #193	; 0xc1
 800b15c:	f7f6 fe7a 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b160:	2010      	movs	r0, #16
 800b162:	f7f6 fe4d 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b166:	20c5      	movs	r0, #197	; 0xc5
 800b168:	f7f6 fe74 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b16c:	2045      	movs	r0, #69	; 0x45
 800b16e:	f7f6 fe47 	bl	8001e00 <LCD_IO_WriteData>
 800b172:	2015      	movs	r0, #21
 800b174:	f7f6 fe44 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b178:	20c7      	movs	r0, #199	; 0xc7
 800b17a:	f7f6 fe6b 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b17e:	2090      	movs	r0, #144	; 0x90
 800b180:	f7f6 fe3e 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b184:	2036      	movs	r0, #54	; 0x36
 800b186:	f7f6 fe65 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b18a:	20c8      	movs	r0, #200	; 0xc8
 800b18c:	f7f6 fe38 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b190:	20f2      	movs	r0, #242	; 0xf2
 800b192:	f7f6 fe5f 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b196:	2000      	movs	r0, #0
 800b198:	f7f6 fe32 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b19c:	20b0      	movs	r0, #176	; 0xb0
 800b19e:	f7f6 fe59 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1a2:	20c2      	movs	r0, #194	; 0xc2
 800b1a4:	f7f6 fe2c 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1a8:	20b6      	movs	r0, #182	; 0xb6
 800b1aa:	f7f6 fe53 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1ae:	200a      	movs	r0, #10
 800b1b0:	f7f6 fe26 	bl	8001e00 <LCD_IO_WriteData>
 800b1b4:	20a7      	movs	r0, #167	; 0xa7
 800b1b6:	f7f6 fe23 	bl	8001e00 <LCD_IO_WriteData>
 800b1ba:	2027      	movs	r0, #39	; 0x27
 800b1bc:	f7f6 fe20 	bl	8001e00 <LCD_IO_WriteData>
 800b1c0:	2004      	movs	r0, #4
 800b1c2:	f7f6 fe1d 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1c6:	202a      	movs	r0, #42	; 0x2a
 800b1c8:	f7f6 fe44 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1cc:	2000      	movs	r0, #0
 800b1ce:	f7f6 fe17 	bl	8001e00 <LCD_IO_WriteData>
 800b1d2:	2000      	movs	r0, #0
 800b1d4:	f7f6 fe14 	bl	8001e00 <LCD_IO_WriteData>
 800b1d8:	2000      	movs	r0, #0
 800b1da:	f7f6 fe11 	bl	8001e00 <LCD_IO_WriteData>
 800b1de:	20ef      	movs	r0, #239	; 0xef
 800b1e0:	f7f6 fe0e 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1e4:	202b      	movs	r0, #43	; 0x2b
 800b1e6:	f7f6 fe35 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1ea:	2000      	movs	r0, #0
 800b1ec:	f7f6 fe08 	bl	8001e00 <LCD_IO_WriteData>
 800b1f0:	2000      	movs	r0, #0
 800b1f2:	f7f6 fe05 	bl	8001e00 <LCD_IO_WriteData>
 800b1f6:	2001      	movs	r0, #1
 800b1f8:	f7f6 fe02 	bl	8001e00 <LCD_IO_WriteData>
 800b1fc:	203f      	movs	r0, #63	; 0x3f
 800b1fe:	f7f6 fdff 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b202:	20f6      	movs	r0, #246	; 0xf6
 800b204:	f7f6 fe26 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b208:	2001      	movs	r0, #1
 800b20a:	f7f6 fdf9 	bl	8001e00 <LCD_IO_WriteData>
 800b20e:	2000      	movs	r0, #0
 800b210:	f7f6 fdf6 	bl	8001e00 <LCD_IO_WriteData>
 800b214:	2006      	movs	r0, #6
 800b216:	f7f6 fdf3 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b21a:	202c      	movs	r0, #44	; 0x2c
 800b21c:	f7f6 fe1a 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b220:	20c8      	movs	r0, #200	; 0xc8
 800b222:	f7f6 fe7f 	bl	8001f24 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b226:	2026      	movs	r0, #38	; 0x26
 800b228:	f7f6 fe14 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b22c:	2001      	movs	r0, #1
 800b22e:	f7f6 fde7 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b232:	20e0      	movs	r0, #224	; 0xe0
 800b234:	f7f6 fe0e 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b238:	200f      	movs	r0, #15
 800b23a:	f7f6 fde1 	bl	8001e00 <LCD_IO_WriteData>
 800b23e:	2029      	movs	r0, #41	; 0x29
 800b240:	f7f6 fdde 	bl	8001e00 <LCD_IO_WriteData>
 800b244:	2024      	movs	r0, #36	; 0x24
 800b246:	f7f6 fddb 	bl	8001e00 <LCD_IO_WriteData>
 800b24a:	200c      	movs	r0, #12
 800b24c:	f7f6 fdd8 	bl	8001e00 <LCD_IO_WriteData>
 800b250:	200e      	movs	r0, #14
 800b252:	f7f6 fdd5 	bl	8001e00 <LCD_IO_WriteData>
 800b256:	2009      	movs	r0, #9
 800b258:	f7f6 fdd2 	bl	8001e00 <LCD_IO_WriteData>
 800b25c:	204e      	movs	r0, #78	; 0x4e
 800b25e:	f7f6 fdcf 	bl	8001e00 <LCD_IO_WriteData>
 800b262:	2078      	movs	r0, #120	; 0x78
 800b264:	f7f6 fdcc 	bl	8001e00 <LCD_IO_WriteData>
 800b268:	203c      	movs	r0, #60	; 0x3c
 800b26a:	f7f6 fdc9 	bl	8001e00 <LCD_IO_WriteData>
 800b26e:	2009      	movs	r0, #9
 800b270:	f7f6 fdc6 	bl	8001e00 <LCD_IO_WriteData>
 800b274:	2013      	movs	r0, #19
 800b276:	f7f6 fdc3 	bl	8001e00 <LCD_IO_WriteData>
 800b27a:	2005      	movs	r0, #5
 800b27c:	f7f6 fdc0 	bl	8001e00 <LCD_IO_WriteData>
 800b280:	2017      	movs	r0, #23
 800b282:	f7f6 fdbd 	bl	8001e00 <LCD_IO_WriteData>
 800b286:	2011      	movs	r0, #17
 800b288:	f7f6 fdba 	bl	8001e00 <LCD_IO_WriteData>
 800b28c:	2000      	movs	r0, #0
 800b28e:	f7f6 fdb7 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b292:	20e1      	movs	r0, #225	; 0xe1
 800b294:	f7f6 fdde 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b298:	2000      	movs	r0, #0
 800b29a:	f7f6 fdb1 	bl	8001e00 <LCD_IO_WriteData>
 800b29e:	2016      	movs	r0, #22
 800b2a0:	f7f6 fdae 	bl	8001e00 <LCD_IO_WriteData>
 800b2a4:	201b      	movs	r0, #27
 800b2a6:	f7f6 fdab 	bl	8001e00 <LCD_IO_WriteData>
 800b2aa:	2004      	movs	r0, #4
 800b2ac:	f7f6 fda8 	bl	8001e00 <LCD_IO_WriteData>
 800b2b0:	2011      	movs	r0, #17
 800b2b2:	f7f6 fda5 	bl	8001e00 <LCD_IO_WriteData>
 800b2b6:	2007      	movs	r0, #7
 800b2b8:	f7f6 fda2 	bl	8001e00 <LCD_IO_WriteData>
 800b2bc:	2031      	movs	r0, #49	; 0x31
 800b2be:	f7f6 fd9f 	bl	8001e00 <LCD_IO_WriteData>
 800b2c2:	2033      	movs	r0, #51	; 0x33
 800b2c4:	f7f6 fd9c 	bl	8001e00 <LCD_IO_WriteData>
 800b2c8:	2042      	movs	r0, #66	; 0x42
 800b2ca:	f7f6 fd99 	bl	8001e00 <LCD_IO_WriteData>
 800b2ce:	2005      	movs	r0, #5
 800b2d0:	f7f6 fd96 	bl	8001e00 <LCD_IO_WriteData>
 800b2d4:	200c      	movs	r0, #12
 800b2d6:	f7f6 fd93 	bl	8001e00 <LCD_IO_WriteData>
 800b2da:	200a      	movs	r0, #10
 800b2dc:	f7f6 fd90 	bl	8001e00 <LCD_IO_WriteData>
 800b2e0:	2028      	movs	r0, #40	; 0x28
 800b2e2:	f7f6 fd8d 	bl	8001e00 <LCD_IO_WriteData>
 800b2e6:	202f      	movs	r0, #47	; 0x2f
 800b2e8:	f7f6 fd8a 	bl	8001e00 <LCD_IO_WriteData>
 800b2ec:	200f      	movs	r0, #15
 800b2ee:	f7f6 fd87 	bl	8001e00 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2f2:	2011      	movs	r0, #17
 800b2f4:	f7f6 fdae 	bl	8001e54 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b2f8:	20c8      	movs	r0, #200	; 0xc8
 800b2fa:	f7f6 fe13 	bl	8001f24 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b2fe:	2029      	movs	r0, #41	; 0x29
 800b300:	f7f6 fda8 	bl	8001e54 <LCD_IO_WriteReg>
}
 800b304:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800b308:	202c      	movs	r0, #44	; 0x2c
 800b30a:	f7f6 bda3 	b.w	8001e54 <LCD_IO_WriteReg>
 800b30e:	bf00      	nop

0800b310 <ili9341_ReadID>:
{
 800b310:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b312:	f7f6 fd65 	bl	8001de0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800b316:	2103      	movs	r1, #3
 800b318:	20d3      	movs	r0, #211	; 0xd3
 800b31a:	f7f6 fdc5 	bl	8001ea8 <LCD_IO_ReadData>
}
 800b31e:	b280      	uxth	r0, r0
 800b320:	bd08      	pop	{r3, pc}
 800b322:	bf00      	nop

0800b324 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b324:	221f      	movs	r2, #31
 800b326:	210b      	movs	r1, #11
 800b328:	b2c0      	uxtb	r0, r0
 800b32a:	f7f6 bd0b 	b.w	8001d44 <IOE_Write>
 800b32e:	bf00      	nop

0800b330 <stmpe811_Reset>:
{
 800b330:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b332:	b2c4      	uxtb	r4, r0
 800b334:	2202      	movs	r2, #2
 800b336:	2103      	movs	r1, #3
 800b338:	4620      	mov	r0, r4
 800b33a:	f7f6 fd03 	bl	8001d44 <IOE_Write>
  IOE_Delay(10); 
 800b33e:	200a      	movs	r0, #10
 800b340:	f7f6 fd4c 	bl	8001ddc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b344:	4620      	mov	r0, r4
 800b346:	2200      	movs	r2, #0
 800b348:	2103      	movs	r1, #3
 800b34a:	f7f6 fcfb 	bl	8001d44 <IOE_Write>
}
 800b34e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b352:	2002      	movs	r0, #2
 800b354:	f7f6 bd42 	b.w	8001ddc <IOE_Delay>

0800b358 <stmpe811_ReadID>:
{
 800b358:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b35a:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 800b35c:	f7f6 fcee 	bl	8001d3c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b360:	2100      	movs	r1, #0
 800b362:	4620      	mov	r0, r4
 800b364:	f7f6 fd06 	bl	8001d74 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b368:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b36a:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b36c:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b36e:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b370:	f7f6 fd00 	bl	8001d74 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b374:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 800b378:	b280      	uxth	r0, r0
 800b37a:	bd10      	pop	{r4, pc}

0800b37c <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b37c:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b37e:	b2c4      	uxtb	r4, r0
 800b380:	2140      	movs	r1, #64	; 0x40
 800b382:	4620      	mov	r0, r4
 800b384:	f7f6 fcf6 	bl	8001d74 <IOE_Read>
  
  if(state > 0)
 800b388:	0603      	lsls	r3, r0, #24
 800b38a:	d40b      	bmi.n	800b3a4 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b38c:	4620      	mov	r0, r4
 800b38e:	2201      	movs	r2, #1
 800b390:	214b      	movs	r1, #75	; 0x4b
 800b392:	f7f6 fcd7 	bl	8001d44 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b396:	4620      	mov	r0, r4
 800b398:	2200      	movs	r2, #0
 800b39a:	214b      	movs	r1, #75	; 0x4b
 800b39c:	f7f6 fcd2 	bl	8001d44 <IOE_Write>
  uint8_t ret = 0;
 800b3a0:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800b3a2:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b3a4:	214c      	movs	r1, #76	; 0x4c
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	f7f6 fce4 	bl	8001d74 <IOE_Read>
      ret = 1;
 800b3ac:	3800      	subs	r0, #0
 800b3ae:	bf18      	it	ne
 800b3b0:	2001      	movne	r0, #1
}
 800b3b2:	bd10      	pop	{r4, pc}

0800b3b4 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800b3b4:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b3b6:	210b      	movs	r1, #11
 800b3b8:	b2c0      	uxtb	r0, r0
 800b3ba:	f7f6 fcdb 	bl	8001d74 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800b3be:	f000 001f 	and.w	r0, r0, #31
 800b3c2:	bd08      	pop	{r3, pc}

0800b3c4 <stmpe811_TS_GetXY>:
{
 800b3c4:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b3c6:	2304      	movs	r3, #4
{
 800b3c8:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b3ca:	b2c4      	uxtb	r4, r0
{
 800b3cc:	4615      	mov	r5, r2
 800b3ce:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b3d0:	eb0d 0203 	add.w	r2, sp, r3
 800b3d4:	21d7      	movs	r1, #215	; 0xd7
 800b3d6:	4620      	mov	r0, r4
 800b3d8:	f7f6 fce8 	bl	8001dac <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b3dc:	9b01      	ldr	r3, [sp, #4]
 800b3de:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b3e0:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b3e2:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b3e6:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b3e8:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b3ea:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b3ec:	2201      	movs	r2, #1
 800b3ee:	214b      	movs	r1, #75	; 0x4b
 800b3f0:	f7f6 fca8 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b3f4:	2200      	movs	r2, #0
 800b3f6:	214b      	movs	r1, #75	; 0x4b
 800b3f8:	4620      	mov	r0, r4
 800b3fa:	f7f6 fca3 	bl	8001d44 <IOE_Write>
}
 800b3fe:	b002      	add	sp, #8
 800b400:	bd70      	pop	{r4, r5, r6, pc}
 800b402:	bf00      	nop

0800b404 <stmpe811_TS_Start>:
{
 800b404:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b406:	b2c4      	uxtb	r4, r0
 800b408:	2104      	movs	r1, #4
 800b40a:	4620      	mov	r0, r4
 800b40c:	f7f6 fcb2 	bl	8001d74 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b410:	2104      	movs	r1, #4
 800b412:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b416:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b418:	4620      	mov	r0, r4
 800b41a:	f7f6 fc93 	bl	8001d44 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b41e:	2117      	movs	r1, #23
 800b420:	4620      	mov	r0, r4
 800b422:	f7f6 fca7 	bl	8001d74 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b426:	2117      	movs	r1, #23
 800b428:	f000 020f 	and.w	r2, r0, #15
 800b42c:	4620      	mov	r0, r4
 800b42e:	f7f6 fc89 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b432:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800b436:	4620      	mov	r0, r4
 800b438:	2104      	movs	r1, #4
 800b43a:	f7f6 fc83 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b43e:	2249      	movs	r2, #73	; 0x49
 800b440:	2120      	movs	r1, #32
 800b442:	4620      	mov	r0, r4
 800b444:	f7f6 fc7e 	bl	8001d44 <IOE_Write>
  IOE_Delay(2); 
 800b448:	2002      	movs	r0, #2
 800b44a:	f7f6 fcc7 	bl	8001ddc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b44e:	4620      	mov	r0, r4
 800b450:	2201      	movs	r2, #1
 800b452:	2121      	movs	r1, #33	; 0x21
 800b454:	f7f6 fc76 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b458:	4620      	mov	r0, r4
 800b45a:	229a      	movs	r2, #154	; 0x9a
 800b45c:	2141      	movs	r1, #65	; 0x41
 800b45e:	f7f6 fc71 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b462:	4620      	mov	r0, r4
 800b464:	2201      	movs	r2, #1
 800b466:	214a      	movs	r1, #74	; 0x4a
 800b468:	f7f6 fc6c 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b46c:	4620      	mov	r0, r4
 800b46e:	2201      	movs	r2, #1
 800b470:	214b      	movs	r1, #75	; 0x4b
 800b472:	f7f6 fc67 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b476:	4620      	mov	r0, r4
 800b478:	2200      	movs	r2, #0
 800b47a:	214b      	movs	r1, #75	; 0x4b
 800b47c:	f7f6 fc62 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b480:	4620      	mov	r0, r4
 800b482:	2201      	movs	r2, #1
 800b484:	2156      	movs	r1, #86	; 0x56
 800b486:	f7f6 fc5d 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b48a:	4620      	mov	r0, r4
 800b48c:	2201      	movs	r2, #1
 800b48e:	2158      	movs	r1, #88	; 0x58
 800b490:	f7f6 fc58 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800b494:	4620      	mov	r0, r4
 800b496:	2201      	movs	r2, #1
 800b498:	2140      	movs	r1, #64	; 0x40
 800b49a:	f7f6 fc53 	bl	8001d44 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800b49e:	4620      	mov	r0, r4
 800b4a0:	22ff      	movs	r2, #255	; 0xff
 800b4a2:	210b      	movs	r1, #11
 800b4a4:	f7f6 fc4e 	bl	8001d44 <IOE_Write>
}
 800b4a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800b4ac:	2002      	movs	r0, #2
 800b4ae:	f7f6 bc95 	b.w	8001ddc <IOE_Delay>
 800b4b2:	bf00      	nop

0800b4b4 <stmpe811_TS_DisableIT>:
{
 800b4b4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b4b6:	b2c4      	uxtb	r4, r0
 800b4b8:	2109      	movs	r1, #9
 800b4ba:	4620      	mov	r0, r4
 800b4bc:	f7f6 fc5a 	bl	8001d74 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b4c0:	2109      	movs	r1, #9
 800b4c2:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800b4c6:	4620      	mov	r0, r4
 800b4c8:	f7f6 fc3c 	bl	8001d44 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4cc:	210a      	movs	r1, #10
 800b4ce:	4620      	mov	r0, r4
 800b4d0:	f7f6 fc50 	bl	8001d74 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4d4:	210a      	movs	r1, #10
 800b4d6:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800b4da:	4620      	mov	r0, r4
}
 800b4dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4e0:	f7f6 bc30 	b.w	8001d44 <IOE_Write>

0800b4e4 <stmpe811_TS_EnableIT>:
{
 800b4e4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4e6:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800b4e8:	f7f6 fc2a 	bl	8001d40 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4ec:	210a      	movs	r1, #10
 800b4ee:	4620      	mov	r0, r4
 800b4f0:	f7f6 fc40 	bl	8001d74 <IOE_Read>
  tmp |= Source; 
 800b4f4:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4f8:	b2c2      	uxtb	r2, r0
 800b4fa:	210a      	movs	r1, #10
 800b4fc:	4620      	mov	r0, r4
 800b4fe:	f7f6 fc21 	bl	8001d44 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b502:	2109      	movs	r1, #9
 800b504:	4620      	mov	r0, r4
 800b506:	f7f6 fc35 	bl	8001d74 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b50a:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b50e:	b2c2      	uxtb	r2, r0
 800b510:	2109      	movs	r1, #9
 800b512:	4620      	mov	r0, r4
}
 800b514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b518:	f7f6 bc14 	b.w	8001d44 <IOE_Write>

0800b51c <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b51c:	4a10      	ldr	r2, [pc, #64]	; (800b560 <stmpe811_Init+0x44>)
 800b51e:	7813      	ldrb	r3, [r2, #0]
 800b520:	4298      	cmp	r0, r3
 800b522:	d004      	beq.n	800b52e <stmpe811_Init+0x12>
 800b524:	7851      	ldrb	r1, [r2, #1]
 800b526:	4288      	cmp	r0, r1
 800b528:	d001      	beq.n	800b52e <stmpe811_Init+0x12>
 800b52a:	b113      	cbz	r3, 800b532 <stmpe811_Init+0x16>
 800b52c:	b101      	cbz	r1, 800b530 <stmpe811_Init+0x14>
 800b52e:	4770      	bx	lr
 800b530:	2301      	movs	r3, #1
{
 800b532:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800b534:	b2c4      	uxtb	r4, r0
 800b536:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800b538:	f7f6 fc00 	bl	8001d3c <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b53c:	2202      	movs	r2, #2
 800b53e:	2103      	movs	r1, #3
 800b540:	4620      	mov	r0, r4
 800b542:	f7f6 fbff 	bl	8001d44 <IOE_Write>
  IOE_Delay(10); 
 800b546:	200a      	movs	r0, #10
 800b548:	f7f6 fc48 	bl	8001ddc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b54c:	4620      	mov	r0, r4
 800b54e:	2200      	movs	r2, #0
 800b550:	2103      	movs	r1, #3
 800b552:	f7f6 fbf7 	bl	8001d44 <IOE_Write>
}
 800b556:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b55a:	2002      	movs	r0, #2
 800b55c:	f7f6 bc3e 	b.w	8001ddc <IOE_Delay>
 800b560:	20002a1c 	.word	0x20002a1c

0800b564 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b564:	4b05      	ldr	r3, [pc, #20]	; (800b57c <SystemInit+0x18>)
 800b566:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b56a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b56e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800b572:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b576:	6099      	str	r1, [r3, #8]
#endif
}
 800b578:	4770      	bx	lr
 800b57a:	bf00      	nop
 800b57c:	e000ed00 	.word	0xe000ed00

0800b580 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b580:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b582:	4b0b      	ldr	r3, [pc, #44]	; (800b5b0 <HAL_Init+0x30>)
 800b584:	681a      	ldr	r2, [r3, #0]
 800b586:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b58a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b58c:	681a      	ldr	r2, [r3, #0]
 800b58e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b592:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800b594:	681a      	ldr	r2, [r3, #0]
 800b596:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b59a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b59c:	2003      	movs	r0, #3
 800b59e:	f000 f82d 	bl	800b5fc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800b5a2:	2000      	movs	r0, #0
 800b5a4:	f7f7 f8f0 	bl	8002788 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800b5a8:	f7f6 fe10 	bl	80021cc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800b5ac:	2000      	movs	r0, #0
 800b5ae:	bd08      	pop	{r3, pc}
 800b5b0:	40023c00 	.word	0x40023c00

0800b5b4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800b5b4:	4a03      	ldr	r2, [pc, #12]	; (800b5c4 <HAL_IncTick+0x10>)
 800b5b6:	4b04      	ldr	r3, [pc, #16]	; (800b5c8 <HAL_IncTick+0x14>)
 800b5b8:	6811      	ldr	r1, [r2, #0]
 800b5ba:	781b      	ldrb	r3, [r3, #0]
 800b5bc:	440b      	add	r3, r1
 800b5be:	6013      	str	r3, [r2, #0]
}
 800b5c0:	4770      	bx	lr
 800b5c2:	bf00      	nop
 800b5c4:	20002a20 	.word	0x20002a20
 800b5c8:	20000080 	.word	0x20000080

0800b5cc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800b5cc:	4b01      	ldr	r3, [pc, #4]	; (800b5d4 <HAL_GetTick+0x8>)
 800b5ce:	6818      	ldr	r0, [r3, #0]
}
 800b5d0:	4770      	bx	lr
 800b5d2:	bf00      	nop
 800b5d4:	20002a20 	.word	0x20002a20

0800b5d8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800b5d8:	b538      	push	{r3, r4, r5, lr}
 800b5da:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b5dc:	f7ff fff6 	bl	800b5cc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800b5e0:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800b5e2:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800b5e4:	d002      	beq.n	800b5ec <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800b5e6:	4b04      	ldr	r3, [pc, #16]	; (800b5f8 <HAL_Delay+0x20>)
 800b5e8:	781b      	ldrb	r3, [r3, #0]
 800b5ea:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800b5ec:	f7ff ffee 	bl	800b5cc <HAL_GetTick>
 800b5f0:	1b43      	subs	r3, r0, r5
 800b5f2:	42a3      	cmp	r3, r4
 800b5f4:	d3fa      	bcc.n	800b5ec <HAL_Delay+0x14>
  {
  }
}
 800b5f6:	bd38      	pop	{r3, r4, r5, pc}
 800b5f8:	20000080 	.word	0x20000080

0800b5fc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800b5fc:	4907      	ldr	r1, [pc, #28]	; (800b61c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800b5fe:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b600:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b602:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b606:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b60a:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800b60c:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800b60e:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800b612:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800b616:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800b618:	4770      	bx	lr
 800b61a:	bf00      	nop
 800b61c:	e000ed00 	.word	0xe000ed00

0800b620 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800b620:	4b1c      	ldr	r3, [pc, #112]	; (800b694 <HAL_NVIC_SetPriority+0x74>)
 800b622:	68db      	ldr	r3, [r3, #12]
 800b624:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800b628:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b62a:	f1c3 0e07 	rsb	lr, r3, #7
 800b62e:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b632:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b636:	bf28      	it	cs
 800b638:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b63c:	f1bc 0f06 	cmp.w	ip, #6
 800b640:	d91b      	bls.n	800b67a <HAL_NVIC_SetPriority+0x5a>
 800b642:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800b644:	f04f 3cff 	mov.w	ip, #4294967295
 800b648:	fa0c fc03 	lsl.w	ip, ip, r3
 800b64c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b650:	f04f 3cff 	mov.w	ip, #4294967295
 800b654:	fa0c fc0e 	lsl.w	ip, ip, lr
 800b658:	ea21 010c 	bic.w	r1, r1, ip
 800b65c:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800b65e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b660:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800b664:	db0c      	blt.n	800b680 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b666:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800b66a:	0109      	lsls	r1, r1, #4
 800b66c:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800b670:	b2c9      	uxtb	r1, r1
 800b672:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800b676:	f85d fb04 	ldr.w	pc, [sp], #4
 800b67a:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b67c:	4613      	mov	r3, r2
 800b67e:	e7e7      	b.n	800b650 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b680:	4b05      	ldr	r3, [pc, #20]	; (800b698 <HAL_NVIC_SetPriority+0x78>)
 800b682:	f000 000f 	and.w	r0, r0, #15
 800b686:	0109      	lsls	r1, r1, #4
 800b688:	4403      	add	r3, r0
 800b68a:	b2c9      	uxtb	r1, r1
 800b68c:	7619      	strb	r1, [r3, #24]
 800b68e:	f85d fb04 	ldr.w	pc, [sp], #4
 800b692:	bf00      	nop
 800b694:	e000ed00 	.word	0xe000ed00
 800b698:	e000ecfc 	.word	0xe000ecfc

0800b69c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b69c:	2800      	cmp	r0, #0
 800b69e:	db07      	blt.n	800b6b0 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b6a0:	0941      	lsrs	r1, r0, #5
 800b6a2:	4a04      	ldr	r2, [pc, #16]	; (800b6b4 <HAL_NVIC_EnableIRQ+0x18>)
 800b6a4:	f000 001f 	and.w	r0, r0, #31
 800b6a8:	2301      	movs	r3, #1
 800b6aa:	4083      	lsls	r3, r0
 800b6ac:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800b6b0:	4770      	bx	lr
 800b6b2:	bf00      	nop
 800b6b4:	e000e100 	.word	0xe000e100

0800b6b8 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800b6b8:	b180      	cbz	r0, 800b6dc <HAL_CRC_Init+0x24>
{
 800b6ba:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800b6bc:	7943      	ldrb	r3, [r0, #5]
 800b6be:	4604      	mov	r4, r0
 800b6c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b6c4:	b11b      	cbz	r3, 800b6ce <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800b6c6:	2301      	movs	r3, #1
 800b6c8:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800b6ca:	2000      	movs	r0, #0
}
 800b6cc:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800b6ce:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800b6d0:	f7f6 fd9c 	bl	800220c <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800b6d4:	2301      	movs	r3, #1
 800b6d6:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800b6d8:	2000      	movs	r0, #0
}
 800b6da:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b6dc:	2001      	movs	r0, #1
}
 800b6de:	4770      	bx	lr

0800b6e0 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800b6e0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b6e4:	2b02      	cmp	r3, #2
 800b6e6:	d003      	beq.n	800b6f0 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800b6e8:	2380      	movs	r3, #128	; 0x80
 800b6ea:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800b6ec:	2001      	movs	r0, #1
 800b6ee:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800b6f0:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800b6f2:	2305      	movs	r3, #5
 800b6f4:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800b6f8:	6813      	ldr	r3, [r2, #0]
 800b6fa:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800b6fe:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800b700:	6013      	str	r3, [r2, #0]
}
 800b702:	4770      	bx	lr

0800b704 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800b704:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800b708:	4770      	bx	lr
 800b70a:	bf00      	nop

0800b70c <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 800b70c:	4b21      	ldr	r3, [pc, #132]	; (800b794 <FLASH_SetErrorCode+0x88>)
 800b70e:	68da      	ldr	r2, [r3, #12]
 800b710:	06d0      	lsls	r0, r2, #27
 800b712:	d505      	bpl.n	800b720 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b714:	4920      	ldr	r1, [pc, #128]	; (800b798 <FLASH_SetErrorCode+0x8c>)
 800b716:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b718:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b71a:	4302      	orrs	r2, r0
 800b71c:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b71e:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 800b720:	4b1c      	ldr	r3, [pc, #112]	; (800b794 <FLASH_SetErrorCode+0x88>)
 800b722:	68da      	ldr	r2, [r3, #12]
 800b724:	0691      	lsls	r1, r2, #26
 800b726:	d506      	bpl.n	800b736 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b728:	491b      	ldr	r1, [pc, #108]	; (800b798 <FLASH_SetErrorCode+0x8c>)
 800b72a:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b72c:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b72e:	f042 0208 	orr.w	r2, r2, #8
 800b732:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b734:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 800b736:	4b17      	ldr	r3, [pc, #92]	; (800b794 <FLASH_SetErrorCode+0x88>)
 800b738:	68da      	ldr	r2, [r3, #12]
 800b73a:	0652      	lsls	r2, r2, #25
 800b73c:	d506      	bpl.n	800b74c <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b73e:	4916      	ldr	r1, [pc, #88]	; (800b798 <FLASH_SetErrorCode+0x8c>)
 800b740:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b742:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b744:	f042 0204 	orr.w	r2, r2, #4
 800b748:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b74a:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 800b74c:	4b11      	ldr	r3, [pc, #68]	; (800b794 <FLASH_SetErrorCode+0x88>)
 800b74e:	68da      	ldr	r2, [r3, #12]
 800b750:	0610      	lsls	r0, r2, #24
 800b752:	d506      	bpl.n	800b762 <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b754:	4910      	ldr	r1, [pc, #64]	; (800b798 <FLASH_SetErrorCode+0x8c>)
 800b756:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b758:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b75a:	f042 0202 	orr.w	r2, r2, #2
 800b75e:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b760:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 800b762:	4b0c      	ldr	r3, [pc, #48]	; (800b794 <FLASH_SetErrorCode+0x88>)
 800b764:	68da      	ldr	r2, [r3, #12]
 800b766:	05d1      	lsls	r1, r2, #23
 800b768:	d507      	bpl.n	800b77a <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b76a:	490b      	ldr	r1, [pc, #44]	; (800b798 <FLASH_SetErrorCode+0x8c>)
 800b76c:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b76e:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b772:	f042 0201 	orr.w	r2, r2, #1
 800b776:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b778:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 800b77a:	4b06      	ldr	r3, [pc, #24]	; (800b794 <FLASH_SetErrorCode+0x88>)
 800b77c:	68da      	ldr	r2, [r3, #12]
 800b77e:	0792      	lsls	r2, r2, #30
 800b780:	d506      	bpl.n	800b790 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b782:	4905      	ldr	r1, [pc, #20]	; (800b798 <FLASH_SetErrorCode+0x8c>)
 800b784:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b786:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b788:	f042 0220 	orr.w	r2, r2, #32
 800b78c:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b78e:	60d8      	str	r0, [r3, #12]
  }
}
 800b790:	4770      	bx	lr
 800b792:	bf00      	nop
 800b794:	40023c00 	.word	0x40023c00
 800b798:	20002a24 	.word	0x20002a24

0800b79c <HAL_FLASH_Program>:
{
 800b79c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 800b7a0:	4f4d      	ldr	r7, [pc, #308]	; (800b8d8 <HAL_FLASH_Program+0x13c>)
{
 800b7a2:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 800b7a4:	7e3b      	ldrb	r3, [r7, #24]
 800b7a6:	2b01      	cmp	r3, #1
 800b7a8:	d060      	beq.n	800b86c <HAL_FLASH_Program+0xd0>
 800b7aa:	2301      	movs	r3, #1
 800b7ac:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b7ae:	2300      	movs	r3, #0
 800b7b0:	4681      	mov	r9, r0
 800b7b2:	468a      	mov	sl, r1
 800b7b4:	4690      	mov	r8, r2
 800b7b6:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b7b8:	f7ff ff08 	bl	800b5cc <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7bc:	4d47      	ldr	r5, [pc, #284]	; (800b8dc <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b7be:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b7c0:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7c4:	e004      	b.n	800b7d0 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b7c6:	f7ff ff01 	bl	800b5cc <HAL_GetTick>
 800b7ca:	1b00      	subs	r0, r0, r4
 800b7cc:	42b0      	cmp	r0, r6
 800b7ce:	d848      	bhi.n	800b862 <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7d0:	68eb      	ldr	r3, [r5, #12]
 800b7d2:	03d8      	lsls	r0, r3, #15
 800b7d4:	d4f7      	bmi.n	800b7c6 <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b7d6:	68eb      	ldr	r3, [r5, #12]
 800b7d8:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b7da:	bf44      	itt	mi
 800b7dc:	2301      	movmi	r3, #1
 800b7de:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b7e0:	4b3e      	ldr	r3, [pc, #248]	; (800b8dc <HAL_FLASH_Program+0x140>)
 800b7e2:	68da      	ldr	r2, [r3, #12]
 800b7e4:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 800b7e8:	d154      	bne.n	800b894 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800b7ea:	f1b9 0f00 	cmp.w	r9, #0
 800b7ee:	d040      	beq.n	800b872 <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b7f0:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b7f4:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b7f6:	d051      	beq.n	800b89c <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b7f8:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b7fc:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b7fe:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b802:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b804:	d05e      	beq.n	800b8c4 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 800b806:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800b80a:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b80c:	691a      	ldr	r2, [r3, #16]
 800b80e:	f042 0201 	orr.w	r2, r2, #1
 800b812:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 800b814:	f8ca 8000 	str.w	r8, [sl]
 800b818:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800b81c:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b820:	2300      	movs	r3, #0
 800b822:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b824:	f7ff fed2 	bl	800b5cc <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b828:	4d2c      	ldr	r5, [pc, #176]	; (800b8dc <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b82a:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b82c:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b830:	e004      	b.n	800b83c <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b832:	f7ff fecb 	bl	800b5cc <HAL_GetTick>
 800b836:	1b00      	subs	r0, r0, r4
 800b838:	42b0      	cmp	r0, r6
 800b83a:	d829      	bhi.n	800b890 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b83c:	68eb      	ldr	r3, [r5, #12]
 800b83e:	03da      	lsls	r2, r3, #15
 800b840:	d4f7      	bmi.n	800b832 <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b842:	68eb      	ldr	r3, [r5, #12]
 800b844:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b846:	bf44      	itt	mi
 800b848:	2301      	movmi	r3, #1
 800b84a:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b84c:	4b23      	ldr	r3, [pc, #140]	; (800b8dc <HAL_FLASH_Program+0x140>)
 800b84e:	68d8      	ldr	r0, [r3, #12]
 800b850:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b854:	d132      	bne.n	800b8bc <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 800b856:	4a21      	ldr	r2, [pc, #132]	; (800b8dc <HAL_FLASH_Program+0x140>)
 800b858:	6913      	ldr	r3, [r2, #16]
 800b85a:	f023 0301 	bic.w	r3, r3, #1
 800b85e:	6113      	str	r3, [r2, #16]
 800b860:	e000      	b.n	800b864 <HAL_FLASH_Program+0xc8>
 800b862:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 800b864:	2300      	movs	r3, #0
 800b866:	763b      	strb	r3, [r7, #24]
}
 800b868:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 800b86c:	2002      	movs	r0, #2
}
 800b86e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b872:	691a      	ldr	r2, [r3, #16]
 800b874:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b878:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800b87a:	691a      	ldr	r2, [r3, #16]
 800b87c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b87e:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 800b880:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b884:	f042 0201 	orr.w	r2, r2, #1
 800b888:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800b88a:	f88a 8000 	strb.w	r8, [sl]
}
 800b88e:	e7c7      	b.n	800b820 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 800b890:	2003      	movs	r0, #3
 800b892:	e7e0      	b.n	800b856 <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 800b894:	f7ff ff3a 	bl	800b70c <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b898:	2001      	movs	r0, #1
 800b89a:	e7e3      	b.n	800b864 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b89c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b8a0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800b8a2:	691a      	ldr	r2, [r3, #16]
 800b8a4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b8a8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b8aa:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800b8ac:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b8b0:	f042 0201 	orr.w	r2, r2, #1
 800b8b4:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800b8b6:	f8aa 8000 	strh.w	r8, [sl]
}
 800b8ba:	e7b1      	b.n	800b820 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 800b8bc:	f7ff ff26 	bl	800b70c <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b8c0:	2001      	movs	r0, #1
 800b8c2:	e7c8      	b.n	800b856 <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b8c4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b8c8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b8ca:	691a      	ldr	r2, [r3, #16]
 800b8cc:	f042 0201 	orr.w	r2, r2, #1
 800b8d0:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 800b8d2:	f8ca 8000 	str.w	r8, [sl]
}
 800b8d6:	e7a3      	b.n	800b820 <HAL_FLASH_Program+0x84>
 800b8d8:	20002a24 	.word	0x20002a24
 800b8dc:	40023c00 	.word	0x40023c00

0800b8e0 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b8e0:	4b06      	ldr	r3, [pc, #24]	; (800b8fc <HAL_FLASH_Unlock+0x1c>)
 800b8e2:	691a      	ldr	r2, [r3, #16]
 800b8e4:	2a00      	cmp	r2, #0
 800b8e6:	db01      	blt.n	800b8ec <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 800b8e8:	2000      	movs	r0, #0
}
 800b8ea:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b8ec:	4904      	ldr	r1, [pc, #16]	; (800b900 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b8ee:	4a05      	ldr	r2, [pc, #20]	; (800b904 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b8f0:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b8f2:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b8f4:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 800b8f6:	0fc0      	lsrs	r0, r0, #31
 800b8f8:	4770      	bx	lr
 800b8fa:	bf00      	nop
 800b8fc:	40023c00 	.word	0x40023c00
 800b900:	45670123 	.word	0x45670123
 800b904:	cdef89ab 	.word	0xcdef89ab

0800b908 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 800b908:	4a03      	ldr	r2, [pc, #12]	; (800b918 <HAL_FLASH_Lock+0x10>)
 800b90a:	6913      	ldr	r3, [r2, #16]
 800b90c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 800b910:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 800b912:	6113      	str	r3, [r2, #16]
}
 800b914:	4770      	bx	lr
 800b916:	bf00      	nop
 800b918:	40023c00 	.word	0x40023c00

0800b91c <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800b91c:	4b01      	ldr	r3, [pc, #4]	; (800b924 <HAL_FLASH_GetError+0x8>)
 800b91e:	69d8      	ldr	r0, [r3, #28]
}  
 800b920:	4770      	bx	lr
 800b922:	bf00      	nop
 800b924:	20002a24 	.word	0x20002a24

0800b928 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b928:	4b14      	ldr	r3, [pc, #80]	; (800b97c <FLASH_WaitForLastOperation+0x54>)
{ 
 800b92a:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b92c:	2200      	movs	r2, #0
{ 
 800b92e:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b930:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 800b932:	f7ff fe4b 	bl	800b5cc <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b936:	4e12      	ldr	r6, [pc, #72]	; (800b980 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 800b938:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b93a:	1c63      	adds	r3, r4, #1
 800b93c:	d10f      	bne.n	800b95e <FLASH_WaitForLastOperation+0x36>
 800b93e:	4a10      	ldr	r2, [pc, #64]	; (800b980 <FLASH_WaitForLastOperation+0x58>)
 800b940:	68d3      	ldr	r3, [r2, #12]
 800b942:	03d8      	lsls	r0, r3, #15
 800b944:	d4fc      	bmi.n	800b940 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b946:	4b0e      	ldr	r3, [pc, #56]	; (800b980 <FLASH_WaitForLastOperation+0x58>)
 800b948:	68da      	ldr	r2, [r3, #12]
 800b94a:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b94c:	bf44      	itt	mi
 800b94e:	2201      	movmi	r2, #1
 800b950:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b952:	4b0b      	ldr	r3, [pc, #44]	; (800b980 <FLASH_WaitForLastOperation+0x58>)
 800b954:	68d8      	ldr	r0, [r3, #12]
 800b956:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b95a:	d10b      	bne.n	800b974 <FLASH_WaitForLastOperation+0x4c>
}  
 800b95c:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b95e:	68f3      	ldr	r3, [r6, #12]
 800b960:	03d9      	lsls	r1, r3, #15
 800b962:	d5f0      	bpl.n	800b946 <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b964:	b124      	cbz	r4, 800b970 <FLASH_WaitForLastOperation+0x48>
 800b966:	f7ff fe31 	bl	800b5cc <HAL_GetTick>
 800b96a:	1b40      	subs	r0, r0, r5
 800b96c:	42a0      	cmp	r0, r4
 800b96e:	d9e4      	bls.n	800b93a <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 800b970:	2003      	movs	r0, #3
}  
 800b972:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 800b974:	f7ff feca 	bl	800b70c <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b978:	2001      	movs	r0, #1
}  
 800b97a:	bd70      	pop	{r4, r5, r6, pc}
 800b97c:	20002a24 	.word	0x20002a24
 800b980:	40023c00 	.word	0x40023c00

0800b984 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800b984:	4b14      	ldr	r3, [pc, #80]	; (800b9d8 <FLASH_FlushCaches+0x54>)
 800b986:	681a      	ldr	r2, [r3, #0]
 800b988:	0591      	lsls	r1, r2, #22
 800b98a:	d50f      	bpl.n	800b9ac <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 800b98c:	681a      	ldr	r2, [r3, #0]
 800b98e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800b992:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 800b994:	681a      	ldr	r2, [r3, #0]
 800b996:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b99a:	601a      	str	r2, [r3, #0]
 800b99c:	681a      	ldr	r2, [r3, #0]
 800b99e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b9a2:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b9a4:	681a      	ldr	r2, [r3, #0]
 800b9a6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b9aa:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 800b9ac:	4b0a      	ldr	r3, [pc, #40]	; (800b9d8 <FLASH_FlushCaches+0x54>)
 800b9ae:	681a      	ldr	r2, [r3, #0]
 800b9b0:	0552      	lsls	r2, r2, #21
 800b9b2:	d50f      	bpl.n	800b9d4 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 800b9b4:	681a      	ldr	r2, [r3, #0]
 800b9b6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9ba:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 800b9bc:	681a      	ldr	r2, [r3, #0]
 800b9be:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b9c2:	601a      	str	r2, [r3, #0]
 800b9c4:	681a      	ldr	r2, [r3, #0]
 800b9c6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800b9ca:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800b9cc:	681a      	ldr	r2, [r3, #0]
 800b9ce:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b9d2:	601a      	str	r2, [r3, #0]
  }
}
 800b9d4:	4770      	bx	lr
 800b9d6:	bf00      	nop
 800b9d8:	40023c00 	.word	0x40023c00

0800b9dc <HAL_FLASHEx_Erase>:
{
 800b9dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 800b9e0:	4f44      	ldr	r7, [pc, #272]	; (800baf4 <HAL_FLASHEx_Erase+0x118>)
 800b9e2:	7e3b      	ldrb	r3, [r7, #24]
 800b9e4:	2b01      	cmp	r3, #1
 800b9e6:	d053      	beq.n	800ba90 <HAL_FLASHEx_Erase+0xb4>
 800b9e8:	2301      	movs	r3, #1
 800b9ea:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b9ec:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b9f0:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 800b9f2:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b9f4:	f7ff ff98 	bl	800b928 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 800b9f8:	4606      	mov	r6, r0
 800b9fa:	2800      	cmp	r0, #0
 800b9fc:	d143      	bne.n	800ba86 <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800b9fe:	f04f 33ff 	mov.w	r3, #4294967295
 800ba02:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800ba06:	f8d9 3000 	ldr.w	r3, [r9]
 800ba0a:	2b01      	cmp	r3, #1
 800ba0c:	d044      	beq.n	800ba98 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800ba0e:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 800ba12:	442b      	add	r3, r5
 800ba14:	429d      	cmp	r5, r3
 800ba16:	d234      	bcs.n	800ba82 <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba18:	4c37      	ldr	r4, [pc, #220]	; (800baf8 <HAL_FLASHEx_Erase+0x11c>)
 800ba1a:	e005      	b.n	800ba28 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800ba1c:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 800ba20:	3501      	adds	r5, #1
 800ba22:	4413      	add	r3, r2
 800ba24:	42ab      	cmp	r3, r5
 800ba26:	d92c      	bls.n	800ba82 <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 800ba28:	f899 3010 	ldrb.w	r3, [r9, #16]
 800ba2c:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800ba2e:	f44f 7140 	mov.w	r1, #768	; 0x300
 800ba32:	bf98      	it	ls
 800ba34:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba36:	6923      	ldr	r3, [r4, #16]
 800ba38:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ba3c:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800ba3e:	6923      	ldr	r3, [r4, #16]
 800ba40:	430b      	orrs	r3, r1
 800ba42:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 800ba44:	6923      	ldr	r3, [r4, #16]
 800ba46:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800ba4a:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800ba4c:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 800ba4e:	2d0b      	cmp	r5, #11
    Sector += 4U;
 800ba50:	bf8c      	ite	hi
 800ba52:	1d2a      	addhi	r2, r5, #4
 800ba54:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800ba56:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ba5a:	f043 0302 	orr.w	r3, r3, #2
 800ba5e:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 800ba60:	6923      	ldr	r3, [r4, #16]
 800ba62:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ba66:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ba68:	f24c 3050 	movw	r0, #50000	; 0xc350
 800ba6c:	f7ff ff5c 	bl	800b928 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 800ba70:	6923      	ldr	r3, [r4, #16]
 800ba72:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800ba76:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 800ba78:	2800      	cmp	r0, #0
 800ba7a:	d0cf      	beq.n	800ba1c <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 800ba7c:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ba80:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 800ba82:	f7ff ff7f 	bl	800b984 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800ba86:	2300      	movs	r3, #0
 800ba88:	763b      	strb	r3, [r7, #24]
}
 800ba8a:	4630      	mov	r0, r6
 800ba8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 800ba90:	2602      	movs	r6, #2
}
 800ba92:	4630      	mov	r0, r6
 800ba94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba98:	4a17      	ldr	r2, [pc, #92]	; (800baf8 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800ba9a:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba9e:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800baa0:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800baa4:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800baa8:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800baaa:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 800baac:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800baae:	d01a      	beq.n	800bae6 <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 800bab0:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 800bab2:	bf0c      	ite	eq
 800bab4:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 800bab8:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 800babc:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 800babe:	4c0e      	ldr	r4, [pc, #56]	; (800baf8 <HAL_FLASHEx_Erase+0x11c>)
 800bac0:	021b      	lsls	r3, r3, #8
 800bac2:	6922      	ldr	r2, [r4, #16]
 800bac4:	b29b      	uxth	r3, r3
 800bac6:	4313      	orrs	r3, r2
 800bac8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bacc:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bace:	f24c 3050 	movw	r0, #50000	; 0xc350
 800bad2:	f7ff ff29 	bl	800b928 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 800bad6:	6923      	ldr	r3, [r4, #16]
 800bad8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800badc:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bae0:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 800bae2:	6123      	str	r3, [r4, #16]
 800bae4:	e7cd      	b.n	800ba82 <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 800bae6:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800baea:	f041 0104 	orr.w	r1, r1, #4
 800baee:	6111      	str	r1, [r2, #16]
 800baf0:	e7e5      	b.n	800babe <HAL_FLASHEx_Erase+0xe2>
 800baf2:	bf00      	nop
 800baf4:	20002a24 	.word	0x20002a24
 800baf8:	40023c00 	.word	0x40023c00

0800bafc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800bafc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bb00:	2200      	movs	r2, #0
 800bb02:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bb04:	f8df a260 	ldr.w	sl, [pc, #608]	; 800bd68 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800bb08:	4e90      	ldr	r6, [pc, #576]	; (800bd4c <HAL_GPIO_Init+0x250>)
{
 800bb0a:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bb0c:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bb0e:	4689      	mov	r9, r1
 800bb10:	e005      	b.n	800bb1e <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bb12:	3301      	adds	r3, #1
 800bb14:	2b10      	cmp	r3, #16
 800bb16:	f102 0202 	add.w	r2, r2, #2
 800bb1a:	f000 8095 	beq.w	800bc48 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800bb1e:	2101      	movs	r1, #1
 800bb20:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bb22:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800bb26:	43a1      	bics	r1, r4
 800bb28:	d1f3      	bne.n	800bb12 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800bb2a:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800bb2e:	f00c 0103 	and.w	r1, ip, #3
 800bb32:	1e4d      	subs	r5, r1, #1
 800bb34:	2d01      	cmp	r5, #1
 800bb36:	f240 808a 	bls.w	800bc4e <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800bb3a:	2903      	cmp	r1, #3
 800bb3c:	f040 80ca 	bne.w	800bcd4 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bb40:	4091      	lsls	r1, r2
 800bb42:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800bb44:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800bb46:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800bb48:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bb4a:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800bb4e:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bb50:	d0df      	beq.n	800bb12 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bb52:	2100      	movs	r1, #0
 800bb54:	9103      	str	r1, [sp, #12]
 800bb56:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bb5a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800bb5e:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800bb62:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bb66:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800bb6a:	9103      	str	r1, [sp, #12]
 800bb6c:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800bb6e:	f023 0103 	bic.w	r1, r3, #3
 800bb72:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800bb76:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bb7a:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800bb7e:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bb80:	00bf      	lsls	r7, r7, #2
 800bb82:	f04f 0e0f 	mov.w	lr, #15
 800bb86:	fa0e fe07 	lsl.w	lr, lr, r7
 800bb8a:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bb8e:	4d70      	ldr	r5, [pc, #448]	; (800bd50 <HAL_GPIO_Init+0x254>)
 800bb90:	42a8      	cmp	r0, r5
 800bb92:	d02e      	beq.n	800bbf2 <HAL_GPIO_Init+0xf6>
 800bb94:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800bb98:	42a8      	cmp	r0, r5
 800bb9a:	f000 809f 	beq.w	800bcdc <HAL_GPIO_Init+0x1e0>
 800bb9e:	4d6d      	ldr	r5, [pc, #436]	; (800bd54 <HAL_GPIO_Init+0x258>)
 800bba0:	42a8      	cmp	r0, r5
 800bba2:	f000 80a2 	beq.w	800bcea <HAL_GPIO_Init+0x1ee>
 800bba6:	4d6c      	ldr	r5, [pc, #432]	; (800bd58 <HAL_GPIO_Init+0x25c>)
 800bba8:	42a8      	cmp	r0, r5
 800bbaa:	f000 80a5 	beq.w	800bcf8 <HAL_GPIO_Init+0x1fc>
 800bbae:	4d6b      	ldr	r5, [pc, #428]	; (800bd5c <HAL_GPIO_Init+0x260>)
 800bbb0:	42a8      	cmp	r0, r5
 800bbb2:	f000 80a8 	beq.w	800bd06 <HAL_GPIO_Init+0x20a>
 800bbb6:	4d6a      	ldr	r5, [pc, #424]	; (800bd60 <HAL_GPIO_Init+0x264>)
 800bbb8:	42a8      	cmp	r0, r5
 800bbba:	f000 80b2 	beq.w	800bd22 <HAL_GPIO_Init+0x226>
 800bbbe:	4d69      	ldr	r5, [pc, #420]	; (800bd64 <HAL_GPIO_Init+0x268>)
 800bbc0:	42a8      	cmp	r0, r5
 800bbc2:	f000 80b5 	beq.w	800bd30 <HAL_GPIO_Init+0x234>
 800bbc6:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800bd6c <HAL_GPIO_Init+0x270>
 800bbca:	4570      	cmp	r0, lr
 800bbcc:	f000 80a2 	beq.w	800bd14 <HAL_GPIO_Init+0x218>
 800bbd0:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800bd70 <HAL_GPIO_Init+0x274>
 800bbd4:	4570      	cmp	r0, lr
 800bbd6:	f000 80b2 	beq.w	800bd3e <HAL_GPIO_Init+0x242>
 800bbda:	f8df e198 	ldr.w	lr, [pc, #408]	; 800bd74 <HAL_GPIO_Init+0x278>
 800bbde:	4570      	cmp	r0, lr
 800bbe0:	bf0c      	ite	eq
 800bbe2:	f04f 0e09 	moveq.w	lr, #9
 800bbe6:	f04f 0e0a 	movne.w	lr, #10
 800bbea:	fa0e f707 	lsl.w	r7, lr, r7
 800bbee:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800bbf2:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800bbf6:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800bbf8:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800bbfc:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800bc00:	bf0c      	ite	eq
 800bc02:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc04:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800bc08:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800bc0a:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800bc0c:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800bc10:	bf0c      	ite	eq
 800bc12:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc14:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800bc18:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800bc1a:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800bc1c:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800bc20:	bf0c      	ite	eq
 800bc22:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc24:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800bc28:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800bc2a:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800bc2c:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc30:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800bc34:	bf0c      	ite	eq
 800bc36:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc38:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc3c:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800bc3e:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc40:	f102 0202 	add.w	r2, r2, #2
 800bc44:	f47f af6b 	bne.w	800bb1e <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800bc48:	b005      	add	sp, #20
 800bc4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc4e:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800bc52:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc56:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc5a:	2503      	movs	r5, #3
 800bc5c:	fa05 f802 	lsl.w	r8, r5, r2
 800bc60:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc64:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800bc68:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800bc6a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800bc6c:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800bc70:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800bc74:	409f      	lsls	r7, r3
 800bc76:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc7a:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800bc7e:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800bc80:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800bc82:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800bc86:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800bc8a:	4097      	lsls	r7, r2
 800bc8c:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bc90:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800bc92:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bc94:	fa01 f102 	lsl.w	r1, r1, r2
 800bc98:	f47f af54 	bne.w	800bb44 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800bc9c:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800bca0:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bca4:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800bca8:	f8de 7020 	ldr.w	r7, [lr, #32]
 800bcac:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bcae:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bcb2:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bcb6:	fa07 f708 	lsl.w	r7, r7, r8
 800bcba:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bcbc:	270f      	movs	r7, #15
 800bcbe:	fa07 f808 	lsl.w	r8, r7, r8
 800bcc2:	9f00      	ldr	r7, [sp, #0]
 800bcc4:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bcc8:	9f01      	ldr	r7, [sp, #4]
 800bcca:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800bcce:	f8ce 7020 	str.w	r7, [lr, #32]
 800bcd2:	e737      	b.n	800bb44 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bcd4:	2503      	movs	r5, #3
 800bcd6:	4095      	lsls	r5, r2
 800bcd8:	43ed      	mvns	r5, r5
 800bcda:	e7d1      	b.n	800bc80 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bcdc:	f04f 0e01 	mov.w	lr, #1
 800bce0:	fa0e f707 	lsl.w	r7, lr, r7
 800bce4:	ea48 0807 	orr.w	r8, r8, r7
 800bce8:	e783      	b.n	800bbf2 <HAL_GPIO_Init+0xf6>
 800bcea:	f04f 0e02 	mov.w	lr, #2
 800bcee:	fa0e f707 	lsl.w	r7, lr, r7
 800bcf2:	ea48 0807 	orr.w	r8, r8, r7
 800bcf6:	e77c      	b.n	800bbf2 <HAL_GPIO_Init+0xf6>
 800bcf8:	f04f 0e03 	mov.w	lr, #3
 800bcfc:	fa0e f707 	lsl.w	r7, lr, r7
 800bd00:	ea48 0807 	orr.w	r8, r8, r7
 800bd04:	e775      	b.n	800bbf2 <HAL_GPIO_Init+0xf6>
 800bd06:	f04f 0e04 	mov.w	lr, #4
 800bd0a:	fa0e f707 	lsl.w	r7, lr, r7
 800bd0e:	ea48 0807 	orr.w	r8, r8, r7
 800bd12:	e76e      	b.n	800bbf2 <HAL_GPIO_Init+0xf6>
 800bd14:	f04f 0e07 	mov.w	lr, #7
 800bd18:	fa0e f707 	lsl.w	r7, lr, r7
 800bd1c:	ea48 0807 	orr.w	r8, r8, r7
 800bd20:	e767      	b.n	800bbf2 <HAL_GPIO_Init+0xf6>
 800bd22:	f04f 0e05 	mov.w	lr, #5
 800bd26:	fa0e f707 	lsl.w	r7, lr, r7
 800bd2a:	ea48 0807 	orr.w	r8, r8, r7
 800bd2e:	e760      	b.n	800bbf2 <HAL_GPIO_Init+0xf6>
 800bd30:	f04f 0e06 	mov.w	lr, #6
 800bd34:	fa0e f707 	lsl.w	r7, lr, r7
 800bd38:	ea48 0807 	orr.w	r8, r8, r7
 800bd3c:	e759      	b.n	800bbf2 <HAL_GPIO_Init+0xf6>
 800bd3e:	f04f 0e08 	mov.w	lr, #8
 800bd42:	fa0e f707 	lsl.w	r7, lr, r7
 800bd46:	ea48 0807 	orr.w	r8, r8, r7
 800bd4a:	e752      	b.n	800bbf2 <HAL_GPIO_Init+0xf6>
 800bd4c:	40013c00 	.word	0x40013c00
 800bd50:	40020000 	.word	0x40020000
 800bd54:	40020800 	.word	0x40020800
 800bd58:	40020c00 	.word	0x40020c00
 800bd5c:	40021000 	.word	0x40021000
 800bd60:	40021400 	.word	0x40021400
 800bd64:	40021800 	.word	0x40021800
 800bd68:	40023800 	.word	0x40023800
 800bd6c:	40021c00 	.word	0x40021c00
 800bd70:	40022000 	.word	0x40022000
 800bd74:	40022400 	.word	0x40022400

0800bd78 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800bd78:	6903      	ldr	r3, [r0, #16]
 800bd7a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800bd7c:	bf14      	ite	ne
 800bd7e:	2001      	movne	r0, #1
 800bd80:	2000      	moveq	r0, #0
 800bd82:	4770      	bx	lr

0800bd84 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800bd84:	b902      	cbnz	r2, 800bd88 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800bd86:	0409      	lsls	r1, r1, #16
 800bd88:	6181      	str	r1, [r0, #24]
  }
}
 800bd8a:	4770      	bx	lr

0800bd8c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800bd8c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800bd8e:	ea01 0203 	and.w	r2, r1, r3
 800bd92:	ea21 0103 	bic.w	r1, r1, r3
 800bd96:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800bd9a:	6181      	str	r1, [r0, #24]
}
 800bd9c:	4770      	bx	lr
 800bd9e:	bf00      	nop

0800bda0 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800bda0:	4770      	bx	lr
 800bda2:	bf00      	nop

0800bda4 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800bda4:	4a04      	ldr	r2, [pc, #16]	; (800bdb8 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800bda6:	6951      	ldr	r1, [r2, #20]
 800bda8:	4201      	tst	r1, r0
 800bdaa:	d100      	bne.n	800bdae <HAL_GPIO_EXTI_IRQHandler+0xa>
 800bdac:	4770      	bx	lr
{
 800bdae:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800bdb0:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800bdb2:	f7ff fff5 	bl	800bda0 <HAL_GPIO_EXTI_Callback>
}
 800bdb6:	bd08      	pop	{r3, pc}
 800bdb8:	40013c00 	.word	0x40013c00

0800bdbc <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800bdbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdc0:	6804      	ldr	r4, [r0, #0]
{
 800bdc2:	b083      	sub	sp, #12
 800bdc4:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdc6:	6823      	ldr	r3, [r4, #0]
{
 800bdc8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800bdcc:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdd0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bdd4:	4606      	mov	r6, r0
 800bdd6:	468a      	mov	sl, r1
 800bdd8:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdda:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800bddc:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bde0:	d136      	bne.n	800be50 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bde2:	6965      	ldr	r5, [r4, #20]
 800bde4:	07e8      	lsls	r0, r5, #31
 800bde6:	d5fc      	bpl.n	800bde2 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bde8:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800bdec:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800bdee:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bdf2:	d003      	beq.n	800bdfc <I2C_RequestMemoryWrite+0x40>
 800bdf4:	e04f      	b.n	800be96 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bdf6:	6961      	ldr	r1, [r4, #20]
 800bdf8:	054d      	lsls	r5, r1, #21
 800bdfa:	d45d      	bmi.n	800beb8 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bdfc:	6961      	ldr	r1, [r4, #20]
 800bdfe:	078b      	lsls	r3, r1, #30
 800be00:	d5f9      	bpl.n	800bdf6 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800be02:	2300      	movs	r3, #0
 800be04:	9301      	str	r3, [sp, #4]
 800be06:	6963      	ldr	r3, [r4, #20]
 800be08:	9301      	str	r3, [sp, #4]
 800be0a:	69a3      	ldr	r3, [r4, #24]
 800be0c:	9301      	str	r3, [sp, #4]
 800be0e:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800be10:	f1b9 3fff 	cmp.w	r9, #4294967295
 800be14:	f040 8088 	bne.w	800bf28 <I2C_RequestMemoryWrite+0x16c>
 800be18:	6963      	ldr	r3, [r4, #20]
 800be1a:	061a      	lsls	r2, r3, #24
 800be1c:	d464      	bmi.n	800bee8 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800be1e:	6963      	ldr	r3, [r4, #20]
 800be20:	055b      	lsls	r3, r3, #21
 800be22:	d5f9      	bpl.n	800be18 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800be24:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be26:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800be2a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be2c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800be2e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800be30:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800be34:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800be38:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800be3a:	f043 0304 	orr.w	r3, r3, #4
 800be3e:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be40:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800be42:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be44:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800be46:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be4a:	d066      	beq.n	800bf1a <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800be4c:	2001      	movs	r0, #1
 800be4e:	e01f      	b.n	800be90 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800be50:	6963      	ldr	r3, [r4, #20]
 800be52:	07d9      	lsls	r1, r3, #31
 800be54:	d4c8      	bmi.n	800bde8 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800be56:	f7ff fbb9 	bl	800b5cc <HAL_GetTick>
 800be5a:	eba0 000b 	sub.w	r0, r0, fp
 800be5e:	4581      	cmp	r9, r0
 800be60:	d304      	bcc.n	800be6c <I2C_RequestMemoryWrite+0xb0>
 800be62:	f1b9 0f00 	cmp.w	r9, #0
 800be66:	d001      	beq.n	800be6c <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be68:	6834      	ldr	r4, [r6, #0]
 800be6a:	e7b7      	b.n	800bddc <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800be6c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800be6e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800be70:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800be72:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800be76:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800be7a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be7c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800be7e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800be82:	f042 0220 	orr.w	r2, r2, #32
 800be86:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be88:	680b      	ldr	r3, [r1, #0]
 800be8a:	05dc      	lsls	r4, r3, #23
 800be8c:	d435      	bmi.n	800befa <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800be8e:	2003      	movs	r0, #3
}
 800be90:	b003      	add	sp, #12
 800be92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800be96:	6963      	ldr	r3, [r4, #20]
 800be98:	0798      	lsls	r0, r3, #30
 800be9a:	d4b2      	bmi.n	800be02 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800be9c:	6963      	ldr	r3, [r4, #20]
 800be9e:	055a      	lsls	r2, r3, #21
 800bea0:	d40a      	bmi.n	800beb8 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bea2:	f7ff fb93 	bl	800b5cc <HAL_GetTick>
 800bea6:	eba0 000b 	sub.w	r0, r0, fp
 800beaa:	4581      	cmp	r9, r0
 800beac:	d34e      	bcc.n	800bf4c <I2C_RequestMemoryWrite+0x190>
 800beae:	f1b9 0f00 	cmp.w	r9, #0
 800beb2:	d04b      	beq.n	800bf4c <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800beb4:	6834      	ldr	r4, [r6, #0]
 800beb6:	e79a      	b.n	800bdee <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800beb8:	6823      	ldr	r3, [r4, #0]
 800beba:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800bebe:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bec0:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bec2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800bec6:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bec8:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800beca:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800becc:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bed0:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bed4:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800bed6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800beda:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800bede:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bee0:	6433      	str	r3, [r6, #64]	; 0x40
}
 800bee2:	b003      	add	sp, #12
 800bee4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bee8:	f1b8 0f01 	cmp.w	r8, #1
 800beec:	d109      	bne.n	800bf02 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800beee:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800bef0:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bef2:	6127      	str	r7, [r4, #16]
}
 800bef4:	b003      	add	sp, #12
 800bef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800befa:	f44f 7300 	mov.w	r3, #512	; 0x200
 800befe:	6433      	str	r3, [r6, #64]	; 0x40
 800bf00:	e7c5      	b.n	800be8e <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800bf02:	0a3b      	lsrs	r3, r7, #8
 800bf04:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf06:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bf0a:	d12e      	bne.n	800bf6a <I2C_RequestMemoryWrite+0x1ae>
 800bf0c:	6963      	ldr	r3, [r4, #20]
 800bf0e:	0619      	lsls	r1, r3, #24
 800bf10:	d4ed      	bmi.n	800beee <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf12:	6963      	ldr	r3, [r4, #20]
 800bf14:	055a      	lsls	r2, r3, #21
 800bf16:	d5f9      	bpl.n	800bf0c <I2C_RequestMemoryWrite+0x150>
 800bf18:	e784      	b.n	800be24 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bf1a:	6832      	ldr	r2, [r6, #0]
 800bf1c:	6813      	ldr	r3, [r2, #0]
 800bf1e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800bf22:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bf24:	6013      	str	r3, [r2, #0]
 800bf26:	e7b3      	b.n	800be90 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf28:	6963      	ldr	r3, [r4, #20]
 800bf2a:	061d      	lsls	r5, r3, #24
 800bf2c:	d4dc      	bmi.n	800bee8 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf2e:	6963      	ldr	r3, [r4, #20]
 800bf30:	0559      	lsls	r1, r3, #21
 800bf32:	f53f af77 	bmi.w	800be24 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf36:	f7ff fb49 	bl	800b5cc <HAL_GetTick>
 800bf3a:	eba0 000b 	sub.w	r0, r0, fp
 800bf3e:	4581      	cmp	r9, r0
 800bf40:	d325      	bcc.n	800bf8e <I2C_RequestMemoryWrite+0x1d2>
 800bf42:	f1b9 0f00 	cmp.w	r9, #0
 800bf46:	d022      	beq.n	800bf8e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf48:	6834      	ldr	r4, [r6, #0]
 800bf4a:	e761      	b.n	800be10 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bf4c:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800bf4e:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bf50:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800bf52:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bf56:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf5a:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800bf5c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf60:	f043 0320 	orr.w	r3, r3, #32
 800bf64:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800bf66:	2001      	movs	r0, #1
 800bf68:	e792      	b.n	800be90 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf6a:	6963      	ldr	r3, [r4, #20]
 800bf6c:	061b      	lsls	r3, r3, #24
 800bf6e:	d4be      	bmi.n	800beee <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf70:	6963      	ldr	r3, [r4, #20]
 800bf72:	0558      	lsls	r0, r3, #21
 800bf74:	f53f af56 	bmi.w	800be24 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf78:	f7ff fb28 	bl	800b5cc <HAL_GetTick>
 800bf7c:	eba0 000b 	sub.w	r0, r0, fp
 800bf80:	4581      	cmp	r9, r0
 800bf82:	d304      	bcc.n	800bf8e <I2C_RequestMemoryWrite+0x1d2>
 800bf84:	f1b9 0f00 	cmp.w	r9, #0
 800bf88:	d001      	beq.n	800bf8e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf8a:	6834      	ldr	r4, [r6, #0]
 800bf8c:	e7bb      	b.n	800bf06 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bf8e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bf90:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bf92:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bf94:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bf98:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bf9c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800bf9e:	4313      	orrs	r3, r2
 800bfa0:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800bfa2:	e74d      	b.n	800be40 <I2C_RequestMemoryWrite+0x84>

0800bfa4 <I2C_RequestMemoryRead>:
{
 800bfa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bfa8:	6804      	ldr	r4, [r0, #0]
{
 800bfaa:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bfac:	6823      	ldr	r3, [r4, #0]
 800bfae:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800bfb2:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bfb4:	6823      	ldr	r3, [r4, #0]
{
 800bfb6:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bfb8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bfbc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800bfc0:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bfc4:	6023      	str	r3, [r4, #0]
{
 800bfc6:	4606      	mov	r6, r0
 800bfc8:	468b      	mov	fp, r1
 800bfca:	4617      	mov	r7, r2
 800bfcc:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfd0:	d13a      	bne.n	800c048 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bfd2:	6965      	ldr	r5, [r4, #20]
 800bfd4:	07eb      	lsls	r3, r5, #31
 800bfd6:	d5fc      	bpl.n	800bfd2 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bfd8:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800bfdc:	6123      	str	r3, [r4, #16]
 800bfde:	fa5f fb8b 	uxtb.w	fp, fp
 800bfe2:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfe6:	d003      	beq.n	800bff0 <I2C_RequestMemoryRead+0x4c>
 800bfe8:	e069      	b.n	800c0be <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bfea:	6965      	ldr	r5, [r4, #20]
 800bfec:	056a      	lsls	r2, r5, #21
 800bfee:	d44e      	bmi.n	800c08e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bff0:	6965      	ldr	r5, [r4, #20]
 800bff2:	07a9      	lsls	r1, r5, #30
 800bff4:	d5f9      	bpl.n	800bfea <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bff6:	2300      	movs	r3, #0
 800bff8:	9301      	str	r3, [sp, #4]
 800bffa:	6963      	ldr	r3, [r4, #20]
 800bffc:	9301      	str	r3, [sp, #4]
 800bffe:	69a3      	ldr	r3, [r4, #24]
 800c000:	9301      	str	r3, [sp, #4]
 800c002:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c004:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c008:	f040 80bd 	bne.w	800c186 <I2C_RequestMemoryRead+0x1e2>
 800c00c:	6963      	ldr	r3, [r4, #20]
 800c00e:	0618      	lsls	r0, r3, #24
 800c010:	d468      	bmi.n	800c0e4 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c012:	6963      	ldr	r3, [r4, #20]
 800c014:	0559      	lsls	r1, r3, #21
 800c016:	d5f9      	bpl.n	800c00c <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c018:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c01a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c01e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c020:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c022:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c024:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c028:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c02c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c02e:	f043 0304 	orr.w	r3, r3, #4
 800c032:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c034:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c036:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c038:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c03a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c03e:	d070      	beq.n	800c122 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800c040:	2001      	movs	r0, #1
}
 800c042:	b003      	add	sp, #12
 800c044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c048:	6963      	ldr	r3, [r4, #20]
 800c04a:	07dd      	lsls	r5, r3, #31
 800c04c:	d4c4      	bmi.n	800bfd8 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c04e:	f7ff fabd 	bl	800b5cc <HAL_GetTick>
 800c052:	eba0 0009 	sub.w	r0, r0, r9
 800c056:	4582      	cmp	sl, r0
 800c058:	d304      	bcc.n	800c064 <I2C_RequestMemoryRead+0xc0>
 800c05a:	f1ba 0f00 	cmp.w	sl, #0
 800c05e:	d001      	beq.n	800c064 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c060:	6834      	ldr	r4, [r6, #0]
 800c062:	e7b3      	b.n	800bfcc <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c064:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c066:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c068:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c06a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c06e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c072:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c074:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800c076:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c07a:	f042 0220 	orr.w	r2, r2, #32
 800c07e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c080:	680b      	ldr	r3, [r1, #0]
 800c082:	05dc      	lsls	r4, r3, #23
 800c084:	d43d      	bmi.n	800c102 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800c086:	2003      	movs	r0, #3
}
 800c088:	b003      	add	sp, #12
 800c08a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c08e:	6823      	ldr	r3, [r4, #0]
 800c090:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c094:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c096:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c098:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800c09c:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c09e:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c0a0:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c0a2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c0a6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c0aa:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c0ac:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c0b0:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800c0b4:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c0b6:	6433      	str	r3, [r6, #64]	; 0x40
}
 800c0b8:	b003      	add	sp, #12
 800c0ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c0be:	6963      	ldr	r3, [r4, #20]
 800c0c0:	079b      	lsls	r3, r3, #30
 800c0c2:	d498      	bmi.n	800bff6 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0c4:	6963      	ldr	r3, [r4, #20]
 800c0c6:	0558      	lsls	r0, r3, #21
 800c0c8:	d4e1      	bmi.n	800c08e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c0ca:	f7ff fa7f 	bl	800b5cc <HAL_GetTick>
 800c0ce:	eba0 0009 	sub.w	r0, r0, r9
 800c0d2:	4582      	cmp	sl, r0
 800c0d4:	f0c0 808f 	bcc.w	800c1f6 <I2C_RequestMemoryRead+0x252>
 800c0d8:	f1ba 0f00 	cmp.w	sl, #0
 800c0dc:	f000 808b 	beq.w	800c1f6 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c0e0:	6834      	ldr	r4, [r6, #0]
 800c0e2:	e77e      	b.n	800bfe2 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c0e4:	f1b8 0f01 	cmp.w	r8, #1
 800c0e8:	d10f      	bne.n	800c10a <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c0ea:	b2ff      	uxtb	r7, r7
 800c0ec:	6127      	str	r7, [r4, #16]
 800c0ee:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c0f2:	d16e      	bne.n	800c1d2 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0f4:	6963      	ldr	r3, [r4, #20]
 800c0f6:	061b      	lsls	r3, r3, #24
 800c0f8:	d41a      	bmi.n	800c130 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0fa:	6963      	ldr	r3, [r4, #20]
 800c0fc:	055f      	lsls	r7, r3, #21
 800c0fe:	d5f9      	bpl.n	800c0f4 <I2C_RequestMemoryRead+0x150>
 800c100:	e78a      	b.n	800c018 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c102:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c106:	6433      	str	r3, [r6, #64]	; 0x40
 800c108:	e7bd      	b.n	800c086 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c10a:	0a3b      	lsrs	r3, r7, #8
 800c10c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c10e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c112:	d17e      	bne.n	800c212 <I2C_RequestMemoryRead+0x26e>
 800c114:	6963      	ldr	r3, [r4, #20]
 800c116:	061d      	lsls	r5, r3, #24
 800c118:	d4e7      	bmi.n	800c0ea <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c11a:	6963      	ldr	r3, [r4, #20]
 800c11c:	0558      	lsls	r0, r3, #21
 800c11e:	d5f9      	bpl.n	800c114 <I2C_RequestMemoryRead+0x170>
 800c120:	e77a      	b.n	800c018 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c122:	6832      	ldr	r2, [r6, #0]
 800c124:	6813      	ldr	r3, [r2, #0]
 800c126:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800c12a:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c12c:	6013      	str	r3, [r2, #0]
 800c12e:	e7ab      	b.n	800c088 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c130:	6823      	ldr	r3, [r4, #0]
 800c132:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c136:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c138:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c13c:	d113      	bne.n	800c166 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c13e:	6963      	ldr	r3, [r4, #20]
 800c140:	07d8      	lsls	r0, r3, #31
 800c142:	d5fc      	bpl.n	800c13e <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800c144:	f04b 0301 	orr.w	r3, fp, #1
 800c148:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800c14a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c14e:	d003      	beq.n	800c158 <I2C_RequestMemoryRead+0x1b4>
 800c150:	e02b      	b.n	800c1aa <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c152:	6963      	ldr	r3, [r4, #20]
 800c154:	055b      	lsls	r3, r3, #21
 800c156:	d49a      	bmi.n	800c08e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c158:	6963      	ldr	r3, [r4, #20]
 800c15a:	43db      	mvns	r3, r3
 800c15c:	f013 0302 	ands.w	r3, r3, #2
 800c160:	d1f7      	bne.n	800c152 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800c162:	4618      	mov	r0, r3
 800c164:	e790      	b.n	800c088 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c166:	6963      	ldr	r3, [r4, #20]
 800c168:	07d9      	lsls	r1, r3, #31
 800c16a:	d4eb      	bmi.n	800c144 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c16c:	f7ff fa2e 	bl	800b5cc <HAL_GetTick>
 800c170:	eba0 0009 	sub.w	r0, r0, r9
 800c174:	4582      	cmp	sl, r0
 800c176:	f4ff af75 	bcc.w	800c064 <I2C_RequestMemoryRead+0xc0>
 800c17a:	f1ba 0f00 	cmp.w	sl, #0
 800c17e:	f43f af71 	beq.w	800c064 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c182:	6834      	ldr	r4, [r6, #0]
 800c184:	e7d8      	b.n	800c138 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c186:	6963      	ldr	r3, [r4, #20]
 800c188:	061a      	lsls	r2, r3, #24
 800c18a:	d4ab      	bmi.n	800c0e4 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c18c:	6963      	ldr	r3, [r4, #20]
 800c18e:	055d      	lsls	r5, r3, #21
 800c190:	f53f af42 	bmi.w	800c018 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c194:	f7ff fa1a 	bl	800b5cc <HAL_GetTick>
 800c198:	eba0 0009 	sub.w	r0, r0, r9
 800c19c:	4582      	cmp	sl, r0
 800c19e:	d34b      	bcc.n	800c238 <I2C_RequestMemoryRead+0x294>
 800c1a0:	f1ba 0f00 	cmp.w	sl, #0
 800c1a4:	d048      	beq.n	800c238 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1a6:	6834      	ldr	r4, [r6, #0]
 800c1a8:	e72c      	b.n	800c004 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c1aa:	6963      	ldr	r3, [r4, #20]
 800c1ac:	43db      	mvns	r3, r3
 800c1ae:	f013 0302 	ands.w	r3, r3, #2
 800c1b2:	d0d6      	beq.n	800c162 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c1b4:	6963      	ldr	r3, [r4, #20]
 800c1b6:	055a      	lsls	r2, r3, #21
 800c1b8:	f53f af69 	bmi.w	800c08e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c1bc:	f7ff fa06 	bl	800b5cc <HAL_GetTick>
 800c1c0:	eba0 0009 	sub.w	r0, r0, r9
 800c1c4:	4582      	cmp	sl, r0
 800c1c6:	d316      	bcc.n	800c1f6 <I2C_RequestMemoryRead+0x252>
 800c1c8:	f1ba 0f00 	cmp.w	sl, #0
 800c1cc:	d013      	beq.n	800c1f6 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c1ce:	6834      	ldr	r4, [r6, #0]
 800c1d0:	e7bb      	b.n	800c14a <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1d2:	6963      	ldr	r3, [r4, #20]
 800c1d4:	061d      	lsls	r5, r3, #24
 800c1d6:	d4ab      	bmi.n	800c130 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c1d8:	6963      	ldr	r3, [r4, #20]
 800c1da:	055a      	lsls	r2, r3, #21
 800c1dc:	f53f af1c 	bmi.w	800c018 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c1e0:	f7ff f9f4 	bl	800b5cc <HAL_GetTick>
 800c1e4:	eba0 0009 	sub.w	r0, r0, r9
 800c1e8:	4582      	cmp	sl, r0
 800c1ea:	d325      	bcc.n	800c238 <I2C_RequestMemoryRead+0x294>
 800c1ec:	f1ba 0f00 	cmp.w	sl, #0
 800c1f0:	d022      	beq.n	800c238 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1f2:	6834      	ldr	r4, [r6, #0]
 800c1f4:	e77b      	b.n	800c0ee <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c1f6:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c1f8:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c1fa:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c1fc:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c200:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c204:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c206:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c20a:	f043 0320 	orr.w	r3, r3, #32
 800c20e:	6433      	str	r3, [r6, #64]	; 0x40
 800c210:	e716      	b.n	800c040 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c212:	6963      	ldr	r3, [r4, #20]
 800c214:	0619      	lsls	r1, r3, #24
 800c216:	f53f af68 	bmi.w	800c0ea <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c21a:	6963      	ldr	r3, [r4, #20]
 800c21c:	055b      	lsls	r3, r3, #21
 800c21e:	f53f aefb 	bmi.w	800c018 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c222:	f7ff f9d3 	bl	800b5cc <HAL_GetTick>
 800c226:	eba0 0009 	sub.w	r0, r0, r9
 800c22a:	4582      	cmp	sl, r0
 800c22c:	d304      	bcc.n	800c238 <I2C_RequestMemoryRead+0x294>
 800c22e:	f1ba 0f00 	cmp.w	sl, #0
 800c232:	d001      	beq.n	800c238 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c234:	6834      	ldr	r4, [r6, #0]
 800c236:	e76a      	b.n	800c10e <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c238:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c23a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c23c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c23e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c242:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c246:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c248:	4313      	orrs	r3, r2
 800c24a:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c24c:	e6f2      	b.n	800c034 <I2C_RequestMemoryRead+0x90>
 800c24e:	bf00      	nop

0800c250 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800c250:	2800      	cmp	r0, #0
 800c252:	f000 80b9 	beq.w	800c3c8 <HAL_I2C_Init+0x178>
{
 800c256:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c258:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c25c:	4604      	mov	r4, r0
 800c25e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c262:	2b00      	cmp	r3, #0
 800c264:	f000 8098 	beq.w	800c398 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800c268:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c26a:	2224      	movs	r2, #36	; 0x24
 800c26c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c270:	681a      	ldr	r2, [r3, #0]
 800c272:	f022 0201 	bic.w	r2, r2, #1
 800c276:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c278:	681a      	ldr	r2, [r3, #0]
 800c27a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c27e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c280:	681a      	ldr	r2, [r3, #0]
 800c282:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800c286:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c288:	f001 fe70 	bl	800df6c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c28c:	6865      	ldr	r5, [r4, #4]
 800c28e:	4b4f      	ldr	r3, [pc, #316]	; (800c3cc <HAL_I2C_Init+0x17c>)
 800c290:	429d      	cmp	r5, r3
 800c292:	d84f      	bhi.n	800c334 <HAL_I2C_Init+0xe4>
 800c294:	4b4e      	ldr	r3, [pc, #312]	; (800c3d0 <HAL_I2C_Init+0x180>)
 800c296:	4298      	cmp	r0, r3
 800c298:	d97c      	bls.n	800c394 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800c29a:	4b4e      	ldr	r3, [pc, #312]	; (800c3d4 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c29c:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800c29e:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c2a2:	1e43      	subs	r3, r0, #1
 800c2a4:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c2a8:	6822      	ldr	r2, [r4, #0]
 800c2aa:	6851      	ldr	r1, [r2, #4]
 800c2ac:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c2b0:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800c2b4:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c2b6:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800c2b8:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c2bc:	f10c 0c01 	add.w	ip, ip, #1
 800c2c0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c2c4:	ea41 010c 	orr.w	r1, r1, ip
 800c2c8:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c2ca:	69d1      	ldr	r1, [r2, #28]
 800c2cc:	f640 70fc 	movw	r0, #4092	; 0xffc
 800c2d0:	3301      	adds	r3, #1
 800c2d2:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c2d6:	4203      	tst	r3, r0
 800c2d8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c2dc:	d161      	bne.n	800c3a2 <HAL_I2C_Init+0x152>
 800c2de:	2304      	movs	r3, #4
 800c2e0:	430b      	orrs	r3, r1
 800c2e2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800c2e4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800c2e8:	6811      	ldr	r1, [r2, #0]
 800c2ea:	4303      	orrs	r3, r0
 800c2ec:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800c2f0:	430b      	orrs	r3, r1
 800c2f2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800c2f4:	6891      	ldr	r1, [r2, #8]
 800c2f6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800c2fa:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800c2fe:	4303      	orrs	r3, r0
 800c300:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c304:	430b      	orrs	r3, r1
 800c306:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800c308:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800c30c:	68d1      	ldr	r1, [r2, #12]
 800c30e:	4303      	orrs	r3, r0
 800c310:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c314:	430b      	orrs	r3, r1
 800c316:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800c318:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c31a:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800c31c:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800c320:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800c322:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c324:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800c326:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800c32a:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800c32c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800c330:	4618      	mov	r0, r3
}
 800c332:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c334:	4b28      	ldr	r3, [pc, #160]	; (800c3d8 <HAL_I2C_Init+0x188>)
 800c336:	4298      	cmp	r0, r3
 800c338:	d92c      	bls.n	800c394 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c33a:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800c33c:	4b25      	ldr	r3, [pc, #148]	; (800c3d4 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c33e:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c340:	4e26      	ldr	r6, [pc, #152]	; (800c3dc <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800c342:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c346:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c34a:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800c34e:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c350:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c354:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800c358:	fb01 f303 	mul.w	r3, r1, r3
 800c35c:	fba6 6303 	umull	r6, r3, r6, r3
 800c360:	6a11      	ldr	r1, [r2, #32]
 800c362:	099b      	lsrs	r3, r3, #6
 800c364:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c368:	3301      	adds	r3, #1
 800c36a:	430b      	orrs	r3, r1
 800c36c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c36e:	69d1      	ldr	r1, [r2, #28]
 800c370:	68a3      	ldr	r3, [r4, #8]
 800c372:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c376:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c37a:	b9ab      	cbnz	r3, 800c3a8 <HAL_I2C_Init+0x158>
 800c37c:	1e43      	subs	r3, r0, #1
 800c37e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c382:	fbb3 f3f5 	udiv	r3, r3, r5
 800c386:	3301      	adds	r3, #1
 800c388:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c38c:	b1d3      	cbz	r3, 800c3c4 <HAL_I2C_Init+0x174>
 800c38e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c392:	e7a5      	b.n	800c2e0 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c394:	2001      	movs	r0, #1
}
 800c396:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800c398:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800c39c:	f7f5 ff50 	bl	8002240 <HAL_I2C_MspInit>
 800c3a0:	e762      	b.n	800c268 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c3a2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c3a6:	e79b      	b.n	800c2e0 <HAL_I2C_Init+0x90>
 800c3a8:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c3ac:	1e43      	subs	r3, r0, #1
 800c3ae:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c3b2:	fbb3 f3f5 	udiv	r3, r3, r5
 800c3b6:	3301      	adds	r3, #1
 800c3b8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c3bc:	b113      	cbz	r3, 800c3c4 <HAL_I2C_Init+0x174>
 800c3be:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800c3c2:	e78d      	b.n	800c2e0 <HAL_I2C_Init+0x90>
 800c3c4:	2301      	movs	r3, #1
 800c3c6:	e78b      	b.n	800c2e0 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c3c8:	2001      	movs	r0, #1
}
 800c3ca:	4770      	bx	lr
 800c3cc:	000186a0 	.word	0x000186a0
 800c3d0:	001e847f 	.word	0x001e847f
 800c3d4:	431bde83 	.word	0x431bde83
 800c3d8:	003d08ff 	.word	0x003d08ff
 800c3dc:	10624dd3 	.word	0x10624dd3

0800c3e0 <HAL_I2C_Mem_Write>:
{
 800c3e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3e4:	4604      	mov	r4, r0
 800c3e6:	b083      	sub	sp, #12
 800c3e8:	4699      	mov	r9, r3
 800c3ea:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800c3ee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c3f0:	460f      	mov	r7, r1
 800c3f2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c3f4:	f7ff f8ea 	bl	800b5cc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c3f8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c3fc:	2b20      	cmp	r3, #32
 800c3fe:	d004      	beq.n	800c40a <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800c400:	2702      	movs	r7, #2
}
 800c402:	4638      	mov	r0, r7
 800c404:	b003      	add	sp, #12
 800c406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c40a:	4605      	mov	r5, r0
 800c40c:	e005      	b.n	800c41a <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c40e:	f7ff f8dd 	bl	800b5cc <HAL_GetTick>
 800c412:	1b40      	subs	r0, r0, r5
 800c414:	2819      	cmp	r0, #25
 800c416:	f200 80a8 	bhi.w	800c56a <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c41a:	6820      	ldr	r0, [r4, #0]
 800c41c:	6983      	ldr	r3, [r0, #24]
 800c41e:	ea6f 0c03 	mvn.w	ip, r3
 800c422:	f01c 0b02 	ands.w	fp, ip, #2
 800c426:	d0f2      	beq.n	800c40e <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800c428:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c42c:	2b01      	cmp	r3, #1
 800c42e:	d0e7      	beq.n	800c400 <HAL_I2C_Mem_Write+0x20>
 800c430:	2301      	movs	r3, #1
 800c432:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c436:	6803      	ldr	r3, [r0, #0]
 800c438:	07db      	lsls	r3, r3, #31
 800c43a:	d572      	bpl.n	800c522 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c43c:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c43e:	6807      	ldr	r7, [r0, #0]
 800c440:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800c444:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800c446:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c448:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c44a:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c44c:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c450:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c454:	2040      	movs	r0, #64	; 0x40
 800c456:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c45a:	2000      	movs	r0, #0
 800c45c:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c45e:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c462:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c464:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c466:	4856      	ldr	r0, [pc, #344]	; (800c5c0 <HAL_I2C_Mem_Write+0x1e0>)
 800c468:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c46a:	464b      	mov	r3, r9
 800c46c:	4642      	mov	r2, r8
 800c46e:	4620      	mov	r0, r4
 800c470:	f7ff fca4 	bl	800bdbc <I2C_RequestMemoryWrite>
 800c474:	4607      	mov	r7, r0
 800c476:	bb00      	cbnz	r0, 800c4ba <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800c478:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c47a:	2b00      	cmp	r3, #0
 800c47c:	f000 809e 	beq.w	800c5bc <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c480:	6823      	ldr	r3, [r4, #0]
 800c482:	1c72      	adds	r2, r6, #1
 800c484:	d159      	bne.n	800c53a <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c486:	695a      	ldr	r2, [r3, #20]
 800c488:	0610      	lsls	r0, r2, #24
 800c48a:	d41b      	bmi.n	800c4c4 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c48c:	695a      	ldr	r2, [r3, #20]
 800c48e:	0551      	lsls	r1, r2, #21
 800c490:	d5f9      	bpl.n	800c486 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c492:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c494:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c498:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c49a:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c49c:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c49e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c4a2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c4a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c4a8:	f043 0304 	orr.w	r3, r3, #4
 800c4ac:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c4ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c4b0:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c4b2:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c4b4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c4b8:	d038      	beq.n	800c52c <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800c4ba:	2701      	movs	r7, #1
}
 800c4bc:	4638      	mov	r0, r7
 800c4be:	b003      	add	sp, #12
 800c4c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4c4:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800c4c8:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4cc:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800c4ce:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4d2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c4d6:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800c4d8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c4da:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800c4dc:	3a01      	subs	r2, #1
 800c4de:	b292      	uxth	r2, r2
 800c4e0:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800c4e2:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c4e4:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800c4e6:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c4e8:	0740      	lsls	r0, r0, #29
 800c4ea:	d517      	bpl.n	800c51c <HAL_I2C_Mem_Write+0x13c>
 800c4ec:	b942      	cbnz	r2, 800c500 <HAL_I2C_Mem_Write+0x120>
 800c4ee:	1c72      	adds	r2, r6, #1
 800c4f0:	d156      	bne.n	800c5a0 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c4f2:	695a      	ldr	r2, [r3, #20]
 800c4f4:	0750      	lsls	r0, r2, #29
 800c4f6:	d446      	bmi.n	800c586 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c4f8:	695a      	ldr	r2, [r3, #20]
 800c4fa:	0551      	lsls	r1, r2, #21
 800c4fc:	d5f9      	bpl.n	800c4f2 <HAL_I2C_Mem_Write+0x112>
 800c4fe:	e7c8      	b.n	800c492 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c500:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800c504:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800c506:	f10c 0102 	add.w	r1, ip, #2
 800c50a:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c50c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800c50e:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800c512:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800c514:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800c516:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800c518:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800c51a:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c51c:	2a00      	cmp	r2, #0
 800c51e:	d1b0      	bne.n	800c482 <HAL_I2C_Mem_Write+0xa2>
 800c520:	e7e5      	b.n	800c4ee <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800c522:	6803      	ldr	r3, [r0, #0]
 800c524:	f043 0301 	orr.w	r3, r3, #1
 800c528:	6003      	str	r3, [r0, #0]
 800c52a:	e787      	b.n	800c43c <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c52c:	6822      	ldr	r2, [r4, #0]
 800c52e:	6813      	ldr	r3, [r2, #0]
 800c530:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800c534:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c536:	6013      	str	r3, [r2, #0]
 800c538:	e763      	b.n	800c402 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c53a:	695a      	ldr	r2, [r3, #20]
 800c53c:	0612      	lsls	r2, r2, #24
 800c53e:	d4c1      	bmi.n	800c4c4 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c540:	695a      	ldr	r2, [r3, #20]
 800c542:	0551      	lsls	r1, r2, #21
 800c544:	d4a5      	bmi.n	800c492 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c546:	f7ff f841 	bl	800b5cc <HAL_GetTick>
 800c54a:	1b40      	subs	r0, r0, r5
 800c54c:	4286      	cmp	r6, r0
 800c54e:	d301      	bcc.n	800c554 <HAL_I2C_Mem_Write+0x174>
 800c550:	2e00      	cmp	r6, #0
 800c552:	d195      	bne.n	800c480 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c554:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c556:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c558:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c55a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c55e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c562:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c564:	4313      	orrs	r3, r2
 800c566:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800c568:	e7a1      	b.n	800c4ae <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c56a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c56c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c570:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c574:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c578:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c57a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c57e:	f043 0320 	orr.w	r3, r3, #32
 800c582:	6423      	str	r3, [r4, #64]	; 0x40
 800c584:	e73c      	b.n	800c400 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c586:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c588:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c58a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800c58e:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c590:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c592:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c596:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c59a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800c59e:	e730      	b.n	800c402 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c5a0:	695a      	ldr	r2, [r3, #20]
 800c5a2:	0752      	lsls	r2, r2, #29
 800c5a4:	d4ef      	bmi.n	800c586 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c5a6:	695a      	ldr	r2, [r3, #20]
 800c5a8:	0551      	lsls	r1, r2, #21
 800c5aa:	f53f af72 	bmi.w	800c492 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c5ae:	f7ff f80d 	bl	800b5cc <HAL_GetTick>
 800c5b2:	1b40      	subs	r0, r0, r5
 800c5b4:	4286      	cmp	r6, r0
 800c5b6:	d3cd      	bcc.n	800c554 <HAL_I2C_Mem_Write+0x174>
 800c5b8:	2e00      	cmp	r6, #0
 800c5ba:	d0cb      	beq.n	800c554 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c5bc:	6823      	ldr	r3, [r4, #0]
 800c5be:	e796      	b.n	800c4ee <HAL_I2C_Mem_Write+0x10e>
 800c5c0:	ffff0000 	.word	0xffff0000

0800c5c4 <HAL_I2C_Mem_Read>:
{
 800c5c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5c8:	4604      	mov	r4, r0
 800c5ca:	b087      	sub	sp, #28
 800c5cc:	4699      	mov	r9, r3
 800c5ce:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800c5d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800c5d4:	460f      	mov	r7, r1
 800c5d6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c5d8:	f7fe fff8 	bl	800b5cc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c5dc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c5e0:	2b20      	cmp	r3, #32
 800c5e2:	d004      	beq.n	800c5ee <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800c5e4:	2702      	movs	r7, #2
}
 800c5e6:	4638      	mov	r0, r7
 800c5e8:	b007      	add	sp, #28
 800c5ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5ee:	4606      	mov	r6, r0
 800c5f0:	e005      	b.n	800c5fe <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c5f2:	f7fe ffeb 	bl	800b5cc <HAL_GetTick>
 800c5f6:	1b80      	subs	r0, r0, r6
 800c5f8:	2819      	cmp	r0, #25
 800c5fa:	f200 80d2 	bhi.w	800c7a2 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c5fe:	f8d4 c000 	ldr.w	ip, [r4]
 800c602:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800c606:	43c0      	mvns	r0, r0
 800c608:	f010 0b02 	ands.w	fp, r0, #2
 800c60c:	d0f1      	beq.n	800c5f2 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800c60e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c612:	2b01      	cmp	r3, #1
 800c614:	d0e6      	beq.n	800c5e4 <HAL_I2C_Mem_Read+0x20>
 800c616:	2301      	movs	r3, #1
 800c618:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c61c:	f8dc 3000 	ldr.w	r3, [ip]
 800c620:	07d9      	lsls	r1, r3, #31
 800c622:	d537      	bpl.n	800c694 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c624:	f8dc 0000 	ldr.w	r0, [ip]
 800c628:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800c62c:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800c630:	9810      	ldr	r0, [sp, #64]	; 0x40
 800c632:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c634:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c636:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c63a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c63e:	2040      	movs	r0, #64	; 0x40
 800c640:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c644:	2000      	movs	r0, #0
 800c646:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c648:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c64c:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c64e:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c650:	4893      	ldr	r0, [pc, #588]	; (800c8a0 <HAL_I2C_Mem_Read+0x2dc>)
 800c652:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c654:	4639      	mov	r1, r7
 800c656:	464b      	mov	r3, r9
 800c658:	4642      	mov	r2, r8
 800c65a:	4620      	mov	r0, r4
 800c65c:	f7ff fca2 	bl	800bfa4 <I2C_RequestMemoryRead>
 800c660:	4607      	mov	r7, r0
 800c662:	2800      	cmp	r0, #0
 800c664:	f040 80ab 	bne.w	800c7be <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800c668:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800c66a:	b9d2      	cbnz	r2, 800c6a2 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c66c:	6823      	ldr	r3, [r4, #0]
 800c66e:	9002      	str	r0, [sp, #8]
 800c670:	695a      	ldr	r2, [r3, #20]
 800c672:	9202      	str	r2, [sp, #8]
 800c674:	699a      	ldr	r2, [r3, #24]
 800c676:	9202      	str	r2, [sp, #8]
 800c678:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c67a:	681a      	ldr	r2, [r3, #0]
 800c67c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c680:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c682:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800c684:	2220      	movs	r2, #32
 800c686:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c68a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c68e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800c692:	e7a8      	b.n	800c5e6 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800c694:	f8dc 3000 	ldr.w	r3, [ip]
 800c698:	f043 0301 	orr.w	r3, r3, #1
 800c69c:	f8cc 3000 	str.w	r3, [ip]
 800c6a0:	e7c0      	b.n	800c624 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800c6a2:	2a01      	cmp	r2, #1
 800c6a4:	f000 812c 	beq.w	800c900 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800c6a8:	2a02      	cmp	r2, #2
 800c6aa:	f000 80bd 	beq.w	800c828 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c6ae:	6823      	ldr	r3, [r4, #0]
 800c6b0:	9005      	str	r0, [sp, #20]
 800c6b2:	6959      	ldr	r1, [r3, #20]
 800c6b4:	9105      	str	r1, [sp, #20]
 800c6b6:	6999      	ldr	r1, [r3, #24]
 800c6b8:	9105      	str	r1, [sp, #20]
 800c6ba:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800c6bc:	2a03      	cmp	r2, #3
 800c6be:	d849      	bhi.n	800c754 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800c6c0:	2a01      	cmp	r2, #1
 800c6c2:	f000 80eb 	beq.w	800c89c <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800c6c6:	2a02      	cmp	r2, #2
 800c6c8:	f000 8089 	beq.w	800c7de <HAL_I2C_Mem_Read+0x21a>
 800c6cc:	1c69      	adds	r1, r5, #1
 800c6ce:	f040 80bb 	bne.w	800c848 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6d2:	695a      	ldr	r2, [r3, #20]
 800c6d4:	0752      	lsls	r2, r2, #29
 800c6d6:	d5fc      	bpl.n	800c6d2 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c6d8:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6da:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c6dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c6e0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6e2:	691b      	ldr	r3, [r3, #16]
 800c6e4:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c6e6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c6e8:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c6ea:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c6ec:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c6ee:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c6f0:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c6f2:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c6f4:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c6f6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c6f8:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c6fa:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6fc:	6822      	ldr	r2, [r4, #0]
 800c6fe:	f040 80af 	bne.w	800c860 <HAL_I2C_Mem_Read+0x29c>
 800c702:	6953      	ldr	r3, [r2, #20]
 800c704:	075b      	lsls	r3, r3, #29
 800c706:	d5fc      	bpl.n	800c702 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c708:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c70a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c70c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c710:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c712:	6913      	ldr	r3, [r2, #16]
 800c714:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c716:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c718:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c71a:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c71c:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800c71e:	3b01      	subs	r3, #1
 800c720:	b29b      	uxth	r3, r3
 800c722:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c724:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800c726:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800c728:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800c72c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c72e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c732:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800c734:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c736:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c738:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c73a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c73c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c73e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c740:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c742:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c744:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c746:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c748:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c74a:	2a00      	cmp	r2, #0
 800c74c:	d099      	beq.n	800c682 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800c74e:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c750:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800c752:	d9b5      	bls.n	800c6c0 <HAL_I2C_Mem_Read+0xfc>
 800c754:	b95d      	cbnz	r5, 800c76e <HAL_I2C_Mem_Read+0x1aa>
 800c756:	e0c5      	b.n	800c8e4 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c758:	695a      	ldr	r2, [r3, #20]
 800c75a:	06d0      	lsls	r0, r2, #27
 800c75c:	f100 80b2 	bmi.w	800c8c4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c760:	f7fe ff34 	bl	800b5cc <HAL_GetTick>
 800c764:	1b80      	subs	r0, r0, r6
 800c766:	4285      	cmp	r5, r0
 800c768:	f0c0 8086 	bcc.w	800c878 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c76c:	6823      	ldr	r3, [r4, #0]
 800c76e:	695a      	ldr	r2, [r3, #20]
 800c770:	0652      	lsls	r2, r2, #25
 800c772:	d5f1      	bpl.n	800c758 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c774:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c776:	691b      	ldr	r3, [r3, #16]
 800c778:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800c77a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c77c:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800c77e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c780:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c782:	3b01      	subs	r3, #1
 800c784:	b29b      	uxth	r3, r3
 800c786:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c788:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800c78a:	3a01      	subs	r2, #1
 800c78c:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800c78e:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c792:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800c794:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c796:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c79a:	d5d6      	bpl.n	800c74a <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c79c:	6903      	ldr	r3, [r0, #16]
 800c79e:	704b      	strb	r3, [r1, #1]
 800c7a0:	e036      	b.n	800c810 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c7a2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c7a4:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c7a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c7ac:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c7b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c7b2:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c7b6:	f043 0320 	orr.w	r3, r3, #32
 800c7ba:	6423      	str	r3, [r4, #64]	; 0x40
 800c7bc:	e712      	b.n	800c5e4 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800c7be:	2701      	movs	r7, #1
}
 800c7c0:	4638      	mov	r0, r7
 800c7c2:	b007      	add	sp, #28
 800c7c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c7c8:	695a      	ldr	r2, [r3, #20]
 800c7ca:	0750      	lsls	r0, r2, #29
 800c7cc:	d40c      	bmi.n	800c7e8 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c7ce:	f7fe fefd 	bl	800b5cc <HAL_GetTick>
 800c7d2:	1b80      	subs	r0, r0, r6
 800c7d4:	4285      	cmp	r5, r0
 800c7d6:	d34f      	bcc.n	800c878 <HAL_I2C_Mem_Read+0x2b4>
 800c7d8:	2d00      	cmp	r5, #0
 800c7da:	d04d      	beq.n	800c878 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c7dc:	6823      	ldr	r3, [r4, #0]
 800c7de:	1c69      	adds	r1, r5, #1
 800c7e0:	d1f2      	bne.n	800c7c8 <HAL_I2C_Mem_Read+0x204>
 800c7e2:	695a      	ldr	r2, [r3, #20]
 800c7e4:	0752      	lsls	r2, r2, #29
 800c7e6:	d5fc      	bpl.n	800c7e2 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c7e8:	681a      	ldr	r2, [r3, #0]
 800c7ea:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c7ee:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7f0:	691a      	ldr	r2, [r3, #16]
 800c7f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c7f4:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800c7f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c7f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c7fa:	3b01      	subs	r3, #1
 800c7fc:	b29b      	uxth	r3, r3
 800c7fe:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c800:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c802:	3b01      	subs	r3, #1
 800c804:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c806:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800c808:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c80a:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800c80c:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c80e:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800c810:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c812:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c814:	3301      	adds	r3, #1
 800c816:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c818:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c81a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c81c:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800c81e:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c820:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800c822:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c824:	8563      	strh	r3, [r4, #42]	; 0x2a
 800c826:	e790      	b.n	800c74a <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c828:	6823      	ldr	r3, [r4, #0]
 800c82a:	6819      	ldr	r1, [r3, #0]
 800c82c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c830:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c832:	6819      	ldr	r1, [r3, #0]
 800c834:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800c838:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c83a:	9004      	str	r0, [sp, #16]
 800c83c:	6959      	ldr	r1, [r3, #20]
 800c83e:	9104      	str	r1, [sp, #16]
 800c840:	6999      	ldr	r1, [r3, #24]
 800c842:	9104      	str	r1, [sp, #16]
 800c844:	9904      	ldr	r1, [sp, #16]
 800c846:	e739      	b.n	800c6bc <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c848:	695a      	ldr	r2, [r3, #20]
 800c84a:	0750      	lsls	r0, r2, #29
 800c84c:	f53f af44 	bmi.w	800c6d8 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c850:	f7fe febc 	bl	800b5cc <HAL_GetTick>
 800c854:	1b80      	subs	r0, r0, r6
 800c856:	4285      	cmp	r5, r0
 800c858:	d30e      	bcc.n	800c878 <HAL_I2C_Mem_Read+0x2b4>
 800c85a:	b16d      	cbz	r5, 800c878 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c85c:	6823      	ldr	r3, [r4, #0]
 800c85e:	e735      	b.n	800c6cc <HAL_I2C_Mem_Read+0x108>
 800c860:	6953      	ldr	r3, [r2, #20]
 800c862:	0758      	lsls	r0, r3, #29
 800c864:	f53f af50 	bmi.w	800c708 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c868:	f7fe feb0 	bl	800b5cc <HAL_GetTick>
 800c86c:	1b80      	subs	r0, r0, r6
 800c86e:	4285      	cmp	r5, r0
 800c870:	d302      	bcc.n	800c878 <HAL_I2C_Mem_Read+0x2b4>
 800c872:	2d00      	cmp	r5, #0
 800c874:	f47f af41 	bne.w	800c6fa <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c878:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c87a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c87c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c87e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c882:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c886:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c888:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c88c:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c88e:	f043 0320 	orr.w	r3, r3, #32
}
 800c892:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c894:	6423      	str	r3, [r4, #64]	; 0x40
}
 800c896:	b007      	add	sp, #28
 800c898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c89c:	b95d      	cbnz	r5, 800c8b6 <HAL_I2C_Mem_Read+0x2f2>
 800c89e:	e02b      	b.n	800c8f8 <HAL_I2C_Mem_Read+0x334>
 800c8a0:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c8a4:	695a      	ldr	r2, [r3, #20]
 800c8a6:	06d2      	lsls	r2, r2, #27
 800c8a8:	d40c      	bmi.n	800c8c4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8aa:	f7fe fe8f 	bl	800b5cc <HAL_GetTick>
 800c8ae:	1b80      	subs	r0, r0, r6
 800c8b0:	4285      	cmp	r5, r0
 800c8b2:	d3e1      	bcc.n	800c878 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8b4:	6823      	ldr	r3, [r4, #0]
 800c8b6:	695a      	ldr	r2, [r3, #20]
 800c8b8:	0651      	lsls	r1, r2, #25
 800c8ba:	d5f3      	bpl.n	800c8a4 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c8bc:	691a      	ldr	r2, [r3, #16]
 800c8be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c8c0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c8c2:	e7a5      	b.n	800c810 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c8c4:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c8c6:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800c8ca:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c8cc:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c8ce:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c8d0:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c8d4:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800c8d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c8da:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c8dc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c8e0:	2701      	movs	r7, #1
 800c8e2:	e680      	b.n	800c5e6 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8e4:	695a      	ldr	r2, [r3, #20]
 800c8e6:	0652      	lsls	r2, r2, #25
 800c8e8:	f53f af44 	bmi.w	800c774 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c8ec:	695a      	ldr	r2, [r3, #20]
 800c8ee:	06d1      	lsls	r1, r2, #27
 800c8f0:	d4e8      	bmi.n	800c8c4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8f2:	f7fe fe6b 	bl	800b5cc <HAL_GetTick>
 800c8f6:	e7bf      	b.n	800c878 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8f8:	695a      	ldr	r2, [r3, #20]
 800c8fa:	0650      	lsls	r0, r2, #25
 800c8fc:	d5f6      	bpl.n	800c8ec <HAL_I2C_Mem_Read+0x328>
 800c8fe:	e7dd      	b.n	800c8bc <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c900:	6823      	ldr	r3, [r4, #0]
 800c902:	6819      	ldr	r1, [r3, #0]
 800c904:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c908:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c90a:	9003      	str	r0, [sp, #12]
 800c90c:	6959      	ldr	r1, [r3, #20]
 800c90e:	9103      	str	r1, [sp, #12]
 800c910:	6999      	ldr	r1, [r3, #24]
 800c912:	9103      	str	r1, [sp, #12]
 800c914:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c916:	6819      	ldr	r1, [r3, #0]
 800c918:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800c91c:	6019      	str	r1, [r3, #0]
 800c91e:	e6cd      	b.n	800c6bc <HAL_I2C_Mem_Read+0xf8>

0800c920 <HAL_I2C_MasterTxCpltCallback>:
 800c920:	4770      	bx	lr
 800c922:	bf00      	nop

0800c924 <HAL_I2C_MasterRxCpltCallback>:
 800c924:	4770      	bx	lr
 800c926:	bf00      	nop

0800c928 <HAL_I2C_SlaveTxCpltCallback>:
 800c928:	4770      	bx	lr
 800c92a:	bf00      	nop

0800c92c <HAL_I2C_SlaveRxCpltCallback>:
 800c92c:	4770      	bx	lr
 800c92e:	bf00      	nop

0800c930 <HAL_I2C_AddrCallback>:
}
 800c930:	4770      	bx	lr
 800c932:	bf00      	nop

0800c934 <HAL_I2C_ListenCpltCallback>:
 800c934:	4770      	bx	lr
 800c936:	bf00      	nop

0800c938 <HAL_I2C_MemTxCpltCallback>:
 800c938:	4770      	bx	lr
 800c93a:	bf00      	nop

0800c93c <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c93c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800c940:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800c942:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800c944:	b959      	cbnz	r1, 800c95e <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c946:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c948:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c94a:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c94c:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c94e:	d00d      	beq.n	800c96c <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800c950:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800c954:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800c956:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c958:	3201      	adds	r2, #1
 800c95a:	6502      	str	r2, [r0, #80]	; 0x50
 800c95c:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800c95e:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c960:	2901      	cmp	r1, #1
 800c962:	d009      	beq.n	800c978 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800c964:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c966:	2902      	cmp	r1, #2
 800c968:	d00e      	beq.n	800c988 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800c96a:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c96c:	b2d2      	uxtb	r2, r2
 800c96e:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800c970:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c972:	3202      	adds	r2, #2
 800c974:	6502      	str	r2, [r0, #80]	; 0x50
 800c976:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c978:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800c97a:	6801      	ldr	r1, [r0, #0]
 800c97c:	b2d2      	uxtb	r2, r2
 800c97e:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800c980:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c982:	3201      	adds	r2, #1
 800c984:	6502      	str	r2, [r0, #80]	; 0x50
 800c986:	4770      	bx	lr
 800c988:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800c98a:	2a22      	cmp	r2, #34	; 0x22
 800c98c:	d01f      	beq.n	800c9ce <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c98e:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c990:	b289      	uxth	r1, r1
 800c992:	b9c1      	cbnz	r1, 800c9c6 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c994:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c996:	b289      	uxth	r1, r1
 800c998:	2900      	cmp	r1, #0
 800c99a:	d1e6      	bne.n	800c96a <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800c99c:	2a21      	cmp	r2, #33	; 0x21
 800c99e:	d1e4      	bne.n	800c96a <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c9a0:	6802      	ldr	r2, [r0, #0]
{
 800c9a2:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c9a4:	6854      	ldr	r4, [r2, #4]
 800c9a6:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800c9aa:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c9ac:	6814      	ldr	r4, [r2, #0]
 800c9ae:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800c9b2:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800c9b4:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800c9b6:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800c9b8:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c9bc:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800c9c0:	f7ff ffba 	bl	800c938 <HAL_I2C_MemTxCpltCallback>
}
 800c9c4:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c9c6:	2a21      	cmp	r2, #33	; 0x21
 800c9c8:	d00a      	beq.n	800c9e0 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c9ca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c9cc:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800c9ce:	6801      	ldr	r1, [r0, #0]
 800c9d0:	680a      	ldr	r2, [r1, #0]
 800c9d2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c9d6:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800c9d8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c9da:	3201      	adds	r2, #1
 800c9dc:	6502      	str	r2, [r0, #80]	; 0x50
 800c9de:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c9e0:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800c9e2:	6802      	ldr	r2, [r0, #0]
 800c9e4:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c9e8:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800c9ea:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c9ec:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800c9ee:	3a01      	subs	r2, #1
 800c9f0:	b292      	uxth	r2, r2
 800c9f2:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c9f4:	4770      	bx	lr
 800c9f6:	bf00      	nop

0800c9f8 <HAL_I2C_MemRxCpltCallback>:
 800c9f8:	4770      	bx	lr
 800c9fa:	bf00      	nop

0800c9fc <HAL_I2C_ErrorCallback>:
 800c9fc:	4770      	bx	lr
 800c9fe:	bf00      	nop

0800ca00 <HAL_I2C_AbortCpltCallback>:
 800ca00:	4770      	bx	lr
 800ca02:	bf00      	nop

0800ca04 <I2C_DMAAbort>:
{
 800ca04:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca06:	4b3a      	ldr	r3, [pc, #232]	; (800caf0 <I2C_DMAAbort+0xec>)
 800ca08:	4a3a      	ldr	r2, [pc, #232]	; (800caf4 <I2C_DMAAbort+0xf0>)
 800ca0a:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800ca0c:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800ca0e:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca10:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800ca12:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca14:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800ca18:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca1a:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ca1c:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ca20:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca22:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ca26:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ca2a:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca2c:	9301      	str	r3, [sp, #4]
 800ca2e:	e005      	b.n	800ca3c <I2C_DMAAbort+0x38>
    count--;
 800ca30:	9b01      	ldr	r3, [sp, #4]
 800ca32:	3b01      	subs	r3, #1
 800ca34:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ca36:	6813      	ldr	r3, [r2, #0]
 800ca38:	059b      	lsls	r3, r3, #22
 800ca3a:	d506      	bpl.n	800ca4a <I2C_DMAAbort+0x46>
    if (count == 0U)
 800ca3c:	9b01      	ldr	r3, [sp, #4]
 800ca3e:	2b00      	cmp	r3, #0
 800ca40:	d1f6      	bne.n	800ca30 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800ca42:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ca44:	f043 0320 	orr.w	r3, r3, #32
 800ca48:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800ca4a:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800ca4c:	b34c      	cbz	r4, 800caa2 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800ca4e:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800ca50:	2500      	movs	r5, #0
 800ca52:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800ca54:	b1f3      	cbz	r3, 800ca94 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca56:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ca58:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca5a:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ca5e:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ca60:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ca62:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ca64:	2400      	movs	r4, #0
 800ca66:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ca68:	6813      	ldr	r3, [r2, #0]
 800ca6a:	f023 0301 	bic.w	r3, r3, #1
 800ca6e:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ca70:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ca74:	2b60      	cmp	r3, #96	; 0x60
 800ca76:	d02a      	beq.n	800cace <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ca78:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ca7c:	2928      	cmp	r1, #40	; 0x28
 800ca7e:	d019      	beq.n	800cab4 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ca80:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca82:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ca84:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca88:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ca8c:	f7ff ffb6 	bl	800c9fc <HAL_I2C_ErrorCallback>
}
 800ca90:	b002      	add	sp, #8
 800ca92:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca94:	6815      	ldr	r5, [r2, #0]
 800ca96:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ca9a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ca9c:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ca9e:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800caa0:	e7e2      	b.n	800ca68 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800caa2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800caa4:	b1f3      	cbz	r3, 800cae4 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800caa6:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800caa8:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800caaa:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800caae:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800cab0:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800cab2:	e7d7      	b.n	800ca64 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800cab4:	6813      	ldr	r3, [r2, #0]
 800cab6:	f043 0301 	orr.w	r3, r3, #1
 800caba:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cabc:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800cabe:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cac0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800cac4:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800cac6:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cac8:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800cacc:	e7de      	b.n	800ca8c <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cace:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800cad0:	2220      	movs	r2, #32
 800cad2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cad6:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800cada:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800cadc:	f7ff ff90 	bl	800ca00 <HAL_I2C_AbortCpltCallback>
}
 800cae0:	b002      	add	sp, #8
 800cae2:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cae4:	6814      	ldr	r4, [r2, #0]
 800cae6:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800caea:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800caec:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800caee:	e7bb      	b.n	800ca68 <I2C_DMAAbort+0x64>
 800caf0:	2000007c 	.word	0x2000007c
 800caf4:	14f8b589 	.word	0x14f8b589

0800caf8 <I2C_ITError>:
{
 800caf8:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cafa:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800cafe:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cb02:	2b10      	cmp	r3, #16
{
 800cb04:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cb06:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cb08:	d039      	beq.n	800cb7e <I2C_ITError+0x86>
 800cb0a:	b2d9      	uxtb	r1, r3
 800cb0c:	2940      	cmp	r1, #64	; 0x40
 800cb0e:	d036      	beq.n	800cb7e <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cb10:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800cb14:	2928      	cmp	r1, #40	; 0x28
 800cb16:	d03d      	beq.n	800cb94 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb18:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cb1a:	6859      	ldr	r1, [r3, #4]
 800cb1c:	0508      	lsls	r0, r1, #20
 800cb1e:	d407      	bmi.n	800cb30 <I2C_ITError+0x38>
 800cb20:	2a60      	cmp	r2, #96	; 0x60
 800cb22:	d005      	beq.n	800cb30 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800cb24:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cb26:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800cb28:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cb2c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800cb30:	2200      	movs	r2, #0
 800cb32:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cb34:	685a      	ldr	r2, [r3, #4]
 800cb36:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cb3a:	d134      	bne.n	800cba6 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800cb3c:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cb40:	2960      	cmp	r1, #96	; 0x60
 800cb42:	d075      	beq.n	800cc30 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cb44:	695a      	ldr	r2, [r3, #20]
 800cb46:	0650      	lsls	r0, r2, #25
 800cb48:	d505      	bpl.n	800cb56 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cb4a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cb4c:	691b      	ldr	r3, [r3, #16]
 800cb4e:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cb50:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cb52:	3301      	adds	r3, #1
 800cb54:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800cb56:	4620      	mov	r0, r4
 800cb58:	f7ff ff50 	bl	800c9fc <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800cb5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800cb5e:	0719      	lsls	r1, r3, #28
 800cb60:	d004      	beq.n	800cb6c <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cb62:	6822      	ldr	r2, [r4, #0]
 800cb64:	6853      	ldr	r3, [r2, #4]
 800cb66:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800cb6a:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800cb6c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800cb70:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cb72:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800cb74:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800cb76:	d501      	bpl.n	800cb7c <I2C_ITError+0x84>
 800cb78:	2b28      	cmp	r3, #40	; 0x28
 800cb7a:	d02f      	beq.n	800cbdc <I2C_ITError+0xe4>
}
 800cb7c:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cb7e:	2a22      	cmp	r2, #34	; 0x22
 800cb80:	d1c6      	bne.n	800cb10 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb82:	6823      	ldr	r3, [r4, #0]
 800cb84:	681a      	ldr	r2, [r3, #0]
 800cb86:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cb8a:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cb8c:	685a      	ldr	r2, [r3, #4]
 800cb8e:	0512      	lsls	r2, r2, #20
 800cb90:	d5c8      	bpl.n	800cb24 <I2C_ITError+0x2c>
 800cb92:	e7cd      	b.n	800cb30 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cb94:	2300      	movs	r3, #0
 800cb96:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb98:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800cb9a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cb9e:	685a      	ldr	r2, [r3, #4]
 800cba0:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cba4:	d0ca      	beq.n	800cb3c <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cba6:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cba8:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cbaa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cbae:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cbb0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800cbb4:	2b01      	cmp	r3, #1
 800cbb6:	d01e      	beq.n	800cbf6 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800cbb8:	4b28      	ldr	r3, [pc, #160]	; (800cc5c <I2C_ITError+0x164>)
 800cbba:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800cbbc:	f7fe fd90 	bl	800b6e0 <HAL_DMA_Abort_IT>
 800cbc0:	2800      	cmp	r0, #0
 800cbc2:	d0cb      	beq.n	800cb5c <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800cbc4:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cbc6:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800cbc8:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cbca:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cbcc:	f023 0301 	bic.w	r3, r3, #1
 800cbd0:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cbd2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cbd6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cbd8:	4798      	blx	r3
 800cbda:	e7bf      	b.n	800cb5c <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cbdc:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800cbde:	4920      	ldr	r1, [pc, #128]	; (800cc60 <I2C_ITError+0x168>)
 800cbe0:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800cbe2:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800cbe4:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800cbe6:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800cbe8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cbec:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800cbf0:	f7ff fea0 	bl	800c934 <HAL_I2C_ListenCpltCallback>
}
 800cbf4:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800cbf6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800cbf8:	4b18      	ldr	r3, [pc, #96]	; (800cc5c <I2C_ITError+0x164>)
 800cbfa:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800cbfc:	f7fe fd70 	bl	800b6e0 <HAL_DMA_Abort_IT>
 800cc00:	2800      	cmp	r0, #0
 800cc02:	d0ab      	beq.n	800cb5c <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cc04:	6823      	ldr	r3, [r4, #0]
 800cc06:	695a      	ldr	r2, [r3, #20]
 800cc08:	0651      	lsls	r1, r2, #25
 800cc0a:	d506      	bpl.n	800cc1a <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cc0c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cc0e:	691b      	ldr	r3, [r3, #16]
 800cc10:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800cc12:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cc14:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800cc16:	3201      	adds	r2, #1
 800cc18:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cc1a:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cc1c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800cc1e:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800cc22:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cc24:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cc26:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cc2a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cc2c:	4798      	blx	r3
 800cc2e:	e795      	b.n	800cb5c <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800cc30:	2120      	movs	r1, #32
 800cc32:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cc36:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cc38:	695a      	ldr	r2, [r3, #20]
 800cc3a:	0652      	lsls	r2, r2, #25
 800cc3c:	d506      	bpl.n	800cc4c <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cc3e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cc40:	691b      	ldr	r3, [r3, #16]
 800cc42:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cc44:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cc46:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cc48:	3201      	adds	r2, #1
 800cc4a:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cc4c:	681a      	ldr	r2, [r3, #0]
 800cc4e:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc52:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800cc54:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc56:	f7ff fed3 	bl	800ca00 <HAL_I2C_AbortCpltCallback>
 800cc5a:	e77f      	b.n	800cb5c <I2C_ITError+0x64>
 800cc5c:	0800ca05 	.word	0x0800ca05
 800cc60:	ffff0000 	.word	0xffff0000

0800cc64 <HAL_I2C_EV_IRQHandler>:
{
 800cc64:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cc66:	6803      	ldr	r3, [r0, #0]
{
 800cc68:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cc6a:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cc6c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc6e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc72:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cc76:	2910      	cmp	r1, #16
{
 800cc78:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc7a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc7c:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cc80:	d022      	beq.n	800ccc8 <HAL_I2C_EV_IRQHandler+0x64>
 800cc82:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800cc86:	d01f      	beq.n	800ccc8 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cc88:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800cc8a:	2900      	cmp	r1, #0
 800cc8c:	f000 8094 	beq.w	800cdb8 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cc90:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800cc92:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cc94:	f011 0602 	ands.w	r6, r1, #2
 800cc98:	d059      	beq.n	800cd4e <HAL_I2C_EV_IRQHandler+0xea>
 800cc9a:	0586      	lsls	r6, r0, #22
 800cc9c:	d559      	bpl.n	800cd52 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cc9e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cca0:	b102      	cbz	r2, 800cca4 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cca2:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cca4:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800cca8:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800ccac:	2a28      	cmp	r2, #40	; 0x28
 800ccae:	f000 821e 	beq.w	800d0ee <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ccb2:	2200      	movs	r2, #0
 800ccb4:	920c      	str	r2, [sp, #48]	; 0x30
 800ccb6:	6959      	ldr	r1, [r3, #20]
 800ccb8:	910c      	str	r1, [sp, #48]	; 0x30
 800ccba:	699b      	ldr	r3, [r3, #24]
 800ccbc:	930c      	str	r3, [sp, #48]	; 0x30
 800ccbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800ccc0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800ccc4:	b00e      	add	sp, #56	; 0x38
 800ccc6:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ccc8:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ccca:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800cccc:	f011 0f01 	tst.w	r1, #1
 800ccd0:	d11a      	bne.n	800cd08 <HAL_I2C_EV_IRQHandler+0xa4>
 800ccd2:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800ccd6:	d0f5      	beq.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800ccd8:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800ccdc:	d0f2      	beq.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ccde:	070d      	lsls	r5, r1, #28
 800cce0:	d56d      	bpl.n	800cdbe <HAL_I2C_EV_IRQHandler+0x15a>
 800cce2:	0585      	lsls	r5, r0, #22
 800cce4:	f140 8083 	bpl.w	800cdee <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800cce8:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ccea:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ccec:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ccee:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ccf0:	2900      	cmp	r1, #0
 800ccf2:	f000 81e3 	beq.w	800d0bc <HAL_I2C_EV_IRQHandler+0x458>
 800ccf6:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800ccf8:	2a00      	cmp	r2, #0
 800ccfa:	f000 81df 	beq.w	800d0bc <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ccfe:	685a      	ldr	r2, [r3, #4]
 800cd00:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800cd04:	605a      	str	r2, [r3, #4]
 800cd06:	e7dd      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cd08:	0585      	lsls	r5, r0, #22
 800cd0a:	d56e      	bpl.n	800cdea <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800cd0c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cd0e:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800cd12:	f000 81e9 	beq.w	800d0e8 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800cd16:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cd18:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800cd1c:	bf04      	itt	eq
 800cd1e:	2208      	moveq	r2, #8
 800cd20:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800cd22:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800cd26:	2a40      	cmp	r2, #64	; 0x40
 800cd28:	f000 81d7 	beq.w	800d0da <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800cd2c:	6922      	ldr	r2, [r4, #16]
 800cd2e:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800cd32:	f000 81b2 	beq.w	800d09a <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800cd36:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800cd38:	2a00      	cmp	r2, #0
 800cd3a:	f040 81ef 	bne.w	800d11c <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800cd3e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cd40:	11d2      	asrs	r2, r2, #7
 800cd42:	f002 0206 	and.w	r2, r2, #6
 800cd46:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800cd4a:	611a      	str	r2, [r3, #16]
 800cd4c:	e7ba      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cd4e:	06cd      	lsls	r5, r1, #27
 800cd50:	d47c      	bmi.n	800ce4c <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cd52:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800cd56:	2a21      	cmp	r2, #33	; 0x21
 800cd58:	f000 80f5 	beq.w	800cf46 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cd5c:	064e      	lsls	r6, r1, #25
 800cd5e:	f140 8132 	bpl.w	800cfc6 <HAL_I2C_EV_IRQHandler+0x362>
 800cd62:	0545      	lsls	r5, r0, #21
 800cd64:	f140 812f 	bpl.w	800cfc6 <HAL_I2C_EV_IRQHandler+0x362>
 800cd68:	0749      	lsls	r1, r1, #29
 800cd6a:	f100 812f 	bmi.w	800cfcc <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cd6e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cd72:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cd74:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cd76:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800cd78:	2a00      	cmp	r2, #0
 800cd7a:	d0a3      	beq.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd7c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd7e:	691b      	ldr	r3, [r3, #16]
 800cd80:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800cd82:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cd84:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cd86:	3b01      	subs	r3, #1
 800cd88:	b29b      	uxth	r3, r3
 800cd8a:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd8c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cd8e:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd90:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800cd92:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd94:	2b00      	cmp	r3, #0
 800cd96:	d195      	bne.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800cd98:	292a      	cmp	r1, #42	; 0x2a
 800cd9a:	d193      	bne.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cd9c:	6822      	ldr	r2, [r4, #0]
 800cd9e:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cda0:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cda2:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cda4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cda8:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cdaa:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cdac:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cdae:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cdb2:	f7ff fdbb 	bl	800c92c <HAL_I2C_SlaveRxCpltCallback>
 800cdb6:	e785      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cdb8:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cdba:	6959      	ldr	r1, [r3, #20]
 800cdbc:	e76a      	b.n	800cc94 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cdbe:	078d      	lsls	r5, r1, #30
 800cdc0:	d515      	bpl.n	800cdee <HAL_I2C_EV_IRQHandler+0x18a>
 800cdc2:	0585      	lsls	r5, r0, #22
 800cdc4:	d513      	bpl.n	800cdee <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cdc6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800cdca:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800cdcc:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cdce:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cdd2:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cdd4:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cdd6:	f000 81b3 	beq.w	800d140 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cdda:	2200      	movs	r2, #0
 800cddc:	920a      	str	r2, [sp, #40]	; 0x28
 800cdde:	695a      	ldr	r2, [r3, #20]
 800cde0:	920a      	str	r2, [sp, #40]	; 0x28
 800cde2:	699b      	ldr	r3, [r3, #24]
 800cde4:	930a      	str	r3, [sp, #40]	; 0x28
 800cde6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cde8:	e76c      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cdea:	070d      	lsls	r5, r1, #28
 800cdec:	d5e7      	bpl.n	800cdbe <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800cdee:	0776      	lsls	r6, r6, #29
 800cdf0:	f140 80f5 	bpl.w	800cfde <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cdf4:	685d      	ldr	r5, [r3, #4]
 800cdf6:	052d      	lsls	r5, r5, #20
 800cdf8:	f53f af64 	bmi.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cdfc:	060e      	lsls	r6, r1, #24
 800cdfe:	f140 8115 	bpl.w	800d02c <HAL_I2C_EV_IRQHandler+0x3c8>
 800ce02:	0545      	lsls	r5, r0, #21
 800ce04:	f140 8112 	bpl.w	800d02c <HAL_I2C_EV_IRQHandler+0x3c8>
 800ce08:	074e      	lsls	r6, r1, #29
 800ce0a:	f100 8112 	bmi.w	800d032 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce0e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ce12:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800ce14:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800ce18:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce1a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800ce1c:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ce1e:	2800      	cmp	r0, #0
 800ce20:	f040 8235 	bne.w	800d28e <HAL_I2C_EV_IRQHandler+0x62a>
 800ce24:	2a21      	cmp	r2, #33	; 0x21
 800ce26:	f000 8347 	beq.w	800d4b8 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800ce2a:	2940      	cmp	r1, #64	; 0x40
 800ce2c:	f47f af4a 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800ce30:	2a22      	cmp	r2, #34	; 0x22
 800ce32:	f47f af47 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800ce36:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce38:	b292      	uxth	r2, r2
 800ce3a:	2a00      	cmp	r2, #0
 800ce3c:	f000 8268 	beq.w	800d310 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ce40:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ce44:	2a40      	cmp	r2, #64	; 0x40
 800ce46:	f040 80b4 	bne.w	800cfb2 <HAL_I2C_EV_IRQHandler+0x34e>
 800ce4a:	e0fc      	b.n	800d046 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce4c:	0585      	lsls	r5, r0, #22
 800ce4e:	d580      	bpl.n	800cd52 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce50:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ce54:	685a      	ldr	r2, [r3, #4]
 800ce56:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ce5a:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800ce5c:	960d      	str	r6, [sp, #52]	; 0x34
 800ce5e:	695a      	ldr	r2, [r3, #20]
 800ce60:	920d      	str	r2, [sp, #52]	; 0x34
 800ce62:	681a      	ldr	r2, [r3, #0]
 800ce64:	f042 0201 	orr.w	r2, r2, #1
 800ce68:	601a      	str	r2, [r3, #0]
 800ce6a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ce6c:	681a      	ldr	r2, [r3, #0]
 800ce6e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ce72:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ce74:	685a      	ldr	r2, [r3, #4]
 800ce76:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce78:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ce7a:	d521      	bpl.n	800cec0 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ce7c:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800ce80:	2a22      	cmp	r2, #34	; 0x22
 800ce82:	f000 817a 	beq.w	800d17a <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800ce86:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ce88:	6802      	ldr	r2, [r0, #0]
 800ce8a:	6852      	ldr	r2, [r2, #4]
 800ce8c:	b292      	uxth	r2, r2
 800ce8e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ce90:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce92:	b292      	uxth	r2, r2
 800ce94:	b11a      	cbz	r2, 800ce9e <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ce96:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ce98:	f042 0204 	orr.w	r2, r2, #4
 800ce9c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ce9e:	685a      	ldr	r2, [r3, #4]
 800cea0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cea4:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800cea6:	f7fe fc2d 	bl	800b704 <HAL_DMA_GetState>
 800ceaa:	2801      	cmp	r0, #1
 800ceac:	d008      	beq.n	800cec0 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800ceae:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ceb0:	4b99      	ldr	r3, [pc, #612]	; (800d118 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800ceb2:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ceb4:	f7fe fc14 	bl	800b6e0 <HAL_DMA_Abort_IT>
 800ceb8:	b110      	cbz	r0, 800cec0 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ceba:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cebc:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cebe:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800cec0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cec2:	b29b      	uxth	r3, r3
 800cec4:	b313      	cbz	r3, 800cf0c <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800cec6:	6823      	ldr	r3, [r4, #0]
 800cec8:	695a      	ldr	r2, [r3, #20]
 800ceca:	0752      	lsls	r2, r2, #29
 800cecc:	d50a      	bpl.n	800cee4 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cece:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ced0:	691b      	ldr	r3, [r3, #16]
 800ced2:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ced4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ced6:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ced8:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800ceda:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800cedc:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cede:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cee0:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cee2:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cee4:	695a      	ldr	r2, [r3, #20]
 800cee6:	0656      	lsls	r6, r2, #25
 800cee8:	d509      	bpl.n	800cefe <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ceea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ceec:	691b      	ldr	r3, [r3, #16]
 800ceee:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800cef0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800cef2:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cef4:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800cef6:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800cef8:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800cefa:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cefc:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800cefe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cf00:	b29b      	uxth	r3, r3
 800cf02:	b11b      	cbz	r3, 800cf0c <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800cf04:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cf06:	f043 0304 	orr.w	r3, r3, #4
 800cf0a:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cf0c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cf0e:	2b00      	cmp	r3, #0
 800cf10:	f040 80dd 	bne.w	800d0ce <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800cf14:	2d2a      	cmp	r5, #42	; 0x2a
 800cf16:	f000 8151 	beq.w	800d1bc <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800cf1a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800cf1e:	2b28      	cmp	r3, #40	; 0x28
 800cf20:	f000 8154 	beq.w	800d1cc <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cf24:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cf26:	2b22      	cmp	r3, #34	; 0x22
 800cf28:	d002      	beq.n	800cf30 <HAL_I2C_EV_IRQHandler+0x2cc>
 800cf2a:	2d22      	cmp	r5, #34	; 0x22
 800cf2c:	f47f aeca 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800cf30:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800cf32:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800cf34:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cf36:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800cf38:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800cf3c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cf40:	f7ff fcf4 	bl	800c92c <HAL_I2C_SlaveRxCpltCallback>
 800cf44:	e6be      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cf46:	060d      	lsls	r5, r1, #24
 800cf48:	d528      	bpl.n	800cf9c <HAL_I2C_EV_IRQHandler+0x338>
 800cf4a:	0546      	lsls	r6, r0, #21
 800cf4c:	d526      	bpl.n	800cf9c <HAL_I2C_EV_IRQHandler+0x338>
 800cf4e:	074d      	lsls	r5, r1, #29
 800cf50:	d427      	bmi.n	800cfa2 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf52:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cf56:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf58:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf5a:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800cf5c:	2900      	cmp	r1, #0
 800cf5e:	f43f aeb1 	beq.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cf62:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800cf64:	f811 5b01 	ldrb.w	r5, [r1], #1
 800cf68:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800cf6a:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cf6c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf6e:	3901      	subs	r1, #1
 800cf70:	b289      	uxth	r1, r1
 800cf72:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cf74:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf76:	b289      	uxth	r1, r1
 800cf78:	2900      	cmp	r1, #0
 800cf7a:	f47f aea3 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800cf7e:	2829      	cmp	r0, #41	; 0x29
 800cf80:	f47f aea0 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cf84:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cf86:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cf88:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800cf8c:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cf8e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800cf90:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cf92:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cf96:	f7ff fcc7 	bl	800c928 <HAL_I2C_SlaveTxCpltCallback>
 800cf9a:	e693      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cf9c:	0749      	lsls	r1, r1, #29
 800cf9e:	f57f ae91 	bpl.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800cfa2:	0582      	lsls	r2, r0, #22
 800cfa4:	f57f ae8e 	bpl.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800cfa8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfaa:	b292      	uxth	r2, r2
 800cfac:	2a00      	cmp	r2, #0
 800cfae:	f43f ae89 	beq.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cfb2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cfb4:	f812 1b01 	ldrb.w	r1, [r2], #1
 800cfb8:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800cfba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cfbc:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cfbe:	3b01      	subs	r3, #1
 800cfc0:	b29b      	uxth	r3, r3
 800cfc2:	8563      	strh	r3, [r4, #42]	; 0x2a
 800cfc4:	e67e      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cfc6:	074a      	lsls	r2, r1, #29
 800cfc8:	f57f ae7c 	bpl.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800cfcc:	0586      	lsls	r6, r0, #22
 800cfce:	f57f ae79 	bpl.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800cfd2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfd4:	b292      	uxth	r2, r2
 800cfd6:	2a00      	cmp	r2, #0
 800cfd8:	f43f ae74 	beq.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800cfdc:	e01b      	b.n	800d016 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cfde:	685a      	ldr	r2, [r3, #4]
 800cfe0:	0512      	lsls	r2, r2, #20
 800cfe2:	f53f ae6f 	bmi.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cfe6:	064e      	lsls	r6, r1, #25
 800cfe8:	d433      	bmi.n	800d052 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cfea:	0749      	lsls	r1, r1, #29
 800cfec:	f57f ae6a 	bpl.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800cff0:	0582      	lsls	r2, r0, #22
 800cff2:	f57f ae67 	bpl.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800cff6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800cff8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cffa:	b292      	uxth	r2, r2
 800cffc:	2a04      	cmp	r2, #4
 800cffe:	f000 8113 	beq.w	800d228 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800d002:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d004:	b292      	uxth	r2, r2
 800d006:	2a03      	cmp	r2, #3
 800d008:	f000 8153 	beq.w	800d2b2 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800d00c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d00e:	b292      	uxth	r2, r2
 800d010:	2a02      	cmp	r2, #2
 800d012:	f000 8182 	beq.w	800d31a <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d016:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d018:	691b      	ldr	r3, [r3, #16]
 800d01a:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d01c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d01e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d020:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800d022:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800d024:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800d026:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d028:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800d02a:	e64b      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d02c:	074d      	lsls	r5, r1, #29
 800d02e:	f57f ae49 	bpl.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800d032:	0581      	lsls	r1, r0, #22
 800d034:	f57f ae46 	bpl.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800d038:	2a21      	cmp	r2, #33	; 0x21
 800d03a:	f000 80fd 	beq.w	800d238 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800d03e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800d042:	f47f ae3f 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d046:	4620      	mov	r0, r4
}
 800d048:	b00e      	add	sp, #56	; 0x38
 800d04a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d04e:	f7ff bc75 	b.w	800c93c <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d052:	0545      	lsls	r5, r0, #21
 800d054:	d5c9      	bpl.n	800cfea <HAL_I2C_EV_IRQHandler+0x386>
 800d056:	f011 0104 	ands.w	r1, r1, #4
 800d05a:	d1c9      	bne.n	800cff0 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800d05c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d060:	2a22      	cmp	r2, #34	; 0x22
 800d062:	f47f ae2f 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800d066:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d068:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800d06a:	2a03      	cmp	r2, #3
 800d06c:	f240 81ec 	bls.w	800d448 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d070:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d072:	691b      	ldr	r3, [r3, #16]
 800d074:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d076:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d078:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d07a:	3b01      	subs	r3, #1
 800d07c:	b29b      	uxth	r3, r3
 800d07e:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800d080:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d082:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800d084:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800d086:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800d088:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800d08a:	f47f ae1b 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d08e:	6822      	ldr	r2, [r4, #0]
 800d090:	6853      	ldr	r3, [r2, #4]
 800d092:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800d096:	6053      	str	r3, [r2, #4]
 800d098:	e614      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d09a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d09e:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d0a0:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d0a2:	bf16      	itet	ne
 800d0a4:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d0a8:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d0ac:	b2d2      	uxtbne	r2, r2
 800d0ae:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800d0b0:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d0b2:	b11a      	cbz	r2, 800d0bc <HAL_I2C_EV_IRQHandler+0x458>
 800d0b4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d0b6:	2a00      	cmp	r2, #0
 800d0b8:	f47f ae21 	bne.w	800ccfe <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800d0bc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d0be:	2a00      	cmp	r2, #0
 800d0c0:	f43f ae00 	beq.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800d0c4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d0c6:	2a00      	cmp	r2, #0
 800d0c8:	f47f ae19 	bne.w	800ccfe <HAL_I2C_EV_IRQHandler+0x9a>
 800d0cc:	e5fa      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800d0ce:	4620      	mov	r0, r4
}
 800d0d0:	b00e      	add	sp, #56	; 0x38
 800d0d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800d0d6:	f7ff bd0f 	b.w	800caf8 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800d0da:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d0dc:	bb52      	cbnz	r2, 800d134 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d0de:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d0e0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800d0e4:	611a      	str	r2, [r3, #16]
 800d0e6:	e5ed      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800d0e8:	2201      	movs	r2, #1
 800d0ea:	62e2      	str	r2, [r4, #44]	; 0x2c
 800d0ec:	e619      	b.n	800cd22 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800d0ee:	685a      	ldr	r2, [r3, #4]
 800d0f0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d0f4:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800d0f6:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800d0f8:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800d0fc:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800d100:	bf54      	ite	pl
 800d102:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800d104:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800d106:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800d10a:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800d10e:	4620      	mov	r0, r4
 800d110:	f7ff fc0e 	bl	800c930 <HAL_I2C_AddrCallback>
 800d114:	e5d6      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800d116:	bf00      	nop
 800d118:	0800ca05 	.word	0x0800ca05
      else if (hi2c->EventCount == 1U)
 800d11c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d11e:	2a01      	cmp	r2, #1
 800d120:	f47f add0 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800d124:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d126:	11d2      	asrs	r2, r2, #7
 800d128:	f002 0206 	and.w	r2, r2, #6
 800d12c:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800d130:	611a      	str	r2, [r3, #16]
 800d132:	e5c7      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d134:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d136:	f042 0201 	orr.w	r2, r2, #1
 800d13a:	b2d2      	uxtb	r2, r2
 800d13c:	611a      	str	r2, [r3, #16]
 800d13e:	e5c1      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800d140:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800d142:	b911      	cbnz	r1, 800d14a <HAL_I2C_EV_IRQHandler+0x4e6>
 800d144:	2a40      	cmp	r2, #64	; 0x40
 800d146:	f000 809b 	beq.w	800d280 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800d14a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d14c:	b922      	cbnz	r2, 800d158 <HAL_I2C_EV_IRQHandler+0x4f4>
 800d14e:	6921      	ldr	r1, [r4, #16]
 800d150:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800d154:	f000 809f 	beq.w	800d296 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800d158:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d15a:	b292      	uxth	r2, r2
 800d15c:	2a00      	cmp	r2, #0
 800d15e:	d142      	bne.n	800d1e6 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d160:	9203      	str	r2, [sp, #12]
 800d162:	695a      	ldr	r2, [r3, #20]
 800d164:	9203      	str	r2, [sp, #12]
 800d166:	699a      	ldr	r2, [r3, #24]
 800d168:	9203      	str	r2, [sp, #12]
 800d16a:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d16c:	681a      	ldr	r2, [r3, #0]
 800d16e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d172:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800d174:	2300      	movs	r3, #0
 800d176:	6523      	str	r3, [r4, #80]	; 0x50
 800d178:	e5a4      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800d17a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d17c:	6802      	ldr	r2, [r0, #0]
 800d17e:	6852      	ldr	r2, [r2, #4]
 800d180:	b292      	uxth	r2, r2
 800d182:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800d184:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d186:	b292      	uxth	r2, r2
 800d188:	b11a      	cbz	r2, 800d192 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800d18a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d18c:	f042 0204 	orr.w	r2, r2, #4
 800d190:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800d192:	685a      	ldr	r2, [r3, #4]
 800d194:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d198:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800d19a:	f7fe fab3 	bl	800b704 <HAL_DMA_GetState>
 800d19e:	2801      	cmp	r0, #1
 800d1a0:	f43f ae8e 	beq.w	800cec0 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800d1a4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d1a6:	4b98      	ldr	r3, [pc, #608]	; (800d408 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800d1a8:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800d1aa:	f7fe fa99 	bl	800b6e0 <HAL_DMA_Abort_IT>
 800d1ae:	2800      	cmp	r0, #0
 800d1b0:	f43f ae86 	beq.w	800cec0 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800d1b4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d1b6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d1b8:	4798      	blx	r3
 800d1ba:	e681      	b.n	800cec0 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d1bc:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800d1be:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d1c0:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d1c2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d1c6:	f7ff fbb1 	bl	800c92c <HAL_I2C_SlaveRxCpltCallback>
 800d1ca:	e6a6      	b.n	800cf1a <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800d1cc:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800d1ce:	498f      	ldr	r1, [pc, #572]	; (800d40c <HAL_I2C_EV_IRQHandler+0x7a8>)
 800d1d0:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800d1d2:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800d1d4:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800d1d6:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d1d8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d1dc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800d1e0:	f7ff fba8 	bl	800c934 <HAL_I2C_ListenCpltCallback>
 800d1e4:	e56e      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800d1e6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1e8:	b292      	uxth	r2, r2
 800d1ea:	2a01      	cmp	r2, #1
 800d1ec:	d070      	beq.n	800d2d0 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800d1ee:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1f0:	b292      	uxth	r2, r2
 800d1f2:	2a02      	cmp	r2, #2
 800d1f4:	f000 80d6 	beq.w	800d3a4 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d1f8:	681a      	ldr	r2, [r3, #0]
 800d1fa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d1fe:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d200:	685a      	ldr	r2, [r3, #4]
 800d202:	0511      	lsls	r1, r2, #20
 800d204:	d508      	bpl.n	800d218 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d206:	2820      	cmp	r0, #32
 800d208:	f200 80f8 	bhi.w	800d3fc <HAL_I2C_EV_IRQHandler+0x798>
 800d20c:	2807      	cmp	r0, #7
 800d20e:	f200 80ea 	bhi.w	800d3e6 <HAL_I2C_EV_IRQHandler+0x782>
 800d212:	2801      	cmp	r0, #1
 800d214:	f000 80ed 	beq.w	800d3f2 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d218:	2200      	movs	r2, #0
 800d21a:	9209      	str	r2, [sp, #36]	; 0x24
 800d21c:	695a      	ldr	r2, [r3, #20]
 800d21e:	9209      	str	r2, [sp, #36]	; 0x24
 800d220:	699b      	ldr	r3, [r3, #24]
 800d222:	9309      	str	r3, [sp, #36]	; 0x24
 800d224:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d226:	e7a5      	b.n	800d174 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d228:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d22a:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d22c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d230:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d232:	691b      	ldr	r3, [r3, #16]
 800d234:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800d236:	e6f1      	b.n	800d01c <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800d238:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d23a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d23e:	2a21      	cmp	r2, #33	; 0x21
 800d240:	f47f ad40 	bne.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800d244:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d246:	b292      	uxth	r2, r2
 800d248:	2a00      	cmp	r2, #0
 800d24a:	f47f aeb2 	bne.w	800cfb2 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d24e:	2908      	cmp	r1, #8
 800d250:	f000 80e2 	beq.w	800d418 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d254:	2920      	cmp	r1, #32
 800d256:	f000 80df 	beq.w	800d418 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d25a:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800d25e:	f000 80db 	beq.w	800d418 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d262:	6859      	ldr	r1, [r3, #4]
 800d264:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d268:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d26a:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800d26c:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d26e:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d270:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d274:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800d276:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d27a:	f7ff fb51 	bl	800c920 <HAL_I2C_MasterTxCpltCallback>
 800d27e:	e521      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d280:	9101      	str	r1, [sp, #4]
 800d282:	695a      	ldr	r2, [r3, #20]
 800d284:	9201      	str	r2, [sp, #4]
 800d286:	699b      	ldr	r3, [r3, #24]
 800d288:	9301      	str	r3, [sp, #4]
 800d28a:	9b01      	ldr	r3, [sp, #4]
 800d28c:	e51a      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800d28e:	2a21      	cmp	r2, #33	; 0x21
 800d290:	f43f add1 	beq.w	800ce36 <HAL_I2C_EV_IRQHandler+0x1d2>
 800d294:	e5c9      	b.n	800ce2a <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d296:	9202      	str	r2, [sp, #8]
 800d298:	695a      	ldr	r2, [r3, #20]
 800d29a:	9202      	str	r2, [sp, #8]
 800d29c:	699a      	ldr	r2, [r3, #24]
 800d29e:	9202      	str	r2, [sp, #8]
 800d2a0:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d2a2:	681a      	ldr	r2, [r3, #0]
 800d2a4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800d2a8:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800d2aa:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800d2ac:	3301      	adds	r3, #1
 800d2ae:	6523      	str	r3, [r4, #80]	; 0x50
 800d2b0:	e508      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d2b2:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d2b4:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d2b6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2ba:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d2bc:	f43f aeab 	beq.w	800d016 <HAL_I2C_EV_IRQHandler+0x3b2>
 800d2c0:	2902      	cmp	r1, #2
 800d2c2:	f43f aea8 	beq.w	800d016 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2c6:	681a      	ldr	r2, [r3, #0]
 800d2c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2cc:	601a      	str	r2, [r3, #0]
 800d2ce:	e6a2      	b.n	800d016 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800d2d0:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d2d4:	f000 811b 	beq.w	800d50e <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800d2d8:	2808      	cmp	r0, #8
 800d2da:	f000 8108 	beq.w	800d4ee <HAL_I2C_EV_IRQHandler+0x88a>
 800d2de:	2820      	cmp	r0, #32
 800d2e0:	f000 8105 	beq.w	800d4ee <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d2e4:	2d12      	cmp	r5, #18
 800d2e6:	f000 80ff 	beq.w	800d4e8 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d2ea:	2810      	cmp	r0, #16
 800d2ec:	d804      	bhi.n	800d2f8 <HAL_I2C_EV_IRQHandler+0x694>
 800d2ee:	4a48      	ldr	r2, [pc, #288]	; (800d410 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d2f0:	40c2      	lsrs	r2, r0
 800d2f2:	07d1      	lsls	r1, r2, #31
 800d2f4:	f100 814c 	bmi.w	800d590 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2f8:	681a      	ldr	r2, [r3, #0]
 800d2fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2fe:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d300:	2200      	movs	r2, #0
 800d302:	9206      	str	r2, [sp, #24]
 800d304:	695a      	ldr	r2, [r3, #20]
 800d306:	9206      	str	r2, [sp, #24]
 800d308:	699b      	ldr	r3, [r3, #24]
 800d30a:	9306      	str	r3, [sp, #24]
 800d30c:	9b06      	ldr	r3, [sp, #24]
 800d30e:	e731      	b.n	800d174 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d310:	685a      	ldr	r2, [r3, #4]
 800d312:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d316:	605a      	str	r2, [r3, #4]
 800d318:	e4d4      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800d31a:	3901      	subs	r1, #1
 800d31c:	290f      	cmp	r1, #15
 800d31e:	d809      	bhi.n	800d334 <HAL_I2C_EV_IRQHandler+0x6d0>
 800d320:	e8df f001 	tbb	[pc, r1]
 800d324:	3608363b 	.word	0x3608363b
 800d328:	08080808 	.word	0x08080808
 800d32c:	08080808 	.word	0x08080808
 800d330:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d334:	681a      	ldr	r2, [r3, #0]
 800d336:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d33a:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d33c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d33e:	691b      	ldr	r3, [r3, #16]
 800d340:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d342:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d344:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d346:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800d348:	3b01      	subs	r3, #1
 800d34a:	b29b      	uxth	r3, r3
 800d34c:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d34e:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800d350:	1c51      	adds	r1, r2, #1
 800d352:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d354:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800d356:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d358:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800d35a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d35c:	3b01      	subs	r3, #1
 800d35e:	b29b      	uxth	r3, r3
 800d360:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d362:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800d364:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d366:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800d36a:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800d36c:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d36e:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800d370:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d374:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800d378:	2b40      	cmp	r3, #64	; 0x40
 800d37a:	f000 80f5 	beq.w	800d568 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d37e:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d380:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d382:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d386:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d388:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d38a:	f7ff facb 	bl	800c924 <HAL_I2C_MasterRxCpltCallback>
 800d38e:	e499      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d390:	681a      	ldr	r2, [r3, #0]
 800d392:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d396:	601a      	str	r2, [r3, #0]
 800d398:	e7d0      	b.n	800d33c <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d39a:	681a      	ldr	r2, [r3, #0]
 800d39c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d3a0:	601a      	str	r2, [r3, #0]
 800d3a2:	e7cb      	b.n	800d33c <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d3a4:	2810      	cmp	r0, #16
 800d3a6:	d804      	bhi.n	800d3b2 <HAL_I2C_EV_IRQHandler+0x74e>
 800d3a8:	4a19      	ldr	r2, [pc, #100]	; (800d410 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d3aa:	40c2      	lsrs	r2, r0
 800d3ac:	07d2      	lsls	r2, r2, #31
 800d3ae:	f100 80c2 	bmi.w	800d536 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d3b2:	681a      	ldr	r2, [r3, #0]
 800d3b4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d3b8:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800d3ba:	681a      	ldr	r2, [r3, #0]
 800d3bc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d3c0:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d3c2:	685a      	ldr	r2, [r3, #4]
 800d3c4:	0516      	lsls	r6, r2, #20
 800d3c6:	d506      	bpl.n	800d3d6 <HAL_I2C_EV_IRQHandler+0x772>
 800d3c8:	2820      	cmp	r0, #32
 800d3ca:	f240 80bc 	bls.w	800d546 <HAL_I2C_EV_IRQHandler+0x8e2>
 800d3ce:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d3d2:	f000 80bd 	beq.w	800d550 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d3d6:	2200      	movs	r2, #0
 800d3d8:	9208      	str	r2, [sp, #32]
 800d3da:	695a      	ldr	r2, [r3, #20]
 800d3dc:	9208      	str	r2, [sp, #32]
 800d3de:	699b      	ldr	r3, [r3, #24]
 800d3e0:	9308      	str	r3, [sp, #32]
 800d3e2:	9b08      	ldr	r3, [sp, #32]
 800d3e4:	e6c6      	b.n	800d174 <HAL_I2C_EV_IRQHandler+0x510>
 800d3e6:	4a0b      	ldr	r2, [pc, #44]	; (800d414 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800d3e8:	3808      	subs	r0, #8
 800d3ea:	40c2      	lsrs	r2, r0
 800d3ec:	07d2      	lsls	r2, r2, #31
 800d3ee:	f57f af13 	bpl.w	800d218 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d3f2:	685a      	ldr	r2, [r3, #4]
 800d3f4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d3f8:	605a      	str	r2, [r3, #4]
 800d3fa:	e70d      	b.n	800d218 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d3fc:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d400:	f47f af0a 	bne.w	800d218 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d404:	e7f5      	b.n	800d3f2 <HAL_I2C_EV_IRQHandler+0x78e>
 800d406:	bf00      	nop
 800d408:	0800ca05 	.word	0x0800ca05
 800d40c:	ffff0000 	.word	0xffff0000
 800d410:	00010014 	.word	0x00010014
 800d414:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d418:	6859      	ldr	r1, [r3, #4]
 800d41a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d41e:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d420:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d422:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800d424:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d426:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800d42a:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d42c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800d42e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d432:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d436:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d43a:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d43c:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d43e:	f47f af1c 	bne.w	800d27a <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d442:	f7ff fa79 	bl	800c938 <HAL_I2C_MemTxCpltCallback>
 800d446:	e43d      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800d448:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d44a:	2802      	cmp	r0, #2
 800d44c:	f43f af60 	beq.w	800d310 <HAL_I2C_EV_IRQHandler+0x6ac>
 800d450:	2a01      	cmp	r2, #1
 800d452:	f63f af5d 	bhi.w	800d310 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d456:	4a62      	ldr	r2, [pc, #392]	; (800d5e0 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800d458:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d45a:	6812      	ldr	r2, [r2, #0]
 800d45c:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800d460:	fbb2 f2f0 	udiv	r2, r2, r0
 800d464:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800d468:	920b      	str	r2, [sp, #44]	; 0x2c
 800d46a:	e004      	b.n	800d476 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800d46c:	681a      	ldr	r2, [r3, #0]
 800d46e:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800d472:	f000 8092 	beq.w	800d59a <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800d476:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d478:	3a01      	subs	r2, #1
 800d47a:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800d47c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d47e:	2900      	cmp	r1, #0
 800d480:	d1f4      	bne.n	800d46c <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d482:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d484:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d486:	f042 0220 	orr.w	r2, r2, #32
 800d48a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d48c:	685a      	ldr	r2, [r3, #4]
 800d48e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d492:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d494:	691b      	ldr	r3, [r3, #16]
 800d496:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d498:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d49a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800d49c:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800d49e:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800d4a0:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800d4a2:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800d4a4:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d4a6:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800d4a8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800d4ac:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4ae:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800d4b2:	f7ff faa3 	bl	800c9fc <HAL_I2C_ErrorCallback>
 800d4b6:	e405      	b.n	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d4b8:	2d08      	cmp	r5, #8
 800d4ba:	d0ad      	beq.n	800d418 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d4bc:	2d20      	cmp	r5, #32
 800d4be:	d0ab      	beq.n	800d418 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d4c0:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800d4c4:	d0a8      	beq.n	800d418 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d4c6:	685a      	ldr	r2, [r3, #4]
 800d4c8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d4cc:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d4ce:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4d0:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800d4d2:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d4d4:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4d6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d4da:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d4dc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d4e0:	f7ff fa1e 	bl	800c920 <HAL_I2C_MasterTxCpltCallback>
 800d4e4:	f7ff bbee 	b.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d4e8:	2801      	cmp	r0, #1
 800d4ea:	f43f af05 	beq.w	800d2f8 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4ee:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4f0:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4f2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4f6:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4f8:	9107      	str	r1, [sp, #28]
 800d4fa:	695a      	ldr	r2, [r3, #20]
 800d4fc:	9207      	str	r2, [sp, #28]
 800d4fe:	699a      	ldr	r2, [r3, #24]
 800d500:	9207      	str	r2, [sp, #28]
 800d502:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d504:	681a      	ldr	r2, [r3, #0]
 800d506:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d50a:	601a      	str	r2, [r3, #0]
 800d50c:	e632      	b.n	800d174 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d50e:	681a      	ldr	r2, [r3, #0]
 800d510:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d514:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800d516:	685a      	ldr	r2, [r3, #4]
 800d518:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800d51c:	d02d      	beq.n	800d57a <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d51e:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d520:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d522:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d526:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d528:	9104      	str	r1, [sp, #16]
 800d52a:	695a      	ldr	r2, [r3, #20]
 800d52c:	9204      	str	r2, [sp, #16]
 800d52e:	699b      	ldr	r3, [r3, #24]
 800d530:	9304      	str	r3, [sp, #16]
 800d532:	9b04      	ldr	r3, [sp, #16]
 800d534:	e61e      	b.n	800d174 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d536:	681a      	ldr	r2, [r3, #0]
 800d538:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d53c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d53e:	685a      	ldr	r2, [r3, #4]
 800d540:	0515      	lsls	r5, r2, #20
 800d542:	f57f af48 	bpl.w	800d3d6 <HAL_I2C_EV_IRQHandler+0x772>
 800d546:	2807      	cmp	r0, #7
 800d548:	d807      	bhi.n	800d55a <HAL_I2C_EV_IRQHandler+0x8f6>
 800d54a:	2801      	cmp	r0, #1
 800d54c:	f47f af43 	bne.w	800d3d6 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d550:	685a      	ldr	r2, [r3, #4]
 800d552:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d556:	605a      	str	r2, [r3, #4]
 800d558:	e73d      	b.n	800d3d6 <HAL_I2C_EV_IRQHandler+0x772>
 800d55a:	4a22      	ldr	r2, [pc, #136]	; (800d5e4 <HAL_I2C_EV_IRQHandler+0x980>)
 800d55c:	3808      	subs	r0, #8
 800d55e:	40c2      	lsrs	r2, r0
 800d560:	07d0      	lsls	r0, r2, #31
 800d562:	f57f af38 	bpl.w	800d3d6 <HAL_I2C_EV_IRQHandler+0x772>
 800d566:	e7f3      	b.n	800d550 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d568:	2300      	movs	r3, #0
 800d56a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d56e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800d570:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d572:	f7ff fa41 	bl	800c9f8 <HAL_I2C_MemRxCpltCallback>
 800d576:	f7ff bba5 	b.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d57a:	9205      	str	r2, [sp, #20]
 800d57c:	695a      	ldr	r2, [r3, #20]
 800d57e:	9205      	str	r2, [sp, #20]
 800d580:	699a      	ldr	r2, [r3, #24]
 800d582:	9205      	str	r2, [sp, #20]
 800d584:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d586:	681a      	ldr	r2, [r3, #0]
 800d588:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d58c:	601a      	str	r2, [r3, #0]
 800d58e:	e5f1      	b.n	800d174 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d590:	681a      	ldr	r2, [r3, #0]
 800d592:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d596:	601a      	str	r2, [r3, #0]
 800d598:	e6b2      	b.n	800d300 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d59a:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d59c:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d59e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d5a2:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d5a4:	6859      	ldr	r1, [r3, #4]
 800d5a6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d5aa:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d5ac:	691b      	ldr	r3, [r3, #16]
 800d5ae:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d5b0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d5b2:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800d5b4:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800d5b6:	b29b      	uxth	r3, r3
 800d5b8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800d5ba:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800d5be:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d5c0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800d5c4:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d5c6:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800d5c8:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d5ca:	f47f aed9 	bne.w	800d380 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d5ce:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d5d2:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800d5d4:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d5d6:	f7ff fa0f 	bl	800c9f8 <HAL_I2C_MemRxCpltCallback>
 800d5da:	f7ff bb73 	b.w	800ccc4 <HAL_I2C_EV_IRQHandler+0x60>
 800d5de:	bf00      	nop
 800d5e0:	2000007c 	.word	0x2000007c
 800d5e4:	01000101 	.word	0x01000101

0800d5e8 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d5e8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d5ec:	2a20      	cmp	r2, #32
{
 800d5ee:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800d5f0:	fa5f fc82 	uxtb.w	ip, r2
 800d5f4:	d001      	beq.n	800d5fa <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d5f6:	2002      	movs	r0, #2
  }
}
 800d5f8:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800d5fa:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d5fc:	2024      	movs	r0, #36	; 0x24
 800d5fe:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d602:	6810      	ldr	r0, [r2, #0]
 800d604:	f020 0001 	bic.w	r0, r0, #1
 800d608:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800d60a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d60c:	f020 0010 	bic.w	r0, r0, #16
 800d610:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800d612:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d614:	4301      	orrs	r1, r0
 800d616:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d618:	6811      	ldr	r1, [r2, #0]
 800d61a:	f041 0101 	orr.w	r1, r1, #1
 800d61e:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800d620:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800d622:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d626:	4770      	bx	lr

0800d628 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d628:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d62c:	2a20      	cmp	r2, #32
 800d62e:	d001      	beq.n	800d634 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d630:	2002      	movs	r0, #2
  }
}
 800d632:	4770      	bx	lr
{
 800d634:	b410      	push	{r4}
 800d636:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800d63a:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d63c:	2224      	movs	r2, #36	; 0x24
 800d63e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d642:	6822      	ldr	r2, [r4, #0]
 800d644:	f022 0201 	bic.w	r2, r2, #1
 800d648:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800d64a:	4603      	mov	r3, r0
 800d64c:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800d64e:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800d652:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800d654:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800d656:	b289      	uxth	r1, r1
 800d658:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d65a:	6822      	ldr	r2, [r4, #0]
 800d65c:	f042 0201 	orr.w	r2, r2, #1
 800d660:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800d662:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d666:	2000      	movs	r0, #0
}
 800d668:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d66c:	4770      	bx	lr
 800d66e:	bf00      	nop

0800d670 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800d670:	2800      	cmp	r0, #0
 800d672:	d069      	beq.n	800d748 <HAL_LTDC_Init+0xd8>
{
 800d674:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800d676:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800d67a:	4604      	mov	r4, r0
 800d67c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d680:	2b00      	cmp	r3, #0
 800d682:	d05c      	beq.n	800d73e <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d684:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d686:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d688:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d68c:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d690:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d692:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d694:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d698:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800d69c:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d69e:	6999      	ldr	r1, [r3, #24]
 800d6a0:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d6a2:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d6a4:	430a      	orrs	r2, r1
 800d6a6:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d6a8:	689a      	ldr	r2, [r3, #8]
 800d6aa:	4928      	ldr	r1, [pc, #160]	; (800d74c <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800d6ac:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d6ae:	400a      	ands	r2, r1
 800d6b0:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800d6b2:	689a      	ldr	r2, [r3, #8]
 800d6b4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6b8:	69a0      	ldr	r0, [r4, #24]
 800d6ba:	4302      	orrs	r2, r0
 800d6bc:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d6be:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800d6c0:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d6c2:	400a      	ands	r2, r1
 800d6c4:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800d6c6:	68da      	ldr	r2, [r3, #12]
 800d6c8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6cc:	6a20      	ldr	r0, [r4, #32]
 800d6ce:	4302      	orrs	r2, r0
 800d6d0:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d6d2:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800d6d4:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d6d6:	400a      	ands	r2, r1
 800d6d8:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800d6da:	691a      	ldr	r2, [r3, #16]
 800d6dc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6e0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d6e2:	4302      	orrs	r2, r0
 800d6e4:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d6e6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800d6e8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d6ea:	400a      	ands	r2, r1
 800d6ec:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d6ee:	695a      	ldr	r2, [r3, #20]
 800d6f0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d6f2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6f6:	430a      	orrs	r2, r1
 800d6f8:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d6fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800d6fc:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800d700:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d704:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800d708:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800d70a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800d70c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800d710:	432a      	orrs	r2, r5
 800d712:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800d716:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d71a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d71c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d71e:	f042 0206 	orr.w	r2, r2, #6
 800d722:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800d724:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800d726:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d72a:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800d72c:	ea42 020c 	orr.w	r2, r2, ip
 800d730:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d732:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d736:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800d73a:	4608      	mov	r0, r1
}
 800d73c:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800d73e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800d742:	f7f4 fde5 	bl	8002310 <HAL_LTDC_MspInit>
 800d746:	e79d      	b.n	800d684 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800d748:	2001      	movs	r0, #1
}
 800d74a:	4770      	bx	lr
 800d74c:	f000f800 	.word	0xf000f800

0800d750 <HAL_LTDC_ErrorCallback>:
 800d750:	4770      	bx	lr
 800d752:	bf00      	nop

0800d754 <HAL_LTDC_ReloadEventCallback>:
 800d754:	4770      	bx	lr
 800d756:	bf00      	nop

0800d758 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d758:	6803      	ldr	r3, [r0, #0]
{
 800d75a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d75c:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d75e:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d760:	076a      	lsls	r2, r5, #29
{
 800d762:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d764:	d501      	bpl.n	800d76a <HAL_LTDC_IRQHandler+0x12>
 800d766:	0771      	lsls	r1, r6, #29
 800d768:	d41d      	bmi.n	800d7a6 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d76a:	07aa      	lsls	r2, r5, #30
 800d76c:	d501      	bpl.n	800d772 <HAL_LTDC_IRQHandler+0x1a>
 800d76e:	07b3      	lsls	r3, r6, #30
 800d770:	d42d      	bmi.n	800d7ce <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d772:	07e8      	lsls	r0, r5, #31
 800d774:	d501      	bpl.n	800d77a <HAL_LTDC_IRQHandler+0x22>
 800d776:	07f1      	lsls	r1, r6, #31
 800d778:	d440      	bmi.n	800d7fc <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d77a:	072a      	lsls	r2, r5, #28
 800d77c:	d501      	bpl.n	800d782 <HAL_LTDC_IRQHandler+0x2a>
 800d77e:	0733      	lsls	r3, r6, #28
 800d780:	d400      	bmi.n	800d784 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800d782:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d784:	6823      	ldr	r3, [r4, #0]
 800d786:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d788:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d78a:	f022 0208 	bic.w	r2, r2, #8
 800d78e:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800d790:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d792:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d794:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d796:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d79a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d79e:	4620      	mov	r0, r4
 800d7a0:	f7ff ffd8 	bl	800d754 <HAL_LTDC_ReloadEventCallback>
}
 800d7a4:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d7a6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d7a8:	f022 0204 	bic.w	r2, r2, #4
 800d7ac:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d7ae:	2204      	movs	r2, #4
 800d7b0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d7b2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800d7b6:	f043 0301 	orr.w	r3, r3, #1
 800d7ba:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800d7be:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7c0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d7c4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d7c8:	f7ff ffc2 	bl	800d750 <HAL_LTDC_ErrorCallback>
 800d7cc:	e7cd      	b.n	800d76a <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d7ce:	6823      	ldr	r3, [r4, #0]
 800d7d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d7d2:	f022 0202 	bic.w	r2, r2, #2
 800d7d6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d7d8:	2202      	movs	r2, #2
 800d7da:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d7dc:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d7e0:	f043 0302 	orr.w	r3, r3, #2
 800d7e4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7e8:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800d7ea:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7ec:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d7f0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d7f4:	4620      	mov	r0, r4
 800d7f6:	f7ff ffab 	bl	800d750 <HAL_LTDC_ErrorCallback>
 800d7fa:	e7ba      	b.n	800d772 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d7fc:	6823      	ldr	r3, [r4, #0]
 800d7fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d800:	f022 0201 	bic.w	r2, r2, #1
 800d804:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d806:	2201      	movs	r2, #1
 800d808:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d80a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d80c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d810:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d814:	4620      	mov	r0, r4
 800d816:	f7f5 fdd7 	bl	80033c8 <HAL_LTDC_LineEventCallback>
 800d81a:	e7ae      	b.n	800d77a <HAL_LTDC_IRQHandler+0x22>

0800d81c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800d81c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d820:	2b01      	cmp	r3, #1
 800d822:	f000 80c2 	beq.w	800d9aa <HAL_LTDC_ConfigLayer+0x18e>
{
 800d826:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d82a:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d82e:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d832:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d836:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d838:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d83a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d83e:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800d842:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d846:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800d84a:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d84e:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800d852:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d854:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d858:	460c      	mov	r4, r1
 800d85a:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d85c:	9301      	str	r3, [sp, #4]
 800d85e:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d860:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d862:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800d866:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d86a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d86c:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d86e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d872:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d874:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d878:	6823      	ldr	r3, [r4, #0]
 800d87a:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d87e:	9b01      	ldr	r3, [sp, #4]
 800d880:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d884:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d888:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d88a:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800d88c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d890:	1c51      	adds	r1, r2, #1
 800d892:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800d896:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d898:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d89a:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d89e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d8a2:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800d8a6:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800d8aa:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800d8ae:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d8b2:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d8b6:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d8b8:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d8ba:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800d8be:	3301      	adds	r3, #1
 800d8c0:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800d8c4:	4403      	add	r3, r0
 800d8c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d8ca:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d8ce:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d8d2:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d8d4:	f023 0307 	bic.w	r3, r3, #7
 800d8d8:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8dc:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d8e0:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8e4:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800d8e8:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800d8ec:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8f0:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800d8f4:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800d8f8:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800d8fc:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d900:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800d904:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800d908:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800d90c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800d910:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800d914:	696b      	ldr	r3, [r5, #20]
 800d916:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800d91a:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800d91e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800d922:	f023 0307 	bic.w	r3, r3, #7
 800d926:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800d92a:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800d92e:	4303      	orrs	r3, r0
 800d930:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d934:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d938:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d93a:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d93e:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d942:	bb69      	cbnz	r1, 800d9a0 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800d944:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d946:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d948:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d94a:	fb03 f707 	mul.w	r7, r3, r7
 800d94e:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d950:	fb02 f303 	mul.w	r3, r2, r3
 800d954:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d958:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d95c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d95e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800d962:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d966:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800d96a:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800d96e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800d972:	f023 0307 	bic.w	r3, r3, #7
 800d976:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d97a:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d97e:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d982:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d984:	4313      	orrs	r3, r2
 800d986:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800d98a:	2300      	movs	r3, #0
  return HAL_OK;
 800d98c:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d98e:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800d992:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d996:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800d99a:	b003      	add	sp, #12
 800d99c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800d9a0:	3901      	subs	r1, #1
 800d9a2:	2906      	cmp	r1, #6
 800d9a4:	d903      	bls.n	800d9ae <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d9a6:	2301      	movs	r3, #1
 800d9a8:	e7cd      	b.n	800d946 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800d9aa:	2002      	movs	r0, #2
}
 800d9ac:	4770      	bx	lr
 800d9ae:	4b02      	ldr	r3, [pc, #8]	; (800d9b8 <HAL_LTDC_ConfigLayer+0x19c>)
 800d9b0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d9b4:	e7c7      	b.n	800d946 <HAL_LTDC_ConfigLayer+0x12a>
 800d9b6:	bf00      	nop
 800d9b8:	08031444 	.word	0x08031444

0800d9bc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800d9bc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d9c0:	2b01      	cmp	r3, #1
 800d9c2:	d019      	beq.n	800d9f8 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d9c4:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d9c6:	2302      	movs	r3, #2
{
 800d9c8:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d9ca:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d9ce:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d9d0:	4c0a      	ldr	r4, [pc, #40]	; (800d9fc <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d9d2:	f023 0301 	bic.w	r3, r3, #1
 800d9d6:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d9d8:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9da:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800d9dc:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9de:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800d9e2:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9e6:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800d9e8:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d9ec:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800d9f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800d9f4:	4618      	mov	r0, r3
}
 800d9f6:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800d9f8:	2002      	movs	r0, #2
}
 800d9fa:	4770      	bx	lr
 800d9fc:	40016800 	.word	0x40016800

0800da00 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800da00:	2800      	cmp	r0, #0
 800da02:	f000 81a2 	beq.w	800dd4a <HAL_RCC_OscConfig+0x34a>
{
 800da06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800da0a:	6803      	ldr	r3, [r0, #0]
 800da0c:	07dd      	lsls	r5, r3, #31
{
 800da0e:	b082      	sub	sp, #8
 800da10:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800da12:	d52f      	bpl.n	800da74 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800da14:	499e      	ldr	r1, [pc, #632]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800da16:	688a      	ldr	r2, [r1, #8]
 800da18:	f002 020c 	and.w	r2, r2, #12
 800da1c:	2a04      	cmp	r2, #4
 800da1e:	f000 80ed 	beq.w	800dbfc <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800da22:	688a      	ldr	r2, [r1, #8]
 800da24:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800da28:	2a08      	cmp	r2, #8
 800da2a:	f000 80e3 	beq.w	800dbf4 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800da2e:	6863      	ldr	r3, [r4, #4]
 800da30:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800da34:	f000 80ec 	beq.w	800dc10 <HAL_RCC_OscConfig+0x210>
 800da38:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800da3c:	f000 8175 	beq.w	800dd2a <HAL_RCC_OscConfig+0x32a>
 800da40:	4d93      	ldr	r5, [pc, #588]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800da42:	682a      	ldr	r2, [r5, #0]
 800da44:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800da48:	602a      	str	r2, [r5, #0]
 800da4a:	682a      	ldr	r2, [r5, #0]
 800da4c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800da50:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800da52:	2b00      	cmp	r3, #0
 800da54:	f040 80e1 	bne.w	800dc1a <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800da58:	f7fd fdb8 	bl	800b5cc <HAL_GetTick>
 800da5c:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800da5e:	e005      	b.n	800da6c <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800da60:	f7fd fdb4 	bl	800b5cc <HAL_GetTick>
 800da64:	1b80      	subs	r0, r0, r6
 800da66:	2864      	cmp	r0, #100	; 0x64
 800da68:	f200 8101 	bhi.w	800dc6e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800da6c:	682b      	ldr	r3, [r5, #0]
 800da6e:	039b      	lsls	r3, r3, #14
 800da70:	d4f6      	bmi.n	800da60 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800da72:	6823      	ldr	r3, [r4, #0]
 800da74:	079f      	lsls	r7, r3, #30
 800da76:	d528      	bpl.n	800daca <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800da78:	4a85      	ldr	r2, [pc, #532]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800da7a:	6891      	ldr	r1, [r2, #8]
 800da7c:	f011 0f0c 	tst.w	r1, #12
 800da80:	f000 8090 	beq.w	800dba4 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800da84:	6891      	ldr	r1, [r2, #8]
 800da86:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800da8a:	2908      	cmp	r1, #8
 800da8c:	f000 8086 	beq.w	800db9c <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800da90:	68e3      	ldr	r3, [r4, #12]
 800da92:	2b00      	cmp	r3, #0
 800da94:	f000 810e 	beq.w	800dcb4 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800da98:	4b7e      	ldr	r3, [pc, #504]	; (800dc94 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800da9a:	4e7d      	ldr	r6, [pc, #500]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800da9c:	2201      	movs	r2, #1
 800da9e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800daa0:	f7fd fd94 	bl	800b5cc <HAL_GetTick>
 800daa4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800daa6:	e005      	b.n	800dab4 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800daa8:	f7fd fd90 	bl	800b5cc <HAL_GetTick>
 800daac:	1b40      	subs	r0, r0, r5
 800daae:	2802      	cmp	r0, #2
 800dab0:	f200 80dd 	bhi.w	800dc6e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dab4:	6833      	ldr	r3, [r6, #0]
 800dab6:	0798      	lsls	r0, r3, #30
 800dab8:	d5f6      	bpl.n	800daa8 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800daba:	6833      	ldr	r3, [r6, #0]
 800dabc:	6922      	ldr	r2, [r4, #16]
 800dabe:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800dac2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800dac6:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dac8:	6823      	ldr	r3, [r4, #0]
 800daca:	071a      	lsls	r2, r3, #28
 800dacc:	d451      	bmi.n	800db72 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800dace:	0758      	lsls	r0, r3, #29
 800dad0:	d52f      	bpl.n	800db32 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800dad2:	4a6f      	ldr	r2, [pc, #444]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800dad4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dad6:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800dada:	d07f      	beq.n	800dbdc <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800dadc:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dade:	4e6e      	ldr	r6, [pc, #440]	; (800dc98 <HAL_RCC_OscConfig+0x298>)
 800dae0:	6833      	ldr	r3, [r6, #0]
 800dae2:	05d9      	lsls	r1, r3, #23
 800dae4:	f140 80b3 	bpl.w	800dc4e <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dae8:	68a3      	ldr	r3, [r4, #8]
 800daea:	2b01      	cmp	r3, #1
 800daec:	f000 80c3 	beq.w	800dc76 <HAL_RCC_OscConfig+0x276>
 800daf0:	2b05      	cmp	r3, #5
 800daf2:	f000 812c 	beq.w	800dd4e <HAL_RCC_OscConfig+0x34e>
 800daf6:	4e66      	ldr	r6, [pc, #408]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800daf8:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800dafa:	f022 0201 	bic.w	r2, r2, #1
 800dafe:	6732      	str	r2, [r6, #112]	; 0x70
 800db00:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800db02:	f022 0204 	bic.w	r2, r2, #4
 800db06:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800db08:	2b00      	cmp	r3, #0
 800db0a:	f040 80b9 	bne.w	800dc80 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800db0e:	f7fd fd5d 	bl	800b5cc <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800db12:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800db16:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800db18:	e005      	b.n	800db26 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800db1a:	f7fd fd57 	bl	800b5cc <HAL_GetTick>
 800db1e:	1bc0      	subs	r0, r0, r7
 800db20:	4540      	cmp	r0, r8
 800db22:	f200 80a4 	bhi.w	800dc6e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800db26:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800db28:	0798      	lsls	r0, r3, #30
 800db2a:	d4f6      	bmi.n	800db1a <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800db2c:	2d00      	cmp	r5, #0
 800db2e:	f040 8106 	bne.w	800dd3e <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800db32:	69a0      	ldr	r0, [r4, #24]
 800db34:	b1c8      	cbz	r0, 800db6a <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800db36:	4d56      	ldr	r5, [pc, #344]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800db38:	68ab      	ldr	r3, [r5, #8]
 800db3a:	f003 030c 	and.w	r3, r3, #12
 800db3e:	2b08      	cmp	r3, #8
 800db40:	f000 80c9 	beq.w	800dcd6 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800db44:	4b53      	ldr	r3, [pc, #332]	; (800dc94 <HAL_RCC_OscConfig+0x294>)
 800db46:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800db48:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800db4a:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800db4c:	f000 8109 	beq.w	800dd62 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800db50:	f7fd fd3c 	bl	800b5cc <HAL_GetTick>
 800db54:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800db56:	e005      	b.n	800db64 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800db58:	f7fd fd38 	bl	800b5cc <HAL_GetTick>
 800db5c:	1b00      	subs	r0, r0, r4
 800db5e:	2802      	cmp	r0, #2
 800db60:	f200 8085 	bhi.w	800dc6e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800db64:	682b      	ldr	r3, [r5, #0]
 800db66:	019b      	lsls	r3, r3, #6
 800db68:	d4f6      	bmi.n	800db58 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800db6a:	2000      	movs	r0, #0
}
 800db6c:	b002      	add	sp, #8
 800db6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800db72:	6963      	ldr	r3, [r4, #20]
 800db74:	b30b      	cbz	r3, 800dbba <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800db76:	4b47      	ldr	r3, [pc, #284]	; (800dc94 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db78:	4e45      	ldr	r6, [pc, #276]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800db7a:	2201      	movs	r2, #1
 800db7c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800db80:	f7fd fd24 	bl	800b5cc <HAL_GetTick>
 800db84:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db86:	e004      	b.n	800db92 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800db88:	f7fd fd20 	bl	800b5cc <HAL_GetTick>
 800db8c:	1b40      	subs	r0, r0, r5
 800db8e:	2802      	cmp	r0, #2
 800db90:	d86d      	bhi.n	800dc6e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db92:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800db94:	079b      	lsls	r3, r3, #30
 800db96:	d5f7      	bpl.n	800db88 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800db98:	6823      	ldr	r3, [r4, #0]
 800db9a:	e798      	b.n	800dace <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800db9c:	6852      	ldr	r2, [r2, #4]
 800db9e:	0256      	lsls	r6, r2, #9
 800dba0:	f53f af76 	bmi.w	800da90 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800dba4:	4a3a      	ldr	r2, [pc, #232]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800dba6:	6812      	ldr	r2, [r2, #0]
 800dba8:	0795      	lsls	r5, r2, #30
 800dbaa:	d544      	bpl.n	800dc36 <HAL_RCC_OscConfig+0x236>
 800dbac:	68e2      	ldr	r2, [r4, #12]
 800dbae:	2a01      	cmp	r2, #1
 800dbb0:	d041      	beq.n	800dc36 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800dbb2:	2001      	movs	r0, #1
}
 800dbb4:	b002      	add	sp, #8
 800dbb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800dbba:	4a36      	ldr	r2, [pc, #216]	; (800dc94 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dbbc:	4e34      	ldr	r6, [pc, #208]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800dbbe:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800dbc2:	f7fd fd03 	bl	800b5cc <HAL_GetTick>
 800dbc6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dbc8:	e004      	b.n	800dbd4 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800dbca:	f7fd fcff 	bl	800b5cc <HAL_GetTick>
 800dbce:	1b40      	subs	r0, r0, r5
 800dbd0:	2802      	cmp	r0, #2
 800dbd2:	d84c      	bhi.n	800dc6e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dbd4:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800dbd6:	079f      	lsls	r7, r3, #30
 800dbd8:	d4f7      	bmi.n	800dbca <HAL_RCC_OscConfig+0x1ca>
 800dbda:	e7dd      	b.n	800db98 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800dbdc:	9301      	str	r3, [sp, #4]
 800dbde:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dbe0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800dbe4:	6413      	str	r3, [r2, #64]	; 0x40
 800dbe6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dbe8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800dbec:	9301      	str	r3, [sp, #4]
 800dbee:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800dbf0:	2501      	movs	r5, #1
 800dbf2:	e774      	b.n	800dade <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800dbf4:	684a      	ldr	r2, [r1, #4]
 800dbf6:	0250      	lsls	r0, r2, #9
 800dbf8:	f57f af19 	bpl.w	800da2e <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800dbfc:	4a24      	ldr	r2, [pc, #144]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800dbfe:	6812      	ldr	r2, [r2, #0]
 800dc00:	0391      	lsls	r1, r2, #14
 800dc02:	f57f af37 	bpl.w	800da74 <HAL_RCC_OscConfig+0x74>
 800dc06:	6862      	ldr	r2, [r4, #4]
 800dc08:	2a00      	cmp	r2, #0
 800dc0a:	f47f af33 	bne.w	800da74 <HAL_RCC_OscConfig+0x74>
 800dc0e:	e7d0      	b.n	800dbb2 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dc10:	4a1f      	ldr	r2, [pc, #124]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800dc12:	6813      	ldr	r3, [r2, #0]
 800dc14:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800dc18:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dc1a:	f7fd fcd7 	bl	800b5cc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dc1e:	4e1c      	ldr	r6, [pc, #112]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800dc20:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dc22:	e004      	b.n	800dc2e <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dc24:	f7fd fcd2 	bl	800b5cc <HAL_GetTick>
 800dc28:	1b40      	subs	r0, r0, r5
 800dc2a:	2864      	cmp	r0, #100	; 0x64
 800dc2c:	d81f      	bhi.n	800dc6e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dc2e:	6833      	ldr	r3, [r6, #0]
 800dc30:	039a      	lsls	r2, r3, #14
 800dc32:	d5f7      	bpl.n	800dc24 <HAL_RCC_OscConfig+0x224>
 800dc34:	e71d      	b.n	800da72 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dc36:	4916      	ldr	r1, [pc, #88]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800dc38:	6920      	ldr	r0, [r4, #16]
 800dc3a:	680a      	ldr	r2, [r1, #0]
 800dc3c:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800dc40:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800dc44:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dc46:	071a      	lsls	r2, r3, #28
 800dc48:	f57f af41 	bpl.w	800dace <HAL_RCC_OscConfig+0xce>
 800dc4c:	e791      	b.n	800db72 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800dc4e:	6833      	ldr	r3, [r6, #0]
 800dc50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dc54:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800dc56:	f7fd fcb9 	bl	800b5cc <HAL_GetTick>
 800dc5a:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dc5c:	6833      	ldr	r3, [r6, #0]
 800dc5e:	05da      	lsls	r2, r3, #23
 800dc60:	f53f af42 	bmi.w	800dae8 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800dc64:	f7fd fcb2 	bl	800b5cc <HAL_GetTick>
 800dc68:	1bc0      	subs	r0, r0, r7
 800dc6a:	2802      	cmp	r0, #2
 800dc6c:	d9f6      	bls.n	800dc5c <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800dc6e:	2003      	movs	r0, #3
}
 800dc70:	b002      	add	sp, #8
 800dc72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dc76:	4a06      	ldr	r2, [pc, #24]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
 800dc78:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800dc7a:	f043 0301 	orr.w	r3, r3, #1
 800dc7e:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800dc80:	f7fd fca4 	bl	800b5cc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc84:	4f02      	ldr	r7, [pc, #8]	; (800dc90 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800dc86:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc88:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc8c:	e00b      	b.n	800dca6 <HAL_RCC_OscConfig+0x2a6>
 800dc8e:	bf00      	nop
 800dc90:	40023800 	.word	0x40023800
 800dc94:	42470000 	.word	0x42470000
 800dc98:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc9c:	f7fd fc96 	bl	800b5cc <HAL_GetTick>
 800dca0:	1b80      	subs	r0, r0, r6
 800dca2:	4540      	cmp	r0, r8
 800dca4:	d8e3      	bhi.n	800dc6e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dca6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800dca8:	079b      	lsls	r3, r3, #30
 800dcaa:	d5f7      	bpl.n	800dc9c <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800dcac:	2d00      	cmp	r5, #0
 800dcae:	f43f af40 	beq.w	800db32 <HAL_RCC_OscConfig+0x132>
 800dcb2:	e044      	b.n	800dd3e <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800dcb4:	4a42      	ldr	r2, [pc, #264]	; (800ddc0 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dcb6:	4e43      	ldr	r6, [pc, #268]	; (800ddc4 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800dcb8:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dcba:	f7fd fc87 	bl	800b5cc <HAL_GetTick>
 800dcbe:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dcc0:	e004      	b.n	800dccc <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800dcc2:	f7fd fc83 	bl	800b5cc <HAL_GetTick>
 800dcc6:	1b40      	subs	r0, r0, r5
 800dcc8:	2802      	cmp	r0, #2
 800dcca:	d8d0      	bhi.n	800dc6e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dccc:	6833      	ldr	r3, [r6, #0]
 800dcce:	0799      	lsls	r1, r3, #30
 800dcd0:	d4f7      	bmi.n	800dcc2 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dcd2:	6823      	ldr	r3, [r4, #0]
 800dcd4:	e6f9      	b.n	800daca <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800dcd6:	2801      	cmp	r0, #1
 800dcd8:	f43f af48 	beq.w	800db6c <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800dcdc:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dcde:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dce0:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dce4:	4291      	cmp	r1, r2
 800dce6:	f47f af64 	bne.w	800dbb2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dcea:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dcec:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dcf0:	4291      	cmp	r1, r2
 800dcf2:	f47f af5e 	bne.w	800dbb2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dcf6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dcf8:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800dcfc:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dcfe:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800dd02:	f47f af56 	bne.w	800dbb2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dd06:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dd08:	0852      	lsrs	r2, r2, #1
 800dd0a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800dd0e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dd10:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800dd14:	f47f af4d 	bne.w	800dbb2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800dd18:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dd1a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dd1e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800dd22:	bf14      	ite	ne
 800dd24:	2001      	movne	r0, #1
 800dd26:	2000      	moveq	r0, #0
 800dd28:	e720      	b.n	800db6c <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dd2a:	4b26      	ldr	r3, [pc, #152]	; (800ddc4 <HAL_RCC_OscConfig+0x3c4>)
 800dd2c:	681a      	ldr	r2, [r3, #0]
 800dd2e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800dd32:	601a      	str	r2, [r3, #0]
 800dd34:	681a      	ldr	r2, [r3, #0]
 800dd36:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800dd3a:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800dd3c:	e76d      	b.n	800dc1a <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800dd3e:	4a21      	ldr	r2, [pc, #132]	; (800ddc4 <HAL_RCC_OscConfig+0x3c4>)
 800dd40:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dd42:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800dd46:	6413      	str	r3, [r2, #64]	; 0x40
 800dd48:	e6f3      	b.n	800db32 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800dd4a:	2001      	movs	r0, #1
}
 800dd4c:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dd4e:	4b1d      	ldr	r3, [pc, #116]	; (800ddc4 <HAL_RCC_OscConfig+0x3c4>)
 800dd50:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dd52:	f042 0204 	orr.w	r2, r2, #4
 800dd56:	671a      	str	r2, [r3, #112]	; 0x70
 800dd58:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dd5a:	f042 0201 	orr.w	r2, r2, #1
 800dd5e:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dd60:	e78e      	b.n	800dc80 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800dd62:	f7fd fc33 	bl	800b5cc <HAL_GetTick>
 800dd66:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dd68:	e005      	b.n	800dd76 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dd6a:	f7fd fc2f 	bl	800b5cc <HAL_GetTick>
 800dd6e:	1b80      	subs	r0, r0, r6
 800dd70:	2802      	cmp	r0, #2
 800dd72:	f63f af7c 	bhi.w	800dc6e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dd76:	682b      	ldr	r3, [r5, #0]
 800dd78:	0199      	lsls	r1, r3, #6
 800dd7a:	d4f6      	bmi.n	800dd6a <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd7c:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800dd80:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800dd82:	430b      	orrs	r3, r1
 800dd84:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800dd88:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800dd8c:	0852      	lsrs	r2, r2, #1
 800dd8e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800dd92:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800dd94:	490a      	ldr	r1, [pc, #40]	; (800ddc0 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd96:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800dd9a:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd9c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800dd9e:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800dda0:	f7fd fc14 	bl	800b5cc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dda4:	4d07      	ldr	r5, [pc, #28]	; (800ddc4 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800dda6:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dda8:	e005      	b.n	800ddb6 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800ddaa:	f7fd fc0f 	bl	800b5cc <HAL_GetTick>
 800ddae:	1b00      	subs	r0, r0, r4
 800ddb0:	2802      	cmp	r0, #2
 800ddb2:	f63f af5c 	bhi.w	800dc6e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800ddb6:	682b      	ldr	r3, [r5, #0]
 800ddb8:	019a      	lsls	r2, r3, #6
 800ddba:	d5f6      	bpl.n	800ddaa <HAL_RCC_OscConfig+0x3aa>
 800ddbc:	e6d5      	b.n	800db6a <HAL_RCC_OscConfig+0x16a>
 800ddbe:	bf00      	nop
 800ddc0:	42470000 	.word	0x42470000
 800ddc4:	40023800 	.word	0x40023800

0800ddc8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ddc8:	4916      	ldr	r1, [pc, #88]	; (800de24 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800ddca:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ddcc:	688b      	ldr	r3, [r1, #8]
 800ddce:	f003 030c 	and.w	r3, r3, #12
 800ddd2:	2b04      	cmp	r3, #4
 800ddd4:	d01b      	beq.n	800de0e <HAL_RCC_GetSysClockFreq+0x46>
 800ddd6:	2b08      	cmp	r3, #8
 800ddd8:	d117      	bne.n	800de0a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800ddda:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800dddc:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ddde:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800dde0:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800dde4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800dde8:	d113      	bne.n	800de12 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ddea:	480f      	ldr	r0, [pc, #60]	; (800de28 <HAL_RCC_GetSysClockFreq+0x60>)
 800ddec:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800ddf0:	fba1 0100 	umull	r0, r1, r1, r0
 800ddf4:	f7f2 fde2 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800ddf8:	4b0a      	ldr	r3, [pc, #40]	; (800de24 <HAL_RCC_GetSysClockFreq+0x5c>)
 800ddfa:	685b      	ldr	r3, [r3, #4]
 800ddfc:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800de00:	3301      	adds	r3, #1
 800de02:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800de04:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800de08:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800de0a:	4807      	ldr	r0, [pc, #28]	; (800de28 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800de0c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800de0e:	4807      	ldr	r0, [pc, #28]	; (800de2c <HAL_RCC_GetSysClockFreq+0x64>)
}
 800de10:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800de12:	4806      	ldr	r0, [pc, #24]	; (800de2c <HAL_RCC_GetSysClockFreq+0x64>)
 800de14:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800de18:	2300      	movs	r3, #0
 800de1a:	fba1 0100 	umull	r0, r1, r1, r0
 800de1e:	f7f2 fdcd 	bl	80009bc <__aeabi_uldivmod>
 800de22:	e7e9      	b.n	800ddf8 <HAL_RCC_GetSysClockFreq+0x30>
 800de24:	40023800 	.word	0x40023800
 800de28:	00f42400 	.word	0x00f42400
 800de2c:	007a1200 	.word	0x007a1200

0800de30 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800de30:	2800      	cmp	r0, #0
 800de32:	f000 8087 	beq.w	800df44 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800de36:	4a48      	ldr	r2, [pc, #288]	; (800df58 <HAL_RCC_ClockConfig+0x128>)
 800de38:	6813      	ldr	r3, [r2, #0]
 800de3a:	f003 030f 	and.w	r3, r3, #15
 800de3e:	428b      	cmp	r3, r1
{
 800de40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de44:	460d      	mov	r5, r1
 800de46:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800de48:	d209      	bcs.n	800de5e <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800de4a:	b2cb      	uxtb	r3, r1
 800de4c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800de4e:	6813      	ldr	r3, [r2, #0]
 800de50:	f003 030f 	and.w	r3, r3, #15
 800de54:	428b      	cmp	r3, r1
 800de56:	d002      	beq.n	800de5e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800de58:	2001      	movs	r0, #1
}
 800de5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800de5e:	6823      	ldr	r3, [r4, #0]
 800de60:	0798      	lsls	r0, r3, #30
 800de62:	d514      	bpl.n	800de8e <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800de64:	0759      	lsls	r1, r3, #29
 800de66:	d504      	bpl.n	800de72 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800de68:	493c      	ldr	r1, [pc, #240]	; (800df5c <HAL_RCC_ClockConfig+0x12c>)
 800de6a:	688a      	ldr	r2, [r1, #8]
 800de6c:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800de70:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800de72:	071a      	lsls	r2, r3, #28
 800de74:	d504      	bpl.n	800de80 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800de76:	4939      	ldr	r1, [pc, #228]	; (800df5c <HAL_RCC_ClockConfig+0x12c>)
 800de78:	688a      	ldr	r2, [r1, #8]
 800de7a:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800de7e:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800de80:	4936      	ldr	r1, [pc, #216]	; (800df5c <HAL_RCC_ClockConfig+0x12c>)
 800de82:	68a0      	ldr	r0, [r4, #8]
 800de84:	688a      	ldr	r2, [r1, #8]
 800de86:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800de8a:	4302      	orrs	r2, r0
 800de8c:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800de8e:	07df      	lsls	r7, r3, #31
 800de90:	d521      	bpl.n	800ded6 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800de92:	6862      	ldr	r2, [r4, #4]
 800de94:	2a01      	cmp	r2, #1
 800de96:	d057      	beq.n	800df48 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800de98:	1e93      	subs	r3, r2, #2
 800de9a:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800de9c:	4b2f      	ldr	r3, [pc, #188]	; (800df5c <HAL_RCC_ClockConfig+0x12c>)
 800de9e:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800dea0:	d94d      	bls.n	800df3e <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dea2:	0799      	lsls	r1, r3, #30
 800dea4:	d5d8      	bpl.n	800de58 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800dea6:	4e2d      	ldr	r6, [pc, #180]	; (800df5c <HAL_RCC_ClockConfig+0x12c>)
 800dea8:	68b3      	ldr	r3, [r6, #8]
 800deaa:	f023 0303 	bic.w	r3, r3, #3
 800deae:	4313      	orrs	r3, r2
 800deb0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800deb2:	f7fd fb8b 	bl	800b5cc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800deb6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800deba:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800debc:	e004      	b.n	800dec8 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800debe:	f7fd fb85 	bl	800b5cc <HAL_GetTick>
 800dec2:	1bc0      	subs	r0, r0, r7
 800dec4:	4540      	cmp	r0, r8
 800dec6:	d844      	bhi.n	800df52 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800dec8:	68b3      	ldr	r3, [r6, #8]
 800deca:	6862      	ldr	r2, [r4, #4]
 800decc:	f003 030c 	and.w	r3, r3, #12
 800ded0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800ded4:	d1f3      	bne.n	800debe <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800ded6:	4a20      	ldr	r2, [pc, #128]	; (800df58 <HAL_RCC_ClockConfig+0x128>)
 800ded8:	6813      	ldr	r3, [r2, #0]
 800deda:	f003 030f 	and.w	r3, r3, #15
 800dede:	42ab      	cmp	r3, r5
 800dee0:	d906      	bls.n	800def0 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800dee2:	b2eb      	uxtb	r3, r5
 800dee4:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800dee6:	6813      	ldr	r3, [r2, #0]
 800dee8:	f003 030f 	and.w	r3, r3, #15
 800deec:	42ab      	cmp	r3, r5
 800deee:	d1b3      	bne.n	800de58 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800def0:	6823      	ldr	r3, [r4, #0]
 800def2:	075a      	lsls	r2, r3, #29
 800def4:	d506      	bpl.n	800df04 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800def6:	4919      	ldr	r1, [pc, #100]	; (800df5c <HAL_RCC_ClockConfig+0x12c>)
 800def8:	68e0      	ldr	r0, [r4, #12]
 800defa:	688a      	ldr	r2, [r1, #8]
 800defc:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800df00:	4302      	orrs	r2, r0
 800df02:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800df04:	071b      	lsls	r3, r3, #28
 800df06:	d507      	bpl.n	800df18 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800df08:	4a14      	ldr	r2, [pc, #80]	; (800df5c <HAL_RCC_ClockConfig+0x12c>)
 800df0a:	6921      	ldr	r1, [r4, #16]
 800df0c:	6893      	ldr	r3, [r2, #8]
 800df0e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800df12:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800df16:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800df18:	f7ff ff56 	bl	800ddc8 <HAL_RCC_GetSysClockFreq>
 800df1c:	4a0f      	ldr	r2, [pc, #60]	; (800df5c <HAL_RCC_ClockConfig+0x12c>)
 800df1e:	4c10      	ldr	r4, [pc, #64]	; (800df60 <HAL_RCC_ClockConfig+0x130>)
 800df20:	6892      	ldr	r2, [r2, #8]
 800df22:	4910      	ldr	r1, [pc, #64]	; (800df64 <HAL_RCC_ClockConfig+0x134>)
 800df24:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800df28:	4603      	mov	r3, r0
 800df2a:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800df2c:	480e      	ldr	r0, [pc, #56]	; (800df68 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800df2e:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800df30:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800df32:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800df34:	f7f4 fc28 	bl	8002788 <HAL_InitTick>
  return HAL_OK;
 800df38:	2000      	movs	r0, #0
}
 800df3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800df3e:	0198      	lsls	r0, r3, #6
 800df40:	d4b1      	bmi.n	800dea6 <HAL_RCC_ClockConfig+0x76>
 800df42:	e789      	b.n	800de58 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800df44:	2001      	movs	r0, #1
}
 800df46:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800df48:	4b04      	ldr	r3, [pc, #16]	; (800df5c <HAL_RCC_ClockConfig+0x12c>)
 800df4a:	681b      	ldr	r3, [r3, #0]
 800df4c:	039e      	lsls	r6, r3, #14
 800df4e:	d4aa      	bmi.n	800dea6 <HAL_RCC_ClockConfig+0x76>
 800df50:	e782      	b.n	800de58 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800df52:	2003      	movs	r0, #3
 800df54:	e781      	b.n	800de5a <HAL_RCC_ClockConfig+0x2a>
 800df56:	bf00      	nop
 800df58:	40023c00 	.word	0x40023c00
 800df5c:	40023800 	.word	0x40023800
 800df60:	0803142c 	.word	0x0803142c
 800df64:	2000007c 	.word	0x2000007c
 800df68:	20000084 	.word	0x20000084

0800df6c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800df6c:	4b04      	ldr	r3, [pc, #16]	; (800df80 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800df6e:	4905      	ldr	r1, [pc, #20]	; (800df84 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800df70:	689b      	ldr	r3, [r3, #8]
 800df72:	4a05      	ldr	r2, [pc, #20]	; (800df88 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800df74:	6808      	ldr	r0, [r1, #0]
 800df76:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800df7a:	5cd3      	ldrb	r3, [r2, r3]
}
 800df7c:	40d8      	lsrs	r0, r3
 800df7e:	4770      	bx	lr
 800df80:	40023800 	.word	0x40023800
 800df84:	2000007c 	.word	0x2000007c
 800df88:	0803143c 	.word	0x0803143c

0800df8c <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800df8c:	4b0e      	ldr	r3, [pc, #56]	; (800dfc8 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800df8e:	220f      	movs	r2, #15
 800df90:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800df92:	689a      	ldr	r2, [r3, #8]
 800df94:	f002 0203 	and.w	r2, r2, #3
 800df98:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800df9a:	689a      	ldr	r2, [r3, #8]
 800df9c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800dfa0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800dfa2:	689a      	ldr	r2, [r3, #8]
 800dfa4:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800dfa8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800dfaa:	689b      	ldr	r3, [r3, #8]
 800dfac:	08db      	lsrs	r3, r3, #3
{
 800dfae:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800dfb0:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800dfb4:	4c05      	ldr	r4, [pc, #20]	; (800dfcc <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800dfb6:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800dfb8:	6823      	ldr	r3, [r4, #0]
}
 800dfba:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800dfbe:	f003 030f 	and.w	r3, r3, #15
 800dfc2:	600b      	str	r3, [r1, #0]
}
 800dfc4:	4770      	bx	lr
 800dfc6:	bf00      	nop
 800dfc8:	40023800 	.word	0x40023800
 800dfcc:	40023c00 	.word	0x40023c00

0800dfd0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800dfd0:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800dfd2:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800dfd4:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800dfd8:	b083      	sub	sp, #12
 800dfda:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800dfdc:	d111      	bne.n	800e002 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800dfde:	f013 0f0c 	tst.w	r3, #12
 800dfe2:	d16f      	bne.n	800e0c4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800dfe4:	0698      	lsls	r0, r3, #26
 800dfe6:	f100 80c2 	bmi.w	800e16e <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800dfea:	f013 0310 	ands.w	r3, r3, #16
 800dfee:	f000 80bb 	beq.w	800e168 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800dff2:	4b89      	ldr	r3, [pc, #548]	; (800e218 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800dff4:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800dff8:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800dffc:	2000      	movs	r0, #0
}
 800dffe:	b003      	add	sp, #12
 800e000:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800e002:	4b86      	ldr	r3, [pc, #536]	; (800e21c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e004:	4e86      	ldr	r6, [pc, #536]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800e006:	2200      	movs	r2, #0
 800e008:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e00a:	f7fd fadf 	bl	800b5cc <HAL_GetTick>
 800e00e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e010:	e004      	b.n	800e01c <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e012:	f7fd fadb 	bl	800b5cc <HAL_GetTick>
 800e016:	1b43      	subs	r3, r0, r5
 800e018:	2b02      	cmp	r3, #2
 800e01a:	d850      	bhi.n	800e0be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e01c:	6833      	ldr	r3, [r6, #0]
 800e01e:	0118      	lsls	r0, r3, #4
 800e020:	d4f7      	bmi.n	800e012 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800e022:	6823      	ldr	r3, [r4, #0]
 800e024:	07d9      	lsls	r1, r3, #31
 800e026:	d506      	bpl.n	800e036 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800e028:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e02c:	0712      	lsls	r2, r2, #28
 800e02e:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800e032:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800e036:	079a      	lsls	r2, r3, #30
 800e038:	d515      	bpl.n	800e066 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e03a:	4979      	ldr	r1, [pc, #484]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e03c:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e03e:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e042:	6865      	ldr	r5, [r4, #4]
 800e044:	0612      	lsls	r2, r2, #24
 800e046:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800e04a:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800e04e:	4302      	orrs	r2, r0
 800e050:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800e054:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800e058:	69e2      	ldr	r2, [r4, #28]
 800e05a:	f020 001f 	bic.w	r0, r0, #31
 800e05e:	3a01      	subs	r2, #1
 800e060:	4302      	orrs	r2, r0
 800e062:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800e066:	065b      	lsls	r3, r3, #25
 800e068:	d509      	bpl.n	800e07e <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800e06a:	1d20      	adds	r0, r4, #4
 800e06c:	c80b      	ldmia	r0, {r0, r1, r3}
 800e06e:	061b      	lsls	r3, r3, #24
 800e070:	4a6b      	ldr	r2, [pc, #428]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e072:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e076:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800e07a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800e07e:	4b67      	ldr	r3, [pc, #412]	; (800e21c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e080:	4e67      	ldr	r6, [pc, #412]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800e082:	2201      	movs	r2, #1
 800e084:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e086:	f7fd faa1 	bl	800b5cc <HAL_GetTick>
 800e08a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e08c:	e004      	b.n	800e098 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e08e:	f7fd fa9d 	bl	800b5cc <HAL_GetTick>
 800e092:	1b40      	subs	r0, r0, r5
 800e094:	2802      	cmp	r0, #2
 800e096:	d812      	bhi.n	800e0be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e098:	6833      	ldr	r3, [r6, #0]
 800e09a:	011f      	lsls	r7, r3, #4
 800e09c:	d5f7      	bpl.n	800e08e <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800e09e:	6823      	ldr	r3, [r4, #0]
 800e0a0:	e79d      	b.n	800dfde <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800e0a2:	f7fd fa93 	bl	800b5cc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e0a6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800e0aa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800e0ac:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e0ae:	079b      	lsls	r3, r3, #30
 800e0b0:	f100 80a5 	bmi.w	800e1fe <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e0b4:	f7fd fa8a 	bl	800b5cc <HAL_GetTick>
 800e0b8:	1b80      	subs	r0, r0, r6
 800e0ba:	42b8      	cmp	r0, r7
 800e0bc:	d9f6      	bls.n	800e0ac <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800e0be:	2003      	movs	r0, #3
}
 800e0c0:	b003      	add	sp, #12
 800e0c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800e0c4:	4b55      	ldr	r3, [pc, #340]	; (800e21c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0c6:	4e56      	ldr	r6, [pc, #344]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800e0c8:	2200      	movs	r2, #0
 800e0ca:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e0cc:	f7fd fa7e 	bl	800b5cc <HAL_GetTick>
 800e0d0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0d2:	e004      	b.n	800e0de <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e0d4:	f7fd fa7a 	bl	800b5cc <HAL_GetTick>
 800e0d8:	1b43      	subs	r3, r0, r5
 800e0da:	2b02      	cmp	r3, #2
 800e0dc:	d8ef      	bhi.n	800e0be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0de:	6833      	ldr	r3, [r6, #0]
 800e0e0:	0098      	lsls	r0, r3, #2
 800e0e2:	d4f7      	bmi.n	800e0d4 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800e0e4:	6822      	ldr	r2, [r4, #0]
 800e0e6:	0751      	lsls	r1, r2, #29
 800e0e8:	d515      	bpl.n	800e116 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e0ea:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800e0ec:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e0f0:	6920      	ldr	r0, [r4, #16]
 800e0f2:	061b      	lsls	r3, r3, #24
 800e0f4:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800e0f8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e0fc:	430b      	orrs	r3, r1
 800e0fe:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800e102:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800e106:	6a21      	ldr	r1, [r4, #32]
 800e108:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800e10c:	3901      	subs	r1, #1
 800e10e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800e112:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800e116:	0713      	lsls	r3, r2, #28
 800e118:	d514      	bpl.n	800e144 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e11a:	4a41      	ldr	r2, [pc, #260]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e11c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e11e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e122:	6920      	ldr	r0, [r4, #16]
 800e124:	071b      	lsls	r3, r3, #28
 800e126:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800e12a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e12e:	430b      	orrs	r3, r1
 800e130:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800e134:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800e138:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e13a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800e13e:	430b      	orrs	r3, r1
 800e140:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800e144:	4b35      	ldr	r3, [pc, #212]	; (800e21c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e146:	4e36      	ldr	r6, [pc, #216]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800e148:	2201      	movs	r2, #1
 800e14a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e14c:	f7fd fa3e 	bl	800b5cc <HAL_GetTick>
 800e150:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e152:	e004      	b.n	800e15e <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e154:	f7fd fa3a 	bl	800b5cc <HAL_GetTick>
 800e158:	1b40      	subs	r0, r0, r5
 800e15a:	2802      	cmp	r0, #2
 800e15c:	d8af      	bhi.n	800e0be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e15e:	6833      	ldr	r3, [r6, #0]
 800e160:	009f      	lsls	r7, r3, #2
 800e162:	d5f7      	bpl.n	800e154 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800e164:	6823      	ldr	r3, [r4, #0]
 800e166:	e73d      	b.n	800dfe4 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800e168:	4618      	mov	r0, r3
}
 800e16a:	b003      	add	sp, #12
 800e16c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800e16e:	4b2c      	ldr	r3, [pc, #176]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800e170:	4d2c      	ldr	r5, [pc, #176]	; (800e224 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800e172:	2200      	movs	r2, #0
 800e174:	9201      	str	r2, [sp, #4]
 800e176:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800e178:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800e17c:	641a      	str	r2, [r3, #64]	; 0x40
 800e17e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e180:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e184:	9301      	str	r3, [sp, #4]
 800e186:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800e188:	682b      	ldr	r3, [r5, #0]
 800e18a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e18e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800e190:	f7fd fa1c 	bl	800b5cc <HAL_GetTick>
 800e194:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e196:	e004      	b.n	800e1a2 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800e198:	f7fd fa18 	bl	800b5cc <HAL_GetTick>
 800e19c:	1b83      	subs	r3, r0, r6
 800e19e:	2b02      	cmp	r3, #2
 800e1a0:	d88d      	bhi.n	800e0be <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e1a2:	682b      	ldr	r3, [r5, #0]
 800e1a4:	05d9      	lsls	r1, r3, #23
 800e1a6:	d5f7      	bpl.n	800e198 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e1a8:	4d1d      	ldr	r5, [pc, #116]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e1aa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e1ac:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e1ae:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800e1b2:	d111      	bne.n	800e1d8 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e1b4:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800e1b8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800e1bc:	d021      	beq.n	800e202 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800e1be:	4918      	ldr	r1, [pc, #96]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1c0:	688a      	ldr	r2, [r1, #8]
 800e1c2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e1c6:	608a      	str	r2, [r1, #8]
 800e1c8:	4a15      	ldr	r2, [pc, #84]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1ca:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800e1cc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e1d0:	430b      	orrs	r3, r1
 800e1d2:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e1d4:	6823      	ldr	r3, [r4, #0]
 800e1d6:	e708      	b.n	800dfea <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e1d8:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800e1dc:	4291      	cmp	r1, r2
 800e1de:	d0eb      	beq.n	800e1b8 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e1e0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800e1e2:	4a0e      	ldr	r2, [pc, #56]	; (800e21c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800e1e4:	2101      	movs	r1, #1
 800e1e6:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e1ea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800e1ee:	2100      	movs	r1, #0
 800e1f0:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800e1f4:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800e1f6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e1f8:	07da      	lsls	r2, r3, #31
 800e1fa:	f53f af52 	bmi.w	800e0a2 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e1fe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e200:	e7d8      	b.n	800e1b4 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800e202:	4807      	ldr	r0, [pc, #28]	; (800e220 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e204:	6882      	ldr	r2, [r0, #8]
 800e206:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800e20a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800e20e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e212:	430a      	orrs	r2, r1
 800e214:	6082      	str	r2, [r0, #8]
 800e216:	e7d7      	b.n	800e1c8 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800e218:	42471000 	.word	0x42471000
 800e21c:	42470000 	.word	0x42470000
 800e220:	40023800 	.word	0x40023800
 800e224:	40007000 	.word	0x40007000

0800e228 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800e228:	b1f0      	cbz	r0, 800e268 <HAL_SDRAM_Init+0x40>
{
 800e22a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800e22c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e230:	460d      	mov	r5, r1
 800e232:	4604      	mov	r4, r0
 800e234:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e238:	b18b      	cbz	r3, 800e25e <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e23a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e23c:	2302      	movs	r3, #2
 800e23e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e242:	f851 0b04 	ldr.w	r0, [r1], #4
 800e246:	f001 fa2d 	bl	800f6a4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800e24a:	e9d4 0200 	ldrd	r0, r2, [r4]
 800e24e:	4629      	mov	r1, r5
 800e250:	f001 fa66 	bl	800f720 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800e254:	2301      	movs	r3, #1
 800e256:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800e25a:	2000      	movs	r0, #0
}
 800e25c:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800e25e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800e262:	f7f4 fa29 	bl	80026b8 <HAL_SDRAM_MspInit>
 800e266:	e7e8      	b.n	800e23a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800e268:	2001      	movs	r0, #1
}
 800e26a:	4770      	bx	lr

0800e26c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800e26c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e26e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800e272:	2b02      	cmp	r3, #2
{
 800e274:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e276:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800e278:	d004      	beq.n	800e284 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800e27a:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800e27e:	2c01      	cmp	r4, #1
 800e280:	d001      	beq.n	800e286 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800e282:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e284:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e286:	460e      	mov	r6, r1
 800e288:	2302      	movs	r3, #2
 800e28a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800e28e:	6828      	ldr	r0, [r5, #0]
 800e290:	f001 fa92 	bl	800f7b8 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800e294:	6833      	ldr	r3, [r6, #0]
 800e296:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800e298:	bf06      	itte	eq
 800e29a:	2305      	moveq	r3, #5
 800e29c:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800e2a0:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800e2a4:	2000      	movs	r0, #0
}
 800e2a6:	bd70      	pop	{r4, r5, r6, pc}

0800e2a8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800e2a8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e2aa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e2ae:	2b02      	cmp	r3, #2
{
 800e2b0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e2b2:	b2d8      	uxtb	r0, r3
 800e2b4:	d005      	beq.n	800e2c2 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800e2b6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e2ba:	2b01      	cmp	r3, #1
 800e2bc:	b2dd      	uxtb	r5, r3
 800e2be:	d001      	beq.n	800e2c4 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800e2c0:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e2c2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e2c4:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e2c6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e2c8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e2cc:	f001 fa9e 	bl	800f80c <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800e2d0:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800e2d4:	2000      	movs	r0, #0
}
 800e2d6:	bd38      	pop	{r3, r4, r5, pc}

0800e2d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800e2d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2dc:	b082      	sub	sp, #8
 800e2de:	461d      	mov	r5, r3
 800e2e0:	4616      	mov	r6, r2
 800e2e2:	460c      	mov	r4, r1
 800e2e4:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800e2e6:	f7fd f971 	bl	800b5cc <HAL_GetTick>
 800e2ea:	4435      	add	r5, r6
 800e2ec:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800e2ee:	f7fd f96d 	bl	800b5cc <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e2f2:	4b27      	ldr	r3, [pc, #156]	; (800e390 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800e2f4:	681b      	ldr	r3, [r3, #0]
 800e2f6:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800e2fa:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800e2fe:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e300:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e302:	1c73      	adds	r3, r6, #1
 800e304:	6839      	ldr	r1, [r7, #0]
 800e306:	d107      	bne.n	800e318 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800e308:	688b      	ldr	r3, [r1, #8]
 800e30a:	ea34 0303 	bics.w	r3, r4, r3
 800e30e:	d0fb      	beq.n	800e308 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800e310:	2000      	movs	r0, #0
}
 800e312:	b002      	add	sp, #8
 800e314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e318:	688b      	ldr	r3, [r1, #8]
 800e31a:	ea34 0303 	bics.w	r3, r4, r3
 800e31e:	d1f7      	bne.n	800e310 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800e320:	f7fd f954 	bl	800b5cc <HAL_GetTick>
 800e324:	eba0 0008 	sub.w	r0, r0, r8
 800e328:	42a8      	cmp	r0, r5
 800e32a:	d208      	bcs.n	800e33e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800e32c:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800e32e:	2b00      	cmp	r3, #0
      count--;
 800e330:	9b01      	ldr	r3, [sp, #4]
 800e332:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800e336:	bf08      	it	eq
 800e338:	2500      	moveq	r5, #0
      count--;
 800e33a:	9301      	str	r3, [sp, #4]
 800e33c:	e7e1      	b.n	800e302 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e33e:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e342:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e344:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e348:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800e34c:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e34e:	d013      	beq.n	800e378 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800e350:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800e352:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800e356:	d107      	bne.n	800e368 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800e358:	681a      	ldr	r2, [r3, #0]
 800e35a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800e35e:	601a      	str	r2, [r3, #0]
 800e360:	681a      	ldr	r2, [r3, #0]
 800e362:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800e366:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800e368:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800e36a:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800e36c:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800e370:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800e374:	2003      	movs	r0, #3
 800e376:	e7cc      	b.n	800e312 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e378:	68ba      	ldr	r2, [r7, #8]
 800e37a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e37e:	d002      	beq.n	800e386 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e380:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e384:	d1e4      	bne.n	800e350 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800e386:	681a      	ldr	r2, [r3, #0]
 800e388:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e38c:	601a      	str	r2, [r3, #0]
 800e38e:	e7df      	b.n	800e350 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800e390:	2000007c 	.word	0x2000007c

0800e394 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800e394:	b538      	push	{r3, r4, r5, lr}
 800e396:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e398:	6842      	ldr	r2, [r0, #4]
 800e39a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800e39e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e3a0:	d006      	beq.n	800e3b0 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e3a2:	460a      	mov	r2, r1
 800e3a4:	2101      	movs	r1, #1
 800e3a6:	f7ff ff97 	bl	800e2d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3aa:	b978      	cbnz	r0, 800e3cc <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800e3ac:	2000      	movs	r0, #0
}
 800e3ae:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e3b0:	6882      	ldr	r2, [r0, #8]
 800e3b2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e3b6:	d01c      	beq.n	800e3f2 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e3b8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e3bc:	d00c      	beq.n	800e3d8 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e3be:	460a      	mov	r2, r1
 800e3c0:	4620      	mov	r0, r4
 800e3c2:	2180      	movs	r1, #128	; 0x80
 800e3c4:	f7ff ff88 	bl	800e2d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3c8:	2800      	cmp	r0, #0
 800e3ca:	d0ef      	beq.n	800e3ac <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e3cc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e3ce:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800e3d2:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e3d4:	6563      	str	r3, [r4, #84]	; 0x54
}
 800e3d6:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800e3d8:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e3da:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800e3dc:	6829      	ldr	r1, [r5, #0]
 800e3de:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800e3e2:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e3e4:	2101      	movs	r1, #1
 800e3e6:	f7ff ff77 	bl	800e2d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3ea:	2800      	cmp	r0, #0
 800e3ec:	d1ee      	bne.n	800e3cc <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800e3ee:	2000      	movs	r0, #0
 800e3f0:	e7dd      	b.n	800e3ae <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800e3f2:	6800      	ldr	r0, [r0, #0]
 800e3f4:	6802      	ldr	r2, [r0, #0]
 800e3f6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e3fa:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e3fc:	460a      	mov	r2, r1
 800e3fe:	4620      	mov	r0, r4
 800e400:	2180      	movs	r1, #128	; 0x80
 800e402:	f7ff ff69 	bl	800e2d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e406:	2800      	cmp	r0, #0
 800e408:	d0d0      	beq.n	800e3ac <SPI_EndRxTransaction+0x18>
 800e40a:	e7df      	b.n	800e3cc <SPI_EndRxTransaction+0x38>

0800e40c <HAL_SPI_Init>:
  if (hspi == NULL)
 800e40c:	2800      	cmp	r0, #0
 800e40e:	d05c      	beq.n	800e4ca <HAL_SPI_Init+0xbe>
{
 800e410:	b570      	push	{r4, r5, r6, lr}
 800e412:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800e414:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e416:	2800      	cmp	r0, #0
 800e418:	d047      	beq.n	800e4aa <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800e41a:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800e41c:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e420:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800e424:	2200      	movs	r2, #0
 800e426:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e428:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800e42c:	2b00      	cmp	r3, #0
 800e42e:	d042      	beq.n	800e4b6 <HAL_SPI_Init+0xaa>
 800e430:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800e432:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e434:	68a5      	ldr	r5, [r4, #8]
 800e436:	69a2      	ldr	r2, [r4, #24]
 800e438:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800e43a:	2302      	movs	r3, #2
 800e43c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800e440:	680b      	ldr	r3, [r1, #0]
 800e442:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e446:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e448:	6863      	ldr	r3, [r4, #4]
 800e44a:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800e44e:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800e452:	432b      	orrs	r3, r5
 800e454:	68e5      	ldr	r5, [r4, #12]
 800e456:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800e45a:	432b      	orrs	r3, r5
 800e45c:	6925      	ldr	r5, [r4, #16]
 800e45e:	f005 0502 	and.w	r5, r5, #2
 800e462:	432b      	orrs	r3, r5
 800e464:	6965      	ldr	r5, [r4, #20]
 800e466:	f005 0501 	and.w	r5, r5, #1
 800e46a:	432b      	orrs	r3, r5
 800e46c:	69e5      	ldr	r5, [r4, #28]
 800e46e:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800e472:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800e476:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800e47a:	4333      	orrs	r3, r6
 800e47c:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e47e:	0c12      	lsrs	r2, r2, #16
 800e480:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e484:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e488:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e48c:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e490:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e492:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e494:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e496:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e498:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e49a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800e49e:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e4a0:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e4a2:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800e4a4:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800e4a8:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e4aa:	6863      	ldr	r3, [r4, #4]
 800e4ac:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e4b0:	d0b6      	beq.n	800e420 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800e4b2:	61e0      	str	r0, [r4, #28]
 800e4b4:	e7b4      	b.n	800e420 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800e4b6:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800e4b8:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800e4bc:	f7f4 f818 	bl	80024f0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e4c0:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e4c4:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800e4c8:	e7b3      	b.n	800e432 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800e4ca:	2001      	movs	r0, #1
}
 800e4cc:	4770      	bx	lr
 800e4ce:	bf00      	nop

0800e4d0 <HAL_SPI_Transmit>:
{
 800e4d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4d4:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e4d6:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e4da:	2801      	cmp	r0, #1
{
 800e4dc:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e4de:	f000 8085 	beq.w	800e5ec <HAL_SPI_Transmit+0x11c>
 800e4e2:	461d      	mov	r5, r3
 800e4e4:	2301      	movs	r3, #1
 800e4e6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e4ea:	4688      	mov	r8, r1
 800e4ec:	4617      	mov	r7, r2
 800e4ee:	f7fd f86d 	bl	800b5cc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e4f2:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800e4f6:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800e4f8:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e4fa:	b2d8      	uxtb	r0, r3
 800e4fc:	d009      	beq.n	800e512 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800e4fe:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e500:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e502:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e504:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e508:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e50c:	b002      	add	sp, #8
 800e50e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800e512:	f1b8 0f00 	cmp.w	r8, #0
 800e516:	d0f3      	beq.n	800e500 <HAL_SPI_Transmit+0x30>
 800e518:	2f00      	cmp	r7, #0
 800e51a:	d0f1      	beq.n	800e500 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e51c:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800e51e:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800e520:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e524:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e526:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e528:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e52c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800e530:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e534:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800e536:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800e538:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800e53a:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800e53c:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800e53e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e540:	f000 8085 	beq.w	800e64e <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e544:	6803      	ldr	r3, [r0, #0]
 800e546:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800e548:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e54a:	d403      	bmi.n	800e554 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800e54c:	6803      	ldr	r3, [r0, #0]
 800e54e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e552:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e554:	68e3      	ldr	r3, [r4, #12]
 800e556:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e55a:	d04b      	beq.n	800e5f4 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e55c:	6863      	ldr	r3, [r4, #4]
 800e55e:	2b00      	cmp	r3, #0
 800e560:	f000 8097 	beq.w	800e692 <HAL_SPI_Transmit+0x1c2>
 800e564:	2f01      	cmp	r7, #1
 800e566:	f000 8094 	beq.w	800e692 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800e56a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e56c:	b29b      	uxth	r3, r3
 800e56e:	b1ab      	cbz	r3, 800e59c <HAL_SPI_Transmit+0xcc>
 800e570:	1c68      	adds	r0, r5, #1
 800e572:	f040 8083 	bne.w	800e67c <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e576:	6823      	ldr	r3, [r4, #0]
 800e578:	689a      	ldr	r2, [r3, #8]
 800e57a:	0791      	lsls	r1, r2, #30
 800e57c:	f140 8094 	bpl.w	800e6a8 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e580:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e582:	7812      	ldrb	r2, [r2, #0]
 800e584:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e586:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e588:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e58a:	3901      	subs	r1, #1
 800e58c:	b289      	uxth	r1, r1
 800e58e:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e590:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e592:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800e594:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e596:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800e598:	2900      	cmp	r1, #0
 800e59a:	d1ec      	bne.n	800e576 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e59c:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e59e:	4b5b      	ldr	r3, [pc, #364]	; (800e70c <HAL_SPI_Transmit+0x23c>)
 800e5a0:	4a5b      	ldr	r2, [pc, #364]	; (800e710 <HAL_SPI_Transmit+0x240>)
 800e5a2:	681b      	ldr	r3, [r3, #0]
 800e5a4:	fba2 2303 	umull	r2, r3, r2, r3
 800e5a8:	0d5b      	lsrs	r3, r3, #21
 800e5aa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800e5ae:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e5b2:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e5b6:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e5b8:	d107      	bne.n	800e5ca <HAL_SPI_Transmit+0xfa>
 800e5ba:	e098      	b.n	800e6ee <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800e5bc:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e5be:	6822      	ldr	r2, [r4, #0]
      count--;
 800e5c0:	3b01      	subs	r3, #1
 800e5c2:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e5c4:	6893      	ldr	r3, [r2, #8]
 800e5c6:	061b      	lsls	r3, r3, #24
 800e5c8:	d502      	bpl.n	800e5d0 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800e5ca:	9b01      	ldr	r3, [sp, #4]
 800e5cc:	2b00      	cmp	r3, #0
 800e5ce:	d1f5      	bne.n	800e5bc <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e5d0:	68a3      	ldr	r3, [r4, #8]
 800e5d2:	b933      	cbnz	r3, 800e5e2 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e5d4:	6822      	ldr	r2, [r4, #0]
 800e5d6:	9300      	str	r3, [sp, #0]
 800e5d8:	68d3      	ldr	r3, [r2, #12]
 800e5da:	9300      	str	r3, [sp, #0]
 800e5dc:	6893      	ldr	r3, [r2, #8]
 800e5de:	9300      	str	r3, [sp, #0]
 800e5e0:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e5e2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e5e4:	3800      	subs	r0, #0
 800e5e6:	bf18      	it	ne
 800e5e8:	2001      	movne	r0, #1
error:
 800e5ea:	e789      	b.n	800e500 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800e5ec:	2002      	movs	r0, #2
}
 800e5ee:	b002      	add	sp, #8
 800e5f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e5f4:	6861      	ldr	r1, [r4, #4]
 800e5f6:	2900      	cmp	r1, #0
 800e5f8:	d176      	bne.n	800e6e8 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e5fa:	4643      	mov	r3, r8
 800e5fc:	f833 7b02 	ldrh.w	r7, [r3], #2
 800e600:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e602:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e604:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e606:	3b01      	subs	r3, #1
 800e608:	b29b      	uxth	r3, r3
 800e60a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e60c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e60e:	b29b      	uxth	r3, r3
 800e610:	2b00      	cmp	r3, #0
 800e612:	d0c4      	beq.n	800e59e <HAL_SPI_Transmit+0xce>
 800e614:	1c6b      	adds	r3, r5, #1
 800e616:	d15e      	bne.n	800e6d6 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e618:	6883      	ldr	r3, [r0, #8]
 800e61a:	079f      	lsls	r7, r3, #30
 800e61c:	d50f      	bpl.n	800e63e <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e61e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e620:	f832 3b02 	ldrh.w	r3, [r2], #2
 800e624:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800e626:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e628:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e62a:	3b01      	subs	r3, #1
 800e62c:	b29b      	uxth	r3, r3
 800e62e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e630:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e632:	b29b      	uxth	r3, r3
 800e634:	2b00      	cmp	r3, #0
 800e636:	d0b1      	beq.n	800e59c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e638:	6883      	ldr	r3, [r0, #8]
 800e63a:	079f      	lsls	r7, r3, #30
 800e63c:	d4ef      	bmi.n	800e61e <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e63e:	f7fc ffc5 	bl	800b5cc <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e642:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e644:	b29b      	uxth	r3, r3
 800e646:	2b00      	cmp	r3, #0
 800e648:	d0a8      	beq.n	800e59c <HAL_SPI_Transmit+0xcc>
 800e64a:	6820      	ldr	r0, [r4, #0]
 800e64c:	e7e4      	b.n	800e618 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800e64e:	6803      	ldr	r3, [r0, #0]
 800e650:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e654:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800e656:	6803      	ldr	r3, [r0, #0]
 800e658:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e65c:	6003      	str	r3, [r0, #0]
 800e65e:	e771      	b.n	800e544 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e660:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e662:	7812      	ldrb	r2, [r2, #0]
 800e664:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e666:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e668:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e66a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e66c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e66e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e670:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e672:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e674:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e676:	b29b      	uxth	r3, r3
 800e678:	2b00      	cmp	r3, #0
 800e67a:	d08f      	beq.n	800e59c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e67c:	6823      	ldr	r3, [r4, #0]
 800e67e:	689a      	ldr	r2, [r3, #8]
 800e680:	0792      	lsls	r2, r2, #30
 800e682:	d4ed      	bmi.n	800e660 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e684:	f7fc ffa2 	bl	800b5cc <HAL_GetTick>
 800e688:	1b80      	subs	r0, r0, r6
 800e68a:	42a8      	cmp	r0, r5
 800e68c:	d3f2      	bcc.n	800e674 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800e68e:	2003      	movs	r0, #3
 800e690:	e736      	b.n	800e500 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e692:	f898 3000 	ldrb.w	r3, [r8]
 800e696:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800e698:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e69a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e69c:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e69e:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e6a0:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e6a2:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e6a4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e6a6:	e760      	b.n	800e56a <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e6a8:	f7fc ff90 	bl	800b5cc <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e6ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e6ae:	b29b      	uxth	r3, r3
 800e6b0:	2b00      	cmp	r3, #0
 800e6b2:	f47f af60 	bne.w	800e576 <HAL_SPI_Transmit+0xa6>
 800e6b6:	e771      	b.n	800e59c <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e6b8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e6ba:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e6be:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e6c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e6c2:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e6c4:	3b01      	subs	r3, #1
 800e6c6:	b29b      	uxth	r3, r3
 800e6c8:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e6ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e6cc:	b29b      	uxth	r3, r3
 800e6ce:	2b00      	cmp	r3, #0
 800e6d0:	f43f af64 	beq.w	800e59c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e6d4:	6822      	ldr	r2, [r4, #0]
 800e6d6:	6893      	ldr	r3, [r2, #8]
 800e6d8:	0799      	lsls	r1, r3, #30
 800e6da:	d4ed      	bmi.n	800e6b8 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e6dc:	f7fc ff76 	bl	800b5cc <HAL_GetTick>
 800e6e0:	1b80      	subs	r0, r0, r6
 800e6e2:	42a8      	cmp	r0, r5
 800e6e4:	d3f1      	bcc.n	800e6ca <HAL_SPI_Transmit+0x1fa>
 800e6e6:	e7d2      	b.n	800e68e <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e6e8:	2f01      	cmp	r7, #1
 800e6ea:	d18f      	bne.n	800e60c <HAL_SPI_Transmit+0x13c>
 800e6ec:	e785      	b.n	800e5fa <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e6ee:	4633      	mov	r3, r6
 800e6f0:	462a      	mov	r2, r5
 800e6f2:	2180      	movs	r1, #128	; 0x80
 800e6f4:	4620      	mov	r0, r4
 800e6f6:	f7ff fdef 	bl	800e2d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e6fa:	2800      	cmp	r0, #0
 800e6fc:	f43f af68 	beq.w	800e5d0 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e700:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e702:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e704:	4313      	orrs	r3, r2
 800e706:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e708:	6562      	str	r2, [r4, #84]	; 0x54
 800e70a:	e761      	b.n	800e5d0 <HAL_SPI_Transmit+0x100>
 800e70c:	2000007c 	.word	0x2000007c
 800e710:	165e9f81 	.word	0x165e9f81

0800e714 <HAL_SPI_TransmitReceive>:
{
 800e714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e718:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e71a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e71e:	2801      	cmp	r0, #1
{
 800e720:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e722:	f000 80ac 	beq.w	800e87e <HAL_SPI_TransmitReceive+0x16a>
 800e726:	461e      	mov	r6, r3
 800e728:	2301      	movs	r3, #1
 800e72a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e72e:	4690      	mov	r8, r2
 800e730:	460f      	mov	r7, r1
 800e732:	f7fc ff4b 	bl	800b5cc <HAL_GetTick>
 800e736:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800e738:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800e73c:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e73e:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800e740:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e742:	d011      	beq.n	800e768 <HAL_SPI_TransmitReceive+0x54>
 800e744:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e748:	d009      	beq.n	800e75e <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800e74a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e74c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e74e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e750:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e754:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e758:	b002      	add	sp, #8
 800e75a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800e75e:	68a1      	ldr	r1, [r4, #8]
 800e760:	2900      	cmp	r1, #0
 800e762:	d1f2      	bne.n	800e74a <HAL_SPI_TransmitReceive+0x36>
 800e764:	2a04      	cmp	r2, #4
 800e766:	d1f0      	bne.n	800e74a <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800e768:	2f00      	cmp	r7, #0
 800e76a:	f000 808c 	beq.w	800e886 <HAL_SPI_TransmitReceive+0x172>
 800e76e:	f1b8 0f00 	cmp.w	r8, #0
 800e772:	f000 8088 	beq.w	800e886 <HAL_SPI_TransmitReceive+0x172>
 800e776:	2e00      	cmp	r6, #0
 800e778:	f000 8085 	beq.w	800e886 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e77c:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800e780:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e784:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800e786:	bf1c      	itt	ne
 800e788:	2205      	movne	r2, #5
 800e78a:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e78e:	2200      	movs	r2, #0
 800e790:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800e792:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e796:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800e798:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800e79a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e79c:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800e79e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e7a0:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800e7a2:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800e7a4:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e7a6:	d403      	bmi.n	800e7b0 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800e7a8:	6811      	ldr	r1, [r2, #0]
 800e7aa:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800e7ae:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e7b0:	68e1      	ldr	r1, [r4, #12]
 800e7b2:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800e7b6:	f000 809e 	beq.w	800e8f6 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e7ba:	2b00      	cmp	r3, #0
 800e7bc:	f000 8091 	beq.w	800e8e2 <HAL_SPI_TransmitReceive+0x1ce>
 800e7c0:	2e01      	cmp	r6, #1
 800e7c2:	f000 808e 	beq.w	800e8e2 <HAL_SPI_TransmitReceive+0x1ce>
 800e7c6:	9b08      	ldr	r3, [sp, #32]
 800e7c8:	3301      	adds	r3, #1
        txallowed = 1U;
 800e7ca:	f04f 0601 	mov.w	r6, #1
 800e7ce:	d028      	beq.n	800e822 <HAL_SPI_TransmitReceive+0x10e>
 800e7d0:	e05b      	b.n	800e88a <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e7d2:	6821      	ldr	r1, [r4, #0]
 800e7d4:	688b      	ldr	r3, [r1, #8]
 800e7d6:	0798      	lsls	r0, r3, #30
 800e7d8:	d50f      	bpl.n	800e7fa <HAL_SPI_TransmitReceive+0xe6>
 800e7da:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7dc:	b29b      	uxth	r3, r3
 800e7de:	b163      	cbz	r3, 800e7fa <HAL_SPI_TransmitReceive+0xe6>
 800e7e0:	b15e      	cbz	r6, 800e7fa <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e7e2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e7e4:	781b      	ldrb	r3, [r3, #0]
 800e7e6:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800e7e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e7ea:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e7ec:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800e7ee:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e7f0:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e7f2:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800e7f4:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e7f6:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e7f8:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e7fa:	688a      	ldr	r2, [r1, #8]
 800e7fc:	f012 0201 	ands.w	r2, r2, #1
 800e800:	d00d      	beq.n	800e81e <HAL_SPI_TransmitReceive+0x10a>
 800e802:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e804:	b29b      	uxth	r3, r3
 800e806:	b153      	cbz	r3, 800e81e <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e808:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e80a:	68c9      	ldr	r1, [r1, #12]
 800e80c:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800e80e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e810:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e812:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800e814:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e816:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800e818:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e81a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e81c:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e81e:	f7fc fed5 	bl	800b5cc <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e822:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e824:	b292      	uxth	r2, r2
 800e826:	2a00      	cmp	r2, #0
 800e828:	d1d3      	bne.n	800e7d2 <HAL_SPI_TransmitReceive+0xbe>
 800e82a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e82c:	b29b      	uxth	r3, r3
 800e82e:	2b00      	cmp	r3, #0
 800e830:	d1cf      	bne.n	800e7d2 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e832:	4b79      	ldr	r3, [pc, #484]	; (800ea18 <HAL_SPI_TransmitReceive+0x304>)
 800e834:	4a79      	ldr	r2, [pc, #484]	; (800ea1c <HAL_SPI_TransmitReceive+0x308>)
 800e836:	681b      	ldr	r3, [r3, #0]
 800e838:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e83c:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e83e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800e842:	0d5b      	lsrs	r3, r3, #21
 800e844:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e848:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e84c:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e84e:	d107      	bne.n	800e860 <HAL_SPI_TransmitReceive+0x14c>
 800e850:	e0d2      	b.n	800e9f8 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800e852:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e854:	6822      	ldr	r2, [r4, #0]
      count--;
 800e856:	3b01      	subs	r3, #1
 800e858:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e85a:	6893      	ldr	r3, [r2, #8]
 800e85c:	061b      	lsls	r3, r3, #24
 800e85e:	d502      	bpl.n	800e866 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800e860:	9b01      	ldr	r3, [sp, #4]
 800e862:	2b00      	cmp	r3, #0
 800e864:	d1f5      	bne.n	800e852 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e866:	68a0      	ldr	r0, [r4, #8]
 800e868:	2800      	cmp	r0, #0
 800e86a:	f040 8082 	bne.w	800e972 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e86e:	6823      	ldr	r3, [r4, #0]
 800e870:	9000      	str	r0, [sp, #0]
 800e872:	68da      	ldr	r2, [r3, #12]
 800e874:	9200      	str	r2, [sp, #0]
 800e876:	689b      	ldr	r3, [r3, #8]
 800e878:	9300      	str	r3, [sp, #0]
 800e87a:	9b00      	ldr	r3, [sp, #0]
 800e87c:	e766      	b.n	800e74c <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800e87e:	2002      	movs	r0, #2
}
 800e880:	b002      	add	sp, #8
 800e882:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800e886:	2001      	movs	r0, #1
 800e888:	e760      	b.n	800e74c <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e88a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e88c:	b29b      	uxth	r3, r3
 800e88e:	b91b      	cbnz	r3, 800e898 <HAL_SPI_TransmitReceive+0x184>
 800e890:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e892:	b29b      	uxth	r3, r3
 800e894:	2b00      	cmp	r3, #0
 800e896:	d0cc      	beq.n	800e832 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e898:	6822      	ldr	r2, [r4, #0]
 800e89a:	6893      	ldr	r3, [r2, #8]
 800e89c:	0799      	lsls	r1, r3, #30
 800e89e:	d50f      	bpl.n	800e8c0 <HAL_SPI_TransmitReceive+0x1ac>
 800e8a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e8a2:	b29b      	uxth	r3, r3
 800e8a4:	b163      	cbz	r3, 800e8c0 <HAL_SPI_TransmitReceive+0x1ac>
 800e8a6:	b15e      	cbz	r6, 800e8c0 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e8a8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e8aa:	781b      	ldrb	r3, [r3, #0]
 800e8ac:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800e8ae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e8b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e8b2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e8b4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e8b6:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800e8b8:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e8ba:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800e8bc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e8be:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e8c0:	6893      	ldr	r3, [r2, #8]
 800e8c2:	f013 0301 	ands.w	r3, r3, #1
 800e8c6:	d004      	beq.n	800e8d2 <HAL_SPI_TransmitReceive+0x1be>
 800e8c8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e8ca:	b289      	uxth	r1, r1
 800e8cc:	2900      	cmp	r1, #0
 800e8ce:	f040 8087 	bne.w	800e9e0 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e8d2:	f7fc fe7b 	bl	800b5cc <HAL_GetTick>
 800e8d6:	9b08      	ldr	r3, [sp, #32]
 800e8d8:	1b40      	subs	r0, r0, r5
 800e8da:	4298      	cmp	r0, r3
 800e8dc:	d3d5      	bcc.n	800e88a <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800e8de:	2003      	movs	r0, #3
 800e8e0:	e734      	b.n	800e74c <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e8e2:	783b      	ldrb	r3, [r7, #0]
 800e8e4:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800e8e6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8e8:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8ea:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8ec:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e8ee:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8f0:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8f2:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e8f4:	e767      	b.n	800e7c6 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e8f6:	2b00      	cmp	r3, #0
 800e8f8:	d13d      	bne.n	800e976 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e8fa:	f837 3b02 	ldrh.w	r3, [r7], #2
 800e8fe:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800e900:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e902:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e904:	3b01      	subs	r3, #1
 800e906:	b29b      	uxth	r3, r3
 800e908:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e90a:	9b08      	ldr	r3, [sp, #32]
 800e90c:	3301      	adds	r3, #1
{
 800e90e:	f04f 0601 	mov.w	r6, #1
 800e912:	d025      	beq.n	800e960 <HAL_SPI_TransmitReceive+0x24c>
 800e914:	e032      	b.n	800e97c <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e916:	6823      	ldr	r3, [r4, #0]
 800e918:	689a      	ldr	r2, [r3, #8]
 800e91a:	0792      	lsls	r2, r2, #30
 800e91c:	d50d      	bpl.n	800e93a <HAL_SPI_TransmitReceive+0x226>
 800e91e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e920:	b292      	uxth	r2, r2
 800e922:	b152      	cbz	r2, 800e93a <HAL_SPI_TransmitReceive+0x226>
 800e924:	b14e      	cbz	r6, 800e93a <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e926:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e928:	f831 2b02 	ldrh.w	r2, [r1], #2
 800e92c:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800e92e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e930:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e932:	3a01      	subs	r2, #1
 800e934:	b292      	uxth	r2, r2
        txallowed = 0U;
 800e936:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e938:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e93a:	689a      	ldr	r2, [r3, #8]
 800e93c:	f012 0201 	ands.w	r2, r2, #1
 800e940:	d00c      	beq.n	800e95c <HAL_SPI_TransmitReceive+0x248>
 800e942:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e944:	b289      	uxth	r1, r1
 800e946:	b149      	cbz	r1, 800e95c <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e948:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e94a:	68db      	ldr	r3, [r3, #12]
 800e94c:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800e950:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e952:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e954:	3b01      	subs	r3, #1
 800e956:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800e958:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800e95a:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e95c:	f7fc fe36 	bl	800b5cc <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e960:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e962:	b29b      	uxth	r3, r3
 800e964:	2b00      	cmp	r3, #0
 800e966:	d1d6      	bne.n	800e916 <HAL_SPI_TransmitReceive+0x202>
 800e968:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e96a:	b29b      	uxth	r3, r3
 800e96c:	2b00      	cmp	r3, #0
 800e96e:	d1d2      	bne.n	800e916 <HAL_SPI_TransmitReceive+0x202>
 800e970:	e75f      	b.n	800e832 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800e972:	2000      	movs	r0, #0
 800e974:	e6ea      	b.n	800e74c <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e976:	2e01      	cmp	r6, #1
 800e978:	d1c7      	bne.n	800e90a <HAL_SPI_TransmitReceive+0x1f6>
 800e97a:	e7be      	b.n	800e8fa <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e97c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e97e:	b29b      	uxth	r3, r3
 800e980:	b923      	cbnz	r3, 800e98c <HAL_SPI_TransmitReceive+0x278>
 800e982:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e984:	b29b      	uxth	r3, r3
 800e986:	2b00      	cmp	r3, #0
 800e988:	f43f af53 	beq.w	800e832 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e98c:	6822      	ldr	r2, [r4, #0]
 800e98e:	6893      	ldr	r3, [r2, #8]
 800e990:	079f      	lsls	r7, r3, #30
 800e992:	d50d      	bpl.n	800e9b0 <HAL_SPI_TransmitReceive+0x29c>
 800e994:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e996:	b29b      	uxth	r3, r3
 800e998:	b153      	cbz	r3, 800e9b0 <HAL_SPI_TransmitReceive+0x29c>
 800e99a:	b14e      	cbz	r6, 800e9b0 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e99c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e99e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e9a2:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e9a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e9a6:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e9a8:	3b01      	subs	r3, #1
 800e9aa:	b29b      	uxth	r3, r3
 800e9ac:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e9ae:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e9b0:	6893      	ldr	r3, [r2, #8]
 800e9b2:	f013 0301 	ands.w	r3, r3, #1
 800e9b6:	d00c      	beq.n	800e9d2 <HAL_SPI_TransmitReceive+0x2be>
 800e9b8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e9ba:	b289      	uxth	r1, r1
 800e9bc:	b149      	cbz	r1, 800e9d2 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e9be:	68d1      	ldr	r1, [r2, #12]
 800e9c0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e9c2:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800e9c6:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800e9c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e9ca:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9cc:	3b01      	subs	r3, #1
 800e9ce:	b29b      	uxth	r3, r3
 800e9d0:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e9d2:	f7fc fdfb 	bl	800b5cc <HAL_GetTick>
 800e9d6:	9b08      	ldr	r3, [sp, #32]
 800e9d8:	1b40      	subs	r0, r0, r5
 800e9da:	4298      	cmp	r0, r3
 800e9dc:	d3ce      	bcc.n	800e97c <HAL_SPI_TransmitReceive+0x268>
 800e9de:	e77e      	b.n	800e8de <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e9e0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e9e2:	68d2      	ldr	r2, [r2, #12]
 800e9e4:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800e9e6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e9e8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9ea:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800e9ec:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e9ee:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800e9f0:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9f2:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e9f4:	461e      	mov	r6, r3
 800e9f6:	e76c      	b.n	800e8d2 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e9f8:	9a08      	ldr	r2, [sp, #32]
 800e9fa:	462b      	mov	r3, r5
 800e9fc:	2180      	movs	r1, #128	; 0x80
 800e9fe:	4620      	mov	r0, r4
 800ea00:	f7ff fc6a 	bl	800e2d8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ea04:	2800      	cmp	r0, #0
 800ea06:	f43f af2e 	beq.w	800e866 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ea0a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ea0c:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ea0e:	4313      	orrs	r3, r2
 800ea10:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800ea12:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ea14:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800ea16:	e699      	b.n	800e74c <HAL_SPI_TransmitReceive+0x38>
 800ea18:	2000007c 	.word	0x2000007c
 800ea1c:	165e9f81 	.word	0x165e9f81

0800ea20 <HAL_SPI_Receive>:
{
 800ea20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ea24:	6846      	ldr	r6, [r0, #4]
 800ea26:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800ea2a:	b082      	sub	sp, #8
 800ea2c:	4604      	mov	r4, r0
 800ea2e:	4690      	mov	r8, r2
 800ea30:	461d      	mov	r5, r3
 800ea32:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ea34:	d06e      	beq.n	800eb14 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800ea36:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800ea3a:	2b01      	cmp	r3, #1
 800ea3c:	d076      	beq.n	800eb2c <HAL_SPI_Receive+0x10c>
 800ea3e:	2301      	movs	r3, #1
 800ea40:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ea44:	f7fc fdc2 	bl	800b5cc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800ea48:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800ea4c:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800ea50:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800ea52:	fa5f f08c 	uxtb.w	r0, ip
 800ea56:	d009      	beq.n	800ea6c <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800ea58:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ea5a:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ea5c:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ea5e:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ea62:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ea66:	b002      	add	sp, #8
 800ea68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ea6c:	2f00      	cmp	r7, #0
 800ea6e:	d0f4      	beq.n	800ea5a <HAL_SPI_Receive+0x3a>
 800ea70:	f1b8 0f00 	cmp.w	r8, #0
 800ea74:	d0f1      	beq.n	800ea5a <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea76:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ea78:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea7a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ea7e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ea80:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ea84:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ea88:	f04f 0104 	mov.w	r1, #4
 800ea8c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ea90:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ea94:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ea96:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ea98:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ea9a:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ea9e:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800eaa0:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800eaa2:	d107      	bne.n	800eab4 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800eaa4:	6811      	ldr	r1, [r2, #0]
 800eaa6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800eaaa:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800eaac:	6811      	ldr	r1, [r2, #0]
 800eaae:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800eab2:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800eab4:	6811      	ldr	r1, [r2, #0]
 800eab6:	0648      	lsls	r0, r1, #25
 800eab8:	d403      	bmi.n	800eac2 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800eaba:	6811      	ldr	r1, [r2, #0]
 800eabc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800eac0:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800eac2:	68e1      	ldr	r1, [r4, #12]
 800eac4:	2900      	cmp	r1, #0
 800eac6:	d054      	beq.n	800eb72 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800eac8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800eaca:	b289      	uxth	r1, r1
 800eacc:	b1a9      	cbz	r1, 800eafa <HAL_SPI_Receive+0xda>
 800eace:	1c69      	adds	r1, r5, #1
 800ead0:	d13e      	bne.n	800eb50 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ead2:	6893      	ldr	r3, [r2, #8]
 800ead4:	07db      	lsls	r3, r3, #31
 800ead6:	d544      	bpl.n	800eb62 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ead8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eada:	68d1      	ldr	r1, [r2, #12]
 800eadc:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800eae0:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eae4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eae6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eaea:	fa1f fc8c 	uxth.w	ip, ip
 800eaee:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eaf2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eaf4:	b29b      	uxth	r3, r3
 800eaf6:	2b00      	cmp	r3, #0
 800eaf8:	d1eb      	bne.n	800ead2 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800eafa:	4632      	mov	r2, r6
 800eafc:	4629      	mov	r1, r5
 800eafe:	4620      	mov	r0, r4
 800eb00:	f7ff fc48 	bl	800e394 <SPI_EndRxTransaction>
 800eb04:	b108      	cbz	r0, 800eb0a <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800eb06:	2320      	movs	r3, #32
 800eb08:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800eb0a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800eb0c:	3800      	subs	r0, #0
 800eb0e:	bf18      	it	ne
 800eb10:	2001      	movne	r0, #1
error :
 800eb12:	e7a2      	b.n	800ea5a <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800eb14:	6883      	ldr	r3, [r0, #8]
 800eb16:	2b00      	cmp	r3, #0
 800eb18:	d18d      	bne.n	800ea36 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eb1a:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800eb1c:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eb1e:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800eb20:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eb24:	460a      	mov	r2, r1
 800eb26:	f7ff fdf5 	bl	800e714 <HAL_SPI_TransmitReceive>
 800eb2a:	e79c      	b.n	800ea66 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800eb2c:	2002      	movs	r0, #2
}
 800eb2e:	b002      	add	sp, #8
 800eb30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800eb34:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb36:	68db      	ldr	r3, [r3, #12]
 800eb38:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800eb3c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eb3e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb40:	3b01      	subs	r3, #1
 800eb42:	b29b      	uxth	r3, r3
 800eb44:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eb46:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb48:	b29b      	uxth	r3, r3
 800eb4a:	2b00      	cmp	r3, #0
 800eb4c:	d0d5      	beq.n	800eafa <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eb4e:	6823      	ldr	r3, [r4, #0]
 800eb50:	689a      	ldr	r2, [r3, #8]
 800eb52:	07d2      	lsls	r2, r2, #31
 800eb54:	d4ee      	bmi.n	800eb34 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800eb56:	f7fc fd39 	bl	800b5cc <HAL_GetTick>
 800eb5a:	1b80      	subs	r0, r0, r6
 800eb5c:	42a8      	cmp	r0, r5
 800eb5e:	d243      	bcs.n	800ebe8 <HAL_SPI_Receive+0x1c8>
 800eb60:	e7f1      	b.n	800eb46 <HAL_SPI_Receive+0x126>
 800eb62:	f7fc fd33 	bl	800b5cc <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800eb66:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb68:	b29b      	uxth	r3, r3
 800eb6a:	2b00      	cmp	r3, #0
 800eb6c:	d0c5      	beq.n	800eafa <HAL_SPI_Receive+0xda>
 800eb6e:	6822      	ldr	r2, [r4, #0]
 800eb70:	e7af      	b.n	800ead2 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800eb72:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800eb74:	b292      	uxth	r2, r2
 800eb76:	2a00      	cmp	r2, #0
 800eb78:	d0bf      	beq.n	800eafa <HAL_SPI_Receive+0xda>
 800eb7a:	1c6f      	adds	r7, r5, #1
 800eb7c:	d013      	beq.n	800eba6 <HAL_SPI_Receive+0x186>
 800eb7e:	e02b      	b.n	800ebd8 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800eb80:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb82:	7b1b      	ldrb	r3, [r3, #12]
 800eb84:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800eb86:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb8a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb8c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eb90:	fa1f fc8c 	uxth.w	ip, ip
 800eb94:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eb98:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb9a:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800eb9c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb9e:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800eba0:	2b00      	cmp	r3, #0
 800eba2:	d0aa      	beq.n	800eafa <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eba4:	6823      	ldr	r3, [r4, #0]
 800eba6:	689a      	ldr	r2, [r3, #8]
 800eba8:	07d0      	lsls	r0, r2, #31
 800ebaa:	d4e9      	bmi.n	800eb80 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ebac:	f7fc fd0e 	bl	800b5cc <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800ebb0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ebb2:	b29b      	uxth	r3, r3
 800ebb4:	2b00      	cmp	r3, #0
 800ebb6:	d1f5      	bne.n	800eba4 <HAL_SPI_Receive+0x184>
 800ebb8:	e79f      	b.n	800eafa <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ebba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ebbc:	7b1b      	ldrb	r3, [r3, #12]
 800ebbe:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ebc0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ebc2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ebc4:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ebc6:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800ebc8:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ebca:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ebcc:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ebce:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ebd0:	b29b      	uxth	r3, r3
 800ebd2:	2b00      	cmp	r3, #0
 800ebd4:	d091      	beq.n	800eafa <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ebd6:	6823      	ldr	r3, [r4, #0]
 800ebd8:	689a      	ldr	r2, [r3, #8]
 800ebda:	07d1      	lsls	r1, r2, #31
 800ebdc:	d4ed      	bmi.n	800ebba <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ebde:	f7fc fcf5 	bl	800b5cc <HAL_GetTick>
 800ebe2:	1b80      	subs	r0, r0, r6
 800ebe4:	42a8      	cmp	r0, r5
 800ebe6:	d3f2      	bcc.n	800ebce <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800ebe8:	2003      	movs	r0, #3
 800ebea:	e736      	b.n	800ea5a <HAL_SPI_Receive+0x3a>

0800ebec <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800ebec:	2800      	cmp	r0, #0
 800ebee:	f000 8087 	beq.w	800ed00 <HAL_TIM_Base_Init+0x114>
{
 800ebf2:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800ebf4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ebf8:	4604      	mov	r4, r0
 800ebfa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ebfe:	2b00      	cmp	r3, #0
 800ec00:	d079      	beq.n	800ecf6 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ec02:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ec04:	493f      	ldr	r1, [pc, #252]	; (800ed04 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ec06:	2302      	movs	r3, #2
 800ec08:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ec0c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ec0e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ec10:	d05d      	beq.n	800ecce <HAL_TIM_Base_Init+0xe2>
 800ec12:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ec16:	d031      	beq.n	800ec7c <HAL_TIM_Base_Init+0x90>
 800ec18:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ec1c:	428a      	cmp	r2, r1
 800ec1e:	d02d      	beq.n	800ec7c <HAL_TIM_Base_Init+0x90>
 800ec20:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec24:	428a      	cmp	r2, r1
 800ec26:	d029      	beq.n	800ec7c <HAL_TIM_Base_Init+0x90>
 800ec28:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec2c:	428a      	cmp	r2, r1
 800ec2e:	d025      	beq.n	800ec7c <HAL_TIM_Base_Init+0x90>
 800ec30:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ec34:	428a      	cmp	r2, r1
 800ec36:	d04a      	beq.n	800ecce <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ec38:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ec3c:	428a      	cmp	r2, r1
 800ec3e:	d021      	beq.n	800ec84 <HAL_TIM_Base_Init+0x98>
 800ec40:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec44:	428a      	cmp	r2, r1
 800ec46:	d01d      	beq.n	800ec84 <HAL_TIM_Base_Init+0x98>
 800ec48:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec4c:	428a      	cmp	r2, r1
 800ec4e:	d019      	beq.n	800ec84 <HAL_TIM_Base_Init+0x98>
 800ec50:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ec54:	428a      	cmp	r2, r1
 800ec56:	d015      	beq.n	800ec84 <HAL_TIM_Base_Init+0x98>
 800ec58:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec5c:	428a      	cmp	r2, r1
 800ec5e:	d011      	beq.n	800ec84 <HAL_TIM_Base_Init+0x98>
 800ec60:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec64:	428a      	cmp	r2, r1
 800ec66:	d00d      	beq.n	800ec84 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec68:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec6a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec6c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ec70:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800ec72:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800ec74:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec76:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec78:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ec7a:	e010      	b.n	800ec9e <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800ec7c:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ec7e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ec82:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec84:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec86:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ec88:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec8c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec8e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec92:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec94:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ec96:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ec98:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec9a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec9c:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800ec9e:	2301      	movs	r3, #1
 800eca0:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800eca2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800eca6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ecaa:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ecae:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ecb2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ecb6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ecba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ecbe:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ecc2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ecc6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ecca:	2000      	movs	r0, #0
}
 800eccc:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ecce:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ecd0:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ecd2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ecd6:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ecd8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ecdc:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ecde:	69a1      	ldr	r1, [r4, #24]
 800ece0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ece4:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ece6:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ece8:	68e3      	ldr	r3, [r4, #12]
 800ecea:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ecec:	6863      	ldr	r3, [r4, #4]
 800ecee:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ecf0:	6963      	ldr	r3, [r4, #20]
 800ecf2:	6313      	str	r3, [r2, #48]	; 0x30
 800ecf4:	e7d3      	b.n	800ec9e <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ecf6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800ecfa:	f7f3 fc35 	bl	8002568 <HAL_TIM_Base_MspInit>
 800ecfe:	e780      	b.n	800ec02 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800ed00:	2001      	movs	r0, #1
}
 800ed02:	4770      	bx	lr
 800ed04:	40010000 	.word	0x40010000

0800ed08 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800ed08:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ed0c:	2b01      	cmp	r3, #1
 800ed0e:	d12f      	bne.n	800ed70 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ed10:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ed12:	4919      	ldr	r1, [pc, #100]	; (800ed78 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ed14:	2202      	movs	r2, #2
 800ed16:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ed1a:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ed1c:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ed1e:	f042 0201 	orr.w	r2, r2, #1
 800ed22:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ed24:	d019      	beq.n	800ed5a <HAL_TIM_Base_Start_IT+0x52>
 800ed26:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ed2a:	d016      	beq.n	800ed5a <HAL_TIM_Base_Start_IT+0x52>
 800ed2c:	4a13      	ldr	r2, [pc, #76]	; (800ed7c <HAL_TIM_Base_Start_IT+0x74>)
 800ed2e:	4293      	cmp	r3, r2
 800ed30:	d013      	beq.n	800ed5a <HAL_TIM_Base_Start_IT+0x52>
 800ed32:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ed36:	4293      	cmp	r3, r2
 800ed38:	d00f      	beq.n	800ed5a <HAL_TIM_Base_Start_IT+0x52>
 800ed3a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ed3e:	4293      	cmp	r3, r2
 800ed40:	d00b      	beq.n	800ed5a <HAL_TIM_Base_Start_IT+0x52>
 800ed42:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ed46:	4293      	cmp	r3, r2
 800ed48:	d007      	beq.n	800ed5a <HAL_TIM_Base_Start_IT+0x52>
 800ed4a:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ed4e:	4293      	cmp	r3, r2
 800ed50:	d003      	beq.n	800ed5a <HAL_TIM_Base_Start_IT+0x52>
 800ed52:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ed56:	4293      	cmp	r3, r2
 800ed58:	d104      	bne.n	800ed64 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ed5a:	689a      	ldr	r2, [r3, #8]
 800ed5c:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ed60:	2a06      	cmp	r2, #6
 800ed62:	d007      	beq.n	800ed74 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800ed64:	681a      	ldr	r2, [r3, #0]
 800ed66:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800ed6a:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800ed6c:	601a      	str	r2, [r3, #0]
 800ed6e:	4770      	bx	lr
    return HAL_ERROR;
 800ed70:	2001      	movs	r0, #1
 800ed72:	4770      	bx	lr
  return HAL_OK;
 800ed74:	2000      	movs	r0, #0
}
 800ed76:	4770      	bx	lr
 800ed78:	40010000 	.word	0x40010000
 800ed7c:	40000400 	.word	0x40000400

0800ed80 <HAL_TIM_PWM_MspInit>:
 800ed80:	4770      	bx	lr
 800ed82:	bf00      	nop

0800ed84 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800ed84:	2800      	cmp	r0, #0
 800ed86:	f000 8087 	beq.w	800ee98 <HAL_TIM_PWM_Init+0x114>
{
 800ed8a:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800ed8c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ed90:	4604      	mov	r4, r0
 800ed92:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ed96:	2b00      	cmp	r3, #0
 800ed98:	d079      	beq.n	800ee8e <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ed9a:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed9c:	493f      	ldr	r1, [pc, #252]	; (800ee9c <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ed9e:	2302      	movs	r3, #2
 800eda0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800eda4:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800eda6:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800eda8:	d05d      	beq.n	800ee66 <HAL_TIM_PWM_Init+0xe2>
 800edaa:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800edae:	d031      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x90>
 800edb0:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800edb4:	428a      	cmp	r2, r1
 800edb6:	d02d      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x90>
 800edb8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edbc:	428a      	cmp	r2, r1
 800edbe:	d029      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x90>
 800edc0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edc4:	428a      	cmp	r2, r1
 800edc6:	d025      	beq.n	800ee14 <HAL_TIM_PWM_Init+0x90>
 800edc8:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800edcc:	428a      	cmp	r2, r1
 800edce:	d04a      	beq.n	800ee66 <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800edd0:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800edd4:	428a      	cmp	r2, r1
 800edd6:	d021      	beq.n	800ee1c <HAL_TIM_PWM_Init+0x98>
 800edd8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eddc:	428a      	cmp	r2, r1
 800edde:	d01d      	beq.n	800ee1c <HAL_TIM_PWM_Init+0x98>
 800ede0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ede4:	428a      	cmp	r2, r1
 800ede6:	d019      	beq.n	800ee1c <HAL_TIM_PWM_Init+0x98>
 800ede8:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800edec:	428a      	cmp	r2, r1
 800edee:	d015      	beq.n	800ee1c <HAL_TIM_PWM_Init+0x98>
 800edf0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edf4:	428a      	cmp	r2, r1
 800edf6:	d011      	beq.n	800ee1c <HAL_TIM_PWM_Init+0x98>
 800edf8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edfc:	428a      	cmp	r2, r1
 800edfe:	d00d      	beq.n	800ee1c <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee00:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee02:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee04:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ee08:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800ee0a:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800ee0c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee0e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee10:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ee12:	e010      	b.n	800ee36 <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800ee14:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ee16:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ee1a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee1c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee1e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ee20:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee24:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee26:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee2a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee2c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ee2e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ee30:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee32:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee34:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800ee36:	2301      	movs	r3, #1
 800ee38:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ee3a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ee3e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ee42:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ee46:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ee4a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ee4e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ee52:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ee56:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ee5a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ee5e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ee62:	2000      	movs	r0, #0
}
 800ee64:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ee66:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee68:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ee6a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ee6e:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ee70:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee74:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee76:	69a1      	ldr	r1, [r4, #24]
 800ee78:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ee7c:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ee7e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee80:	68e3      	ldr	r3, [r4, #12]
 800ee82:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee84:	6863      	ldr	r3, [r4, #4]
 800ee86:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ee88:	6963      	ldr	r3, [r4, #20]
 800ee8a:	6313      	str	r3, [r2, #48]	; 0x30
 800ee8c:	e7d3      	b.n	800ee36 <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ee8e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800ee92:	f7ff ff75 	bl	800ed80 <HAL_TIM_PWM_MspInit>
 800ee96:	e780      	b.n	800ed9a <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800ee98:	2001      	movs	r0, #1
}
 800ee9a:	4770      	bx	lr
 800ee9c:	40010000 	.word	0x40010000

0800eea0 <HAL_TIM_PWM_Start>:
 800eea0:	2900      	cmp	r1, #0
 800eea2:	d13c      	bne.n	800ef1e <HAL_TIM_PWM_Start+0x7e>
 800eea4:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800eea8:	2b01      	cmp	r3, #1
 800eeaa:	d140      	bne.n	800ef2e <HAL_TIM_PWM_Start+0x8e>
 800eeac:	2302      	movs	r3, #2
 800eeae:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800eeb2:	6803      	ldr	r3, [r0, #0]
 800eeb4:	f001 011f 	and.w	r1, r1, #31
 800eeb8:	6a18      	ldr	r0, [r3, #32]
 800eeba:	2201      	movs	r2, #1
 800eebc:	408a      	lsls	r2, r1
 800eebe:	ea20 0002 	bic.w	r0, r0, r2
 800eec2:	6218      	str	r0, [r3, #32]
 800eec4:	6a18      	ldr	r0, [r3, #32]
 800eec6:	492c      	ldr	r1, [pc, #176]	; (800ef78 <HAL_TIM_PWM_Start+0xd8>)
 800eec8:	4302      	orrs	r2, r0
 800eeca:	428b      	cmp	r3, r1
 800eecc:	621a      	str	r2, [r3, #32]
 800eece:	d038      	beq.n	800ef42 <HAL_TIM_PWM_Start+0xa2>
 800eed0:	4a2a      	ldr	r2, [pc, #168]	; (800ef7c <HAL_TIM_PWM_Start+0xdc>)
 800eed2:	4293      	cmp	r3, r2
 800eed4:	d035      	beq.n	800ef42 <HAL_TIM_PWM_Start+0xa2>
 800eed6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800eeda:	d015      	beq.n	800ef08 <HAL_TIM_PWM_Start+0x68>
 800eedc:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800eee0:	428b      	cmp	r3, r1
 800eee2:	d011      	beq.n	800ef08 <HAL_TIM_PWM_Start+0x68>
 800eee4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eee8:	428b      	cmp	r3, r1
 800eeea:	d00d      	beq.n	800ef08 <HAL_TIM_PWM_Start+0x68>
 800eeec:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eef0:	428b      	cmp	r3, r1
 800eef2:	d009      	beq.n	800ef08 <HAL_TIM_PWM_Start+0x68>
 800eef4:	4293      	cmp	r3, r2
 800eef6:	d007      	beq.n	800ef08 <HAL_TIM_PWM_Start+0x68>
 800eef8:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800eefc:	4293      	cmp	r3, r2
 800eefe:	d003      	beq.n	800ef08 <HAL_TIM_PWM_Start+0x68>
 800ef00:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ef04:	4293      	cmp	r3, r2
 800ef06:	d104      	bne.n	800ef12 <HAL_TIM_PWM_Start+0x72>
 800ef08:	689a      	ldr	r2, [r3, #8]
 800ef0a:	f002 0207 	and.w	r2, r2, #7
 800ef0e:	2a06      	cmp	r2, #6
 800ef10:	d020      	beq.n	800ef54 <HAL_TIM_PWM_Start+0xb4>
 800ef12:	681a      	ldr	r2, [r3, #0]
 800ef14:	f042 0201 	orr.w	r2, r2, #1
 800ef18:	2000      	movs	r0, #0
 800ef1a:	601a      	str	r2, [r3, #0]
 800ef1c:	4770      	bx	lr
 800ef1e:	2904      	cmp	r1, #4
 800ef20:	d022      	beq.n	800ef68 <HAL_TIM_PWM_Start+0xc8>
 800ef22:	2908      	cmp	r1, #8
 800ef24:	d018      	beq.n	800ef58 <HAL_TIM_PWM_Start+0xb8>
 800ef26:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800ef2a:	2b01      	cmp	r3, #1
 800ef2c:	d001      	beq.n	800ef32 <HAL_TIM_PWM_Start+0x92>
 800ef2e:	2001      	movs	r0, #1
 800ef30:	4770      	bx	lr
 800ef32:	2904      	cmp	r1, #4
 800ef34:	d01c      	beq.n	800ef70 <HAL_TIM_PWM_Start+0xd0>
 800ef36:	2908      	cmp	r1, #8
 800ef38:	d012      	beq.n	800ef60 <HAL_TIM_PWM_Start+0xc0>
 800ef3a:	2302      	movs	r3, #2
 800ef3c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800ef40:	e7b7      	b.n	800eeb2 <HAL_TIM_PWM_Start+0x12>
 800ef42:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ef44:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ef48:	645a      	str	r2, [r3, #68]	; 0x44
 800ef4a:	689a      	ldr	r2, [r3, #8]
 800ef4c:	f002 0207 	and.w	r2, r2, #7
 800ef50:	2a06      	cmp	r2, #6
 800ef52:	d1de      	bne.n	800ef12 <HAL_TIM_PWM_Start+0x72>
 800ef54:	2000      	movs	r0, #0
 800ef56:	4770      	bx	lr
 800ef58:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800ef5c:	2b01      	cmp	r3, #1
 800ef5e:	d1e6      	bne.n	800ef2e <HAL_TIM_PWM_Start+0x8e>
 800ef60:	2302      	movs	r3, #2
 800ef62:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ef66:	e7a4      	b.n	800eeb2 <HAL_TIM_PWM_Start+0x12>
 800ef68:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800ef6c:	2b01      	cmp	r3, #1
 800ef6e:	d1de      	bne.n	800ef2e <HAL_TIM_PWM_Start+0x8e>
 800ef70:	2302      	movs	r3, #2
 800ef72:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800ef76:	e79c      	b.n	800eeb2 <HAL_TIM_PWM_Start+0x12>
 800ef78:	40010000 	.word	0x40010000
 800ef7c:	40010400 	.word	0x40010400

0800ef80 <HAL_TIM_PWM_Stop>:
 800ef80:	6803      	ldr	r3, [r0, #0]
 800ef82:	b410      	push	{r4}
 800ef84:	6a1a      	ldr	r2, [r3, #32]
 800ef86:	f001 041f 	and.w	r4, r1, #31
 800ef8a:	f04f 0c01 	mov.w	ip, #1
 800ef8e:	fa0c fc04 	lsl.w	ip, ip, r4
 800ef92:	ea22 020c 	bic.w	r2, r2, ip
 800ef96:	621a      	str	r2, [r3, #32]
 800ef98:	4a20      	ldr	r2, [pc, #128]	; (800f01c <HAL_TIM_PWM_Stop+0x9c>)
 800ef9a:	6a1c      	ldr	r4, [r3, #32]
 800ef9c:	621c      	str	r4, [r3, #32]
 800ef9e:	4293      	cmp	r3, r2
 800efa0:	d015      	beq.n	800efce <HAL_TIM_PWM_Stop+0x4e>
 800efa2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800efa6:	4293      	cmp	r3, r2
 800efa8:	d011      	beq.n	800efce <HAL_TIM_PWM_Stop+0x4e>
 800efaa:	6a1c      	ldr	r4, [r3, #32]
 800efac:	f241 1211 	movw	r2, #4369	; 0x1111
 800efb0:	4214      	tst	r4, r2
 800efb2:	d104      	bne.n	800efbe <HAL_TIM_PWM_Stop+0x3e>
 800efb4:	6a1c      	ldr	r4, [r3, #32]
 800efb6:	f240 4244 	movw	r2, #1092	; 0x444
 800efba:	4214      	tst	r4, r2
 800efbc:	d022      	beq.n	800f004 <HAL_TIM_PWM_Stop+0x84>
 800efbe:	2301      	movs	r3, #1
 800efc0:	b9a1      	cbnz	r1, 800efec <HAL_TIM_PWM_Stop+0x6c>
 800efc2:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800efc6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800efca:	2000      	movs	r0, #0
 800efcc:	4770      	bx	lr
 800efce:	6a1c      	ldr	r4, [r3, #32]
 800efd0:	f241 1211 	movw	r2, #4369	; 0x1111
 800efd4:	4214      	tst	r4, r2
 800efd6:	d1e8      	bne.n	800efaa <HAL_TIM_PWM_Stop+0x2a>
 800efd8:	6a1c      	ldr	r4, [r3, #32]
 800efda:	f240 4244 	movw	r2, #1092	; 0x444
 800efde:	4214      	tst	r4, r2
 800efe0:	d1e3      	bne.n	800efaa <HAL_TIM_PWM_Stop+0x2a>
 800efe2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800efe4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800efe8:	645a      	str	r2, [r3, #68]	; 0x44
 800efea:	e7de      	b.n	800efaa <HAL_TIM_PWM_Stop+0x2a>
 800efec:	2904      	cmp	r1, #4
 800efee:	d00e      	beq.n	800f00e <HAL_TIM_PWM_Stop+0x8e>
 800eff0:	2908      	cmp	r1, #8
 800eff2:	bf0c      	ite	eq
 800eff4:	f880 3040 	strbeq.w	r3, [r0, #64]	; 0x40
 800eff8:	f880 3041 	strbne.w	r3, [r0, #65]	; 0x41
 800effc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f000:	2000      	movs	r0, #0
 800f002:	4770      	bx	lr
 800f004:	681a      	ldr	r2, [r3, #0]
 800f006:	f022 0201 	bic.w	r2, r2, #1
 800f00a:	601a      	str	r2, [r3, #0]
 800f00c:	e7d7      	b.n	800efbe <HAL_TIM_PWM_Stop+0x3e>
 800f00e:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800f012:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f016:	2000      	movs	r0, #0
 800f018:	4770      	bx	lr
 800f01a:	bf00      	nop
 800f01c:	40010000 	.word	0x40010000

0800f020 <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800f020:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f024:	2b01      	cmp	r3, #1
 800f026:	f000 80d2 	beq.w	800f1ce <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800f02a:	2301      	movs	r3, #1
{
 800f02c:	b570      	push	{r4, r5, r6, lr}
 800f02e:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800f030:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800f034:	2a0c      	cmp	r2, #12
 800f036:	d808      	bhi.n	800f04a <HAL_TIM_PWM_ConfigChannel+0x2a>
 800f038:	e8df f002 	tbb	[pc, r2]
 800f03c:	0707073e 	.word	0x0707073e
 800f040:	0707076b 	.word	0x0707076b
 800f044:	0707079b 	.word	0x0707079b
 800f048:	0c          	.byte	0x0c
 800f049:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800f04a:	2300      	movs	r3, #0
 800f04c:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800f050:	2001      	movs	r0, #1
}
 800f052:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800f054:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f056:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800f058:	6a1a      	ldr	r2, [r3, #32]
 800f05a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800f05e:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f060:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f062:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f064:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800f066:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f06a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f06e:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800f070:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f074:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800f078:	4d70      	ldr	r5, [pc, #448]	; (800f23c <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f07a:	42ab      	cmp	r3, r5
 800f07c:	f000 80c8 	beq.w	800f210 <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800f080:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f084:	42ab      	cmp	r3, r5
 800f086:	f000 80c3 	beq.w	800f210 <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800f08a:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800f08c:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800f08e:	6848      	ldr	r0, [r1, #4]
 800f090:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800f092:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f094:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f096:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f098:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f09c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800f09e:	69da      	ldr	r2, [r3, #28]
 800f0a0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f0a4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f0a6:	69da      	ldr	r2, [r3, #28]
 800f0a8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f0ac:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f0ae:	2300      	movs	r3, #0
 800f0b0:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f0b4:	2000      	movs	r0, #0
}
 800f0b6:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800f0b8:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f0ba:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f0bc:	6a1a      	ldr	r2, [r3, #32]
 800f0be:	f022 0201 	bic.w	r2, r2, #1
 800f0c2:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f0c4:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f0c6:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f0c8:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800f0ca:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f0ce:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800f0d0:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800f0d2:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800f0d6:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800f0d8:	4d58      	ldr	r5, [pc, #352]	; (800f23c <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f0da:	42ab      	cmp	r3, r5
 800f0dc:	d079      	beq.n	800f1d2 <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800f0de:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f0e2:	42ab      	cmp	r3, r5
 800f0e4:	d075      	beq.n	800f1d2 <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800f0e6:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f0e8:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800f0ea:	6848      	ldr	r0, [r1, #4]
 800f0ec:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800f0ee:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f0f0:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f0f2:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f0f4:	f042 0208 	orr.w	r2, r2, #8
 800f0f8:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800f0fa:	699a      	ldr	r2, [r3, #24]
 800f0fc:	f022 0204 	bic.w	r2, r2, #4
 800f100:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f102:	699a      	ldr	r2, [r3, #24]
 800f104:	430a      	orrs	r2, r1
 800f106:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f108:	2300      	movs	r3, #0
 800f10a:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f10e:	2000      	movs	r0, #0
}
 800f110:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800f112:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f114:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f116:	6a1a      	ldr	r2, [r3, #32]
 800f118:	f022 0210 	bic.w	r2, r2, #16
 800f11c:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f11e:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f120:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f122:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800f124:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f128:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f12c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800f12e:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f132:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800f136:	4d41      	ldr	r5, [pc, #260]	; (800f23c <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f138:	42ab      	cmp	r3, r5
 800f13a:	d059      	beq.n	800f1f0 <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800f13c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f140:	42ab      	cmp	r3, r5
 800f142:	d055      	beq.n	800f1f0 <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800f144:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f146:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800f148:	6848      	ldr	r0, [r1, #4]
 800f14a:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800f14c:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f14e:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f150:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f152:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f156:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800f158:	699a      	ldr	r2, [r3, #24]
 800f15a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f15e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f160:	699a      	ldr	r2, [r3, #24]
 800f162:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f166:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f168:	2300      	movs	r3, #0
 800f16a:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f16e:	2000      	movs	r0, #0
}
 800f170:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800f172:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f174:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800f176:	6a1a      	ldr	r2, [r3, #32]
 800f178:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800f17c:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f17e:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f180:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f182:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800f184:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f188:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f18a:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800f18c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f190:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800f194:	4d29      	ldr	r5, [pc, #164]	; (800f23c <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f196:	42ab      	cmp	r3, r5
 800f198:	d040      	beq.n	800f21c <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800f19a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f19e:	42ab      	cmp	r3, r5
 800f1a0:	d03c      	beq.n	800f21c <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800f1a2:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800f1a4:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800f1a6:	6848      	ldr	r0, [r1, #4]
 800f1a8:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800f1aa:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f1ac:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f1ae:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f1b0:	f042 0208 	orr.w	r2, r2, #8
 800f1b4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800f1b6:	69da      	ldr	r2, [r3, #28]
 800f1b8:	f022 0204 	bic.w	r2, r2, #4
 800f1bc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f1be:	69da      	ldr	r2, [r3, #28]
 800f1c0:	430a      	orrs	r2, r1
 800f1c2:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f1c4:	2300      	movs	r3, #0
 800f1c6:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f1ca:	2000      	movs	r0, #0
}
 800f1cc:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800f1ce:	2002      	movs	r0, #2
}
 800f1d0:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800f1d2:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800f1d4:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800f1d8:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1da:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800f1de:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1e2:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800f1e6:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1ea:	ea4e 0404 	orr.w	r4, lr, r4
 800f1ee:	e77a      	b.n	800f0e6 <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f1f0:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800f1f2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f1f6:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f1fa:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800f1fe:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f202:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800f206:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f20a:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800f20e:	e799      	b.n	800f144 <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f210:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800f212:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f216:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800f21a:	e736      	b.n	800f08a <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f21c:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800f21e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f222:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f226:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800f22a:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f22e:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800f232:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f236:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800f23a:	e7b2      	b.n	800f1a2 <HAL_TIM_PWM_ConfigChannel+0x182>
 800f23c:	40010000 	.word	0x40010000

0800f240 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800f240:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f244:	2b01      	cmp	r3, #1
 800f246:	d075      	beq.n	800f334 <HAL_TIM_ConfigClockSource+0xf4>
 800f248:	4602      	mov	r2, r0
{
 800f24a:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f24c:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800f24e:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f250:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f254:	2001      	movs	r0, #1
 800f256:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f25a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f25c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800f260:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800f264:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800f266:	680b      	ldr	r3, [r1, #0]
 800f268:	2b60      	cmp	r3, #96	; 0x60
 800f26a:	d065      	beq.n	800f338 <HAL_TIM_ConfigClockSource+0xf8>
 800f26c:	d824      	bhi.n	800f2b8 <HAL_TIM_ConfigClockSource+0x78>
 800f26e:	2b40      	cmp	r3, #64	; 0x40
 800f270:	d07c      	beq.n	800f36c <HAL_TIM_ConfigClockSource+0x12c>
 800f272:	d94b      	bls.n	800f30c <HAL_TIM_ConfigClockSource+0xcc>
 800f274:	2b50      	cmp	r3, #80	; 0x50
 800f276:	d117      	bne.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f278:	684b      	ldr	r3, [r1, #4]
 800f27a:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800f27c:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f27e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f282:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f284:	6a23      	ldr	r3, [r4, #32]
 800f286:	f023 0301 	bic.w	r3, r3, #1
 800f28a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f28c:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f28e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f292:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800f296:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f298:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800f29a:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800f29c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f2a0:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800f2a4:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f2a6:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800f2a8:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800f2aa:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f2ac:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f2b0:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800f2b4:	bc30      	pop	{r4, r5}
 800f2b6:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800f2b8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f2bc:	d038      	beq.n	800f330 <HAL_TIM_ConfigClockSource+0xf0>
 800f2be:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f2c2:	d110      	bne.n	800f2e6 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2c4:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f2c8:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2ca:	432b      	orrs	r3, r5
 800f2cc:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f2ce:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2d2:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f2d6:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f2d8:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f2da:	68a3      	ldr	r3, [r4, #8]
 800f2dc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800f2e0:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f2e2:	60a3      	str	r3, [r4, #8]
      break;
 800f2e4:	e7e0      	b.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f2e6:	2b70      	cmp	r3, #112	; 0x70
 800f2e8:	d1de      	bne.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2ea:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f2ee:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2f0:	432b      	orrs	r3, r5
 800f2f2:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f2f4:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2f8:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f2fc:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800f2fe:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800f300:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800f302:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800f306:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800f308:	60a3      	str	r3, [r4, #8]
      break;
 800f30a:	e7cd      	b.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f30c:	2b20      	cmp	r3, #32
 800f30e:	d002      	beq.n	800f316 <HAL_TIM_ConfigClockSource+0xd6>
 800f310:	d90a      	bls.n	800f328 <HAL_TIM_ConfigClockSource+0xe8>
 800f312:	2b30      	cmp	r3, #48	; 0x30
 800f314:	d1c8      	bne.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800f316:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f318:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f31c:	430b      	orrs	r3, r1
 800f31e:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800f322:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f324:	60a3      	str	r3, [r4, #8]
}
 800f326:	e7bf      	b.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f328:	f033 0110 	bics.w	r1, r3, #16
 800f32c:	d1bc      	bne.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
 800f32e:	e7f2      	b.n	800f316 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800f330:	2000      	movs	r0, #0
 800f332:	e7b9      	b.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800f334:	2002      	movs	r0, #2
}
 800f336:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f338:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f33a:	6848      	ldr	r0, [r1, #4]
 800f33c:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f33e:	f023 0310 	bic.w	r3, r3, #16
 800f342:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f344:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f346:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f348:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f34c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800f350:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f354:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800f358:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f35a:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f35c:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f35e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f362:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800f366:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f368:	60a3      	str	r3, [r4, #8]
}
 800f36a:	e79d      	b.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f36c:	684b      	ldr	r3, [r1, #4]
 800f36e:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800f370:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f372:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f376:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f378:	6a23      	ldr	r3, [r4, #32]
 800f37a:	f023 0301 	bic.w	r3, r3, #1
 800f37e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f380:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f382:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f386:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f38a:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f38c:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f38e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f390:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f394:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800f398:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f39a:	60a3      	str	r3, [r4, #8]
}
 800f39c:	e784      	b.n	800f2a8 <HAL_TIM_ConfigClockSource+0x68>
 800f39e:	bf00      	nop

0800f3a0 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800f3a0:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800f3a4:	2a01      	cmp	r2, #1
 800f3a6:	d050      	beq.n	800f44a <HAL_TIM_SlaveConfigSynchro+0xaa>
 800f3a8:	4603      	mov	r3, r0
{
 800f3aa:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f3ac:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800f3ae:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f3b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f3b4:	2001      	movs	r0, #1
 800f3b6:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f3ba:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f3bc:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f3be:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f3c0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f3c4:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800f3c6:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f3ca:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800f3cc:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800f3ce:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800f3d0:	d060      	beq.n	800f494 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800f3d2:	d90f      	bls.n	800f3f4 <HAL_TIM_SlaveConfigSynchro+0x54>
 800f3d4:	2860      	cmp	r0, #96	; 0x60
 800f3d6:	d03a      	beq.n	800f44e <HAL_TIM_SlaveConfigSynchro+0xae>
 800f3d8:	2870      	cmp	r0, #112	; 0x70
 800f3da:	d10e      	bne.n	800f3fa <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3dc:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800f3e0:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3e2:	432a      	orrs	r2, r5
 800f3e4:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f3e6:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3ea:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800f3ee:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800f3f0:	60a2      	str	r2, [r4, #8]
 800f3f2:	e00f      	b.n	800f414 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800f3f4:	2840      	cmp	r0, #64	; 0x40
 800f3f6:	d03d      	beq.n	800f474 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800f3f8:	d907      	bls.n	800f40a <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800f3fa:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f3fc:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f3fe:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f402:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800f406:	bc30      	pop	{r4, r5}
 800f408:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f40a:	2820      	cmp	r0, #32
 800f40c:	d002      	beq.n	800f414 <HAL_TIM_SlaveConfigSynchro+0x74>
 800f40e:	d912      	bls.n	800f436 <HAL_TIM_SlaveConfigSynchro+0x96>
 800f410:	2830      	cmp	r0, #48	; 0x30
 800f412:	d1f2      	bne.n	800f3fa <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800f414:	68e2      	ldr	r2, [r4, #12]
 800f416:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f41a:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f41c:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800f41e:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800f420:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f422:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800f426:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800f428:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f42c:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800f430:	4608      	mov	r0, r1
}
 800f432:	bc30      	pop	{r4, r5}
 800f434:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f436:	f030 0210 	bics.w	r2, r0, #16
 800f43a:	d0eb      	beq.n	800f414 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800f43c:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f43e:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f440:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f444:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800f448:	e7dd      	b.n	800f406 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800f44a:	2002      	movs	r0, #2
}
 800f44c:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f44e:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f450:	6888      	ldr	r0, [r1, #8]
 800f452:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f454:	f022 0210 	bic.w	r2, r2, #16
 800f458:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f45a:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f45c:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f45e:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f462:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f466:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800f46a:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800f46e:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f470:	6222      	str	r2, [r4, #32]
 800f472:	e7cf      	b.n	800f414 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800f474:	2d05      	cmp	r5, #5
 800f476:	d0c0      	beq.n	800f3fa <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800f478:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f47a:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f47c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f47e:	f022 0201 	bic.w	r2, r2, #1
 800f482:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800f484:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f486:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f48a:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800f48e:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800f490:	6220      	str	r0, [r4, #32]
      break;
 800f492:	e7bf      	b.n	800f414 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f494:	688a      	ldr	r2, [r1, #8]
 800f496:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800f498:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f49a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f49e:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f4a0:	6a22      	ldr	r2, [r4, #32]
 800f4a2:	f022 0201 	bic.w	r2, r2, #1
 800f4a6:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f4a8:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f4aa:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f4ae:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f4b2:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800f4b4:	6221      	str	r1, [r4, #32]
 800f4b6:	e7ad      	b.n	800f414 <HAL_TIM_SlaveConfigSynchro+0x74>

0800f4b8 <HAL_TIM_OC_DelayElapsedCallback>:
 800f4b8:	4770      	bx	lr
 800f4ba:	bf00      	nop

0800f4bc <HAL_TIM_IC_CaptureCallback>:
 800f4bc:	4770      	bx	lr
 800f4be:	bf00      	nop

0800f4c0 <HAL_TIM_PWM_PulseFinishedCallback>:
 800f4c0:	4770      	bx	lr
 800f4c2:	bf00      	nop

0800f4c4 <HAL_TIM_TriggerCallback>:
 800f4c4:	4770      	bx	lr
 800f4c6:	bf00      	nop

0800f4c8 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f4c8:	6803      	ldr	r3, [r0, #0]
 800f4ca:	691a      	ldr	r2, [r3, #16]
 800f4cc:	0791      	lsls	r1, r2, #30
{
 800f4ce:	b510      	push	{r4, lr}
 800f4d0:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f4d2:	d502      	bpl.n	800f4da <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800f4d4:	68da      	ldr	r2, [r3, #12]
 800f4d6:	0792      	lsls	r2, r2, #30
 800f4d8:	d45f      	bmi.n	800f59a <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f4da:	691a      	ldr	r2, [r3, #16]
 800f4dc:	0750      	lsls	r0, r2, #29
 800f4de:	d502      	bpl.n	800f4e6 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800f4e0:	68da      	ldr	r2, [r3, #12]
 800f4e2:	0751      	lsls	r1, r2, #29
 800f4e4:	d446      	bmi.n	800f574 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f4e6:	691a      	ldr	r2, [r3, #16]
 800f4e8:	0712      	lsls	r2, r2, #28
 800f4ea:	d502      	bpl.n	800f4f2 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800f4ec:	68da      	ldr	r2, [r3, #12]
 800f4ee:	0710      	lsls	r0, r2, #28
 800f4f0:	d42e      	bmi.n	800f550 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f4f2:	691a      	ldr	r2, [r3, #16]
 800f4f4:	06d2      	lsls	r2, r2, #27
 800f4f6:	d502      	bpl.n	800f4fe <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800f4f8:	68da      	ldr	r2, [r3, #12]
 800f4fa:	06d0      	lsls	r0, r2, #27
 800f4fc:	d418      	bmi.n	800f530 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f4fe:	691a      	ldr	r2, [r3, #16]
 800f500:	07d1      	lsls	r1, r2, #31
 800f502:	d502      	bpl.n	800f50a <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800f504:	68da      	ldr	r2, [r3, #12]
 800f506:	07d2      	lsls	r2, r2, #31
 800f508:	d45d      	bmi.n	800f5c6 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f50a:	691a      	ldr	r2, [r3, #16]
 800f50c:	0610      	lsls	r0, r2, #24
 800f50e:	d502      	bpl.n	800f516 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800f510:	68da      	ldr	r2, [r3, #12]
 800f512:	0611      	lsls	r1, r2, #24
 800f514:	d45f      	bmi.n	800f5d6 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f516:	691a      	ldr	r2, [r3, #16]
 800f518:	0652      	lsls	r2, r2, #25
 800f51a:	d502      	bpl.n	800f522 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800f51c:	68da      	ldr	r2, [r3, #12]
 800f51e:	0650      	lsls	r0, r2, #25
 800f520:	d461      	bmi.n	800f5e6 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f522:	691a      	ldr	r2, [r3, #16]
 800f524:	0691      	lsls	r1, r2, #26
 800f526:	d502      	bpl.n	800f52e <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800f528:	68da      	ldr	r2, [r3, #12]
 800f52a:	0692      	lsls	r2, r2, #26
 800f52c:	d443      	bmi.n	800f5b6 <HAL_TIM_IRQHandler+0xee>
}
 800f52e:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f530:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f534:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f536:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f538:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f53a:	69db      	ldr	r3, [r3, #28]
 800f53c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f540:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f542:	d064      	beq.n	800f60e <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800f544:	f7ff ffba 	bl	800f4bc <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f548:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f54a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f54c:	7722      	strb	r2, [r4, #28]
 800f54e:	e7d6      	b.n	800f4fe <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f550:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f554:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f556:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f558:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f55a:	69db      	ldr	r3, [r3, #28]
 800f55c:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800f55e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f560:	d152      	bne.n	800f608 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f562:	f7ff ffa9 	bl	800f4b8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f566:	4620      	mov	r0, r4
 800f568:	f7ff ffaa 	bl	800f4c0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f56c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f56e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f570:	7722      	strb	r2, [r4, #28]
 800f572:	e7be      	b.n	800f4f2 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f574:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f578:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f57a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f57c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f57e:	699b      	ldr	r3, [r3, #24]
 800f580:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f584:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f586:	d13c      	bne.n	800f602 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f588:	f7ff ff96 	bl	800f4b8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f58c:	4620      	mov	r0, r4
 800f58e:	f7ff ff97 	bl	800f4c0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f592:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f594:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f596:	7722      	strb	r2, [r4, #28]
 800f598:	e7a5      	b.n	800f4e6 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f59a:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f59e:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f5a0:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f5a2:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800f5a4:	699b      	ldr	r3, [r3, #24]
 800f5a6:	079b      	lsls	r3, r3, #30
 800f5a8:	d025      	beq.n	800f5f6 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800f5aa:	f7ff ff87 	bl	800f4bc <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f5ae:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f5b0:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f5b2:	7722      	strb	r2, [r4, #28]
 800f5b4:	e791      	b.n	800f4da <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f5b6:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800f5ba:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f5bc:	611a      	str	r2, [r3, #16]
}
 800f5be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800f5c2:	f000 b86b 	b.w	800f69c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800f5c6:	f06f 0201 	mvn.w	r2, #1
 800f5ca:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800f5cc:	4620      	mov	r0, r4
 800f5ce:	f7f2 fcab 	bl	8001f28 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f5d2:	6823      	ldr	r3, [r4, #0]
 800f5d4:	e799      	b.n	800f50a <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800f5d6:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800f5da:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800f5dc:	4620      	mov	r0, r4
 800f5de:	f000 f85f 	bl	800f6a0 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f5e2:	6823      	ldr	r3, [r4, #0]
 800f5e4:	e797      	b.n	800f516 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800f5e6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800f5ea:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800f5ec:	4620      	mov	r0, r4
 800f5ee:	f7ff ff69 	bl	800f4c4 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f5f2:	6823      	ldr	r3, [r4, #0]
 800f5f4:	e795      	b.n	800f522 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800f5f6:	f7ff ff5f 	bl	800f4b8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f5fa:	4620      	mov	r0, r4
 800f5fc:	f7ff ff60 	bl	800f4c0 <HAL_TIM_PWM_PulseFinishedCallback>
 800f600:	e7d5      	b.n	800f5ae <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800f602:	f7ff ff5b 	bl	800f4bc <HAL_TIM_IC_CaptureCallback>
 800f606:	e7c4      	b.n	800f592 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800f608:	f7ff ff58 	bl	800f4bc <HAL_TIM_IC_CaptureCallback>
 800f60c:	e7ae      	b.n	800f56c <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f60e:	f7ff ff53 	bl	800f4b8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f612:	4620      	mov	r0, r4
 800f614:	f7ff ff54 	bl	800f4c0 <HAL_TIM_PWM_PulseFinishedCallback>
 800f618:	e796      	b.n	800f548 <HAL_TIM_IRQHandler+0x80>
 800f61a:	bf00      	nop

0800f61c <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800f61c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f620:	2b01      	cmp	r3, #1
 800f622:	d037      	beq.n	800f694 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800f624:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f626:	2202      	movs	r2, #2
{
 800f628:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f62a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800f62e:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f630:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800f632:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800f634:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f638:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800f63a:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f63c:	4a16      	ldr	r2, [pc, #88]	; (800f698 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800f63e:	4293      	cmp	r3, r2
 800f640:	d01a      	beq.n	800f678 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f642:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f646:	d017      	beq.n	800f678 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f648:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800f64c:	4293      	cmp	r3, r2
 800f64e:	d013      	beq.n	800f678 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f650:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f654:	4293      	cmp	r3, r2
 800f656:	d00f      	beq.n	800f678 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f658:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f65c:	4293      	cmp	r3, r2
 800f65e:	d00b      	beq.n	800f678 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f660:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800f664:	4293      	cmp	r3, r2
 800f666:	d007      	beq.n	800f678 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f668:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800f66c:	4293      	cmp	r3, r2
 800f66e:	d003      	beq.n	800f678 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f670:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800f674:	4293      	cmp	r3, r2
 800f676:	d104      	bne.n	800f682 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f678:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800f67a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f67e:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800f680:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800f682:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f684:	2201      	movs	r2, #1
 800f686:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f68a:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800f68e:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800f690:	4618      	mov	r0, r3
}
 800f692:	4770      	bx	lr
  __HAL_LOCK(htim);
 800f694:	2002      	movs	r0, #2
}
 800f696:	4770      	bx	lr
 800f698:	40010000 	.word	0x40010000

0800f69c <HAL_TIMEx_CommutCallback>:
 800f69c:	4770      	bx	lr
 800f69e:	bf00      	nop

0800f6a0 <HAL_TIMEx_BreakCallback>:
 800f6a0:	4770      	bx	lr
 800f6a2:	bf00      	nop

0800f6a4 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f6a4:	680b      	ldr	r3, [r1, #0]
{
 800f6a6:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f6a8:	b9d3      	cbnz	r3, 800f6e0 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6aa:	6803      	ldr	r3, [r0, #0]
 800f6ac:	684c      	ldr	r4, [r1, #4]
 800f6ae:	688a      	ldr	r2, [r1, #8]
 800f6b0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f6b4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f6b8:	4323      	orrs	r3, r4
 800f6ba:	4313      	orrs	r3, r2
 800f6bc:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800f6c0:	4323      	orrs	r3, r4
 800f6c2:	4313      	orrs	r3, r2
 800f6c4:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800f6c8:	4323      	orrs	r3, r4
 800f6ca:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800f6ce:	4313      	orrs	r3, r2
 800f6d0:	432b      	orrs	r3, r5
 800f6d2:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f6d4:	4323      	orrs	r3, r4
 800f6d6:	4313      	orrs	r3, r2
 800f6d8:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800f6da:	bc30      	pop	{r4, r5}
 800f6dc:	2000      	movs	r0, #0
 800f6de:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6e0:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800f6e4:	6803      	ldr	r3, [r0, #0]
 800f6e6:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800f6ea:	4323      	orrs	r3, r4
 800f6ec:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800f6ee:	4313      	orrs	r3, r2
 800f6f0:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f6f2:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6f4:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f6f6:	6843      	ldr	r3, [r0, #4]
 800f6f8:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f6fc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f700:	4313      	orrs	r3, r2
 800f702:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f706:	4323      	orrs	r3, r4
 800f708:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f70c:	4313      	orrs	r3, r2
 800f70e:	432b      	orrs	r3, r5
 800f710:	698a      	ldr	r2, [r1, #24]
 800f712:	4323      	orrs	r3, r4
 800f714:	4313      	orrs	r3, r2
 800f716:	6043      	str	r3, [r0, #4]
}
 800f718:	bc30      	pop	{r4, r5}
 800f71a:	2000      	movs	r0, #0
 800f71c:	4770      	bx	lr
 800f71e:	bf00      	nop

0800f720 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800f720:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f722:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800f724:	bb02      	cbnz	r2, 800f768 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f726:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f72a:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f72e:	3c01      	subs	r4, #1
 800f730:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f734:	3a01      	subs	r2, #1
 800f736:	4313      	orrs	r3, r2
 800f738:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f73c:	3c01      	subs	r4, #1
 800f73e:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800f742:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f746:	3a01      	subs	r2, #1
 800f748:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800f74c:	698a      	ldr	r2, [r1, #24]
 800f74e:	1e69      	subs	r1, r5, #1
 800f750:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f754:	1e61      	subs	r1, r4, #1
 800f756:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800f75a:	3a01      	subs	r2, #1
 800f75c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f760:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800f762:	bc30      	pop	{r4, r5}
 800f764:	2000      	movs	r0, #0
 800f766:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f768:	68cc      	ldr	r4, [r1, #12]
 800f76a:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f76c:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f76e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800f772:	3c01      	subs	r4, #1
 800f774:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800f778:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800f77c:	3a01      	subs	r2, #1
 800f77e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800f782:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f784:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f788:	68c3      	ldr	r3, [r0, #12]
 800f78a:	3c01      	subs	r4, #1
 800f78c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f790:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f794:	3a01      	subs	r2, #1
 800f796:	690c      	ldr	r4, [r1, #16]
 800f798:	4313      	orrs	r3, r2
 800f79a:	698a      	ldr	r2, [r1, #24]
 800f79c:	1e69      	subs	r1, r5, #1
 800f79e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800f7a2:	1e61      	subs	r1, r4, #1
 800f7a4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f7a8:	3a01      	subs	r2, #1
 800f7aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f7ae:	60c3      	str	r3, [r0, #12]
}
 800f7b0:	bc30      	pop	{r4, r5}
 800f7b2:	2000      	movs	r0, #0
 800f7b4:	4770      	bx	lr
 800f7b6:	bf00      	nop

0800f7b8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800f7b8:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f7ba:	680b      	ldr	r3, [r1, #0]
{
 800f7bc:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f7be:	684a      	ldr	r2, [r1, #4]
{
 800f7c0:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f7c2:	4313      	orrs	r3, r2
 800f7c4:	6900      	ldr	r0, [r0, #16]
 800f7c6:	68ca      	ldr	r2, [r1, #12]
 800f7c8:	0d80      	lsrs	r0, r0, #22
 800f7ca:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800f7ce:	688a      	ldr	r2, [r1, #8]
 800f7d0:	0580      	lsls	r0, r0, #22
 800f7d2:	4303      	orrs	r3, r0
 800f7d4:	3a01      	subs	r2, #1
 800f7d6:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f7da:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800f7dc:	f7fb fef6 	bl	800b5cc <HAL_GetTick>
 800f7e0:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f7e2:	1c6b      	adds	r3, r5, #1
 800f7e4:	d105      	bne.n	800f7f2 <FMC_SDRAM_SendCommand+0x3a>
 800f7e6:	69a3      	ldr	r3, [r4, #24]
 800f7e8:	f013 0320 	ands.w	r3, r3, #32
 800f7ec:	d1fb      	bne.n	800f7e6 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800f7ee:	4618      	mov	r0, r3
}
 800f7f0:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f7f2:	69a3      	ldr	r3, [r4, #24]
 800f7f4:	f013 0320 	ands.w	r3, r3, #32
 800f7f8:	d0f9      	beq.n	800f7ee <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800f7fa:	b125      	cbz	r5, 800f806 <FMC_SDRAM_SendCommand+0x4e>
 800f7fc:	f7fb fee6 	bl	800b5cc <HAL_GetTick>
 800f800:	1b80      	subs	r0, r0, r6
 800f802:	42a8      	cmp	r0, r5
 800f804:	d9ed      	bls.n	800f7e2 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800f806:	2003      	movs	r0, #3
}
 800f808:	bd70      	pop	{r4, r5, r6, pc}
 800f80a:	bf00      	nop

0800f80c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f80c:	6943      	ldr	r3, [r0, #20]
 800f80e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800f812:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f814:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800f818:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800f81c:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f81e:	6151      	str	r1, [r2, #20]
}
 800f820:	4770      	bx	lr
 800f822:	bf00      	nop

0800f824 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800f824:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800f826:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f82a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800f82c:	f002 fb02 	bl	8011e34 <xTaskGetSchedulerState>
 800f830:	2801      	cmp	r0, #1
 800f832:	d100      	bne.n	800f836 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800f834:	bd08      	pop	{r3, pc}
 800f836:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800f83a:	f000 bc43 	b.w	80100c4 <xPortSysTickHandler>
 800f83e:	bf00      	nop

0800f840 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f840:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800f844:	b92b      	cbnz	r3, 800f852 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800f846:	4b06      	ldr	r3, [pc, #24]	; (800f860 <osKernelInitialize+0x20>)
 800f848:	6818      	ldr	r0, [r3, #0]
 800f84a:	b928      	cbnz	r0, 800f858 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800f84c:	2201      	movs	r2, #1
 800f84e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800f850:	4770      	bx	lr
    stat = osErrorISR;
 800f852:	f06f 0005 	mvn.w	r0, #5
 800f856:	4770      	bx	lr
    } else {
      stat = osError;
 800f858:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800f85c:	4770      	bx	lr
 800f85e:	bf00      	nop
 800f860:	20002cf0 	.word	0x20002cf0

0800f864 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800f864:	b510      	push	{r4, lr}
 800f866:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f86a:	b974      	cbnz	r4, 800f88a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800f86c:	4b08      	ldr	r3, [pc, #32]	; (800f890 <osKernelStart+0x2c>)
 800f86e:	681a      	ldr	r2, [r3, #0]
 800f870:	2a01      	cmp	r2, #1
 800f872:	d107      	bne.n	800f884 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800f874:	4907      	ldr	r1, [pc, #28]	; (800f894 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800f876:	2202      	movs	r2, #2
 800f878:	77cc      	strb	r4, [r1, #31]
 800f87a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800f87c:	f002 f8b4 	bl	80119e8 <vTaskStartScheduler>
      stat = osOK;
 800f880:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800f882:	bd10      	pop	{r4, pc}
      stat = osError;
 800f884:	f04f 30ff 	mov.w	r0, #4294967295
}
 800f888:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f88a:	f06f 0005 	mvn.w	r0, #5
}
 800f88e:	bd10      	pop	{r4, pc}
 800f890:	20002cf0 	.word	0x20002cf0
 800f894:	e000ed00 	.word	0xe000ed00

0800f898 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f898:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f89a:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800f89c:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f89e:	4615      	mov	r5, r2
  hTask = NULL;
 800f8a0:	9405      	str	r4, [sp, #20]
 800f8a2:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800f8a6:	b9ea      	cbnz	r2, 800f8e4 <osThreadNew+0x4c>
 800f8a8:	b350      	cbz	r0, 800f900 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800f8aa:	b1f5      	cbz	r5, 800f8ea <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800f8ac:	69ab      	ldr	r3, [r5, #24]
 800f8ae:	bb5b      	cbnz	r3, 800f908 <osThreadNew+0x70>
 800f8b0:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f8b2:	686a      	ldr	r2, [r5, #4]
 800f8b4:	07d2      	lsls	r2, r2, #31
 800f8b6:	d423      	bmi.n	800f900 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800f8b8:	696e      	ldr	r6, [r5, #20]
 800f8ba:	b34e      	cbz	r6, 800f910 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800f8bc:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f8c0:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800f8c2:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f8c4:	b34c      	cbz	r4, 800f91a <osThreadNew+0x82>
 800f8c6:	68ea      	ldr	r2, [r5, #12]
 800f8c8:	2aab      	cmp	r2, #171	; 0xab
 800f8ca:	d919      	bls.n	800f900 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f8cc:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f8ce:	b1bd      	cbz	r5, 800f900 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f8d0:	b1b6      	cbz	r6, 800f900 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800f8d2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f8d6:	9300      	str	r3, [sp, #0]
 800f8d8:	4662      	mov	r2, ip
 800f8da:	460b      	mov	r3, r1
 800f8dc:	4639      	mov	r1, r7
 800f8de:	f001 ffc1 	bl	8011864 <xTaskCreateStatic>
 800f8e2:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800f8e4:	4620      	mov	r0, r4
 800f8e6:	b007      	add	sp, #28
 800f8e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8ea:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800f8ec:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f8ee:	ac05      	add	r4, sp, #20
 800f8f0:	9300      	str	r3, [sp, #0]
 800f8f2:	9401      	str	r4, [sp, #4]
 800f8f4:	460b      	mov	r3, r1
 800f8f6:	4629      	mov	r1, r5
 800f8f8:	f001 ffee 	bl	80118d8 <xTaskCreate>
 800f8fc:	2801      	cmp	r0, #1
 800f8fe:	d00a      	beq.n	800f916 <osThreadNew+0x7e>
        return (NULL);
 800f900:	2400      	movs	r4, #0
}
 800f902:	4620      	mov	r0, r4
 800f904:	b007      	add	sp, #28
 800f906:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f908:	1e5c      	subs	r4, r3, #1
 800f90a:	2c37      	cmp	r4, #55	; 0x37
 800f90c:	d9d1      	bls.n	800f8b2 <osThreadNew+0x1a>
 800f90e:	e7f7      	b.n	800f900 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800f910:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f914:	e7d4      	b.n	800f8c0 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800f916:	9c05      	ldr	r4, [sp, #20]
 800f918:	e7e4      	b.n	800f8e4 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800f91a:	68ee      	ldr	r6, [r5, #12]
 800f91c:	2e00      	cmp	r6, #0
 800f91e:	d1e1      	bne.n	800f8e4 <osThreadNew+0x4c>
 800f920:	692d      	ldr	r5, [r5, #16]
 800f922:	2d00      	cmp	r5, #0
 800f924:	d1de      	bne.n	800f8e4 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f926:	fa1f f28c 	uxth.w	r2, ip
 800f92a:	463d      	mov	r5, r7
 800f92c:	e7df      	b.n	800f8ee <osThreadNew+0x56>
 800f92e:	bf00      	nop

0800f930 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800f930:	b510      	push	{r4, lr}
 800f932:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f936:	b92c      	cbnz	r4, 800f944 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800f938:	b900      	cbnz	r0, 800f93c <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800f93a:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800f93c:	f001 fffe 	bl	801193c <vTaskDelay>
    stat = osOK;
 800f940:	4620      	mov	r0, r4
}
 800f942:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f944:	f06f 0005 	mvn.w	r0, #5
}
 800f948:	bd10      	pop	{r4, pc}
 800f94a:	bf00      	nop

0800f94c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800f94c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f94e:	b083      	sub	sp, #12
 800f950:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800f954:	b9fe      	cbnz	r6, 800f996 <osSemaphoreNew+0x4a>
 800f956:	b1f0      	cbz	r0, 800f996 <osSemaphoreNew+0x4a>
 800f958:	4288      	cmp	r0, r1
 800f95a:	460f      	mov	r7, r1
 800f95c:	d31b      	bcc.n	800f996 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800f95e:	4615      	mov	r5, r2
 800f960:	b192      	cbz	r2, 800f988 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800f962:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800f966:	b1d2      	cbz	r2, 800f99e <osSemaphoreNew+0x52>
 800f968:	2b4f      	cmp	r3, #79	; 0x4f
 800f96a:	d914      	bls.n	800f996 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800f96c:	2801      	cmp	r0, #1
 800f96e:	d038      	beq.n	800f9e2 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800f970:	f000 fd8e 	bl	8010490 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800f974:	4604      	mov	r4, r0
 800f976:	b170      	cbz	r0, 800f996 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800f978:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800f97a:	4620      	mov	r0, r4
 800f97c:	4629      	mov	r1, r5
 800f97e:	f001 fc39 	bl	80111f4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800f982:	4620      	mov	r0, r4
 800f984:	b003      	add	sp, #12
 800f986:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800f988:	2801      	cmp	r0, #1
 800f98a:	d012      	beq.n	800f9b2 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f98c:	f000 fde0 	bl	8010550 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f990:	4604      	mov	r4, r0
 800f992:	2800      	cmp	r0, #0
 800f994:	d1f1      	bne.n	800f97a <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800f996:	2400      	movs	r4, #0
}
 800f998:	4620      	mov	r0, r4
 800f99a:	b003      	add	sp, #12
 800f99c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800f99e:	2b00      	cmp	r3, #0
 800f9a0:	d1f9      	bne.n	800f996 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800f9a2:	2801      	cmp	r0, #1
 800f9a4:	d005      	beq.n	800f9b2 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f9a6:	f000 fdd3 	bl	8010550 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f9aa:	4604      	mov	r4, r0
 800f9ac:	2800      	cmp	r0, #0
 800f9ae:	d1e3      	bne.n	800f978 <osSemaphoreNew+0x2c>
 800f9b0:	e7f1      	b.n	800f996 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800f9b2:	2203      	movs	r2, #3
 800f9b4:	2100      	movs	r1, #0
 800f9b6:	2001      	movs	r0, #1
 800f9b8:	f000 fd28 	bl	801040c <xQueueGenericCreate>
 800f9bc:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800f9be:	2c00      	cmp	r4, #0
 800f9c0:	d0e9      	beq.n	800f996 <osSemaphoreNew+0x4a>
 800f9c2:	b917      	cbnz	r7, 800f9ca <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800f9c4:	2d00      	cmp	r5, #0
 800f9c6:	d1d7      	bne.n	800f978 <osSemaphoreNew+0x2c>
 800f9c8:	e7d7      	b.n	800f97a <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f9ca:	2300      	movs	r3, #0
 800f9cc:	461a      	mov	r2, r3
 800f9ce:	4619      	mov	r1, r3
 800f9d0:	4620      	mov	r0, r4
 800f9d2:	f000 fe03 	bl	80105dc <xQueueGenericSend>
 800f9d6:	2801      	cmp	r0, #1
 800f9d8:	d0f4      	beq.n	800f9c4 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800f9da:	4620      	mov	r0, r4
 800f9dc:	f001 fbc4 	bl	8011168 <vQueueDelete>
 800f9e0:	e7d9      	b.n	800f996 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800f9e2:	4613      	mov	r3, r2
 800f9e4:	2203      	movs	r2, #3
 800f9e6:	9200      	str	r2, [sp, #0]
 800f9e8:	4631      	mov	r1, r6
 800f9ea:	4632      	mov	r2, r6
 800f9ec:	f000 fca0 	bl	8010330 <xQueueGenericCreateStatic>
 800f9f0:	4604      	mov	r4, r0
 800f9f2:	e7e4      	b.n	800f9be <osSemaphoreNew+0x72>

0800f9f4 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f9f4:	b370      	cbz	r0, 800fa54 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800f9f6:	b510      	push	{r4, lr}
 800f9f8:	460c      	mov	r4, r1
 800f9fa:	b082      	sub	sp, #8
 800f9fc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800fa00:	b1c3      	cbz	r3, 800fa34 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800fa02:	bb21      	cbnz	r1, 800fa4e <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800fa04:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fa06:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800fa08:	f001 fb2c 	bl	8011064 <xQueueReceiveFromISR>
 800fa0c:	2801      	cmp	r0, #1
 800fa0e:	d11a      	bne.n	800fa46 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fa10:	9b01      	ldr	r3, [sp, #4]
 800fa12:	b913      	cbnz	r3, 800fa1a <osSemaphoreAcquire+0x26>
  stat = osOK;
 800fa14:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800fa16:	b002      	add	sp, #8
 800fa18:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800fa1a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fa1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fa22:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fa26:	f3bf 8f4f 	dsb	sy
 800fa2a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fa2e:	4620      	mov	r0, r4
}
 800fa30:	b002      	add	sp, #8
 800fa32:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800fa34:	f001 f98c 	bl	8010d50 <xQueueSemaphoreTake>
 800fa38:	2801      	cmp	r0, #1
 800fa3a:	d0eb      	beq.n	800fa14 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800fa3c:	b11c      	cbz	r4, 800fa46 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800fa3e:	f06f 0001 	mvn.w	r0, #1
}
 800fa42:	b002      	add	sp, #8
 800fa44:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800fa46:	f06f 0002 	mvn.w	r0, #2
}
 800fa4a:	b002      	add	sp, #8
 800fa4c:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800fa4e:	f06f 0003 	mvn.w	r0, #3
 800fa52:	e7e0      	b.n	800fa16 <osSemaphoreAcquire+0x22>
 800fa54:	f06f 0003 	mvn.w	r0, #3
}
 800fa58:	4770      	bx	lr
 800fa5a:	bf00      	nop

0800fa5c <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800fa5c:	b330      	cbz	r0, 800faac <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800fa5e:	b510      	push	{r4, lr}
 800fa60:	b082      	sub	sp, #8
 800fa62:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800fa66:	b1ab      	cbz	r3, 800fa94 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800fa68:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fa6a:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800fa6c:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fa6e:	f000 ff99 	bl	80109a4 <xQueueGiveFromISR>
 800fa72:	2801      	cmp	r0, #1
 800fa74:	d117      	bne.n	800faa6 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800fa76:	9b01      	ldr	r3, [sp, #4]
 800fa78:	b193      	cbz	r3, 800faa0 <osSemaphoreRelease+0x44>
 800fa7a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fa7e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fa82:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fa86:	f3bf 8f4f 	dsb	sy
 800fa8a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fa8e:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800fa90:	b002      	add	sp, #8
 800fa92:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800fa94:	461a      	mov	r2, r3
 800fa96:	4619      	mov	r1, r3
 800fa98:	f000 fda0 	bl	80105dc <xQueueGenericSend>
 800fa9c:	2801      	cmp	r0, #1
 800fa9e:	d102      	bne.n	800faa6 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800faa0:	2000      	movs	r0, #0
}
 800faa2:	b002      	add	sp, #8
 800faa4:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800faa6:	f06f 0002 	mvn.w	r0, #2
 800faaa:	e7fa      	b.n	800faa2 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800faac:	f06f 0003 	mvn.w	r0, #3
}
 800fab0:	4770      	bx	lr
 800fab2:	bf00      	nop

0800fab4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800fab4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fab6:	b085      	sub	sp, #20
 800fab8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800fabc:	b987      	cbnz	r7, 800fae0 <osMessageQueueNew+0x2c>
 800fabe:	4605      	mov	r5, r0
 800fac0:	b170      	cbz	r0, 800fae0 <osMessageQueueNew+0x2c>
 800fac2:	b169      	cbz	r1, 800fae0 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800fac4:	4614      	mov	r4, r2
 800fac6:	b1ea      	cbz	r2, 800fb04 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fac8:	6893      	ldr	r3, [r2, #8]
 800faca:	b163      	cbz	r3, 800fae6 <osMessageQueueNew+0x32>
 800facc:	68d2      	ldr	r2, [r2, #12]
 800face:	2a4f      	cmp	r2, #79	; 0x4f
 800fad0:	d906      	bls.n	800fae0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800fad2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fad4:	b122      	cbz	r2, 800fae0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800fad6:	6966      	ldr	r6, [r4, #20]
 800fad8:	fb01 f505 	mul.w	r5, r1, r5
 800fadc:	42ae      	cmp	r6, r5
 800fade:	d21c      	bcs.n	800fb1a <osMessageQueueNew+0x66>
  hQueue = NULL;
 800fae0:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800fae2:	b005      	add	sp, #20
 800fae4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800fae6:	68d3      	ldr	r3, [r2, #12]
 800fae8:	2b00      	cmp	r3, #0
 800faea:	d1f9      	bne.n	800fae0 <osMessageQueueNew+0x2c>
 800faec:	6913      	ldr	r3, [r2, #16]
 800faee:	2b00      	cmp	r3, #0
 800faf0:	d1f6      	bne.n	800fae0 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800faf2:	6952      	ldr	r2, [r2, #20]
 800faf4:	2a00      	cmp	r2, #0
 800faf6:	d1f3      	bne.n	800fae0 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800faf8:	f000 fc88 	bl	801040c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fafc:	2800      	cmp	r0, #0
 800fafe:	d0ef      	beq.n	800fae0 <osMessageQueueNew+0x2c>
        name = attr->name;
 800fb00:	6824      	ldr	r4, [r4, #0]
 800fb02:	e003      	b.n	800fb0c <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fb04:	f000 fc82 	bl	801040c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fb08:	2800      	cmp	r0, #0
 800fb0a:	d0e9      	beq.n	800fae0 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800fb0c:	4621      	mov	r1, r4
 800fb0e:	9003      	str	r0, [sp, #12]
 800fb10:	f001 fb70 	bl	80111f4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800fb14:	9803      	ldr	r0, [sp, #12]
}
 800fb16:	b005      	add	sp, #20
 800fb18:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800fb1a:	9700      	str	r7, [sp, #0]
 800fb1c:	f000 fc08 	bl	8010330 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800fb20:	2800      	cmp	r0, #0
 800fb22:	d1ed      	bne.n	800fb00 <osMessageQueueNew+0x4c>
 800fb24:	e7dc      	b.n	800fae0 <osMessageQueueNew+0x2c>
 800fb26:	bf00      	nop

0800fb28 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800fb28:	b570      	push	{r4, r5, r6, lr}
 800fb2a:	461c      	mov	r4, r3
 800fb2c:	b082      	sub	sp, #8
 800fb2e:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fb32:	b1be      	cbz	r6, 800fb64 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fb34:	b350      	cbz	r0, 800fb8c <osMessageQueuePut+0x64>
 800fb36:	b349      	cbz	r1, 800fb8c <osMessageQueuePut+0x64>
 800fb38:	bb43      	cbnz	r3, 800fb8c <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fb3a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fb3c:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fb3e:	f000 fecb 	bl	80108d8 <xQueueGenericSendFromISR>
 800fb42:	2801      	cmp	r0, #1
 800fb44:	d11e      	bne.n	800fb84 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fb46:	9b01      	ldr	r3, [sp, #4]
 800fb48:	b1cb      	cbz	r3, 800fb7e <osMessageQueuePut+0x56>
 800fb4a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb4e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb52:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb56:	f3bf 8f4f 	dsb	sy
 800fb5a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fb5e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fb60:	b002      	add	sp, #8
 800fb62:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fb64:	b190      	cbz	r0, 800fb8c <osMessageQueuePut+0x64>
 800fb66:	b189      	cbz	r1, 800fb8c <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fb68:	4633      	mov	r3, r6
 800fb6a:	4622      	mov	r2, r4
 800fb6c:	f000 fd36 	bl	80105dc <xQueueGenericSend>
 800fb70:	2801      	cmp	r0, #1
 800fb72:	d004      	beq.n	800fb7e <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800fb74:	b134      	cbz	r4, 800fb84 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800fb76:	f06f 0001 	mvn.w	r0, #1
}
 800fb7a:	b002      	add	sp, #8
 800fb7c:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800fb7e:	2000      	movs	r0, #0
}
 800fb80:	b002      	add	sp, #8
 800fb82:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800fb84:	f06f 0002 	mvn.w	r0, #2
}
 800fb88:	b002      	add	sp, #8
 800fb8a:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800fb8c:	f06f 0003 	mvn.w	r0, #3
 800fb90:	e7e6      	b.n	800fb60 <osMessageQueuePut+0x38>
 800fb92:	bf00      	nop

0800fb94 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800fb94:	b530      	push	{r4, r5, lr}
 800fb96:	461c      	mov	r4, r3
 800fb98:	b083      	sub	sp, #12
 800fb9a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fb9e:	b1bb      	cbz	r3, 800fbd0 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fba0:	b348      	cbz	r0, 800fbf6 <osMessageQueueGet+0x62>
 800fba2:	b341      	cbz	r1, 800fbf6 <osMessageQueueGet+0x62>
 800fba4:	bb3c      	cbnz	r4, 800fbf6 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fba6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fba8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fbaa:	f001 fa5b 	bl	8011064 <xQueueReceiveFromISR>
 800fbae:	2801      	cmp	r0, #1
 800fbb0:	d11d      	bne.n	800fbee <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fbb2:	9b01      	ldr	r3, [sp, #4]
 800fbb4:	b1c3      	cbz	r3, 800fbe8 <osMessageQueueGet+0x54>
 800fbb6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fbba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fbbe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fbc2:	f3bf 8f4f 	dsb	sy
 800fbc6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fbca:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fbcc:	b003      	add	sp, #12
 800fbce:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fbd0:	b188      	cbz	r0, 800fbf6 <osMessageQueueGet+0x62>
 800fbd2:	b181      	cbz	r1, 800fbf6 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fbd4:	4622      	mov	r2, r4
 800fbd6:	f000 ff3d 	bl	8010a54 <xQueueReceive>
 800fbda:	2801      	cmp	r0, #1
 800fbdc:	d004      	beq.n	800fbe8 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800fbde:	b134      	cbz	r4, 800fbee <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800fbe0:	f06f 0001 	mvn.w	r0, #1
}
 800fbe4:	b003      	add	sp, #12
 800fbe6:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800fbe8:	2000      	movs	r0, #0
}
 800fbea:	b003      	add	sp, #12
 800fbec:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800fbee:	f06f 0002 	mvn.w	r0, #2
}
 800fbf2:	b003      	add	sp, #12
 800fbf4:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800fbf6:	f06f 0003 	mvn.w	r0, #3
 800fbfa:	e7e7      	b.n	800fbcc <osMessageQueueGet+0x38>

0800fbfc <osMessageQueueGetCount>:
 800fbfc:	b130      	cbz	r0, 800fc0c <osMessageQueueGetCount+0x10>
 800fbfe:	f3ef 8305 	mrs	r3, IPSR
 800fc02:	b10b      	cbz	r3, 800fc08 <osMessageQueueGetCount+0xc>
 800fc04:	f001 baa2 	b.w	801114c <uxQueueMessagesWaitingFromISR>
 800fc08:	f001 ba8a 	b.w	8011120 <uxQueueMessagesWaiting>
 800fc0c:	4770      	bx	lr
 800fc0e:	bf00      	nop

0800fc10 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800fc10:	4b04      	ldr	r3, [pc, #16]	; (800fc24 <vApplicationGetIdleTaskMemory+0x14>)
 800fc12:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800fc14:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fc16:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800fc18:	4c03      	ldr	r4, [pc, #12]	; (800fc28 <vApplicationGetIdleTaskMemory+0x18>)
 800fc1a:	600c      	str	r4, [r1, #0]
}
 800fc1c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fc20:	6013      	str	r3, [r2, #0]
}
 800fc22:	4770      	bx	lr
 800fc24:	20002c44 	.word	0x20002c44
 800fc28:	20002a44 	.word	0x20002a44

0800fc2c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800fc2c:	4b05      	ldr	r3, [pc, #20]	; (800fc44 <vApplicationGetTimerTaskMemory+0x18>)
 800fc2e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800fc30:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fc32:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800fc36:	4c04      	ldr	r4, [pc, #16]	; (800fc48 <vApplicationGetTimerTaskMemory+0x1c>)
 800fc38:	600c      	str	r4, [r1, #0]
}
 800fc3a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fc3e:	6013      	str	r3, [r2, #0]
}
 800fc40:	4770      	bx	lr
 800fc42:	bf00      	nop
 800fc44:	200030f4 	.word	0x200030f4
 800fc48:	20002cf4 	.word	0x20002cf4

0800fc4c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800fc4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc50:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800fc52:	f001 ff45 	bl	8011ae0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800fc56:	4a54      	ldr	r2, [pc, #336]	; (800fda8 <pvPortMalloc+0x15c>)
 800fc58:	6816      	ldr	r6, [r2, #0]
 800fc5a:	2e00      	cmp	r6, #0
 800fc5c:	d06e      	beq.n	800fd3c <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800fc5e:	4b53      	ldr	r3, [pc, #332]	; (800fdac <pvPortMalloc+0x160>)
 800fc60:	681f      	ldr	r7, [r3, #0]
 800fc62:	423d      	tst	r5, r7
 800fc64:	d12e      	bne.n	800fcc4 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800fc66:	b36d      	cbz	r5, 800fcc4 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800fc68:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800fc6c:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800fc6e:	bf1c      	itt	ne
 800fc70:	f024 0407 	bicne.w	r4, r4, #7
 800fc74:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800fc76:	b32c      	cbz	r4, 800fcc4 <pvPortMalloc+0x78>
 800fc78:	f8df c144 	ldr.w	ip, [pc, #324]	; 800fdc0 <pvPortMalloc+0x174>
 800fc7c:	f8dc 5000 	ldr.w	r5, [ip]
 800fc80:	42a5      	cmp	r5, r4
 800fc82:	d31f      	bcc.n	800fcc4 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800fc84:	484a      	ldr	r0, [pc, #296]	; (800fdb0 <pvPortMalloc+0x164>)
 800fc86:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800fc88:	e003      	b.n	800fc92 <pvPortMalloc+0x46>
 800fc8a:	681a      	ldr	r2, [r3, #0]
 800fc8c:	b122      	cbz	r2, 800fc98 <pvPortMalloc+0x4c>
 800fc8e:	4618      	mov	r0, r3
 800fc90:	4613      	mov	r3, r2
 800fc92:	6859      	ldr	r1, [r3, #4]
 800fc94:	42a1      	cmp	r1, r4
 800fc96:	d3f8      	bcc.n	800fc8a <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800fc98:	42b3      	cmp	r3, r6
 800fc9a:	d013      	beq.n	800fcc4 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800fc9c:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fc9e:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800fca0:	f858 eb08 	ldr.w	lr, [r8], #8
 800fca4:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fca8:	2a10      	cmp	r2, #16
 800fcaa:	d929      	bls.n	800fd00 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800fcac:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800fcae:	0748      	lsls	r0, r1, #29
 800fcb0:	d00f      	beq.n	800fcd2 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800fcb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcb6:	f383 8811 	msr	BASEPRI, r3
 800fcba:	f3bf 8f6f 	isb	sy
 800fcbe:	f3bf 8f4f 	dsb	sy
 800fcc2:	e7fe      	b.n	800fcc2 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800fcc4:	f001 ff14 	bl	8011af0 <xTaskResumeAll>
 800fcc8:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800fccc:	4640      	mov	r0, r8
 800fcce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800fcd2:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fcd4:	4a36      	ldr	r2, [pc, #216]	; (800fdb0 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800fcd6:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fcd8:	4614      	mov	r4, r2
 800fcda:	6812      	ldr	r2, [r2, #0]
 800fcdc:	4291      	cmp	r1, r2
 800fcde:	d8fb      	bhi.n	800fcd8 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fce0:	6860      	ldr	r0, [r4, #4]
 800fce2:	eb04 0e00 	add.w	lr, r4, r0
 800fce6:	4571      	cmp	r1, lr
 800fce8:	d04b      	beq.n	800fd82 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fcea:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fcee:	eb01 000e 	add.w	r0, r1, lr
 800fcf2:	4282      	cmp	r2, r0
 800fcf4:	d051      	beq.n	800fd9a <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800fcf6:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fcf8:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fcfa:	bf18      	it	ne
 800fcfc:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fcfe:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fd00:	4a2c      	ldr	r2, [pc, #176]	; (800fdb4 <pvPortMalloc+0x168>)
 800fd02:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fd04:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fd06:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800fd08:	bf38      	it	cc
 800fd0a:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800fd0c:	4a2a      	ldr	r2, [pc, #168]	; (800fdb8 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fd0e:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800fd12:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800fd14:	2000      	movs	r0, #0
 800fd16:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800fd1a:	6813      	ldr	r3, [r2, #0]
 800fd1c:	3301      	adds	r3, #1
 800fd1e:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800fd20:	f001 fee6 	bl	8011af0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800fd24:	f018 0f07 	tst.w	r8, #7
 800fd28:	d0d0      	beq.n	800fccc <pvPortMalloc+0x80>
 800fd2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd2e:	f383 8811 	msr	BASEPRI, r3
 800fd32:	f3bf 8f6f 	isb	sy
 800fd36:	f3bf 8f4f 	dsb	sy
 800fd3a:	e7fe      	b.n	800fd3a <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800fd3c:	4b1f      	ldr	r3, [pc, #124]	; (800fdbc <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800fd3e:	075e      	lsls	r6, r3, #29
 800fd40:	d118      	bne.n	800fd74 <pvPortMalloc+0x128>
 800fd42:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800fd46:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800fd48:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fd4a:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800fd4e:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd50:	4a18      	ldr	r2, [pc, #96]	; (800fdb4 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fd52:	4817      	ldr	r0, [pc, #92]	; (800fdb0 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd54:	4c15      	ldr	r4, [pc, #84]	; (800fdac <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fd56:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800fd58:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd5a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd5c:	4a18      	ldr	r2, [pc, #96]	; (800fdc0 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd5e:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd62:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800fd64:	2200      	movs	r2, #0
 800fd66:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd68:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800fd6a:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800fd6e:	e9c1 6300 	strd	r6, r3, [r1]
}
 800fd72:	e776      	b.n	800fc62 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800fd74:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800fd76:	f021 0107 	bic.w	r1, r1, #7
 800fd7a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fd7e:	460b      	mov	r3, r1
 800fd80:	e7e2      	b.n	800fd48 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fd82:	6849      	ldr	r1, [r1, #4]
 800fd84:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd88:	eb04 010e 	add.w	r1, r4, lr
 800fd8c:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fd8e:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd92:	d001      	beq.n	800fd98 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd94:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800fd96:	e7b2      	b.n	800fcfe <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd98:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fd9a:	42b2      	cmp	r2, r6
 800fd9c:	d0ab      	beq.n	800fcf6 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fd9e:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fda0:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fda2:	4470      	add	r0, lr
 800fda4:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fda6:	e7a6      	b.n	800fcf6 <pvPortMalloc+0xaa>
 800fda8:	200031a0 	.word	0x200031a0
 800fdac:	200131a4 	.word	0x200131a4
 800fdb0:	200131b8 	.word	0x200131b8
 800fdb4:	200131ac 	.word	0x200131ac
 800fdb8:	200131b0 	.word	0x200131b0
 800fdbc:	200031a4 	.word	0x200031a4
 800fdc0:	200131a8 	.word	0x200131a8

0800fdc4 <vPortFree>:
	if( pv != NULL )
 800fdc4:	b1d0      	cbz	r0, 800fdfc <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fdc6:	4a2c      	ldr	r2, [pc, #176]	; (800fe78 <vPortFree+0xb4>)
 800fdc8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800fdcc:	6812      	ldr	r2, [r2, #0]
 800fdce:	4213      	tst	r3, r2
 800fdd0:	d00b      	beq.n	800fdea <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800fdd2:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800fdd6:	b191      	cbz	r1, 800fdfe <vPortFree+0x3a>
 800fdd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fddc:	f383 8811 	msr	BASEPRI, r3
 800fde0:	f3bf 8f6f 	isb	sy
 800fde4:	f3bf 8f4f 	dsb	sy
 800fde8:	e7fe      	b.n	800fde8 <vPortFree+0x24>
 800fdea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdee:	f383 8811 	msr	BASEPRI, r3
 800fdf2:	f3bf 8f6f 	isb	sy
 800fdf6:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fdfa:	e7fe      	b.n	800fdfa <vPortFree+0x36>
 800fdfc:	4770      	bx	lr
{
 800fdfe:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fe00:	ea23 0302 	bic.w	r3, r3, r2
{
 800fe04:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fe06:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe0a:	4c1c      	ldr	r4, [pc, #112]	; (800fe7c <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fe0c:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800fe0e:	f001 fe67 	bl	8011ae0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe12:	9801      	ldr	r0, [sp, #4]
 800fe14:	6822      	ldr	r2, [r4, #0]
 800fe16:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fe1a:	4b19      	ldr	r3, [pc, #100]	; (800fe80 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe1c:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800fe1e:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe20:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fe22:	461a      	mov	r2, r3
 800fe24:	681b      	ldr	r3, [r3, #0]
 800fe26:	4298      	cmp	r0, r3
 800fe28:	d8fb      	bhi.n	800fe22 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fe2a:	6854      	ldr	r4, [r2, #4]
 800fe2c:	eb02 0e04 	add.w	lr, r2, r4
 800fe30:	4570      	cmp	r0, lr
 800fe32:	d010      	beq.n	800fe56 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe34:	eb00 0c01 	add.w	ip, r0, r1
 800fe38:	4563      	cmp	r3, ip
 800fe3a:	d014      	beq.n	800fe66 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800fe3c:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe3e:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fe40:	bf18      	it	ne
 800fe42:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800fe44:	4a0f      	ldr	r2, [pc, #60]	; (800fe84 <vPortFree+0xc0>)
 800fe46:	6813      	ldr	r3, [r2, #0]
 800fe48:	3301      	adds	r3, #1
 800fe4a:	6013      	str	r3, [r2, #0]
}
 800fe4c:	b002      	add	sp, #8
 800fe4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800fe52:	f001 be4d 	b.w	8011af0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe56:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe58:	1850      	adds	r0, r2, r1
 800fe5a:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe5c:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe5e:	d001      	beq.n	800fe64 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe60:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800fe62:	e7ef      	b.n	800fe44 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe64:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fe66:	4c08      	ldr	r4, [pc, #32]	; (800fe88 <vPortFree+0xc4>)
 800fe68:	6824      	ldr	r4, [r4, #0]
 800fe6a:	42a3      	cmp	r3, r4
 800fe6c:	d0e6      	beq.n	800fe3c <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe6e:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fe72:	4421      	add	r1, r4
 800fe74:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe76:	e7e1      	b.n	800fe3c <vPortFree+0x78>
 800fe78:	200131a4 	.word	0x200131a4
 800fe7c:	200131a8 	.word	0x200131a8
 800fe80:	200131b8 	.word	0x200131b8
 800fe84:	200131b4 	.word	0x200131b4
 800fe88:	200031a0 	.word	0x200031a0

0800fe8c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fe8c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fe90:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fe94:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fe96:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fe9a:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fe9e:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800fea0:	4770      	bx	lr
 800fea2:	bf00      	nop

0800fea4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800fea4:	2300      	movs	r3, #0
 800fea6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800fea8:	4770      	bx	lr
 800feaa:	bf00      	nop

0800feac <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800feac:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800feae:	689a      	ldr	r2, [r3, #8]
 800feb0:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800feb2:	6802      	ldr	r2, [r0, #0]
{
 800feb4:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800feb6:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800feb8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800feba:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800febc:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800febe:	6099      	str	r1, [r3, #8]
}
 800fec0:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800fec4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800fec6:	6002      	str	r2, [r0, #0]
}
 800fec8:	4770      	bx	lr
 800feca:	bf00      	nop

0800fecc <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800fecc:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800fece:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800fed0:	1c6b      	adds	r3, r5, #1
 800fed2:	d010      	beq.n	800fef6 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800fed4:	f100 0308 	add.w	r3, r0, #8
 800fed8:	461c      	mov	r4, r3
 800feda:	685b      	ldr	r3, [r3, #4]
 800fedc:	681a      	ldr	r2, [r3, #0]
 800fede:	42aa      	cmp	r2, r5
 800fee0:	d9fa      	bls.n	800fed8 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800fee2:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800fee4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800fee6:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800fee8:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800feea:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800feec:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800feee:	6108      	str	r0, [r1, #16]
}
 800fef0:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800fef2:	6002      	str	r2, [r0, #0]
}
 800fef4:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800fef6:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800fef8:	6863      	ldr	r3, [r4, #4]
 800fefa:	e7f2      	b.n	800fee2 <vListInsert+0x16>

0800fefc <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800fefc:	6903      	ldr	r3, [r0, #16]
{
 800fefe:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ff00:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800ff04:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ff06:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800ff08:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800ff0a:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800ff0c:	bf08      	it	eq
 800ff0e:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800ff10:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800ff12:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800ff16:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800ff18:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800ff1a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800ff1c:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800ff1e:	6818      	ldr	r0, [r3, #0]
}
 800ff20:	4770      	bx	lr
 800ff22:	bf00      	nop

0800ff24 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800ff24:	4808      	ldr	r0, [pc, #32]	; (800ff48 <prvPortStartFirstTask+0x24>)
 800ff26:	6800      	ldr	r0, [r0, #0]
 800ff28:	6800      	ldr	r0, [r0, #0]
 800ff2a:	f380 8808 	msr	MSP, r0
 800ff2e:	f04f 0000 	mov.w	r0, #0
 800ff32:	f380 8814 	msr	CONTROL, r0
 800ff36:	b662      	cpsie	i
 800ff38:	b661      	cpsie	f
 800ff3a:	f3bf 8f4f 	dsb	sy
 800ff3e:	f3bf 8f6f 	isb	sy
 800ff42:	df00      	svc	0
 800ff44:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800ff46:	0000      	.short	0x0000
 800ff48:	e000ed08 	.word	0xe000ed08

0800ff4c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800ff4c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800ff5c <vPortEnableVFP+0x10>
 800ff50:	6801      	ldr	r1, [r0, #0]
 800ff52:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800ff56:	6001      	str	r1, [r0, #0]
 800ff58:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800ff5a:	0000      	.short	0x0000
 800ff5c:	e000ed88 	.word	0xe000ed88

0800ff60 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800ff60:	4b0e      	ldr	r3, [pc, #56]	; (800ff9c <prvTaskExitError+0x3c>)
 800ff62:	681b      	ldr	r3, [r3, #0]
{
 800ff64:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800ff66:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800ff68:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800ff6a:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800ff6c:	d008      	beq.n	800ff80 <prvTaskExitError+0x20>
 800ff6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff72:	f383 8811 	msr	BASEPRI, r3
 800ff76:	f3bf 8f6f 	isb	sy
 800ff7a:	f3bf 8f4f 	dsb	sy
 800ff7e:	e7fe      	b.n	800ff7e <prvTaskExitError+0x1e>
 800ff80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff84:	f383 8811 	msr	BASEPRI, r3
 800ff88:	f3bf 8f6f 	isb	sy
 800ff8c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800ff90:	9b01      	ldr	r3, [sp, #4]
 800ff92:	2b00      	cmp	r3, #0
 800ff94:	d0fc      	beq.n	800ff90 <prvTaskExitError+0x30>
}
 800ff96:	b002      	add	sp, #8
 800ff98:	4770      	bx	lr
 800ff9a:	bf00      	nop
 800ff9c:	20000088 	.word	0x20000088

0800ffa0 <pxPortInitialiseStack>:
{
 800ffa0:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ffa2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ffa6:	4c07      	ldr	r4, [pc, #28]	; (800ffc4 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ffa8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ffac:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ffb0:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ffb4:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ffb8:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800ffbc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ffc0:	3844      	subs	r0, #68	; 0x44
 800ffc2:	4770      	bx	lr
 800ffc4:	0800ff61 	.word	0x0800ff61
	...

0800ffd0 <SVC_Handler>:
	__asm volatile (
 800ffd0:	4b07      	ldr	r3, [pc, #28]	; (800fff0 <pxCurrentTCBConst2>)
 800ffd2:	6819      	ldr	r1, [r3, #0]
 800ffd4:	6808      	ldr	r0, [r1, #0]
 800ffd6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffda:	f380 8809 	msr	PSP, r0
 800ffde:	f3bf 8f6f 	isb	sy
 800ffe2:	f04f 0000 	mov.w	r0, #0
 800ffe6:	f380 8811 	msr	BASEPRI, r0
 800ffea:	4770      	bx	lr
 800ffec:	f3af 8000 	nop.w

0800fff0 <pxCurrentTCBConst2>:
 800fff0:	20013208 	.word	0x20013208

0800fff4 <vPortEnterCritical>:
 800fff4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fff8:	f383 8811 	msr	BASEPRI, r3
 800fffc:	f3bf 8f6f 	isb	sy
 8010000:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8010004:	4a0b      	ldr	r2, [pc, #44]	; (8010034 <vPortEnterCritical+0x40>)
 8010006:	6813      	ldr	r3, [r2, #0]
 8010008:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 801000a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 801000c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 801000e:	d000      	beq.n	8010012 <vPortEnterCritical+0x1e>
}
 8010010:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8010012:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010016:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 801001a:	b2db      	uxtb	r3, r3
 801001c:	2b00      	cmp	r3, #0
 801001e:	d0f7      	beq.n	8010010 <vPortEnterCritical+0x1c>
 8010020:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010024:	f383 8811 	msr	BASEPRI, r3
 8010028:	f3bf 8f6f 	isb	sy
 801002c:	f3bf 8f4f 	dsb	sy
 8010030:	e7fe      	b.n	8010030 <vPortEnterCritical+0x3c>
 8010032:	bf00      	nop
 8010034:	20000088 	.word	0x20000088

08010038 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8010038:	4a08      	ldr	r2, [pc, #32]	; (801005c <vPortExitCritical+0x24>)
 801003a:	6813      	ldr	r3, [r2, #0]
 801003c:	b943      	cbnz	r3, 8010050 <vPortExitCritical+0x18>
 801003e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010042:	f383 8811 	msr	BASEPRI, r3
 8010046:	f3bf 8f6f 	isb	sy
 801004a:	f3bf 8f4f 	dsb	sy
 801004e:	e7fe      	b.n	801004e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8010050:	3b01      	subs	r3, #1
 8010052:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8010054:	b90b      	cbnz	r3, 801005a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8010056:	f383 8811 	msr	BASEPRI, r3
}
 801005a:	4770      	bx	lr
 801005c:	20000088 	.word	0x20000088

08010060 <PendSV_Handler>:
	__asm volatile
 8010060:	f3ef 8009 	mrs	r0, PSP
 8010064:	f3bf 8f6f 	isb	sy
 8010068:	4b15      	ldr	r3, [pc, #84]	; (80100c0 <pxCurrentTCBConst>)
 801006a:	681a      	ldr	r2, [r3, #0]
 801006c:	f01e 0f10 	tst.w	lr, #16
 8010070:	bf08      	it	eq
 8010072:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8010076:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801007a:	6010      	str	r0, [r2, #0]
 801007c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8010080:	f04f 0050 	mov.w	r0, #80	; 0x50
 8010084:	f380 8811 	msr	BASEPRI, r0
 8010088:	f3bf 8f4f 	dsb	sy
 801008c:	f3bf 8f6f 	isb	sy
 8010090:	f001 fd54 	bl	8011b3c <vTaskSwitchContext>
 8010094:	f04f 0000 	mov.w	r0, #0
 8010098:	f380 8811 	msr	BASEPRI, r0
 801009c:	bc09      	pop	{r0, r3}
 801009e:	6819      	ldr	r1, [r3, #0]
 80100a0:	6808      	ldr	r0, [r1, #0]
 80100a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100a6:	f01e 0f10 	tst.w	lr, #16
 80100aa:	bf08      	it	eq
 80100ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80100b0:	f380 8809 	msr	PSP, r0
 80100b4:	f3bf 8f6f 	isb	sy
 80100b8:	4770      	bx	lr
 80100ba:	bf00      	nop
 80100bc:	f3af 8000 	nop.w

080100c0 <pxCurrentTCBConst>:
 80100c0:	20013208 	.word	0x20013208

080100c4 <xPortSysTickHandler>:
{
 80100c4:	b508      	push	{r3, lr}
	__asm volatile
 80100c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100ca:	f383 8811 	msr	BASEPRI, r3
 80100ce:	f3bf 8f6f 	isb	sy
 80100d2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80100d6:	f001 fd21 	bl	8011b1c <xTaskIncrementTick>
 80100da:	b128      	cbz	r0, 80100e8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80100dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80100e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 80100e8:	2300      	movs	r3, #0
 80100ea:	f383 8811 	msr	BASEPRI, r3
}
 80100ee:	bd08      	pop	{r3, pc}

080100f0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80100f0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80100f4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100f6:	4906      	ldr	r1, [pc, #24]	; (8010110 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80100f8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80100fa:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100fc:	680b      	ldr	r3, [r1, #0]
 80100fe:	4905      	ldr	r1, [pc, #20]	; (8010114 <vPortSetupTimerInterrupt+0x24>)
 8010100:	fba1 1303 	umull	r1, r3, r1, r3
 8010104:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8010106:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8010108:	3b01      	subs	r3, #1
 801010a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 801010c:	6110      	str	r0, [r2, #16]
}
 801010e:	4770      	bx	lr
 8010110:	2000007c 	.word	0x2000007c
 8010114:	10624dd3 	.word	0x10624dd3

08010118 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8010118:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801011c:	4a49      	ldr	r2, [pc, #292]	; (8010244 <xPortStartScheduler+0x12c>)
 801011e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8010122:	4291      	cmp	r1, r2
 8010124:	d043      	beq.n	80101ae <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8010126:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 801012a:	4b47      	ldr	r3, [pc, #284]	; (8010248 <xPortStartScheduler+0x130>)
 801012c:	429a      	cmp	r2, r3
 801012e:	d035      	beq.n	801019c <xPortStartScheduler+0x84>
{
 8010130:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010132:	4b46      	ldr	r3, [pc, #280]	; (801024c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010134:	4846      	ldr	r0, [pc, #280]	; (8010250 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010136:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010138:	4c46      	ldr	r4, [pc, #280]	; (8010254 <xPortStartScheduler+0x13c>)
{
 801013a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 801013c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 801013e:	b2d2      	uxtb	r2, r2
 8010140:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8010142:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8010144:	781b      	ldrb	r3, [r3, #0]
 8010146:	b2db      	uxtb	r3, r3
 8010148:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801014c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010150:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010154:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010158:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801015a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 801015c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 801015e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010160:	bf48      	it	mi
 8010162:	2206      	movmi	r2, #6
 8010164:	d511      	bpl.n	801018a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8010166:	f89d 3007 	ldrb.w	r3, [sp, #7]
 801016a:	005b      	lsls	r3, r3, #1
 801016c:	b2db      	uxtb	r3, r3
 801016e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010172:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010176:	0609      	lsls	r1, r1, #24
 8010178:	4610      	mov	r0, r2
 801017a:	f102 32ff 	add.w	r2, r2, #4294967295
 801017e:	d4f2      	bmi.n	8010166 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8010180:	2803      	cmp	r0, #3
 8010182:	6020      	str	r0, [r4, #0]
 8010184:	f88d 3007 	strb.w	r3, [sp, #7]
 8010188:	d01a      	beq.n	80101c0 <xPortStartScheduler+0xa8>
	__asm volatile
 801018a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801018e:	f383 8811 	msr	BASEPRI, r3
 8010192:	f3bf 8f6f 	isb	sy
 8010196:	f3bf 8f4f 	dsb	sy
 801019a:	e7fe      	b.n	801019a <xPortStartScheduler+0x82>
 801019c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101a0:	f383 8811 	msr	BASEPRI, r3
 80101a4:	f3bf 8f6f 	isb	sy
 80101a8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80101ac:	e7fe      	b.n	80101ac <xPortStartScheduler+0x94>
 80101ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101b2:	f383 8811 	msr	BASEPRI, r3
 80101b6:	f3bf 8f6f 	isb	sy
 80101ba:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80101be:	e7fe      	b.n	80101be <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80101c0:	9b02      	ldr	r3, [sp, #8]
 80101c2:	4a22      	ldr	r2, [pc, #136]	; (801024c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80101c4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80101c8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80101cc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80101ce:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80101d0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80101d2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 80101d6:	4c20      	ldr	r4, [pc, #128]	; (8010258 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80101d8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80101dc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80101e0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 80101e4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80101e8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 80101ec:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 80101ee:	f7ff ff7f 	bl	80100f0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80101f2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 80101f4:	f7ff feaa 	bl	800ff4c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80101f8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 80101fc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8010200:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 8010204:	f7ff fe8e 	bl	800ff24 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8010208:	f001 fc98 	bl	8011b3c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 801020c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 801020e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 8010210:	3301      	adds	r3, #1
 8010212:	d008      	beq.n	8010226 <xPortStartScheduler+0x10e>
 8010214:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010218:	f383 8811 	msr	BASEPRI, r3
 801021c:	f3bf 8f6f 	isb	sy
 8010220:	f3bf 8f4f 	dsb	sy
 8010224:	e7fe      	b.n	8010224 <xPortStartScheduler+0x10c>
 8010226:	f04f 0350 	mov.w	r3, #80	; 0x50
 801022a:	f383 8811 	msr	BASEPRI, r3
 801022e:	f3bf 8f6f 	isb	sy
 8010232:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8010236:	9b03      	ldr	r3, [sp, #12]
 8010238:	2b00      	cmp	r3, #0
 801023a:	d0fc      	beq.n	8010236 <xPortStartScheduler+0x11e>
}
 801023c:	2000      	movs	r0, #0
 801023e:	b004      	add	sp, #16
 8010240:	bd70      	pop	{r4, r5, r6, pc}
 8010242:	bf00      	nop
 8010244:	410fc271 	.word	0x410fc271
 8010248:	410fc270 	.word	0x410fc270
 801024c:	e000e400 	.word	0xe000e400
 8010250:	200131c0 	.word	0x200131c0
 8010254:	200131c4 	.word	0x200131c4
 8010258:	20000088 	.word	0x20000088

0801025c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 801025c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8010260:	2b0f      	cmp	r3, #15
 8010262:	d90e      	bls.n	8010282 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010264:	4911      	ldr	r1, [pc, #68]	; (80102ac <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8010266:	4a12      	ldr	r2, [pc, #72]	; (80102b0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010268:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 801026a:	7812      	ldrb	r2, [r2, #0]
 801026c:	429a      	cmp	r2, r3
 801026e:	d908      	bls.n	8010282 <vPortValidateInterruptPriority+0x26>
 8010270:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010274:	f383 8811 	msr	BASEPRI, r3
 8010278:	f3bf 8f6f 	isb	sy
 801027c:	f3bf 8f4f 	dsb	sy
 8010280:	e7fe      	b.n	8010280 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8010282:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010286:	4a0b      	ldr	r2, [pc, #44]	; (80102b4 <vPortValidateInterruptPriority+0x58>)
 8010288:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 801028c:	6812      	ldr	r2, [r2, #0]
 801028e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8010292:	4293      	cmp	r3, r2
 8010294:	d908      	bls.n	80102a8 <vPortValidateInterruptPriority+0x4c>
 8010296:	f04f 0350 	mov.w	r3, #80	; 0x50
 801029a:	f383 8811 	msr	BASEPRI, r3
 801029e:	f3bf 8f6f 	isb	sy
 80102a2:	f3bf 8f4f 	dsb	sy
 80102a6:	e7fe      	b.n	80102a6 <vPortValidateInterruptPriority+0x4a>
	}
 80102a8:	4770      	bx	lr
 80102aa:	bf00      	nop
 80102ac:	e000e3f0 	.word	0xe000e3f0
 80102b0:	200131c0 	.word	0x200131c0
 80102b4:	200131c4 	.word	0x200131c4

080102b8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 80102b8:	b570      	push	{r4, r5, r6, lr}
 80102ba:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80102bc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80102be:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80102c0:	b920      	cbnz	r0, 80102cc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80102c2:	6825      	ldr	r5, [r4, #0]
 80102c4:	b34d      	cbz	r5, 801031a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102c6:	3601      	adds	r6, #1
 80102c8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 80102ca:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80102cc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80102ce:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 80102d0:	b97d      	cbnz	r5, 80102f2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80102d2:	6860      	ldr	r0, [r4, #4]
 80102d4:	f01d fe6f 	bl	802dfb6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80102d8:	6863      	ldr	r3, [r4, #4]
 80102da:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80102dc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102de:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80102e0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102e2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80102e4:	bf24      	itt	cs
 80102e6:	6823      	ldrcs	r3, [r4, #0]
 80102e8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102ea:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 80102ec:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102ee:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80102f0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80102f2:	68e0      	ldr	r0, [r4, #12]
 80102f4:	f01d fe5f 	bl	802dfb6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80102f8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80102fa:	68e3      	ldr	r3, [r4, #12]
 80102fc:	4251      	negs	r1, r2
 80102fe:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010300:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8010302:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010304:	4293      	cmp	r3, r2
 8010306:	d202      	bcs.n	801030e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8010308:	68a3      	ldr	r3, [r4, #8]
 801030a:	440b      	add	r3, r1
 801030c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 801030e:	2d02      	cmp	r5, #2
 8010310:	d008      	beq.n	8010324 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010312:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 8010314:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010316:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8010318:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 801031a:	68a0      	ldr	r0, [r4, #8]
 801031c:	f001 fde0 	bl	8011ee0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8010320:	60a5      	str	r5, [r4, #8]
 8010322:	e7d0      	b.n	80102c6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010324:	2e01      	cmp	r6, #1
 8010326:	bf38      	it	cc
 8010328:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 801032a:	2000      	movs	r0, #0
 801032c:	e7cc      	b.n	80102c8 <prvCopyDataToQueue+0x10>
 801032e:	bf00      	nop

08010330 <xQueueGenericCreateStatic>:
	{
 8010330:	b530      	push	{r4, r5, lr}
 8010332:	b083      	sub	sp, #12
 8010334:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8010338:	b940      	cbnz	r0, 801034c <xQueueGenericCreateStatic+0x1c>
 801033a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801033e:	f383 8811 	msr	BASEPRI, r3
 8010342:	f3bf 8f6f 	isb	sy
 8010346:	f3bf 8f4f 	dsb	sy
 801034a:	e7fe      	b.n	801034a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 801034c:	461d      	mov	r5, r3
 801034e:	b17b      	cbz	r3, 8010370 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010350:	b302      	cbz	r2, 8010394 <xQueueGenericCreateStatic+0x64>
 8010352:	b1b1      	cbz	r1, 8010382 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010354:	2350      	movs	r3, #80	; 0x50
 8010356:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010358:	9b01      	ldr	r3, [sp, #4]
 801035a:	2b50      	cmp	r3, #80	; 0x50
 801035c:	d023      	beq.n	80103a6 <xQueueGenericCreateStatic+0x76>
 801035e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010362:	f383 8811 	msr	BASEPRI, r3
 8010366:	f3bf 8f6f 	isb	sy
 801036a:	f3bf 8f4f 	dsb	sy
 801036e:	e7fe      	b.n	801036e <xQueueGenericCreateStatic+0x3e>
 8010370:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010374:	f383 8811 	msr	BASEPRI, r3
 8010378:	f3bf 8f6f 	isb	sy
 801037c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 8010380:	e7fe      	b.n	8010380 <xQueueGenericCreateStatic+0x50>
 8010382:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010386:	f383 8811 	msr	BASEPRI, r3
 801038a:	f3bf 8f6f 	isb	sy
 801038e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010392:	e7fe      	b.n	8010392 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8010394:	bb89      	cbnz	r1, 80103fa <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010396:	2250      	movs	r2, #80	; 0x50
 8010398:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 801039a:	9a01      	ldr	r2, [sp, #4]
 801039c:	2a50      	cmp	r2, #80	; 0x50
 801039e:	d1de      	bne.n	801035e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80103a0:	9a01      	ldr	r2, [sp, #4]
 80103a2:	462a      	mov	r2, r5
 80103a4:	e000      	b.n	80103a8 <xQueueGenericCreateStatic+0x78>
 80103a6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 80103a8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80103aa:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80103ac:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80103b0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 80103b4:	f7ff fe1e 	bl	800fff4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103b8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 80103bc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80103be:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103c0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103c4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103c6:	4401      	add	r1, r0
 80103c8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80103ca:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103cc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80103ce:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80103d0:	21ff      	movs	r1, #255	; 0xff
 80103d2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103d6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 80103d8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80103dc:	f105 0010 	add.w	r0, r5, #16
 80103e0:	f7ff fd54 	bl	800fe8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80103e4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80103e8:	f7ff fd50 	bl	800fe8c <vListInitialise>
	taskEXIT_CRITICAL();
 80103ec:	f7ff fe24 	bl	8010038 <vPortExitCritical>
	}
 80103f0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 80103f2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 80103f6:	b003      	add	sp, #12
 80103f8:	bd30      	pop	{r4, r5, pc}
 80103fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103fe:	f383 8811 	msr	BASEPRI, r3
 8010402:	f3bf 8f6f 	isb	sy
 8010406:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 801040a:	e7fe      	b.n	801040a <xQueueGenericCreateStatic+0xda>

0801040c <xQueueGenericCreate>:
	{
 801040c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 801040e:	b940      	cbnz	r0, 8010422 <xQueueGenericCreate+0x16>
 8010410:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010414:	f383 8811 	msr	BASEPRI, r3
 8010418:	f3bf 8f6f 	isb	sy
 801041c:	f3bf 8f4f 	dsb	sy
 8010420:	e7fe      	b.n	8010420 <xQueueGenericCreate+0x14>
 8010422:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010424:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010428:	3050      	adds	r0, #80	; 0x50
 801042a:	460e      	mov	r6, r1
 801042c:	4617      	mov	r7, r2
 801042e:	f7ff fc0d 	bl	800fc4c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010432:	4604      	mov	r4, r0
 8010434:	b340      	cbz	r0, 8010488 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010436:	2300      	movs	r3, #0
 8010438:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 801043c:	b336      	cbz	r6, 801048c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801043e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 8010442:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8010444:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 8010448:	f7ff fdd4 	bl	800fff4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801044c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8010450:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010452:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010454:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010458:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801045a:	440a      	add	r2, r1
 801045c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801045e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010460:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010462:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010464:	22ff      	movs	r2, #255	; 0xff
 8010466:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801046a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 801046c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8010470:	f104 0010 	add.w	r0, r4, #16
 8010474:	f7ff fd0a 	bl	800fe8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010478:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801047c:	f7ff fd06 	bl	800fe8c <vListInitialise>
	taskEXIT_CRITICAL();
 8010480:	f7ff fdda 	bl	8010038 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010484:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8010488:	4620      	mov	r0, r4
 801048a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801048c:	4603      	mov	r3, r0
 801048e:	e7d8      	b.n	8010442 <xQueueGenericCreate+0x36>

08010490 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 8010490:	b940      	cbnz	r0, 80104a4 <xQueueCreateCountingSemaphoreStatic+0x14>
 8010492:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010496:	f383 8811 	msr	BASEPRI, r3
 801049a:	f3bf 8f6f 	isb	sy
 801049e:	f3bf 8f4f 	dsb	sy
 80104a2:	e7fe      	b.n	80104a2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 80104a4:	4288      	cmp	r0, r1
 80104a6:	d208      	bcs.n	80104ba <xQueueCreateCountingSemaphoreStatic+0x2a>
 80104a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104ac:	f383 8811 	msr	BASEPRI, r3
 80104b0:	f3bf 8f6f 	isb	sy
 80104b4:	f3bf 8f4f 	dsb	sy
 80104b8:	e7fe      	b.n	80104b8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 80104ba:	b530      	push	{r4, r5, lr}
 80104bc:	4615      	mov	r5, r2
 80104be:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 80104c0:	2a00      	cmp	r2, #0
 80104c2:	d03c      	beq.n	801053e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80104c4:	2350      	movs	r3, #80	; 0x50
 80104c6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 80104c8:	9b03      	ldr	r3, [sp, #12]
 80104ca:	2b50      	cmp	r3, #80	; 0x50
 80104cc:	d008      	beq.n	80104e0 <xQueueCreateCountingSemaphoreStatic+0x50>
 80104ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104d2:	f383 8811 	msr	BASEPRI, r3
 80104d6:	f3bf 8f6f 	isb	sy
 80104da:	f3bf 8f4f 	dsb	sy
 80104de:	e7fe      	b.n	80104de <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 80104e0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80104e2:	2301      	movs	r3, #1
 80104e4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80104e8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80104ea:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 80104ee:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80104f0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 80104f2:	f7ff fd7f 	bl	800fff4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104f6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 80104fa:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80104fc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104fe:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010502:	1ac3      	subs	r3, r0, r3
 8010504:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010506:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 8010508:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801050c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010510:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010512:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 8010514:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010518:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801051a:	f105 0010 	add.w	r0, r5, #16
 801051e:	f7ff fcb5 	bl	800fe8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010522:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010526:	f7ff fcb1 	bl	800fe8c <vListInitialise>
	taskEXIT_CRITICAL();
 801052a:	f7ff fd85 	bl	8010038 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 801052e:	9901      	ldr	r1, [sp, #4]
 8010530:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 8010532:	2302      	movs	r3, #2
	}
 8010534:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 8010536:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 801053a:	b005      	add	sp, #20
 801053c:	bd30      	pop	{r4, r5, pc}
 801053e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010542:	f383 8811 	msr	BASEPRI, r3
 8010546:	f3bf 8f6f 	isb	sy
 801054a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 801054e:	e7fe      	b.n	801054e <xQueueCreateCountingSemaphoreStatic+0xbe>

08010550 <xQueueCreateCountingSemaphore>:
	{
 8010550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 8010552:	b940      	cbnz	r0, 8010566 <xQueueCreateCountingSemaphore+0x16>
 8010554:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010558:	f383 8811 	msr	BASEPRI, r3
 801055c:	f3bf 8f6f 	isb	sy
 8010560:	f3bf 8f4f 	dsb	sy
 8010564:	e7fe      	b.n	8010564 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010566:	4288      	cmp	r0, r1
 8010568:	460e      	mov	r6, r1
 801056a:	4604      	mov	r4, r0
 801056c:	d208      	bcs.n	8010580 <xQueueCreateCountingSemaphore+0x30>
 801056e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010572:	f383 8811 	msr	BASEPRI, r3
 8010576:	f3bf 8f6f 	isb	sy
 801057a:	f3bf 8f4f 	dsb	sy
 801057e:	e7fe      	b.n	801057e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010580:	2050      	movs	r0, #80	; 0x50
 8010582:	f7ff fb63 	bl	800fc4c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010586:	4605      	mov	r5, r0
 8010588:	b330      	cbz	r0, 80105d8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 801058a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 801058c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010590:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010594:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 8010596:	f7ff fd2d 	bl	800fff4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801059a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 801059e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80105a0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105a2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105a6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105a8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105aa:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105ac:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 80105ae:	22ff      	movs	r2, #255	; 0xff
 80105b0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105b4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80105b6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 80105b8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80105bc:	f105 0010 	add.w	r0, r5, #16
 80105c0:	f7ff fc64 	bl	800fe8c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80105c4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80105c8:	f7ff fc60 	bl	800fe8c <vListInitialise>
	taskEXIT_CRITICAL();
 80105cc:	f7ff fd34 	bl	8010038 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 80105d0:	2302      	movs	r3, #2
 80105d2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80105d6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 80105d8:	4628      	mov	r0, r5
 80105da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080105dc <xQueueGenericSend>:
{
 80105dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105e0:	b085      	sub	sp, #20
 80105e2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 80105e4:	2800      	cmp	r0, #0
 80105e6:	f000 80a4 	beq.w	8010732 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80105ea:	4688      	mov	r8, r1
 80105ec:	461f      	mov	r7, r3
 80105ee:	4604      	mov	r4, r0
 80105f0:	2900      	cmp	r1, #0
 80105f2:	f000 8091 	beq.w	8010718 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80105f6:	2f02      	cmp	r7, #2
 80105f8:	d10b      	bne.n	8010612 <xQueueGenericSend+0x36>
 80105fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80105fc:	2b01      	cmp	r3, #1
 80105fe:	d008      	beq.n	8010612 <xQueueGenericSend+0x36>
 8010600:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010604:	f383 8811 	msr	BASEPRI, r3
 8010608:	f3bf 8f6f 	isb	sy
 801060c:	f3bf 8f4f 	dsb	sy
 8010610:	e7fe      	b.n	8010610 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010612:	f001 fc0f 	bl	8011e34 <xTaskGetSchedulerState>
 8010616:	4605      	mov	r5, r0
 8010618:	2800      	cmp	r0, #0
 801061a:	f000 8093 	beq.w	8010744 <xQueueGenericSend+0x168>
 801061e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010620:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010624:	f7ff fce6 	bl	800fff4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010628:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801062a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801062c:	429a      	cmp	r2, r3
 801062e:	f0c0 80ef 	bcc.w	8010810 <xQueueGenericSend+0x234>
 8010632:	2f02      	cmp	r7, #2
 8010634:	f000 80ec 	beq.w	8010810 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010638:	9801      	ldr	r0, [sp, #4]
 801063a:	2800      	cmp	r0, #0
 801063c:	f000 8101 	beq.w	8010842 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 8010640:	2d00      	cmp	r5, #0
 8010642:	f000 80e1 	beq.w	8010808 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 8010646:	f7ff fcf7 	bl	8010038 <vPortExitCritical>
		vTaskSuspendAll();
 801064a:	f001 fa49 	bl	8011ae0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 801064e:	f7ff fcd1 	bl	800fff4 <vPortEnterCritical>
 8010652:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010656:	2bff      	cmp	r3, #255	; 0xff
 8010658:	bf04      	itt	eq
 801065a:	2300      	moveq	r3, #0
 801065c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010660:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010664:	2bff      	cmp	r3, #255	; 0xff
 8010666:	bf04      	itt	eq
 8010668:	2300      	moveq	r3, #0
 801066a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 801066e:	f7ff fce3 	bl	8010038 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010672:	a901      	add	r1, sp, #4
 8010674:	a802      	add	r0, sp, #8
 8010676:	f001 fb8f 	bl	8011d98 <xTaskCheckForTimeOut>
 801067a:	2800      	cmp	r0, #0
 801067c:	f040 80e6 	bne.w	801084c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8010680:	f7ff fcb8 	bl	800fff4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8010684:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010686:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010688:	429a      	cmp	r2, r3
 801068a:	d068      	beq.n	801075e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 801068c:	f7ff fcd4 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010690:	f7ff fcb0 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010694:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 8010698:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801069a:	2d00      	cmp	r5, #0
 801069c:	dc04      	bgt.n	80106a8 <xQueueGenericSend+0xcc>
 801069e:	e011      	b.n	80106c4 <xQueueGenericSend+0xe8>
			--cTxLock;
 80106a0:	1e6a      	subs	r2, r5, #1
 80106a2:	b2d3      	uxtb	r3, r2
 80106a4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80106a6:	b16b      	cbz	r3, 80106c4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80106a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80106aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80106ac:	b153      	cbz	r3, 80106c4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80106ae:	f001 fb1f 	bl	8011cf0 <xTaskRemoveFromEventList>
 80106b2:	2800      	cmp	r0, #0
 80106b4:	d0f4      	beq.n	80106a0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 80106b6:	f001 fbb7 	bl	8011e28 <vTaskMissedYield>
			--cTxLock;
 80106ba:	1e6a      	subs	r2, r5, #1
 80106bc:	b2d3      	uxtb	r3, r2
 80106be:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80106c0:	2b00      	cmp	r3, #0
 80106c2:	d1f1      	bne.n	80106a8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 80106c4:	23ff      	movs	r3, #255	; 0xff
 80106c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80106ca:	f7ff fcb5 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 80106ce:	f7ff fc91 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80106d2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80106d6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106d8:	2d00      	cmp	r5, #0
 80106da:	dd14      	ble.n	8010706 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106dc:	f104 0910 	add.w	r9, r4, #16
 80106e0:	e003      	b.n	80106ea <xQueueGenericSend+0x10e>
				--cRxLock;
 80106e2:	1e6a      	subs	r2, r5, #1
 80106e4:	b2d3      	uxtb	r3, r2
 80106e6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106e8:	b16b      	cbz	r3, 8010706 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80106ea:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106ec:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80106ee:	b153      	cbz	r3, 8010706 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106f0:	f001 fafe 	bl	8011cf0 <xTaskRemoveFromEventList>
 80106f4:	2800      	cmp	r0, #0
 80106f6:	d0f4      	beq.n	80106e2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 80106f8:	f001 fb96 	bl	8011e28 <vTaskMissedYield>
				--cRxLock;
 80106fc:	1e6a      	subs	r2, r5, #1
 80106fe:	b2d3      	uxtb	r3, r2
 8010700:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010702:	2b00      	cmp	r3, #0
 8010704:	d1f1      	bne.n	80106ea <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 8010706:	23ff      	movs	r3, #255	; 0xff
 8010708:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 801070c:	f7ff fc94 	bl	8010038 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010710:	f001 f9ee 	bl	8011af0 <xTaskResumeAll>
 8010714:	2501      	movs	r5, #1
 8010716:	e785      	b.n	8010624 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010718:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801071a:	2b00      	cmp	r3, #0
 801071c:	f43f af6b 	beq.w	80105f6 <xQueueGenericSend+0x1a>
 8010720:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010724:	f383 8811 	msr	BASEPRI, r3
 8010728:	f3bf 8f6f 	isb	sy
 801072c:	f3bf 8f4f 	dsb	sy
 8010730:	e7fe      	b.n	8010730 <xQueueGenericSend+0x154>
 8010732:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010736:	f383 8811 	msr	BASEPRI, r3
 801073a:	f3bf 8f6f 	isb	sy
 801073e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010742:	e7fe      	b.n	8010742 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010744:	9b01      	ldr	r3, [sp, #4]
 8010746:	2b00      	cmp	r3, #0
 8010748:	f43f af6a 	beq.w	8010620 <xQueueGenericSend+0x44>
 801074c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010750:	f383 8811 	msr	BASEPRI, r3
 8010754:	f3bf 8f6f 	isb	sy
 8010758:	f3bf 8f4f 	dsb	sy
 801075c:	e7fe      	b.n	801075c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 801075e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 8010762:	f7ff fc69 	bl	8010038 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8010766:	9901      	ldr	r1, [sp, #4]
 8010768:	4648      	mov	r0, r9
 801076a:	f001 fa33 	bl	8011bd4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 801076e:	f7ff fc41 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010772:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010776:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010778:	2d00      	cmp	r5, #0
 801077a:	dc04      	bgt.n	8010786 <xQueueGenericSend+0x1aa>
 801077c:	e011      	b.n	80107a2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 801077e:	1e6b      	subs	r3, r5, #1
 8010780:	b2da      	uxtb	r2, r3
 8010782:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010784:	b16a      	cbz	r2, 80107a2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010786:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010788:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801078a:	b153      	cbz	r3, 80107a2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801078c:	f001 fab0 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010790:	2800      	cmp	r0, #0
 8010792:	d0f4      	beq.n	801077e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 8010794:	f001 fb48 	bl	8011e28 <vTaskMissedYield>
			--cTxLock;
 8010798:	1e6b      	subs	r3, r5, #1
 801079a:	b2da      	uxtb	r2, r3
 801079c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801079e:	2a00      	cmp	r2, #0
 80107a0:	d1f1      	bne.n	8010786 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 80107a2:	23ff      	movs	r3, #255	; 0xff
 80107a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80107a8:	f7ff fc46 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 80107ac:	f7ff fc22 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80107b0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80107b4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80107b6:	2d00      	cmp	r5, #0
 80107b8:	dc04      	bgt.n	80107c4 <xQueueGenericSend+0x1e8>
 80107ba:	e011      	b.n	80107e0 <xQueueGenericSend+0x204>
				--cRxLock;
 80107bc:	1e6b      	subs	r3, r5, #1
 80107be:	b2da      	uxtb	r2, r3
 80107c0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80107c2:	b16a      	cbz	r2, 80107e0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80107c4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80107c6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80107c8:	b153      	cbz	r3, 80107e0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80107ca:	f001 fa91 	bl	8011cf0 <xTaskRemoveFromEventList>
 80107ce:	2800      	cmp	r0, #0
 80107d0:	d0f4      	beq.n	80107bc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 80107d2:	f001 fb29 	bl	8011e28 <vTaskMissedYield>
				--cRxLock;
 80107d6:	1e6b      	subs	r3, r5, #1
 80107d8:	b2da      	uxtb	r2, r3
 80107da:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80107dc:	2a00      	cmp	r2, #0
 80107de:	d1f1      	bne.n	80107c4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 80107e0:	23ff      	movs	r3, #255	; 0xff
 80107e2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80107e6:	f7ff fc27 	bl	8010038 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 80107ea:	f001 f981 	bl	8011af0 <xTaskResumeAll>
 80107ee:	2800      	cmp	r0, #0
 80107f0:	d190      	bne.n	8010714 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 80107f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80107f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80107fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80107fe:	f3bf 8f4f 	dsb	sy
 8010802:	f3bf 8f6f 	isb	sy
 8010806:	e785      	b.n	8010714 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010808:	a802      	add	r0, sp, #8
 801080a:	f001 fab9 	bl	8011d80 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 801080e:	e71a      	b.n	8010646 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010810:	463a      	mov	r2, r7
 8010812:	4641      	mov	r1, r8
 8010814:	4620      	mov	r0, r4
 8010816:	f7ff fd4f 	bl	80102b8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801081a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801081c:	2b00      	cmp	r3, #0
 801081e:	d153      	bne.n	80108c8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 8010820:	b148      	cbz	r0, 8010836 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 8010822:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010826:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801082a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801082e:	f3bf 8f4f 	dsb	sy
 8010832:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8010836:	f7ff fbff 	bl	8010038 <vPortExitCritical>
				return pdPASS;
 801083a:	2001      	movs	r0, #1
}
 801083c:	b005      	add	sp, #20
 801083e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010842:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 8010844:	f7ff fbf8 	bl	8010038 <vPortExitCritical>
					return errQUEUE_FULL;
 8010848:	9800      	ldr	r0, [sp, #0]
 801084a:	e7f7      	b.n	801083c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 801084c:	f7ff fbd2 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010850:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010854:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010856:	2d00      	cmp	r5, #0
 8010858:	dd10      	ble.n	801087c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801085a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 801085e:	e003      	b.n	8010868 <xQueueGenericSend+0x28c>
			--cTxLock;
 8010860:	1e6b      	subs	r3, r5, #1
 8010862:	b2da      	uxtb	r2, r3
 8010864:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010866:	b14a      	cbz	r2, 801087c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010868:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801086a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801086c:	b133      	cbz	r3, 801087c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801086e:	f001 fa3f 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010872:	2800      	cmp	r0, #0
 8010874:	d0f4      	beq.n	8010860 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 8010876:	f001 fad7 	bl	8011e28 <vTaskMissedYield>
 801087a:	e7f1      	b.n	8010860 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 801087c:	23ff      	movs	r3, #255	; 0xff
 801087e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010882:	f7ff fbd9 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010886:	f7ff fbb5 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801088a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801088e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010890:	2d00      	cmp	r5, #0
 8010892:	dd10      	ble.n	80108b6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010894:	f104 0610 	add.w	r6, r4, #16
 8010898:	e003      	b.n	80108a2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 801089a:	1e6b      	subs	r3, r5, #1
 801089c:	b2da      	uxtb	r2, r3
 801089e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80108a0:	b14a      	cbz	r2, 80108b6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80108a2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80108a4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80108a6:	b133      	cbz	r3, 80108b6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80108a8:	f001 fa22 	bl	8011cf0 <xTaskRemoveFromEventList>
 80108ac:	2800      	cmp	r0, #0
 80108ae:	d0f4      	beq.n	801089a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 80108b0:	f001 faba 	bl	8011e28 <vTaskMissedYield>
 80108b4:	e7f1      	b.n	801089a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 80108b6:	23ff      	movs	r3, #255	; 0xff
 80108b8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80108bc:	f7ff fbbc 	bl	8010038 <vPortExitCritical>
			( void ) xTaskResumeAll();
 80108c0:	f001 f916 	bl	8011af0 <xTaskResumeAll>
			return errQUEUE_FULL;
 80108c4:	2000      	movs	r0, #0
 80108c6:	e7b9      	b.n	801083c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80108c8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80108cc:	f001 fa10 	bl	8011cf0 <xTaskRemoveFromEventList>
 80108d0:	2800      	cmp	r0, #0
 80108d2:	d0b0      	beq.n	8010836 <xQueueGenericSend+0x25a>
 80108d4:	e7a5      	b.n	8010822 <xQueueGenericSend+0x246>
 80108d6:	bf00      	nop

080108d8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 80108d8:	2800      	cmp	r0, #0
 80108da:	d04b      	beq.n	8010974 <xQueueGenericSendFromISR+0x9c>
{
 80108dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108e0:	460e      	mov	r6, r1
 80108e2:	4617      	mov	r7, r2
 80108e4:	461d      	mov	r5, r3
 80108e6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80108e8:	b321      	cbz	r1, 8010934 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80108ea:	2d02      	cmp	r5, #2
 80108ec:	d10b      	bne.n	8010906 <xQueueGenericSendFromISR+0x2e>
 80108ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80108f0:	2b01      	cmp	r3, #1
 80108f2:	d008      	beq.n	8010906 <xQueueGenericSendFromISR+0x2e>
 80108f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80108f8:	f383 8811 	msr	BASEPRI, r3
 80108fc:	f3bf 8f6f 	isb	sy
 8010900:	f3bf 8f4f 	dsb	sy
 8010904:	e7fe      	b.n	8010904 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010906:	f7ff fca9 	bl	801025c <vPortValidateInterruptPriority>
	__asm volatile
 801090a:	f3ef 8811 	mrs	r8, BASEPRI
 801090e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010912:	f383 8811 	msr	BASEPRI, r3
 8010916:	f3bf 8f6f 	isb	sy
 801091a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 801091e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010920:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010922:	429a      	cmp	r2, r3
 8010924:	d312      	bcc.n	801094c <xQueueGenericSendFromISR+0x74>
 8010926:	2d02      	cmp	r5, #2
 8010928:	d010      	beq.n	801094c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 801092a:	2000      	movs	r0, #0
	__asm volatile
 801092c:	f388 8811 	msr	BASEPRI, r8
}
 8010930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010934:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010936:	2b00      	cmp	r3, #0
 8010938:	d0d7      	beq.n	80108ea <xQueueGenericSendFromISR+0x12>
	__asm volatile
 801093a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801093e:	f383 8811 	msr	BASEPRI, r3
 8010942:	f3bf 8f6f 	isb	sy
 8010946:	f3bf 8f4f 	dsb	sy
 801094a:	e7fe      	b.n	801094a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 801094c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 801094e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010952:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010954:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 8010956:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010958:	4620      	mov	r0, r4
 801095a:	f7ff fcad 	bl	80102b8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 801095e:	1c6b      	adds	r3, r5, #1
 8010960:	d011      	beq.n	8010986 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010962:	1c6b      	adds	r3, r5, #1
 8010964:	b25b      	sxtb	r3, r3
 8010966:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 801096a:	2001      	movs	r0, #1
	__asm volatile
 801096c:	f388 8811 	msr	BASEPRI, r8
}
 8010970:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 8010974:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010978:	f383 8811 	msr	BASEPRI, r3
 801097c:	f3bf 8f6f 	isb	sy
 8010980:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010984:	e7fe      	b.n	8010984 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010986:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010988:	2b00      	cmp	r3, #0
 801098a:	d0ee      	beq.n	801096a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801098c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010990:	f001 f9ae 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010994:	2800      	cmp	r0, #0
 8010996:	d0e8      	beq.n	801096a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8010998:	2f00      	cmp	r7, #0
 801099a:	d0e6      	beq.n	801096a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 801099c:	2001      	movs	r0, #1
 801099e:	6038      	str	r0, [r7, #0]
 80109a0:	e7c4      	b.n	801092c <xQueueGenericSendFromISR+0x54>
 80109a2:	bf00      	nop

080109a4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 80109a4:	b370      	cbz	r0, 8010a04 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 80109a6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 80109a8:	b570      	push	{r4, r5, r6, lr}
 80109aa:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 80109ac:	b143      	cbz	r3, 80109c0 <xQueueGiveFromISR+0x1c>
 80109ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109b2:	f383 8811 	msr	BASEPRI, r3
 80109b6:	f3bf 8f6f 	isb	sy
 80109ba:	f3bf 8f4f 	dsb	sy
 80109be:	e7fe      	b.n	80109be <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80109c0:	6803      	ldr	r3, [r0, #0]
 80109c2:	460c      	mov	r4, r1
 80109c4:	b33b      	cbz	r3, 8010a16 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80109c6:	f7ff fc49 	bl	801025c <vPortValidateInterruptPriority>
	__asm volatile
 80109ca:	f3ef 8511 	mrs	r5, BASEPRI
 80109ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109d2:	f383 8811 	msr	BASEPRI, r3
 80109d6:	f3bf 8f6f 	isb	sy
 80109da:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80109de:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80109e0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 80109e2:	429a      	cmp	r2, r3
 80109e4:	d923      	bls.n	8010a2e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 80109e6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80109ea:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 80109ec:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80109ee:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80109f0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 80109f2:	d020      	beq.n	8010a36 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80109f4:	3301      	adds	r3, #1
 80109f6:	b25b      	sxtb	r3, r3
 80109f8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 80109fc:	2001      	movs	r0, #1
	__asm volatile
 80109fe:	f385 8811 	msr	BASEPRI, r5
}
 8010a02:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 8010a04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a08:	f383 8811 	msr	BASEPRI, r3
 8010a0c:	f3bf 8f6f 	isb	sy
 8010a10:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010a14:	e7fe      	b.n	8010a14 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010a16:	6883      	ldr	r3, [r0, #8]
 8010a18:	2b00      	cmp	r3, #0
 8010a1a:	d0d4      	beq.n	80109c6 <xQueueGiveFromISR+0x22>
 8010a1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a20:	f383 8811 	msr	BASEPRI, r3
 8010a24:	f3bf 8f6f 	isb	sy
 8010a28:	f3bf 8f4f 	dsb	sy
 8010a2c:	e7fe      	b.n	8010a2c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 8010a2e:	2000      	movs	r0, #0
	__asm volatile
 8010a30:	f385 8811 	msr	BASEPRI, r5
}
 8010a34:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010a36:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8010a38:	2b00      	cmp	r3, #0
 8010a3a:	d0df      	beq.n	80109fc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a3c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 8010a40:	f001 f956 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010a44:	2800      	cmp	r0, #0
 8010a46:	d0d9      	beq.n	80109fc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 8010a48:	2c00      	cmp	r4, #0
 8010a4a:	d0d7      	beq.n	80109fc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010a4c:	2001      	movs	r0, #1
 8010a4e:	6020      	str	r0, [r4, #0]
 8010a50:	e7ee      	b.n	8010a30 <xQueueGiveFromISR+0x8c>
 8010a52:	bf00      	nop

08010a54 <xQueueReceive>:
{
 8010a54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a58:	b085      	sub	sp, #20
 8010a5a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010a5c:	2800      	cmp	r0, #0
 8010a5e:	f000 815c 	beq.w	8010d1a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010a62:	460f      	mov	r7, r1
 8010a64:	4604      	mov	r4, r0
 8010a66:	2900      	cmp	r1, #0
 8010a68:	d079      	beq.n	8010b5e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010a6a:	f001 f9e3 	bl	8011e34 <xTaskGetSchedulerState>
 8010a6e:	2800      	cmp	r0, #0
 8010a70:	f000 8081 	beq.w	8010b76 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 8010a74:	f7ff fabe 	bl	800fff4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010a78:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010a7a:	2d00      	cmp	r5, #0
 8010a7c:	f040 8138 	bne.w	8010cf0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010a80:	9b01      	ldr	r3, [sp, #4]
 8010a82:	2b00      	cmp	r3, #0
 8010a84:	f000 80d5 	beq.w	8010c32 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010a88:	a802      	add	r0, sp, #8
 8010a8a:	f001 f979 	bl	8011d80 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 8010a8e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a90:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 8010a94:	f7ff fad0 	bl	8010038 <vPortExitCritical>
		vTaskSuspendAll();
 8010a98:	f001 f822 	bl	8011ae0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010a9c:	f7ff faaa 	bl	800fff4 <vPortEnterCritical>
 8010aa0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010aa4:	2bff      	cmp	r3, #255	; 0xff
 8010aa6:	bf08      	it	eq
 8010aa8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8010aac:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010ab0:	2bff      	cmp	r3, #255	; 0xff
 8010ab2:	bf08      	it	eq
 8010ab4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8010ab8:	f7ff fabe 	bl	8010038 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010abc:	a901      	add	r1, sp, #4
 8010abe:	a802      	add	r0, sp, #8
 8010ac0:	f001 f96a 	bl	8011d98 <xTaskCheckForTimeOut>
 8010ac4:	2800      	cmp	r0, #0
 8010ac6:	d163      	bne.n	8010b90 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 8010ac8:	f7ff fa94 	bl	800fff4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010acc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010ace:	2b00      	cmp	r3, #0
 8010ad0:	f000 80b5 	beq.w	8010c3e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 8010ad4:	f7ff fab0 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010ad8:	f7ff fa8c 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010adc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010ae0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ae2:	2d00      	cmp	r5, #0
 8010ae4:	dc04      	bgt.n	8010af0 <xQueueReceive+0x9c>
 8010ae6:	e011      	b.n	8010b0c <xQueueReceive+0xb8>
			--cTxLock;
 8010ae8:	1e6b      	subs	r3, r5, #1
 8010aea:	b2da      	uxtb	r2, r3
 8010aec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010aee:	b16a      	cbz	r2, 8010b0c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010af0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010af2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010af4:	b153      	cbz	r3, 8010b0c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010af6:	f001 f8fb 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010afa:	2800      	cmp	r0, #0
 8010afc:	d0f4      	beq.n	8010ae8 <xQueueReceive+0x94>
						vTaskMissedYield();
 8010afe:	f001 f993 	bl	8011e28 <vTaskMissedYield>
			--cTxLock;
 8010b02:	1e6b      	subs	r3, r5, #1
 8010b04:	b2da      	uxtb	r2, r3
 8010b06:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b08:	2a00      	cmp	r2, #0
 8010b0a:	d1f1      	bne.n	8010af0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 8010b0c:	23ff      	movs	r3, #255	; 0xff
 8010b0e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010b12:	f7ff fa91 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010b16:	f7ff fa6d 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010b1a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010b1e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b20:	2d00      	cmp	r5, #0
 8010b22:	dd14      	ble.n	8010b4e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b24:	f104 0910 	add.w	r9, r4, #16
 8010b28:	e003      	b.n	8010b32 <xQueueReceive+0xde>
				--cRxLock;
 8010b2a:	1e6b      	subs	r3, r5, #1
 8010b2c:	b2da      	uxtb	r2, r3
 8010b2e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b30:	b16a      	cbz	r2, 8010b4e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b32:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b34:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b36:	b153      	cbz	r3, 8010b4e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b38:	f001 f8da 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010b3c:	2800      	cmp	r0, #0
 8010b3e:	d0f4      	beq.n	8010b2a <xQueueReceive+0xd6>
					vTaskMissedYield();
 8010b40:	f001 f972 	bl	8011e28 <vTaskMissedYield>
				--cRxLock;
 8010b44:	1e6b      	subs	r3, r5, #1
 8010b46:	b2da      	uxtb	r2, r3
 8010b48:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b4a:	2a00      	cmp	r2, #0
 8010b4c:	d1f1      	bne.n	8010b32 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 8010b4e:	23ff      	movs	r3, #255	; 0xff
 8010b50:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010b54:	f7ff fa70 	bl	8010038 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010b58:	f000 ffca 	bl	8011af0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 8010b5c:	e060      	b.n	8010c20 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010b5e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010b60:	2b00      	cmp	r3, #0
 8010b62:	d082      	beq.n	8010a6a <xQueueReceive+0x16>
	__asm volatile
 8010b64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b68:	f383 8811 	msr	BASEPRI, r3
 8010b6c:	f3bf 8f6f 	isb	sy
 8010b70:	f3bf 8f4f 	dsb	sy
 8010b74:	e7fe      	b.n	8010b74 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010b76:	9b01      	ldr	r3, [sp, #4]
 8010b78:	2b00      	cmp	r3, #0
 8010b7a:	f43f af7b 	beq.w	8010a74 <xQueueReceive+0x20>
 8010b7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b82:	f383 8811 	msr	BASEPRI, r3
 8010b86:	f3bf 8f6f 	isb	sy
 8010b8a:	f3bf 8f4f 	dsb	sy
 8010b8e:	e7fe      	b.n	8010b8e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 8010b90:	f7ff fa30 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010b94:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010b98:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b9a:	2d00      	cmp	r5, #0
 8010b9c:	dc04      	bgt.n	8010ba8 <xQueueReceive+0x154>
 8010b9e:	e011      	b.n	8010bc4 <xQueueReceive+0x170>
			--cTxLock;
 8010ba0:	1e6b      	subs	r3, r5, #1
 8010ba2:	b2da      	uxtb	r2, r3
 8010ba4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ba6:	b16a      	cbz	r2, 8010bc4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ba8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010baa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010bac:	b153      	cbz	r3, 8010bc4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010bae:	f001 f89f 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010bb2:	2800      	cmp	r0, #0
 8010bb4:	d0f4      	beq.n	8010ba0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 8010bb6:	f001 f937 	bl	8011e28 <vTaskMissedYield>
			--cTxLock;
 8010bba:	1e6b      	subs	r3, r5, #1
 8010bbc:	b2da      	uxtb	r2, r3
 8010bbe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010bc0:	2a00      	cmp	r2, #0
 8010bc2:	d1f1      	bne.n	8010ba8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 8010bc4:	23ff      	movs	r3, #255	; 0xff
 8010bc6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010bca:	f7ff fa35 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010bce:	f7ff fa11 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010bd2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010bd6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010bd8:	2d00      	cmp	r5, #0
 8010bda:	dd14      	ble.n	8010c06 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bdc:	f104 0910 	add.w	r9, r4, #16
 8010be0:	e003      	b.n	8010bea <xQueueReceive+0x196>
				--cRxLock;
 8010be2:	1e6b      	subs	r3, r5, #1
 8010be4:	b2da      	uxtb	r2, r3
 8010be6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010be8:	b16a      	cbz	r2, 8010c06 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010bea:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bec:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010bee:	b153      	cbz	r3, 8010c06 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bf0:	f001 f87e 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010bf4:	2800      	cmp	r0, #0
 8010bf6:	d0f4      	beq.n	8010be2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 8010bf8:	f001 f916 	bl	8011e28 <vTaskMissedYield>
				--cRxLock;
 8010bfc:	1e6b      	subs	r3, r5, #1
 8010bfe:	b2da      	uxtb	r2, r3
 8010c00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c02:	2a00      	cmp	r2, #0
 8010c04:	d1f1      	bne.n	8010bea <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 8010c06:	23ff      	movs	r3, #255	; 0xff
 8010c08:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010c0c:	f7ff fa14 	bl	8010038 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010c10:	f000 ff6e 	bl	8011af0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010c14:	f7ff f9ee 	bl	800fff4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010c18:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010c1a:	b153      	cbz	r3, 8010c32 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 8010c1c:	f7ff fa0c 	bl	8010038 <vPortExitCritical>
		taskENTER_CRITICAL();
 8010c20:	f7ff f9e8 	bl	800fff4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010c24:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010c26:	2d00      	cmp	r5, #0
 8010c28:	d162      	bne.n	8010cf0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010c2a:	9b01      	ldr	r3, [sp, #4]
 8010c2c:	2b00      	cmp	r3, #0
 8010c2e:	f47f af31 	bne.w	8010a94 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 8010c32:	f7ff fa01 	bl	8010038 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010c36:	2000      	movs	r0, #0
}
 8010c38:	b005      	add	sp, #20
 8010c3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8010c3e:	f7ff f9fb 	bl	8010038 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010c42:	9901      	ldr	r1, [sp, #4]
 8010c44:	4630      	mov	r0, r6
 8010c46:	f000 ffc5 	bl	8011bd4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010c4a:	f7ff f9d3 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010c4e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010c52:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c54:	2d00      	cmp	r5, #0
 8010c56:	dc04      	bgt.n	8010c62 <xQueueReceive+0x20e>
 8010c58:	e011      	b.n	8010c7e <xQueueReceive+0x22a>
			--cTxLock;
 8010c5a:	1e6b      	subs	r3, r5, #1
 8010c5c:	b2da      	uxtb	r2, r3
 8010c5e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c60:	b16a      	cbz	r2, 8010c7e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c62:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c64:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c66:	b153      	cbz	r3, 8010c7e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c68:	f001 f842 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010c6c:	2800      	cmp	r0, #0
 8010c6e:	d0f4      	beq.n	8010c5a <xQueueReceive+0x206>
						vTaskMissedYield();
 8010c70:	f001 f8da 	bl	8011e28 <vTaskMissedYield>
			--cTxLock;
 8010c74:	1e6b      	subs	r3, r5, #1
 8010c76:	b2da      	uxtb	r2, r3
 8010c78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c7a:	2a00      	cmp	r2, #0
 8010c7c:	d1f1      	bne.n	8010c62 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010c7e:	23ff      	movs	r3, #255	; 0xff
 8010c80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010c84:	f7ff f9d8 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010c88:	f7ff f9b4 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010c8c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010c90:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c92:	2d00      	cmp	r5, #0
 8010c94:	dd14      	ble.n	8010cc0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c96:	f104 0910 	add.w	r9, r4, #16
 8010c9a:	e003      	b.n	8010ca4 <xQueueReceive+0x250>
				--cRxLock;
 8010c9c:	1e6b      	subs	r3, r5, #1
 8010c9e:	b2da      	uxtb	r2, r3
 8010ca0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ca2:	b16a      	cbz	r2, 8010cc0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010ca4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ca6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010ca8:	b153      	cbz	r3, 8010cc0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010caa:	f001 f821 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010cae:	2800      	cmp	r0, #0
 8010cb0:	d0f4      	beq.n	8010c9c <xQueueReceive+0x248>
					vTaskMissedYield();
 8010cb2:	f001 f8b9 	bl	8011e28 <vTaskMissedYield>
				--cRxLock;
 8010cb6:	1e6b      	subs	r3, r5, #1
 8010cb8:	b2da      	uxtb	r2, r3
 8010cba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010cbc:	2a00      	cmp	r2, #0
 8010cbe:	d1f1      	bne.n	8010ca4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 8010cc0:	23ff      	movs	r3, #255	; 0xff
 8010cc2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010cc6:	f7ff f9b7 	bl	8010038 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010cca:	f000 ff11 	bl	8011af0 <xTaskResumeAll>
 8010cce:	2800      	cmp	r0, #0
 8010cd0:	d1a6      	bne.n	8010c20 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 8010cd2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010cd6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010cda:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010cde:	f3bf 8f4f 	dsb	sy
 8010ce2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 8010ce6:	f7ff f985 	bl	800fff4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010cea:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010cec:	2d00      	cmp	r5, #0
 8010cee:	d09c      	beq.n	8010c2a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010cf0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8010cf2:	b152      	cbz	r2, 8010d0a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cf4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010cf6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cf8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010cfa:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cfc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010cfe:	bf24      	itt	cs
 8010d00:	6821      	ldrcs	r1, [r4, #0]
 8010d02:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010d04:	4638      	mov	r0, r7
 8010d06:	f01d f956 	bl	802dfb6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010d0a:	3d01      	subs	r5, #1
 8010d0c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d0e:	6923      	ldr	r3, [r4, #16]
 8010d10:	b963      	cbnz	r3, 8010d2c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 8010d12:	f7ff f991 	bl	8010038 <vPortExitCritical>
				return pdPASS;
 8010d16:	2001      	movs	r0, #1
 8010d18:	e78e      	b.n	8010c38 <xQueueReceive+0x1e4>
 8010d1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d1e:	f383 8811 	msr	BASEPRI, r3
 8010d22:	f3bf 8f6f 	isb	sy
 8010d26:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010d2a:	e7fe      	b.n	8010d2a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d2c:	f104 0010 	add.w	r0, r4, #16
 8010d30:	f000 ffde 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010d34:	2800      	cmp	r0, #0
 8010d36:	d0ec      	beq.n	8010d12 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 8010d38:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010d3c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010d40:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010d44:	f3bf 8f4f 	dsb	sy
 8010d48:	f3bf 8f6f 	isb	sy
 8010d4c:	e7e1      	b.n	8010d12 <xQueueReceive+0x2be>
 8010d4e:	bf00      	nop

08010d50 <xQueueSemaphoreTake>:
{
 8010d50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d54:	b084      	sub	sp, #16
 8010d56:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010d58:	2800      	cmp	r0, #0
 8010d5a:	d05c      	beq.n	8010e16 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010d5c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 8010d5e:	4604      	mov	r4, r0
 8010d60:	b147      	cbz	r7, 8010d74 <xQueueSemaphoreTake+0x24>
 8010d62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d66:	f383 8811 	msr	BASEPRI, r3
 8010d6a:	f3bf 8f6f 	isb	sy
 8010d6e:	f3bf 8f4f 	dsb	sy
 8010d72:	e7fe      	b.n	8010d72 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010d74:	f001 f85e 	bl	8011e34 <xTaskGetSchedulerState>
 8010d78:	4605      	mov	r5, r0
 8010d7a:	2800      	cmp	r0, #0
 8010d7c:	d054      	beq.n	8010e28 <xQueueSemaphoreTake+0xd8>
 8010d7e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d80:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010d84:	f7ff f936 	bl	800fff4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8010d88:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8010d8a:	2b00      	cmp	r3, #0
 8010d8c:	f040 8148 	bne.w	8011020 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010d90:	9b01      	ldr	r3, [sp, #4]
 8010d92:	2b00      	cmp	r3, #0
 8010d94:	f000 813a 	beq.w	801100c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 8010d98:	2d00      	cmp	r5, #0
 8010d9a:	f000 809d 	beq.w	8010ed8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 8010d9e:	f7ff f94b 	bl	8010038 <vPortExitCritical>
		vTaskSuspendAll();
 8010da2:	f000 fe9d 	bl	8011ae0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010da6:	f7ff f925 	bl	800fff4 <vPortEnterCritical>
 8010daa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010dae:	2bff      	cmp	r3, #255	; 0xff
 8010db0:	bf04      	itt	eq
 8010db2:	2300      	moveq	r3, #0
 8010db4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010db8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010dbc:	2bff      	cmp	r3, #255	; 0xff
 8010dbe:	bf04      	itt	eq
 8010dc0:	2300      	moveq	r3, #0
 8010dc2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8010dc6:	f7ff f937 	bl	8010038 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010dca:	a901      	add	r1, sp, #4
 8010dcc:	a802      	add	r0, sp, #8
 8010dce:	f000 ffe3 	bl	8011d98 <xTaskCheckForTimeOut>
 8010dd2:	2800      	cmp	r0, #0
 8010dd4:	d135      	bne.n	8010e42 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 8010dd6:	f7ff f90d 	bl	800fff4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010dda:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010ddc:	2b00      	cmp	r3, #0
 8010dde:	f000 80a4 	beq.w	8010f2a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 8010de2:	f7ff f929 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010de6:	f7ff f905 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010dea:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010dee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010df0:	2d00      	cmp	r5, #0
 8010df2:	dc05      	bgt.n	8010e00 <xQueueSemaphoreTake+0xb0>
 8010df4:	e074      	b.n	8010ee0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 8010df6:	1e6b      	subs	r3, r5, #1
 8010df8:	b2da      	uxtb	r2, r3
 8010dfa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010dfc:	2a00      	cmp	r2, #0
 8010dfe:	d06f      	beq.n	8010ee0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e00:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e02:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e04:	2b00      	cmp	r3, #0
 8010e06:	d06b      	beq.n	8010ee0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e08:	f000 ff72 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010e0c:	2800      	cmp	r0, #0
 8010e0e:	d0f2      	beq.n	8010df6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 8010e10:	f001 f80a 	bl	8011e28 <vTaskMissedYield>
 8010e14:	e7ef      	b.n	8010df6 <xQueueSemaphoreTake+0xa6>
 8010e16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e1a:	f383 8811 	msr	BASEPRI, r3
 8010e1e:	f3bf 8f6f 	isb	sy
 8010e22:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010e26:	e7fe      	b.n	8010e26 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010e28:	9b01      	ldr	r3, [sp, #4]
 8010e2a:	2b00      	cmp	r3, #0
 8010e2c:	f000 80d4 	beq.w	8010fd8 <xQueueSemaphoreTake+0x288>
 8010e30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e34:	f383 8811 	msr	BASEPRI, r3
 8010e38:	f3bf 8f6f 	isb	sy
 8010e3c:	f3bf 8f4f 	dsb	sy
 8010e40:	e7fe      	b.n	8010e40 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 8010e42:	f7ff f8d7 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010e46:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010e4a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e4c:	2d00      	cmp	r5, #0
 8010e4e:	dc04      	bgt.n	8010e5a <xQueueSemaphoreTake+0x10a>
 8010e50:	e011      	b.n	8010e76 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 8010e52:	1e6b      	subs	r3, r5, #1
 8010e54:	b2da      	uxtb	r2, r3
 8010e56:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e58:	b16a      	cbz	r2, 8010e76 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e5c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e5e:	b153      	cbz	r3, 8010e76 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e60:	f000 ff46 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010e64:	2800      	cmp	r0, #0
 8010e66:	d0f4      	beq.n	8010e52 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 8010e68:	f000 ffde 	bl	8011e28 <vTaskMissedYield>
			--cTxLock;
 8010e6c:	1e6b      	subs	r3, r5, #1
 8010e6e:	b2da      	uxtb	r2, r3
 8010e70:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e72:	2a00      	cmp	r2, #0
 8010e74:	d1f1      	bne.n	8010e5a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 8010e76:	23ff      	movs	r3, #255	; 0xff
 8010e78:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010e7c:	f7ff f8dc 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010e80:	f7ff f8b8 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010e84:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010e88:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e8a:	2d00      	cmp	r5, #0
 8010e8c:	dd14      	ble.n	8010eb8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e8e:	f104 0810 	add.w	r8, r4, #16
 8010e92:	e003      	b.n	8010e9c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 8010e94:	1e6b      	subs	r3, r5, #1
 8010e96:	b2da      	uxtb	r2, r3
 8010e98:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e9a:	b16a      	cbz	r2, 8010eb8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010e9c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e9e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010ea0:	b153      	cbz	r3, 8010eb8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ea2:	f000 ff25 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010ea6:	2800      	cmp	r0, #0
 8010ea8:	d0f4      	beq.n	8010e94 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 8010eaa:	f000 ffbd 	bl	8011e28 <vTaskMissedYield>
				--cRxLock;
 8010eae:	1e6b      	subs	r3, r5, #1
 8010eb0:	b2da      	uxtb	r2, r3
 8010eb2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010eb4:	2a00      	cmp	r2, #0
 8010eb6:	d1f1      	bne.n	8010e9c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 8010eb8:	23ff      	movs	r3, #255	; 0xff
 8010eba:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010ebe:	f7ff f8bb 	bl	8010038 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010ec2:	f000 fe15 	bl	8011af0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010ec6:	f7ff f895 	bl	800fff4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010eca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010ecc:	2b00      	cmp	r3, #0
 8010ece:	d07c      	beq.n	8010fca <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 8010ed0:	f7ff f8b2 	bl	8010038 <vPortExitCritical>
	return xReturn;
 8010ed4:	2501      	movs	r5, #1
 8010ed6:	e755      	b.n	8010d84 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010ed8:	a802      	add	r0, sp, #8
 8010eda:	f000 ff51 	bl	8011d80 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8010ede:	e75e      	b.n	8010d9e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010ee0:	23ff      	movs	r3, #255	; 0xff
 8010ee2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010ee6:	f7ff f8a7 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010eea:	f7ff f883 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010eee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010ef2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ef4:	2d00      	cmp	r5, #0
 8010ef6:	dd10      	ble.n	8010f1a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ef8:	f104 0810 	add.w	r8, r4, #16
 8010efc:	e003      	b.n	8010f06 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 8010efe:	1e6b      	subs	r3, r5, #1
 8010f00:	b2da      	uxtb	r2, r3
 8010f02:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f04:	b14a      	cbz	r2, 8010f1a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f06:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f08:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f0a:	b133      	cbz	r3, 8010f1a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f0c:	f000 fef0 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010f10:	2800      	cmp	r0, #0
 8010f12:	d0f4      	beq.n	8010efe <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 8010f14:	f000 ff88 	bl	8011e28 <vTaskMissedYield>
 8010f18:	e7f1      	b.n	8010efe <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 8010f1a:	23ff      	movs	r3, #255	; 0xff
 8010f1c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010f20:	f7ff f88a 	bl	8010038 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010f24:	f000 fde4 	bl	8011af0 <xTaskResumeAll>
 8010f28:	e7d4      	b.n	8010ed4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010f2a:	f7ff f885 	bl	8010038 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010f2e:	6823      	ldr	r3, [r4, #0]
 8010f30:	2b00      	cmp	r3, #0
 8010f32:	d062      	beq.n	8010ffa <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010f34:	9901      	ldr	r1, [sp, #4]
 8010f36:	4630      	mov	r0, r6
 8010f38:	f000 fe4c 	bl	8011bd4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010f3c:	f7ff f85a 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010f40:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010f44:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f46:	2d00      	cmp	r5, #0
 8010f48:	dc04      	bgt.n	8010f54 <xQueueSemaphoreTake+0x204>
 8010f4a:	e00d      	b.n	8010f68 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 8010f4c:	1e6b      	subs	r3, r5, #1
 8010f4e:	b2da      	uxtb	r2, r3
 8010f50:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f52:	b14a      	cbz	r2, 8010f68 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f54:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f56:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f58:	b133      	cbz	r3, 8010f68 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f5a:	f000 fec9 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010f5e:	2800      	cmp	r0, #0
 8010f60:	d0f4      	beq.n	8010f4c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 8010f62:	f000 ff61 	bl	8011e28 <vTaskMissedYield>
 8010f66:	e7f1      	b.n	8010f4c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 8010f68:	23ff      	movs	r3, #255	; 0xff
 8010f6a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010f6e:	f7ff f863 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010f72:	f7ff f83f 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010f76:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010f7a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f7c:	2d00      	cmp	r5, #0
 8010f7e:	dd10      	ble.n	8010fa2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f80:	f104 0810 	add.w	r8, r4, #16
 8010f84:	e003      	b.n	8010f8e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 8010f86:	1e6b      	subs	r3, r5, #1
 8010f88:	b2da      	uxtb	r2, r3
 8010f8a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f8c:	b14a      	cbz	r2, 8010fa2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f8e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f90:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f92:	b133      	cbz	r3, 8010fa2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f94:	f000 feac 	bl	8011cf0 <xTaskRemoveFromEventList>
 8010f98:	2800      	cmp	r0, #0
 8010f9a:	d0f4      	beq.n	8010f86 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 8010f9c:	f000 ff44 	bl	8011e28 <vTaskMissedYield>
 8010fa0:	e7f1      	b.n	8010f86 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 8010fa2:	23ff      	movs	r3, #255	; 0xff
 8010fa4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010fa8:	f7ff f846 	bl	8010038 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010fac:	f000 fda0 	bl	8011af0 <xTaskResumeAll>
 8010fb0:	2800      	cmp	r0, #0
 8010fb2:	d18f      	bne.n	8010ed4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 8010fb4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010fb8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010fbc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010fc0:	f3bf 8f4f 	dsb	sy
 8010fc4:	f3bf 8f6f 	isb	sy
 8010fc8:	e784      	b.n	8010ed4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010fca:	f7ff f835 	bl	8010038 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 8010fce:	b92f      	cbnz	r7, 8010fdc <xQueueSemaphoreTake+0x28c>
}
 8010fd0:	4638      	mov	r0, r7
 8010fd2:	b004      	add	sp, #16
 8010fd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010fd8:	4607      	mov	r7, r0
 8010fda:	e6d1      	b.n	8010d80 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 8010fdc:	f7ff f80a 	bl	800fff4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8010fe0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010fe2:	b119      	cbz	r1, 8010fec <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8010fe4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010fe6:	6819      	ldr	r1, [r3, #0]
 8010fe8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8010fec:	68a0      	ldr	r0, [r4, #8]
 8010fee:	f000 ffbd 	bl	8011f6c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8010ff2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 8010ff4:	f7ff f820 	bl	8010038 <vPortExitCritical>
 8010ff8:	e7ea      	b.n	8010fd0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 8010ffa:	f7fe fffb 	bl	800fff4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8010ffe:	68a0      	ldr	r0, [r4, #8]
 8011000:	f000 ff28 	bl	8011e54 <xTaskPriorityInherit>
 8011004:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 8011006:	f7ff f817 	bl	8010038 <vPortExitCritical>
 801100a:	e793      	b.n	8010f34 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 801100c:	b197      	cbz	r7, 8011034 <xQueueSemaphoreTake+0x2e4>
 801100e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011012:	f383 8811 	msr	BASEPRI, r3
 8011016:	f3bf 8f6f 	isb	sy
 801101a:	f3bf 8f4f 	dsb	sy
 801101e:	e7fe      	b.n	801101e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011020:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8011022:	3b01      	subs	r3, #1
 8011024:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011026:	b1ca      	cbz	r2, 801105c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011028:	6923      	ldr	r3, [r4, #16]
 801102a:	b933      	cbnz	r3, 801103a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 801102c:	f7ff f804 	bl	8010038 <vPortExitCritical>
				return pdPASS;
 8011030:	2701      	movs	r7, #1
 8011032:	e7cd      	b.n	8010fd0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 8011034:	f7ff f800 	bl	8010038 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8011038:	e7ca      	b.n	8010fd0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801103a:	f104 0010 	add.w	r0, r4, #16
 801103e:	f000 fe57 	bl	8011cf0 <xTaskRemoveFromEventList>
 8011042:	2800      	cmp	r0, #0
 8011044:	d0f2      	beq.n	801102c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 8011046:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801104a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801104e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011052:	f3bf 8f4f 	dsb	sy
 8011056:	f3bf 8f6f 	isb	sy
 801105a:	e7e7      	b.n	801102c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 801105c:	f000 ffda 	bl	8012014 <pvTaskIncrementMutexHeldCount>
 8011060:	60a0      	str	r0, [r4, #8]
 8011062:	e7e1      	b.n	8011028 <xQueueSemaphoreTake+0x2d8>

08011064 <xQueueReceiveFromISR>:
{
 8011064:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 8011068:	b310      	cbz	r0, 80110b0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801106a:	460e      	mov	r6, r1
 801106c:	4617      	mov	r7, r2
 801106e:	4604      	mov	r4, r0
 8011070:	b191      	cbz	r1, 8011098 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8011072:	f7ff f8f3 	bl	801025c <vPortValidateInterruptPriority>
	__asm volatile
 8011076:	f3ef 8911 	mrs	r9, BASEPRI
 801107a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801107e:	f383 8811 	msr	BASEPRI, r3
 8011082:	f3bf 8f6f 	isb	sy
 8011086:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801108a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801108c:	b9cd      	cbnz	r5, 80110c2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 801108e:	4628      	mov	r0, r5
	__asm volatile
 8011090:	f389 8811 	msr	BASEPRI, r9
}
 8011094:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8011098:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801109a:	2b00      	cmp	r3, #0
 801109c:	d0e9      	beq.n	8011072 <xQueueReceiveFromISR+0xe>
	__asm volatile
 801109e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80110a2:	f383 8811 	msr	BASEPRI, r3
 80110a6:	f3bf 8f6f 	isb	sy
 80110aa:	f3bf 8f4f 	dsb	sy
 80110ae:	e7fe      	b.n	80110ae <xQueueReceiveFromISR+0x4a>
 80110b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80110b4:	f383 8811 	msr	BASEPRI, r3
 80110b8:	f3bf 8f6f 	isb	sy
 80110bc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80110c0:	e7fe      	b.n	80110c0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 80110c2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80110c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 80110c8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80110cc:	b152      	cbz	r2, 80110e4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80110ce:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80110d0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80110d2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80110d4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80110d6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80110d8:	bf24      	itt	cs
 80110da:	6821      	ldrcs	r1, [r4, #0]
 80110dc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80110de:	4630      	mov	r0, r6
 80110e0:	f01c ff69 	bl	802dfb6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80110e4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 80110e6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80110ea:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80110ec:	d009      	beq.n	8011102 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80110ee:	f108 0301 	add.w	r3, r8, #1
 80110f2:	b25b      	sxtb	r3, r3
 80110f4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 80110f8:	2001      	movs	r0, #1
	__asm volatile
 80110fa:	f389 8811 	msr	BASEPRI, r9
}
 80110fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011102:	6923      	ldr	r3, [r4, #16]
 8011104:	2b00      	cmp	r3, #0
 8011106:	d0f7      	beq.n	80110f8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011108:	f104 0010 	add.w	r0, r4, #16
 801110c:	f000 fdf0 	bl	8011cf0 <xTaskRemoveFromEventList>
 8011110:	2800      	cmp	r0, #0
 8011112:	d0f1      	beq.n	80110f8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 8011114:	2f00      	cmp	r7, #0
 8011116:	d0ef      	beq.n	80110f8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8011118:	2001      	movs	r0, #1
 801111a:	6038      	str	r0, [r7, #0]
 801111c:	e7b8      	b.n	8011090 <xQueueReceiveFromISR+0x2c>
 801111e:	bf00      	nop

08011120 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 8011120:	b158      	cbz	r0, 801113a <uxQueueMessagesWaiting+0x1a>
{
 8011122:	b510      	push	{r4, lr}
 8011124:	4604      	mov	r4, r0
 8011126:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 8011128:	f7fe ff64 	bl	800fff4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 801112c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 801112e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011130:	f7fe ff82 	bl	8010038 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011134:	9801      	ldr	r0, [sp, #4]
 8011136:	b002      	add	sp, #8
 8011138:	bd10      	pop	{r4, pc}
	__asm volatile
 801113a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801113e:	f383 8811 	msr	BASEPRI, r3
 8011142:	f3bf 8f6f 	isb	sy
 8011146:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 801114a:	e7fe      	b.n	801114a <uxQueueMessagesWaiting+0x2a>

0801114c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 801114c:	b108      	cbz	r0, 8011152 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 801114e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011150:	4770      	bx	lr
 8011152:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011156:	f383 8811 	msr	BASEPRI, r3
 801115a:	f3bf 8f6f 	isb	sy
 801115e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011162:	e7fe      	b.n	8011162 <uxQueueMessagesWaitingFromISR+0x16>
 8011164:	0000      	movs	r0, r0
	...

08011168 <vQueueDelete>:
	configASSERT( pxQueue );
 8011168:	b1f0      	cbz	r0, 80111a8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801116a:	4b21      	ldr	r3, [pc, #132]	; (80111f0 <vQueueDelete+0x88>)
 801116c:	685a      	ldr	r2, [r3, #4]
 801116e:	4290      	cmp	r0, r2
 8011170:	d025      	beq.n	80111be <vQueueDelete+0x56>
 8011172:	68da      	ldr	r2, [r3, #12]
 8011174:	4290      	cmp	r0, r2
 8011176:	d02c      	beq.n	80111d2 <vQueueDelete+0x6a>
 8011178:	695a      	ldr	r2, [r3, #20]
 801117a:	4290      	cmp	r0, r2
 801117c:	d02b      	beq.n	80111d6 <vQueueDelete+0x6e>
 801117e:	69da      	ldr	r2, [r3, #28]
 8011180:	4290      	cmp	r0, r2
 8011182:	d02a      	beq.n	80111da <vQueueDelete+0x72>
 8011184:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8011186:	4290      	cmp	r0, r2
 8011188:	d029      	beq.n	80111de <vQueueDelete+0x76>
 801118a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801118c:	4290      	cmp	r0, r2
 801118e:	d01e      	beq.n	80111ce <vQueueDelete+0x66>
 8011190:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8011192:	4290      	cmp	r0, r2
 8011194:	d025      	beq.n	80111e2 <vQueueDelete+0x7a>
 8011196:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8011198:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801119a:	bf08      	it	eq
 801119c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801119e:	d00f      	beq.n	80111c0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80111a0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 80111a4:	b14b      	cbz	r3, 80111ba <vQueueDelete+0x52>
}
 80111a6:	4770      	bx	lr
 80111a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80111ac:	f383 8811 	msr	BASEPRI, r3
 80111b0:	f3bf 8f6f 	isb	sy
 80111b4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80111b8:	e7fe      	b.n	80111b8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 80111ba:	f7fe be03 	b.w	800fdc4 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80111be:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80111c0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80111e8 <vQueueDelete+0x80>
 80111c4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80111c8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 80111cc:	e7e8      	b.n	80111a0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80111ce:	2205      	movs	r2, #5
 80111d0:	e7f6      	b.n	80111c0 <vQueueDelete+0x58>
 80111d2:	2201      	movs	r2, #1
 80111d4:	e7f4      	b.n	80111c0 <vQueueDelete+0x58>
 80111d6:	2202      	movs	r2, #2
 80111d8:	e7f2      	b.n	80111c0 <vQueueDelete+0x58>
 80111da:	2203      	movs	r2, #3
 80111dc:	e7f0      	b.n	80111c0 <vQueueDelete+0x58>
 80111de:	2204      	movs	r2, #4
 80111e0:	e7ee      	b.n	80111c0 <vQueueDelete+0x58>
 80111e2:	2206      	movs	r2, #6
 80111e4:	e7ec      	b.n	80111c0 <vQueueDelete+0x58>
 80111e6:	bf00      	nop
	...
 80111f0:	200131c8 	.word	0x200131c8

080111f4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80111f4:	4b12      	ldr	r3, [pc, #72]	; (8011240 <vQueueAddToRegistry+0x4c>)
 80111f6:	681a      	ldr	r2, [r3, #0]
 80111f8:	b17a      	cbz	r2, 801121a <vQueueAddToRegistry+0x26>
 80111fa:	689a      	ldr	r2, [r3, #8]
 80111fc:	b162      	cbz	r2, 8011218 <vQueueAddToRegistry+0x24>
 80111fe:	691a      	ldr	r2, [r3, #16]
 8011200:	b192      	cbz	r2, 8011228 <vQueueAddToRegistry+0x34>
 8011202:	699a      	ldr	r2, [r3, #24]
 8011204:	b192      	cbz	r2, 801122c <vQueueAddToRegistry+0x38>
 8011206:	6a1a      	ldr	r2, [r3, #32]
 8011208:	b192      	cbz	r2, 8011230 <vQueueAddToRegistry+0x3c>
 801120a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 801120c:	b192      	cbz	r2, 8011234 <vQueueAddToRegistry+0x40>
 801120e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8011210:	b192      	cbz	r2, 8011238 <vQueueAddToRegistry+0x44>
 8011212:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8011214:	b192      	cbz	r2, 801123c <vQueueAddToRegistry+0x48>
	}
 8011216:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011218:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 801121a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 801121e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8011222:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 8011226:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011228:	2202      	movs	r2, #2
 801122a:	e7f6      	b.n	801121a <vQueueAddToRegistry+0x26>
 801122c:	2203      	movs	r2, #3
 801122e:	e7f4      	b.n	801121a <vQueueAddToRegistry+0x26>
 8011230:	2204      	movs	r2, #4
 8011232:	e7f2      	b.n	801121a <vQueueAddToRegistry+0x26>
 8011234:	2205      	movs	r2, #5
 8011236:	e7f0      	b.n	801121a <vQueueAddToRegistry+0x26>
 8011238:	2206      	movs	r2, #6
 801123a:	e7ee      	b.n	801121a <vQueueAddToRegistry+0x26>
 801123c:	2207      	movs	r2, #7
 801123e:	e7ec      	b.n	801121a <vQueueAddToRegistry+0x26>
 8011240:	200131c8 	.word	0x200131c8

08011244 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8011244:	b570      	push	{r4, r5, r6, lr}
 8011246:	4605      	mov	r5, r0
 8011248:	460e      	mov	r6, r1
 801124a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 801124c:	f7fe fed2 	bl	800fff4 <vPortEnterCritical>
 8011250:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011254:	2bff      	cmp	r3, #255	; 0xff
 8011256:	bf04      	itt	eq
 8011258:	2300      	moveq	r3, #0
 801125a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 801125e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 8011262:	2bff      	cmp	r3, #255	; 0xff
 8011264:	bf04      	itt	eq
 8011266:	2300      	moveq	r3, #0
 8011268:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 801126c:	f7fe fee4 	bl	8010038 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8011270:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8011272:	2b00      	cmp	r3, #0
 8011274:	d043      	beq.n	80112fe <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 8011276:	f7fe febd 	bl	800fff4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 801127a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 801127e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011280:	2c00      	cmp	r4, #0
 8011282:	dd14      	ble.n	80112ae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011284:	f105 0624 	add.w	r6, r5, #36	; 0x24
 8011288:	e003      	b.n	8011292 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 801128a:	1e63      	subs	r3, r4, #1
 801128c:	b2da      	uxtb	r2, r3
 801128e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011290:	b16a      	cbz	r2, 80112ae <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011292:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011294:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011296:	b153      	cbz	r3, 80112ae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011298:	f000 fd2a 	bl	8011cf0 <xTaskRemoveFromEventList>
 801129c:	2800      	cmp	r0, #0
 801129e:	d0f4      	beq.n	801128a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 80112a0:	f000 fdc2 	bl	8011e28 <vTaskMissedYield>
			--cTxLock;
 80112a4:	1e63      	subs	r3, r4, #1
 80112a6:	b2da      	uxtb	r2, r3
 80112a8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80112aa:	2a00      	cmp	r2, #0
 80112ac:	d1f1      	bne.n	8011292 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 80112ae:	23ff      	movs	r3, #255	; 0xff
 80112b0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 80112b4:	f7fe fec0 	bl	8010038 <vPortExitCritical>
	taskENTER_CRITICAL();
 80112b8:	f7fe fe9c 	bl	800fff4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80112bc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 80112c0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112c2:	2c00      	cmp	r4, #0
 80112c4:	dd14      	ble.n	80112f0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112c6:	f105 0610 	add.w	r6, r5, #16
 80112ca:	e003      	b.n	80112d4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 80112cc:	1e63      	subs	r3, r4, #1
 80112ce:	b2da      	uxtb	r2, r3
 80112d0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112d2:	b16a      	cbz	r2, 80112f0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80112d4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112d6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80112d8:	b153      	cbz	r3, 80112f0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112da:	f000 fd09 	bl	8011cf0 <xTaskRemoveFromEventList>
 80112de:	2800      	cmp	r0, #0
 80112e0:	d0f4      	beq.n	80112cc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 80112e2:	f000 fda1 	bl	8011e28 <vTaskMissedYield>
				--cRxLock;
 80112e6:	1e63      	subs	r3, r4, #1
 80112e8:	b2da      	uxtb	r2, r3
 80112ea:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112ec:	2a00      	cmp	r2, #0
 80112ee:	d1f1      	bne.n	80112d4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 80112f0:	23ff      	movs	r3, #255	; 0xff
 80112f2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 80112f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80112fa:	f7fe be9d 	b.w	8010038 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80112fe:	4622      	mov	r2, r4
 8011300:	4631      	mov	r1, r6
 8011302:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8011306:	f000 fca9 	bl	8011c5c <vTaskPlaceOnEventListRestricted>
 801130a:	e7b4      	b.n	8011276 <vQueueWaitForMessageRestricted+0x32>

0801130c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 801130c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011310:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8011312:	f7fe fe6f 	bl	800fff4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8011316:	4a34      	ldr	r2, [pc, #208]	; (80113e8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 8011318:	4e34      	ldr	r6, [pc, #208]	; (80113ec <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 801131a:	6813      	ldr	r3, [r2, #0]
 801131c:	3301      	adds	r3, #1
 801131e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 8011320:	6833      	ldr	r3, [r6, #0]
 8011322:	2b00      	cmp	r3, #0
 8011324:	d032      	beq.n	801138c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 8011326:	4c32      	ldr	r4, [pc, #200]	; (80113f0 <prvAddNewTaskToReadyList+0xe4>)
 8011328:	6823      	ldr	r3, [r4, #0]
 801132a:	b33b      	cbz	r3, 801137c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801132c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 801132e:	4f31      	ldr	r7, [pc, #196]	; (80113f4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 8011330:	4a31      	ldr	r2, [pc, #196]	; (80113f8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 8011332:	4932      	ldr	r1, [pc, #200]	; (80113fc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 8011334:	6813      	ldr	r3, [r2, #0]
 8011336:	3301      	adds	r3, #1
 8011338:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 801133a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 801133c:	680b      	ldr	r3, [r1, #0]
 801133e:	4283      	cmp	r3, r0
 8011340:	bf38      	it	cc
 8011342:	6008      	strcc	r0, [r1, #0]
 8011344:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011348:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 801134c:	1d29      	adds	r1, r5, #4
 801134e:	f7fe fdad 	bl	800feac <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 8011352:	f7fe fe71 	bl	8010038 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 8011356:	6823      	ldr	r3, [r4, #0]
 8011358:	b173      	cbz	r3, 8011378 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 801135a:	6832      	ldr	r2, [r6, #0]
 801135c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 801135e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011360:	429a      	cmp	r2, r3
 8011362:	d209      	bcs.n	8011378 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 8011364:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011368:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801136c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011370:	f3bf 8f4f 	dsb	sy
 8011374:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8011378:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801137c:	6833      	ldr	r3, [r6, #0]
 801137e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011380:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011382:	4f1c      	ldr	r7, [pc, #112]	; (80113f4 <prvAddNewTaskToReadyList+0xe8>)
 8011384:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 8011386:	bf98      	it	ls
 8011388:	6035      	strls	r5, [r6, #0]
 801138a:	e7d1      	b.n	8011330 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 801138c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 801138e:	6813      	ldr	r3, [r2, #0]
 8011390:	2b01      	cmp	r3, #1
 8011392:	d003      	beq.n	801139c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8011394:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011396:	4f17      	ldr	r7, [pc, #92]	; (80113f4 <prvAddNewTaskToReadyList+0xe8>)
 8011398:	4c15      	ldr	r4, [pc, #84]	; (80113f0 <prvAddNewTaskToReadyList+0xe4>)
 801139a:	e7c9      	b.n	8011330 <prvAddNewTaskToReadyList+0x24>
 801139c:	4f15      	ldr	r7, [pc, #84]	; (80113f4 <prvAddNewTaskToReadyList+0xe8>)
 801139e:	463c      	mov	r4, r7
 80113a0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80113a4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80113a6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80113a8:	f7fe fd70 	bl	800fe8c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80113ac:	45a0      	cmp	r8, r4
 80113ae:	d1f9      	bne.n	80113a4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 80113b0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8011414 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 80113b4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8011418 <prvAddNewTaskToReadyList+0x10c>
 80113b8:	4c0d      	ldr	r4, [pc, #52]	; (80113f0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 80113ba:	4648      	mov	r0, r9
 80113bc:	f7fe fd66 	bl	800fe8c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80113c0:	4640      	mov	r0, r8
 80113c2:	f7fe fd63 	bl	800fe8c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80113c6:	480e      	ldr	r0, [pc, #56]	; (8011400 <prvAddNewTaskToReadyList+0xf4>)
 80113c8:	f7fe fd60 	bl	800fe8c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80113cc:	480d      	ldr	r0, [pc, #52]	; (8011404 <prvAddNewTaskToReadyList+0xf8>)
 80113ce:	f7fe fd5d 	bl	800fe8c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80113d2:	480d      	ldr	r0, [pc, #52]	; (8011408 <prvAddNewTaskToReadyList+0xfc>)
 80113d4:	f7fe fd5a 	bl	800fe8c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80113d8:	4b0c      	ldr	r3, [pc, #48]	; (801140c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 80113da:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 80113dc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80113e0:	4b0b      	ldr	r3, [pc, #44]	; (8011410 <prvAddNewTaskToReadyList+0x104>)
 80113e2:	f8c3 8000 	str.w	r8, [r3]
}
 80113e6:	e7a3      	b.n	8011330 <prvAddNewTaskToReadyList+0x24>
 80113e8:	20013674 	.word	0x20013674
 80113ec:	20013208 	.word	0x20013208
 80113f0:	200136d0 	.word	0x200136d0
 80113f4:	20013214 	.word	0x20013214
 80113f8:	20013680 	.word	0x20013680
 80113fc:	20013684 	.word	0x20013684
 8011400:	200136bc 	.word	0x200136bc
 8011404:	200136e8 	.word	0x200136e8
 8011408:	200136d4 	.word	0x200136d4
 801140c:	2001320c 	.word	0x2001320c
 8011410:	20013210 	.word	0x20013210
 8011414:	20013688 	.word	0x20013688
 8011418:	2001369c 	.word	0x2001369c

0801141c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801141c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011420:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011422:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011426:	ea4f 0982 	mov.w	r9, r2, lsl #2
 801142a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801142c:	4606      	mov	r6, r0
 801142e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011430:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011432:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8011434:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011436:	f01c fc98 	bl	802dd6a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 801143a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801143c:	f1a9 0904 	sub.w	r9, r9, #4
 8011440:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8011442:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 8011446:	2d00      	cmp	r5, #0
 8011448:	d079      	beq.n	801153e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801144a:	782b      	ldrb	r3, [r5, #0]
 801144c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 8011450:	2b00      	cmp	r3, #0
 8011452:	d03b      	beq.n	80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011454:	786b      	ldrb	r3, [r5, #1]
 8011456:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 801145a:	2b00      	cmp	r3, #0
 801145c:	d036      	beq.n	80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801145e:	78ab      	ldrb	r3, [r5, #2]
 8011460:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 8011464:	b393      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011466:	78eb      	ldrb	r3, [r5, #3]
 8011468:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 801146c:	b373      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801146e:	792b      	ldrb	r3, [r5, #4]
 8011470:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 8011474:	b353      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011476:	796b      	ldrb	r3, [r5, #5]
 8011478:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 801147c:	b333      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801147e:	79ab      	ldrb	r3, [r5, #6]
 8011480:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 8011484:	b313      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011486:	79eb      	ldrb	r3, [r5, #7]
 8011488:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 801148c:	b1f3      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801148e:	7a2b      	ldrb	r3, [r5, #8]
 8011490:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 8011494:	b1d3      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011496:	7a6b      	ldrb	r3, [r5, #9]
 8011498:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 801149c:	b1b3      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801149e:	7aab      	ldrb	r3, [r5, #10]
 80114a0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 80114a4:	b193      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114a6:	7aeb      	ldrb	r3, [r5, #11]
 80114a8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 80114ac:	b173      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114ae:	7b2b      	ldrb	r3, [r5, #12]
 80114b0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 80114b4:	b153      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114b6:	7b6b      	ldrb	r3, [r5, #13]
 80114b8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 80114bc:	b133      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114be:	7bab      	ldrb	r3, [r5, #14]
 80114c0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 80114c4:	b113      	cbz	r3, 80114cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114c6:	7beb      	ldrb	r3, [r5, #15]
 80114c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80114cc:	2300      	movs	r3, #0
 80114ce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80114d2:	9d08      	ldr	r5, [sp, #32]
 80114d4:	2d37      	cmp	r5, #55	; 0x37
 80114d6:	bf28      	it	cs
 80114d8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80114da:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80114de:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80114e0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80114e2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80114e4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80114e8:	f7fe fcdc 	bl	800fea4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80114ec:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80114f0:	f104 0018 	add.w	r0, r4, #24
 80114f4:	f7fe fcd6 	bl	800fea4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80114f8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 80114fa:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80114fe:	4651      	mov	r1, sl
 8011500:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8011502:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8011504:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8011506:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 801150a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 801150e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011512:	f01c fc2a 	bl	802dd6a <memset>
 8011516:	4b0b      	ldr	r3, [pc, #44]	; (8011544 <prvInitialiseNewTask.constprop.0+0x128>)
 8011518:	65e3      	str	r3, [r4, #92]	; 0x5c
 801151a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 801151e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8011520:	463a      	mov	r2, r7
 8011522:	4631      	mov	r1, r6
 8011524:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8011526:	6625      	str	r5, [r4, #96]	; 0x60
 8011528:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 801152a:	f7fe fd39 	bl	800ffa0 <pxPortInitialiseStack>
 801152e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8011530:	f1b8 0f00 	cmp.w	r8, #0
 8011534:	d001      	beq.n	801153a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8011536:	f8c8 4000 	str.w	r4, [r8]
}
 801153a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 801153e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8011542:	e7c6      	b.n	80114d2 <prvInitialiseNewTask.constprop.0+0xb6>
 8011544:	20014198 	.word	0x20014198

08011548 <prvIdleTask>:
{
 8011548:	b580      	push	{r7, lr}
 801154a:	4d23      	ldr	r5, [pc, #140]	; (80115d8 <prvIdleTask+0x90>)
 801154c:	4f23      	ldr	r7, [pc, #140]	; (80115dc <prvIdleTask+0x94>)
 801154e:	4e24      	ldr	r6, [pc, #144]	; (80115e0 <prvIdleTask+0x98>)
 8011550:	f8df 8090 	ldr.w	r8, [pc, #144]	; 80115e4 <prvIdleTask+0x9c>
				taskYIELD();
 8011554:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 8011558:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 801155c:	682b      	ldr	r3, [r5, #0]
 801155e:	b35b      	cbz	r3, 80115b8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 8011560:	f7fe fd48 	bl	800fff4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011564:	68fb      	ldr	r3, [r7, #12]
 8011566:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011568:	1d20      	adds	r0, r4, #4
 801156a:	f7fe fcc7 	bl	800fefc <uxListRemove>
				--uxCurrentNumberOfTasks;
 801156e:	6833      	ldr	r3, [r6, #0]
 8011570:	3b01      	subs	r3, #1
 8011572:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 8011574:	682b      	ldr	r3, [r5, #0]
 8011576:	3b01      	subs	r3, #1
 8011578:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 801157a:	f7fe fd5d 	bl	8010038 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 801157e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011582:	f01c fc3b 	bl	802ddfc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8011586:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 801158a:	b163      	cbz	r3, 80115a6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 801158c:	2b01      	cmp	r3, #1
 801158e:	d01e      	beq.n	80115ce <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8011590:	2b02      	cmp	r3, #2
 8011592:	d0e3      	beq.n	801155c <prvIdleTask+0x14>
 8011594:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011598:	f383 8811 	msr	BASEPRI, r3
 801159c:	f3bf 8f6f 	isb	sy
 80115a0:	f3bf 8f4f 	dsb	sy
 80115a4:	e7fe      	b.n	80115a4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 80115a6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80115a8:	f7fe fc0c 	bl	800fdc4 <vPortFree>
				vPortFree( pxTCB );
 80115ac:	4620      	mov	r0, r4
 80115ae:	f7fe fc09 	bl	800fdc4 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80115b2:	682b      	ldr	r3, [r5, #0]
 80115b4:	2b00      	cmp	r3, #0
 80115b6:	d1d3      	bne.n	8011560 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80115b8:	f8d8 3000 	ldr.w	r3, [r8]
 80115bc:	2b01      	cmp	r3, #1
 80115be:	d9cd      	bls.n	801155c <prvIdleTask+0x14>
				taskYIELD();
 80115c0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 80115c4:	f3bf 8f4f 	dsb	sy
 80115c8:	f3bf 8f6f 	isb	sy
 80115cc:	e7c6      	b.n	801155c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 80115ce:	4620      	mov	r0, r4
 80115d0:	f7fe fbf8 	bl	800fdc4 <vPortFree>
 80115d4:	e7c2      	b.n	801155c <prvIdleTask+0x14>
 80115d6:	bf00      	nop
 80115d8:	20013678 	.word	0x20013678
 80115dc:	200136e8 	.word	0x200136e8
 80115e0:	20013674 	.word	0x20013674
 80115e4:	20013214 	.word	0x20013214

080115e8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 80115e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80115ec:	4b47      	ldr	r3, [pc, #284]	; (801170c <xTaskIncrementTick.part.0+0x124>)
 80115ee:	681e      	ldr	r6, [r3, #0]
 80115f0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 80115f2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 80115f4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80115f6:	2e00      	cmp	r6, #0
 80115f8:	d040      	beq.n	801167c <xTaskIncrementTick.part.0+0x94>
 80115fa:	f8df b124 	ldr.w	fp, [pc, #292]	; 8011720 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80115fe:	f8db 3000 	ldr.w	r3, [fp]
 8011602:	429e      	cmp	r6, r3
 8011604:	d347      	bcc.n	8011696 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011606:	4f42      	ldr	r7, [pc, #264]	; (8011710 <xTaskIncrementTick.part.0+0x128>)
 8011608:	f8df 9118 	ldr.w	r9, [pc, #280]	; 8011724 <xTaskIncrementTick.part.0+0x13c>
 801160c:	683b      	ldr	r3, [r7, #0]
 801160e:	f8df a118 	ldr.w	sl, [pc, #280]	; 8011728 <xTaskIncrementTick.part.0+0x140>
 8011612:	681d      	ldr	r5, [r3, #0]
 8011614:	2d00      	cmp	r5, #0
 8011616:	d073      	beq.n	8011700 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 8011618:	f8df 8110 	ldr.w	r8, [pc, #272]	; 801172c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 801161c:	2500      	movs	r5, #0
 801161e:	e022      	b.n	8011666 <xTaskIncrementTick.part.0+0x7e>
 8011620:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011622:	f7fe fc6b 	bl	800fefc <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8011626:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8011628:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801162a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 801162e:	b113      	cbz	r3, 8011636 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8011630:	f7fe fc64 	bl	800fefc <uxListRemove>
 8011634:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8011636:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011638:	f8d8 2000 	ldr.w	r2, [r8]
 801163c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011640:	4293      	cmp	r3, r2
 8011642:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 8011646:	bf88      	it	hi
 8011648:	f8c8 3000 	strhi.w	r3, [r8]
 801164c:	f7fe fc2e 	bl	800feac <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011650:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011654:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011656:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011658:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801165a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 801165c:	4291      	cmp	r1, r2
 801165e:	bf28      	it	cs
 8011660:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011662:	2b00      	cmp	r3, #0
 8011664:	d04c      	beq.n	8011700 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011666:	683b      	ldr	r3, [r7, #0]
 8011668:	68db      	ldr	r3, [r3, #12]
 801166a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 801166c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801166e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 8011670:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011672:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 8011674:	d2d4      	bcs.n	8011620 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 8011676:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 801167a:	e011      	b.n	80116a0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 801167c:	4b24      	ldr	r3, [pc, #144]	; (8011710 <xTaskIncrementTick.part.0+0x128>)
 801167e:	681a      	ldr	r2, [r3, #0]
 8011680:	6812      	ldr	r2, [r2, #0]
 8011682:	b30a      	cbz	r2, 80116c8 <xTaskIncrementTick.part.0+0xe0>
 8011684:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011688:	f383 8811 	msr	BASEPRI, r3
 801168c:	f3bf 8f6f 	isb	sy
 8011690:	f3bf 8f4f 	dsb	sy
 8011694:	e7fe      	b.n	8011694 <xTaskIncrementTick.part.0+0xac>
 8011696:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8011724 <xTaskIncrementTick.part.0+0x13c>
 801169a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8011728 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 801169e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80116a0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 80116a4:	491b      	ldr	r1, [pc, #108]	; (8011714 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80116a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116a8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80116ac:	009b      	lsls	r3, r3, #2
 80116ae:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 80116b2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 80116b4:	2a02      	cmp	r2, #2
 80116b6:	bf28      	it	cs
 80116b8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 80116ba:	2b00      	cmp	r3, #0
}
 80116bc:	bf0c      	ite	eq
 80116be:	4628      	moveq	r0, r5
 80116c0:	2001      	movne	r0, #1
 80116c2:	b003      	add	sp, #12
 80116c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 80116c8:	4a13      	ldr	r2, [pc, #76]	; (8011718 <xTaskIncrementTick.part.0+0x130>)
 80116ca:	6818      	ldr	r0, [r3, #0]
 80116cc:	6811      	ldr	r1, [r2, #0]
 80116ce:	6019      	str	r1, [r3, #0]
 80116d0:	4912      	ldr	r1, [pc, #72]	; (801171c <xTaskIncrementTick.part.0+0x134>)
 80116d2:	6010      	str	r0, [r2, #0]
 80116d4:	680a      	ldr	r2, [r1, #0]
 80116d6:	3201      	adds	r2, #1
 80116d8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80116da:	681a      	ldr	r2, [r3, #0]
 80116dc:	6812      	ldr	r2, [r2, #0]
 80116de:	b932      	cbnz	r2, 80116ee <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80116e0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8011720 <xTaskIncrementTick.part.0+0x138>
 80116e4:	f04f 33ff 	mov.w	r3, #4294967295
 80116e8:	f8cb 3000 	str.w	r3, [fp]
 80116ec:	e787      	b.n	80115fe <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116ee:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80116f0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 8011720 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116f4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80116f6:	68db      	ldr	r3, [r3, #12]
 80116f8:	685b      	ldr	r3, [r3, #4]
 80116fa:	f8cb 3000 	str.w	r3, [fp]
	}
}
 80116fe:	e77e      	b.n	80115fe <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011700:	f04f 33ff 	mov.w	r3, #4294967295
 8011704:	f8cb 3000 	str.w	r3, [fp]
					break;
 8011708:	e7ca      	b.n	80116a0 <xTaskIncrementTick.part.0+0xb8>
 801170a:	bf00      	nop
 801170c:	200136fc 	.word	0x200136fc
 8011710:	2001320c 	.word	0x2001320c
 8011714:	20013700 	.word	0x20013700
 8011718:	20013210 	.word	0x20013210
 801171c:	200136b4 	.word	0x200136b4
 8011720:	200136b0 	.word	0x200136b0
 8011724:	20013214 	.word	0x20013214
 8011728:	20013208 	.word	0x20013208
 801172c:	20013684 	.word	0x20013684

08011730 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 8011730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 8011734:	4d41      	ldr	r5, [pc, #260]	; (801183c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 8011736:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 8011738:	f7fe fc5c 	bl	800fff4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 801173c:	682b      	ldr	r3, [r5, #0]
 801173e:	3b01      	subs	r3, #1
 8011740:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011742:	682b      	ldr	r3, [r5, #0]
 8011744:	2b00      	cmp	r3, #0
 8011746:	d161      	bne.n	801180c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8011748:	4b3d      	ldr	r3, [pc, #244]	; (8011840 <xTaskResumeAll.part.0+0x110>)
 801174a:	681b      	ldr	r3, [r3, #0]
 801174c:	2b00      	cmp	r3, #0
 801174e:	d05d      	beq.n	801180c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011750:	4e3c      	ldr	r6, [pc, #240]	; (8011844 <xTaskResumeAll.part.0+0x114>)
 8011752:	6833      	ldr	r3, [r6, #0]
 8011754:	2b00      	cmp	r3, #0
 8011756:	d06e      	beq.n	8011836 <xTaskResumeAll.part.0+0x106>
 8011758:	4f3b      	ldr	r7, [pc, #236]	; (8011848 <xTaskResumeAll.part.0+0x118>)
 801175a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 8011858 <xTaskResumeAll.part.0+0x128>
 801175e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 801185c <xTaskResumeAll.part.0+0x12c>
 8011762:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 8011860 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011766:	68f3      	ldr	r3, [r6, #12]
 8011768:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801176a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801176e:	f104 0018 	add.w	r0, r4, #24
 8011772:	f7fe fbc3 	bl	800fefc <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011776:	4658      	mov	r0, fp
 8011778:	f7fe fbc0 	bl	800fefc <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 801177c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801177e:	683a      	ldr	r2, [r7, #0]
 8011780:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011784:	4293      	cmp	r3, r2
 8011786:	4659      	mov	r1, fp
 8011788:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 801178c:	bf88      	it	hi
 801178e:	603b      	strhi	r3, [r7, #0]
 8011790:	f7fe fb8c 	bl	800feac <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011794:	f8d8 3000 	ldr.w	r3, [r8]
 8011798:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801179a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801179c:	429a      	cmp	r2, r3
 801179e:	d33d      	bcc.n	801181c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 80117a0:	2301      	movs	r3, #1
 80117a2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80117a6:	6833      	ldr	r3, [r6, #0]
 80117a8:	2b00      	cmp	r3, #0
 80117aa:	d1dc      	bne.n	8011766 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80117ac:	4b27      	ldr	r3, [pc, #156]	; (801184c <xTaskResumeAll.part.0+0x11c>)
 80117ae:	681a      	ldr	r2, [r3, #0]
 80117b0:	6812      	ldr	r2, [r2, #0]
 80117b2:	2a00      	cmp	r2, #0
 80117b4:	d03a      	beq.n	801182c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80117b6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80117b8:	4b25      	ldr	r3, [pc, #148]	; (8011850 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80117ba:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80117bc:	68d2      	ldr	r2, [r2, #12]
 80117be:	6852      	ldr	r2, [r2, #4]
 80117c0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80117c2:	4e24      	ldr	r6, [pc, #144]	; (8011854 <xTaskResumeAll.part.0+0x124>)
 80117c4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80117c6:	b194      	cbz	r4, 80117ee <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 80117c8:	2701      	movs	r7, #1
 80117ca:	e006      	b.n	80117da <xTaskResumeAll.part.0+0xaa>
 80117cc:	f7ff ff0c 	bl	80115e8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 80117d0:	b108      	cbz	r0, 80117d6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 80117d2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117d6:	3c01      	subs	r4, #1
 80117d8:	d008      	beq.n	80117ec <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80117da:	682b      	ldr	r3, [r5, #0]
 80117dc:	2b00      	cmp	r3, #0
 80117de:	d0f5      	beq.n	80117cc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 80117e0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117e2:	3c01      	subs	r4, #1
		++xPendedTicks;
 80117e4:	f103 0301 	add.w	r3, r3, #1
 80117e8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117ea:	d1f6      	bne.n	80117da <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 80117ec:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 80117ee:	f8da 3000 	ldr.w	r3, [sl]
 80117f2:	b15b      	cbz	r3, 801180c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 80117f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80117f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80117fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011800:	f3bf 8f4f 	dsb	sy
 8011804:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8011808:	2001      	movs	r0, #1
 801180a:	e000      	b.n	801180e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 801180c:	2000      	movs	r0, #0
 801180e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011810:	f7fe fc12 	bl	8010038 <vPortExitCritical>
}
 8011814:	9801      	ldr	r0, [sp, #4]
 8011816:	b003      	add	sp, #12
 8011818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 801181c:	6833      	ldr	r3, [r6, #0]
 801181e:	2b00      	cmp	r3, #0
 8011820:	d1a1      	bne.n	8011766 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011822:	4b0a      	ldr	r3, [pc, #40]	; (801184c <xTaskResumeAll.part.0+0x11c>)
 8011824:	681a      	ldr	r2, [r3, #0]
 8011826:	6812      	ldr	r2, [r2, #0]
 8011828:	2a00      	cmp	r2, #0
 801182a:	d1c4      	bne.n	80117b6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 801182c:	4b08      	ldr	r3, [pc, #32]	; (8011850 <xTaskResumeAll.part.0+0x120>)
 801182e:	f04f 32ff 	mov.w	r2, #4294967295
 8011832:	601a      	str	r2, [r3, #0]
 8011834:	e7c5      	b.n	80117c2 <xTaskResumeAll.part.0+0x92>
 8011836:	f8df a028 	ldr.w	sl, [pc, #40]	; 8011860 <xTaskResumeAll.part.0+0x130>
 801183a:	e7c2      	b.n	80117c2 <xTaskResumeAll.part.0+0x92>
 801183c:	2001367c 	.word	0x2001367c
 8011840:	20013674 	.word	0x20013674
 8011844:	200136bc 	.word	0x200136bc
 8011848:	20013684 	.word	0x20013684
 801184c:	2001320c 	.word	0x2001320c
 8011850:	200136b0 	.word	0x200136b0
 8011854:	200136b8 	.word	0x200136b8
 8011858:	20013214 	.word	0x20013214
 801185c:	20013208 	.word	0x20013208
 8011860:	20013700 	.word	0x20013700

08011864 <xTaskCreateStatic>:
	{
 8011864:	b530      	push	{r4, r5, lr}
 8011866:	b087      	sub	sp, #28
 8011868:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 801186a:	b1c4      	cbz	r4, 801189e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 801186c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801186e:	b16d      	cbz	r5, 801188c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011870:	25ac      	movs	r5, #172	; 0xac
 8011872:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8011874:	9d05      	ldr	r5, [sp, #20]
 8011876:	2dac      	cmp	r5, #172	; 0xac
 8011878:	d01a      	beq.n	80118b0 <xTaskCreateStatic+0x4c>
 801187a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801187e:	f383 8811 	msr	BASEPRI, r3
 8011882:	f3bf 8f6f 	isb	sy
 8011886:	f3bf 8f4f 	dsb	sy
 801188a:	e7fe      	b.n	801188a <xTaskCreateStatic+0x26>
 801188c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011890:	f383 8811 	msr	BASEPRI, r3
 8011894:	f3bf 8f6f 	isb	sy
 8011898:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 801189c:	e7fe      	b.n	801189c <xTaskCreateStatic+0x38>
 801189e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80118a2:	f383 8811 	msr	BASEPRI, r3
 80118a6:	f3bf 8f6f 	isb	sy
 80118aa:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 80118ae:	e7fe      	b.n	80118ae <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80118b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80118b2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80118b4:	2402      	movs	r4, #2
 80118b6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80118ba:	ac04      	add	r4, sp, #16
 80118bc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 80118c0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80118c2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80118c4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80118c6:	f7ff fda9 	bl	801141c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80118ca:	980c      	ldr	r0, [sp, #48]	; 0x30
 80118cc:	f7ff fd1e 	bl	801130c <prvAddNewTaskToReadyList>
	}
 80118d0:	9804      	ldr	r0, [sp, #16]
 80118d2:	b007      	add	sp, #28
 80118d4:	bd30      	pop	{r4, r5, pc}
 80118d6:	bf00      	nop

080118d8 <xTaskCreate>:
	{
 80118d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80118dc:	4607      	mov	r7, r0
 80118de:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80118e0:	0090      	lsls	r0, r2, #2
	{
 80118e2:	4615      	mov	r5, r2
 80118e4:	4688      	mov	r8, r1
 80118e6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80118e8:	f7fe f9b0 	bl	800fc4c <pvPortMalloc>
			if( pxStack != NULL )
 80118ec:	b1d8      	cbz	r0, 8011926 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80118ee:	4604      	mov	r4, r0
 80118f0:	20ac      	movs	r0, #172	; 0xac
 80118f2:	f7fe f9ab 	bl	800fc4c <pvPortMalloc>
				if( pxNewTCB != NULL )
 80118f6:	4606      	mov	r6, r0
 80118f8:	b1d0      	cbz	r0, 8011930 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 80118fa:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80118fc:	2400      	movs	r4, #0
 80118fe:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8011902:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8011904:	9401      	str	r4, [sp, #4]
 8011906:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011908:	9602      	str	r6, [sp, #8]
 801190a:	464b      	mov	r3, r9
 801190c:	462a      	mov	r2, r5
 801190e:	4641      	mov	r1, r8
 8011910:	4638      	mov	r0, r7
 8011912:	9400      	str	r4, [sp, #0]
 8011914:	f7ff fd82 	bl	801141c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011918:	4630      	mov	r0, r6
 801191a:	f7ff fcf7 	bl	801130c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 801191e:	2001      	movs	r0, #1
	}
 8011920:	b005      	add	sp, #20
 8011922:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011926:	f04f 30ff 	mov.w	r0, #4294967295
	}
 801192a:	b005      	add	sp, #20
 801192c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8011930:	4620      	mov	r0, r4
 8011932:	f7fe fa47 	bl	800fdc4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011936:	f04f 30ff 	mov.w	r0, #4294967295
 801193a:	e7f1      	b.n	8011920 <xTaskCreate+0x48>

0801193c <vTaskDelay>:
	{
 801193c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 801193e:	b950      	cbnz	r0, 8011956 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8011940:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011944:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8011948:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801194c:	f3bf 8f4f 	dsb	sy
 8011950:	f3bf 8f6f 	isb	sy
	}
 8011954:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8011956:	4d1e      	ldr	r5, [pc, #120]	; (80119d0 <vTaskDelay+0x94>)
 8011958:	682b      	ldr	r3, [r5, #0]
 801195a:	b143      	cbz	r3, 801196e <vTaskDelay+0x32>
 801195c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011960:	f383 8811 	msr	BASEPRI, r3
 8011964:	f3bf 8f6f 	isb	sy
 8011968:	f3bf 8f4f 	dsb	sy
 801196c:	e7fe      	b.n	801196c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 801196e:	682b      	ldr	r3, [r5, #0]
 8011970:	3301      	adds	r3, #1
 8011972:	4604      	mov	r4, r0
 8011974:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8011976:	4b17      	ldr	r3, [pc, #92]	; (80119d4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011978:	4e17      	ldr	r6, [pc, #92]	; (80119d8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 801197a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801197c:	6830      	ldr	r0, [r6, #0]
 801197e:	3004      	adds	r0, #4
 8011980:	f7fe fabc 	bl	800fefc <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011984:	6833      	ldr	r3, [r6, #0]
 8011986:	19e4      	adds	r4, r4, r7
 8011988:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 801198a:	d310      	bcc.n	80119ae <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801198c:	4b13      	ldr	r3, [pc, #76]	; (80119dc <vTaskDelay+0xa0>)
 801198e:	6818      	ldr	r0, [r3, #0]
 8011990:	6831      	ldr	r1, [r6, #0]
 8011992:	3104      	adds	r1, #4
 8011994:	f7fe fa9a 	bl	800fecc <vListInsert>
	configASSERT( uxSchedulerSuspended );
 8011998:	682b      	ldr	r3, [r5, #0]
 801199a:	b9a3      	cbnz	r3, 80119c6 <vTaskDelay+0x8a>
 801199c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80119a0:	f383 8811 	msr	BASEPRI, r3
 80119a4:	f3bf 8f6f 	isb	sy
 80119a8:	f3bf 8f4f 	dsb	sy
 80119ac:	e7fe      	b.n	80119ac <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80119ae:	4b0c      	ldr	r3, [pc, #48]	; (80119e0 <vTaskDelay+0xa4>)
 80119b0:	6818      	ldr	r0, [r3, #0]
 80119b2:	6831      	ldr	r1, [r6, #0]
 80119b4:	3104      	adds	r1, #4
 80119b6:	f7fe fa89 	bl	800fecc <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 80119ba:	4b0a      	ldr	r3, [pc, #40]	; (80119e4 <vTaskDelay+0xa8>)
 80119bc:	681a      	ldr	r2, [r3, #0]
 80119be:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 80119c0:	bf38      	it	cc
 80119c2:	601c      	strcc	r4, [r3, #0]
 80119c4:	e7e8      	b.n	8011998 <vTaskDelay+0x5c>
 80119c6:	f7ff feb3 	bl	8011730 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 80119ca:	2800      	cmp	r0, #0
 80119cc:	d0b8      	beq.n	8011940 <vTaskDelay+0x4>
	}
 80119ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119d0:	2001367c 	.word	0x2001367c
 80119d4:	200136fc 	.word	0x200136fc
 80119d8:	20013208 	.word	0x20013208
 80119dc:	20013210 	.word	0x20013210
 80119e0:	2001320c 	.word	0x2001320c
 80119e4:	200136b0 	.word	0x200136b0

080119e8 <vTaskStartScheduler>:
{
 80119e8:	b530      	push	{r4, r5, lr}
 80119ea:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119ec:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80119ee:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119f0:	a906      	add	r1, sp, #24
 80119f2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80119f4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119f8:	f7fe f90a 	bl	800fc10 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80119fc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011a00:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 8011a02:	b1bb      	cbz	r3, 8011a34 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 8011a04:	b16d      	cbz	r5, 8011a22 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011a06:	21ac      	movs	r1, #172	; 0xac
 8011a08:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 8011a0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011a0c:	29ac      	cmp	r1, #172	; 0xac
 8011a0e:	d01a      	beq.n	8011a46 <vTaskStartScheduler+0x5e>
 8011a10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a14:	f383 8811 	msr	BASEPRI, r3
 8011a18:	f3bf 8f6f 	isb	sy
 8011a1c:	f3bf 8f4f 	dsb	sy
 8011a20:	e7fe      	b.n	8011a20 <vTaskStartScheduler+0x38>
 8011a22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a26:	f383 8811 	msr	BASEPRI, r3
 8011a2a:	f3bf 8f6f 	isb	sy
 8011a2e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 8011a32:	e7fe      	b.n	8011a32 <vTaskStartScheduler+0x4a>
 8011a34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a38:	f383 8811 	msr	BASEPRI, r3
 8011a3c:	f3bf 8f6f 	isb	sy
 8011a40:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 8011a44:	e7fe      	b.n	8011a44 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011a46:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a48:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011a4a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011a4c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a50:	4623      	mov	r3, r4
 8011a52:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8011a56:	491b      	ldr	r1, [pc, #108]	; (8011ac4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011a58:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a5a:	9400      	str	r4, [sp, #0]
 8011a5c:	481a      	ldr	r0, [pc, #104]	; (8011ac8 <vTaskStartScheduler+0xe0>)
 8011a5e:	f7ff fcdd 	bl	801141c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011a62:	4628      	mov	r0, r5
 8011a64:	f7ff fc52 	bl	801130c <prvAddNewTaskToReadyList>
		return xReturn;
 8011a68:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 8011a6a:	b1eb      	cbz	r3, 8011aa8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 8011a6c:	f000 fc6e 	bl	801234c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8011a70:	2801      	cmp	r0, #1
 8011a72:	d11b      	bne.n	8011aac <vTaskStartScheduler+0xc4>
 8011a74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a78:	f383 8811 	msr	BASEPRI, r3
 8011a7c:	f3bf 8f6f 	isb	sy
 8011a80:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011a84:	4b11      	ldr	r3, [pc, #68]	; (8011acc <vTaskStartScheduler+0xe4>)
 8011a86:	4a12      	ldr	r2, [pc, #72]	; (8011ad0 <vTaskStartScheduler+0xe8>)
 8011a88:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8011a8a:	4912      	ldr	r1, [pc, #72]	; (8011ad4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011a8c:	3358      	adds	r3, #88	; 0x58
 8011a8e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 8011a90:	4a11      	ldr	r2, [pc, #68]	; (8011ad8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011a92:	4b12      	ldr	r3, [pc, #72]	; (8011adc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 8011a94:	f04f 35ff 	mov.w	r5, #4294967295
 8011a98:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 8011a9a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011a9c:	601c      	str	r4, [r3, #0]
}
 8011a9e:	b00b      	add	sp, #44	; 0x2c
 8011aa0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 8011aa4:	f7fe bb38 	b.w	8010118 <xPortStartScheduler>
}
 8011aa8:	b00b      	add	sp, #44	; 0x2c
 8011aaa:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8011aac:	3001      	adds	r0, #1
 8011aae:	d1fb      	bne.n	8011aa8 <vTaskStartScheduler+0xc0>
 8011ab0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ab4:	f383 8811 	msr	BASEPRI, r3
 8011ab8:	f3bf 8f6f 	isb	sy
 8011abc:	f3bf 8f4f 	dsb	sy
 8011ac0:	e7fe      	b.n	8011ac0 <vTaskStartScheduler+0xd8>
 8011ac2:	bf00      	nop
 8011ac4:	08031460 	.word	0x08031460
 8011ac8:	08011549 	.word	0x08011549
 8011acc:	20013208 	.word	0x20013208
 8011ad0:	20000164 	.word	0x20000164
 8011ad4:	200136b0 	.word	0x200136b0
 8011ad8:	200136d0 	.word	0x200136d0
 8011adc:	200136fc 	.word	0x200136fc

08011ae0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8011ae0:	4a02      	ldr	r2, [pc, #8]	; (8011aec <vTaskSuspendAll+0xc>)
 8011ae2:	6813      	ldr	r3, [r2, #0]
 8011ae4:	3301      	adds	r3, #1
 8011ae6:	6013      	str	r3, [r2, #0]
}
 8011ae8:	4770      	bx	lr
 8011aea:	bf00      	nop
 8011aec:	2001367c 	.word	0x2001367c

08011af0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 8011af0:	4b06      	ldr	r3, [pc, #24]	; (8011b0c <xTaskResumeAll+0x1c>)
 8011af2:	681b      	ldr	r3, [r3, #0]
 8011af4:	b943      	cbnz	r3, 8011b08 <xTaskResumeAll+0x18>
 8011af6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011afa:	f383 8811 	msr	BASEPRI, r3
 8011afe:	f3bf 8f6f 	isb	sy
 8011b02:	f3bf 8f4f 	dsb	sy
 8011b06:	e7fe      	b.n	8011b06 <xTaskResumeAll+0x16>
 8011b08:	f7ff be12 	b.w	8011730 <xTaskResumeAll.part.0>
 8011b0c:	2001367c 	.word	0x2001367c

08011b10 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8011b10:	4b01      	ldr	r3, [pc, #4]	; (8011b18 <xTaskGetTickCount+0x8>)
 8011b12:	6818      	ldr	r0, [r3, #0]
}
 8011b14:	4770      	bx	lr
 8011b16:	bf00      	nop
 8011b18:	200136fc 	.word	0x200136fc

08011b1c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011b1c:	4b05      	ldr	r3, [pc, #20]	; (8011b34 <xTaskIncrementTick+0x18>)
 8011b1e:	681b      	ldr	r3, [r3, #0]
 8011b20:	b90b      	cbnz	r3, 8011b26 <xTaskIncrementTick+0xa>
 8011b22:	f7ff bd61 	b.w	80115e8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 8011b26:	4a04      	ldr	r2, [pc, #16]	; (8011b38 <xTaskIncrementTick+0x1c>)
 8011b28:	6813      	ldr	r3, [r2, #0]
 8011b2a:	3301      	adds	r3, #1
}
 8011b2c:	2000      	movs	r0, #0
		++xPendedTicks;
 8011b2e:	6013      	str	r3, [r2, #0]
}
 8011b30:	4770      	bx	lr
 8011b32:	bf00      	nop
 8011b34:	2001367c 	.word	0x2001367c
 8011b38:	200136b8 	.word	0x200136b8

08011b3c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8011b3c:	4b1f      	ldr	r3, [pc, #124]	; (8011bbc <vTaskSwitchContext+0x80>)
 8011b3e:	681b      	ldr	r3, [r3, #0]
 8011b40:	b11b      	cbz	r3, 8011b4a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 8011b42:	4b1f      	ldr	r3, [pc, #124]	; (8011bc0 <vTaskSwitchContext+0x84>)
 8011b44:	2201      	movs	r2, #1
 8011b46:	601a      	str	r2, [r3, #0]
 8011b48:	4770      	bx	lr
		xYieldPending = pdFALSE;
 8011b4a:	4a1d      	ldr	r2, [pc, #116]	; (8011bc0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b4c:	491d      	ldr	r1, [pc, #116]	; (8011bc4 <vTaskSwitchContext+0x88>)
{
 8011b4e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b50:	4c1d      	ldr	r4, [pc, #116]	; (8011bc8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 8011b52:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b54:	6823      	ldr	r3, [r4, #0]
 8011b56:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011b5a:	0092      	lsls	r2, r2, #2
 8011b5c:	0098      	lsls	r0, r3, #2
 8011b5e:	588a      	ldr	r2, [r1, r2]
 8011b60:	b942      	cbnz	r2, 8011b74 <vTaskSwitchContext+0x38>
 8011b62:	b313      	cbz	r3, 8011baa <vTaskSwitchContext+0x6e>
 8011b64:	3b01      	subs	r3, #1
 8011b66:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011b6a:	0098      	lsls	r0, r3, #2
 8011b6c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8011b70:	2a00      	cmp	r2, #0
 8011b72:	d0f6      	beq.n	8011b62 <vTaskSwitchContext+0x26>
 8011b74:	4418      	add	r0, r3
 8011b76:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 8011b7a:	4662      	mov	r2, ip
 8011b7c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8011b80:	6849      	ldr	r1, [r1, #4]
 8011b82:	f8cc 1004 	str.w	r1, [ip, #4]
 8011b86:	3208      	adds	r2, #8
 8011b88:	4291      	cmp	r1, r2
 8011b8a:	bf08      	it	eq
 8011b8c:	6849      	ldreq	r1, [r1, #4]
 8011b8e:	4a0f      	ldr	r2, [pc, #60]	; (8011bcc <vTaskSwitchContext+0x90>)
 8011b90:	bf08      	it	eq
 8011b92:	f8cc 1004 	streq.w	r1, [ip, #4]
 8011b96:	68c9      	ldr	r1, [r1, #12]
 8011b98:	6011      	str	r1, [r2, #0]
 8011b9a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b9c:	6813      	ldr	r3, [r2, #0]
 8011b9e:	4a0c      	ldr	r2, [pc, #48]	; (8011bd0 <vTaskSwitchContext+0x94>)
}
 8011ba0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011ba4:	3358      	adds	r3, #88	; 0x58
 8011ba6:	6013      	str	r3, [r2, #0]
}
 8011ba8:	4770      	bx	lr
 8011baa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011bae:	f383 8811 	msr	BASEPRI, r3
 8011bb2:	f3bf 8f6f 	isb	sy
 8011bb6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011bba:	e7fe      	b.n	8011bba <vTaskSwitchContext+0x7e>
 8011bbc:	2001367c 	.word	0x2001367c
 8011bc0:	20013700 	.word	0x20013700
 8011bc4:	20013214 	.word	0x20013214
 8011bc8:	20013684 	.word	0x20013684
 8011bcc:	20013208 	.word	0x20013208
 8011bd0:	20000164 	.word	0x20000164

08011bd4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 8011bd4:	b1d0      	cbz	r0, 8011c0c <vTaskPlaceOnEventList+0x38>
{
 8011bd6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011bd8:	4d1a      	ldr	r5, [pc, #104]	; (8011c44 <vTaskPlaceOnEventList+0x70>)
 8011bda:	460c      	mov	r4, r1
 8011bdc:	6829      	ldr	r1, [r5, #0]
 8011bde:	3118      	adds	r1, #24
 8011be0:	f7fe f974 	bl	800fecc <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011be4:	4b18      	ldr	r3, [pc, #96]	; (8011c48 <vTaskPlaceOnEventList+0x74>)
 8011be6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011be8:	6828      	ldr	r0, [r5, #0]
 8011bea:	3004      	adds	r0, #4
 8011bec:	f7fe f986 	bl	800fefc <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8011bf0:	1c63      	adds	r3, r4, #1
 8011bf2:	d014      	beq.n	8011c1e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011bf4:	682b      	ldr	r3, [r5, #0]
 8011bf6:	19a4      	adds	r4, r4, r6
 8011bf8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011bfa:	d317      	bcc.n	8011c2c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011bfc:	4b13      	ldr	r3, [pc, #76]	; (8011c4c <vTaskPlaceOnEventList+0x78>)
 8011bfe:	6818      	ldr	r0, [r3, #0]
 8011c00:	6829      	ldr	r1, [r5, #0]
}
 8011c02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c06:	3104      	adds	r1, #4
 8011c08:	f7fe b960 	b.w	800fecc <vListInsert>
 8011c0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c10:	f383 8811 	msr	BASEPRI, r3
 8011c14:	f3bf 8f6f 	isb	sy
 8011c18:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 8011c1c:	e7fe      	b.n	8011c1c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c1e:	6829      	ldr	r1, [r5, #0]
 8011c20:	480b      	ldr	r0, [pc, #44]	; (8011c50 <vTaskPlaceOnEventList+0x7c>)
}
 8011c22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c26:	3104      	adds	r1, #4
 8011c28:	f7fe b940 	b.w	800feac <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c2c:	4b09      	ldr	r3, [pc, #36]	; (8011c54 <vTaskPlaceOnEventList+0x80>)
 8011c2e:	6818      	ldr	r0, [r3, #0]
 8011c30:	6829      	ldr	r1, [r5, #0]
 8011c32:	3104      	adds	r1, #4
 8011c34:	f7fe f94a 	bl	800fecc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011c38:	4b07      	ldr	r3, [pc, #28]	; (8011c58 <vTaskPlaceOnEventList+0x84>)
 8011c3a:	681a      	ldr	r2, [r3, #0]
 8011c3c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011c3e:	bf38      	it	cc
 8011c40:	601c      	strcc	r4, [r3, #0]
}
 8011c42:	bd70      	pop	{r4, r5, r6, pc}
 8011c44:	20013208 	.word	0x20013208
 8011c48:	200136fc 	.word	0x200136fc
 8011c4c:	20013210 	.word	0x20013210
 8011c50:	200136d4 	.word	0x200136d4
 8011c54:	2001320c 	.word	0x2001320c
 8011c58:	200136b0 	.word	0x200136b0

08011c5c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 8011c5c:	b330      	cbz	r0, 8011cac <vTaskPlaceOnEventListRestricted+0x50>
	{
 8011c5e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011c60:	4e1d      	ldr	r6, [pc, #116]	; (8011cd8 <vTaskPlaceOnEventListRestricted+0x7c>)
 8011c62:	460c      	mov	r4, r1
 8011c64:	6831      	ldr	r1, [r6, #0]
 8011c66:	4615      	mov	r5, r2
 8011c68:	3118      	adds	r1, #24
 8011c6a:	f7fe f91f 	bl	800feac <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 8011c6e:	4b1b      	ldr	r3, [pc, #108]	; (8011cdc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 8011c70:	b985      	cbnz	r5, 8011c94 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 8011c72:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011c74:	6830      	ldr	r0, [r6, #0]
 8011c76:	3004      	adds	r0, #4
 8011c78:	f7fe f940 	bl	800fefc <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011c7c:	6833      	ldr	r3, [r6, #0]
 8011c7e:	1964      	adds	r4, r4, r5
 8011c80:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011c82:	d31c      	bcc.n	8011cbe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c84:	4b16      	ldr	r3, [pc, #88]	; (8011ce0 <vTaskPlaceOnEventListRestricted+0x84>)
 8011c86:	6818      	ldr	r0, [r3, #0]
 8011c88:	6831      	ldr	r1, [r6, #0]
	}
 8011c8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c8e:	3104      	adds	r1, #4
 8011c90:	f7fe b91c 	b.w	800fecc <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011c94:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011c96:	6830      	ldr	r0, [r6, #0]
 8011c98:	3004      	adds	r0, #4
 8011c9a:	f7fe f92f 	bl	800fefc <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c9e:	6831      	ldr	r1, [r6, #0]
 8011ca0:	4810      	ldr	r0, [pc, #64]	; (8011ce4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8011ca2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011ca6:	3104      	adds	r1, #4
 8011ca8:	f7fe b900 	b.w	800feac <vListInsertEnd>
 8011cac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011cb0:	f383 8811 	msr	BASEPRI, r3
 8011cb4:	f3bf 8f6f 	isb	sy
 8011cb8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 8011cbc:	e7fe      	b.n	8011cbc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011cbe:	4b0a      	ldr	r3, [pc, #40]	; (8011ce8 <vTaskPlaceOnEventListRestricted+0x8c>)
 8011cc0:	6818      	ldr	r0, [r3, #0]
 8011cc2:	6831      	ldr	r1, [r6, #0]
 8011cc4:	3104      	adds	r1, #4
 8011cc6:	f7fe f901 	bl	800fecc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011cca:	4b08      	ldr	r3, [pc, #32]	; (8011cec <vTaskPlaceOnEventListRestricted+0x90>)
 8011ccc:	681a      	ldr	r2, [r3, #0]
 8011cce:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011cd0:	bf38      	it	cc
 8011cd2:	601c      	strcc	r4, [r3, #0]
	}
 8011cd4:	bd70      	pop	{r4, r5, r6, pc}
 8011cd6:	bf00      	nop
 8011cd8:	20013208 	.word	0x20013208
 8011cdc:	200136fc 	.word	0x200136fc
 8011ce0:	20013210 	.word	0x20013210
 8011ce4:	200136d4 	.word	0x200136d4
 8011ce8:	2001320c 	.word	0x2001320c
 8011cec:	200136b0 	.word	0x200136b0

08011cf0 <xTaskRemoveFromEventList>:
{
 8011cf0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011cf2:	68c3      	ldr	r3, [r0, #12]
 8011cf4:	68dc      	ldr	r4, [r3, #12]
{
 8011cf6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8011cf8:	2c00      	cmp	r4, #0
 8011cfa:	d02b      	beq.n	8011d54 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8011cfc:	f104 0518 	add.w	r5, r4, #24
 8011d00:	4628      	mov	r0, r5
 8011d02:	f7fe f8fb 	bl	800fefc <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011d06:	4b18      	ldr	r3, [pc, #96]	; (8011d68 <xTaskRemoveFromEventList+0x78>)
 8011d08:	681b      	ldr	r3, [r3, #0]
 8011d0a:	b17b      	cbz	r3, 8011d2c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8011d0c:	4817      	ldr	r0, [pc, #92]	; (8011d6c <xTaskRemoveFromEventList+0x7c>)
 8011d0e:	4629      	mov	r1, r5
 8011d10:	f7fe f8cc 	bl	800feac <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8011d14:	4b16      	ldr	r3, [pc, #88]	; (8011d70 <xTaskRemoveFromEventList+0x80>)
 8011d16:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011d18:	681b      	ldr	r3, [r3, #0]
 8011d1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d1c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8011d1e:	bf85      	ittet	hi
 8011d20:	4b14      	ldrhi	r3, [pc, #80]	; (8011d74 <xTaskRemoveFromEventList+0x84>)
 8011d22:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8011d24:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8011d26:	6018      	strhi	r0, [r3, #0]
}
 8011d28:	b003      	add	sp, #12
 8011d2a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8011d2c:	1d21      	adds	r1, r4, #4
 8011d2e:	4608      	mov	r0, r1
 8011d30:	9101      	str	r1, [sp, #4]
 8011d32:	f7fe f8e3 	bl	800fefc <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8011d36:	4a10      	ldr	r2, [pc, #64]	; (8011d78 <xTaskRemoveFromEventList+0x88>)
 8011d38:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011d3a:	6810      	ldr	r0, [r2, #0]
 8011d3c:	9901      	ldr	r1, [sp, #4]
 8011d3e:	4283      	cmp	r3, r0
 8011d40:	480e      	ldr	r0, [pc, #56]	; (8011d7c <xTaskRemoveFromEventList+0x8c>)
 8011d42:	bf88      	it	hi
 8011d44:	6013      	strhi	r3, [r2, #0]
 8011d46:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011d4a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011d4e:	f7fe f8ad 	bl	800feac <vListInsertEnd>
 8011d52:	e7df      	b.n	8011d14 <xTaskRemoveFromEventList+0x24>
 8011d54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d58:	f383 8811 	msr	BASEPRI, r3
 8011d5c:	f3bf 8f6f 	isb	sy
 8011d60:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8011d64:	e7fe      	b.n	8011d64 <xTaskRemoveFromEventList+0x74>
 8011d66:	bf00      	nop
 8011d68:	2001367c 	.word	0x2001367c
 8011d6c:	200136bc 	.word	0x200136bc
 8011d70:	20013208 	.word	0x20013208
 8011d74:	20013700 	.word	0x20013700
 8011d78:	20013684 	.word	0x20013684
 8011d7c:	20013214 	.word	0x20013214

08011d80 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011d80:	4a03      	ldr	r2, [pc, #12]	; (8011d90 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011d82:	4b04      	ldr	r3, [pc, #16]	; (8011d94 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011d84:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011d86:	681b      	ldr	r3, [r3, #0]
 8011d88:	e9c0 2300 	strd	r2, r3, [r0]
}
 8011d8c:	4770      	bx	lr
 8011d8e:	bf00      	nop
 8011d90:	200136b4 	.word	0x200136b4
 8011d94:	200136fc 	.word	0x200136fc

08011d98 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8011d98:	b328      	cbz	r0, 8011de6 <xTaskCheckForTimeOut+0x4e>
{
 8011d9a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d9c:	460d      	mov	r5, r1
 8011d9e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8011da0:	b1c1      	cbz	r1, 8011dd4 <xTaskCheckForTimeOut+0x3c>
 8011da2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8011da4:	f7fe f926 	bl	800fff4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8011da8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 8011daa:	4a1d      	ldr	r2, [pc, #116]	; (8011e20 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 8011dac:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 8011dae:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8011db0:	d030      	beq.n	8011e14 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8011db2:	f8df c070 	ldr.w	ip, [pc, #112]	; 8011e24 <xTaskCheckForTimeOut+0x8c>
 8011db6:	e9d4 6000 	ldrd	r6, r0, [r4]
 8011dba:	f8dc 7000 	ldr.w	r7, [ip]
 8011dbe:	42be      	cmp	r6, r7
 8011dc0:	d01a      	beq.n	8011df8 <xTaskCheckForTimeOut+0x60>
 8011dc2:	4288      	cmp	r0, r1
 8011dc4:	d818      	bhi.n	8011df8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 8011dc6:	2001      	movs	r0, #1
 8011dc8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011dca:	f7fe f935 	bl	8010038 <vPortExitCritical>
}
 8011dce:	9801      	ldr	r0, [sp, #4]
 8011dd0:	b003      	add	sp, #12
 8011dd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011dd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011dd8:	f383 8811 	msr	BASEPRI, r3
 8011ddc:	f3bf 8f6f 	isb	sy
 8011de0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 8011de4:	e7fe      	b.n	8011de4 <xTaskCheckForTimeOut+0x4c>
 8011de6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011dea:	f383 8811 	msr	BASEPRI, r3
 8011dee:	f3bf 8f6f 	isb	sy
 8011df2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8011df6:	e7fe      	b.n	8011df6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8011df8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8011dfc:	4573      	cmp	r3, lr
 8011dfe:	d90b      	bls.n	8011e18 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8011e00:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011e02:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011e06:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8011e08:	4403      	add	r3, r0
 8011e0a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 8011e0c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011e0e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8011e12:	e7d9      	b.n	8011dc8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8011e14:	2000      	movs	r0, #0
 8011e16:	e7d7      	b.n	8011dc8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8011e18:	2300      	movs	r3, #0
 8011e1a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 8011e1c:	2001      	movs	r0, #1
 8011e1e:	e7d3      	b.n	8011dc8 <xTaskCheckForTimeOut+0x30>
 8011e20:	200136fc 	.word	0x200136fc
 8011e24:	200136b4 	.word	0x200136b4

08011e28 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8011e28:	4b01      	ldr	r3, [pc, #4]	; (8011e30 <vTaskMissedYield+0x8>)
 8011e2a:	2201      	movs	r2, #1
 8011e2c:	601a      	str	r2, [r3, #0]
}
 8011e2e:	4770      	bx	lr
 8011e30:	20013700 	.word	0x20013700

08011e34 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8011e34:	4b05      	ldr	r3, [pc, #20]	; (8011e4c <xTaskGetSchedulerState+0x18>)
 8011e36:	681b      	ldr	r3, [r3, #0]
 8011e38:	b133      	cbz	r3, 8011e48 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011e3a:	4b05      	ldr	r3, [pc, #20]	; (8011e50 <xTaskGetSchedulerState+0x1c>)
 8011e3c:	6818      	ldr	r0, [r3, #0]
 8011e3e:	fab0 f080 	clz	r0, r0
 8011e42:	0940      	lsrs	r0, r0, #5
 8011e44:	0040      	lsls	r0, r0, #1
 8011e46:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8011e48:	2001      	movs	r0, #1
	}
 8011e4a:	4770      	bx	lr
 8011e4c:	200136d0 	.word	0x200136d0
 8011e50:	2001367c 	.word	0x2001367c

08011e54 <xTaskPriorityInherit>:
	{
 8011e54:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8011e56:	4604      	mov	r4, r0
	{
 8011e58:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 8011e5a:	b1c8      	cbz	r0, 8011e90 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8011e5c:	4d1d      	ldr	r5, [pc, #116]	; (8011ed4 <xTaskPriorityInherit+0x80>)
 8011e5e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011e60:	682a      	ldr	r2, [r5, #0]
 8011e62:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011e64:	4293      	cmp	r3, r2
 8011e66:	d215      	bcs.n	8011e94 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011e68:	6982      	ldr	r2, [r0, #24]
 8011e6a:	2a00      	cmp	r2, #0
 8011e6c:	db04      	blt.n	8011e78 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011e6e:	682a      	ldr	r2, [r5, #0]
 8011e70:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011e72:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8011e76:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8011e78:	4e17      	ldr	r6, [pc, #92]	; (8011ed8 <xTaskPriorityInherit+0x84>)
 8011e7a:	6962      	ldr	r2, [r4, #20]
 8011e7c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011e80:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8011e84:	429a      	cmp	r2, r3
 8011e86:	d00e      	beq.n	8011ea6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e88:	682b      	ldr	r3, [r5, #0]
 8011e8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e8c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 8011e8e:	2001      	movs	r0, #1
	}
 8011e90:	b002      	add	sp, #8
 8011e92:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8011e94:	682b      	ldr	r3, [r5, #0]
 8011e96:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011e98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e9a:	4298      	cmp	r0, r3
 8011e9c:	bf2c      	ite	cs
 8011e9e:	2000      	movcs	r0, #0
 8011ea0:	2001      	movcc	r0, #1
	}
 8011ea2:	b002      	add	sp, #8
 8011ea4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011ea6:	1d21      	adds	r1, r4, #4
 8011ea8:	4608      	mov	r0, r1
 8011eaa:	9101      	str	r1, [sp, #4]
 8011eac:	f7fe f826 	bl	800fefc <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011eb0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011eb2:	4b0a      	ldr	r3, [pc, #40]	; (8011edc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011eb4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011eb6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011eb8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011eba:	4290      	cmp	r0, r2
 8011ebc:	bf88      	it	hi
 8011ebe:	6018      	strhi	r0, [r3, #0]
 8011ec0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011ec4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8011ec8:	9901      	ldr	r1, [sp, #4]
 8011eca:	f7fd ffef 	bl	800feac <vListInsertEnd>
				xReturn = pdTRUE;
 8011ece:	2001      	movs	r0, #1
 8011ed0:	e7de      	b.n	8011e90 <xTaskPriorityInherit+0x3c>
 8011ed2:	bf00      	nop
 8011ed4:	20013208 	.word	0x20013208
 8011ed8:	20013214 	.word	0x20013214
 8011edc:	20013684 	.word	0x20013684

08011ee0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 8011ee0:	b318      	cbz	r0, 8011f2a <xTaskPriorityDisinherit+0x4a>
	{
 8011ee2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 8011ee4:	4b1e      	ldr	r3, [pc, #120]	; (8011f60 <xTaskPriorityDisinherit+0x80>)
 8011ee6:	681c      	ldr	r4, [r3, #0]
 8011ee8:	4284      	cmp	r4, r0
	{
 8011eea:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 8011eec:	d008      	beq.n	8011f00 <xTaskPriorityDisinherit+0x20>
 8011eee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ef2:	f383 8811 	msr	BASEPRI, r3
 8011ef6:	f3bf 8f6f 	isb	sy
 8011efa:	f3bf 8f4f 	dsb	sy
 8011efe:	e7fe      	b.n	8011efe <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8011f00:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8011f02:	b14b      	cbz	r3, 8011f18 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011f04:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011f06:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8011f08:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011f0a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8011f0c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011f0e:	d000      	beq.n	8011f12 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8011f10:	b16b      	cbz	r3, 8011f2e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8011f12:	2000      	movs	r0, #0
	}
 8011f14:	b002      	add	sp, #8
 8011f16:	bd10      	pop	{r4, pc}
 8011f18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f1c:	f383 8811 	msr	BASEPRI, r3
 8011f20:	f3bf 8f6f 	isb	sy
 8011f24:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011f28:	e7fe      	b.n	8011f28 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 8011f2a:	2000      	movs	r0, #0
	}
 8011f2c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011f2e:	1d21      	adds	r1, r4, #4
 8011f30:	4608      	mov	r0, r1
 8011f32:	9101      	str	r1, [sp, #4]
 8011f34:	f7fd ffe2 	bl	800fefc <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011f38:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8011f3a:	4a0a      	ldr	r2, [pc, #40]	; (8011f64 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011f3c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011f3e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8011f42:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8011f44:	6810      	ldr	r0, [r2, #0]
 8011f46:	9901      	ldr	r1, [sp, #4]
 8011f48:	4283      	cmp	r3, r0
 8011f4a:	4807      	ldr	r0, [pc, #28]	; (8011f68 <xTaskPriorityDisinherit+0x88>)
 8011f4c:	bf88      	it	hi
 8011f4e:	6013      	strhi	r3, [r2, #0]
 8011f50:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011f54:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011f58:	f7fd ffa8 	bl	800feac <vListInsertEnd>
					xReturn = pdTRUE;
 8011f5c:	2001      	movs	r0, #1
		return xReturn;
 8011f5e:	e7d9      	b.n	8011f14 <xTaskPriorityDisinherit+0x34>
 8011f60:	20013208 	.word	0x20013208
 8011f64:	20013684 	.word	0x20013684
 8011f68:	20013214 	.word	0x20013214

08011f6c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 8011f6c:	2800      	cmp	r0, #0
 8011f6e:	d041      	beq.n	8011ff4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8011f70:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8011f72:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8011f74:	b083      	sub	sp, #12
 8011f76:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8011f78:	b153      	cbz	r3, 8011f90 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8011f7a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 8011f7c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011f7e:	4281      	cmp	r1, r0
 8011f80:	bf38      	it	cc
 8011f82:	4601      	movcc	r1, r0
 8011f84:	428a      	cmp	r2, r1
 8011f86:	d001      	beq.n	8011f8c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8011f88:	2b01      	cmp	r3, #1
 8011f8a:	d00a      	beq.n	8011fa2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 8011f8c:	b003      	add	sp, #12
 8011f8e:	bd30      	pop	{r4, r5, pc}
 8011f90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f94:	f383 8811 	msr	BASEPRI, r3
 8011f98:	f3bf 8f6f 	isb	sy
 8011f9c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011fa0:	e7fe      	b.n	8011fa0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8011fa2:	4b19      	ldr	r3, [pc, #100]	; (8012008 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8011fa4:	681b      	ldr	r3, [r3, #0]
 8011fa6:	42a3      	cmp	r3, r4
 8011fa8:	d025      	beq.n	8011ff6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011faa:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 8011fac:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011fae:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011fb0:	bfa8      	it	ge
 8011fb2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011fb6:	4d15      	ldr	r5, [pc, #84]	; (801200c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011fb8:	bfa8      	it	ge
 8011fba:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011fbc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8011fc0:	6961      	ldr	r1, [r4, #20]
 8011fc2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8011fc6:	4299      	cmp	r1, r3
 8011fc8:	d1e0      	bne.n	8011f8c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011fca:	1d21      	adds	r1, r4, #4
 8011fcc:	4608      	mov	r0, r1
 8011fce:	9101      	str	r1, [sp, #4]
 8011fd0:	f7fd ff94 	bl	800fefc <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8011fd4:	4b0e      	ldr	r3, [pc, #56]	; (8012010 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8011fd6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011fd8:	681a      	ldr	r2, [r3, #0]
 8011fda:	9901      	ldr	r1, [sp, #4]
 8011fdc:	4290      	cmp	r0, r2
 8011fde:	bf88      	it	hi
 8011fe0:	6018      	strhi	r0, [r3, #0]
 8011fe2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011fe6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 8011fea:	b003      	add	sp, #12
 8011fec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8011ff0:	f7fd bf5c 	b.w	800feac <vListInsertEnd>
 8011ff4:	4770      	bx	lr
 8011ff6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ffa:	f383 8811 	msr	BASEPRI, r3
 8011ffe:	f3bf 8f6f 	isb	sy
 8012002:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8012006:	e7fe      	b.n	8012006 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8012008:	20013208 	.word	0x20013208
 801200c:	20013214 	.word	0x20013214
 8012010:	20013684 	.word	0x20013684

08012014 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8012014:	4b04      	ldr	r3, [pc, #16]	; (8012028 <pvTaskIncrementMutexHeldCount+0x14>)
 8012016:	681a      	ldr	r2, [r3, #0]
 8012018:	b11a      	cbz	r2, 8012022 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 801201a:	6819      	ldr	r1, [r3, #0]
 801201c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 801201e:	3201      	adds	r2, #1
 8012020:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8012022:	6818      	ldr	r0, [r3, #0]
	}
 8012024:	4770      	bx	lr
 8012026:	bf00      	nop
 8012028:	20013208 	.word	0x20013208

0801202c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 801202c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012030:	4e22      	ldr	r6, [pc, #136]	; (80120bc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8012032:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80120c4 <prvSwitchTimerLists+0x98>
{
 8012036:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8012038:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801203c:	e00d      	b.n	801205a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801203e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012040:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8012042:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012044:	1d25      	adds	r5, r4, #4
 8012046:	4628      	mov	r0, r5
 8012048:	f7fd ff58 	bl	800fefc <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801204c:	6a23      	ldr	r3, [r4, #32]
 801204e:	4620      	mov	r0, r4
 8012050:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012052:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8012056:	075b      	lsls	r3, r3, #29
 8012058:	d40a      	bmi.n	8012070 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801205a:	6833      	ldr	r3, [r6, #0]
 801205c:	681a      	ldr	r2, [r3, #0]
 801205e:	2a00      	cmp	r2, #0
 8012060:	d1ed      	bne.n	801203e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8012062:	4a17      	ldr	r2, [pc, #92]	; (80120c0 <prvSwitchTimerLists+0x94>)
 8012064:	6811      	ldr	r1, [r2, #0]
 8012066:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8012068:	6013      	str	r3, [r2, #0]
}
 801206a:	b005      	add	sp, #20
 801206c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8012070:	69a3      	ldr	r3, [r4, #24]
 8012072:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8012074:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012076:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8012078:	d205      	bcs.n	8012086 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801207a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801207c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801207e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012080:	f7fd ff24 	bl	800fecc <vListInsert>
 8012084:	e7e9      	b.n	801205a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8012086:	f8d9 3000 	ldr.w	r3, [r9]
 801208a:	b16b      	cbz	r3, 80120a8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801208c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8012090:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012092:	f7ff fecf 	bl	8011e34 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012096:	2300      	movs	r3, #0
 8012098:	f8d9 0000 	ldr.w	r0, [r9]
 801209c:	461a      	mov	r2, r3
 801209e:	4669      	mov	r1, sp
 80120a0:	f7fe fa9c 	bl	80105dc <xQueueGenericSend>
				configASSERT( xResult );
 80120a4:	2800      	cmp	r0, #0
 80120a6:	d1d8      	bne.n	801205a <prvSwitchTimerLists+0x2e>
 80120a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80120ac:	f383 8811 	msr	BASEPRI, r3
 80120b0:	f3bf 8f6f 	isb	sy
 80120b4:	f3bf 8f4f 	dsb	sy
 80120b8:	e7fe      	b.n	80120b8 <prvSwitchTimerLists+0x8c>
 80120ba:	bf00      	nop
 80120bc:	20013704 	.word	0x20013704
 80120c0:	20013708 	.word	0x20013708
 80120c4:	20013828 	.word	0x20013828

080120c8 <prvTimerTask>:
{
 80120c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120cc:	4e9b      	ldr	r6, [pc, #620]	; (801233c <prvTimerTask+0x274>)
 80120ce:	4d9c      	ldr	r5, [pc, #624]	; (8012340 <prvTimerTask+0x278>)
 80120d0:	4c9c      	ldr	r4, [pc, #624]	; (8012344 <prvTimerTask+0x27c>)
 80120d2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 80120d4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 80120d8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80120dc:	6833      	ldr	r3, [r6, #0]
 80120de:	681f      	ldr	r7, [r3, #0]
 80120e0:	2f00      	cmp	r7, #0
 80120e2:	f000 80a8 	beq.w	8012236 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80120e6:	68db      	ldr	r3, [r3, #12]
 80120e8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 80120ea:	f7ff fcf9 	bl	8011ae0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80120ee:	f7ff fd0f 	bl	8011b10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80120f2:	682a      	ldr	r2, [r5, #0]
 80120f4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80120f6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80120f8:	f0c0 80ae 	bcc.w	8012258 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80120fc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 80120fe:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8012100:	f240 80b4 	bls.w	801226c <prvTimerTask+0x1a4>
 8012104:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8012106:	6820      	ldr	r0, [r4, #0]
 8012108:	eba7 010a 	sub.w	r1, r7, sl
 801210c:	f7ff f89a 	bl	8011244 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8012110:	f7ff fcee 	bl	8011af0 <xTaskResumeAll>
 8012114:	b928      	cbnz	r0, 8012122 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8012116:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 801211a:	f3bf 8f4f 	dsb	sy
 801211e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8012122:	6820      	ldr	r0, [r4, #0]
 8012124:	2200      	movs	r2, #0
 8012126:	a902      	add	r1, sp, #8
 8012128:	f7fe fc94 	bl	8010a54 <xQueueReceive>
 801212c:	2800      	cmp	r0, #0
 801212e:	d0d5      	beq.n	80120dc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8012130:	9b02      	ldr	r3, [sp, #8]
 8012132:	2b00      	cmp	r3, #0
 8012134:	db76      	blt.n	8012224 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8012136:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8012138:	697b      	ldr	r3, [r7, #20]
 801213a:	b113      	cbz	r3, 8012142 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801213c:	1d38      	adds	r0, r7, #4
 801213e:	f7fd fedd 	bl	800fefc <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8012142:	f7ff fce5 	bl	8011b10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8012146:	682b      	ldr	r3, [r5, #0]
 8012148:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801214a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801214c:	f0c0 808b 	bcc.w	8012266 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8012150:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8012152:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8012156:	2b09      	cmp	r3, #9
 8012158:	d8e3      	bhi.n	8012122 <prvTimerTask+0x5a>
 801215a:	e8df f003 	tbb	[pc, r3]
 801215e:	0505      	.short	0x0505
 8012160:	5a3d5305 	.word	0x5a3d5305
 8012164:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012168:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801216c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801216e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012170:	f043 0301 	orr.w	r3, r3, #1
 8012174:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8012178:	9b03      	ldr	r3, [sp, #12]
 801217a:	1899      	adds	r1, r3, r2
 801217c:	bf2c      	ite	cs
 801217e:	2001      	movcs	r0, #1
 8012180:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8012182:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012184:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012186:	f200 808c 	bhi.w	80122a2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801218a:	ebaa 0303 	sub.w	r3, sl, r3
 801218e:	429a      	cmp	r2, r3
 8012190:	d832      	bhi.n	80121f8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012192:	6a3b      	ldr	r3, [r7, #32]
 8012194:	4638      	mov	r0, r7
 8012196:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012198:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801219c:	075b      	lsls	r3, r3, #29
 801219e:	d5c0      	bpl.n	8012122 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 80121a0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80121a2:	9903      	ldr	r1, [sp, #12]
 80121a4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 80121a6:	b172      	cbz	r2, 80121c6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80121a8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80121aa:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 80121ae:	2300      	movs	r3, #0
 80121b0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80121b2:	f7ff fe3f 	bl	8011e34 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80121b6:	2300      	movs	r3, #0
 80121b8:	6820      	ldr	r0, [r4, #0]
 80121ba:	461a      	mov	r2, r3
 80121bc:	a906      	add	r1, sp, #24
 80121be:	f7fe fa0d 	bl	80105dc <xQueueGenericSend>
							configASSERT( xResult );
 80121c2:	2800      	cmp	r0, #0
 80121c4:	d1ad      	bne.n	8012122 <prvTimerTask+0x5a>
 80121c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80121ca:	f383 8811 	msr	BASEPRI, r3
 80121ce:	f3bf 8f6f 	isb	sy
 80121d2:	f3bf 8f4f 	dsb	sy
 80121d6:	e7fe      	b.n	80121d6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80121d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80121dc:	f043 0301 	orr.w	r3, r3, #1
 80121e0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80121e4:	9b03      	ldr	r3, [sp, #12]
 80121e6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80121e8:	2b00      	cmp	r3, #0
 80121ea:	f000 809d 	beq.w	8012328 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80121ee:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80121f0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80121f2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80121f4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80121f6:	d85e      	bhi.n	80122b6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80121f8:	4b53      	ldr	r3, [pc, #332]	; (8012348 <prvTimerTask+0x280>)
 80121fa:	1d39      	adds	r1, r7, #4
 80121fc:	6818      	ldr	r0, [r3, #0]
 80121fe:	f7fd fe65 	bl	800fecc <vListInsert>
	return xProcessTimerNow;
 8012202:	e78e      	b.n	8012122 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8012204:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8012208:	f023 0301 	bic.w	r3, r3, #1
 801220c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8012210:	e787      	b.n	8012122 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8012212:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8012216:	079a      	lsls	r2, r3, #30
 8012218:	d552      	bpl.n	80122c0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801221a:	f023 0301 	bic.w	r3, r3, #1
 801221e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8012222:	e77e      	b.n	8012122 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8012224:	9b03      	ldr	r3, [sp, #12]
 8012226:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801222a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801222c:	9b02      	ldr	r3, [sp, #8]
 801222e:	2b00      	cmp	r3, #0
 8012230:	f6ff af77 	blt.w	8012122 <prvTimerTask+0x5a>
 8012234:	e77f      	b.n	8012136 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8012236:	f7ff fc53 	bl	8011ae0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801223a:	f7ff fc69 	bl	8011b10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801223e:	682a      	ldr	r2, [r5, #0]
 8012240:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8012242:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8012244:	d808      	bhi.n	8012258 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8012246:	4b40      	ldr	r3, [pc, #256]	; (8012348 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8012248:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801224c:	681a      	ldr	r2, [r3, #0]
 801224e:	6812      	ldr	r2, [r2, #0]
 8012250:	fab2 f282 	clz	r2, r2
 8012254:	0952      	lsrs	r2, r2, #5
 8012256:	e756      	b.n	8012106 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8012258:	f7ff fee8 	bl	801202c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801225c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8012260:	f7ff fc46 	bl	8011af0 <xTaskResumeAll>
 8012264:	e75d      	b.n	8012122 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8012266:	f7ff fee1 	bl	801202c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801226a:	e771      	b.n	8012150 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801226c:	f7ff fc40 	bl	8011af0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012270:	6832      	ldr	r2, [r6, #0]
 8012272:	68d2      	ldr	r2, [r2, #12]
 8012274:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012278:	f10b 0104 	add.w	r1, fp, #4
 801227c:	4608      	mov	r0, r1
 801227e:	9101      	str	r1, [sp, #4]
 8012280:	f7fd fe3c 	bl	800fefc <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012284:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8012288:	9901      	ldr	r1, [sp, #4]
 801228a:	f010 0f04 	tst.w	r0, #4
 801228e:	d11b      	bne.n	80122c8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8012290:	f020 0001 	bic.w	r0, r0, #1
 8012294:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012298:	f8db 3020 	ldr.w	r3, [fp, #32]
 801229c:	4658      	mov	r0, fp
 801229e:	4798      	blx	r3
}
 80122a0:	e73f      	b.n	8012122 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80122a2:	4553      	cmp	r3, sl
 80122a4:	d902      	bls.n	80122ac <prvTimerTask+0x1e4>
 80122a6:	2800      	cmp	r0, #0
 80122a8:	f43f af73 	beq.w	8012192 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80122ac:	6830      	ldr	r0, [r6, #0]
 80122ae:	1d39      	adds	r1, r7, #4
 80122b0:	f7fd fe0c 	bl	800fecc <vListInsert>
	return xProcessTimerNow;
 80122b4:	e735      	b.n	8012122 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80122b6:	6830      	ldr	r0, [r6, #0]
 80122b8:	1d39      	adds	r1, r7, #4
 80122ba:	f7fd fe07 	bl	800fecc <vListInsert>
 80122be:	e730      	b.n	8012122 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 80122c0:	4638      	mov	r0, r7
 80122c2:	f7fd fd7f 	bl	800fdc4 <vPortFree>
 80122c6:	e72c      	b.n	8012122 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80122c8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80122cc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80122d0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80122d2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80122d4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80122d8:	d903      	bls.n	80122e2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80122da:	6830      	ldr	r0, [r6, #0]
 80122dc:	f7fd fdf6 	bl	800fecc <vListInsert>
	return xProcessTimerNow;
 80122e0:	e7da      	b.n	8012298 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80122e2:	ebaa 0307 	sub.w	r3, sl, r7
 80122e6:	429a      	cmp	r2, r3
 80122e8:	d819      	bhi.n	801231e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80122ea:	6823      	ldr	r3, [r4, #0]
 80122ec:	b173      	cbz	r3, 801230c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80122ee:	2300      	movs	r3, #0
 80122f0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80122f2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80122f4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80122f8:	f7ff fd9c 	bl	8011e34 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80122fc:	2300      	movs	r3, #0
 80122fe:	6820      	ldr	r0, [r4, #0]
 8012300:	461a      	mov	r2, r3
 8012302:	a906      	add	r1, sp, #24
 8012304:	f7fe f96a 	bl	80105dc <xQueueGenericSend>
			configASSERT( xResult );
 8012308:	2800      	cmp	r0, #0
 801230a:	d1c5      	bne.n	8012298 <prvTimerTask+0x1d0>
 801230c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8012310:	f383 8811 	msr	BASEPRI, r3
 8012314:	f3bf 8f6f 	isb	sy
 8012318:	f3bf 8f4f 	dsb	sy
 801231c:	e7fe      	b.n	801231c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801231e:	4b0a      	ldr	r3, [pc, #40]	; (8012348 <prvTimerTask+0x280>)
 8012320:	6818      	ldr	r0, [r3, #0]
 8012322:	f7fd fdd3 	bl	800fecc <vListInsert>
	return xProcessTimerNow;
 8012326:	e7b7      	b.n	8012298 <prvTimerTask+0x1d0>
 8012328:	f04f 0350 	mov.w	r3, #80	; 0x50
 801232c:	f383 8811 	msr	BASEPRI, r3
 8012330:	f3bf 8f6f 	isb	sy
 8012334:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8012338:	e7fe      	b.n	8012338 <prvTimerTask+0x270>
 801233a:	bf00      	nop
 801233c:	20013704 	.word	0x20013704
 8012340:	200137d4 	.word	0x200137d4
 8012344:	20013828 	.word	0x20013828
 8012348:	20013708 	.word	0x20013708

0801234c <xTimerCreateTimerTask>:
{
 801234c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801234e:	4c23      	ldr	r4, [pc, #140]	; (80123dc <xTimerCreateTimerTask+0x90>)
{
 8012350:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8012352:	f7fd fe4f 	bl	800fff4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8012356:	6825      	ldr	r5, [r4, #0]
 8012358:	b335      	cbz	r5, 80123a8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801235a:	f7fd fe6d 	bl	8010038 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801235e:	6823      	ldr	r3, [r4, #0]
 8012360:	b1cb      	cbz	r3, 8012396 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8012362:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8012364:	aa07      	add	r2, sp, #28
 8012366:	a906      	add	r1, sp, #24
 8012368:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801236a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801236e:	f7fd fc5d 	bl	800fc2c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8012372:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8012376:	2302      	movs	r3, #2
 8012378:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801237c:	9300      	str	r3, [sp, #0]
 801237e:	9a07      	ldr	r2, [sp, #28]
 8012380:	4917      	ldr	r1, [pc, #92]	; (80123e0 <xTimerCreateTimerTask+0x94>)
 8012382:	4818      	ldr	r0, [pc, #96]	; (80123e4 <xTimerCreateTimerTask+0x98>)
 8012384:	4623      	mov	r3, r4
 8012386:	f7ff fa6d 	bl	8011864 <xTaskCreateStatic>
 801238a:	4b17      	ldr	r3, [pc, #92]	; (80123e8 <xTimerCreateTimerTask+0x9c>)
 801238c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801238e:	b110      	cbz	r0, 8012396 <xTimerCreateTimerTask+0x4a>
}
 8012390:	2001      	movs	r0, #1
 8012392:	b009      	add	sp, #36	; 0x24
 8012394:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012396:	f04f 0350 	mov.w	r3, #80	; 0x50
 801239a:	f383 8811 	msr	BASEPRI, r3
 801239e:	f3bf 8f6f 	isb	sy
 80123a2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80123a6:	e7fe      	b.n	80123a6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 80123a8:	4f10      	ldr	r7, [pc, #64]	; (80123ec <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 80123aa:	4e11      	ldr	r6, [pc, #68]	; (80123f0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 80123ac:	4638      	mov	r0, r7
 80123ae:	f7fd fd6d 	bl	800fe8c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80123b2:	4630      	mov	r0, r6
 80123b4:	f7fd fd6a 	bl	800fe8c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80123b8:	4a0e      	ldr	r2, [pc, #56]	; (80123f4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80123ba:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 80123bc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80123be:	4a0e      	ldr	r2, [pc, #56]	; (80123f8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80123c0:	4b0e      	ldr	r3, [pc, #56]	; (80123fc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 80123c2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80123c4:	2110      	movs	r1, #16
 80123c6:	4a0e      	ldr	r2, [pc, #56]	; (8012400 <xTimerCreateTimerTask+0xb4>)
 80123c8:	200a      	movs	r0, #10
 80123ca:	f7fd ffb1 	bl	8010330 <xQueueGenericCreateStatic>
 80123ce:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80123d0:	2800      	cmp	r0, #0
 80123d2:	d0c2      	beq.n	801235a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80123d4:	490b      	ldr	r1, [pc, #44]	; (8012404 <xTimerCreateTimerTask+0xb8>)
 80123d6:	f7fe ff0d 	bl	80111f4 <vQueueAddToRegistry>
 80123da:	e7be      	b.n	801235a <xTimerCreateTimerTask+0xe>
 80123dc:	20013828 	.word	0x20013828
 80123e0:	08031470 	.word	0x08031470
 80123e4:	080120c9 	.word	0x080120c9
 80123e8:	2001382c 	.word	0x2001382c
 80123ec:	200137ac 	.word	0x200137ac
 80123f0:	200137c0 	.word	0x200137c0
 80123f4:	20013704 	.word	0x20013704
 80123f8:	20013708 	.word	0x20013708
 80123fc:	200137d8 	.word	0x200137d8
 8012400:	2001370c 	.word	0x2001370c
 8012404:	08031468 	.word	0x08031468

08012408 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8012408:	8880      	ldrh	r0, [r0, #4]
 801240a:	4770      	bx	lr

0801240c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801240c:	b570      	push	{r4, r5, r6, lr}
 801240e:	6803      	ldr	r3, [r0, #0]
 8012410:	4605      	mov	r5, r0
 8012412:	460c      	mov	r4, r1
 8012414:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012416:	2100      	movs	r1, #0
 8012418:	4798      	blx	r3
 801241a:	682b      	ldr	r3, [r5, #0]
 801241c:	4606      	mov	r6, r0
 801241e:	6a1b      	ldr	r3, [r3, #32]
 8012420:	4628      	mov	r0, r5
 8012422:	4798      	blx	r3
 8012424:	1ba4      	subs	r4, r4, r6
 8012426:	b2a4      	uxth	r4, r4
 8012428:	fbb4 f0f0 	udiv	r0, r4, r0
 801242c:	bd70      	pop	{r4, r5, r6, pc}

0801242e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801242e:	2300      	movs	r3, #0
 8012430:	8083      	strh	r3, [r0, #4]
 8012432:	4770      	bx	lr

08012434 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8012434:	b510      	push	{r4, lr}
 8012436:	6803      	ldr	r3, [r0, #0]
 8012438:	8881      	ldrh	r1, [r0, #4]
 801243a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801243c:	4604      	mov	r4, r0
 801243e:	4798      	blx	r3
 8012440:	88a3      	ldrh	r3, [r4, #4]
 8012442:	3301      	adds	r3, #1
 8012444:	80a3      	strh	r3, [r4, #4]
 8012446:	bd10      	pop	{r4, pc}

08012448 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8012448:	6803      	ldr	r3, [r0, #0]
 801244a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801244c:	4718      	bx	r3

0801244e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801244e:	4770      	bx	lr

08012450 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012450:	4a02      	ldr	r2, [pc, #8]	; (801245c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012452:	6002      	str	r2, [r0, #0]
 8012454:	2200      	movs	r2, #0
 8012456:	8082      	strh	r2, [r0, #4]
 8012458:	4770      	bx	lr
 801245a:	bf00      	nop
 801245c:	08031480 	.word	0x08031480

08012460 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8012460:	b510      	push	{r4, lr}
 8012462:	6803      	ldr	r3, [r0, #0]
 8012464:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012468:	4604      	mov	r4, r0
 801246a:	4798      	blx	r3
 801246c:	b110      	cbz	r0, 8012474 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801246e:	4620      	mov	r0, r4
 8012470:	f7f0 ff22 	bl	80032b8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012474:	bd10      	pop	{r4, pc}

08012476 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8012476:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801247a:	4770      	bx	lr

0801247c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801247c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8012480:	4770      	bx	lr

08012482 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8012482:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8012486:	4770      	bx	lr

08012488 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8012488:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801248c:	4770      	bx	lr

0801248e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801248e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012490:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8012494:	461e      	mov	r6, r3
 8012496:	6803      	ldr	r3, [r0, #0]
 8012498:	460f      	mov	r7, r1
 801249a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801249e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80124a2:	4604      	mov	r4, r0
 80124a4:	4615      	mov	r5, r2
 80124a6:	4798      	blx	r3
 80124a8:	b93e      	cbnz	r6, 80124ba <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80124aa:	1bed      	subs	r5, r5, r7
 80124ac:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80124b0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80124b4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80124b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80124ba:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80124be:	e7f7      	b.n	80124b0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080124c0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80124c0:	b510      	push	{r4, lr}
 80124c2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80124c6:	600c      	str	r4, [r1, #0]
 80124c8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80124cc:	6011      	str	r1, [r2, #0]
 80124ce:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80124d2:	801a      	strh	r2, [r3, #0]
 80124d4:	9b02      	ldr	r3, [sp, #8]
 80124d6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80124da:	801a      	strh	r2, [r3, #0]
 80124dc:	bd10      	pop	{r4, pc}

080124de <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80124de:	b510      	push	{r4, lr}
 80124e0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80124e4:	600c      	str	r4, [r1, #0]
 80124e6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80124ea:	6011      	str	r1, [r2, #0]
 80124ec:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80124f0:	801a      	strh	r2, [r3, #0]
 80124f2:	bd10      	pop	{r4, pc}

080124f4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80124f4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80124f8:	600b      	str	r3, [r1, #0]
 80124fa:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80124fe:	6013      	str	r3, [r2, #0]
 8012500:	4770      	bx	lr

08012502 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8012502:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8012506:	4770      	bx	lr

08012508 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8012508:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801250c:	4770      	bx	lr

0801250e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801250e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8012512:	4770      	bx	lr

08012514 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8012514:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8012518:	4770      	bx	lr

0801251a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801251a:	4770      	bx	lr

0801251c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801251c:	b510      	push	{r4, lr}
 801251e:	21b4      	movs	r1, #180	; 0xb4
 8012520:	4604      	mov	r4, r0
 8012522:	f01a fb36 	bl	802cb92 <_ZdlPvj>
 8012526:	4620      	mov	r0, r4
 8012528:	bd10      	pop	{r4, pc}

0801252a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801252a:	b570      	push	{r4, r5, r6, lr}
 801252c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8012530:	428d      	cmp	r5, r1
 8012532:	bfb8      	it	lt
 8012534:	460d      	movlt	r5, r1
 8012536:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801253a:	428d      	cmp	r5, r1
 801253c:	4604      	mov	r4, r0
 801253e:	bfa8      	it	ge
 8012540:	460d      	movge	r5, r1
 8012542:	4616      	mov	r6, r2
 8012544:	b99a      	cbnz	r2, 801256e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8012546:	6803      	ldr	r3, [r0, #0]
 8012548:	4629      	mov	r1, r5
 801254a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801254e:	4798      	blx	r3
 8012550:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012554:	b368      	cbz	r0, 80125b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012556:	6803      	ldr	r3, [r0, #0]
 8012558:	68db      	ldr	r3, [r3, #12]
 801255a:	4798      	blx	r3
 801255c:	b348      	cbz	r0, 80125b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801255e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012562:	6803      	ldr	r3, [r0, #0]
 8012564:	4621      	mov	r1, r4
 8012566:	689b      	ldr	r3, [r3, #8]
 8012568:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801256c:	4718      	bx	r3
 801256e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8012572:	2b00      	cmp	r3, #0
 8012574:	dd08      	ble.n	8012588 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8012576:	f006 fa23 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 801257a:	4621      	mov	r1, r4
 801257c:	3004      	adds	r0, #4
 801257e:	f006 fa6c 	bl	8018a5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012582:	2300      	movs	r3, #0
 8012584:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012588:	6823      	ldr	r3, [r4, #0]
 801258a:	4620      	mov	r0, r4
 801258c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012590:	4798      	blx	r3
 8012592:	2300      	movs	r3, #0
 8012594:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8012598:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801259c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80125a0:	f006 fa0e 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 80125a4:	4621      	mov	r1, r4
 80125a6:	3004      	adds	r0, #4
 80125a8:	f006 fb00 	bl	8018bac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80125ac:	2301      	movs	r3, #1
 80125ae:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80125b2:	bd70      	pop	{r4, r5, r6, pc}

080125b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80125b4:	b510      	push	{r4, lr}
 80125b6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80125ba:	4299      	cmp	r1, r3
 80125bc:	bfb8      	it	lt
 80125be:	4619      	movlt	r1, r3
 80125c0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80125c4:	4299      	cmp	r1, r3
 80125c6:	bfa8      	it	ge
 80125c8:	4619      	movge	r1, r3
 80125ca:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80125ce:	428b      	cmp	r3, r1
 80125d0:	4604      	mov	r4, r0
 80125d2:	d010      	beq.n	80125f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125d4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80125d8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80125dc:	b158      	cbz	r0, 80125f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125de:	6803      	ldr	r3, [r0, #0]
 80125e0:	68db      	ldr	r3, [r3, #12]
 80125e2:	4798      	blx	r3
 80125e4:	b138      	cbz	r0, 80125f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125e6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80125ea:	6803      	ldr	r3, [r0, #0]
 80125ec:	4621      	mov	r1, r4
 80125ee:	689b      	ldr	r3, [r3, #8]
 80125f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80125f4:	4718      	bx	r3
 80125f6:	bd10      	pop	{r4, pc}

080125f8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80125f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80125fa:	4604      	mov	r4, r0
 80125fc:	460d      	mov	r5, r1
 80125fe:	b1a9      	cbz	r1, 801262c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8012600:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8012604:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8012608:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801260c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8012610:	ab01      	add	r3, sp, #4
 8012612:	1a12      	subs	r2, r2, r0
 8012614:	1b89      	subs	r1, r1, r6
 8012616:	1a38      	subs	r0, r7, r0
 8012618:	f007 fc88 	bl	8019f2c <_ZN8touchgfx6muldivElllRl>
 801261c:	4629      	mov	r1, r5
 801261e:	ab01      	add	r3, sp, #4
 8012620:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8012624:	4430      	add	r0, r6
 8012626:	f007 fc81 	bl	8019f2c <_ZN8touchgfx6muldivElllRl>
 801262a:	b285      	uxth	r5, r0
 801262c:	4628      	mov	r0, r5
 801262e:	b003      	add	sp, #12
 8012630:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012632 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8012632:	b570      	push	{r4, r5, r6, lr}
 8012634:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8012638:	4604      	mov	r4, r0
 801263a:	2b00      	cmp	r3, #0
 801263c:	d035      	beq.n	80126aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801263e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8012642:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8012646:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801264a:	3001      	adds	r0, #1
 801264c:	1ad2      	subs	r2, r2, r3
 801264e:	b212      	sxth	r2, r2
 8012650:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012654:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012658:	2100      	movs	r1, #0
 801265a:	b280      	uxth	r0, r0
 801265c:	47a8      	blx	r5
 801265e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8012662:	6823      	ldr	r3, [r4, #0]
 8012664:	4401      	add	r1, r0
 8012666:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801266a:	4620      	mov	r0, r4
 801266c:	4798      	blx	r3
 801266e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012672:	429a      	cmp	r2, r3
 8012674:	db19      	blt.n	80126aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012676:	2500      	movs	r5, #0
 8012678:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801267c:	f006 f9a0 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 8012680:	4621      	mov	r1, r4
 8012682:	3004      	adds	r0, #4
 8012684:	f006 f9e9 	bl	8018a5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012688:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801268c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012690:	b158      	cbz	r0, 80126aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012692:	6803      	ldr	r3, [r0, #0]
 8012694:	68db      	ldr	r3, [r3, #12]
 8012696:	4798      	blx	r3
 8012698:	b138      	cbz	r0, 80126aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801269a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801269e:	6803      	ldr	r3, [r0, #0]
 80126a0:	4621      	mov	r1, r4
 80126a2:	689b      	ldr	r3, [r3, #8]
 80126a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126a8:	4718      	bx	r3
 80126aa:	bd70      	pop	{r4, r5, r6, pc}

080126ac <_ZN8touchgfx8DrawableC1Ev>:
 80126ac:	4a0a      	ldr	r2, [pc, #40]	; (80126d8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80126ae:	6002      	str	r2, [r0, #0]
 80126b0:	2200      	movs	r2, #0
 80126b2:	8082      	strh	r2, [r0, #4]
 80126b4:	80c2      	strh	r2, [r0, #6]
 80126b6:	8102      	strh	r2, [r0, #8]
 80126b8:	8142      	strh	r2, [r0, #10]
 80126ba:	8182      	strh	r2, [r0, #12]
 80126bc:	81c2      	strh	r2, [r0, #14]
 80126be:	8202      	strh	r2, [r0, #16]
 80126c0:	8242      	strh	r2, [r0, #18]
 80126c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80126c6:	61c2      	str	r2, [r0, #28]
 80126c8:	8402      	strh	r2, [r0, #32]
 80126ca:	8442      	strh	r2, [r0, #34]	; 0x22
 80126cc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80126d0:	2201      	movs	r2, #1
 80126d2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80126d6:	4770      	bx	lr
 80126d8:	08031e00 	.word	0x08031e00

080126dc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80126dc:	b570      	push	{r4, r5, r6, lr}
 80126de:	6803      	ldr	r3, [r0, #0]
 80126e0:	4604      	mov	r4, r0
 80126e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80126e4:	4615      	mov	r5, r2
 80126e6:	4798      	blx	r3
 80126e8:	6823      	ldr	r3, [r4, #0]
 80126ea:	4629      	mov	r1, r5
 80126ec:	4620      	mov	r0, r4
 80126ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80126f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126f4:	4718      	bx	r3

080126f6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80126f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126fa:	4604      	mov	r4, r0
 80126fc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8012700:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8012704:	460e      	mov	r6, r1
 8012706:	4615      	mov	r5, r2
 8012708:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801270c:	4619      	mov	r1, r3
 801270e:	463a      	mov	r2, r7
 8012710:	3058      	adds	r0, #88	; 0x58
 8012712:	4698      	mov	r8, r3
 8012714:	f7ff ffe2 	bl	80126dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012718:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801271c:	4446      	add	r6, r8
 801271e:	42b3      	cmp	r3, r6
 8012720:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012724:	bfb8      	it	lt
 8012726:	8126      	strhlt	r6, [r4, #8]
 8012728:	443d      	add	r5, r7
 801272a:	42ab      	cmp	r3, r5
 801272c:	bfb8      	it	lt
 801272e:	8165      	strhlt	r5, [r4, #10]
 8012730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012734 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8012734:	b510      	push	{r4, lr}
 8012736:	4604      	mov	r4, r0
 8012738:	302c      	adds	r0, #44	; 0x2c
 801273a:	f003 fc42 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801273e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012742:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012746:	4620      	mov	r0, r4
 8012748:	f7ff ffc8 	bl	80126dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801274c:	bd10      	pop	{r4, pc}
	...

08012750 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012750:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012752:	4604      	mov	r4, r0
 8012754:	4626      	mov	r6, r4
 8012756:	2500      	movs	r5, #0
 8012758:	f7ff ffa8 	bl	80126ac <_ZN8touchgfx8DrawableC1Ev>
 801275c:	4b23      	ldr	r3, [pc, #140]	; (80127ec <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801275e:	62a5      	str	r5, [r4, #40]	; 0x28
 8012760:	f846 3b2c 	str.w	r3, [r6], #44
 8012764:	2226      	movs	r2, #38	; 0x26
 8012766:	4629      	mov	r1, r5
 8012768:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801276c:	4630      	mov	r0, r6
 801276e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012772:	f01b fafa 	bl	802dd6a <memset>
 8012776:	4630      	mov	r0, r6
 8012778:	f7ff ff98 	bl	80126ac <_ZN8touchgfx8DrawableC1Ev>
 801277c:	a902      	add	r1, sp, #8
 801277e:	4b1c      	ldr	r3, [pc, #112]	; (80127f0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012780:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012782:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8012786:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801278a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801278e:	4630      	mov	r0, r6
 8012790:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8012794:	f003 fc15 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012798:	4638      	mov	r0, r7
 801279a:	f7ff ff87 	bl	80126ac <_ZN8touchgfx8DrawableC1Ev>
 801279e:	4b15      	ldr	r3, [pc, #84]	; (80127f4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 80127a0:	65a3      	str	r3, [r4, #88]	; 0x58
 80127a2:	2364      	movs	r3, #100	; 0x64
 80127a4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 80127a8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80127ac:	4b12      	ldr	r3, [pc, #72]	; (80127f8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 80127ae:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80127b2:	4629      	mov	r1, r5
 80127b4:	4630      	mov	r0, r6
 80127b6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80127ba:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80127be:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80127c2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80127c6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80127ca:	f7f0 fcd1 	bl	8003170 <_ZN8touchgfx8Drawable4setXEs>
 80127ce:	4629      	mov	r1, r5
 80127d0:	4630      	mov	r0, r6
 80127d2:	f7f0 fccf 	bl	8003174 <_ZN8touchgfx8Drawable4setYEs>
 80127d6:	4631      	mov	r1, r6
 80127d8:	4620      	mov	r0, r4
 80127da:	f000 f819 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80127de:	4620      	mov	r0, r4
 80127e0:	4639      	mov	r1, r7
 80127e2:	f000 f815 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80127e6:	4620      	mov	r0, r4
 80127e8:	b003      	add	sp, #12
 80127ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127ec:	080314b4 	.word	0x080314b4
 80127f0:	08031cbc 	.word	0x08031cbc
 80127f4:	08031588 	.word	0x08031588
 80127f8:	0801a707 	.word	0x0801a707

080127fc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80127fc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80127fe:	2000      	movs	r0, #0
 8012800:	b12b      	cbz	r3, 801280e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012802:	b920      	cbnz	r0, 801280e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012804:	1a5a      	subs	r2, r3, r1
 8012806:	4250      	negs	r0, r2
 8012808:	4150      	adcs	r0, r2
 801280a:	699b      	ldr	r3, [r3, #24]
 801280c:	e7f8      	b.n	8012800 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801280e:	4770      	bx	lr

08012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012810:	2300      	movs	r3, #0
 8012812:	6148      	str	r0, [r1, #20]
 8012814:	618b      	str	r3, [r1, #24]
 8012816:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012818:	b913      	cbnz	r3, 8012820 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801281a:	6281      	str	r1, [r0, #40]	; 0x28
 801281c:	4770      	bx	lr
 801281e:	4613      	mov	r3, r2
 8012820:	699a      	ldr	r2, [r3, #24]
 8012822:	2a00      	cmp	r2, #0
 8012824:	d1fb      	bne.n	801281e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8012826:	6199      	str	r1, [r3, #24]
 8012828:	4770      	bx	lr

0801282a <_ZN8touchgfx9Container9removeAllEv>:
 801282a:	2200      	movs	r2, #0
 801282c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801282e:	b123      	cbz	r3, 801283a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012830:	6999      	ldr	r1, [r3, #24]
 8012832:	6281      	str	r1, [r0, #40]	; 0x28
 8012834:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012838:	e7f8      	b.n	801282c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801283a:	4770      	bx	lr

0801283c <_ZN8touchgfx9Container6unlinkEv>:
 801283c:	2300      	movs	r3, #0
 801283e:	6283      	str	r3, [r0, #40]	; 0x28
 8012840:	4770      	bx	lr

08012842 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012842:	2200      	movs	r2, #0
 8012844:	8002      	strh	r2, [r0, #0]
 8012846:	8042      	strh	r2, [r0, #2]
 8012848:	8082      	strh	r2, [r0, #4]
 801284a:	80c2      	strh	r2, [r0, #6]
 801284c:	4770      	bx	lr

0801284e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801284e:	b570      	push	{r4, r5, r6, lr}
 8012850:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012852:	460d      	mov	r5, r1
 8012854:	4616      	mov	r6, r2
 8012856:	b13c      	cbz	r4, 8012868 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012858:	6823      	ldr	r3, [r4, #0]
 801285a:	4620      	mov	r0, r4
 801285c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801285e:	4632      	mov	r2, r6
 8012860:	4629      	mov	r1, r5
 8012862:	4798      	blx	r3
 8012864:	69a4      	ldr	r4, [r4, #24]
 8012866:	e7f6      	b.n	8012856 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8012868:	bd70      	pop	{r4, r5, r6, pc}

0801286a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801286a:	b538      	push	{r3, r4, r5, lr}
 801286c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801286e:	460d      	mov	r5, r1
 8012870:	b134      	cbz	r4, 8012880 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8012872:	682b      	ldr	r3, [r5, #0]
 8012874:	4621      	mov	r1, r4
 8012876:	689b      	ldr	r3, [r3, #8]
 8012878:	4628      	mov	r0, r5
 801287a:	4798      	blx	r3
 801287c:	69a4      	ldr	r4, [r4, #24]
 801287e:	e7f7      	b.n	8012870 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012880:	bd38      	pop	{r3, r4, r5, pc}

08012882 <_ZN8touchgfx9ContainerD1Ev>:
 8012882:	4770      	bx	lr

08012884 <_ZN8touchgfx9ContainerD0Ev>:
 8012884:	b510      	push	{r4, lr}
 8012886:	212c      	movs	r1, #44	; 0x2c
 8012888:	4604      	mov	r4, r0
 801288a:	f01a f982 	bl	802cb92 <_ZdlPvj>
 801288e:	4620      	mov	r0, r4
 8012890:	bd10      	pop	{r4, pc}

08012892 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8012892:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012894:	b19b      	cbz	r3, 80128be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012896:	428b      	cmp	r3, r1
 8012898:	d109      	bne.n	80128ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801289a:	699a      	ldr	r2, [r3, #24]
 801289c:	2100      	movs	r1, #0
 801289e:	6159      	str	r1, [r3, #20]
 80128a0:	6282      	str	r2, [r0, #40]	; 0x28
 80128a2:	b902      	cbnz	r2, 80128a6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80128a4:	4770      	bx	lr
 80128a6:	6199      	str	r1, [r3, #24]
 80128a8:	4770      	bx	lr
 80128aa:	4613      	mov	r3, r2
 80128ac:	b13a      	cbz	r2, 80128be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80128ae:	699a      	ldr	r2, [r3, #24]
 80128b0:	428a      	cmp	r2, r1
 80128b2:	d1fa      	bne.n	80128aa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80128b4:	698a      	ldr	r2, [r1, #24]
 80128b6:	619a      	str	r2, [r3, #24]
 80128b8:	2300      	movs	r3, #0
 80128ba:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80128be:	4770      	bx	lr

080128c0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80128c0:	b410      	push	{r4}
 80128c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80128c4:	4604      	mov	r4, r0
 80128c6:	b92b      	cbnz	r3, 80128d4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80128c8:	6803      	ldr	r3, [r0, #0]
 80128ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80128ce:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80128d0:	4611      	mov	r1, r2
 80128d2:	4718      	bx	r3
 80128d4:	b941      	cbnz	r1, 80128e8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80128d6:	6193      	str	r3, [r2, #24]
 80128d8:	6282      	str	r2, [r0, #40]	; 0x28
 80128da:	6154      	str	r4, [r2, #20]
 80128dc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80128e0:	4770      	bx	lr
 80128e2:	4603      	mov	r3, r0
 80128e4:	2800      	cmp	r0, #0
 80128e6:	d0f9      	beq.n	80128dc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80128e8:	4299      	cmp	r1, r3
 80128ea:	6998      	ldr	r0, [r3, #24]
 80128ec:	d1f9      	bne.n	80128e2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80128ee:	6190      	str	r0, [r2, #24]
 80128f0:	618a      	str	r2, [r1, #24]
 80128f2:	e7f2      	b.n	80128da <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080128f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80128f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128f8:	461f      	mov	r7, r3
 80128fa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80128fe:	460d      	mov	r5, r1
 8012900:	4616      	mov	r6, r2
 8012902:	b103      	cbz	r3, 8012906 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8012904:	6038      	str	r0, [r7, #0]
 8012906:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012908:	b314      	cbz	r4, 8012950 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801290a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801290e:	b1eb      	cbz	r3, 801294c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012910:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012914:	428d      	cmp	r5, r1
 8012916:	db19      	blt.n	801294c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012918:	8923      	ldrh	r3, [r4, #8]
 801291a:	b289      	uxth	r1, r1
 801291c:	440b      	add	r3, r1
 801291e:	b21b      	sxth	r3, r3
 8012920:	429d      	cmp	r5, r3
 8012922:	da13      	bge.n	801294c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012924:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012928:	4296      	cmp	r6, r2
 801292a:	db0f      	blt.n	801294c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801292c:	8963      	ldrh	r3, [r4, #10]
 801292e:	b292      	uxth	r2, r2
 8012930:	4413      	add	r3, r2
 8012932:	b21b      	sxth	r3, r3
 8012934:	429e      	cmp	r6, r3
 8012936:	da09      	bge.n	801294c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012938:	6823      	ldr	r3, [r4, #0]
 801293a:	1ab2      	subs	r2, r6, r2
 801293c:	1a69      	subs	r1, r5, r1
 801293e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8012942:	b212      	sxth	r2, r2
 8012944:	463b      	mov	r3, r7
 8012946:	b209      	sxth	r1, r1
 8012948:	4620      	mov	r0, r4
 801294a:	47c0      	blx	r8
 801294c:	69a4      	ldr	r4, [r4, #24]
 801294e:	e7db      	b.n	8012908 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012950:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012954 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012958:	4c6e      	ldr	r4, [pc, #440]	; (8012b14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801295a:	b0a1      	sub	sp, #132	; 0x84
 801295c:	6824      	ldr	r4, [r4, #0]
 801295e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8012960:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8012964:	9303      	str	r3, [sp, #12]
 8012966:	2400      	movs	r4, #0
 8012968:	802c      	strh	r4, [r5, #0]
 801296a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801296c:	802c      	strh	r4, [r5, #0]
 801296e:	601c      	str	r4, [r3, #0]
 8012970:	4606      	mov	r6, r0
 8012972:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012976:	f7ff ffbd 	bl	80128f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801297a:	f1b9 0f03 	cmp.w	r9, #3
 801297e:	f340 80c2 	ble.w	8012b06 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012982:	4631      	mov	r1, r6
 8012984:	a80c      	add	r0, sp, #48	; 0x30
 8012986:	f007 f99f 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801298a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801298e:	9306      	str	r3, [sp, #24]
 8012990:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012994:	9307      	str	r3, [sp, #28]
 8012996:	9b03      	ldr	r3, [sp, #12]
 8012998:	f8d3 a000 	ldr.w	sl, [r3]
 801299c:	f1ba 0f00 	cmp.w	sl, #0
 80129a0:	f000 80b4 	beq.w	8012b0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80129a4:	4651      	mov	r1, sl
 80129a6:	a810      	add	r0, sp, #64	; 0x40
 80129a8:	f007 f98e 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80129ac:	9b01      	ldr	r3, [sp, #4]
 80129ae:	9a06      	ldr	r2, [sp, #24]
 80129b0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80129b4:	189d      	adds	r5, r3, r2
 80129b6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80129ba:	9a07      	ldr	r2, [sp, #28]
 80129bc:	2002      	movs	r0, #2
 80129be:	fb91 f1f0 	sdiv	r1, r1, r0
 80129c2:	4419      	add	r1, r3
 80129c4:	1a6d      	subs	r5, r5, r1
 80129c6:	9b02      	ldr	r3, [sp, #8]
 80129c8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80129cc:	4413      	add	r3, r2
 80129ce:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80129d2:	fb92 f2f0 	sdiv	r2, r2, r0
 80129d6:	440a      	add	r2, r1
 80129d8:	1a9b      	subs	r3, r3, r2
 80129da:	435b      	muls	r3, r3
 80129dc:	fb05 3505 	mla	r5, r5, r5, r3
 80129e0:	4f4d      	ldr	r7, [pc, #308]	; (8012b18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80129e2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129e4:	ac10      	add	r4, sp, #64	; 0x40
 80129e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129e8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129ec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129f0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80129f4:	f1b9 0f0c 	cmp.w	r9, #12
 80129f8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80129fc:	f04f 0303 	mov.w	r3, #3
 8012a00:	bfc8      	it	gt
 8012a02:	4698      	movgt	r8, r3
 8012a04:	f8cd 9000 	str.w	r9, [sp]
 8012a08:	f04f 0400 	mov.w	r4, #0
 8012a0c:	bfdc      	itt	le
 8012a0e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8012a12:	fb92 f8f3 	sdivle	r8, r2, r3
 8012a16:	1c63      	adds	r3, r4, #1
 8012a18:	aa10      	add	r2, sp, #64	; 0x40
 8012a1a:	f004 0401 	and.w	r4, r4, #1
 8012a1e:	9308      	str	r3, [sp, #32]
 8012a20:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8012a24:	9b00      	ldr	r3, [sp, #0]
 8012a26:	fb93 f3f8 	sdiv	r3, r3, r8
 8012a2a:	b29b      	uxth	r3, r3
 8012a2c:	3404      	adds	r4, #4
 8012a2e:	f04f 0b00 	mov.w	fp, #0
 8012a32:	9304      	str	r3, [sp, #16]
 8012a34:	9a04      	ldr	r2, [sp, #16]
 8012a36:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012a3a:	fb13 f302 	smulbb	r3, r3, r2
 8012a3e:	9a01      	ldr	r2, [sp, #4]
 8012a40:	b29b      	uxth	r3, r3
 8012a42:	1899      	adds	r1, r3, r2
 8012a44:	9305      	str	r3, [sp, #20]
 8012a46:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012a4a:	b209      	sxth	r1, r1
 8012a4c:	4299      	cmp	r1, r3
 8012a4e:	db4d      	blt.n	8012aec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a50:	8932      	ldrh	r2, [r6, #8]
 8012a52:	4413      	add	r3, r2
 8012a54:	b21b      	sxth	r3, r3
 8012a56:	4299      	cmp	r1, r3
 8012a58:	da48      	bge.n	8012aec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a5a:	9b04      	ldr	r3, [sp, #16]
 8012a5c:	6827      	ldr	r7, [r4, #0]
 8012a5e:	fb17 f703 	smulbb	r7, r7, r3
 8012a62:	9b02      	ldr	r3, [sp, #8]
 8012a64:	b2bf      	uxth	r7, r7
 8012a66:	18fa      	adds	r2, r7, r3
 8012a68:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012a6c:	b212      	sxth	r2, r2
 8012a6e:	429a      	cmp	r2, r3
 8012a70:	db3c      	blt.n	8012aec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a72:	8970      	ldrh	r0, [r6, #10]
 8012a74:	4403      	add	r3, r0
 8012a76:	b21b      	sxth	r3, r3
 8012a78:	429a      	cmp	r2, r3
 8012a7a:	da37      	bge.n	8012aec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a7c:	2300      	movs	r3, #0
 8012a7e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012a80:	4630      	mov	r0, r6
 8012a82:	ab0b      	add	r3, sp, #44	; 0x2c
 8012a84:	f7ff ff36 	bl	80128f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012a88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012a8a:	b37a      	cbz	r2, 8012aec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a8c:	4552      	cmp	r2, sl
 8012a8e:	d02d      	beq.n	8012aec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a90:	4611      	mov	r1, r2
 8012a92:	a80e      	add	r0, sp, #56	; 0x38
 8012a94:	9209      	str	r2, [sp, #36]	; 0x24
 8012a96:	f007 f917 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a9a:	9a06      	ldr	r2, [sp, #24]
 8012a9c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012aa0:	9b01      	ldr	r3, [sp, #4]
 8012aa2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012aa6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012aaa:	4413      	add	r3, r2
 8012aac:	f04f 0e02 	mov.w	lr, #2
 8012ab0:	fb91 f1fe 	sdiv	r1, r1, lr
 8012ab4:	4401      	add	r1, r0
 8012ab6:	1a58      	subs	r0, r3, r1
 8012ab8:	9a07      	ldr	r2, [sp, #28]
 8012aba:	9b02      	ldr	r3, [sp, #8]
 8012abc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012ac0:	fb9c fcfe 	sdiv	ip, ip, lr
 8012ac4:	4413      	add	r3, r2
 8012ac6:	448c      	add	ip, r1
 8012ac8:	eba3 030c 	sub.w	r3, r3, ip
 8012acc:	435b      	muls	r3, r3
 8012ace:	fb00 3300 	mla	r3, r0, r0, r3
 8012ad2:	42ab      	cmp	r3, r5
 8012ad4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012ad6:	d208      	bcs.n	8012aea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012ad8:	9803      	ldr	r0, [sp, #12]
 8012ada:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012adc:	6001      	str	r1, [r0, #0]
 8012ade:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012ae0:	9805      	ldr	r0, [sp, #20]
 8012ae2:	8008      	strh	r0, [r1, #0]
 8012ae4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012ae6:	461d      	mov	r5, r3
 8012ae8:	800f      	strh	r7, [r1, #0]
 8012aea:	4692      	mov	sl, r2
 8012aec:	f10b 0b01 	add.w	fp, fp, #1
 8012af0:	f1bb 0f04 	cmp.w	fp, #4
 8012af4:	f104 0408 	add.w	r4, r4, #8
 8012af8:	d19c      	bne.n	8012a34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012afa:	9b00      	ldr	r3, [sp, #0]
 8012afc:	9c08      	ldr	r4, [sp, #32]
 8012afe:	444b      	add	r3, r9
 8012b00:	4544      	cmp	r4, r8
 8012b02:	9300      	str	r3, [sp, #0]
 8012b04:	d187      	bne.n	8012a16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012b06:	b021      	add	sp, #132	; 0x84
 8012b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b0c:	f04f 35ff 	mov.w	r5, #4294967295
 8012b10:	e766      	b.n	80129e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012b12:	bf00      	nop
 8012b14:	2001383c 	.word	0x2001383c
 8012b18:	0802ea9c 	.word	0x0802ea9c

08012b1c <_ZN8touchgfx4RectaNERKS0_>:
 8012b1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b20:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012b24:	888c      	ldrh	r4, [r1, #4]
 8012b26:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012b2a:	443c      	add	r4, r7
 8012b2c:	b2a4      	uxth	r4, r4
 8012b2e:	fa0f f884 	sxth.w	r8, r4
 8012b32:	45c1      	cmp	r9, r8
 8012b34:	da2f      	bge.n	8012b96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b36:	8882      	ldrh	r2, [r0, #4]
 8012b38:	444a      	add	r2, r9
 8012b3a:	b292      	uxth	r2, r2
 8012b3c:	fa0f fe82 	sxth.w	lr, r2
 8012b40:	4577      	cmp	r7, lr
 8012b42:	da28      	bge.n	8012b96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b44:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012b48:	88cb      	ldrh	r3, [r1, #6]
 8012b4a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012b4e:	442b      	add	r3, r5
 8012b50:	b21b      	sxth	r3, r3
 8012b52:	429e      	cmp	r6, r3
 8012b54:	da1f      	bge.n	8012b96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b56:	88c3      	ldrh	r3, [r0, #6]
 8012b58:	4433      	add	r3, r6
 8012b5a:	b29b      	uxth	r3, r3
 8012b5c:	fa0f fc83 	sxth.w	ip, r3
 8012b60:	4565      	cmp	r5, ip
 8012b62:	da18      	bge.n	8012b96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b64:	454f      	cmp	r7, r9
 8012b66:	bfb8      	it	lt
 8012b68:	464f      	movlt	r7, r9
 8012b6a:	42b5      	cmp	r5, r6
 8012b6c:	bfb8      	it	lt
 8012b6e:	4635      	movlt	r5, r6
 8012b70:	45f0      	cmp	r8, lr
 8012b72:	bfd8      	it	le
 8012b74:	4622      	movle	r2, r4
 8012b76:	1bd2      	subs	r2, r2, r7
 8012b78:	8082      	strh	r2, [r0, #4]
 8012b7a:	884a      	ldrh	r2, [r1, #2]
 8012b7c:	88c9      	ldrh	r1, [r1, #6]
 8012b7e:	8007      	strh	r7, [r0, #0]
 8012b80:	440a      	add	r2, r1
 8012b82:	b292      	uxth	r2, r2
 8012b84:	b211      	sxth	r1, r2
 8012b86:	458c      	cmp	ip, r1
 8012b88:	bfa8      	it	ge
 8012b8a:	4613      	movge	r3, r2
 8012b8c:	1b5b      	subs	r3, r3, r5
 8012b8e:	80c3      	strh	r3, [r0, #6]
 8012b90:	8045      	strh	r5, [r0, #2]
 8012b92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b96:	2300      	movs	r3, #0
 8012b98:	8003      	strh	r3, [r0, #0]
 8012b9a:	8043      	strh	r3, [r0, #2]
 8012b9c:	8083      	strh	r3, [r0, #4]
 8012b9e:	80c3      	strh	r3, [r0, #6]
 8012ba0:	e7f7      	b.n	8012b92 <_ZN8touchgfx4RectaNERKS0_+0x76>

08012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012ba2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012ba6:	2b00      	cmp	r3, #0
 8012ba8:	dd06      	ble.n	8012bb8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012baa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012bae:	2800      	cmp	r0, #0
 8012bb0:	bfcc      	ite	gt
 8012bb2:	2000      	movgt	r0, #0
 8012bb4:	2001      	movle	r0, #1
 8012bb6:	4770      	bx	lr
 8012bb8:	2001      	movs	r0, #1
 8012bba:	4770      	bx	lr

08012bbc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012bbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012bc0:	2300      	movs	r3, #0
 8012bc2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012bc4:	8003      	strh	r3, [r0, #0]
 8012bc6:	4604      	mov	r4, r0
 8012bc8:	8043      	strh	r3, [r0, #2]
 8012bca:	8083      	strh	r3, [r0, #4]
 8012bcc:	80c3      	strh	r3, [r0, #6]
 8012bce:	2d00      	cmp	r5, #0
 8012bd0:	d040      	beq.n	8012c54 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012bd2:	1d28      	adds	r0, r5, #4
 8012bd4:	f7ff ffe5 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012bd8:	b988      	cbnz	r0, 8012bfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012bda:	4620      	mov	r0, r4
 8012bdc:	f7ff ffe1 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012be0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012be4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012be8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012bec:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012bf0:	b138      	cbz	r0, 8012c02 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012bf2:	8022      	strh	r2, [r4, #0]
 8012bf4:	8063      	strh	r3, [r4, #2]
 8012bf6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012bfa:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012bfe:	69ad      	ldr	r5, [r5, #24]
 8012c00:	e7e5      	b.n	8012bce <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012c02:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012c06:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012c0a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012c0e:	4290      	cmp	r0, r2
 8012c10:	4607      	mov	r7, r0
 8012c12:	bfa8      	it	ge
 8012c14:	4617      	movge	r7, r2
 8012c16:	4472      	add	r2, lr
 8012c18:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012c1c:	8027      	strh	r7, [r4, #0]
 8012c1e:	4299      	cmp	r1, r3
 8012c20:	460e      	mov	r6, r1
 8012c22:	4440      	add	r0, r8
 8012c24:	bfa8      	it	ge
 8012c26:	461e      	movge	r6, r3
 8012c28:	4471      	add	r1, lr
 8012c2a:	4463      	add	r3, ip
 8012c2c:	b200      	sxth	r0, r0
 8012c2e:	b212      	sxth	r2, r2
 8012c30:	b209      	sxth	r1, r1
 8012c32:	b21b      	sxth	r3, r3
 8012c34:	4290      	cmp	r0, r2
 8012c36:	bfac      	ite	ge
 8012c38:	ebc7 0200 	rsbge	r2, r7, r0
 8012c3c:	ebc7 0202 	rsblt	r2, r7, r2
 8012c40:	4299      	cmp	r1, r3
 8012c42:	bfac      	ite	ge
 8012c44:	ebc6 0301 	rsbge	r3, r6, r1
 8012c48:	ebc6 0303 	rsblt	r3, r6, r3
 8012c4c:	8066      	strh	r6, [r4, #2]
 8012c4e:	80a2      	strh	r2, [r4, #4]
 8012c50:	80e3      	strh	r3, [r4, #6]
 8012c52:	e7d4      	b.n	8012bfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012c54:	4620      	mov	r0, r4
 8012c56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012c5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012c5a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012c5e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012c62:	b383      	cbz	r3, 8012cc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012c64:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012c66:	b374      	cbz	r4, 8012cc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012c68:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012c6c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012c70:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012c74:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012c78:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012c7c:	b303      	cbz	r3, 8012cc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012c7e:	4668      	mov	r0, sp
 8012c80:	1d21      	adds	r1, r4, #4
 8012c82:	f8ad 5000 	strh.w	r5, [sp]
 8012c86:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012c8a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012c8e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012c92:	f7ff ff43 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8012c96:	4668      	mov	r0, sp
 8012c98:	f7ff ff83 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c9c:	b980      	cbnz	r0, 8012cc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012c9e:	f8bd 3000 	ldrh.w	r3, [sp]
 8012ca2:	88a2      	ldrh	r2, [r4, #4]
 8012ca4:	1a9b      	subs	r3, r3, r2
 8012ca6:	f8ad 3000 	strh.w	r3, [sp]
 8012caa:	88e2      	ldrh	r2, [r4, #6]
 8012cac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012cb0:	1a9b      	subs	r3, r3, r2
 8012cb2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012cb6:	6823      	ldr	r3, [r4, #0]
 8012cb8:	4669      	mov	r1, sp
 8012cba:	689b      	ldr	r3, [r3, #8]
 8012cbc:	4620      	mov	r0, r4
 8012cbe:	4798      	blx	r3
 8012cc0:	69a4      	ldr	r4, [r4, #24]
 8012cc2:	2c00      	cmp	r4, #0
 8012cc4:	d1d8      	bne.n	8012c78 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012cc6:	b002      	add	sp, #8
 8012cc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012ccc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012ccc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012cce:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012cd2:	460d      	mov	r5, r1
 8012cd4:	4616      	mov	r6, r2
 8012cd6:	b323      	cbz	r3, 8012d22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012cd8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012cda:	b314      	cbz	r4, 8012d22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012cdc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012ce0:	b1eb      	cbz	r3, 8012d1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012ce2:	6828      	ldr	r0, [r5, #0]
 8012ce4:	6869      	ldr	r1, [r5, #4]
 8012ce6:	466b      	mov	r3, sp
 8012ce8:	c303      	stmia	r3!, {r0, r1}
 8012cea:	4668      	mov	r0, sp
 8012cec:	1d21      	adds	r1, r4, #4
 8012cee:	f7ff ff15 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8012cf2:	4668      	mov	r0, sp
 8012cf4:	f7ff ff55 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012cf8:	b988      	cbnz	r0, 8012d1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012cfa:	f8bd 3000 	ldrh.w	r3, [sp]
 8012cfe:	88a2      	ldrh	r2, [r4, #4]
 8012d00:	1a9b      	subs	r3, r3, r2
 8012d02:	f8ad 3000 	strh.w	r3, [sp]
 8012d06:	88e2      	ldrh	r2, [r4, #6]
 8012d08:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012d0c:	1a9b      	subs	r3, r3, r2
 8012d0e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012d12:	6823      	ldr	r3, [r4, #0]
 8012d14:	4632      	mov	r2, r6
 8012d16:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012d18:	4669      	mov	r1, sp
 8012d1a:	4620      	mov	r0, r4
 8012d1c:	4798      	blx	r3
 8012d1e:	69a4      	ldr	r4, [r4, #24]
 8012d20:	e7db      	b.n	8012cda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012d22:	b002      	add	sp, #8
 8012d24:	bd70      	pop	{r4, r5, r6, pc}

08012d26 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8012d26:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012d28:	4770      	bx	lr
	...

08012d2c <_ZN8touchgfx14SwipeContainerD1Ev>:
 8012d2c:	4b05      	ldr	r3, [pc, #20]	; (8012d44 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8012d2e:	b510      	push	{r4, lr}
 8012d30:	6003      	str	r3, [r0, #0]
 8012d32:	4604      	mov	r4, r0
 8012d34:	f005 fe44 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 8012d38:	4621      	mov	r1, r4
 8012d3a:	3004      	adds	r0, #4
 8012d3c:	f005 fe8d 	bl	8018a5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012d40:	4620      	mov	r0, r4
 8012d42:	bd10      	pop	{r4, pc}
 8012d44:	08031618 	.word	0x08031618

08012d48 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8012d48:	b510      	push	{r4, lr}
 8012d4a:	4604      	mov	r4, r0
 8012d4c:	f7ff ffee 	bl	8012d2c <_ZN8touchgfx14SwipeContainerD1Ev>
 8012d50:	4620      	mov	r0, r4
 8012d52:	21f4      	movs	r1, #244	; 0xf4
 8012d54:	f019 ff1d 	bl	802cb92 <_ZdlPvj>
 8012d58:	4620      	mov	r0, r4
 8012d5a:	bd10      	pop	{r4, pc}

08012d5c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8012d5c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012d60:	2b04      	cmp	r3, #4
 8012d62:	d117      	bne.n	8012d94 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d64:	790b      	ldrb	r3, [r1, #4]
 8012d66:	2b01      	cmp	r3, #1
 8012d68:	d114      	bne.n	8012d94 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d6a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8012d6e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8012d70:	8643      	strh	r3, [r0, #50]	; 0x32
 8012d72:	2b00      	cmp	r3, #0
 8012d74:	8682      	strh	r2, [r0, #52]	; 0x34
 8012d76:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012d7a:	da0e      	bge.n	8012d9a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8012d7c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012d80:	3a01      	subs	r2, #1
 8012d82:	4291      	cmp	r1, r2
 8012d84:	d007      	beq.n	8012d96 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012d86:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012d88:	4252      	negs	r2, r2
 8012d8a:	4293      	cmp	r3, r2
 8012d8c:	dc03      	bgt.n	8012d96 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012d8e:	2302      	movs	r3, #2
 8012d90:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012d94:	4770      	bx	lr
 8012d96:	2300      	movs	r3, #0
 8012d98:	e7fa      	b.n	8012d90 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012d9a:	d0fb      	beq.n	8012d94 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d9c:	b111      	cbz	r1, 8012da4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8012d9e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012da0:	4293      	cmp	r3, r2
 8012da2:	da01      	bge.n	8012da8 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8012da4:	2301      	movs	r3, #1
 8012da6:	e7f3      	b.n	8012d90 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012da8:	2303      	movs	r3, #3
 8012daa:	e7f1      	b.n	8012d90 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08012dac <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8012dac:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012db0:	2b04      	cmp	r3, #4
 8012db2:	d113      	bne.n	8012ddc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012db4:	790b      	ldrb	r3, [r1, #4]
 8012db6:	b98b      	cbnz	r3, 8012ddc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012db8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012dba:	8643      	strh	r3, [r0, #50]	; 0x32
 8012dbc:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8012dbe:	8683      	strh	r3, [r0, #52]	; 0x34
 8012dc0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012dc4:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8012dc8:	2b00      	cmp	r3, #0
 8012dca:	da08      	bge.n	8012dde <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8012dcc:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8012dd0:	3b01      	subs	r3, #1
 8012dd2:	429a      	cmp	r2, r3
 8012dd4:	da02      	bge.n	8012ddc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012dd6:	2302      	movs	r3, #2
 8012dd8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012ddc:	4770      	bx	lr
 8012dde:	d0fd      	beq.n	8012ddc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012de0:	2a00      	cmp	r2, #0
 8012de2:	d0fb      	beq.n	8012ddc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012de4:	2303      	movs	r3, #3
 8012de6:	e7f7      	b.n	8012dd8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08012de8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8012de8:	b538      	push	{r3, r4, r5, lr}
 8012dea:	2226      	movs	r2, #38	; 0x26
 8012dec:	4604      	mov	r4, r0
 8012dee:	460d      	mov	r5, r1
 8012df0:	2100      	movs	r1, #0
 8012df2:	f01a ffba 	bl	802dd6a <memset>
 8012df6:	4620      	mov	r0, r4
 8012df8:	f7ff fc58 	bl	80126ac <_ZN8touchgfx8DrawableC1Ev>
 8012dfc:	4b06      	ldr	r3, [pc, #24]	; (8012e18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8012dfe:	6023      	str	r3, [r4, #0]
 8012e00:	882b      	ldrh	r3, [r5, #0]
 8012e02:	84e3      	strh	r3, [r4, #38]	; 0x26
 8012e04:	23ff      	movs	r3, #255	; 0xff
 8012e06:	4620      	mov	r0, r4
 8012e08:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8012e0c:	4629      	mov	r1, r5
 8012e0e:	f003 f8d8 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012e12:	4620      	mov	r0, r4
 8012e14:	bd38      	pop	{r3, r4, r5, pc}
 8012e16:	bf00      	nop
 8012e18:	08031cbc 	.word	0x08031cbc

08012e1c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8012e1c:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012e1e:	4770      	bx	lr

08012e20 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8012e20:	b508      	push	{r3, lr}
 8012e22:	3068      	adds	r0, #104	; 0x68
 8012e24:	f7f0 fc28 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8012e28:	bd08      	pop	{r3, pc}

08012e2a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8012e2a:	b508      	push	{r3, lr}
 8012e2c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8012e2e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012e32:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012e36:	fb03 2111 	mls	r1, r3, r1, r2
 8012e3a:	b209      	sxth	r1, r1
 8012e3c:	2200      	movs	r2, #0
 8012e3e:	3038      	adds	r0, #56	; 0x38
 8012e40:	f7f0 f9a3 	bl	800318a <_ZN8touchgfx8Drawable6moveToEss>
 8012e44:	bd08      	pop	{r3, pc}

08012e46 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8012e46:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012e4a:	2b04      	cmp	r3, #4
 8012e4c:	d119      	bne.n	8012e82 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8012e4e:	88ca      	ldrh	r2, [r1, #6]
 8012e50:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012e52:	1a9b      	subs	r3, r3, r2
 8012e54:	894a      	ldrh	r2, [r1, #10]
 8012e56:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012e5a:	4413      	add	r3, r2
 8012e5c:	b21b      	sxth	r3, r3
 8012e5e:	8603      	strh	r3, [r0, #48]	; 0x30
 8012e60:	b921      	cbnz	r1, 8012e6c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012e62:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012e64:	4293      	cmp	r3, r2
 8012e66:	dd01      	ble.n	8012e6c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012e68:	8602      	strh	r2, [r0, #48]	; 0x30
 8012e6a:	e008      	b.n	8012e7e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012e6c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012e70:	3a01      	subs	r2, #1
 8012e72:	4291      	cmp	r1, r2
 8012e74:	d103      	bne.n	8012e7e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012e76:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012e78:	4252      	negs	r2, r2
 8012e7a:	4293      	cmp	r3, r2
 8012e7c:	dbf4      	blt.n	8012e68 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8012e7e:	f7ff bfd4 	b.w	8012e2a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012e82:	4770      	bx	lr

08012e84 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8012e84:	b538      	push	{r3, r4, r5, lr}
 8012e86:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012e8a:	2d0e      	cmp	r5, #14
 8012e8c:	4604      	mov	r4, r0
 8012e8e:	d813      	bhi.n	8012eb8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8012e90:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8012e92:	4252      	negs	r2, r2
 8012e94:	230e      	movs	r3, #14
 8012e96:	b212      	sxth	r2, r2
 8012e98:	2100      	movs	r1, #0
 8012e9a:	4628      	mov	r0, r5
 8012e9c:	f007 fbc2 	bl	801a624 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012ea0:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012ea2:	4418      	add	r0, r3
 8012ea4:	8620      	strh	r0, [r4, #48]	; 0x30
 8012ea6:	4620      	mov	r0, r4
 8012ea8:	f7ff ffbf 	bl	8012e2a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012eac:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012eb0:	3301      	adds	r3, #1
 8012eb2:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012eb6:	bd38      	pop	{r3, r4, r5, pc}
 8012eb8:	2304      	movs	r3, #4
 8012eba:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012ebe:	2300      	movs	r3, #0
 8012ec0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012ec4:	8603      	strh	r3, [r0, #48]	; 0x30
 8012ec6:	e7ef      	b.n	8012ea8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08012ec8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8012ec8:	b538      	push	{r3, r4, r5, lr}
 8012eca:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012ece:	2d0e      	cmp	r5, #14
 8012ed0:	4604      	mov	r4, r0
 8012ed2:	d812      	bhi.n	8012efa <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8012ed4:	230e      	movs	r3, #14
 8012ed6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8012eda:	2100      	movs	r1, #0
 8012edc:	4628      	mov	r0, r5
 8012ede:	f007 fba1 	bl	801a624 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012ee2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012ee4:	1a18      	subs	r0, r3, r0
 8012ee6:	8620      	strh	r0, [r4, #48]	; 0x30
 8012ee8:	4620      	mov	r0, r4
 8012eea:	f7ff ff9e 	bl	8012e2a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012eee:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012ef2:	3301      	adds	r3, #1
 8012ef4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012ef8:	bd38      	pop	{r3, r4, r5, pc}
 8012efa:	2304      	movs	r3, #4
 8012efc:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012f00:	2300      	movs	r3, #0
 8012f02:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012f06:	8603      	strh	r3, [r0, #48]	; 0x30
 8012f08:	e7ef      	b.n	8012eea <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08012f0c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8012f0c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012f10:	4604      	mov	r4, r0
 8012f12:	4626      	mov	r6, r4
 8012f14:	af02      	add	r7, sp, #8
 8012f16:	f7ff fbc9 	bl	80126ac <_ZN8touchgfx8DrawableC1Ev>
 8012f1a:	2500      	movs	r5, #0
 8012f1c:	4b18      	ldr	r3, [pc, #96]	; (8012f80 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8012f1e:	62a5      	str	r5, [r4, #40]	; 0x28
 8012f20:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8012f24:	f846 3b2c 	str.w	r3, [r6], #44
 8012f28:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8012f2c:	4630      	mov	r0, r6
 8012f2e:	4639      	mov	r1, r7
 8012f30:	f7ff ff5a 	bl	8012de8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012f34:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8012f38:	4b12      	ldr	r3, [pc, #72]	; (8012f84 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8012f3a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012f3c:	4639      	mov	r1, r7
 8012f3e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8012f42:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8012f46:	4640      	mov	r0, r8
 8012f48:	f8ad 9004 	strh.w	r9, [sp, #4]
 8012f4c:	f7ff ff4c 	bl	8012de8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012f50:	462a      	mov	r2, r5
 8012f52:	4629      	mov	r1, r5
 8012f54:	4630      	mov	r0, r6
 8012f56:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 8012f5a:	f7f0 fb8d 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8012f5e:	462a      	mov	r2, r5
 8012f60:	4629      	mov	r1, r5
 8012f62:	4640      	mov	r0, r8
 8012f64:	f7f0 fb88 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8012f68:	4631      	mov	r1, r6
 8012f6a:	4620      	mov	r0, r4
 8012f6c:	f7ff fc50 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f70:	4620      	mov	r0, r4
 8012f72:	4641      	mov	r1, r8
 8012f74:	f7ff fc4c 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f78:	4620      	mov	r0, r4
 8012f7a:	b003      	add	sp, #12
 8012f7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f80:	0802f524 	.word	0x0802f524
 8012f84:	08031ad8 	.word	0x08031ad8

08012f88 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8012f88:	b570      	push	{r4, r5, r6, lr}
 8012f8a:	4604      	mov	r4, r0
 8012f8c:	f7ff fb8e 	bl	80126ac <_ZN8touchgfx8DrawableC1Ev>
 8012f90:	4b1a      	ldr	r3, [pc, #104]	; (8012ffc <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8012f92:	6023      	str	r3, [r4, #0]
 8012f94:	2304      	movs	r3, #4
 8012f96:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8012f9a:	2350      	movs	r3, #80	; 0x50
 8012f9c:	2500      	movs	r5, #0
 8012f9e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8012fa0:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8012fa4:	231e      	movs	r3, #30
 8012fa6:	62a5      	str	r5, [r4, #40]	; 0x28
 8012fa8:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 8012fac:	8625      	strh	r5, [r4, #48]	; 0x30
 8012fae:	8665      	strh	r5, [r4, #50]	; 0x32
 8012fb0:	86a5      	strh	r5, [r4, #52]	; 0x34
 8012fb2:	86e3      	strh	r3, [r4, #54]	; 0x36
 8012fb4:	4630      	mov	r0, r6
 8012fb6:	f7ff fb79 	bl	80126ac <_ZN8touchgfx8DrawableC1Ev>
 8012fba:	4b11      	ldr	r3, [pc, #68]	; (8013000 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 8012fbc:	6625      	str	r5, [r4, #96]	; 0x60
 8012fbe:	63a3      	str	r3, [r4, #56]	; 0x38
 8012fc0:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8012fc4:	2302      	movs	r3, #2
 8012fc6:	f104 0568 	add.w	r5, r4, #104	; 0x68
 8012fca:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8012fce:	4628      	mov	r0, r5
 8012fd0:	f7ff ff9c 	bl	8012f0c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8012fd4:	f005 fcf4 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 8012fd8:	4621      	mov	r1, r4
 8012fda:	3004      	adds	r0, #4
 8012fdc:	f005 fde6 	bl	8018bac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8012fe0:	2301      	movs	r3, #1
 8012fe2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8012fe6:	4631      	mov	r1, r6
 8012fe8:	4620      	mov	r0, r4
 8012fea:	f7ff fc11 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012fee:	4620      	mov	r0, r4
 8012ff0:	4629      	mov	r1, r5
 8012ff2:	f7ff fc0d 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012ff6:	4620      	mov	r0, r4
 8012ff8:	bd70      	pop	{r4, r5, r6, pc}
 8012ffa:	bf00      	nop
 8012ffc:	08031618 	.word	0x08031618
 8013000:	080316dc 	.word	0x080316dc

08013004 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8013004:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013006:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 801300a:	428b      	cmp	r3, r1
 801300c:	4604      	mov	r4, r0
 801300e:	460d      	mov	r5, r1
 8013010:	d915      	bls.n	801303e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8013012:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8013016:	428b      	cmp	r3, r1
 8013018:	d011      	beq.n	801303e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 801301a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 801301e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013022:	a802      	add	r0, sp, #8
 8013024:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8013028:	f009 f91a 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801302c:	fb15 f100 	smulbb	r1, r5, r0
 8013030:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8013034:	b209      	sxth	r1, r1
 8013036:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801303a:	f7f0 f8a6 	bl	800318a <_ZN8touchgfx8Drawable6moveToEss>
 801303e:	b003      	add	sp, #12
 8013040:	bd30      	pop	{r4, r5, pc}

08013042 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8013042:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013044:	4604      	mov	r4, r0
 8013046:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801304a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 801304e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013052:	4293      	cmp	r3, r2
 8013054:	460d      	mov	r5, r1
 8013056:	d01e      	beq.n	8013096 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8013058:	a802      	add	r0, sp, #8
 801305a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801305e:	f009 f8ff 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013062:	6823      	ldr	r3, [r4, #0]
 8013064:	fb15 f000 	smulbb	r0, r5, r0
 8013068:	86a0      	strh	r0, [r4, #52]	; 0x34
 801306a:	695b      	ldr	r3, [r3, #20]
 801306c:	4620      	mov	r0, r4
 801306e:	4798      	blx	r3
 8013070:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8013074:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8013078:	4620      	mov	r0, r4
 801307a:	f7ff fb2f 	bl	80126dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801307e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8013082:	42a9      	cmp	r1, r5
 8013084:	4620      	mov	r0, r4
 8013086:	bf28      	it	cs
 8013088:	4629      	movcs	r1, r5
 801308a:	f7ff ffbb 	bl	8013004 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801308e:	6823      	ldr	r3, [r4, #0]
 8013090:	4620      	mov	r0, r4
 8013092:	695b      	ldr	r3, [r3, #20]
 8013094:	4798      	blx	r3
 8013096:	b003      	add	sp, #12
 8013098:	bd30      	pop	{r4, r5, pc}

0801309a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801309a:	b538      	push	{r3, r4, r5, lr}
 801309c:	4604      	mov	r4, r0
 801309e:	460d      	mov	r5, r1
 80130a0:	305c      	adds	r0, #92	; 0x5c
 80130a2:	4611      	mov	r1, r2
 80130a4:	f002 ff8d 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80130a8:	4629      	mov	r1, r5
 80130aa:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80130ae:	f002 fa53 	bl	8015558 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 80130b2:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 80130b6:	b121      	cbz	r1, 80130c2 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 80130b8:	4620      	mov	r0, r4
 80130ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80130be:	f7ff bfc0 	b.w	8013042 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80130c2:	bd38      	pop	{r3, r4, r5, pc}

080130c4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 80130c4:	3068      	adds	r0, #104	; 0x68
 80130c6:	f7ff bfe8 	b.w	801309a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

080130ca <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 80130ca:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80130ce:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80130d2:	3101      	adds	r1, #1
 80130d4:	fb91 f3f2 	sdiv	r3, r1, r2
 80130d8:	fb02 1113 	mls	r1, r2, r3, r1
 80130dc:	b2c9      	uxtb	r1, r1
 80130de:	f7ff bf91 	b.w	8013004 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080130e2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 80130e2:	b510      	push	{r4, lr}
 80130e4:	4604      	mov	r4, r0
 80130e6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80130ea:	280a      	cmp	r0, #10
 80130ec:	d813      	bhi.n	8013116 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 80130ee:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80130f0:	8922      	ldrh	r2, [r4, #8]
 80130f2:	441a      	add	r2, r3
 80130f4:	b212      	sxth	r2, r2
 80130f6:	230a      	movs	r3, #10
 80130f8:	2100      	movs	r1, #0
 80130fa:	f007 fad1 	bl	801a6a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80130fe:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013100:	1a18      	subs	r0, r3, r0
 8013102:	8620      	strh	r0, [r4, #48]	; 0x30
 8013104:	4620      	mov	r0, r4
 8013106:	f7ff fe90 	bl	8012e2a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801310a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 801310e:	3301      	adds	r3, #1
 8013110:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013114:	bd10      	pop	{r4, pc}
 8013116:	2304      	movs	r3, #4
 8013118:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801311c:	2300      	movs	r3, #0
 801311e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013122:	8623      	strh	r3, [r4, #48]	; 0x30
 8013124:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8013128:	f7ff ffcf 	bl	80130ca <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 801312c:	e7ea      	b.n	8013104 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

0801312e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 801312e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8013132:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8013136:	4411      	add	r1, r2
 8013138:	3901      	subs	r1, #1
 801313a:	fb91 f3f2 	sdiv	r3, r1, r2
 801313e:	fb02 1113 	mls	r1, r2, r3, r1
 8013142:	b2c9      	uxtb	r1, r1
 8013144:	f7ff bf5e 	b.w	8013004 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08013148 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8013148:	b510      	push	{r4, lr}
 801314a:	4604      	mov	r4, r0
 801314c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8013150:	280a      	cmp	r0, #10
 8013152:	d813      	bhi.n	801317c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8013154:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013156:	8922      	ldrh	r2, [r4, #8]
 8013158:	1ad2      	subs	r2, r2, r3
 801315a:	b212      	sxth	r2, r2
 801315c:	230a      	movs	r3, #10
 801315e:	2100      	movs	r1, #0
 8013160:	f007 fa9e 	bl	801a6a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8013164:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013166:	4418      	add	r0, r3
 8013168:	8620      	strh	r0, [r4, #48]	; 0x30
 801316a:	4620      	mov	r0, r4
 801316c:	f7ff fe5d 	bl	8012e2a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8013170:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8013174:	3301      	adds	r3, #1
 8013176:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801317a:	bd10      	pop	{r4, pc}
 801317c:	2304      	movs	r3, #4
 801317e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8013182:	2300      	movs	r3, #0
 8013184:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013188:	8623      	strh	r3, [r4, #48]	; 0x30
 801318a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801318e:	f7ff ffce 	bl	801312e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8013192:	e7ea      	b.n	801316a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08013194 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8013194:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013198:	b90b      	cbnz	r3, 801319e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801319a:	f7ff be73 	b.w	8012e84 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801319e:	2b01      	cmp	r3, #1
 80131a0:	d101      	bne.n	80131a6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 80131a2:	f7ff be91 	b.w	8012ec8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 80131a6:	2b02      	cmp	r3, #2
 80131a8:	d101      	bne.n	80131ae <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 80131aa:	f7ff bf9a 	b.w	80130e2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 80131ae:	2b03      	cmp	r3, #3
 80131b0:	d101      	bne.n	80131b6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 80131b2:	f7ff bfc9 	b.w	8013148 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 80131b6:	4770      	bx	lr

080131b8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 80131b8:	b510      	push	{r4, lr}
 80131ba:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80131be:	428b      	cmp	r3, r1
 80131c0:	4604      	mov	r4, r0
 80131c2:	d907      	bls.n	80131d4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 80131c4:	3068      	adds	r0, #104	; 0x68
 80131c6:	f7ff ff1d 	bl	8013004 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 80131ca:	4620      	mov	r0, r4
 80131cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131d0:	f7ff be2b 	b.w	8012e2a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80131d4:	bd10      	pop	{r4, pc}

080131d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 80131d6:	b538      	push	{r3, r4, r5, lr}
 80131d8:	4604      	mov	r4, r0
 80131da:	3038      	adds	r0, #56	; 0x38
 80131dc:	460d      	mov	r5, r1
 80131de:	f000 f963 	bl	80134a8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80131e2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80131e6:	3101      	adds	r1, #1
 80131e8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80131ec:	b2c9      	uxtb	r1, r1
 80131ee:	f7ff ff28 	bl	8013042 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80131f2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80131f6:	4620      	mov	r0, r4
 80131f8:	f7ff ffde 	bl	80131b8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80131fc:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8013200:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8013204:	4620      	mov	r0, r4
 8013206:	f7ff fa69 	bl	80126dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801320a:	bd38      	pop	{r3, r4, r5, pc}

0801320c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 801320c:	b538      	push	{r3, r4, r5, lr}
 801320e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8013212:	4604      	mov	r4, r0
 8013214:	b1e3      	cbz	r3, 8013250 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8013216:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8013218:	b1d3      	cbz	r3, 8013250 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801321a:	428b      	cmp	r3, r1
 801321c:	d125      	bne.n	801326a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801321e:	4619      	mov	r1, r3
 8013220:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8013224:	f000 f9c0 	bl	80135a8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8013228:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801322c:	3901      	subs	r1, #1
 801322e:	b2c9      	uxtb	r1, r1
 8013230:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8013234:	f7ff ff05 	bl	8013042 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013238:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801323c:	b94d      	cbnz	r5, 8013252 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801323e:	6823      	ldr	r3, [r4, #0]
 8013240:	4620      	mov	r0, r4
 8013242:	695b      	ldr	r3, [r3, #20]
 8013244:	4798      	blx	r3
 8013246:	462a      	mov	r2, r5
 8013248:	4629      	mov	r1, r5
 801324a:	4620      	mov	r0, r4
 801324c:	f7ff fa46 	bl	80126dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013250:	bd38      	pop	{r3, r4, r5, pc}
 8013252:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8013256:	3d01      	subs	r5, #1
 8013258:	42a9      	cmp	r1, r5
 801325a:	bfa8      	it	ge
 801325c:	4629      	movge	r1, r5
 801325e:	4620      	mov	r0, r4
 8013260:	b2c9      	uxtb	r1, r1
 8013262:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013266:	f7ff bfa7 	b.w	80131b8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801326a:	699b      	ldr	r3, [r3, #24]
 801326c:	e7d4      	b.n	8013218 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801326e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801326e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013272:	4770      	bx	lr

08013274 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8013274:	b538      	push	{r3, r4, r5, lr}
 8013276:	7882      	ldrb	r2, [r0, #2]
 8013278:	6843      	ldr	r3, [r0, #4]
 801327a:	4604      	mov	r4, r0
 801327c:	460d      	mov	r5, r1
 801327e:	b98a      	cbnz	r2, 80132a4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8013280:	4299      	cmp	r1, r3
 8013282:	d101      	bne.n	8013288 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013284:	2301      	movs	r3, #1
 8013286:	7083      	strb	r3, [r0, #2]
 8013288:	6863      	ldr	r3, [r4, #4]
 801328a:	42ab      	cmp	r3, r5
 801328c:	d009      	beq.n	80132a2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801328e:	7a23      	ldrb	r3, [r4, #8]
 8013290:	2b01      	cmp	r3, #1
 8013292:	d11b      	bne.n	80132cc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8013294:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013298:	f9b4 2000 	ldrsh.w	r2, [r4]
 801329c:	429a      	cmp	r2, r3
 801329e:	bfb8      	it	lt
 80132a0:	8023      	strhlt	r3, [r4, #0]
 80132a2:	bd38      	pop	{r3, r4, r5, pc}
 80132a4:	7a02      	ldrb	r2, [r0, #8]
 80132a6:	2a01      	cmp	r2, #1
 80132a8:	d108      	bne.n	80132bc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 80132aa:	895b      	ldrh	r3, [r3, #10]
 80132ac:	88c9      	ldrh	r1, [r1, #6]
 80132ae:	1ac9      	subs	r1, r1, r3
 80132b0:	682b      	ldr	r3, [r5, #0]
 80132b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80132b4:	b209      	sxth	r1, r1
 80132b6:	4628      	mov	r0, r5
 80132b8:	4798      	blx	r3
 80132ba:	e7e5      	b.n	8013288 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80132bc:	2a02      	cmp	r2, #2
 80132be:	d1e3      	bne.n	8013288 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80132c0:	891b      	ldrh	r3, [r3, #8]
 80132c2:	8889      	ldrh	r1, [r1, #4]
 80132c4:	1ac9      	subs	r1, r1, r3
 80132c6:	682b      	ldr	r3, [r5, #0]
 80132c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80132ca:	e7f3      	b.n	80132b4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 80132cc:	2b02      	cmp	r3, #2
 80132ce:	d1e8      	bne.n	80132a2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80132d0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80132d4:	e7e0      	b.n	8013298 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080132d6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80132d6:	4770      	bx	lr

080132d8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80132d8:	4770      	bx	lr

080132da <_ZN8touchgfx10ListLayoutD1Ev>:
 80132da:	4770      	bx	lr

080132dc <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80132dc:	b430      	push	{r4, r5}
 80132de:	68c5      	ldr	r5, [r0, #12]
 80132e0:	6844      	ldr	r4, [r0, #4]
 80132e2:	106a      	asrs	r2, r5, #1
 80132e4:	4603      	mov	r3, r0
 80132e6:	07ed      	lsls	r5, r5, #31
 80132e8:	eb04 0002 	add.w	r0, r4, r2
 80132ec:	689b      	ldr	r3, [r3, #8]
 80132ee:	bf48      	it	mi
 80132f0:	58a2      	ldrmi	r2, [r4, r2]
 80132f2:	bc30      	pop	{r4, r5}
 80132f4:	bf48      	it	mi
 80132f6:	58d3      	ldrmi	r3, [r2, r3]
 80132f8:	4718      	bx	r3

080132fa <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80132fa:	6843      	ldr	r3, [r0, #4]
 80132fc:	b12b      	cbz	r3, 801330a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80132fe:	6883      	ldr	r3, [r0, #8]
 8013300:	b92b      	cbnz	r3, 801330e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8013302:	68c0      	ldr	r0, [r0, #12]
 8013304:	f000 0001 	and.w	r0, r0, #1
 8013308:	4770      	bx	lr
 801330a:	4618      	mov	r0, r3
 801330c:	4770      	bx	lr
 801330e:	2001      	movs	r0, #1
 8013310:	4770      	bx	lr

08013312 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8013312:	b430      	push	{r4, r5}
 8013314:	68c5      	ldr	r5, [r0, #12]
 8013316:	6844      	ldr	r4, [r0, #4]
 8013318:	106a      	asrs	r2, r5, #1
 801331a:	4603      	mov	r3, r0
 801331c:	07ed      	lsls	r5, r5, #31
 801331e:	eb04 0002 	add.w	r0, r4, r2
 8013322:	689b      	ldr	r3, [r3, #8]
 8013324:	bf48      	it	mi
 8013326:	58a2      	ldrmi	r2, [r4, r2]
 8013328:	bc30      	pop	{r4, r5}
 801332a:	bf48      	it	mi
 801332c:	58d3      	ldrmi	r3, [r2, r3]
 801332e:	4718      	bx	r3

08013330 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8013330:	6843      	ldr	r3, [r0, #4]
 8013332:	b12b      	cbz	r3, 8013340 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8013334:	6883      	ldr	r3, [r0, #8]
 8013336:	b92b      	cbnz	r3, 8013344 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8013338:	68c0      	ldr	r0, [r0, #12]
 801333a:	f000 0001 	and.w	r0, r0, #1
 801333e:	4770      	bx	lr
 8013340:	4618      	mov	r0, r3
 8013342:	4770      	bx	lr
 8013344:	2001      	movs	r0, #1
 8013346:	4770      	bx	lr

08013348 <_ZN8touchgfx10ListLayoutD0Ev>:
 8013348:	b510      	push	{r4, lr}
 801334a:	2130      	movs	r1, #48	; 0x30
 801334c:	4604      	mov	r4, r0
 801334e:	f019 fc20 	bl	802cb92 <_ZdlPvj>
 8013352:	4620      	mov	r0, r4
 8013354:	bd10      	pop	{r4, pc}

08013356 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8013356:	b510      	push	{r4, lr}
 8013358:	2110      	movs	r1, #16
 801335a:	4604      	mov	r4, r0
 801335c:	f019 fc19 	bl	802cb92 <_ZdlPvj>
 8013360:	4620      	mov	r0, r4
 8013362:	bd10      	pop	{r4, pc}

08013364 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8013364:	b510      	push	{r4, lr}
 8013366:	2110      	movs	r1, #16
 8013368:	4604      	mov	r4, r0
 801336a:	f019 fc12 	bl	802cb92 <_ZdlPvj>
 801336e:	4620      	mov	r0, r4
 8013370:	bd10      	pop	{r4, pc}

08013372 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8013372:	4603      	mov	r3, r0
 8013374:	4608      	mov	r0, r1
 8013376:	789a      	ldrb	r2, [r3, #2]
 8013378:	b992      	cbnz	r2, 80133a0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801337a:	685a      	ldr	r2, [r3, #4]
 801337c:	428a      	cmp	r2, r1
 801337e:	d102      	bne.n	8013386 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8013380:	2201      	movs	r2, #1
 8013382:	709a      	strb	r2, [r3, #2]
 8013384:	4770      	bx	lr
 8013386:	7a1a      	ldrb	r2, [r3, #8]
 8013388:	2a01      	cmp	r2, #1
 801338a:	d104      	bne.n	8013396 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801338c:	88ca      	ldrh	r2, [r1, #6]
 801338e:	8949      	ldrh	r1, [r1, #10]
 8013390:	440a      	add	r2, r1
 8013392:	801a      	strh	r2, [r3, #0]
 8013394:	4770      	bx	lr
 8013396:	2a02      	cmp	r2, #2
 8013398:	d116      	bne.n	80133c8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801339a:	888a      	ldrh	r2, [r1, #4]
 801339c:	8909      	ldrh	r1, [r1, #8]
 801339e:	e7f7      	b.n	8013390 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 80133a0:	7a1a      	ldrb	r2, [r3, #8]
 80133a2:	2a01      	cmp	r2, #1
 80133a4:	d107      	bne.n	80133b6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 80133a6:	685b      	ldr	r3, [r3, #4]
 80133a8:	8959      	ldrh	r1, [r3, #10]
 80133aa:	88c3      	ldrh	r3, [r0, #6]
 80133ac:	4419      	add	r1, r3
 80133ae:	6803      	ldr	r3, [r0, #0]
 80133b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80133b2:	b209      	sxth	r1, r1
 80133b4:	4718      	bx	r3
 80133b6:	2a02      	cmp	r2, #2
 80133b8:	d106      	bne.n	80133c8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80133ba:	685b      	ldr	r3, [r3, #4]
 80133bc:	8919      	ldrh	r1, [r3, #8]
 80133be:	8883      	ldrh	r3, [r0, #4]
 80133c0:	4419      	add	r1, r3
 80133c2:	6803      	ldr	r3, [r0, #0]
 80133c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80133c6:	e7f4      	b.n	80133b2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 80133c8:	4770      	bx	lr

080133ca <_ZN8touchgfx10ListLayout9removeAllEv>:
 80133ca:	2200      	movs	r2, #0
 80133cc:	b510      	push	{r4, lr}
 80133ce:	4611      	mov	r1, r2
 80133d0:	4604      	mov	r4, r0
 80133d2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 80133d4:	f7ff f982 	bl	80126dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80133d8:	4620      	mov	r0, r4
 80133da:	f7ff fa26 	bl	801282a <_ZN8touchgfx9Container9removeAllEv>
 80133de:	6960      	ldr	r0, [r4, #20]
 80133e0:	b120      	cbz	r0, 80133ec <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80133e2:	6803      	ldr	r3, [r0, #0]
 80133e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80133e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80133ea:	4718      	bx	r3
 80133ec:	bd10      	pop	{r4, pc}
	...

080133f0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 80133f0:	b530      	push	{r4, r5, lr}
 80133f2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80133f6:	428b      	cmp	r3, r1
 80133f8:	b085      	sub	sp, #20
 80133fa:	4604      	mov	r4, r0
 80133fc:	d017      	beq.n	801342e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80133fe:	2500      	movs	r5, #0
 8013400:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8013404:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8013406:	462a      	mov	r2, r5
 8013408:	4629      	mov	r1, r5
 801340a:	f7ff f967 	bl	80126dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801340e:	4b09      	ldr	r3, [pc, #36]	; (8013434 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8013410:	e9cd 3400 	strd	r3, r4, [sp]
 8013414:	4b08      	ldr	r3, [pc, #32]	; (8013438 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8013416:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801341a:	6823      	ldr	r3, [r4, #0]
 801341c:	4620      	mov	r0, r4
 801341e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013420:	4669      	mov	r1, sp
 8013422:	4798      	blx	r3
 8013424:	6960      	ldr	r0, [r4, #20]
 8013426:	b110      	cbz	r0, 801342e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8013428:	6803      	ldr	r3, [r0, #0]
 801342a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801342c:	4798      	blx	r3
 801342e:	b005      	add	sp, #20
 8013430:	bd30      	pop	{r4, r5, pc}
 8013432:	bf00      	nop
 8013434:	080316ac 	.word	0x080316ac
 8013438:	080134a1 	.word	0x080134a1

0801343c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801343c:	b538      	push	{r3, r4, r5, lr}
 801343e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013442:	2b01      	cmp	r3, #1
 8013444:	460d      	mov	r5, r1
 8013446:	4604      	mov	r4, r0
 8013448:	4611      	mov	r1, r2
 801344a:	d002      	beq.n	8013452 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801344c:	2b02      	cmp	r3, #2
 801344e:	d015      	beq.n	801347c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8013450:	bd38      	pop	{r3, r4, r5, pc}
 8013452:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013456:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801345a:	429a      	cmp	r2, r3
 801345c:	bfb8      	it	lt
 801345e:	8103      	strhlt	r3, [r0, #8]
 8013460:	896a      	ldrh	r2, [r5, #10]
 8013462:	8943      	ldrh	r3, [r0, #10]
 8013464:	4413      	add	r3, r2
 8013466:	8143      	strh	r3, [r0, #10]
 8013468:	460a      	mov	r2, r1
 801346a:	4628      	mov	r0, r5
 801346c:	2100      	movs	r1, #0
 801346e:	f7f0 f903 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8013472:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013474:	896a      	ldrh	r2, [r5, #10]
 8013476:	4413      	add	r3, r2
 8013478:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801347a:	e7e9      	b.n	8013450 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801347c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013480:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013484:	429a      	cmp	r2, r3
 8013486:	bfb8      	it	lt
 8013488:	8143      	strhlt	r3, [r0, #10]
 801348a:	892a      	ldrh	r2, [r5, #8]
 801348c:	8903      	ldrh	r3, [r0, #8]
 801348e:	4413      	add	r3, r2
 8013490:	8103      	strh	r3, [r0, #8]
 8013492:	2200      	movs	r2, #0
 8013494:	4628      	mov	r0, r5
 8013496:	f7f0 f8ef 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 801349a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801349c:	892a      	ldrh	r2, [r5, #8]
 801349e:	e7ea      	b.n	8013476 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

080134a0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 80134a0:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 80134a4:	f7ff bfca 	b.w	801343c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

080134a8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 80134a8:	b570      	push	{r4, r5, r6, lr}
 80134aa:	4604      	mov	r4, r0
 80134ac:	460d      	mov	r5, r1
 80134ae:	f7ff fff7 	bl	80134a0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 80134b2:	4620      	mov	r0, r4
 80134b4:	4629      	mov	r1, r5
 80134b6:	f7ff f9ab 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80134ba:	6960      	ldr	r0, [r4, #20]
 80134bc:	b120      	cbz	r0, 80134c8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 80134be:	6803      	ldr	r3, [r0, #0]
 80134c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80134c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80134c6:	4718      	bx	r3
 80134c8:	bd70      	pop	{r4, r5, r6, pc}
	...

080134cc <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 80134cc:	b530      	push	{r4, r5, lr}
 80134ce:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80134d0:	b089      	sub	sp, #36	; 0x24
 80134d2:	4604      	mov	r4, r0
 80134d4:	4615      	mov	r5, r2
 80134d6:	b92b      	cbnz	r3, 80134e4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80134d8:	6803      	ldr	r3, [r0, #0]
 80134da:	4611      	mov	r1, r2
 80134dc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80134de:	4798      	blx	r3
 80134e0:	b009      	add	sp, #36	; 0x24
 80134e2:	bd30      	pop	{r4, r5, pc}
 80134e4:	f7ff f9ec 	bl	80128c0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80134e8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80134ec:	f88d 200c 	strb.w	r2, [sp, #12]
 80134f0:	4a0f      	ldr	r2, [pc, #60]	; (8013530 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 80134f2:	9204      	str	r2, [sp, #16]
 80134f4:	aa01      	add	r2, sp, #4
 80134f6:	9205      	str	r2, [sp, #20]
 80134f8:	4a0e      	ldr	r2, [pc, #56]	; (8013534 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 80134fa:	9502      	str	r5, [sp, #8]
 80134fc:	2300      	movs	r3, #0
 80134fe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8013502:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013506:	f88d 3006 	strb.w	r3, [sp, #6]
 801350a:	6823      	ldr	r3, [r4, #0]
 801350c:	a904      	add	r1, sp, #16
 801350e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013510:	4620      	mov	r0, r4
 8013512:	4798      	blx	r3
 8013514:	4620      	mov	r0, r4
 8013516:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801351a:	4629      	mov	r1, r5
 801351c:	f7ff ff8e 	bl	801343c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8013520:	6960      	ldr	r0, [r4, #20]
 8013522:	2800      	cmp	r0, #0
 8013524:	d0dc      	beq.n	80134e0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8013526:	6803      	ldr	r3, [r0, #0]
 8013528:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801352a:	4798      	blx	r3
 801352c:	e7d8      	b.n	80134e0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801352e:	bf00      	nop
 8013530:	080316c4 	.word	0x080316c4
 8013534:	08013373 	.word	0x08013373

08013538 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8013538:	b538      	push	{r3, r4, r5, lr}
 801353a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801353e:	2b01      	cmp	r3, #1
 8013540:	4604      	mov	r4, r0
 8013542:	460d      	mov	r5, r1
 8013544:	d002      	beq.n	801354c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8013546:	2b02      	cmp	r3, #2
 8013548:	d018      	beq.n	801357c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801354a:	bd38      	pop	{r3, r4, r5, pc}
 801354c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013550:	4293      	cmp	r3, r2
 8013552:	bfc8      	it	gt
 8013554:	8102      	strhgt	r2, [r0, #8]
 8013556:	894a      	ldrh	r2, [r1, #10]
 8013558:	8943      	ldrh	r3, [r0, #10]
 801355a:	1a9b      	subs	r3, r3, r2
 801355c:	8143      	strh	r3, [r0, #10]
 801355e:	680b      	ldr	r3, [r1, #0]
 8013560:	4628      	mov	r0, r5
 8013562:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013564:	2100      	movs	r1, #0
 8013566:	4798      	blx	r3
 8013568:	682b      	ldr	r3, [r5, #0]
 801356a:	2100      	movs	r1, #0
 801356c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801356e:	4628      	mov	r0, r5
 8013570:	4798      	blx	r3
 8013572:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013574:	896a      	ldrh	r2, [r5, #10]
 8013576:	1a9b      	subs	r3, r3, r2
 8013578:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801357a:	e7e6      	b.n	801354a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801357c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013580:	4293      	cmp	r3, r2
 8013582:	bfc8      	it	gt
 8013584:	8142      	strhgt	r2, [r0, #10]
 8013586:	890a      	ldrh	r2, [r1, #8]
 8013588:	8903      	ldrh	r3, [r0, #8]
 801358a:	1a9b      	subs	r3, r3, r2
 801358c:	8103      	strh	r3, [r0, #8]
 801358e:	680b      	ldr	r3, [r1, #0]
 8013590:	4628      	mov	r0, r5
 8013592:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013594:	2100      	movs	r1, #0
 8013596:	4798      	blx	r3
 8013598:	682b      	ldr	r3, [r5, #0]
 801359a:	2100      	movs	r1, #0
 801359c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801359e:	4628      	mov	r0, r5
 80135a0:	4798      	blx	r3
 80135a2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80135a4:	892a      	ldrh	r2, [r5, #8]
 80135a6:	e7e6      	b.n	8013576 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

080135a8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 80135a8:	b530      	push	{r4, r5, lr}
 80135aa:	b089      	sub	sp, #36	; 0x24
 80135ac:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80135b0:	f88d 200c 	strb.w	r2, [sp, #12]
 80135b4:	4a13      	ldr	r2, [pc, #76]	; (8013604 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 80135b6:	9204      	str	r2, [sp, #16]
 80135b8:	aa01      	add	r2, sp, #4
 80135ba:	9205      	str	r2, [sp, #20]
 80135bc:	4a12      	ldr	r2, [pc, #72]	; (8013608 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 80135be:	9102      	str	r1, [sp, #8]
 80135c0:	2300      	movs	r3, #0
 80135c2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80135c6:	f88d 3006 	strb.w	r3, [sp, #6]
 80135ca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80135ce:	6803      	ldr	r3, [r0, #0]
 80135d0:	460d      	mov	r5, r1
 80135d2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80135d4:	a904      	add	r1, sp, #16
 80135d6:	4604      	mov	r4, r0
 80135d8:	4798      	blx	r3
 80135da:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80135de:	b14b      	cbz	r3, 80135f4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80135e0:	4629      	mov	r1, r5
 80135e2:	4620      	mov	r0, r4
 80135e4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80135e8:	f7ff ffa6 	bl	8013538 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80135ec:	4629      	mov	r1, r5
 80135ee:	4620      	mov	r0, r4
 80135f0:	f7ff f94f 	bl	8012892 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80135f4:	6960      	ldr	r0, [r4, #20]
 80135f6:	b110      	cbz	r0, 80135fe <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80135f8:	6803      	ldr	r3, [r0, #0]
 80135fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80135fc:	4798      	blx	r3
 80135fe:	b009      	add	sp, #36	; 0x24
 8013600:	bd30      	pop	{r4, r5, pc}
 8013602:	bf00      	nop
 8013604:	080316c4 	.word	0x080316c4
 8013608:	08013275 	.word	0x08013275

0801360c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801360c:	b513      	push	{r0, r1, r4, lr}
 801360e:	6803      	ldr	r3, [r0, #0]
 8013610:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8013614:	2300      	movs	r3, #0
 8013616:	e9cd 3300 	strd	r3, r3, [sp]
 801361a:	466b      	mov	r3, sp
 801361c:	47a0      	blx	r4
 801361e:	b002      	add	sp, #8
 8013620:	bd10      	pop	{r4, pc}

08013622 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8013622:	2301      	movs	r3, #1
 8013624:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013628:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801362c:	4770      	bx	lr

0801362e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801362e:	2301      	movs	r3, #1
 8013630:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013634:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8013638:	4770      	bx	lr

0801363a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801363a:	6843      	ldr	r3, [r0, #4]
 801363c:	2201      	movs	r2, #1
 801363e:	725a      	strb	r2, [r3, #9]
 8013640:	6840      	ldr	r0, [r0, #4]
 8013642:	6803      	ldr	r3, [r0, #0]
 8013644:	691b      	ldr	r3, [r3, #16]
 8013646:	4718      	bx	r3

08013648 <_ZN8touchgfx3HAL8flushDMAEv>:
 8013648:	6840      	ldr	r0, [r0, #4]
 801364a:	6803      	ldr	r3, [r0, #0]
 801364c:	689b      	ldr	r3, [r3, #8]
 801364e:	4718      	bx	r3

08013650 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8013650:	b530      	push	{r4, r5, lr}
 8013652:	b08b      	sub	sp, #44	; 0x2c
 8013654:	6804      	ldr	r4, [r0, #0]
 8013656:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801365a:	9509      	str	r5, [sp, #36]	; 0x24
 801365c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8013660:	9508      	str	r5, [sp, #32]
 8013662:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8013666:	9507      	str	r5, [sp, #28]
 8013668:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801366c:	9506      	str	r5, [sp, #24]
 801366e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8013672:	9505      	str	r5, [sp, #20]
 8013674:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8013678:	9504      	str	r5, [sp, #16]
 801367a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801367e:	9503      	str	r5, [sp, #12]
 8013680:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8013684:	9502      	str	r5, [sp, #8]
 8013686:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801368a:	e9cd 3500 	strd	r3, r5, [sp]
 801368e:	4613      	mov	r3, r2
 8013690:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8013692:	2200      	movs	r2, #0
 8013694:	47a0      	blx	r4
 8013696:	b00b      	add	sp, #44	; 0x2c
 8013698:	bd30      	pop	{r4, r5, pc}
	...

0801369c <_ZN8touchgfx3HAL10beginFrameEv>:
 801369c:	4b04      	ldr	r3, [pc, #16]	; (80136b0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801369e:	781b      	ldrb	r3, [r3, #0]
 80136a0:	b123      	cbz	r3, 80136ac <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80136a2:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80136a6:	f080 0001 	eor.w	r0, r0, #1
 80136aa:	4770      	bx	lr
 80136ac:	2001      	movs	r0, #1
 80136ae:	4770      	bx	lr
 80136b0:	2001383a 	.word	0x2001383a

080136b4 <_ZN8touchgfx3HAL8endFrameEv>:
 80136b4:	b510      	push	{r4, lr}
 80136b6:	4604      	mov	r4, r0
 80136b8:	6840      	ldr	r0, [r0, #4]
 80136ba:	6803      	ldr	r3, [r0, #0]
 80136bc:	689b      	ldr	r3, [r3, #8]
 80136be:	4798      	blx	r3
 80136c0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80136c4:	b113      	cbz	r3, 80136cc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80136c6:	2301      	movs	r3, #1
 80136c8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80136cc:	bd10      	pop	{r4, pc}

080136ce <_ZN8touchgfx3HAL10initializeEv>:
 80136ce:	b510      	push	{r4, lr}
 80136d0:	4604      	mov	r4, r0
 80136d2:	f7ef fb37 	bl	8002d44 <_ZN8touchgfx10OSWrappers10initializeEv>
 80136d6:	f7ef fa43 	bl	8002b60 <_ZN8touchgfx4GPIO4initEv>
 80136da:	6860      	ldr	r0, [r4, #4]
 80136dc:	6803      	ldr	r3, [r0, #0]
 80136de:	68db      	ldr	r3, [r3, #12]
 80136e0:	4798      	blx	r3
 80136e2:	68e0      	ldr	r0, [r4, #12]
 80136e4:	6803      	ldr	r3, [r0, #0]
 80136e6:	689b      	ldr	r3, [r3, #8]
 80136e8:	4798      	blx	r3
 80136ea:	6823      	ldr	r3, [r4, #0]
 80136ec:	4620      	mov	r0, r4
 80136ee:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80136f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136f4:	4718      	bx	r3
	...

080136f8 <_ZN8touchgfx3HAL4tickEv>:
 80136f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80136fa:	6803      	ldr	r3, [r0, #0]
 80136fc:	4d5b      	ldr	r5, [pc, #364]	; (801386c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80136fe:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8013702:	4604      	mov	r4, r0
 8013704:	4798      	blx	r3
 8013706:	2800      	cmp	r0, #0
 8013708:	f000 8095 	beq.w	8013836 <_ZN8touchgfx3HAL4tickEv+0x13e>
 801370c:	2001      	movs	r0, #1
 801370e:	f7ef f9d9 	bl	8002ac4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8013712:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8013716:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801371a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801371e:	2600      	movs	r6, #0
 8013720:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8013724:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8013728:	b133      	cbz	r3, 8013738 <_ZN8touchgfx3HAL4tickEv+0x40>
 801372a:	6823      	ldr	r3, [r4, #0]
 801372c:	4620      	mov	r0, r4
 801372e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8013732:	4798      	blx	r3
 8013734:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8013738:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801373c:	6862      	ldr	r2, [r4, #4]
 801373e:	f083 0301 	eor.w	r3, r3, #1
 8013742:	7253      	strb	r3, [r2, #9]
 8013744:	2601      	movs	r6, #1
 8013746:	702e      	strb	r6, [r5, #0]
 8013748:	f005 f93a 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 801374c:	6803      	ldr	r3, [r0, #0]
 801374e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013750:	4798      	blx	r3
 8013752:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013756:	b90b      	cbnz	r3, 801375c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013758:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801375c:	f005 f930 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 8013760:	6803      	ldr	r3, [r0, #0]
 8013762:	695b      	ldr	r3, [r3, #20]
 8013764:	4798      	blx	r3
 8013766:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013768:	6803      	ldr	r3, [r0, #0]
 801376a:	691b      	ldr	r3, [r3, #16]
 801376c:	4798      	blx	r3
 801376e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013772:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8013776:	3b01      	subs	r3, #1
 8013778:	b2db      	uxtb	r3, r3
 801377a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801377e:	b10a      	cbz	r2, 8013784 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8013780:	2b00      	cmp	r3, #0
 8013782:	d1eb      	bne.n	801375c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013784:	4a3a      	ldr	r2, [pc, #232]	; (8013870 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8013786:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801378a:	7813      	ldrb	r3, [r2, #0]
 801378c:	3301      	adds	r3, #1
 801378e:	b25b      	sxtb	r3, r3
 8013790:	4299      	cmp	r1, r3
 8013792:	7013      	strb	r3, [r2, #0]
 8013794:	dc10      	bgt.n	80137b8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013796:	68e0      	ldr	r0, [r4, #12]
 8013798:	2300      	movs	r3, #0
 801379a:	7013      	strb	r3, [r2, #0]
 801379c:	6803      	ldr	r3, [r0, #0]
 801379e:	aa03      	add	r2, sp, #12
 80137a0:	68db      	ldr	r3, [r3, #12]
 80137a2:	a902      	add	r1, sp, #8
 80137a4:	4798      	blx	r3
 80137a6:	6823      	ldr	r3, [r4, #0]
 80137a8:	2800      	cmp	r0, #0
 80137aa:	d050      	beq.n	801384e <_ZN8touchgfx3HAL4tickEv+0x156>
 80137ac:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80137b0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80137b4:	4620      	mov	r0, r4
 80137b6:	4798      	blx	r3
 80137b8:	6960      	ldr	r0, [r4, #20]
 80137ba:	2300      	movs	r3, #0
 80137bc:	f88d 3007 	strb.w	r3, [sp, #7]
 80137c0:	b158      	cbz	r0, 80137da <_ZN8touchgfx3HAL4tickEv+0xe2>
 80137c2:	6803      	ldr	r3, [r0, #0]
 80137c4:	f10d 0107 	add.w	r1, sp, #7
 80137c8:	68db      	ldr	r3, [r3, #12]
 80137ca:	4798      	blx	r3
 80137cc:	b128      	cbz	r0, 80137da <_ZN8touchgfx3HAL4tickEv+0xe2>
 80137ce:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80137d0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80137d4:	6803      	ldr	r3, [r0, #0]
 80137d6:	68db      	ldr	r3, [r3, #12]
 80137d8:	4798      	blx	r3
 80137da:	f104 001c 	add.w	r0, r4, #28
 80137de:	f016 f8c3 	bl	8029968 <_ZN8touchgfx8Gestures4tickEv>
 80137e2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80137e6:	b30b      	cbz	r3, 801382c <_ZN8touchgfx3HAL4tickEv+0x134>
 80137e8:	6920      	ldr	r0, [r4, #16]
 80137ea:	6803      	ldr	r3, [r0, #0]
 80137ec:	691b      	ldr	r3, [r3, #16]
 80137ee:	4798      	blx	r3
 80137f0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137f2:	4606      	mov	r6, r0
 80137f4:	b903      	cbnz	r3, 80137f8 <_ZN8touchgfx3HAL4tickEv+0x100>
 80137f6:	6760      	str	r0, [r4, #116]	; 0x74
 80137f8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137fa:	4a1e      	ldr	r2, [pc, #120]	; (8013874 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80137fc:	1af3      	subs	r3, r6, r3
 80137fe:	4293      	cmp	r3, r2
 8013800:	d914      	bls.n	801382c <_ZN8touchgfx3HAL4tickEv+0x134>
 8013802:	6920      	ldr	r0, [r4, #16]
 8013804:	6803      	ldr	r3, [r0, #0]
 8013806:	699b      	ldr	r3, [r3, #24]
 8013808:	4798      	blx	r3
 801380a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801380c:	2264      	movs	r2, #100	; 0x64
 801380e:	1af3      	subs	r3, r6, r3
 8013810:	fbb3 f3f2 	udiv	r3, r3, r2
 8013814:	fbb0 f0f3 	udiv	r0, r0, r3
 8013818:	2800      	cmp	r0, #0
 801381a:	dc1d      	bgt.n	8013858 <_ZN8touchgfx3HAL4tickEv+0x160>
 801381c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8013820:	6920      	ldr	r0, [r4, #16]
 8013822:	6803      	ldr	r3, [r0, #0]
 8013824:	2100      	movs	r1, #0
 8013826:	69db      	ldr	r3, [r3, #28]
 8013828:	4798      	blx	r3
 801382a:	6766      	str	r6, [r4, #116]	; 0x74
 801382c:	f005 f8c8 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 8013830:	6803      	ldr	r3, [r0, #0]
 8013832:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013834:	4798      	blx	r3
 8013836:	6823      	ldr	r3, [r4, #0]
 8013838:	4620      	mov	r0, r4
 801383a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801383e:	4798      	blx	r3
 8013840:	2001      	movs	r0, #1
 8013842:	f7ef f957 	bl	8002af4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8013846:	2300      	movs	r3, #0
 8013848:	702b      	strb	r3, [r5, #0]
 801384a:	b004      	add	sp, #16
 801384c:	bd70      	pop	{r4, r5, r6, pc}
 801384e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8013852:	4620      	mov	r0, r4
 8013854:	4798      	blx	r3
 8013856:	e7af      	b.n	80137b8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013858:	2863      	cmp	r0, #99	; 0x63
 801385a:	bfcb      	itete	gt
 801385c:	2300      	movgt	r3, #0
 801385e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8013862:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8013866:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801386a:	e7d9      	b.n	8013820 <_ZN8touchgfx3HAL4tickEv+0x128>
 801386c:	20013840 	.word	0x20013840
 8013870:	20013841 	.word	0x20013841
 8013874:	05f5e100 	.word	0x05f5e100

08013878 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8013878:	b510      	push	{r4, lr}
 801387a:	4604      	mov	r4, r0
 801387c:	f7ef fa92 	bl	8002da4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8013880:	6863      	ldr	r3, [r4, #4]
 8013882:	2200      	movs	r2, #0
 8013884:	729a      	strb	r2, [r3, #10]
 8013886:	bd10      	pop	{r4, pc}

08013888 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8013888:	65c1      	str	r1, [r0, #92]	; 0x5c
 801388a:	301c      	adds	r0, #28
 801388c:	f016 b86a 	b.w	8029964 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08013890 <_ZN8touchgfx3HAL5touchEll>:
 8013890:	b530      	push	{r4, r5, lr}
 8013892:	b087      	sub	sp, #28
 8013894:	4604      	mov	r4, r0
 8013896:	a804      	add	r0, sp, #16
 8013898:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801389c:	f004 fe5c 	bl	8018558 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80138a0:	9b04      	ldr	r3, [sp, #16]
 80138a2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80138a6:	a906      	add	r1, sp, #24
 80138a8:	9b05      	ldr	r3, [sp, #20]
 80138aa:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80138ae:	a803      	add	r0, sp, #12
 80138b0:	f004 fea4 	bl	80185fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80138b4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80138b8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80138bc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80138c0:	f104 001c 	add.w	r0, r4, #28
 80138c4:	b189      	cbz	r1, 80138ea <_ZN8touchgfx3HAL5touchEll+0x5a>
 80138c6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80138ca:	9300      	str	r3, [sp, #0]
 80138cc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80138d0:	4613      	mov	r3, r2
 80138d2:	462a      	mov	r2, r5
 80138d4:	f016 f856 	bl	8029984 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80138d8:	b128      	cbz	r0, 80138e6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80138da:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80138de:	6623      	str	r3, [r4, #96]	; 0x60
 80138e0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80138e4:	6663      	str	r3, [r4, #100]	; 0x64
 80138e6:	b007      	add	sp, #28
 80138e8:	bd30      	pop	{r4, r5, pc}
 80138ea:	f016 f88b 	bl	8029a04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80138ee:	2301      	movs	r3, #1
 80138f0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80138f4:	e7f1      	b.n	80138da <_ZN8touchgfx3HAL5touchEll+0x4a>

080138f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80138f6:	b510      	push	{r4, lr}
 80138f8:	2b00      	cmp	r3, #0
 80138fa:	d046      	beq.n	801398a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80138fc:	ea81 0002 	eor.w	r0, r1, r2
 8013900:	07c4      	lsls	r4, r0, #31
 8013902:	d508      	bpl.n	8013916 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8013904:	440b      	add	r3, r1
 8013906:	3a01      	subs	r2, #1
 8013908:	428b      	cmp	r3, r1
 801390a:	d93e      	bls.n	801398a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801390c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013910:	f801 0b01 	strb.w	r0, [r1], #1
 8013914:	e7f8      	b.n	8013908 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8013916:	07d0      	lsls	r0, r2, #31
 8013918:	bf42      	ittt	mi
 801391a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801391e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8013922:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8013926:	2b01      	cmp	r3, #1
 8013928:	d911      	bls.n	801394e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801392a:	ea81 0402 	eor.w	r4, r1, r2
 801392e:	07a4      	lsls	r4, r4, #30
 8013930:	4610      	mov	r0, r2
 8013932:	d022      	beq.n	801397a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8013934:	f023 0401 	bic.w	r4, r3, #1
 8013938:	440c      	add	r4, r1
 801393a:	428c      	cmp	r4, r1
 801393c:	4602      	mov	r2, r0
 801393e:	d904      	bls.n	801394a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8013940:	8812      	ldrh	r2, [r2, #0]
 8013942:	f821 2b02 	strh.w	r2, [r1], #2
 8013946:	3002      	adds	r0, #2
 8013948:	e7f7      	b.n	801393a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801394a:	f003 0301 	and.w	r3, r3, #1
 801394e:	f023 0003 	bic.w	r0, r3, #3
 8013952:	4408      	add	r0, r1
 8013954:	4288      	cmp	r0, r1
 8013956:	4614      	mov	r4, r2
 8013958:	d904      	bls.n	8013964 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801395a:	6824      	ldr	r4, [r4, #0]
 801395c:	f841 4b04 	str.w	r4, [r1], #4
 8013960:	3204      	adds	r2, #4
 8013962:	e7f7      	b.n	8013954 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8013964:	f003 0303 	and.w	r3, r3, #3
 8013968:	440b      	add	r3, r1
 801396a:	3a01      	subs	r2, #1
 801396c:	428b      	cmp	r3, r1
 801396e:	d90c      	bls.n	801398a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013970:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013974:	f801 0b01 	strb.w	r0, [r1], #1
 8013978:	e7f8      	b.n	801396c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801397a:	0790      	lsls	r0, r2, #30
 801397c:	d0e7      	beq.n	801394e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801397e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8013982:	f821 0b02 	strh.w	r0, [r1], #2
 8013986:	3b02      	subs	r3, #2
 8013988:	e7e1      	b.n	801394e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801398a:	2001      	movs	r0, #1
 801398c:	bd10      	pop	{r4, pc}

0801398e <_ZN8touchgfx3HAL7noTouchEv>:
 801398e:	b510      	push	{r4, lr}
 8013990:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8013994:	4604      	mov	r4, r0
 8013996:	b153      	cbz	r3, 80139ae <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8013998:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 801399c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80139a0:	2101      	movs	r1, #1
 80139a2:	301c      	adds	r0, #28
 80139a4:	f016 f82e 	bl	8029a04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80139a8:	2300      	movs	r3, #0
 80139aa:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80139ae:	bd10      	pop	{r4, pc}

080139b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80139b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80139b4:	b085      	sub	sp, #20
 80139b6:	ad04      	add	r5, sp, #16
 80139b8:	4604      	mov	r4, r0
 80139ba:	2000      	movs	r0, #0
 80139bc:	f845 0d04 	str.w	r0, [r5, #-4]!
 80139c0:	69a0      	ldr	r0, [r4, #24]
 80139c2:	6806      	ldr	r6, [r0, #0]
 80139c4:	9501      	str	r5, [sp, #4]
 80139c6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80139ca:	9500      	str	r5, [sp, #0]
 80139cc:	6835      	ldr	r5, [r6, #0]
 80139ce:	4699      	mov	r9, r3
 80139d0:	460f      	mov	r7, r1
 80139d2:	4690      	mov	r8, r2
 80139d4:	47a8      	blx	r5
 80139d6:	4d10      	ldr	r5, [pc, #64]	; (8013a18 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80139d8:	4606      	mov	r6, r0
 80139da:	f8a5 9000 	strh.w	r9, [r5]
 80139de:	f7f1 fd87 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 80139e2:	6803      	ldr	r3, [r0, #0]
 80139e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139e6:	4798      	blx	r3
 80139e8:	b128      	cbz	r0, 80139f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80139ea:	2801      	cmp	r0, #1
 80139ec:	d00b      	beq.n	8013a06 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80139ee:	4630      	mov	r0, r6
 80139f0:	b005      	add	sp, #20
 80139f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80139f6:	882b      	ldrh	r3, [r5, #0]
 80139f8:	fb08 7203 	mla	r2, r8, r3, r7
 80139fc:	9b03      	ldr	r3, [sp, #12]
 80139fe:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8013a02:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013a04:	e7f3      	b.n	80139ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013a06:	882a      	ldrh	r2, [r5, #0]
 8013a08:	9b03      	ldr	r3, [sp, #12]
 8013a0a:	fb08 7202 	mla	r2, r8, r2, r7
 8013a0e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013a12:	1a9a      	subs	r2, r3, r2
 8013a14:	63e2      	str	r2, [r4, #60]	; 0x3c
 8013a16:	e7ea      	b.n	80139ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013a18:	20013836 	.word	0x20013836

08013a1c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8013a1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013a1e:	b08b      	sub	sp, #44	; 0x2c
 8013a20:	4617      	mov	r7, r2
 8013a22:	4604      	mov	r4, r0
 8013a24:	460e      	mov	r6, r1
 8013a26:	461d      	mov	r5, r3
 8013a28:	f7f1 fd62 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8013a2c:	6803      	ldr	r3, [r0, #0]
 8013a2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a30:	4798      	blx	r3
 8013a32:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013a36:	9007      	str	r0, [sp, #28]
 8013a38:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013a3c:	4b0d      	ldr	r3, [pc, #52]	; (8013a74 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8013a3e:	6822      	ldr	r2, [r4, #0]
 8013a40:	881b      	ldrh	r3, [r3, #0]
 8013a42:	9306      	str	r3, [sp, #24]
 8013a44:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013a48:	9305      	str	r3, [sp, #20]
 8013a4a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8013a4e:	9304      	str	r3, [sp, #16]
 8013a50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013a54:	9303      	str	r3, [sp, #12]
 8013a56:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013a5a:	9302      	str	r3, [sp, #8]
 8013a5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013a60:	e9cd 5300 	strd	r5, r3, [sp]
 8013a64:	4631      	mov	r1, r6
 8013a66:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8013a68:	463b      	mov	r3, r7
 8013a6a:	2200      	movs	r2, #0
 8013a6c:	4620      	mov	r0, r4
 8013a6e:	47a8      	blx	r5
 8013a70:	b00b      	add	sp, #44	; 0x2c
 8013a72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a74:	20013836 	.word	0x20013836

08013a78 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8013a78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013a7c:	4698      	mov	r8, r3
 8013a7e:	6803      	ldr	r3, [r0, #0]
 8013a80:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8013a82:	4b15      	ldr	r3, [pc, #84]	; (8013ad8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8013a84:	b08b      	sub	sp, #44	; 0x2c
 8013a86:	4617      	mov	r7, r2
 8013a88:	f8b3 9000 	ldrh.w	r9, [r3]
 8013a8c:	460e      	mov	r6, r1
 8013a8e:	4604      	mov	r4, r0
 8013a90:	f7f1 fd2e 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8013a94:	6803      	ldr	r3, [r0, #0]
 8013a96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a98:	4798      	blx	r3
 8013a9a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013a9e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013aa2:	2302      	movs	r3, #2
 8013aa4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013aa8:	2301      	movs	r3, #1
 8013aaa:	9305      	str	r3, [sp, #20]
 8013aac:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013ab0:	9304      	str	r3, [sp, #16]
 8013ab2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013ab6:	9303      	str	r3, [sp, #12]
 8013ab8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013abc:	9302      	str	r3, [sp, #8]
 8013abe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013ac2:	2200      	movs	r2, #0
 8013ac4:	e9cd 8300 	strd	r8, r3, [sp]
 8013ac8:	4631      	mov	r1, r6
 8013aca:	463b      	mov	r3, r7
 8013acc:	4620      	mov	r0, r4
 8013ace:	47a8      	blx	r5
 8013ad0:	b00b      	add	sp, #44	; 0x2c
 8013ad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013ad6:	bf00      	nop
 8013ad8:	20013836 	.word	0x20013836

08013adc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8013adc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ae0:	4698      	mov	r8, r3
 8013ae2:	6803      	ldr	r3, [r0, #0]
 8013ae4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013ae6:	4b11      	ldr	r3, [pc, #68]	; (8013b2c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013ae8:	b087      	sub	sp, #28
 8013aea:	f8b3 9000 	ldrh.w	r9, [r3]
 8013aee:	460e      	mov	r6, r1
 8013af0:	4617      	mov	r7, r2
 8013af2:	4604      	mov	r4, r0
 8013af4:	f7f1 fcfc 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8013af8:	6803      	ldr	r3, [r0, #0]
 8013afa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013afc:	4798      	blx	r3
 8013afe:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013b02:	f8cd 900c 	str.w	r9, [sp, #12]
 8013b06:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8013b0a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8013b0e:	9302      	str	r3, [sp, #8]
 8013b10:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8013b14:	9301      	str	r3, [sp, #4]
 8013b16:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013b1a:	9300      	str	r3, [sp, #0]
 8013b1c:	463a      	mov	r2, r7
 8013b1e:	4643      	mov	r3, r8
 8013b20:	4631      	mov	r1, r6
 8013b22:	4620      	mov	r0, r4
 8013b24:	47a8      	blx	r5
 8013b26:	b007      	add	sp, #28
 8013b28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013b2c:	20013836 	.word	0x20013836

08013b30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b34:	4604      	mov	r4, r0
 8013b36:	b08f      	sub	sp, #60	; 0x3c
 8013b38:	4610      	mov	r0, r2
 8013b3a:	460d      	mov	r5, r1
 8013b3c:	4691      	mov	r9, r2
 8013b3e:	461e      	mov	r6, r3
 8013b40:	f008 fafa 	bl	801c138 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013b44:	2800      	cmp	r0, #0
 8013b46:	f000 809d 	beq.w	8013c84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8013b4a:	6823      	ldr	r3, [r4, #0]
 8013b4c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013ce8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013b50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013b52:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013cec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013b56:	4f61      	ldr	r7, [pc, #388]	; (8013cdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013b58:	4620      	mov	r0, r4
 8013b5a:	4798      	blx	r3
 8013b5c:	6823      	ldr	r3, [r4, #0]
 8013b5e:	4620      	mov	r0, r4
 8013b60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b62:	4798      	blx	r3
 8013b64:	f8bb 3000 	ldrh.w	r3, [fp]
 8013b68:	9301      	str	r3, [sp, #4]
 8013b6a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8013b6e:	f8ba 3000 	ldrh.w	r3, [sl]
 8013b72:	9302      	str	r3, [sp, #8]
 8013b74:	883b      	ldrh	r3, [r7, #0]
 8013b76:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8013b7a:	9303      	str	r3, [sp, #12]
 8013b7c:	4b58      	ldr	r3, [pc, #352]	; (8013ce0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013b7e:	9305      	str	r3, [sp, #20]
 8013b80:	881a      	ldrh	r2, [r3, #0]
 8013b82:	9204      	str	r2, [sp, #16]
 8013b84:	4640      	mov	r0, r8
 8013b86:	f008 fb6b 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b8a:	8038      	strh	r0, [r7, #0]
 8013b8c:	4640      	mov	r0, r8
 8013b8e:	f008 fb9b 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b92:	9b05      	ldr	r3, [sp, #20]
 8013b94:	b280      	uxth	r0, r0
 8013b96:	8018      	strh	r0, [r3, #0]
 8013b98:	4b52      	ldr	r3, [pc, #328]	; (8013ce4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013b9a:	781b      	ldrb	r3, [r3, #0]
 8013b9c:	2b00      	cmp	r3, #0
 8013b9e:	d174      	bne.n	8013c8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013ba0:	883b      	ldrh	r3, [r7, #0]
 8013ba2:	f8ab 3000 	strh.w	r3, [fp]
 8013ba6:	f8aa 0000 	strh.w	r0, [sl]
 8013baa:	4648      	mov	r0, r9
 8013bac:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013bb0:	f008 fac2 	bl	801c138 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013bb4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013bb8:	2200      	movs	r2, #0
 8013bba:	4611      	mov	r1, r2
 8013bbc:	4628      	mov	r0, r5
 8013bbe:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8013bc2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013bc6:	f7ef fd57 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8013bca:	2301      	movs	r3, #1
 8013bcc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013bd0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013bd4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013bd8:	2b00      	cmp	r3, #0
 8013bda:	dd5c      	ble.n	8013c96 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013bdc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013be0:	2b00      	cmp	r3, #0
 8013be2:	dd58      	ble.n	8013c96 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013be4:	462a      	mov	r2, r5
 8013be6:	ab0a      	add	r3, sp, #40	; 0x28
 8013be8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013bec:	6851      	ldr	r1, [r2, #4]
 8013bee:	c303      	stmia	r3!, {r0, r1}
 8013bf0:	4631      	mov	r1, r6
 8013bf2:	a80a      	add	r0, sp, #40	; 0x28
 8013bf4:	f7fe ff92 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8013bf8:	4b38      	ldr	r3, [pc, #224]	; (8013cdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013bfa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013bfe:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013c02:	2100      	movs	r1, #0
 8013c04:	aa0a      	add	r2, sp, #40	; 0x28
 8013c06:	4b36      	ldr	r3, [pc, #216]	; (8013ce0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013c08:	910c      	str	r1, [sp, #48]	; 0x30
 8013c0a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013c0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013c12:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013c16:	ab08      	add	r3, sp, #32
 8013c18:	e883 0003 	stmia.w	r3, {r0, r1}
 8013c1c:	4618      	mov	r0, r3
 8013c1e:	a90c      	add	r1, sp, #48	; 0x30
 8013c20:	f7fe ff7c 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8013c24:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013c26:	2b00      	cmp	r3, #0
 8013c28:	d13c      	bne.n	8013ca4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8013c2a:	2000      	movs	r0, #0
 8013c2c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013c30:	2600      	movs	r6, #0
 8013c32:	682a      	ldr	r2, [r5, #0]
 8013c34:	696b      	ldr	r3, [r5, #20]
 8013c36:	616e      	str	r6, [r5, #20]
 8013c38:	9305      	str	r3, [sp, #20]
 8013c3a:	6892      	ldr	r2, [r2, #8]
 8013c3c:	a908      	add	r1, sp, #32
 8013c3e:	4628      	mov	r0, r5
 8013c40:	4790      	blx	r2
 8013c42:	9b05      	ldr	r3, [sp, #20]
 8013c44:	616b      	str	r3, [r5, #20]
 8013c46:	4652      	mov	r2, sl
 8013c48:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8013c4c:	4649      	mov	r1, r9
 8013c4e:	4628      	mov	r0, r5
 8013c50:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013c54:	f7ef fd10 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8013c58:	4b23      	ldr	r3, [pc, #140]	; (8013ce8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013c5a:	9a01      	ldr	r2, [sp, #4]
 8013c5c:	801a      	strh	r2, [r3, #0]
 8013c5e:	4b23      	ldr	r3, [pc, #140]	; (8013cec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013c60:	9a02      	ldr	r2, [sp, #8]
 8013c62:	801a      	strh	r2, [r3, #0]
 8013c64:	4b1d      	ldr	r3, [pc, #116]	; (8013cdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013c66:	9a03      	ldr	r2, [sp, #12]
 8013c68:	801a      	strh	r2, [r3, #0]
 8013c6a:	4b1d      	ldr	r3, [pc, #116]	; (8013ce0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013c6c:	9a04      	ldr	r2, [sp, #16]
 8013c6e:	801a      	strh	r2, [r3, #0]
 8013c70:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013c74:	6823      	ldr	r3, [r4, #0]
 8013c76:	4620      	mov	r0, r4
 8013c78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c7a:	4798      	blx	r3
 8013c7c:	6823      	ldr	r3, [r4, #0]
 8013c7e:	4620      	mov	r0, r4
 8013c80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c82:	4798      	blx	r3
 8013c84:	b00f      	add	sp, #60	; 0x3c
 8013c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c8a:	883b      	ldrh	r3, [r7, #0]
 8013c8c:	f8ab 0000 	strh.w	r0, [fp]
 8013c90:	f8aa 3000 	strh.w	r3, [sl]
 8013c94:	e789      	b.n	8013baa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013c96:	462a      	mov	r2, r5
 8013c98:	ab0a      	add	r3, sp, #40	; 0x28
 8013c9a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013c9e:	6851      	ldr	r1, [r2, #4]
 8013ca0:	c303      	stmia	r3!, {r0, r1}
 8013ca2:	e7a9      	b.n	8013bf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013ca4:	a807      	add	r0, sp, #28
 8013ca6:	f008 fc4b 	bl	801c540 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013caa:	4606      	mov	r6, r0
 8013cac:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013cae:	6803      	ldr	r3, [r0, #0]
 8013cb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013cb2:	4798      	blx	r3
 8013cb4:	4286      	cmp	r6, r0
 8013cb6:	d1b8      	bne.n	8013c2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013cb8:	f7f1 fc1a 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8013cbc:	6803      	ldr	r3, [r0, #0]
 8013cbe:	4606      	mov	r6, r0
 8013cc0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013cc2:	9305      	str	r3, [sp, #20]
 8013cc4:	a807      	add	r0, sp, #28
 8013cc6:	f008 fc3b 	bl	801c540 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013cca:	9b05      	ldr	r3, [sp, #20]
 8013ccc:	4601      	mov	r1, r0
 8013cce:	4630      	mov	r0, r6
 8013cd0:	4798      	blx	r3
 8013cd2:	f080 0001 	eor.w	r0, r0, #1
 8013cd6:	b2c0      	uxtb	r0, r0
 8013cd8:	e7a8      	b.n	8013c2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013cda:	bf00      	nop
 8013cdc:	20013830 	.word	0x20013830
 8013ce0:	20013832 	.word	0x20013832
 8013ce4:	20013834 	.word	0x20013834
 8013ce8:	20013836 	.word	0x20013836
 8013cec:	20013838 	.word	0x20013838

08013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013cf0:	b510      	push	{r4, lr}
 8013cf2:	4b07      	ldr	r3, [pc, #28]	; (8013d10 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013cf4:	781b      	ldrb	r3, [r3, #0]
 8013cf6:	4604      	mov	r4, r0
 8013cf8:	b13b      	cbz	r3, 8013d0a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013cfa:	6803      	ldr	r3, [r0, #0]
 8013cfc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013cfe:	4798      	blx	r3
 8013d00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013d02:	4283      	cmp	r3, r0
 8013d04:	d101      	bne.n	8013d0a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013d06:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013d08:	bd10      	pop	{r4, pc}
 8013d0a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013d0c:	e7fc      	b.n	8013d08 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013d0e:	bf00      	nop
 8013d10:	2001383a 	.word	0x2001383a

08013d14 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013d14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d18:	b08a      	sub	sp, #40	; 0x28
 8013d1a:	461d      	mov	r5, r3
 8013d1c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013d20:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013d24:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013d28:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013d2c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013d30:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013d34:	2400      	movs	r4, #0
 8013d36:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013d3a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8013d3e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013d42:	4690      	mov	r8, r2
 8013d44:	4607      	mov	r7, r0
 8013d46:	9404      	str	r4, [sp, #16]
 8013d48:	f88d 4020 	strb.w	r4, [sp, #32]
 8013d4c:	f7ff ffd0 	bl	8013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d50:	fb06 8505 	mla	r5, r6, r5, r8
 8013d54:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013d58:	6878      	ldr	r0, [r7, #4]
 8013d5a:	9505      	str	r5, [sp, #20]
 8013d5c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013d60:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013d64:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013d68:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013d6c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013d70:	6803      	ldr	r3, [r0, #0]
 8013d72:	a901      	add	r1, sp, #4
 8013d74:	685b      	ldr	r3, [r3, #4]
 8013d76:	4798      	blx	r3
 8013d78:	b00a      	add	sp, #40	; 0x28
 8013d7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013d7e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8013d7e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013d82:	b08b      	sub	sp, #44	; 0x2c
 8013d84:	2400      	movs	r4, #0
 8013d86:	461d      	mov	r5, r3
 8013d88:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013d8c:	4688      	mov	r8, r1
 8013d8e:	4691      	mov	r9, r2
 8013d90:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013d94:	9404      	str	r4, [sp, #16]
 8013d96:	4607      	mov	r7, r0
 8013d98:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013d9c:	f7ff ffa8 	bl	8013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013da0:	fb06 9505 	mla	r5, r6, r5, r9
 8013da4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013da8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013dac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013db0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013db4:	6878      	ldr	r0, [r7, #4]
 8013db6:	9505      	str	r5, [sp, #20]
 8013db8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013dbc:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013dc0:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013dc4:	f8cd 8010 	str.w	r8, [sp, #16]
 8013dc8:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013dcc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013dd0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013dd4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013dd8:	6803      	ldr	r3, [r0, #0]
 8013dda:	a901      	add	r1, sp, #4
 8013ddc:	685b      	ldr	r3, [r3, #4]
 8013dde:	4798      	blx	r3
 8013de0:	b00b      	add	sp, #44	; 0x2c
 8013de2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013de8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013de8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013dec:	b08a      	sub	sp, #40	; 0x28
 8013dee:	4698      	mov	r8, r3
 8013df0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013df4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013df8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013dfc:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013e00:	2300      	movs	r3, #0
 8013e02:	2d0b      	cmp	r5, #11
 8013e04:	4606      	mov	r6, r0
 8013e06:	9304      	str	r3, [sp, #16]
 8013e08:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013e0c:	d138      	bne.n	8013e80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013e0e:	2380      	movs	r3, #128	; 0x80
 8013e10:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013e14:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013e18:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013e1c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013e20:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013e24:	f88d 0020 	strb.w	r0, [sp, #32]
 8013e28:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013e2c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e30:	4630      	mov	r0, r6
 8013e32:	9203      	str	r2, [sp, #12]
 8013e34:	f7ff ff5c 	bl	8013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013e38:	2c0b      	cmp	r4, #11
 8013e3a:	bf98      	it	ls
 8013e3c:	4b1b      	ldrls	r3, [pc, #108]	; (8013eac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013e3e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013e42:	bf98      	it	ls
 8013e44:	5d19      	ldrbls	r1, [r3, r4]
 8013e46:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013e4a:	bf88      	it	hi
 8013e4c:	2100      	movhi	r1, #0
 8013e4e:	fb02 8307 	mla	r3, r2, r7, r8
 8013e52:	10c9      	asrs	r1, r1, #3
 8013e54:	fb01 0003 	mla	r0, r1, r3, r0
 8013e58:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013e5c:	9005      	str	r0, [sp, #20]
 8013e5e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013e62:	6870      	ldr	r0, [r6, #4]
 8013e64:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013e68:	2300      	movs	r3, #0
 8013e6a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013e6e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013e72:	6803      	ldr	r3, [r0, #0]
 8013e74:	a901      	add	r1, sp, #4
 8013e76:	685b      	ldr	r3, [r3, #4]
 8013e78:	4798      	blx	r3
 8013e7a:	b00a      	add	sp, #40	; 0x28
 8013e7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e80:	2d02      	cmp	r5, #2
 8013e82:	d109      	bne.n	8013e98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013e84:	28ff      	cmp	r0, #255	; 0xff
 8013e86:	d105      	bne.n	8013e94 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013e88:	f1bc 0f00 	cmp.w	ip, #0
 8013e8c:	bf14      	ite	ne
 8013e8e:	2340      	movne	r3, #64	; 0x40
 8013e90:	2320      	moveq	r3, #32
 8013e92:	e7bd      	b.n	8013e10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e94:	2340      	movs	r3, #64	; 0x40
 8013e96:	e7bb      	b.n	8013e10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e98:	28ff      	cmp	r0, #255	; 0xff
 8013e9a:	d105      	bne.n	8013ea8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013e9c:	f1bc 0f00 	cmp.w	ip, #0
 8013ea0:	bf14      	ite	ne
 8013ea2:	2304      	movne	r3, #4
 8013ea4:	2301      	moveq	r3, #1
 8013ea6:	e7b3      	b.n	8013e10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013ea8:	2304      	movs	r3, #4
 8013eaa:	e7b1      	b.n	8013e10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013eac:	0803176c 	.word	0x0803176c

08013eb0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013eb4:	b08b      	sub	sp, #44	; 0x2c
 8013eb6:	461d      	mov	r5, r3
 8013eb8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013ebc:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013ec0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013ec4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013ec8:	bf14      	ite	ne
 8013eca:	2308      	movne	r3, #8
 8013ecc:	2302      	moveq	r3, #2
 8013ece:	2400      	movs	r4, #0
 8013ed0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013ed4:	4688      	mov	r8, r1
 8013ed6:	4693      	mov	fp, r2
 8013ed8:	9404      	str	r4, [sp, #16]
 8013eda:	4607      	mov	r7, r0
 8013edc:	f7ff ff08 	bl	8013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013ee0:	2e0b      	cmp	r6, #11
 8013ee2:	bf98      	it	ls
 8013ee4:	4b15      	ldrls	r3, [pc, #84]	; (8013f3c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013ee6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013eea:	bf98      	it	ls
 8013eec:	5d9c      	ldrbls	r4, [r3, r6]
 8013eee:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013ef2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013ef6:	fb05 b50a 	mla	r5, r5, sl, fp
 8013efa:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013efe:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013f02:	10e4      	asrs	r4, r4, #3
 8013f04:	fb04 0405 	mla	r4, r4, r5, r0
 8013f08:	2300      	movs	r3, #0
 8013f0a:	6878      	ldr	r0, [r7, #4]
 8013f0c:	9405      	str	r4, [sp, #20]
 8013f0e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013f12:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013f16:	f8cd 8010 	str.w	r8, [sp, #16]
 8013f1a:	f88d 9020 	strb.w	r9, [sp, #32]
 8013f1e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013f22:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013f26:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8013f2a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013f2e:	6803      	ldr	r3, [r0, #0]
 8013f30:	a901      	add	r1, sp, #4
 8013f32:	685b      	ldr	r3, [r3, #4]
 8013f34:	4798      	blx	r3
 8013f36:	b00b      	add	sp, #44	; 0x2c
 8013f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f3c:	0803176c 	.word	0x0803176c

08013f40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013f40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f44:	461e      	mov	r6, r3
 8013f46:	4b0a      	ldr	r3, [pc, #40]	; (8013f70 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013f48:	460f      	mov	r7, r1
 8013f4a:	881d      	ldrh	r5, [r3, #0]
 8013f4c:	4690      	mov	r8, r2
 8013f4e:	f7f1 facf 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8013f52:	6803      	ldr	r3, [r0, #0]
 8013f54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f56:	4798      	blx	r3
 8013f58:	280b      	cmp	r0, #11
 8013f5a:	bf9a      	itte	ls
 8013f5c:	4b05      	ldrls	r3, [pc, #20]	; (8013f74 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8013f5e:	5c1c      	ldrbls	r4, [r3, r0]
 8013f60:	2400      	movhi	r4, #0
 8013f62:	fb08 7005 	mla	r0, r8, r5, r7
 8013f66:	10e4      	asrs	r4, r4, #3
 8013f68:	fb04 6000 	mla	r0, r4, r0, r6
 8013f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f70:	20013836 	.word	0x20013836
 8013f74:	0803176c 	.word	0x0803176c

08013f78 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013f78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f7a:	b08b      	sub	sp, #44	; 0x2c
 8013f7c:	461f      	mov	r7, r3
 8013f7e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013f82:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013f86:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013f8a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013f8e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013f92:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013f96:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013f9a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013f9e:	2500      	movs	r5, #0
 8013fa0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013fa4:	f88d 3020 	strb.w	r3, [sp, #32]
 8013fa8:	4604      	mov	r4, r0
 8013faa:	4616      	mov	r6, r2
 8013fac:	9504      	str	r5, [sp, #16]
 8013fae:	f7ff fe9f 	bl	8013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013fb2:	463a      	mov	r2, r7
 8013fb4:	4631      	mov	r1, r6
 8013fb6:	4603      	mov	r3, r0
 8013fb8:	4620      	mov	r0, r4
 8013fba:	f7ff ffc1 	bl	8013f40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013fbe:	4b0e      	ldr	r3, [pc, #56]	; (8013ff8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013fc0:	9005      	str	r0, [sp, #20]
 8013fc2:	881b      	ldrh	r3, [r3, #0]
 8013fc4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013fc8:	f7f1 fa92 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8013fcc:	6803      	ldr	r3, [r0, #0]
 8013fce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013fd0:	4798      	blx	r3
 8013fd2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013fd4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013fd8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013fdc:	9304      	str	r3, [sp, #16]
 8013fde:	6860      	ldr	r0, [r4, #4]
 8013fe0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013fe4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013fe8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013fec:	6803      	ldr	r3, [r0, #0]
 8013fee:	a901      	add	r1, sp, #4
 8013ff0:	685b      	ldr	r3, [r3, #4]
 8013ff2:	4798      	blx	r3
 8013ff4:	b00b      	add	sp, #44	; 0x2c
 8013ff6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ff8:	20013836 	.word	0x20013836

08013ffc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8013ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013ffe:	b08d      	sub	sp, #52	; 0x34
 8014000:	466b      	mov	r3, sp
 8014002:	e883 0006 	stmia.w	r3, {r1, r2}
 8014006:	2300      	movs	r3, #0
 8014008:	9306      	str	r3, [sp, #24]
 801400a:	6803      	ldr	r3, [r0, #0]
 801400c:	f8bd 6000 	ldrh.w	r6, [sp]
 8014010:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014012:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8014016:	2501      	movs	r5, #1
 8014018:	9503      	str	r5, [sp, #12]
 801401a:	4604      	mov	r4, r0
 801401c:	4798      	blx	r3
 801401e:	463a      	mov	r2, r7
 8014020:	4631      	mov	r1, r6
 8014022:	4603      	mov	r3, r0
 8014024:	4620      	mov	r0, r4
 8014026:	f7ff ff8b 	bl	8013f40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801402a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801402c:	9307      	str	r3, [sp, #28]
 801402e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014032:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014036:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801403a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801403e:	4b0f      	ldr	r3, [pc, #60]	; (801407c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8014040:	9004      	str	r0, [sp, #16]
 8014042:	881b      	ldrh	r3, [r3, #0]
 8014044:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8014048:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801404c:	f7f1 fa50 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8014050:	6803      	ldr	r3, [r0, #0]
 8014052:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014054:	4798      	blx	r3
 8014056:	23ff      	movs	r3, #255	; 0xff
 8014058:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801405c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014060:	6860      	ldr	r0, [r4, #4]
 8014062:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8014066:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801406a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801406e:	6803      	ldr	r3, [r0, #0]
 8014070:	a903      	add	r1, sp, #12
 8014072:	685b      	ldr	r3, [r3, #4]
 8014074:	4798      	blx	r3
 8014076:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014078:	b00d      	add	sp, #52	; 0x34
 801407a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801407c:	20013836 	.word	0x20013836

08014080 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8014080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014084:	b08c      	sub	sp, #48	; 0x30
 8014086:	461e      	mov	r6, r3
 8014088:	466d      	mov	r5, sp
 801408a:	2300      	movs	r3, #0
 801408c:	e885 0006 	stmia.w	r5, {r1, r2}
 8014090:	9306      	str	r3, [sp, #24]
 8014092:	6803      	ldr	r3, [r0, #0]
 8014094:	f8bd 7000 	ldrh.w	r7, [sp]
 8014098:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801409a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801409e:	2501      	movs	r5, #1
 80140a0:	9503      	str	r5, [sp, #12]
 80140a2:	4604      	mov	r4, r0
 80140a4:	4798      	blx	r3
 80140a6:	4642      	mov	r2, r8
 80140a8:	4639      	mov	r1, r7
 80140aa:	4603      	mov	r3, r0
 80140ac:	4620      	mov	r0, r4
 80140ae:	f7ff ff47 	bl	8013f40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80140b2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80140b6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80140ba:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80140be:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80140c2:	4b11      	ldr	r3, [pc, #68]	; (8014108 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80140c4:	9004      	str	r0, [sp, #16]
 80140c6:	881b      	ldrh	r3, [r3, #0]
 80140c8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80140cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80140ce:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80140d2:	9607      	str	r6, [sp, #28]
 80140d4:	f7f1 fa0c 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 80140d8:	6803      	ldr	r3, [r0, #0]
 80140da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80140dc:	4798      	blx	r3
 80140de:	23ff      	movs	r3, #255	; 0xff
 80140e0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80140e4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80140e8:	6860      	ldr	r0, [r4, #4]
 80140ea:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80140ee:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80140f2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80140f6:	6803      	ldr	r3, [r0, #0]
 80140f8:	a903      	add	r1, sp, #12
 80140fa:	685b      	ldr	r3, [r3, #4]
 80140fc:	4798      	blx	r3
 80140fe:	4630      	mov	r0, r6
 8014100:	b00c      	add	sp, #48	; 0x30
 8014102:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014106:	bf00      	nop
 8014108:	20013836 	.word	0x20013836

0801410c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801410c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801410e:	b085      	sub	sp, #20
 8014110:	ac02      	add	r4, sp, #8
 8014112:	e884 0006 	stmia.w	r4, {r1, r2}
 8014116:	4605      	mov	r5, r0
 8014118:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801411c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8014120:	f7ff fde6 	bl	8013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014124:	463a      	mov	r2, r7
 8014126:	4603      	mov	r3, r0
 8014128:	4631      	mov	r1, r6
 801412a:	4628      	mov	r0, r5
 801412c:	f7ff ff08 	bl	8013f40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8014130:	4a05      	ldr	r2, [pc, #20]	; (8014148 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8014132:	682b      	ldr	r3, [r5, #0]
 8014134:	8812      	ldrh	r2, [r2, #0]
 8014136:	9200      	str	r2, [sp, #0]
 8014138:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801413a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801413e:	4603      	mov	r3, r0
 8014140:	4628      	mov	r0, r5
 8014142:	47b0      	blx	r6
 8014144:	b005      	add	sp, #20
 8014146:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014148:	20013836 	.word	0x20013836

0801414c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801414c:	b570      	push	{r4, r5, r6, lr}
 801414e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8014152:	4604      	mov	r4, r0
 8014154:	b19b      	cbz	r3, 801417e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8014156:	2002      	movs	r0, #2
 8014158:	f7ee fce4 	bl	8002b24 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801415c:	2300      	movs	r3, #0
 801415e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8014162:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8014166:	6823      	ldr	r3, [r4, #0]
 8014168:	4620      	mov	r0, r4
 801416a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801416e:	f7ff fdbf 	bl	8013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014172:	462b      	mov	r3, r5
 8014174:	4601      	mov	r1, r0
 8014176:	4620      	mov	r0, r4
 8014178:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801417c:	4718      	bx	r3
 801417e:	bd70      	pop	{r4, r5, r6, pc}

08014180 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8014180:	b538      	push	{r3, r4, r5, lr}
 8014182:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8014186:	428b      	cmp	r3, r1
 8014188:	4604      	mov	r4, r0
 801418a:	460d      	mov	r5, r1
 801418c:	d006      	beq.n	801419c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801418e:	6803      	ldr	r3, [r0, #0]
 8014190:	b929      	cbnz	r1, 801419e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8014192:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8014196:	4798      	blx	r3
 8014198:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801419c:	bd38      	pop	{r3, r4, r5, pc}
 801419e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80141a2:	e7f8      	b.n	8014196 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080141a4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80141a4:	b510      	push	{r4, lr}
 80141a6:	4b0d      	ldr	r3, [pc, #52]	; (80141dc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80141a8:	781b      	ldrb	r3, [r3, #0]
 80141aa:	4604      	mov	r4, r0
 80141ac:	b95b      	cbnz	r3, 80141c6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80141ae:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80141b2:	2b02      	cmp	r3, #2
 80141b4:	d007      	beq.n	80141c6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80141b6:	6840      	ldr	r0, [r0, #4]
 80141b8:	f000 f92c 	bl	8014414 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80141bc:	b118      	cbz	r0, 80141c6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80141be:	6862      	ldr	r2, [r4, #4]
 80141c0:	7a53      	ldrb	r3, [r2, #9]
 80141c2:	2b00      	cmp	r3, #0
 80141c4:	d0fc      	beq.n	80141c0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80141c6:	f7ee fde5 	bl	8002d94 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80141ca:	4620      	mov	r0, r4
 80141cc:	2100      	movs	r1, #0
 80141ce:	f7ff ffd7 	bl	8014180 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80141d2:	4620      	mov	r0, r4
 80141d4:	f7ff fd8c 	bl	8013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80141d8:	bd10      	pop	{r4, pc}
 80141da:	bf00      	nop
 80141dc:	2001383a 	.word	0x2001383a

080141e0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80141e0:	b570      	push	{r4, r5, r6, lr}
 80141e2:	4604      	mov	r4, r0
 80141e4:	6803      	ldr	r3, [r0, #0]
 80141e6:	b919      	cbnz	r1, 80141f0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80141e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80141ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80141ee:	4718      	bx	r3
 80141f0:	2200      	movs	r2, #0
 80141f2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80141f6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80141fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80141fc:	4798      	blx	r3
 80141fe:	6863      	ldr	r3, [r4, #4]
 8014200:	2101      	movs	r1, #1
 8014202:	4605      	mov	r5, r0
 8014204:	7299      	strb	r1, [r3, #10]
 8014206:	4620      	mov	r0, r4
 8014208:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 801420c:	f7ff ffb8 	bl	8014180 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014210:	4628      	mov	r0, r5
 8014212:	bd70      	pop	{r4, r5, r6, pc}

08014214 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8014214:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8014218:	1a13      	subs	r3, r2, r0
 801421a:	4258      	negs	r0, r3
 801421c:	4158      	adcs	r0, r3
 801421e:	4770      	bx	lr

08014220 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8014220:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8014224:	1a9b      	subs	r3, r3, r2
 8014226:	2b00      	cmp	r3, #0
 8014228:	bfdc      	itt	le
 801422a:	6882      	ldrle	r2, [r0, #8]
 801422c:	189b      	addle	r3, r3, r2
 801422e:	2b01      	cmp	r3, #1
 8014230:	bfcc      	ite	gt
 8014232:	2000      	movgt	r0, #0
 8014234:	2001      	movle	r0, #1
 8014236:	4770      	bx	lr

08014238 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8014238:	6902      	ldr	r2, [r0, #16]
 801423a:	6843      	ldr	r3, [r0, #4]
 801423c:	2024      	movs	r0, #36	; 0x24
 801423e:	fb00 3002 	mla	r0, r0, r2, r3
 8014242:	4770      	bx	lr

08014244 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8014244:	6803      	ldr	r3, [r0, #0]
 8014246:	691b      	ldr	r3, [r3, #16]
 8014248:	4718      	bx	r3

0801424a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801424a:	b570      	push	{r4, r5, r6, lr}
 801424c:	2301      	movs	r3, #1
 801424e:	7203      	strb	r3, [r0, #8]
 8014250:	4604      	mov	r4, r0
 8014252:	6840      	ldr	r0, [r0, #4]
 8014254:	6803      	ldr	r3, [r0, #0]
 8014256:	699b      	ldr	r3, [r3, #24]
 8014258:	4798      	blx	r3
 801425a:	6803      	ldr	r3, [r0, #0]
 801425c:	2b40      	cmp	r3, #64	; 0x40
 801425e:	4605      	mov	r5, r0
 8014260:	d00c      	beq.n	801427c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014262:	d810      	bhi.n	8014286 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8014264:	2b04      	cmp	r3, #4
 8014266:	d01d      	beq.n	80142a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8014268:	d804      	bhi.n	8014274 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801426a:	2b01      	cmp	r3, #1
 801426c:	d006      	beq.n	801427c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801426e:	2b02      	cmp	r3, #2
 8014270:	d02c      	beq.n	80142cc <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8014272:	bd70      	pop	{r4, r5, r6, pc}
 8014274:	2b08      	cmp	r3, #8
 8014276:	d01d      	beq.n	80142b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8014278:	2b20      	cmp	r3, #32
 801427a:	d1fa      	bne.n	8014272 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801427c:	6823      	ldr	r3, [r4, #0]
 801427e:	4620      	mov	r0, r4
 8014280:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014282:	4798      	blx	r3
 8014284:	e013      	b.n	80142ae <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8014286:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801428a:	d0f7      	beq.n	801427c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801428c:	d804      	bhi.n	8014298 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801428e:	2b80      	cmp	r3, #128	; 0x80
 8014290:	d0f4      	beq.n	801427c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014292:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8014296:	e7f0      	b.n	801427a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8014298:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801429c:	d0ee      	beq.n	801427c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801429e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80142a2:	e7e5      	b.n	8014270 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80142a4:	6823      	ldr	r3, [r4, #0]
 80142a6:	7f01      	ldrb	r1, [r0, #28]
 80142a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80142aa:	4620      	mov	r0, r4
 80142ac:	4798      	blx	r3
 80142ae:	6823      	ldr	r3, [r4, #0]
 80142b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80142b2:	e006      	b.n	80142c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80142b4:	6823      	ldr	r3, [r4, #0]
 80142b6:	7f01      	ldrb	r1, [r0, #28]
 80142b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80142ba:	4620      	mov	r0, r4
 80142bc:	4798      	blx	r3
 80142be:	6823      	ldr	r3, [r4, #0]
 80142c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80142c2:	4629      	mov	r1, r5
 80142c4:	4620      	mov	r0, r4
 80142c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142ca:	4718      	bx	r3
 80142cc:	6823      	ldr	r3, [r4, #0]
 80142ce:	4620      	mov	r0, r4
 80142d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80142d2:	4798      	blx	r3
 80142d4:	e7f3      	b.n	80142be <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080142d6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80142d6:	4770      	bx	lr

080142d8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80142d8:	4770      	bx	lr

080142da <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80142da:	4770      	bx	lr

080142dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80142dc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80142e0:	1ad2      	subs	r2, r2, r3
 80142e2:	2a00      	cmp	r2, #0
 80142e4:	b510      	push	{r4, lr}
 80142e6:	bfdc      	itt	le
 80142e8:	6884      	ldrle	r4, [r0, #8]
 80142ea:	1912      	addle	r2, r2, r4
 80142ec:	2a01      	cmp	r2, #1
 80142ee:	dd16      	ble.n	801431e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80142f0:	6842      	ldr	r2, [r0, #4]
 80142f2:	2424      	movs	r4, #36	; 0x24
 80142f4:	fb04 2303 	mla	r3, r4, r3, r2
 80142f8:	f101 0220 	add.w	r2, r1, #32
 80142fc:	f851 4b04 	ldr.w	r4, [r1], #4
 8014300:	f843 4b04 	str.w	r4, [r3], #4
 8014304:	4291      	cmp	r1, r2
 8014306:	d1f9      	bne.n	80142fc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8014308:	780a      	ldrb	r2, [r1, #0]
 801430a:	701a      	strb	r2, [r3, #0]
 801430c:	68c3      	ldr	r3, [r0, #12]
 801430e:	6882      	ldr	r2, [r0, #8]
 8014310:	f3bf 8f5b 	dmb	ish
 8014314:	3301      	adds	r3, #1
 8014316:	429a      	cmp	r2, r3
 8014318:	bfd8      	it	le
 801431a:	1a9b      	suble	r3, r3, r2
 801431c:	60c3      	str	r3, [r0, #12]
 801431e:	bd10      	pop	{r4, pc}

08014320 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8014320:	6903      	ldr	r3, [r0, #16]
 8014322:	6882      	ldr	r2, [r0, #8]
 8014324:	f3bf 8f5b 	dmb	ish
 8014328:	3301      	adds	r3, #1
 801432a:	429a      	cmp	r2, r3
 801432c:	bfd8      	it	le
 801432e:	1a9b      	suble	r3, r3, r2
 8014330:	6103      	str	r3, [r0, #16]
 8014332:	4770      	bx	lr

08014334 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8014334:	b570      	push	{r4, r5, r6, lr}
 8014336:	4604      	mov	r4, r0
 8014338:	460e      	mov	r6, r1
 801433a:	6860      	ldr	r0, [r4, #4]
 801433c:	6803      	ldr	r3, [r0, #0]
 801433e:	685b      	ldr	r3, [r3, #4]
 8014340:	4798      	blx	r3
 8014342:	2800      	cmp	r0, #0
 8014344:	d1f9      	bne.n	801433a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8014346:	4d0d      	ldr	r5, [pc, #52]	; (801437c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8014348:	6828      	ldr	r0, [r5, #0]
 801434a:	6803      	ldr	r3, [r0, #0]
 801434c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801434e:	4798      	blx	r3
 8014350:	f7ee fd2e 	bl	8002db0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8014354:	6828      	ldr	r0, [r5, #0]
 8014356:	2101      	movs	r1, #1
 8014358:	f7ff ff12 	bl	8014180 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801435c:	6860      	ldr	r0, [r4, #4]
 801435e:	6803      	ldr	r3, [r0, #0]
 8014360:	4631      	mov	r1, r6
 8014362:	689b      	ldr	r3, [r3, #8]
 8014364:	4798      	blx	r3
 8014366:	6823      	ldr	r3, [r4, #0]
 8014368:	4620      	mov	r0, r4
 801436a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801436c:	4798      	blx	r3
 801436e:	6828      	ldr	r0, [r5, #0]
 8014370:	6803      	ldr	r3, [r0, #0]
 8014372:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014376:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8014378:	4718      	bx	r3
 801437a:	bf00      	nop
 801437c:	2001383c 	.word	0x2001383c

08014380 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8014380:	b508      	push	{r3, lr}
 8014382:	f7ee fd07 	bl	8002d94 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014386:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801438a:	f7ee bd0b 	b.w	8002da4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801438e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801438e:	b510      	push	{r4, lr}
 8014390:	2114      	movs	r1, #20
 8014392:	4604      	mov	r4, r0
 8014394:	f018 fbfd 	bl	802cb92 <_ZdlPvj>
 8014398:	4620      	mov	r0, r4
 801439a:	bd10      	pop	{r4, pc}

0801439c <_ZN8touchgfx13DMA_Interface5startEv>:
 801439c:	b510      	push	{r4, lr}
 801439e:	4604      	mov	r4, r0
 80143a0:	6840      	ldr	r0, [r0, #4]
 80143a2:	6803      	ldr	r3, [r0, #0]
 80143a4:	681b      	ldr	r3, [r3, #0]
 80143a6:	4798      	blx	r3
 80143a8:	b948      	cbnz	r0, 80143be <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80143aa:	7a63      	ldrb	r3, [r4, #9]
 80143ac:	b13b      	cbz	r3, 80143be <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80143ae:	7a23      	ldrb	r3, [r4, #8]
 80143b0:	b92b      	cbnz	r3, 80143be <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80143b2:	6823      	ldr	r3, [r4, #0]
 80143b4:	4620      	mov	r0, r4
 80143b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80143b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80143bc:	4718      	bx	r3
 80143be:	bd10      	pop	{r4, pc}

080143c0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80143c0:	b570      	push	{r4, r5, r6, lr}
 80143c2:	4604      	mov	r4, r0
 80143c4:	6840      	ldr	r0, [r0, #4]
 80143c6:	6803      	ldr	r3, [r0, #0]
 80143c8:	681b      	ldr	r3, [r3, #0]
 80143ca:	4798      	blx	r3
 80143cc:	4605      	mov	r5, r0
 80143ce:	b930      	cbnz	r0, 80143de <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80143d0:	7a23      	ldrb	r3, [r4, #8]
 80143d2:	b123      	cbz	r3, 80143de <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80143d4:	6860      	ldr	r0, [r4, #4]
 80143d6:	6803      	ldr	r3, [r0, #0]
 80143d8:	695b      	ldr	r3, [r3, #20]
 80143da:	4798      	blx	r3
 80143dc:	7225      	strb	r5, [r4, #8]
 80143de:	6860      	ldr	r0, [r4, #4]
 80143e0:	6803      	ldr	r3, [r0, #0]
 80143e2:	681b      	ldr	r3, [r3, #0]
 80143e4:	4798      	blx	r3
 80143e6:	b928      	cbnz	r0, 80143f4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80143e8:	6823      	ldr	r3, [r4, #0]
 80143ea:	4620      	mov	r0, r4
 80143ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80143ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143f2:	4718      	bx	r3
 80143f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143f8:	f7ee bce2 	b.w	8002dc0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080143fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80143fc:	b510      	push	{r4, lr}
 80143fe:	4c04      	ldr	r4, [pc, #16]	; (8014410 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8014400:	6082      	str	r2, [r0, #8]
 8014402:	2200      	movs	r2, #0
 8014404:	e9c0 4100 	strd	r4, r1, [r0]
 8014408:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801440c:	bd10      	pop	{r4, pc}
 801440e:	bf00      	nop
 8014410:	08031780 	.word	0x08031780

08014414 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8014414:	6840      	ldr	r0, [r0, #4]
 8014416:	6803      	ldr	r3, [r0, #0]
 8014418:	681b      	ldr	r3, [r3, #0]
 801441a:	4718      	bx	r3

0801441c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801441c:	4b06      	ldr	r3, [pc, #24]	; (8014438 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801441e:	60c1      	str	r1, [r0, #12]
 8014420:	094a      	lsrs	r2, r1, #5
 8014422:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8014426:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801442a:	4313      	orrs	r3, r2
 801442c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8014430:	4319      	orrs	r1, r3
 8014432:	8201      	strh	r1, [r0, #16]
 8014434:	4770      	bx	lr
 8014436:	bf00      	nop
 8014438:	fffff800 	.word	0xfffff800

0801443c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801443c:	f1a0 0008 	sub.w	r0, r0, #8
 8014440:	e7ec      	b.n	801441c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8014442:	bf00      	nop

08014444 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8014444:	b508      	push	{r3, lr}
 8014446:	4b05      	ldr	r3, [pc, #20]	; (801445c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8014448:	6818      	ldr	r0, [r3, #0]
 801444a:	6803      	ldr	r3, [r0, #0]
 801444c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8014450:	4798      	blx	r3
 8014452:	1e43      	subs	r3, r0, #1
 8014454:	4258      	negs	r0, r3
 8014456:	4158      	adcs	r0, r3
 8014458:	bd08      	pop	{r3, pc}
 801445a:	bf00      	nop
 801445c:	2001383c 	.word	0x2001383c

08014460 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8014460:	4770      	bx	lr

08014462 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8014462:	3808      	subs	r0, #8
 8014464:	4770      	bx	lr

08014466 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8014466:	b430      	push	{r4, r5}
 8014468:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801446c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8014470:	8a02      	ldrh	r2, [r0, #16]
 8014472:	9202      	str	r2, [sp, #8]
 8014474:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8014478:	68c2      	ldr	r2, [r0, #12]
 801447a:	4629      	mov	r1, r5
 801447c:	4620      	mov	r0, r4
 801447e:	bc30      	pop	{r4, r5}
 8014480:	f7ee bf62 	b.w	8003348 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08014484 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8014484:	f7ee bf5e 	b.w	8003344 <_ZN8touchgfx5paint8tearDownEv>

08014488 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8014488:	b510      	push	{r4, lr}
 801448a:	2114      	movs	r1, #20
 801448c:	4604      	mov	r4, r0
 801448e:	f018 fb80 	bl	802cb92 <_ZdlPvj>
 8014492:	4620      	mov	r0, r4
 8014494:	bd10      	pop	{r4, pc}

08014496 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8014496:	f1a0 0008 	sub.w	r0, r0, #8
 801449a:	e7f5      	b.n	8014488 <_ZN8touchgfx13PainterRGB565D0Ev>

0801449c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801449c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801449e:	6803      	ldr	r3, [r0, #0]
 80144a0:	460d      	mov	r5, r1
 80144a2:	4604      	mov	r4, r0
 80144a4:	4601      	mov	r1, r0
 80144a6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80144a8:	a802      	add	r0, sp, #8
 80144aa:	4798      	blx	r3
 80144ac:	6828      	ldr	r0, [r5, #0]
 80144ae:	6869      	ldr	r1, [r5, #4]
 80144b0:	466b      	mov	r3, sp
 80144b2:	c303      	stmia	r3!, {r0, r1}
 80144b4:	4668      	mov	r0, sp
 80144b6:	4619      	mov	r1, r3
 80144b8:	f7fe fb30 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 80144bc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80144be:	b188      	cbz	r0, 80144e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144c0:	6803      	ldr	r3, [r0, #0]
 80144c2:	1d21      	adds	r1, r4, #4
 80144c4:	68db      	ldr	r3, [r3, #12]
 80144c6:	4798      	blx	r3
 80144c8:	b160      	cbz	r0, 80144e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144ca:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80144ce:	2b00      	cmp	r3, #0
 80144d0:	dd08      	ble.n	80144e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144d2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80144d6:	2d00      	cmp	r5, #0
 80144d8:	dd04      	ble.n	80144e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144da:	4a2b      	ldr	r2, [pc, #172]	; (8014588 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80144dc:	7812      	ldrb	r2, [r2, #0]
 80144de:	b11a      	cbz	r2, 80144e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80144e0:	2a01      	cmp	r2, #1
 80144e2:	d029      	beq.n	8014538 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80144e4:	b004      	add	sp, #16
 80144e6:	bd70      	pop	{r4, r5, r6, pc}
 80144e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80144ec:	441d      	add	r5, r3
 80144ee:	b2ad      	uxth	r5, r5
 80144f0:	b22e      	sxth	r6, r5
 80144f2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80144f6:	42b3      	cmp	r3, r6
 80144f8:	daf4      	bge.n	80144e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144fa:	6823      	ldr	r3, [r4, #0]
 80144fc:	4669      	mov	r1, sp
 80144fe:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014500:	4620      	mov	r0, r4
 8014502:	4798      	blx	r3
 8014504:	b940      	cbnz	r0, 8014518 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8014506:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801450a:	2b01      	cmp	r3, #1
 801450c:	d004      	beq.n	8014518 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801450e:	3301      	adds	r3, #1
 8014510:	105b      	asrs	r3, r3, #1
 8014512:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014516:	e7f0      	b.n	80144fa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014518:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801451c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014520:	4413      	add	r3, r2
 8014522:	b29b      	uxth	r3, r3
 8014524:	441a      	add	r2, r3
 8014526:	b212      	sxth	r2, r2
 8014528:	4296      	cmp	r6, r2
 801452a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801452e:	dae0      	bge.n	80144f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014530:	1aeb      	subs	r3, r5, r3
 8014532:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014536:	e7dc      	b.n	80144f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014538:	f8bd 5000 	ldrh.w	r5, [sp]
 801453c:	441d      	add	r5, r3
 801453e:	b2ad      	uxth	r5, r5
 8014540:	b22e      	sxth	r6, r5
 8014542:	f9bd 3000 	ldrsh.w	r3, [sp]
 8014546:	42b3      	cmp	r3, r6
 8014548:	dacc      	bge.n	80144e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801454a:	6823      	ldr	r3, [r4, #0]
 801454c:	4669      	mov	r1, sp
 801454e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014550:	4620      	mov	r0, r4
 8014552:	4798      	blx	r3
 8014554:	b940      	cbnz	r0, 8014568 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014556:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801455a:	2b01      	cmp	r3, #1
 801455c:	d004      	beq.n	8014568 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801455e:	3301      	adds	r3, #1
 8014560:	105b      	asrs	r3, r3, #1
 8014562:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014566:	e7f0      	b.n	801454a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8014568:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801456c:	f8bd 3000 	ldrh.w	r3, [sp]
 8014570:	4413      	add	r3, r2
 8014572:	b29b      	uxth	r3, r3
 8014574:	441a      	add	r2, r3
 8014576:	b212      	sxth	r2, r2
 8014578:	4296      	cmp	r6, r2
 801457a:	f8ad 3000 	strh.w	r3, [sp]
 801457e:	dae0      	bge.n	8014542 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014580:	1aeb      	subs	r3, r5, r3
 8014582:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014586:	e7dc      	b.n	8014542 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014588:	20013834 	.word	0x20013834

0801458c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801458c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801458e:	6803      	ldr	r3, [r0, #0]
 8014590:	4604      	mov	r4, r0
 8014592:	4601      	mov	r1, r0
 8014594:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014596:	4668      	mov	r0, sp
 8014598:	4798      	blx	r3
 801459a:	2100      	movs	r1, #0
 801459c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80145a0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80145a4:	9102      	str	r1, [sp, #8]
 80145a6:	4668      	mov	r0, sp
 80145a8:	a902      	add	r1, sp, #8
 80145aa:	f8ad 200c 	strh.w	r2, [sp, #12]
 80145ae:	f8ad 300e 	strh.w	r3, [sp, #14]
 80145b2:	f7fe fab3 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 80145b6:	6823      	ldr	r3, [r4, #0]
 80145b8:	4669      	mov	r1, sp
 80145ba:	691b      	ldr	r3, [r3, #16]
 80145bc:	4620      	mov	r0, r4
 80145be:	4798      	blx	r3
 80145c0:	b004      	add	sp, #16
 80145c2:	bd10      	pop	{r4, pc}

080145c4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80145c4:	2101      	movs	r1, #1
 80145c6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80145ca:	490b      	ldr	r1, [pc, #44]	; (80145f8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80145cc:	6001      	str	r1, [r0, #0]
 80145ce:	2200      	movs	r2, #0
 80145d0:	21ff      	movs	r1, #255	; 0xff
 80145d2:	8082      	strh	r2, [r0, #4]
 80145d4:	80c2      	strh	r2, [r0, #6]
 80145d6:	8102      	strh	r2, [r0, #8]
 80145d8:	8142      	strh	r2, [r0, #10]
 80145da:	8182      	strh	r2, [r0, #12]
 80145dc:	81c2      	strh	r2, [r0, #14]
 80145de:	8202      	strh	r2, [r0, #16]
 80145e0:	8242      	strh	r2, [r0, #18]
 80145e2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80145e6:	61c2      	str	r2, [r0, #28]
 80145e8:	8402      	strh	r2, [r0, #32]
 80145ea:	8442      	strh	r2, [r0, #34]	; 0x22
 80145ec:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80145f0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80145f4:	6282      	str	r2, [r0, #40]	; 0x28
 80145f6:	4770      	bx	lr
 80145f8:	080317dc 	.word	0x080317dc

080145fc <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80145fc:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8014600:	4602      	mov	r2, r0
 8014602:	cb03      	ldmia	r3!, {r0, r1}
 8014604:	6010      	str	r0, [r2, #0]
 8014606:	6051      	str	r1, [r2, #4]
 8014608:	4610      	mov	r0, r2
 801460a:	4770      	bx	lr

0801460c <_ZN8touchgfx4LineD1Ev>:
 801460c:	4770      	bx	lr

0801460e <_ZN8touchgfx4LineD0Ev>:
 801460e:	b510      	push	{r4, lr}
 8014610:	2170      	movs	r1, #112	; 0x70
 8014612:	4604      	mov	r4, r0
 8014614:	f018 fabd 	bl	802cb92 <_ZdlPvj>
 8014618:	4620      	mov	r0, r4
 801461a:	bd10      	pop	{r4, pc}

0801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801461c:	b507      	push	{r0, r1, r2, lr}
 801461e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8014622:	ab01      	add	r3, sp, #4
 8014624:	6809      	ldr	r1, [r1, #0]
 8014626:	6800      	ldr	r0, [r0, #0]
 8014628:	f005 fc80 	bl	8019f2c <_ZN8touchgfx6muldivElllRl>
 801462c:	b003      	add	sp, #12
 801462e:	f85d fb04 	ldr.w	pc, [sp], #4

08014632 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8014632:	6800      	ldr	r0, [r0, #0]
 8014634:	2800      	cmp	r0, #0
 8014636:	bfb9      	ittee	lt
 8014638:	2320      	movlt	r3, #32
 801463a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801463e:	301f      	addge	r0, #31
 8014640:	1140      	asrge	r0, r0, #5
 8014642:	4770      	bx	lr

08014644 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8014644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014648:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801464c:	b089      	sub	sp, #36	; 0x24
 801464e:	4604      	mov	r4, r0
 8014650:	b353      	cbz	r3, 80146a8 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8014652:	6803      	ldr	r3, [r0, #0]
 8014654:	4601      	mov	r1, r0
 8014656:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014658:	a802      	add	r0, sp, #8
 801465a:	4798      	blx	r3
 801465c:	2220      	movs	r2, #32
 801465e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8014662:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014664:	fb9a f0f2 	sdiv	r0, sl, r2
 8014668:	fb91 f5f2 	sdiv	r5, r1, r2
 801466c:	1b40      	subs	r0, r0, r5
 801466e:	2800      	cmp	r0, #0
 8014670:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8014672:	fb93 f6f2 	sdiv	r6, r3, r2
 8014676:	bfb8      	it	lt
 8014678:	4240      	neglt	r0, r0
 801467a:	0076      	lsls	r6, r6, #1
 801467c:	4286      	cmp	r6, r0
 801467e:	f8d4 b000 	ldr.w	fp, [r4]
 8014682:	dc0c      	bgt.n	801469e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8014684:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8014686:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801468a:	fb95 f0f2 	sdiv	r0, r5, r2
 801468e:	fb98 f7f2 	sdiv	r7, r8, r2
 8014692:	1bc0      	subs	r0, r0, r7
 8014694:	2800      	cmp	r0, #0
 8014696:	bfb8      	it	lt
 8014698:	4240      	neglt	r0, r0
 801469a:	4286      	cmp	r6, r0
 801469c:	dd07      	ble.n	80146ae <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801469e:	f8db 3010 	ldr.w	r3, [fp, #16]
 80146a2:	a902      	add	r1, sp, #8
 80146a4:	4620      	mov	r0, r4
 80146a6:	4798      	blx	r3
 80146a8:	b009      	add	sp, #36	; 0x24
 80146aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146ae:	3301      	adds	r3, #1
 80146b0:	2002      	movs	r0, #2
 80146b2:	f10d 0920 	add.w	r9, sp, #32
 80146b6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80146ba:	4103      	asrs	r3, r0
 80146bc:	f849 3d08 	str.w	r3, [r9, #-8]!
 80146c0:	eb01 060a 	add.w	r6, r1, sl
 80146c4:	eb08 0705 	add.w	r7, r8, r5
 80146c8:	fb96 f6f0 	sdiv	r6, r6, r0
 80146cc:	fb97 f7f0 	sdiv	r7, r7, r0
 80146d0:	4648      	mov	r0, r9
 80146d2:	9101      	str	r1, [sp, #4]
 80146d4:	b236      	sxth	r6, r6
 80146d6:	b23f      	sxth	r7, r7
 80146d8:	fb96 f6f2 	sdiv	r6, r6, r2
 80146dc:	fb97 f7f2 	sdiv	r7, r7, r2
 80146e0:	f7ff ffa7 	bl	8014632 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80146e4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80146e8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80146ec:	9901      	ldr	r1, [sp, #4]
 80146ee:	4293      	cmp	r3, r2
 80146f0:	fa1f fe87 	uxth.w	lr, r7
 80146f4:	fa1f fc86 	uxth.w	ip, r6
 80146f8:	eba1 0a0a 	sub.w	sl, r1, sl
 80146fc:	b280      	uxth	r0, r0
 80146fe:	da54      	bge.n	80147aa <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8014700:	ebac 0100 	sub.w	r1, ip, r0
 8014704:	b289      	uxth	r1, r1
 8014706:	4460      	add	r0, ip
 8014708:	f1ba 0f00 	cmp.w	sl, #0
 801470c:	b20e      	sxth	r6, r1
 801470e:	b280      	uxth	r0, r0
 8014710:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8014714:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8014718:	da29      	bge.n	801476e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 801471a:	eba8 0505 	sub.w	r5, r8, r5
 801471e:	2d00      	cmp	r5, #0
 8014720:	da2a      	bge.n	8014778 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014722:	fa1f f88a 	uxth.w	r8, sl
 8014726:	eba0 0008 	sub.w	r0, r0, r8
 801472a:	fa1f f58c 	uxth.w	r5, ip
 801472e:	4443      	add	r3, r8
 8014730:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014734:	1a59      	subs	r1, r3, r1
 8014736:	ebae 0005 	sub.w	r0, lr, r5
 801473a:	f8ad a010 	strh.w	sl, [sp, #16]
 801473e:	f8ad c012 	strh.w	ip, [sp, #18]
 8014742:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014746:	f8ad 6018 	strh.w	r6, [sp, #24]
 801474a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801474e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014752:	442a      	add	r2, r5
 8014754:	eba2 0e0e 	sub.w	lr, r2, lr
 8014758:	f8ad e01e 	strh.w	lr, [sp, #30]
 801475c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014760:	a904      	add	r1, sp, #16
 8014762:	4620      	mov	r0, r4
 8014764:	4798      	blx	r3
 8014766:	6823      	ldr	r3, [r4, #0]
 8014768:	4649      	mov	r1, r9
 801476a:	691b      	ldr	r3, [r3, #16]
 801476c:	e79a      	b.n	80146a4 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801476e:	d003      	beq.n	8014778 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014770:	eba8 0505 	sub.w	r5, r8, r5
 8014774:	2d00      	cmp	r5, #0
 8014776:	dcd4      	bgt.n	8014722 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8014778:	fa1f f88a 	uxth.w	r8, sl
 801477c:	4443      	add	r3, r8
 801477e:	fa1f f58c 	uxth.w	r5, ip
 8014782:	1a59      	subs	r1, r3, r1
 8014784:	eba0 0008 	sub.w	r0, r0, r8
 8014788:	ebae 0305 	sub.w	r3, lr, r5
 801478c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8014790:	f8ad c012 	strh.w	ip, [sp, #18]
 8014794:	f8ad 1014 	strh.w	r1, [sp, #20]
 8014798:	f8ad 3016 	strh.w	r3, [sp, #22]
 801479c:	f8ad a018 	strh.w	sl, [sp, #24]
 80147a0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80147a4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80147a8:	e7d3      	b.n	8014752 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80147aa:	ebae 0100 	sub.w	r1, lr, r0
 80147ae:	b289      	uxth	r1, r1
 80147b0:	4470      	add	r0, lr
 80147b2:	f1ba 0f00 	cmp.w	sl, #0
 80147b6:	b20f      	sxth	r7, r1
 80147b8:	b280      	uxth	r0, r0
 80147ba:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80147be:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80147c2:	da20      	bge.n	8014806 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80147c4:	eba8 0505 	sub.w	r5, r8, r5
 80147c8:	2d00      	cmp	r5, #0
 80147ca:	da21      	bge.n	8014810 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80147cc:	fa1f f88e 	uxth.w	r8, lr
 80147d0:	fa1f f58a 	uxth.w	r5, sl
 80147d4:	4443      	add	r3, r8
 80147d6:	442a      	add	r2, r5
 80147d8:	f8ad e010 	strh.w	lr, [sp, #16]
 80147dc:	1b40      	subs	r0, r0, r5
 80147de:	ebac 0e08 	sub.w	lr, ip, r8
 80147e2:	1a51      	subs	r1, r2, r1
 80147e4:	eba3 0c0c 	sub.w	ip, r3, ip
 80147e8:	f8ad a012 	strh.w	sl, [sp, #18]
 80147ec:	f8ad e014 	strh.w	lr, [sp, #20]
 80147f0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80147f4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80147f8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80147fc:	f8ad c01c 	strh.w	ip, [sp, #28]
 8014800:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014804:	e7aa      	b.n	801475c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8014806:	d003      	beq.n	8014810 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8014808:	eba8 0505 	sub.w	r5, r8, r5
 801480c:	2d00      	cmp	r5, #0
 801480e:	dcdd      	bgt.n	80147cc <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8014810:	fa1f f58e 	uxth.w	r5, lr
 8014814:	fa1f f88a 	uxth.w	r8, sl
 8014818:	4442      	add	r2, r8
 801481a:	442b      	add	r3, r5
 801481c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8014820:	1a51      	subs	r1, r2, r1
 8014822:	ebac 0705 	sub.w	r7, ip, r5
 8014826:	eba0 0008 	sub.w	r0, r0, r8
 801482a:	eba3 0c0c 	sub.w	ip, r3, ip
 801482e:	f8ad e010 	strh.w	lr, [sp, #16]
 8014832:	f8ad 7014 	strh.w	r7, [sp, #20]
 8014836:	f8ad 1016 	strh.w	r1, [sp, #22]
 801483a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801483e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8014842:	f8ad c01c 	strh.w	ip, [sp, #28]
 8014846:	f8ad 001e 	strh.w	r0, [sp, #30]
 801484a:	e787      	b.n	801475c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801484c <_ZN8touchgfx7CWRUtil4sineEi>:
 801484c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8014850:	fb90 f2f3 	sdiv	r2, r0, r3
 8014854:	fb02 0013 	mls	r0, r2, r3, r0
 8014858:	2800      	cmp	r0, #0
 801485a:	bfb8      	it	lt
 801485c:	18c0      	addlt	r0, r0, r3
 801485e:	285a      	cmp	r0, #90	; 0x5a
 8014860:	4b09      	ldr	r3, [pc, #36]	; (8014888 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8014862:	dc02      	bgt.n	801486a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8014864:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014868:	4770      	bx	lr
 801486a:	28b4      	cmp	r0, #180	; 0xb4
 801486c:	dc02      	bgt.n	8014874 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801486e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8014872:	e7f7      	b.n	8014864 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8014874:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8014878:	bfd4      	ite	le
 801487a:	38b4      	suble	r0, #180	; 0xb4
 801487c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8014880:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014884:	4240      	negs	r0, r0
 8014886:	4770      	bx	lr
 8014888:	080318a8 	.word	0x080318a8

0801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801488c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8014890:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014892:	fb90 f2f3 	sdiv	r2, r0, r3
 8014896:	fb02 0013 	mls	r0, r2, r3, r0
 801489a:	2800      	cmp	r0, #0
 801489c:	bfb8      	it	lt
 801489e:	18c0      	addlt	r0, r0, r3
 80148a0:	1144      	asrs	r4, r0, #5
 80148a2:	f000 061f 	and.w	r6, r0, #31
 80148a6:	4620      	mov	r0, r4
 80148a8:	f7ff ffd0 	bl	801484c <_ZN8touchgfx7CWRUtil4sineEi>
 80148ac:	4605      	mov	r5, r0
 80148ae:	b90e      	cbnz	r6, 80148b4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80148b0:	b002      	add	sp, #8
 80148b2:	bd70      	pop	{r4, r5, r6, pc}
 80148b4:	1c60      	adds	r0, r4, #1
 80148b6:	f7ff ffc9 	bl	801484c <_ZN8touchgfx7CWRUtil4sineEi>
 80148ba:	ab01      	add	r3, sp, #4
 80148bc:	2220      	movs	r2, #32
 80148be:	4631      	mov	r1, r6
 80148c0:	1b40      	subs	r0, r0, r5
 80148c2:	f005 fb33 	bl	8019f2c <_ZN8touchgfx6muldivElllRl>
 80148c6:	4428      	add	r0, r5
 80148c8:	e7f2      	b.n	80148b0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080148ca <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80148ca:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80148ce:	bf2c      	ite	cs
 80148d0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80148d4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80148d8:	2300      	movs	r3, #0
 80148da:	1899      	adds	r1, r3, r2
 80148dc:	4288      	cmp	r0, r1
 80148de:	bf24      	itt	cs
 80148e0:	1853      	addcs	r3, r2, r1
 80148e2:	1a40      	subcs	r0, r0, r1
 80148e4:	0892      	lsrs	r2, r2, #2
 80148e6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80148ea:	d1f6      	bne.n	80148da <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80148ec:	4618      	mov	r0, r3
 80148ee:	4770      	bx	lr

080148f0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80148f0:	b510      	push	{r4, lr}
 80148f2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80148f6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80148fa:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80148fe:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8014902:	13a4      	asrs	r4, r4, #14
 8014904:	139b      	asrs	r3, r3, #14
 8014906:	429c      	cmp	r4, r3
 8014908:	bfb8      	it	lt
 801490a:	461c      	movlt	r4, r3
 801490c:	2c01      	cmp	r4, #1
 801490e:	dd07      	ble.n	8014920 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8014910:	fb91 f1f4 	sdiv	r1, r1, r4
 8014914:	fb90 f0f4 	sdiv	r0, r0, r4
 8014918:	f7ff ffea 	bl	80148f0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801491c:	4360      	muls	r0, r4
 801491e:	bd10      	pop	{r4, pc}
 8014920:	4340      	muls	r0, r0
 8014922:	fb01 0001 	mla	r0, r1, r1, r0
 8014926:	f7ff ffd0 	bl	80148ca <_ZN8touchgfx7CWRUtil5isqrtEm>
 801492a:	e7f8      	b.n	801491e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801492c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 801492c:	2800      	cmp	r0, #0
 801492e:	b508      	push	{r3, lr}
 8014930:	da05      	bge.n	801493e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8014932:	4240      	negs	r0, r0
 8014934:	f7ff fffa 	bl	801492c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014938:	4240      	negs	r0, r0
 801493a:	b240      	sxtb	r0, r0
 801493c:	bd08      	pop	{r3, pc}
 801493e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8014942:	dc11      	bgt.n	8014968 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8014944:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8014948:	dd09      	ble.n	801495e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801494a:	4340      	muls	r0, r0
 801494c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8014950:	f7ff ffbb 	bl	80148ca <_ZN8touchgfx7CWRUtil5isqrtEm>
 8014954:	f7ff ffea 	bl	801492c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014958:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801495c:	e7ed      	b.n	801493a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 801495e:	3003      	adds	r0, #3
 8014960:	10c0      	asrs	r0, r0, #3
 8014962:	4b02      	ldr	r3, [pc, #8]	; (801496c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8014964:	5618      	ldrsb	r0, [r3, r0]
 8014966:	e7e9      	b.n	801493c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8014968:	2000      	movs	r0, #0
 801496a:	e7e7      	b.n	801493c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 801496c:	0803184c 	.word	0x0803184c

08014970 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8014970:	4281      	cmp	r1, r0
 8014972:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014974:	460c      	mov	r4, r1
 8014976:	4615      	mov	r5, r2
 8014978:	dd07      	ble.n	801498a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 801497a:	4601      	mov	r1, r0
 801497c:	4620      	mov	r0, r4
 801497e:	f7ff fff7 	bl	8014970 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014982:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014986:	b003      	add	sp, #12
 8014988:	bd30      	pop	{r4, r5, pc}
 801498a:	f7ff ffb1 	bl	80148f0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801498e:	6028      	str	r0, [r5, #0]
 8014990:	2800      	cmp	r0, #0
 8014992:	d0f8      	beq.n	8014986 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8014994:	4602      	mov	r2, r0
 8014996:	ab01      	add	r3, sp, #4
 8014998:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801499c:	4620      	mov	r0, r4
 801499e:	f005 fac5 	bl	8019f2c <_ZN8touchgfx6muldivElllRl>
 80149a2:	f7ff ffc3 	bl	801492c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80149a6:	e7ee      	b.n	8014986 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080149a8 <_ZN8touchgfx4LineC1Ev>:
 80149a8:	b510      	push	{r4, lr}
 80149aa:	4604      	mov	r4, r0
 80149ac:	f7ff fe0a 	bl	80145c4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80149b0:	4b0c      	ldr	r3, [pc, #48]	; (80149e4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 80149b2:	6023      	str	r3, [r4, #0]
 80149b4:	2220      	movs	r2, #32
 80149b6:	2300      	movs	r3, #0
 80149b8:	63e2      	str	r2, [r4, #60]	; 0x3c
 80149ba:	2212      	movs	r2, #18
 80149bc:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80149c0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80149c4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80149c8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80149cc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80149d0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80149d4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80149d8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80149dc:	66e2      	str	r2, [r4, #108]	; 0x6c
 80149de:	60a3      	str	r3, [r4, #8]
 80149e0:	4620      	mov	r0, r4
 80149e2:	bd10      	pop	{r4, pc}
 80149e4:	08031968 	.word	0x08031968

080149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80149e8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80149ec:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80149ee:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80149f0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80149f2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80149f4:	1aff      	subs	r7, r7, r3
 80149f6:	4604      	mov	r4, r0
 80149f8:	eba5 0502 	sub.w	r5, r5, r2
 80149fc:	d142      	bne.n	8014a84 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80149fe:	b955      	cbnz	r5, 8014a16 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8014a00:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8014a04:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8014a08:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8014a0c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8014a10:	b002      	add	sp, #8
 8014a12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014a16:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8014a1a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8014a1e:	4629      	mov	r1, r5
 8014a20:	4642      	mov	r2, r8
 8014a22:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014a24:	f005 faa1 	bl	8019f6a <_ZN8touchgfx6muldivElll>
 8014a28:	2502      	movs	r5, #2
 8014a2a:	4642      	mov	r2, r8
 8014a2c:	fb90 f6f5 	sdiv	r6, r0, r5
 8014a30:	4639      	mov	r1, r7
 8014a32:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014a34:	f005 fa99 	bl	8019f6a <_ZN8touchgfx6muldivElll>
 8014a38:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8014a3c:	fb90 f5f5 	sdiv	r5, r0, r5
 8014a40:	f1b9 0f00 	cmp.w	r9, #0
 8014a44:	d067      	beq.n	8014b16 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8014a46:	f1b9 0f02 	cmp.w	r9, #2
 8014a4a:	d878      	bhi.n	8014b3e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8014a4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014a4e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014a50:	1b93      	subs	r3, r2, r6
 8014a52:	1b5b      	subs	r3, r3, r5
 8014a54:	6463      	str	r3, [r4, #68]	; 0x44
 8014a56:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014a58:	18e9      	adds	r1, r5, r3
 8014a5a:	1b89      	subs	r1, r1, r6
 8014a5c:	6561      	str	r1, [r4, #84]	; 0x54
 8014a5e:	1b81      	subs	r1, r0, r6
 8014a60:	4429      	add	r1, r5
 8014a62:	64a1      	str	r1, [r4, #72]	; 0x48
 8014a64:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014a66:	4430      	add	r0, r6
 8014a68:	186f      	adds	r7, r5, r1
 8014a6a:	4432      	add	r2, r6
 8014a6c:	1b49      	subs	r1, r1, r5
 8014a6e:	4437      	add	r7, r6
 8014a70:	4428      	add	r0, r5
 8014a72:	4431      	add	r1, r6
 8014a74:	1b52      	subs	r2, r2, r5
 8014a76:	1b5b      	subs	r3, r3, r5
 8014a78:	65a7      	str	r7, [r4, #88]	; 0x58
 8014a7a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014a7c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014a7e:	6522      	str	r2, [r4, #80]	; 0x50
 8014a80:	1b9b      	subs	r3, r3, r6
 8014a82:	e05b      	b.n	8014b3c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8014a84:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8014a88:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8014a8c:	2d00      	cmp	r5, #0
 8014a8e:	d0c6      	beq.n	8014a1e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014a90:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8014a94:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8014a98:	fb93 f2f8 	sdiv	r2, r3, r8
 8014a9c:	fb08 3312 	mls	r3, r8, r2, r3
 8014aa0:	b353      	cbz	r3, 8014af8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8014aa2:	fb98 f2f3 	sdiv	r2, r8, r3
 8014aa6:	fb03 8812 	mls	r8, r3, r2, r8
 8014aaa:	f1b8 0f00 	cmp.w	r8, #0
 8014aae:	d1f3      	bne.n	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8014ab0:	2b01      	cmp	r3, #1
 8014ab2:	bf1c      	itt	ne
 8014ab4:	fb95 f5f3 	sdivne	r5, r5, r3
 8014ab8:	fb97 f7f3 	sdivne	r7, r7, r3
 8014abc:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8014ac0:	f24b 5104 	movw	r1, #46340	; 0xb504
 8014ac4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8014ac8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8014acc:	428b      	cmp	r3, r1
 8014ace:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8014ad2:	4608      	mov	r0, r1
 8014ad4:	dd01      	ble.n	8014ada <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8014ad6:	428a      	cmp	r2, r1
 8014ad8:	dc10      	bgt.n	8014afc <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8014ada:	fb90 f3f3 	sdiv	r3, r0, r3
 8014ade:	fb90 f2f2 	sdiv	r2, r0, r2
 8014ae2:	4293      	cmp	r3, r2
 8014ae4:	bfa8      	it	ge
 8014ae6:	4613      	movge	r3, r2
 8014ae8:	435f      	muls	r7, r3
 8014aea:	435d      	muls	r5, r3
 8014aec:	4629      	mov	r1, r5
 8014aee:	4638      	mov	r0, r7
 8014af0:	f7ff fefe 	bl	80148f0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014af4:	4680      	mov	r8, r0
 8014af6:	e792      	b.n	8014a1e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014af8:	4643      	mov	r3, r8
 8014afa:	e7d9      	b.n	8014ab0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8014afc:	fb93 f3f1 	sdiv	r3, r3, r1
 8014b00:	fb92 f2f1 	sdiv	r2, r2, r1
 8014b04:	4293      	cmp	r3, r2
 8014b06:	bfcc      	ite	gt
 8014b08:	3301      	addgt	r3, #1
 8014b0a:	1c53      	addle	r3, r2, #1
 8014b0c:	fb97 f7f3 	sdiv	r7, r7, r3
 8014b10:	fb95 f5f3 	sdiv	r5, r5, r3
 8014b14:	e7ea      	b.n	8014aec <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8014b16:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014b18:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014b1a:	1b93      	subs	r3, r2, r6
 8014b1c:	6463      	str	r3, [r4, #68]	; 0x44
 8014b1e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014b20:	18e9      	adds	r1, r5, r3
 8014b22:	6561      	str	r1, [r4, #84]	; 0x54
 8014b24:	1b81      	subs	r1, r0, r6
 8014b26:	64a1      	str	r1, [r4, #72]	; 0x48
 8014b28:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014b2a:	4430      	add	r0, r6
 8014b2c:	186f      	adds	r7, r5, r1
 8014b2e:	4432      	add	r2, r6
 8014b30:	1b49      	subs	r1, r1, r5
 8014b32:	65a7      	str	r7, [r4, #88]	; 0x58
 8014b34:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014b36:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014b38:	6522      	str	r2, [r4, #80]	; 0x50
 8014b3a:	1b5b      	subs	r3, r3, r5
 8014b3c:	6623      	str	r3, [r4, #96]	; 0x60
 8014b3e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8014b40:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8014b42:	9200      	str	r2, [sp, #0]
 8014b44:	9301      	str	r3, [sp, #4]
 8014b46:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8014b4a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8014b4e:	680f      	ldr	r7, [r1, #0]
 8014b50:	9800      	ldr	r0, [sp, #0]
 8014b52:	42ba      	cmp	r2, r7
 8014b54:	bfa8      	it	ge
 8014b56:	463a      	movge	r2, r7
 8014b58:	4287      	cmp	r7, r0
 8014b5a:	bfc8      	it	gt
 8014b5c:	9700      	strgt	r7, [sp, #0]
 8014b5e:	690f      	ldr	r7, [r1, #16]
 8014b60:	9801      	ldr	r0, [sp, #4]
 8014b62:	42bb      	cmp	r3, r7
 8014b64:	bfa8      	it	ge
 8014b66:	463b      	movge	r3, r7
 8014b68:	3104      	adds	r1, #4
 8014b6a:	4287      	cmp	r7, r0
 8014b6c:	bfc8      	it	gt
 8014b6e:	9701      	strgt	r7, [sp, #4]
 8014b70:	458c      	cmp	ip, r1
 8014b72:	d1ec      	bne.n	8014b4e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8014b74:	4668      	mov	r0, sp
 8014b76:	2720      	movs	r7, #32
 8014b78:	fb92 f8f7 	sdiv	r8, r2, r7
 8014b7c:	fb93 f7f7 	sdiv	r7, r3, r7
 8014b80:	f7ff fd57 	bl	8014632 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014b84:	4682      	mov	sl, r0
 8014b86:	a801      	add	r0, sp, #4
 8014b88:	f7ff fd53 	bl	8014632 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014b8c:	ebaa 0208 	sub.w	r2, sl, r8
 8014b90:	1bc0      	subs	r0, r0, r7
 8014b92:	f1b9 0f01 	cmp.w	r9, #1
 8014b96:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8014b9a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8014b9e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8014ba2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8014ba6:	f47f af33 	bne.w	8014a10 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8014baa:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8014bac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014bae:	1b83      	subs	r3, r0, r6
 8014bb0:	6463      	str	r3, [r4, #68]	; 0x44
 8014bb2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014bb4:	18ea      	adds	r2, r5, r3
 8014bb6:	6562      	str	r2, [r4, #84]	; 0x54
 8014bb8:	1b8a      	subs	r2, r1, r6
 8014bba:	64a2      	str	r2, [r4, #72]	; 0x48
 8014bbc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014bbe:	4431      	add	r1, r6
 8014bc0:	18af      	adds	r7, r5, r2
 8014bc2:	4406      	add	r6, r0
 8014bc4:	1b52      	subs	r2, r2, r5
 8014bc6:	1b5d      	subs	r5, r3, r5
 8014bc8:	65a7      	str	r7, [r4, #88]	; 0x58
 8014bca:	64e1      	str	r1, [r4, #76]	; 0x4c
 8014bcc:	65e2      	str	r2, [r4, #92]	; 0x5c
 8014bce:	6526      	str	r6, [r4, #80]	; 0x50
 8014bd0:	6625      	str	r5, [r4, #96]	; 0x60
 8014bd2:	e71d      	b.n	8014a10 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08014bd4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8014bd4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014bd6:	428b      	cmp	r3, r1
 8014bd8:	d102      	bne.n	8014be0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8014bda:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014bdc:	4293      	cmp	r3, r2
 8014bde:	d003      	beq.n	8014be8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8014be0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8014be4:	f7ff bf00 	b.w	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014be8:	4770      	bx	lr

08014bea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8014bea:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8014bec:	428b      	cmp	r3, r1
 8014bee:	d102      	bne.n	8014bf6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8014bf0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014bf2:	4293      	cmp	r3, r2
 8014bf4:	d003      	beq.n	8014bfe <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8014bf6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8014bfa:	f7ff bef5 	b.w	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014bfe:	4770      	bx	lr

08014c00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8014c00:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8014c04:	f7ff bef0 	b.w	80149e8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08014c08 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8014c08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014c0c:	b0a0      	sub	sp, #128	; 0x80
 8014c0e:	4604      	mov	r4, r0
 8014c10:	460a      	mov	r2, r1
 8014c12:	4601      	mov	r1, r0
 8014c14:	a804      	add	r0, sp, #16
 8014c16:	f015 f845 	bl	8029ca4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014c1a:	2300      	movs	r3, #0
 8014c1c:	9301      	str	r3, [sp, #4]
 8014c1e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8014c22:	2b01      	cmp	r3, #1
 8014c24:	d17c      	bne.n	8014d20 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8014c26:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014c28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014c2a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8014c2c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014c2e:	1ac0      	subs	r0, r0, r3
 8014c30:	eba1 0102 	sub.w	r1, r1, r2
 8014c34:	d437      	bmi.n	8014ca6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8014c36:	2900      	cmp	r1, #0
 8014c38:	aa01      	add	r2, sp, #4
 8014c3a:	db2e      	blt.n	8014c9a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8014c3c:	f7ff fe98 	bl	8014970 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c40:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8014c44:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014c46:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014c48:	a804      	add	r0, sp, #16
 8014c4a:	f015 f9ab 	bl	8029fa4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014c4e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014c50:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014c52:	a804      	add	r0, sp, #16
 8014c54:	f015 f9f3 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c58:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014c5a:	2db3      	cmp	r5, #179	; 0xb3
 8014c5c:	dc33      	bgt.n	8014cc6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8014c5e:	eba6 0805 	sub.w	r8, r6, r5
 8014c62:	4640      	mov	r0, r8
 8014c64:	f7ff fdf2 	bl	801484c <_ZN8touchgfx7CWRUtil4sineEi>
 8014c68:	a902      	add	r1, sp, #8
 8014c6a:	9002      	str	r0, [sp, #8]
 8014c6c:	a801      	add	r0, sp, #4
 8014c6e:	f7ff fcd5 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c72:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014c74:	1847      	adds	r7, r0, r1
 8014c76:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014c7a:	f7ff fde7 	bl	801484c <_ZN8touchgfx7CWRUtil4sineEi>
 8014c7e:	a903      	add	r1, sp, #12
 8014c80:	9003      	str	r0, [sp, #12]
 8014c82:	a801      	add	r0, sp, #4
 8014c84:	f7ff fcca 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c88:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014c8a:	4639      	mov	r1, r7
 8014c8c:	1a12      	subs	r2, r2, r0
 8014c8e:	a804      	add	r0, sp, #16
 8014c90:	f015 f9d5 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c94:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014c96:	441d      	add	r5, r3
 8014c98:	e7df      	b.n	8014c5a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8014c9a:	4249      	negs	r1, r1
 8014c9c:	f7ff fe68 	bl	8014970 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014ca0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8014ca4:	e7ce      	b.n	8014c44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014ca6:	2900      	cmp	r1, #0
 8014ca8:	f1c0 0000 	rsb	r0, r0, #0
 8014cac:	aa01      	add	r2, sp, #4
 8014cae:	db04      	blt.n	8014cba <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8014cb0:	f7ff fe5e 	bl	8014970 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014cb4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8014cb8:	e7c4      	b.n	8014c44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014cba:	4249      	negs	r1, r1
 8014cbc:	f7ff fe58 	bl	8014970 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014cc0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8014cc4:	e7be      	b.n	8014c44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014cc6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014cc8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014cca:	a804      	add	r0, sp, #16
 8014ccc:	f015 f9b7 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cd0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014cd2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014cd4:	a804      	add	r0, sp, #16
 8014cd6:	f015 f9b2 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cda:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014cdc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8014ce0:	2d00      	cmp	r5, #0
 8014ce2:	dd31      	ble.n	8014d48 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8014ce4:	eb05 0806 	add.w	r8, r5, r6
 8014ce8:	4640      	mov	r0, r8
 8014cea:	f7ff fdaf 	bl	801484c <_ZN8touchgfx7CWRUtil4sineEi>
 8014cee:	a902      	add	r1, sp, #8
 8014cf0:	9002      	str	r0, [sp, #8]
 8014cf2:	a801      	add	r0, sp, #4
 8014cf4:	f7ff fc92 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cf8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014cfa:	1847      	adds	r7, r0, r1
 8014cfc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014d00:	f7ff fda4 	bl	801484c <_ZN8touchgfx7CWRUtil4sineEi>
 8014d04:	a903      	add	r1, sp, #12
 8014d06:	9003      	str	r0, [sp, #12]
 8014d08:	a801      	add	r0, sp, #4
 8014d0a:	f7ff fc87 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014d0e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014d10:	4639      	mov	r1, r7
 8014d12:	1a12      	subs	r2, r2, r0
 8014d14:	a804      	add	r0, sp, #16
 8014d16:	f015 f992 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d1a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014d1c:	1aed      	subs	r5, r5, r3
 8014d1e:	e7df      	b.n	8014ce0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8014d20:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014d22:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014d24:	a804      	add	r0, sp, #16
 8014d26:	f015 f93d 	bl	8029fa4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014d2a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014d2c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014d2e:	a804      	add	r0, sp, #16
 8014d30:	f015 f985 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d34:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014d36:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014d38:	a804      	add	r0, sp, #16
 8014d3a:	f015 f980 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d3e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014d40:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014d42:	a804      	add	r0, sp, #16
 8014d44:	f015 f97b 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d48:	21ff      	movs	r1, #255	; 0xff
 8014d4a:	a804      	add	r0, sp, #16
 8014d4c:	f015 f866 	bl	8029e1c <_ZN8touchgfx6Canvas6renderEh>
 8014d50:	4b04      	ldr	r3, [pc, #16]	; (8014d64 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8014d52:	9304      	str	r3, [sp, #16]
 8014d54:	4604      	mov	r4, r0
 8014d56:	a80c      	add	r0, sp, #48	; 0x30
 8014d58:	f001 fa98 	bl	801628c <_ZN8touchgfx7OutlineD1Ev>
 8014d5c:	4620      	mov	r0, r4
 8014d5e:	b020      	add	sp, #128	; 0x80
 8014d60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014d64:	08032214 	.word	0x08032214

08014d68 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014d68:	2000      	movs	r0, #0
 8014d6a:	4770      	bx	lr

08014d6c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014d6c:	4b07      	ldr	r3, [pc, #28]	; (8014d8c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8014d6e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014d70:	881b      	ldrh	r3, [r3, #0]
 8014d72:	4293      	cmp	r3, r2
 8014d74:	bf81      	itttt	hi
 8014d76:	4b06      	ldrhi	r3, [pc, #24]	; (8014d90 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014d78:	681b      	ldrhi	r3, [r3, #0]
 8014d7a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8014d7e:	7858      	ldrbhi	r0, [r3, #1]
 8014d80:	bf8c      	ite	hi
 8014d82:	f000 0003 	andhi.w	r0, r0, #3
 8014d86:	2000      	movls	r0, #0
 8014d88:	4770      	bx	lr
 8014d8a:	bf00      	nop
 8014d8c:	20013898 	.word	0x20013898
 8014d90:	20013894 	.word	0x20013894

08014d94 <_ZN8touchgfx8TextAreaD1Ev>:
 8014d94:	4770      	bx	lr
	...

08014d98 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014d98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d9c:	4b10      	ldr	r3, [pc, #64]	; (8014de0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014d9e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014da0:	881b      	ldrh	r3, [r3, #0]
 8014da2:	428b      	cmp	r3, r1
 8014da4:	4604      	mov	r4, r0
 8014da6:	d918      	bls.n	8014dda <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8014da8:	6803      	ldr	r3, [r0, #0]
 8014daa:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8014dac:	4b0d      	ldr	r3, [pc, #52]	; (8014de4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8014dae:	6818      	ldr	r0, [r3, #0]
 8014db0:	f7f5 fc76 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8014db4:	6823      	ldr	r3, [r4, #0]
 8014db6:	4606      	mov	r6, r0
 8014db8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014dba:	4620      	mov	r0, r4
 8014dbc:	4798      	blx	r3
 8014dbe:	6823      	ldr	r3, [r4, #0]
 8014dc0:	4607      	mov	r7, r0
 8014dc2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014dc6:	4620      	mov	r0, r4
 8014dc8:	4798      	blx	r3
 8014dca:	463a      	mov	r2, r7
 8014dcc:	4603      	mov	r3, r0
 8014dce:	4631      	mov	r1, r6
 8014dd0:	4620      	mov	r0, r4
 8014dd2:	46ac      	mov	ip, r5
 8014dd4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014dd8:	4760      	bx	ip
 8014dda:	2000      	movs	r0, #0
 8014ddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014de0:	20013898 	.word	0x20013898
 8014de4:	200138a0 	.word	0x200138a0

08014de8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8014de8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014dec:	4b17      	ldr	r3, [pc, #92]	; (8014e4c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8014dee:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014df0:	881b      	ldrh	r3, [r3, #0]
 8014df2:	428b      	cmp	r3, r1
 8014df4:	4604      	mov	r4, r0
 8014df6:	d926      	bls.n	8014e46 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8014df8:	4b15      	ldr	r3, [pc, #84]	; (8014e50 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8014dfa:	681b      	ldr	r3, [r3, #0]
 8014dfc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8014e00:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8014e04:	4b13      	ldr	r3, [pc, #76]	; (8014e54 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014e06:	7855      	ldrb	r5, [r2, #1]
 8014e08:	681b      	ldr	r3, [r3, #0]
 8014e0a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8014e0e:	6833      	ldr	r3, [r6, #0]
 8014e10:	69df      	ldr	r7, [r3, #28]
 8014e12:	4b11      	ldr	r3, [pc, #68]	; (8014e58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8014e14:	6818      	ldr	r0, [r3, #0]
 8014e16:	f7f5 fc43 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8014e1a:	6823      	ldr	r3, [r4, #0]
 8014e1c:	4680      	mov	r8, r0
 8014e1e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014e20:	4620      	mov	r0, r4
 8014e22:	4798      	blx	r3
 8014e24:	6823      	ldr	r3, [r4, #0]
 8014e26:	4681      	mov	r9, r0
 8014e28:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e2c:	4620      	mov	r0, r4
 8014e2e:	4798      	blx	r3
 8014e30:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8014e34:	9000      	str	r0, [sp, #0]
 8014e36:	464b      	mov	r3, r9
 8014e38:	4642      	mov	r2, r8
 8014e3a:	4629      	mov	r1, r5
 8014e3c:	4630      	mov	r0, r6
 8014e3e:	47b8      	blx	r7
 8014e40:	b003      	add	sp, #12
 8014e42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014e46:	2000      	movs	r0, #0
 8014e48:	e7fa      	b.n	8014e40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8014e4a:	bf00      	nop
 8014e4c:	20013898 	.word	0x20013898
 8014e50:	20013894 	.word	0x20013894
 8014e54:	2001389c 	.word	0x2001389c
 8014e58:	200138a0 	.word	0x200138a0

08014e5c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014e5c:	b40e      	push	{r1, r2, r3}
 8014e5e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014e62:	4b2f      	ldr	r3, [pc, #188]	; (8014f20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8014e64:	881a      	ldrh	r2, [r3, #0]
 8014e66:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014e68:	429a      	cmp	r2, r3
 8014e6a:	b09d      	sub	sp, #116	; 0x74
 8014e6c:	4604      	mov	r4, r0
 8014e6e:	d954      	bls.n	8014f1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014e70:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8014f24 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8014e74:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8014f28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8014e78:	aa26      	add	r2, sp, #152	; 0x98
 8014e7a:	9202      	str	r2, [sp, #8]
 8014e7c:	f8d9 2000 	ldr.w	r2, [r9]
 8014e80:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014e84:	f8d8 3000 	ldr.w	r3, [r8]
 8014e88:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014e8c:	682b      	ldr	r3, [r5, #0]
 8014e8e:	4628      	mov	r0, r5
 8014e90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014e92:	4798      	blx	r3
 8014e94:	b207      	sxth	r7, r0
 8014e96:	4606      	mov	r6, r0
 8014e98:	a803      	add	r0, sp, #12
 8014e9a:	f005 fc61 	bl	801a760 <_ZN8touchgfx12TextProviderC1Ev>
 8014e9e:	682b      	ldr	r3, [r5, #0]
 8014ea0:	4628      	mov	r0, r5
 8014ea2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014ea4:	4798      	blx	r3
 8014ea6:	682b      	ldr	r3, [r5, #0]
 8014ea8:	4682      	mov	sl, r0
 8014eaa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014eac:	4628      	mov	r0, r5
 8014eae:	4798      	blx	r3
 8014eb0:	4653      	mov	r3, sl
 8014eb2:	9000      	str	r0, [sp, #0]
 8014eb4:	9a02      	ldr	r2, [sp, #8]
 8014eb6:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014eb8:	a803      	add	r0, sp, #12
 8014eba:	f005 fcac 	bl	801a816 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014ebe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014ec0:	f8d9 3000 	ldr.w	r3, [r9]
 8014ec4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8014ec8:	8925      	ldrh	r5, [r4, #8]
 8014eca:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8014ece:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8014ed2:	eba5 050c 	sub.w	r5, r5, ip
 8014ed6:	784a      	ldrb	r2, [r1, #1]
 8014ed8:	f8d8 3000 	ldr.w	r3, [r8]
 8014edc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8014ee0:	b22d      	sxth	r5, r5
 8014ee2:	9500      	str	r5, [sp, #0]
 8014ee4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014ee8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014eec:	a803      	add	r0, sp, #12
 8014eee:	f003 f8b9 	bl	8018064 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8014ef2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8014ef6:	18b9      	adds	r1, r7, r2
 8014ef8:	2900      	cmp	r1, #0
 8014efa:	b203      	sxth	r3, r0
 8014efc:	dd0b      	ble.n	8014f16 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8014efe:	3b01      	subs	r3, #1
 8014f00:	fb13 f302 	smulbb	r3, r3, r2
 8014f04:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014f08:	b21f      	sxth	r7, r3
 8014f0a:	4638      	mov	r0, r7
 8014f0c:	b01d      	add	sp, #116	; 0x74
 8014f0e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014f12:	b003      	add	sp, #12
 8014f14:	4770      	bx	lr
 8014f16:	2b00      	cmp	r3, #0
 8014f18:	dcf7      	bgt.n	8014f0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014f1a:	2700      	movs	r7, #0
 8014f1c:	e7f5      	b.n	8014f0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014f1e:	bf00      	nop
 8014f20:	20013898 	.word	0x20013898
 8014f24:	20013894 	.word	0x20013894
 8014f28:	2001389c 	.word	0x2001389c

08014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8014f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f30:	4bbc      	ldr	r3, [pc, #752]	; (8015224 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8014f32:	460c      	mov	r4, r1
 8014f34:	881b      	ldrh	r3, [r3, #0]
 8014f36:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8014f38:	428b      	cmp	r3, r1
 8014f3a:	b0a9      	sub	sp, #164	; 0xa4
 8014f3c:	4680      	mov	r8, r0
 8014f3e:	d809      	bhi.n	8014f54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8014f40:	2300      	movs	r3, #0
 8014f42:	f04f 32ff 	mov.w	r2, #4294967295
 8014f46:	e9c0 3200 	strd	r3, r2, [r0]
 8014f4a:	6083      	str	r3, [r0, #8]
 8014f4c:	4640      	mov	r0, r8
 8014f4e:	b029      	add	sp, #164	; 0xa4
 8014f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f54:	4eb4      	ldr	r6, [pc, #720]	; (8015228 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8014f56:	6833      	ldr	r3, [r6, #0]
 8014f58:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8014f5c:	4bb3      	ldr	r3, [pc, #716]	; (801522c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8014f5e:	681b      	ldr	r3, [r3, #0]
 8014f60:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014f64:	4bb2      	ldr	r3, [pc, #712]	; (8015230 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8014f66:	6818      	ldr	r0, [r3, #0]
 8014f68:	f7f5 fb9a 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8014f6c:	682b      	ldr	r3, [r5, #0]
 8014f6e:	4681      	mov	r9, r0
 8014f70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014f72:	4628      	mov	r0, r5
 8014f74:	4798      	blx	r3
 8014f76:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8014f78:	b203      	sxth	r3, r0
 8014f7a:	4407      	add	r7, r0
 8014f7c:	9304      	str	r3, [sp, #16]
 8014f7e:	b2bb      	uxth	r3, r7
 8014f80:	9303      	str	r3, [sp, #12]
 8014f82:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014f86:	4682      	mov	sl, r0
 8014f88:	a80f      	add	r0, sp, #60	; 0x3c
 8014f8a:	2b00      	cmp	r3, #0
 8014f8c:	f040 80a6 	bne.w	80150dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8014f90:	f005 fbe6 	bl	801a760 <_ZN8touchgfx12TextProviderC1Ev>
 8014f94:	682b      	ldr	r3, [r5, #0]
 8014f96:	4628      	mov	r0, r5
 8014f98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014f9a:	4798      	blx	r3
 8014f9c:	682b      	ldr	r3, [r5, #0]
 8014f9e:	4606      	mov	r6, r0
 8014fa0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014fa2:	4628      	mov	r0, r5
 8014fa4:	4798      	blx	r3
 8014fa6:	6823      	ldr	r3, [r4, #0]
 8014fa8:	4607      	mov	r7, r0
 8014faa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014fac:	4620      	mov	r0, r4
 8014fae:	4798      	blx	r3
 8014fb0:	6823      	ldr	r3, [r4, #0]
 8014fb2:	4683      	mov	fp, r0
 8014fb4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014fb8:	4620      	mov	r0, r4
 8014fba:	4798      	blx	r3
 8014fbc:	463b      	mov	r3, r7
 8014fbe:	e9cd b000 	strd	fp, r0, [sp]
 8014fc2:	4649      	mov	r1, r9
 8014fc4:	4632      	mov	r2, r6
 8014fc6:	a80f      	add	r0, sp, #60	; 0x3c
 8014fc8:	f005 fc3a 	bl	801a840 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014fcc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014fd0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8015228 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8014fd4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014fd8:	f04f 0600 	mov.w	r6, #0
 8014fdc:	bf0c      	ite	eq
 8014fde:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8014fe2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8014fe6:	4637      	mov	r7, r6
 8014fe8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014fea:	f8db 3000 	ldr.w	r3, [fp]
 8014fee:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014ff2:	4629      	mov	r1, r5
 8014ff4:	785b      	ldrb	r3, [r3, #1]
 8014ff6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014ffa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014ffe:	a80f      	add	r0, sp, #60	; 0x3c
 8015000:	f002 fd4b 	bl	8017a9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015004:	9b03      	ldr	r3, [sp, #12]
 8015006:	4286      	cmp	r6, r0
 8015008:	bfb8      	it	lt
 801500a:	4606      	movlt	r6, r0
 801500c:	3701      	adds	r7, #1
 801500e:	eba9 0903 	sub.w	r9, r9, r3
 8015012:	a80f      	add	r0, sp, #60	; 0x3c
 8015014:	b236      	sxth	r6, r6
 8015016:	b2bf      	uxth	r7, r7
 8015018:	fa0f f989 	sxth.w	r9, r9
 801501c:	f005 fbc7 	bl	801a7ae <_ZN8touchgfx12TextProvider11endOfStringEv>
 8015020:	b918      	cbnz	r0, 801502a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015022:	7a2b      	ldrb	r3, [r5, #8]
 8015024:	444b      	add	r3, r9
 8015026:	2b00      	cmp	r3, #0
 8015028:	dcde      	bgt.n	8014fe8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801502a:	9b03      	ldr	r3, [sp, #12]
 801502c:	9a04      	ldr	r2, [sp, #16]
 801502e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8015032:	fb13 f707 	smulbb	r7, r3, r7
 8015036:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015038:	1aff      	subs	r7, r7, r3
 801503a:	b2bf      	uxth	r7, r7
 801503c:	b23b      	sxth	r3, r7
 801503e:	429a      	cmp	r2, r3
 8015040:	bfa8      	it	ge
 8015042:	4657      	movge	r7, sl
 8015044:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015048:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801504c:	6823      	ldr	r3, [r4, #0]
 801504e:	bf08      	it	eq
 8015050:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8015054:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015056:	bf18      	it	ne
 8015058:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801505c:	4620      	mov	r0, r4
 801505e:	4798      	blx	r3
 8015060:	444f      	add	r7, r9
 8015062:	fa1f f987 	uxth.w	r9, r7
 8015066:	2801      	cmp	r0, #1
 8015068:	fa0f f789 	sxth.w	r7, r9
 801506c:	b2b3      	uxth	r3, r6
 801506e:	f000 80e1 	beq.w	8015234 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8015072:	2802      	cmp	r0, #2
 8015074:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8015078:	f000 80e2 	beq.w	8015240 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801507c:	7aea      	ldrb	r2, [r5, #11]
 801507e:	7b2d      	ldrb	r5, [r5, #12]
 8015080:	b236      	sxth	r6, r6
 8015082:	1ab6      	subs	r6, r6, r2
 8015084:	442a      	add	r2, r5
 8015086:	4413      	add	r3, r2
 8015088:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801508c:	fa1f fa86 	uxth.w	sl, r6
 8015090:	b29b      	uxth	r3, r3
 8015092:	2a02      	cmp	r2, #2
 8015094:	fa0f fb8a 	sxth.w	fp, sl
 8015098:	b21e      	sxth	r6, r3
 801509a:	f000 80d5 	beq.w	8015248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801509e:	2a03      	cmp	r2, #3
 80150a0:	f000 80dd 	beq.w	801525e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80150a4:	2a01      	cmp	r2, #1
 80150a6:	f040 80e5 	bne.w	8015274 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80150aa:	8925      	ldrh	r5, [r4, #8]
 80150ac:	4633      	mov	r3, r6
 80150ae:	eba5 0909 	sub.w	r9, r5, r9
 80150b2:	463e      	mov	r6, r7
 80150b4:	465d      	mov	r5, fp
 80150b6:	461f      	mov	r7, r3
 80150b8:	fa0f fb89 	sxth.w	fp, r9
 80150bc:	4b5c      	ldr	r3, [pc, #368]	; (8015230 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80150be:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80150c0:	6818      	ldr	r0, [r3, #0]
 80150c2:	f7f5 faed 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80150c6:	f8a8 b000 	strh.w	fp, [r8]
 80150ca:	f8a8 5002 	strh.w	r5, [r8, #2]
 80150ce:	f8a8 6004 	strh.w	r6, [r8, #4]
 80150d2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80150d6:	f8c8 0008 	str.w	r0, [r8, #8]
 80150da:	e737      	b.n	8014f4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80150dc:	f005 fb40 	bl	801a760 <_ZN8touchgfx12TextProviderC1Ev>
 80150e0:	682b      	ldr	r3, [r5, #0]
 80150e2:	4628      	mov	r0, r5
 80150e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80150e6:	4798      	blx	r3
 80150e8:	682b      	ldr	r3, [r5, #0]
 80150ea:	4607      	mov	r7, r0
 80150ec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80150ee:	4628      	mov	r0, r5
 80150f0:	4798      	blx	r3
 80150f2:	6823      	ldr	r3, [r4, #0]
 80150f4:	4683      	mov	fp, r0
 80150f6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80150f8:	4620      	mov	r0, r4
 80150fa:	4798      	blx	r3
 80150fc:	6822      	ldr	r2, [r4, #0]
 80150fe:	9005      	str	r0, [sp, #20]
 8015100:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8015104:	4620      	mov	r0, r4
 8015106:	4790      	blx	r2
 8015108:	9b05      	ldr	r3, [sp, #20]
 801510a:	9001      	str	r0, [sp, #4]
 801510c:	463a      	mov	r2, r7
 801510e:	4649      	mov	r1, r9
 8015110:	9300      	str	r3, [sp, #0]
 8015112:	a80f      	add	r0, sp, #60	; 0x3c
 8015114:	465b      	mov	r3, fp
 8015116:	f005 fb93 	bl	801a840 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801511a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801511e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8015122:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015124:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8015128:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801512c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015130:	bf0a      	itet	eq
 8015132:	464a      	moveq	r2, r9
 8015134:	461a      	movne	r2, r3
 8015136:	4699      	moveq	r9, r3
 8015138:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801513c:	1ad2      	subs	r2, r2, r3
 801513e:	6833      	ldr	r3, [r6, #0]
 8015140:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8015144:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8015148:	af0f      	add	r7, sp, #60	; 0x3c
 801514a:	7859      	ldrb	r1, [r3, #1]
 801514c:	9707      	str	r7, [sp, #28]
 801514e:	2300      	movs	r3, #0
 8015150:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8015154:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015158:	f88d 1020 	strb.w	r1, [sp, #32]
 801515c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8015160:	9509      	str	r5, [sp, #36]	; 0x24
 8015162:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015166:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801516a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801516e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015172:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015176:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801517a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801517e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015182:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015186:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801518a:	b350      	cbz	r0, 80151e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801518c:	682b      	ldr	r3, [r5, #0]
 801518e:	4628      	mov	r0, r5
 8015190:	695b      	ldr	r3, [r3, #20]
 8015192:	4798      	blx	r3
 8015194:	4607      	mov	r7, r0
 8015196:	b320      	cbz	r0, 80151e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015198:	9809      	ldr	r0, [sp, #36]	; 0x24
 801519a:	6803      	ldr	r3, [r0, #0]
 801519c:	4639      	mov	r1, r7
 801519e:	68db      	ldr	r3, [r3, #12]
 80151a0:	4798      	blx	r3
 80151a2:	4606      	mov	r6, r0
 80151a4:	b1e8      	cbz	r0, 80151e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80151a6:	7b43      	ldrb	r3, [r0, #13]
 80151a8:	7a82      	ldrb	r2, [r0, #10]
 80151aa:	005b      	lsls	r3, r3, #1
 80151ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80151b0:	4313      	orrs	r3, r2
 80151b2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80151b6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80151ba:	2b06      	cmp	r3, #6
 80151bc:	d111      	bne.n	80151e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80151be:	9809      	ldr	r0, [sp, #36]	; 0x24
 80151c0:	6803      	ldr	r3, [r0, #0]
 80151c2:	4632      	mov	r2, r6
 80151c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80151c6:	4639      	mov	r1, r7
 80151c8:	4798      	blx	r3
 80151ca:	7b73      	ldrb	r3, [r6, #13]
 80151cc:	005b      	lsls	r3, r3, #1
 80151ce:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80151d2:	7ab3      	ldrb	r3, [r6, #10]
 80151d4:	4313      	orrs	r3, r2
 80151d6:	4418      	add	r0, r3
 80151d8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80151dc:	4418      	add	r0, r3
 80151de:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80151e2:	2600      	movs	r6, #0
 80151e4:	4637      	mov	r7, r6
 80151e6:	a806      	add	r0, sp, #24
 80151e8:	f002 fe38 	bl	8017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80151ec:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80151f0:	9b03      	ldr	r3, [sp, #12]
 80151f2:	4286      	cmp	r6, r0
 80151f4:	eba9 0903 	sub.w	r9, r9, r3
 80151f8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80151fc:	bfb8      	it	lt
 80151fe:	4606      	movlt	r6, r0
 8015200:	3701      	adds	r7, #1
 8015202:	b236      	sxth	r6, r6
 8015204:	b2bf      	uxth	r7, r7
 8015206:	fa0f f989 	sxth.w	r9, r9
 801520a:	2b00      	cmp	r3, #0
 801520c:	f43f af0d 	beq.w	801502a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015210:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8015214:	2b00      	cmp	r3, #0
 8015216:	f47f af08 	bne.w	801502a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801521a:	7a2b      	ldrb	r3, [r5, #8]
 801521c:	444b      	add	r3, r9
 801521e:	2b00      	cmp	r3, #0
 8015220:	dce1      	bgt.n	80151e6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8015222:	e702      	b.n	801502a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015224:	20013898 	.word	0x20013898
 8015228:	20013894 	.word	0x20013894
 801522c:	2001389c 	.word	0x2001389c
 8015230:	200138a0 	.word	0x200138a0
 8015234:	ebaa 0606 	sub.w	r6, sl, r6
 8015238:	2002      	movs	r0, #2
 801523a:	fb96 f6f0 	sdiv	r6, r6, r0
 801523e:	e71d      	b.n	801507c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015240:	441e      	add	r6, r3
 8015242:	ebaa 0606 	sub.w	r6, sl, r6
 8015246:	e719      	b.n	801507c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015248:	8925      	ldrh	r5, [r4, #8]
 801524a:	1aed      	subs	r5, r5, r3
 801524c:	eba5 050a 	sub.w	r5, r5, sl
 8015250:	fa0f fb85 	sxth.w	fp, r5
 8015254:	8965      	ldrh	r5, [r4, #10]
 8015256:	eba5 0509 	sub.w	r5, r5, r9
 801525a:	b22d      	sxth	r5, r5
 801525c:	e72e      	b.n	80150bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801525e:	8965      	ldrh	r5, [r4, #10]
 8015260:	1aed      	subs	r5, r5, r3
 8015262:	eba5 050a 	sub.w	r5, r5, sl
 8015266:	4633      	mov	r3, r6
 8015268:	b22d      	sxth	r5, r5
 801526a:	463e      	mov	r6, r7
 801526c:	f04f 0b00 	mov.w	fp, #0
 8015270:	461f      	mov	r7, r3
 8015272:	e723      	b.n	80150bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8015274:	2500      	movs	r5, #0
 8015276:	e721      	b.n	80150bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08015278 <_ZN8touchgfx8TextAreaD0Ev>:
 8015278:	b510      	push	{r4, lr}
 801527a:	2148      	movs	r1, #72	; 0x48
 801527c:	4604      	mov	r4, r0
 801527e:	f017 fc88 	bl	802cb92 <_ZdlPvj>
 8015282:	4620      	mov	r0, r4
 8015284:	bd10      	pop	{r4, pc}
	...

08015288 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8015288:	b513      	push	{r0, r1, r4, lr}
 801528a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801528e:	4604      	mov	r4, r0
 8015290:	b1fb      	cbz	r3, 80152d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015292:	4b16      	ldr	r3, [pc, #88]	; (80152ec <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8015294:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015296:	881b      	ldrh	r3, [r3, #0]
 8015298:	428b      	cmp	r3, r1
 801529a:	d91a      	bls.n	80152d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801529c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80152a0:	2b00      	cmp	r3, #0
 80152a2:	dd16      	ble.n	80152d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80152a4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80152a8:	2b00      	cmp	r3, #0
 80152aa:	dd12      	ble.n	80152d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80152ac:	4b10      	ldr	r3, [pc, #64]	; (80152f0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80152ae:	6818      	ldr	r0, [r3, #0]
 80152b0:	f7f5 f9f6 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80152b4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80152b8:	6822      	ldr	r2, [r4, #0]
 80152ba:	2b00      	cmp	r3, #0
 80152bc:	db06      	blt.n	80152cc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80152be:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80152c2:	2b00      	cmp	r3, #0
 80152c4:	db02      	blt.n	80152cc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80152c6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80152c8:	4298      	cmp	r0, r3
 80152ca:	d004      	beq.n	80152d6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80152cc:	6953      	ldr	r3, [r2, #20]
 80152ce:	4620      	mov	r0, r4
 80152d0:	4798      	blx	r3
 80152d2:	b002      	add	sp, #8
 80152d4:	bd10      	pop	{r4, pc}
 80152d6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80152da:	c903      	ldmia	r1, {r0, r1}
 80152dc:	466b      	mov	r3, sp
 80152de:	e883 0003 	stmia.w	r3, {r0, r1}
 80152e2:	6912      	ldr	r2, [r2, #16]
 80152e4:	4619      	mov	r1, r3
 80152e6:	4620      	mov	r0, r4
 80152e8:	4790      	blx	r2
 80152ea:	e7f2      	b.n	80152d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80152ec:	20013898 	.word	0x20013898
 80152f0:	200138a0 	.word	0x200138a0

080152f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80152f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80152f8:	4b44      	ldr	r3, [pc, #272]	; (801540c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80152fa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80152fc:	881b      	ldrh	r3, [r3, #0]
 80152fe:	4293      	cmp	r3, r2
 8015300:	b08e      	sub	sp, #56	; 0x38
 8015302:	4604      	mov	r4, r0
 8015304:	d97e      	bls.n	8015404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015306:	6808      	ldr	r0, [r1, #0]
 8015308:	4d41      	ldr	r5, [pc, #260]	; (8015410 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801530a:	6849      	ldr	r1, [r1, #4]
 801530c:	ab05      	add	r3, sp, #20
 801530e:	c303      	stmia	r3!, {r0, r1}
 8015310:	4611      	mov	r1, r2
 8015312:	6828      	ldr	r0, [r5, #0]
 8015314:	f7f5 f9c4 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8015318:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801531c:	2b00      	cmp	r3, #0
 801531e:	db11      	blt.n	8015344 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015320:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015324:	2b00      	cmp	r3, #0
 8015326:	db0d      	blt.n	8015344 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015328:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801532a:	4298      	cmp	r0, r3
 801532c:	d10a      	bne.n	8015344 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801532e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8015332:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015336:	ab09      	add	r3, sp, #36	; 0x24
 8015338:	e883 0003 	stmia.w	r3, {r0, r1}
 801533c:	4619      	mov	r1, r3
 801533e:	a805      	add	r0, sp, #20
 8015340:	f7fd fbec 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8015344:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015348:	2b00      	cmp	r3, #0
 801534a:	dd5b      	ble.n	8015404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801534c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8015350:	2b00      	cmp	r3, #0
 8015352:	dd57      	ble.n	8015404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015354:	4f2f      	ldr	r7, [pc, #188]	; (8015414 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8015356:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015358:	683b      	ldr	r3, [r7, #0]
 801535a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801535e:	4b2e      	ldr	r3, [pc, #184]	; (8015418 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8015360:	681b      	ldr	r3, [r3, #0]
 8015362:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8015366:	2e00      	cmp	r6, #0
 8015368:	d04c      	beq.n	8015404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801536a:	6823      	ldr	r3, [r4, #0]
 801536c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8015370:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015372:	4620      	mov	r0, r4
 8015374:	4798      	blx	r3
 8015376:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015378:	683b      	ldr	r3, [r7, #0]
 801537a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801537e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8015382:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8015386:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015388:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801538c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8015390:	785b      	ldrb	r3, [r3, #1]
 8015392:	9609      	str	r6, [sp, #36]	; 0x24
 8015394:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015398:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801539c:	4b1f      	ldr	r3, [pc, #124]	; (801541c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801539e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80153a2:	681b      	ldr	r3, [r3, #0]
 80153a4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80153a8:	910b      	str	r1, [sp, #44]	; 0x2c
 80153aa:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80153ae:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80153b2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80153b6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80153ba:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80153be:	b10a      	cbz	r2, 80153c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80153c0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80153c2:	b906      	cbnz	r6, 80153c6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80153c4:	689e      	ldr	r6, [r3, #8]
 80153c6:	af07      	add	r7, sp, #28
 80153c8:	4621      	mov	r1, r4
 80153ca:	4638      	mov	r0, r7
 80153cc:	f004 fc7c 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80153d0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80153d2:	6828      	ldr	r0, [r5, #0]
 80153d4:	f7f5 f964 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80153d8:	6823      	ldr	r3, [r4, #0]
 80153da:	4605      	mov	r5, r0
 80153dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80153de:	4620      	mov	r0, r4
 80153e0:	4798      	blx	r3
 80153e2:	6823      	ldr	r3, [r4, #0]
 80153e4:	4680      	mov	r8, r0
 80153e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80153ea:	4620      	mov	r0, r4
 80153ec:	4798      	blx	r3
 80153ee:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80153f2:	ab09      	add	r3, sp, #36	; 0x24
 80153f4:	9300      	str	r3, [sp, #0]
 80153f6:	9501      	str	r5, [sp, #4]
 80153f8:	ab05      	add	r3, sp, #20
 80153fa:	e897 0006 	ldmia.w	r7, {r1, r2}
 80153fe:	4630      	mov	r0, r6
 8015400:	f7f5 f900 	bl	800a604 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015404:	b00e      	add	sp, #56	; 0x38
 8015406:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801540a:	bf00      	nop
 801540c:	20013898 	.word	0x20013898
 8015410:	200138a0 	.word	0x200138a0
 8015414:	20013894 	.word	0x20013894
 8015418:	2001389c 	.word	0x2001389c
 801541c:	2001383c 	.word	0x2001383c

08015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8015420:	b538      	push	{r3, r4, r5, lr}
 8015422:	4b0e      	ldr	r3, [pc, #56]	; (801545c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8015424:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015426:	881b      	ldrh	r3, [r3, #0]
 8015428:	429a      	cmp	r2, r3
 801542a:	4604      	mov	r4, r0
 801542c:	d214      	bcs.n	8015458 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801542e:	6803      	ldr	r3, [r0, #0]
 8015430:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015432:	4798      	blx	r3
 8015434:	6823      	ldr	r3, [r4, #0]
 8015436:	4605      	mov	r5, r0
 8015438:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801543a:	4620      	mov	r0, r4
 801543c:	4798      	blx	r3
 801543e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015442:	b22d      	sxth	r5, r5
 8015444:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015448:	4601      	mov	r1, r0
 801544a:	bf06      	itte	eq
 801544c:	4602      	moveq	r2, r0
 801544e:	4629      	moveq	r1, r5
 8015450:	462a      	movne	r2, r5
 8015452:	4620      	mov	r0, r4
 8015454:	f7fd f942 	bl	80126dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8015458:	bd38      	pop	{r3, r4, r5, pc}
 801545a:	bf00      	nop
 801545c:	20013898 	.word	0x20013898

08015460 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8015460:	b530      	push	{r4, r5, lr}
 8015462:	888b      	ldrh	r3, [r1, #4]
 8015464:	8583      	strh	r3, [r0, #44]	; 0x2c
 8015466:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801546a:	b085      	sub	sp, #20
 801546c:	4604      	mov	r4, r0
 801546e:	b923      	cbnz	r3, 801547a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015470:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015474:	b90b      	cbnz	r3, 801547a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015476:	f7ff ffd3 	bl	8015420 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801547a:	6823      	ldr	r3, [r4, #0]
 801547c:	466d      	mov	r5, sp
 801547e:	4621      	mov	r1, r4
 8015480:	4628      	mov	r0, r5
 8015482:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015486:	4798      	blx	r3
 8015488:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801548c:	343c      	adds	r4, #60	; 0x3c
 801548e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8015492:	b005      	add	sp, #20
 8015494:	bd30      	pop	{r4, r5, pc}

08015496 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8015496:	2300      	movs	r3, #0
 8015498:	8083      	strh	r3, [r0, #4]
 801549a:	80c3      	strh	r3, [r0, #6]
 801549c:	8003      	strh	r3, [r0, #0]
 801549e:	8043      	strh	r3, [r0, #2]
 80154a0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80154a4:	2bff      	cmp	r3, #255	; 0xff
 80154a6:	bf01      	itttt	eq
 80154a8:	890b      	ldrheq	r3, [r1, #8]
 80154aa:	8083      	strheq	r3, [r0, #4]
 80154ac:	894b      	ldrheq	r3, [r1, #10]
 80154ae:	80c3      	strheq	r3, [r0, #6]
 80154b0:	4770      	bx	lr
	...

080154b4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80154b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80154b6:	4604      	mov	r4, r0
 80154b8:	6808      	ldr	r0, [r1, #0]
 80154ba:	6849      	ldr	r1, [r1, #4]
 80154bc:	466b      	mov	r3, sp
 80154be:	c303      	stmia	r3!, {r0, r1}
 80154c0:	6823      	ldr	r3, [r4, #0]
 80154c2:	4669      	mov	r1, sp
 80154c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80154c6:	4620      	mov	r0, r4
 80154c8:	4798      	blx	r3
 80154ca:	4b08      	ldr	r3, [pc, #32]	; (80154ec <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80154cc:	681b      	ldr	r3, [r3, #0]
 80154ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80154d2:	b10a      	cbz	r2, 80154d8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80154d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80154d6:	b900      	cbnz	r0, 80154da <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80154d8:	6898      	ldr	r0, [r3, #8]
 80154da:	6803      	ldr	r3, [r0, #0]
 80154dc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80154de:	6a1d      	ldr	r5, [r3, #32]
 80154e0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80154e4:	4669      	mov	r1, sp
 80154e6:	47a8      	blx	r5
 80154e8:	b003      	add	sp, #12
 80154ea:	bd30      	pop	{r4, r5, pc}
 80154ec:	2001383c 	.word	0x2001383c

080154f0 <_ZN8touchgfx3BoxD1Ev>:
 80154f0:	4770      	bx	lr

080154f2 <_ZN8touchgfx3BoxD0Ev>:
 80154f2:	b510      	push	{r4, lr}
 80154f4:	212c      	movs	r1, #44	; 0x2c
 80154f6:	4604      	mov	r4, r0
 80154f8:	f017 fb4b 	bl	802cb92 <_ZdlPvj>
 80154fc:	4620      	mov	r0, r4
 80154fe:	bd10      	pop	{r4, pc}

08015500 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8015500:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8015504:	b12a      	cbz	r2, 8015512 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8015506:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801550a:	b112      	cbz	r2, 8015512 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801550c:	6803      	ldr	r3, [r0, #0]
 801550e:	695b      	ldr	r3, [r3, #20]
 8015510:	4718      	bx	r3
 8015512:	4770      	bx	lr

08015514 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8015514:	b570      	push	{r4, r5, r6, lr}
 8015516:	6803      	ldr	r3, [r0, #0]
 8015518:	4604      	mov	r4, r0
 801551a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801551c:	4615      	mov	r5, r2
 801551e:	4798      	blx	r3
 8015520:	6823      	ldr	r3, [r4, #0]
 8015522:	4629      	mov	r1, r5
 8015524:	4620      	mov	r0, r4
 8015526:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015528:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801552c:	4718      	bx	r3

0801552e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801552e:	b570      	push	{r4, r5, r6, lr}
 8015530:	6803      	ldr	r3, [r0, #0]
 8015532:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015534:	4604      	mov	r4, r0
 8015536:	460e      	mov	r6, r1
 8015538:	4615      	mov	r5, r2
 801553a:	4798      	blx	r3
 801553c:	8030      	strh	r0, [r6, #0]
 801553e:	6823      	ldr	r3, [r4, #0]
 8015540:	4620      	mov	r0, r4
 8015542:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8015544:	4798      	blx	r3
 8015546:	8028      	strh	r0, [r5, #0]
 8015548:	bd70      	pop	{r4, r5, r6, pc}

0801554a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801554a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801554e:	4770      	bx	lr

08015550 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8015550:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8015554:	4770      	bx	lr

08015556 <_ZN8touchgfx10TiledImageD1Ev>:
 8015556:	4770      	bx	lr

08015558 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8015558:	b510      	push	{r4, lr}
 801555a:	4604      	mov	r4, r0
 801555c:	f000 fd31 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8015560:	6823      	ldr	r3, [r4, #0]
 8015562:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8015566:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801556a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801556c:	4620      	mov	r0, r4
 801556e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015572:	4718      	bx	r3

08015574 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8015574:	b538      	push	{r3, r4, r5, lr}
 8015576:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801557a:	4604      	mov	r4, r0
 801557c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801557e:	4628      	mov	r0, r5
 8015580:	f006 fe6e 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015584:	b188      	cbz	r0, 80155aa <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8015586:	4628      	mov	r0, r5
 8015588:	f006 fe6a 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801558c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8015590:	fb92 f3f0 	sdiv	r3, r2, r0
 8015594:	fb03 2010 	mls	r0, r3, r0, r2
 8015598:	2800      	cmp	r0, #0
 801559a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801559c:	da05      	bge.n	80155aa <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801559e:	4628      	mov	r0, r5
 80155a0:	f006 fe5e 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80155a4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80155a6:	4418      	add	r0, r3
 80155a8:	8560      	strh	r0, [r4, #42]	; 0x2a
 80155aa:	bd38      	pop	{r3, r4, r5, pc}

080155ac <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 80155ac:	b538      	push	{r3, r4, r5, lr}
 80155ae:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80155b2:	4604      	mov	r4, r0
 80155b4:	8581      	strh	r1, [r0, #44]	; 0x2c
 80155b6:	4628      	mov	r0, r5
 80155b8:	f006 fe86 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155bc:	b188      	cbz	r0, 80155e2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80155be:	4628      	mov	r0, r5
 80155c0:	f006 fe82 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155c4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80155c8:	fb92 f3f0 	sdiv	r3, r2, r0
 80155cc:	fb03 2010 	mls	r0, r3, r0, r2
 80155d0:	2800      	cmp	r0, #0
 80155d2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80155d4:	da05      	bge.n	80155e2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80155d6:	4628      	mov	r0, r5
 80155d8:	f006 fe76 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155dc:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80155de:	4418      	add	r0, r3
 80155e0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80155e2:	bd38      	pop	{r3, r4, r5, pc}

080155e4 <_ZN8touchgfx10TiledImageD0Ev>:
 80155e4:	b510      	push	{r4, lr}
 80155e6:	2130      	movs	r1, #48	; 0x30
 80155e8:	4604      	mov	r4, r0
 80155ea:	f017 fad2 	bl	802cb92 <_ZdlPvj>
 80155ee:	4620      	mov	r0, r4
 80155f0:	bd10      	pop	{r4, pc}
	...

080155f4 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80155f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155f8:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 80155fc:	b093      	sub	sp, #76	; 0x4c
 80155fe:	4607      	mov	r7, r0
 8015600:	4658      	mov	r0, fp
 8015602:	460e      	mov	r6, r1
 8015604:	f006 fe2c 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015608:	4681      	mov	r9, r0
 801560a:	4658      	mov	r0, fp
 801560c:	f006 fe5c 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015610:	4605      	mov	r5, r0
 8015612:	f1b9 0f00 	cmp.w	r9, #0
 8015616:	f000 80c4 	beq.w	80157a2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801561a:	2800      	cmp	r0, #0
 801561c:	f000 80c1 	beq.w	80157a2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015620:	2300      	movs	r3, #0
 8015622:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8015626:	683b      	ldr	r3, [r7, #0]
 8015628:	a90e      	add	r1, sp, #56	; 0x38
 801562a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801562c:	4638      	mov	r0, r7
 801562e:	4798      	blx	r3
 8015630:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8015634:	f9b6 3000 	ldrsh.w	r3, [r6]
 8015638:	88b1      	ldrh	r1, [r6, #4]
 801563a:	fa1f f889 	uxth.w	r8, r9
 801563e:	189c      	adds	r4, r3, r2
 8015640:	440b      	add	r3, r1
 8015642:	fa02 f383 	sxtah	r3, r2, r3
 8015646:	fb94 f4f9 	sdiv	r4, r4, r9
 801564a:	fb14 f408 	smulbb	r4, r4, r8
 801564e:	1aa4      	subs	r4, r4, r2
 8015650:	3b01      	subs	r3, #1
 8015652:	b2aa      	uxth	r2, r5
 8015654:	fb93 f3f9 	sdiv	r3, r3, r9
 8015658:	fb13 f308 	smulbb	r3, r3, r8
 801565c:	b21b      	sxth	r3, r3
 801565e:	9205      	str	r2, [sp, #20]
 8015660:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8015664:	9805      	ldr	r0, [sp, #20]
 8015666:	930b      	str	r3, [sp, #44]	; 0x2c
 8015668:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801566c:	185a      	adds	r2, r3, r1
 801566e:	fb92 f2f5 	sdiv	r2, r2, r5
 8015672:	fb12 f200 	smulbb	r2, r2, r0
 8015676:	1a52      	subs	r2, r2, r1
 8015678:	b212      	sxth	r2, r2
 801567a:	920c      	str	r2, [sp, #48]	; 0x30
 801567c:	88f2      	ldrh	r2, [r6, #6]
 801567e:	4413      	add	r3, r2
 8015680:	fa01 f383 	sxtah	r3, r1, r3
 8015684:	3b01      	subs	r3, #1
 8015686:	fb93 f3f5 	sdiv	r3, r3, r5
 801568a:	fb13 f300 	smulbb	r3, r3, r0
 801568e:	b2a4      	uxth	r4, r4
 8015690:	b21b      	sxth	r3, r3
 8015692:	930d      	str	r3, [sp, #52]	; 0x34
 8015694:	eb08 0504 	add.w	r5, r8, r4
 8015698:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801569a:	b223      	sxth	r3, r4
 801569c:	4293      	cmp	r3, r2
 801569e:	b2ad      	uxth	r5, r5
 80156a0:	9306      	str	r3, [sp, #24]
 80156a2:	dc7e      	bgt.n	80157a2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80156a4:	b22b      	sxth	r3, r5
 80156a6:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80156aa:	930a      	str	r3, [sp, #40]	; 0x28
 80156ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80156ae:	4599      	cmp	r9, r3
 80156b0:	dd03      	ble.n	80156ba <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 80156b2:	4444      	add	r4, r8
 80156b4:	b2a4      	uxth	r4, r4
 80156b6:	4445      	add	r5, r8
 80156b8:	e7ee      	b.n	8015698 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 80156ba:	f9b6 c000 	ldrsh.w	ip, [r6]
 80156be:	88b2      	ldrh	r2, [r6, #4]
 80156c0:	9806      	ldr	r0, [sp, #24]
 80156c2:	9905      	ldr	r1, [sp, #20]
 80156c4:	4462      	add	r2, ip
 80156c6:	b292      	uxth	r2, r2
 80156c8:	b213      	sxth	r3, r2
 80156ca:	9308      	str	r3, [sp, #32]
 80156cc:	fa1f f389 	uxth.w	r3, r9
 80156d0:	4419      	add	r1, r3
 80156d2:	9307      	str	r3, [sp, #28]
 80156d4:	4603      	mov	r3, r0
 80156d6:	9808      	ldr	r0, [sp, #32]
 80156d8:	b289      	uxth	r1, r1
 80156da:	4283      	cmp	r3, r0
 80156dc:	fa0f fa81 	sxth.w	sl, r1
 80156e0:	da5b      	bge.n	801579a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156e2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80156e4:	4584      	cmp	ip, r0
 80156e6:	da58      	bge.n	801579a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156e8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80156ec:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80156f0:	4486      	add	lr, r0
 80156f2:	fa1f fe8e 	uxth.w	lr, lr
 80156f6:	fa0f f38e 	sxth.w	r3, lr
 80156fa:	4599      	cmp	r9, r3
 80156fc:	9309      	str	r3, [sp, #36]	; 0x24
 80156fe:	da4c      	bge.n	801579a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015700:	4550      	cmp	r0, sl
 8015702:	da4a      	bge.n	801579a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015704:	9b06      	ldr	r3, [sp, #24]
 8015706:	459c      	cmp	ip, r3
 8015708:	bfb8      	it	lt
 801570a:	469c      	movlt	ip, r3
 801570c:	9b08      	ldr	r3, [sp, #32]
 801570e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8015712:	4548      	cmp	r0, r9
 8015714:	bfb8      	it	lt
 8015716:	4648      	movlt	r0, r9
 8015718:	4699      	mov	r9, r3
 801571a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801571c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8015720:	4599      	cmp	r9, r3
 8015722:	bfc8      	it	gt
 8015724:	462a      	movgt	r2, r5
 8015726:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015728:	4553      	cmp	r3, sl
 801572a:	bfd8      	it	le
 801572c:	4671      	movle	r1, lr
 801572e:	eba2 020c 	sub.w	r2, r2, ip
 8015732:	1a09      	subs	r1, r1, r0
 8015734:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8015738:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 801573c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8015740:	9b07      	ldr	r3, [sp, #28]
 8015742:	1b12      	subs	r2, r2, r4
 8015744:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8015748:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801574c:	1ad2      	subs	r2, r2, r3
 801574e:	4b16      	ldr	r3, [pc, #88]	; (80157a8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8015750:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8015754:	681a      	ldr	r2, [r3, #0]
 8015756:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 801575a:	b109      	cbz	r1, 8015760 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 801575c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 801575e:	b900      	cbnz	r0, 8015762 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8015760:	6890      	ldr	r0, [r2, #8]
 8015762:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8015766:	9b07      	ldr	r3, [sp, #28]
 8015768:	6801      	ldr	r1, [r0, #0]
 801576a:	f04f 0c01 	mov.w	ip, #1
 801576e:	f8cd c008 	str.w	ip, [sp, #8]
 8015772:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8015776:	f8cd c004 	str.w	ip, [sp, #4]
 801577a:	4413      	add	r3, r2
 801577c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8015780:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8015784:	f8cd c000 	str.w	ip, [sp]
 8015788:	4422      	add	r2, r4
 801578a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801578e:	b21b      	sxth	r3, r3
 8015790:	b212      	sxth	r2, r2
 8015792:	4659      	mov	r1, fp
 8015794:	47c8      	blx	r9
 8015796:	46d1      	mov	r9, sl
 8015798:	e788      	b.n	80156ac <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 801579a:	2300      	movs	r3, #0
 801579c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 80157a0:	e7cc      	b.n	801573c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 80157a2:	b013      	add	sp, #76	; 0x4c
 80157a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157a8:	2001383c 	.word	0x2001383c

080157ac <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 80157ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157b0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80157b4:	2bff      	cmp	r3, #255	; 0xff
 80157b6:	4606      	mov	r6, r0
 80157b8:	4689      	mov	r9, r1
 80157ba:	d008      	beq.n	80157ce <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 80157bc:	2300      	movs	r3, #0
 80157be:	8003      	strh	r3, [r0, #0]
 80157c0:	8043      	strh	r3, [r0, #2]
 80157c2:	8083      	strh	r3, [r0, #4]
 80157c4:	4630      	mov	r0, r6
 80157c6:	80f3      	strh	r3, [r6, #6]
 80157c8:	b003      	add	sp, #12
 80157ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157ce:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 80157d2:	4659      	mov	r1, fp
 80157d4:	4668      	mov	r0, sp
 80157d6:	f006 fdab 	bl	801c330 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80157da:	4658      	mov	r0, fp
 80157dc:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 80157e0:	f9bd 7000 	ldrsh.w	r7, [sp]
 80157e4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 80157e8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 80157ec:	f006 fd38 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80157f0:	4284      	cmp	r4, r0
 80157f2:	d10d      	bne.n	8015810 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 80157f4:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 80157f8:	4658      	mov	r0, fp
 80157fa:	f006 fd65 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80157fe:	4580      	cmp	r8, r0
 8015800:	d129      	bne.n	8015856 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8015802:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8015806:	8037      	strh	r7, [r6, #0]
 8015808:	f8a6 a002 	strh.w	sl, [r6, #2]
 801580c:	80b5      	strh	r5, [r6, #4]
 801580e:	e7d9      	b.n	80157c4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8015810:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8015814:	4658      	mov	r0, fp
 8015816:	f006 fd23 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801581a:	1b7f      	subs	r7, r7, r5
 801581c:	b2bd      	uxth	r5, r7
 801581e:	b22f      	sxth	r7, r5
 8015820:	4428      	add	r0, r5
 8015822:	2f00      	cmp	r7, #0
 8015824:	b2a3      	uxth	r3, r4
 8015826:	b280      	uxth	r0, r0
 8015828:	bfb8      	it	lt
 801582a:	18ed      	addlt	r5, r5, r3
 801582c:	4403      	add	r3, r0
 801582e:	b29b      	uxth	r3, r3
 8015830:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8015834:	bfb8      	it	lt
 8015836:	b22d      	sxthlt	r5, r5
 8015838:	b219      	sxth	r1, r3
 801583a:	bfae      	itee	ge
 801583c:	4625      	movge	r5, r4
 801583e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8015842:	2700      	movlt	r7, #0
 8015844:	4291      	cmp	r1, r2
 8015846:	bfc4      	itt	gt
 8015848:	1a9c      	subgt	r4, r3, r2
 801584a:	b224      	sxthgt	r4, r4
 801584c:	42ac      	cmp	r4, r5
 801584e:	bfc4      	itt	gt
 8015850:	b207      	sxthgt	r7, r0
 8015852:	4625      	movgt	r5, r4
 8015854:	e7d0      	b.n	80157f8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8015856:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 801585a:	4658      	mov	r0, fp
 801585c:	f006 fd34 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015860:	ebaa 0404 	sub.w	r4, sl, r4
 8015864:	b2a4      	uxth	r4, r4
 8015866:	fa0f fa84 	sxth.w	sl, r4
 801586a:	4420      	add	r0, r4
 801586c:	f1ba 0f00 	cmp.w	sl, #0
 8015870:	fa1f f288 	uxth.w	r2, r8
 8015874:	b280      	uxth	r0, r0
 8015876:	bfb8      	it	lt
 8015878:	18a3      	addlt	r3, r4, r2
 801587a:	4402      	add	r2, r0
 801587c:	b292      	uxth	r2, r2
 801587e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8015882:	bfb8      	it	lt
 8015884:	b21b      	sxthlt	r3, r3
 8015886:	b214      	sxth	r4, r2
 8015888:	bfae      	itee	ge
 801588a:	4643      	movge	r3, r8
 801588c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8015890:	f04f 0a00 	movlt.w	sl, #0
 8015894:	428c      	cmp	r4, r1
 8015896:	bfc4      	itt	gt
 8015898:	eba2 0801 	subgt.w	r8, r2, r1
 801589c:	fa0f f888 	sxthgt.w	r8, r8
 80158a0:	4598      	cmp	r8, r3
 80158a2:	bfc4      	itt	gt
 80158a4:	fa0f fa80 	sxthgt.w	sl, r0
 80158a8:	4643      	movgt	r3, r8
 80158aa:	e7ac      	b.n	8015806 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

080158ac <_ZNK8touchgfx5Image17invalidateContentEv>:
 80158ac:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80158b0:	b12a      	cbz	r2, 80158be <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80158b2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80158b6:	b112      	cbz	r2, 80158be <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80158b8:	6803      	ldr	r3, [r0, #0]
 80158ba:	695b      	ldr	r3, [r3, #20]
 80158bc:	4718      	bx	r3
 80158be:	4770      	bx	lr

080158c0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80158c0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80158c4:	600b      	str	r3, [r1, #0]
 80158c6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80158ca:	6013      	str	r3, [r2, #0]
 80158cc:	4770      	bx	lr

080158ce <_ZN8touchgfx5Gauge8setWidthEs>:
 80158ce:	8101      	strh	r1, [r0, #8]
 80158d0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80158d4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80158d8:	4770      	bx	lr

080158da <_ZN8touchgfx5Gauge9setHeightEs>:
 80158da:	8141      	strh	r1, [r0, #10]
 80158dc:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80158e0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80158e4:	4770      	bx	lr

080158e6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80158e6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80158ea:	4770      	bx	lr

080158ec <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80158ec:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80158f0:	4770      	bx	lr

080158f2 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80158f2:	4770      	bx	lr

080158f4 <_ZN8touchgfx5GaugeD1Ev>:
 80158f4:	4770      	bx	lr

080158f6 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80158f6:	b538      	push	{r3, r4, r5, lr}
 80158f8:	4604      	mov	r4, r0
 80158fa:	460d      	mov	r5, r1
 80158fc:	f7fc fe07 	bl	801250e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8015900:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8015904:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8015908:	bd38      	pop	{r3, r4, r5, pc}

0801590a <_ZN8touchgfx5GaugeD0Ev>:
 801590a:	b510      	push	{r4, lr}
 801590c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8015910:	4604      	mov	r4, r0
 8015912:	f017 f93e 	bl	802cb92 <_ZdlPvj>
 8015916:	4620      	mov	r0, r4
 8015918:	bd10      	pop	{r4, pc}

0801591a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 801591a:	b510      	push	{r4, lr}
 801591c:	6803      	ldr	r3, [r0, #0]
 801591e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015922:	4604      	mov	r4, r0
 8015924:	4798      	blx	r3
 8015926:	b170      	cbz	r0, 8015946 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015928:	6823      	ldr	r3, [r4, #0]
 801592a:	4620      	mov	r0, r4
 801592c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015930:	4798      	blx	r3
 8015932:	b140      	cbz	r0, 8015946 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015934:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8015938:	b12b      	cbz	r3, 8015946 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801593a:	6823      	ldr	r3, [r4, #0]
 801593c:	4620      	mov	r0, r4
 801593e:	695b      	ldr	r3, [r3, #20]
 8015940:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015944:	4718      	bx	r3
 8015946:	bd10      	pop	{r4, pc}

08015948 <_ZN8touchgfx5GaugeC1Ev>:
 8015948:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801594a:	4604      	mov	r4, r0
 801594c:	4626      	mov	r6, r4
 801594e:	f7fc feff 	bl	8012750 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8015952:	4b18      	ldr	r3, [pc, #96]	; (80159b4 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8015954:	f846 3bb4 	str.w	r3, [r6], #180
 8015958:	a902      	add	r1, sp, #8
 801595a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801595e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8015962:	4630      	mov	r0, r6
 8015964:	f015 f9a4 	bl	802acb0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8015968:	2500      	movs	r5, #0
 801596a:	2301      	movs	r3, #1
 801596c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8015970:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8015974:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8015978:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 801597c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8015980:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8015984:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8015988:	4638      	mov	r0, r7
 801598a:	f014 fbd5 	bl	802a138 <_ZN8touchgfx6CircleC1Ev>
 801598e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8015992:	4620      	mov	r0, r4
 8015994:	f7fc ff7d 	bl	8012892 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8015998:	4639      	mov	r1, r7
 801599a:	4620      	mov	r0, r4
 801599c:	f7fc ff38 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80159a0:	4620      	mov	r0, r4
 80159a2:	4631      	mov	r1, r6
 80159a4:	f7fc ff34 	bl	8012810 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80159a8:	4620      	mov	r0, r4
 80159aa:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 80159ae:	b003      	add	sp, #12
 80159b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80159b2:	bf00      	nop
 80159b4:	08031b5c 	.word	0x08031b5c

080159b8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80159b8:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 80159bc:	4770      	bx	lr

080159be <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80159be:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80159c2:	4770      	bx	lr

080159c4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80159c4:	b538      	push	{r3, r4, r5, lr}
 80159c6:	8902      	ldrh	r2, [r0, #8]
 80159c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80159cc:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 80159d0:	4604      	mov	r4, r0
 80159d2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 80159d6:	2200      	movs	r2, #0
 80159d8:	4611      	mov	r1, r2
 80159da:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 80159de:	4628      	mov	r0, r5
 80159e0:	f7ed fe4a 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 80159e4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 80159e8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80159ec:	1a9b      	subs	r3, r3, r2
 80159ee:	ee07 3a90 	vmov	s15, r3
 80159f2:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 80159f6:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 80159fa:	1a9b      	subs	r3, r3, r2
 80159fc:	ee07 3a10 	vmov	s14, r3
 8015a00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a04:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015a08:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8015a0c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8015a10:	4628      	mov	r0, r5
 8015a12:	f015 f999 	bl	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a16:	4b16      	ldr	r3, [pc, #88]	; (8015a70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8015a18:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8015a1c:	4628      	mov	r0, r5
 8015a1e:	f015 f993 	bl	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a22:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015a26:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8015a2a:	ee07 3a90 	vmov	s15, r3
 8015a2e:	ee07 2a10 	vmov	s14, r2
 8015a32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015a3a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8015a3e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8015a42:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8015a46:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8015a4a:	4628      	mov	r0, r5
 8015a4c:	f015 f97c 	bl	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a50:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8015a54:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8015a58:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8015a5c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8015a60:	4628      	mov	r0, r5
 8015a62:	f015 f971 	bl	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a66:	2301      	movs	r3, #1
 8015a68:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015a6c:	bd38      	pop	{r3, r4, r5, pc}
 8015a6e:	bf00      	nop
 8015a70:	43960000 	.word	0x43960000

08015a74 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8015a74:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015a76:	4604      	mov	r4, r0
 8015a78:	a802      	add	r0, sp, #8
 8015a7a:	4616      	mov	r6, r2
 8015a7c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8015a80:	461d      	mov	r5, r3
 8015a82:	4601      	mov	r1, r0
 8015a84:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015a88:	f015 fab4 	bl	802aff4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8015a8c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8015a90:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8015a94:	4620      	mov	r0, r4
 8015a96:	f7ff ff95 	bl	80159c4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015a9a:	b002      	add	sp, #8
 8015a9c:	bd70      	pop	{r4, r5, r6, pc}

08015a9e <_ZN8touchgfx5Gauge9setCenterEii>:
 8015a9e:	b570      	push	{r4, r5, r6, lr}
 8015aa0:	4606      	mov	r6, r0
 8015aa2:	460d      	mov	r5, r1
 8015aa4:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8015aa8:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8015aac:	4614      	mov	r4, r2
 8015aae:	f7ff ff89 	bl	80159c4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015ab2:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8015ab6:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8015aba:	1aa4      	subs	r4, r4, r2
 8015abc:	1a6d      	subs	r5, r5, r1
 8015abe:	0164      	lsls	r4, r4, #5
 8015ac0:	016d      	lsls	r5, r5, #5
 8015ac2:	3410      	adds	r4, #16
 8015ac4:	3510      	adds	r5, #16
 8015ac6:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8015aca:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8015ace:	bd70      	pop	{r4, r5, r6, pc}

08015ad0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8015ad0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015ad2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8015ad4:	0149      	lsls	r1, r1, #5
 8015ad6:	4299      	cmp	r1, r3
 8015ad8:	4604      	mov	r4, r0
 8015ada:	9101      	str	r1, [sp, #4]
 8015adc:	d00b      	beq.n	8015af6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8015ade:	4601      	mov	r1, r0
 8015ae0:	aa01      	add	r2, sp, #4
 8015ae2:	a802      	add	r0, sp, #8
 8015ae4:	f014 fd26 	bl	802a534 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8015ae8:	9b01      	ldr	r3, [sp, #4]
 8015aea:	63e3      	str	r3, [r4, #60]	; 0x3c
 8015aec:	6823      	ldr	r3, [r4, #0]
 8015aee:	a902      	add	r1, sp, #8
 8015af0:	691b      	ldr	r3, [r3, #16]
 8015af2:	4620      	mov	r0, r4
 8015af4:	4798      	blx	r3
 8015af6:	b004      	add	sp, #16
 8015af8:	bd10      	pop	{r4, pc}
	...

08015afc <_ZN8touchgfx5Gauge8setValueEi>:
 8015afc:	b570      	push	{r4, r5, r6, lr}
 8015afe:	4604      	mov	r4, r0
 8015b00:	f7fc fd58 	bl	80125b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8015b04:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8015b08:	429a      	cmp	r2, r3
 8015b0a:	bfac      	ite	ge
 8015b0c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8015b10:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8015b14:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015b18:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8015b1c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015b20:	1ac9      	subs	r1, r1, r3
 8015b22:	2900      	cmp	r1, #0
 8015b24:	bfb8      	it	lt
 8015b26:	4249      	neglt	r1, r1
 8015b28:	b289      	uxth	r1, r1
 8015b2a:	4620      	mov	r0, r4
 8015b2c:	f7fc fd64 	bl	80125f8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8015b30:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015b34:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8015b38:	eddf 6a19 	vldr	s13, [pc, #100]	; 8015ba0 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8015b3c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8015ba4 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8015b40:	429a      	cmp	r2, r3
 8015b42:	4605      	mov	r5, r0
 8015b44:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8015b48:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015b4c:	da15      	bge.n	8015b7a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8015b4e:	1b5b      	subs	r3, r3, r5
 8015b50:	ee07 3a90 	vmov	s15, r3
 8015b54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b58:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015b5c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015b60:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015b64:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015b68:	f015 f85d 	bl	802ac26 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015b6c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015b70:	1b49      	subs	r1, r1, r5
 8015b72:	4630      	mov	r0, r6
 8015b74:	f7ff ffac 	bl	8015ad0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8015b78:	bd70      	pop	{r4, r5, r6, pc}
 8015b7a:	442b      	add	r3, r5
 8015b7c:	ee07 3a90 	vmov	s15, r3
 8015b80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b84:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015b88:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015b8c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015b90:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015b94:	f015 f847 	bl	802ac26 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015b98:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015b9c:	4429      	add	r1, r5
 8015b9e:	e7e8      	b.n	8015b72 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8015ba0:	43340000 	.word	0x43340000
 8015ba4:	40490fdb 	.word	0x40490fdb

08015ba8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8015ba8:	b510      	push	{r4, lr}
 8015baa:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8015bae:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8015bb2:	0149      	lsls	r1, r1, #5
 8015bb4:	0152      	lsls	r2, r2, #5
 8015bb6:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8015bba:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8015bbe:	4604      	mov	r4, r0
 8015bc0:	f7fc fca2 	bl	8012508 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8015bc4:	4601      	mov	r1, r0
 8015bc6:	4620      	mov	r0, r4
 8015bc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015bcc:	f7ff bf96 	b.w	8015afc <_ZN8touchgfx5Gauge8setValueEi>

08015bd0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8015bd0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8015bd4:	4770      	bx	lr

08015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8015bd6:	b570      	push	{r4, r5, r6, lr}
 8015bd8:	880b      	ldrh	r3, [r1, #0]
 8015bda:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8015bdc:	4605      	mov	r5, r0
 8015bde:	8813      	ldrh	r3, [r2, #0]
 8015be0:	f825 3f30 	strh.w	r3, [r5, #48]!
 8015be4:	4604      	mov	r4, r0
 8015be6:	4628      	mov	r0, r5
 8015be8:	f006 fb3a 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015bec:	4606      	mov	r6, r0
 8015bee:	4628      	mov	r0, r5
 8015bf0:	f006 fb6a 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015bf4:	6823      	ldr	r3, [r4, #0]
 8015bf6:	4605      	mov	r5, r0
 8015bf8:	4631      	mov	r1, r6
 8015bfa:	4620      	mov	r0, r4
 8015bfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015bfe:	4798      	blx	r3
 8015c00:	6823      	ldr	r3, [r4, #0]
 8015c02:	4629      	mov	r1, r5
 8015c04:	4620      	mov	r0, r4
 8015c06:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015c08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015c0c:	4718      	bx	r3

08015c0e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8015c0e:	b510      	push	{r4, lr}
 8015c10:	4604      	mov	r4, r0
 8015c12:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015c14:	b150      	cbz	r0, 8015c2c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015c16:	6803      	ldr	r3, [r0, #0]
 8015c18:	68db      	ldr	r3, [r3, #12]
 8015c1a:	4798      	blx	r3
 8015c1c:	b130      	cbz	r0, 8015c2c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015c1e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8015c20:	6803      	ldr	r3, [r0, #0]
 8015c22:	4621      	mov	r1, r4
 8015c24:	689b      	ldr	r3, [r3, #8]
 8015c26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015c2a:	4718      	bx	r3
 8015c2c:	bd10      	pop	{r4, pc}

08015c2e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8015c2e:	b510      	push	{r4, lr}
 8015c30:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8015c34:	2bff      	cmp	r3, #255	; 0xff
 8015c36:	4604      	mov	r4, r0
 8015c38:	d006      	beq.n	8015c48 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8015c3a:	2300      	movs	r3, #0
 8015c3c:	8003      	strh	r3, [r0, #0]
 8015c3e:	8043      	strh	r3, [r0, #2]
 8015c40:	8083      	strh	r3, [r0, #4]
 8015c42:	80c3      	strh	r3, [r0, #6]
 8015c44:	4620      	mov	r0, r4
 8015c46:	bd10      	pop	{r4, pc}
 8015c48:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8015c4c:	b11b      	cbz	r3, 8015c56 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8015c4e:	3130      	adds	r1, #48	; 0x30
 8015c50:	f006 fb6e 	bl	801c330 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015c54:	e7f6      	b.n	8015c44 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8015c56:	312e      	adds	r1, #46	; 0x2e
 8015c58:	e7fa      	b.n	8015c50 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08015c5c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8015c5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015c60:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8015c64:	b08a      	sub	sp, #40	; 0x28
 8015c66:	4604      	mov	r4, r0
 8015c68:	4688      	mov	r8, r1
 8015c6a:	2b00      	cmp	r3, #0
 8015c6c:	d066      	beq.n	8015d3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8015c6e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8015c70:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015c74:	a805      	add	r0, sp, #20
 8015c76:	f006 faf3 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015c7a:	4607      	mov	r7, r0
 8015c7c:	a805      	add	r0, sp, #20
 8015c7e:	f006 fb23 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015c82:	f9b8 6000 	ldrsh.w	r6, [r8]
 8015c86:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8015c8a:	4432      	add	r2, r6
 8015c8c:	b292      	uxth	r2, r2
 8015c8e:	2300      	movs	r3, #0
 8015c90:	fa0f fc82 	sxth.w	ip, r2
 8015c94:	459c      	cmp	ip, r3
 8015c96:	9306      	str	r3, [sp, #24]
 8015c98:	dd52      	ble.n	8015d40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c9a:	42b7      	cmp	r7, r6
 8015c9c:	dd50      	ble.n	8015d40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c9e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8015ca2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015ca6:	442b      	add	r3, r5
 8015ca8:	b29b      	uxth	r3, r3
 8015caa:	b219      	sxth	r1, r3
 8015cac:	2900      	cmp	r1, #0
 8015cae:	dd47      	ble.n	8015d40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015cb0:	42a8      	cmp	r0, r5
 8015cb2:	dd45      	ble.n	8015d40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015cb4:	4567      	cmp	r7, ip
 8015cb6:	bfb8      	it	lt
 8015cb8:	b2ba      	uxthlt	r2, r7
 8015cba:	4288      	cmp	r0, r1
 8015cbc:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8015cc0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8015cc4:	bfb8      	it	lt
 8015cc6:	b283      	uxthlt	r3, r0
 8015cc8:	1b92      	subs	r2, r2, r6
 8015cca:	1b5b      	subs	r3, r3, r5
 8015ccc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015cd0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015cd4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015cd8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8015cdc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015ce0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015ce4:	429a      	cmp	r2, r3
 8015ce6:	d026      	beq.n	8015d36 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015ce8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015cec:	2b00      	cmp	r3, #0
 8015cee:	dd22      	ble.n	8015d36 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015cf0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015cf4:	2b00      	cmp	r3, #0
 8015cf6:	dd1e      	ble.n	8015d36 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015cf8:	2300      	movs	r3, #0
 8015cfa:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8015cfe:	6823      	ldr	r3, [r4, #0]
 8015d00:	a908      	add	r1, sp, #32
 8015d02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015d04:	4620      	mov	r0, r4
 8015d06:	4798      	blx	r3
 8015d08:	4b0f      	ldr	r3, [pc, #60]	; (8015d48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8015d0a:	681b      	ldr	r3, [r3, #0]
 8015d0c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015d10:	b10a      	cbz	r2, 8015d16 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8015d12:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015d14:	b900      	cbnz	r0, 8015d18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8015d16:	6898      	ldr	r0, [r3, #8]
 8015d18:	6801      	ldr	r1, [r0, #0]
 8015d1a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015d1e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015d22:	2501      	movs	r5, #1
 8015d24:	9502      	str	r5, [sp, #8]
 8015d26:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015d2a:	9401      	str	r4, [sp, #4]
 8015d2c:	ac06      	add	r4, sp, #24
 8015d2e:	9400      	str	r4, [sp, #0]
 8015d30:	688c      	ldr	r4, [r1, #8]
 8015d32:	a905      	add	r1, sp, #20
 8015d34:	47a0      	blx	r4
 8015d36:	b00a      	add	sp, #40	; 0x28
 8015d38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015d3c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8015d3e:	e797      	b.n	8015c70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8015d40:	2300      	movs	r3, #0
 8015d42:	9307      	str	r3, [sp, #28]
 8015d44:	e7ca      	b.n	8015cdc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8015d46:	bf00      	nop
 8015d48:	2001383c 	.word	0x2001383c

08015d4c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8015d4c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8015d50:	b12a      	cbz	r2, 8015d5e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015d52:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015d56:	b112      	cbz	r2, 8015d5e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015d58:	6803      	ldr	r3, [r0, #0]
 8015d5a:	695b      	ldr	r3, [r3, #20]
 8015d5c:	4718      	bx	r3
 8015d5e:	4770      	bx	lr

08015d60 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8015d60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015d64:	4b2f      	ldr	r3, [pc, #188]	; (8015e24 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8015d66:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015d68:	881b      	ldrh	r3, [r3, #0]
 8015d6a:	4293      	cmp	r3, r2
 8015d6c:	b08d      	sub	sp, #52	; 0x34
 8015d6e:	4604      	mov	r4, r0
 8015d70:	460f      	mov	r7, r1
 8015d72:	d954      	bls.n	8015e1e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015d74:	4b2c      	ldr	r3, [pc, #176]	; (8015e28 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8015d76:	6819      	ldr	r1, [r3, #0]
 8015d78:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8015d7c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8015d80:	4a2a      	ldr	r2, [pc, #168]	; (8015e2c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8015d82:	6812      	ldr	r2, [r2, #0]
 8015d84:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8015d88:	2900      	cmp	r1, #0
 8015d8a:	d048      	beq.n	8015e1e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015d8c:	785a      	ldrb	r2, [r3, #1]
 8015d8e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015d92:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8015d96:	4b26      	ldr	r3, [pc, #152]	; (8015e30 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8015d98:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8015d9c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8015da0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8015da4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8015da6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8015daa:	9107      	str	r1, [sp, #28]
 8015dac:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8015db0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015db4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8015db8:	681a      	ldr	r2, [r3, #0]
 8015dba:	f88d 8020 	strb.w	r8, [sp, #32]
 8015dbe:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8015dc2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8015dc6:	9609      	str	r6, [sp, #36]	; 0x24
 8015dc8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8015dcc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8015dd0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8015dd4:	b10b      	cbz	r3, 8015dda <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8015dd6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8015dd8:	b905      	cbnz	r5, 8015ddc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8015dda:	6895      	ldr	r5, [r2, #8]
 8015ddc:	ae05      	add	r6, sp, #20
 8015dde:	4621      	mov	r1, r4
 8015de0:	4630      	mov	r0, r6
 8015de2:	f003 ff71 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015de6:	4b13      	ldr	r3, [pc, #76]	; (8015e34 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8015de8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015dea:	6818      	ldr	r0, [r3, #0]
 8015dec:	f7f4 fc58 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 8015df0:	6823      	ldr	r3, [r4, #0]
 8015df2:	4680      	mov	r8, r0
 8015df4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015df6:	4620      	mov	r0, r4
 8015df8:	4798      	blx	r3
 8015dfa:	6823      	ldr	r3, [r4, #0]
 8015dfc:	4681      	mov	r9, r0
 8015dfe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015e02:	4620      	mov	r0, r4
 8015e04:	4798      	blx	r3
 8015e06:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8015e0a:	ab07      	add	r3, sp, #28
 8015e0c:	9300      	str	r3, [sp, #0]
 8015e0e:	f8cd 8004 	str.w	r8, [sp, #4]
 8015e12:	463b      	mov	r3, r7
 8015e14:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015e18:	4628      	mov	r0, r5
 8015e1a:	f7f4 fbf3 	bl	800a604 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015e1e:	b00d      	add	sp, #52	; 0x34
 8015e20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015e24:	20013898 	.word	0x20013898
 8015e28:	20013894 	.word	0x20013894
 8015e2c:	2001389c 	.word	0x2001389c
 8015e30:	2001383c 	.word	0x2001383c
 8015e34:	200138a0 	.word	0x200138a0

08015e38 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8015e38:	4770      	bx	lr

08015e3a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8015e3a:	4770      	bx	lr

08015e3c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8015e3c:	b510      	push	{r4, lr}
 8015e3e:	213c      	movs	r1, #60	; 0x3c
 8015e40:	4604      	mov	r4, r0
 8015e42:	f016 fea6 	bl	802cb92 <_ZdlPvj>
 8015e46:	4620      	mov	r0, r4
 8015e48:	bd10      	pop	{r4, pc}

08015e4a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8015e4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e4e:	461c      	mov	r4, r3
 8015e50:	4606      	mov	r6, r0
 8015e52:	9f06      	ldr	r7, [sp, #24]
 8015e54:	f7ff febf 	bl	8015bd6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8015e58:	8823      	ldrh	r3, [r4, #0]
 8015e5a:	86b3      	strh	r3, [r6, #52]	; 0x34
 8015e5c:	883b      	ldrh	r3, [r7, #0]
 8015e5e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8015e60:	4638      	mov	r0, r7
 8015e62:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8015e66:	f006 f9fb 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015e6a:	f04f 0802 	mov.w	r8, #2
 8015e6e:	fb95 f5f8 	sdiv	r5, r5, r8
 8015e72:	b2ad      	uxth	r5, r5
 8015e74:	fb90 f0f8 	sdiv	r0, r0, r8
 8015e78:	1a2d      	subs	r5, r5, r0
 8015e7a:	8735      	strh	r5, [r6, #56]	; 0x38
 8015e7c:	4638      	mov	r0, r7
 8015e7e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8015e82:	fb94 f4f8 	sdiv	r4, r4, r8
 8015e86:	f006 fa1f 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015e8a:	b2a4      	uxth	r4, r4
 8015e8c:	fb90 f0f8 	sdiv	r0, r0, r8
 8015e90:	1a24      	subs	r4, r4, r0
 8015e92:	8774      	strh	r4, [r6, #58]	; 0x3a
 8015e94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015e98 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8015e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e9c:	4604      	mov	r4, r0
 8015e9e:	b08c      	sub	sp, #48	; 0x30
 8015ea0:	460d      	mov	r5, r1
 8015ea2:	f7ff fedb 	bl	8015c5c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8015ea6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8015eaa:	2b00      	cmp	r3, #0
 8015eac:	d05d      	beq.n	8015f6a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8015eae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015eb0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015eb4:	a805      	add	r0, sp, #20
 8015eb6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8015eba:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8015ebe:	f006 f9cf 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015ec2:	4606      	mov	r6, r0
 8015ec4:	a805      	add	r0, sp, #20
 8015ec6:	f006 f9ff 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015eca:	6869      	ldr	r1, [r5, #4]
 8015ecc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015ed0:	6828      	ldr	r0, [r5, #0]
 8015ed2:	f8ad 8018 	strh.w	r8, [sp, #24]
 8015ed6:	ab08      	add	r3, sp, #32
 8015ed8:	ad08      	add	r5, sp, #32
 8015eda:	c303      	stmia	r3!, {r0, r1}
 8015edc:	a906      	add	r1, sp, #24
 8015ede:	4628      	mov	r0, r5
 8015ee0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8015ee4:	f8ad 601c 	strh.w	r6, [sp, #28]
 8015ee8:	f7fc fe18 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8015eec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015ef0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015ef4:	429a      	cmp	r2, r3
 8015ef6:	d035      	beq.n	8015f64 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015ef8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8015efc:	2b00      	cmp	r3, #0
 8015efe:	dd31      	ble.n	8015f64 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015f00:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8015f04:	2b00      	cmp	r3, #0
 8015f06:	dd2d      	ble.n	8015f64 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015f08:	2300      	movs	r3, #0
 8015f0a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8015f0e:	6823      	ldr	r3, [r4, #0]
 8015f10:	a90a      	add	r1, sp, #40	; 0x28
 8015f12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015f14:	4620      	mov	r0, r4
 8015f16:	4798      	blx	r3
 8015f18:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015f1c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8015f1e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015f22:	1a9b      	subs	r3, r3, r2
 8015f24:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015f28:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8015f2a:	1ac9      	subs	r1, r1, r3
 8015f2c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8015f30:	490f      	ldr	r1, [pc, #60]	; (8015f70 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8015f32:	6809      	ldr	r1, [r1, #0]
 8015f34:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8015f38:	b108      	cbz	r0, 8015f3e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8015f3a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8015f3c:	b900      	cbnz	r0, 8015f40 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8015f3e:	6888      	ldr	r0, [r1, #8]
 8015f40:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8015f44:	440b      	add	r3, r1
 8015f46:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8015f4a:	2601      	movs	r6, #1
 8015f4c:	440a      	add	r2, r1
 8015f4e:	6801      	ldr	r1, [r0, #0]
 8015f50:	9602      	str	r6, [sp, #8]
 8015f52:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015f56:	e9cd 5400 	strd	r5, r4, [sp]
 8015f5a:	b21b      	sxth	r3, r3
 8015f5c:	688c      	ldr	r4, [r1, #8]
 8015f5e:	b212      	sxth	r2, r2
 8015f60:	a905      	add	r1, sp, #20
 8015f62:	47a0      	blx	r4
 8015f64:	b00c      	add	sp, #48	; 0x30
 8015f66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015f6a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015f6c:	e7a0      	b.n	8015eb0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8015f6e:	bf00      	nop
 8015f70:	2001383c 	.word	0x2001383c

08015f74 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8015f74:	b510      	push	{r4, lr}
 8015f76:	2101      	movs	r1, #1
 8015f78:	2200      	movs	r2, #0
 8015f7a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8015f7e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8015f82:	4c0e      	ldr	r4, [pc, #56]	; (8015fbc <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8015f84:	8082      	strh	r2, [r0, #4]
 8015f86:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8015f8a:	80c2      	strh	r2, [r0, #6]
 8015f8c:	8102      	strh	r2, [r0, #8]
 8015f8e:	8142      	strh	r2, [r0, #10]
 8015f90:	8182      	strh	r2, [r0, #12]
 8015f92:	81c2      	strh	r2, [r0, #14]
 8015f94:	8202      	strh	r2, [r0, #16]
 8015f96:	8242      	strh	r2, [r0, #18]
 8015f98:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015f9c:	61c2      	str	r2, [r0, #28]
 8015f9e:	8402      	strh	r2, [r0, #32]
 8015fa0:	8442      	strh	r2, [r0, #34]	; 0x22
 8015fa2:	6282      	str	r2, [r0, #40]	; 0x28
 8015fa4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8015fa8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8015faa:	8601      	strh	r1, [r0, #48]	; 0x30
 8015fac:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8015fb0:	6004      	str	r4, [r0, #0]
 8015fb2:	8681      	strh	r1, [r0, #52]	; 0x34
 8015fb4:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015fb6:	8702      	strh	r2, [r0, #56]	; 0x38
 8015fb8:	8742      	strh	r2, [r0, #58]	; 0x3a
 8015fba:	bd10      	pop	{r4, pc}
 8015fbc:	08031c44 	.word	0x08031c44

08015fc0 <_ZN8touchgfx5ImageD1Ev>:
 8015fc0:	4770      	bx	lr

08015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8015fc2:	b570      	push	{r4, r5, r6, lr}
 8015fc4:	880b      	ldrh	r3, [r1, #0]
 8015fc6:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015fc8:	4604      	mov	r4, r0
 8015fca:	4608      	mov	r0, r1
 8015fcc:	460d      	mov	r5, r1
 8015fce:	f006 f947 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015fd2:	4606      	mov	r6, r0
 8015fd4:	4628      	mov	r0, r5
 8015fd6:	f006 f977 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015fda:	6823      	ldr	r3, [r4, #0]
 8015fdc:	4605      	mov	r5, r0
 8015fde:	4631      	mov	r1, r6
 8015fe0:	4620      	mov	r0, r4
 8015fe2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015fe4:	4798      	blx	r3
 8015fe6:	6823      	ldr	r3, [r4, #0]
 8015fe8:	4629      	mov	r1, r5
 8015fea:	4620      	mov	r0, r4
 8015fec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015fee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015ff2:	4718      	bx	r3

08015ff4 <_ZN8touchgfx5ImageD0Ev>:
 8015ff4:	b510      	push	{r4, lr}
 8015ff6:	212c      	movs	r1, #44	; 0x2c
 8015ff8:	4604      	mov	r4, r0
 8015ffa:	f016 fdca 	bl	802cb92 <_ZdlPvj>
 8015ffe:	4620      	mov	r0, r4
 8016000:	bd10      	pop	{r4, pc}

08016002 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8016002:	b510      	push	{r4, lr}
 8016004:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8016008:	2bff      	cmp	r3, #255	; 0xff
 801600a:	4604      	mov	r4, r0
 801600c:	d006      	beq.n	801601c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801600e:	2300      	movs	r3, #0
 8016010:	8003      	strh	r3, [r0, #0]
 8016012:	8043      	strh	r3, [r0, #2]
 8016014:	8083      	strh	r3, [r0, #4]
 8016016:	80c3      	strh	r3, [r0, #6]
 8016018:	4620      	mov	r0, r4
 801601a:	bd10      	pop	{r4, pc}
 801601c:	3126      	adds	r1, #38	; 0x26
 801601e:	f006 f987 	bl	801c330 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016022:	e7f9      	b.n	8016018 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08016024 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8016024:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016028:	4604      	mov	r4, r0
 801602a:	b088      	sub	sp, #32
 801602c:	f854 3b26 	ldr.w	r3, [r4], #38
 8016030:	2500      	movs	r5, #0
 8016032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016034:	460f      	mov	r7, r1
 8016036:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801603a:	a904      	add	r1, sp, #16
 801603c:	4606      	mov	r6, r0
 801603e:	4798      	blx	r3
 8016040:	4620      	mov	r0, r4
 8016042:	f006 f90d 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016046:	4680      	mov	r8, r0
 8016048:	4620      	mov	r0, r4
 801604a:	f006 f93d 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801604e:	9506      	str	r5, [sp, #24]
 8016050:	ad06      	add	r5, sp, #24
 8016052:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016056:	4639      	mov	r1, r7
 8016058:	4628      	mov	r0, r5
 801605a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801605e:	f7fc fd5d 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8016062:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016066:	2b00      	cmp	r3, #0
 8016068:	dd19      	ble.n	801609e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801606a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801606e:	2b00      	cmp	r3, #0
 8016070:	dd15      	ble.n	801609e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016072:	4b0c      	ldr	r3, [pc, #48]	; (80160a4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8016074:	681b      	ldr	r3, [r3, #0]
 8016076:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801607a:	b10a      	cbz	r2, 8016080 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801607c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801607e:	b900      	cbnz	r0, 8016082 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8016080:	6898      	ldr	r0, [r3, #8]
 8016082:	6801      	ldr	r1, [r0, #0]
 8016084:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016088:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801608c:	2701      	movs	r7, #1
 801608e:	9702      	str	r7, [sp, #8]
 8016090:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8016094:	e9cd 5600 	strd	r5, r6, [sp]
 8016098:	688d      	ldr	r5, [r1, #8]
 801609a:	4621      	mov	r1, r4
 801609c:	47a8      	blx	r5
 801609e:	b008      	add	sp, #32
 80160a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80160a4:	2001383c 	.word	0x2001383c

080160a8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80160a8:	4770      	bx	lr

080160aa <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80160aa:	b510      	push	{r4, lr}
 80160ac:	2148      	movs	r1, #72	; 0x48
 80160ae:	4604      	mov	r4, r0
 80160b0:	f016 fd6f 	bl	802cb92 <_ZdlPvj>
 80160b4:	4620      	mov	r0, r4
 80160b6:	bd10      	pop	{r4, pc}

080160b8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80160b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80160bc:	b08d      	sub	sp, #52	; 0x34
 80160be:	4604      	mov	r4, r0
 80160c0:	460f      	mov	r7, r1
 80160c2:	f7ff fdcb 	bl	8015c5c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80160c6:	4a55      	ldr	r2, [pc, #340]	; (801621c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80160c8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80160ca:	8812      	ldrh	r2, [r2, #0]
 80160cc:	429a      	cmp	r2, r3
 80160ce:	f240 8082 	bls.w	80161d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80160d2:	4d53      	ldr	r5, [pc, #332]	; (8016220 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80160d4:	682a      	ldr	r2, [r5, #0]
 80160d6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80160da:	4b52      	ldr	r3, [pc, #328]	; (8016224 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80160dc:	681b      	ldr	r3, [r3, #0]
 80160de:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80160e2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80160e6:	2200      	movs	r2, #0
 80160e8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80160ec:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80160f0:	2a03      	cmp	r2, #3
 80160f2:	d811      	bhi.n	8016118 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80160f4:	e8df f002 	tbb	[pc, r2]
 80160f8:	89727902 	.word	0x89727902
 80160fc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8016100:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8016104:	1ad2      	subs	r2, r2, r3
 8016106:	2002      	movs	r0, #2
 8016108:	f8ad 1010 	strh.w	r1, [sp, #16]
 801610c:	fb92 f2f0 	sdiv	r2, r2, r0
 8016110:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016114:	f8ad 200e 	strh.w	r2, [sp, #14]
 8016118:	f10d 080c 	add.w	r8, sp, #12
 801611c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016120:	f10d 0914 	add.w	r9, sp, #20
 8016124:	e889 0003 	stmia.w	r9, {r0, r1}
 8016128:	4639      	mov	r1, r7
 801612a:	4648      	mov	r0, r9
 801612c:	f7fc fcf6 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8016130:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016134:	2b00      	cmp	r3, #0
 8016136:	dd4e      	ble.n	80161d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016138:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801613c:	2b00      	cmp	r3, #0
 801613e:	dd4a      	ble.n	80161d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016140:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8016144:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8016148:	1a9b      	subs	r3, r3, r2
 801614a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801614e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8016152:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8016156:	1a9b      	subs	r3, r3, r2
 8016158:	f8ad 3016 	strh.w	r3, [sp, #22]
 801615c:	6823      	ldr	r3, [r4, #0]
 801615e:	4641      	mov	r1, r8
 8016160:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016162:	4620      	mov	r0, r4
 8016164:	4798      	blx	r3
 8016166:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801616a:	2b00      	cmp	r3, #0
 801616c:	d053      	beq.n	8016216 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801616e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8016170:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8016172:	682b      	ldr	r3, [r5, #0]
 8016174:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8016178:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801617c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8016180:	785b      	ldrb	r3, [r3, #1]
 8016182:	9209      	str	r2, [sp, #36]	; 0x24
 8016184:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8016188:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801618c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8016190:	2300      	movs	r3, #0
 8016192:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8016196:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801619a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801619e:	4b22      	ldr	r3, [pc, #136]	; (8016228 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80161a0:	9607      	str	r6, [sp, #28]
 80161a2:	681b      	ldr	r3, [r3, #0]
 80161a4:	f88d 5020 	strb.w	r5, [sp, #32]
 80161a8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80161ac:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80161b0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80161b4:	b10a      	cbz	r2, 80161ba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80161b6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80161b8:	b904      	cbnz	r4, 80161bc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80161ba:	689c      	ldr	r4, [r3, #8]
 80161bc:	4b1b      	ldr	r3, [pc, #108]	; (801622c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80161be:	6818      	ldr	r0, [r3, #0]
 80161c0:	f7f4 fa6e 	bl	800a6a0 <_ZNK8touchgfx5Texts7getTextEt>
 80161c4:	ab07      	add	r3, sp, #28
 80161c6:	9001      	str	r0, [sp, #4]
 80161c8:	9300      	str	r3, [sp, #0]
 80161ca:	e898 0006 	ldmia.w	r8, {r1, r2}
 80161ce:	464b      	mov	r3, r9
 80161d0:	4620      	mov	r0, r4
 80161d2:	f7f4 fa17 	bl	800a604 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80161d6:	b00d      	add	sp, #52	; 0x34
 80161d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80161dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80161e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80161e4:	1ad2      	subs	r2, r2, r3
 80161e6:	3201      	adds	r2, #1
 80161e8:	e78d      	b.n	8016106 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80161ea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80161ee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80161f2:	1ad2      	subs	r2, r2, r3
 80161f4:	3201      	adds	r2, #1
 80161f6:	2002      	movs	r0, #2
 80161f8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80161fc:	fb92 f2f0 	sdiv	r2, r2, r0
 8016200:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016204:	f8ad 200c 	strh.w	r2, [sp, #12]
 8016208:	e786      	b.n	8016118 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801620a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801620e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8016212:	1ad2      	subs	r2, r2, r3
 8016214:	e7ef      	b.n	80161f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8016216:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8016218:	e7aa      	b.n	8016170 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801621a:	bf00      	nop
 801621c:	20013898 	.word	0x20013898
 8016220:	20013894 	.word	0x20013894
 8016224:	2001389c 	.word	0x2001389c
 8016228:	2001383c 	.word	0x2001383c
 801622c:	200138a0 	.word	0x200138a0

08016230 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8016230:	b510      	push	{r4, lr}
 8016232:	2101      	movs	r1, #1
 8016234:	4c13      	ldr	r4, [pc, #76]	; (8016284 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8016236:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801623a:	2200      	movs	r2, #0
 801623c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8016240:	6004      	str	r4, [r0, #0]
 8016242:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016246:	4c10      	ldr	r4, [pc, #64]	; (8016288 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8016248:	8082      	strh	r2, [r0, #4]
 801624a:	80c2      	strh	r2, [r0, #6]
 801624c:	8102      	strh	r2, [r0, #8]
 801624e:	8142      	strh	r2, [r0, #10]
 8016250:	8182      	strh	r2, [r0, #12]
 8016252:	81c2      	strh	r2, [r0, #14]
 8016254:	8202      	strh	r2, [r0, #16]
 8016256:	8242      	strh	r2, [r0, #18]
 8016258:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801625c:	61c2      	str	r2, [r0, #28]
 801625e:	8402      	strh	r2, [r0, #32]
 8016260:	8442      	strh	r2, [r0, #34]	; 0x22
 8016262:	6282      	str	r2, [r0, #40]	; 0x28
 8016264:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8016268:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801626a:	8601      	strh	r1, [r0, #48]	; 0x30
 801626c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8016270:	6344      	str	r4, [r0, #52]	; 0x34
 8016272:	8701      	strh	r1, [r0, #56]	; 0x38
 8016274:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8016278:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801627c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8016280:	bd10      	pop	{r4, pc}
 8016282:	bf00      	nop
 8016284:	08031d28 	.word	0x08031d28
 8016288:	0802f514 	.word	0x0802f514

0801628c <_ZN8touchgfx7OutlineD1Ev>:
 801628c:	4770      	bx	lr

0801628e <_ZN8touchgfx7OutlineD0Ev>:
 801628e:	b510      	push	{r4, lr}
 8016290:	2130      	movs	r1, #48	; 0x30
 8016292:	4604      	mov	r4, r0
 8016294:	f016 fc7d 	bl	802cb92 <_ZdlPvj>
 8016298:	4620      	mov	r0, r4
 801629a:	bd10      	pop	{r4, pc}

0801629c <_ZN8touchgfx7Outline5resetEv>:
 801629c:	b510      	push	{r4, lr}
 801629e:	4604      	mov	r4, r0
 80162a0:	f000 fe96 	bl	8016fd0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80162a4:	60e0      	str	r0, [r4, #12]
 80162a6:	f000 fe99 	bl	8016fdc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80162aa:	68e3      	ldr	r3, [r4, #12]
 80162ac:	6123      	str	r3, [r4, #16]
 80162ae:	08c0      	lsrs	r0, r0, #3
 80162b0:	2200      	movs	r2, #0
 80162b2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80162b6:	3801      	subs	r0, #1
 80162b8:	6060      	str	r0, [r4, #4]
 80162ba:	60a2      	str	r2, [r4, #8]
 80162bc:	8019      	strh	r1, [r3, #0]
 80162be:	8059      	strh	r1, [r3, #2]
 80162c0:	809a      	strh	r2, [r3, #4]
 80162c2:	80da      	strh	r2, [r3, #6]
 80162c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80162c6:	f023 0301 	bic.w	r3, r3, #1
 80162ca:	f043 0302 	orr.w	r3, r3, #2
 80162ce:	6263      	str	r3, [r4, #36]	; 0x24
 80162d0:	bd10      	pop	{r4, pc}
	...

080162d4 <_ZN8touchgfx7OutlineC1Ev>:
 80162d4:	b510      	push	{r4, lr}
 80162d6:	4b0a      	ldr	r3, [pc, #40]	; (8016300 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80162d8:	6003      	str	r3, [r0, #0]
 80162da:	2300      	movs	r3, #0
 80162dc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80162e0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80162e4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80162e8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80162ec:	6243      	str	r3, [r0, #36]	; 0x24
 80162ee:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80162f2:	4604      	mov	r4, r0
 80162f4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80162f8:	f7ff ffd0 	bl	801629c <_ZN8touchgfx7Outline5resetEv>
 80162fc:	4620      	mov	r0, r4
 80162fe:	bd10      	pop	{r4, pc}
 8016300:	08031d9c 	.word	0x08031d9c

08016304 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8016304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016308:	b093      	sub	sp, #76	; 0x4c
 801630a:	1156      	asrs	r6, r2, #5
 801630c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801630e:	9305      	str	r3, [sp, #20]
 8016310:	f004 051f 	and.w	r5, r4, #31
 8016314:	1153      	asrs	r3, r2, #5
 8016316:	9504      	str	r5, [sp, #16]
 8016318:	1165      	asrs	r5, r4, #5
 801631a:	9303      	str	r3, [sp, #12]
 801631c:	42ae      	cmp	r6, r5
 801631e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8016322:	9306      	str	r3, [sp, #24]
 8016324:	f002 031f 	and.w	r3, r2, #31
 8016328:	f040 80f8 	bne.w	801651c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801632c:	9c04      	ldr	r4, [sp, #16]
 801632e:	9a05      	ldr	r2, [sp, #20]
 8016330:	42a3      	cmp	r3, r4
 8016332:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8016336:	6902      	ldr	r2, [r0, #16]
 8016338:	d125      	bne.n	8016386 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801633a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801633e:	459e      	cmp	lr, r3
 8016340:	d103      	bne.n	801634a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8016342:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016346:	429e      	cmp	r6, r3
 8016348:	d035      	beq.n	80163b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801634a:	88d1      	ldrh	r1, [r2, #6]
 801634c:	8893      	ldrh	r3, [r2, #4]
 801634e:	430b      	orrs	r3, r1
 8016350:	d010      	beq.n	8016374 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016352:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016356:	2b00      	cmp	r3, #0
 8016358:	db0c      	blt.n	8016374 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801635a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801635c:	428b      	cmp	r3, r1
 801635e:	da09      	bge.n	8016374 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016360:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016364:	428b      	cmp	r3, r1
 8016366:	bf38      	it	cc
 8016368:	3208      	addcc	r2, #8
 801636a:	f103 0301 	add.w	r3, r3, #1
 801636e:	bf38      	it	cc
 8016370:	6102      	strcc	r2, [r0, #16]
 8016372:	6083      	str	r3, [r0, #8]
 8016374:	6903      	ldr	r3, [r0, #16]
 8016376:	9a03      	ldr	r2, [sp, #12]
 8016378:	f8a3 e000 	strh.w	lr, [r3]
 801637c:	805a      	strh	r2, [r3, #2]
 801637e:	2200      	movs	r2, #0
 8016380:	809a      	strh	r2, [r3, #4]
 8016382:	80da      	strh	r2, [r3, #6]
 8016384:	e017      	b.n	80163b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016386:	9c05      	ldr	r4, [sp, #20]
 8016388:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801638c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8016390:	f004 041f 	and.w	r4, r4, #31
 8016394:	114e      	asrs	r6, r1, #5
 8016396:	9402      	str	r4, [sp, #8]
 8016398:	9c04      	ldr	r4, [sp, #16]
 801639a:	4576      	cmp	r6, lr
 801639c:	f001 0c1f 	and.w	ip, r1, #31
 80163a0:	eba4 0403 	sub.w	r4, r4, r3
 80163a4:	d10a      	bne.n	80163bc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80163a6:	9b02      	ldr	r3, [sp, #8]
 80163a8:	449c      	add	ip, r3
 80163aa:	44a0      	add	r8, r4
 80163ac:	fb04 a40c 	mla	r4, r4, ip, sl
 80163b0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80163b4:	80d4      	strh	r4, [r2, #6]
 80163b6:	b013      	add	sp, #76	; 0x4c
 80163b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163bc:	9d05      	ldr	r5, [sp, #20]
 80163be:	1a69      	subs	r1, r5, r1
 80163c0:	bf5b      	ittet	pl
 80163c2:	f1cc 0520 	rsbpl	r5, ip, #32
 80163c6:	436c      	mulpl	r4, r5
 80163c8:	2500      	movmi	r5, #0
 80163ca:	2520      	movpl	r5, #32
 80163cc:	bf44      	itt	mi
 80163ce:	fb04 f40c 	mulmi.w	r4, r4, ip
 80163d2:	4249      	negmi	r1, r1
 80163d4:	9501      	str	r5, [sp, #4]
 80163d6:	9f01      	ldr	r7, [sp, #4]
 80163d8:	fb94 f5f1 	sdiv	r5, r4, r1
 80163dc:	fb01 4415 	mls	r4, r1, r5, r4
 80163e0:	bf54      	ite	pl
 80163e2:	f04f 0901 	movpl.w	r9, #1
 80163e6:	f04f 39ff 	movmi.w	r9, #4294967295
 80163ea:	2c00      	cmp	r4, #0
 80163ec:	bfb8      	it	lt
 80163ee:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80163f2:	44bc      	add	ip, r7
 80163f4:	44a8      	add	r8, r5
 80163f6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80163fa:	f8a2 8004 	strh.w	r8, [r2, #4]
 80163fe:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016402:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016406:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801640a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801640e:	bfb8      	it	lt
 8016410:	1864      	addlt	r4, r4, r1
 8016412:	ea58 0202 	orrs.w	r2, r8, r2
 8016416:	444e      	add	r6, r9
 8016418:	d011      	beq.n	801643e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801641a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801641e:	f1b8 0f00 	cmp.w	r8, #0
 8016422:	db0c      	blt.n	801643e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016424:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8016426:	4590      	cmp	r8, r2
 8016428:	da09      	bge.n	801643e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801642a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801642e:	4590      	cmp	r8, r2
 8016430:	bf3c      	itt	cc
 8016432:	f10c 0208 	addcc.w	r2, ip, #8
 8016436:	6102      	strcc	r2, [r0, #16]
 8016438:	f108 0201 	add.w	r2, r8, #1
 801643c:	6082      	str	r2, [r0, #8]
 801643e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016442:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016446:	f8ac 6000 	strh.w	r6, [ip]
 801644a:	2700      	movs	r7, #0
 801644c:	45b6      	cmp	lr, r6
 801644e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8016452:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016456:	f8ac 7006 	strh.w	r7, [ip, #6]
 801645a:	442b      	add	r3, r5
 801645c:	d04d      	beq.n	80164fa <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801645e:	9f04      	ldr	r7, [sp, #16]
 8016460:	1aff      	subs	r7, r7, r3
 8016462:	443d      	add	r5, r7
 8016464:	016d      	lsls	r5, r5, #5
 8016466:	fb95 f8f1 	sdiv	r8, r5, r1
 801646a:	fb01 5518 	mls	r5, r1, r8, r5
 801646e:	2d00      	cmp	r5, #0
 8016470:	bfb8      	it	lt
 8016472:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016476:	f108 0701 	add.w	r7, r8, #1
 801647a:	bfb8      	it	lt
 801647c:	186d      	addlt	r5, r5, r1
 801647e:	1a64      	subs	r4, r4, r1
 8016480:	9703      	str	r7, [sp, #12]
 8016482:	f04f 0a00 	mov.w	sl, #0
 8016486:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801648a:	1964      	adds	r4, r4, r5
 801648c:	bf58      	it	pl
 801648e:	9f03      	ldrpl	r7, [sp, #12]
 8016490:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016494:	bf48      	it	mi
 8016496:	4647      	movmi	r7, r8
 8016498:	44bb      	add	fp, r7
 801649a:	f8ac b004 	strh.w	fp, [ip, #4]
 801649e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80164a2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80164a6:	f8ac b006 	strh.w	fp, [ip, #6]
 80164aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80164ae:	443b      	add	r3, r7
 80164b0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80164b4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80164b8:	bf58      	it	pl
 80164ba:	1a64      	subpl	r4, r4, r1
 80164bc:	ea5b 0707 	orrs.w	r7, fp, r7
 80164c0:	444e      	add	r6, r9
 80164c2:	d011      	beq.n	80164e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80164c4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80164c8:	f1bb 0f00 	cmp.w	fp, #0
 80164cc:	db0c      	blt.n	80164e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80164ce:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80164d0:	45bb      	cmp	fp, r7
 80164d2:	da09      	bge.n	80164e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80164d4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80164d8:	45bb      	cmp	fp, r7
 80164da:	bf3c      	itt	cc
 80164dc:	f10c 0708 	addcc.w	r7, ip, #8
 80164e0:	6107      	strcc	r7, [r0, #16]
 80164e2:	f10b 0701 	add.w	r7, fp, #1
 80164e6:	6087      	str	r7, [r0, #8]
 80164e8:	6907      	ldr	r7, [r0, #16]
 80164ea:	45b6      	cmp	lr, r6
 80164ec:	803e      	strh	r6, [r7, #0]
 80164ee:	807a      	strh	r2, [r7, #2]
 80164f0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80164f4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80164f8:	d1c5      	bne.n	8016486 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80164fa:	9a04      	ldr	r2, [sp, #16]
 80164fc:	1ad3      	subs	r3, r2, r3
 80164fe:	6902      	ldr	r2, [r0, #16]
 8016500:	8891      	ldrh	r1, [r2, #4]
 8016502:	88d6      	ldrh	r6, [r2, #6]
 8016504:	4419      	add	r1, r3
 8016506:	8091      	strh	r1, [r2, #4]
 8016508:	9902      	ldr	r1, [sp, #8]
 801650a:	f101 0c20 	add.w	ip, r1, #32
 801650e:	9901      	ldr	r1, [sp, #4]
 8016510:	ebac 0c01 	sub.w	ip, ip, r1
 8016514:	fb03 630c 	mla	r3, r3, ip, r6
 8016518:	80d3      	strh	r3, [r2, #6]
 801651a:	e74c      	b.n	80163b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801651c:	9d05      	ldr	r5, [sp, #20]
 801651e:	1aa2      	subs	r2, r4, r2
 8016520:	eba5 0501 	sub.w	r5, r5, r1
 8016524:	9508      	str	r5, [sp, #32]
 8016526:	9202      	str	r2, [sp, #8]
 8016528:	f140 8128 	bpl.w	801677c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801652c:	9a03      	ldr	r2, [sp, #12]
 801652e:	2a00      	cmp	r2, #0
 8016530:	f6ff af41 	blt.w	80163b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016534:	9a02      	ldr	r2, [sp, #8]
 8016536:	4252      	negs	r2, r2
 8016538:	9202      	str	r2, [sp, #8]
 801653a:	9a06      	ldr	r2, [sp, #24]
 801653c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8016540:	f04f 34ff 	mov.w	r4, #4294967295
 8016544:	9206      	str	r2, [sp, #24]
 8016546:	462a      	mov	r2, r5
 8016548:	940b      	str	r4, [sp, #44]	; 0x2c
 801654a:	435a      	muls	r2, r3
 801654c:	2400      	movs	r4, #0
 801654e:	9d02      	ldr	r5, [sp, #8]
 8016550:	9401      	str	r4, [sp, #4]
 8016552:	9c02      	ldr	r4, [sp, #8]
 8016554:	fb92 f4f4 	sdiv	r4, r2, r4
 8016558:	fb05 2214 	mls	r2, r5, r4, r2
 801655c:	2a00      	cmp	r2, #0
 801655e:	9207      	str	r2, [sp, #28]
 8016560:	bfbc      	itt	lt
 8016562:	1952      	addlt	r2, r2, r5
 8016564:	9207      	strlt	r2, [sp, #28]
 8016566:	9a01      	ldr	r2, [sp, #4]
 8016568:	6905      	ldr	r5, [r0, #16]
 801656a:	bfb8      	it	lt
 801656c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016570:	eb04 0901 	add.w	r9, r4, r1
 8016574:	429a      	cmp	r2, r3
 8016576:	ea4f 1669 	mov.w	r6, r9, asr #5
 801657a:	f040 8112 	bne.w	80167a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801657e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8016582:	429e      	cmp	r6, r3
 8016584:	d104      	bne.n	8016590 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8016586:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801658a:	9a03      	ldr	r2, [sp, #12]
 801658c:	429a      	cmp	r2, r3
 801658e:	d01b      	beq.n	80165c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016590:	88ea      	ldrh	r2, [r5, #6]
 8016592:	88ab      	ldrh	r3, [r5, #4]
 8016594:	4313      	orrs	r3, r2
 8016596:	d010      	beq.n	80165ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016598:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801659c:	2a00      	cmp	r2, #0
 801659e:	db0c      	blt.n	80165ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80165a0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80165a2:	429a      	cmp	r2, r3
 80165a4:	da09      	bge.n	80165ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80165a6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80165aa:	429a      	cmp	r2, r3
 80165ac:	bf38      	it	cc
 80165ae:	3508      	addcc	r5, #8
 80165b0:	f102 0201 	add.w	r2, r2, #1
 80165b4:	bf38      	it	cc
 80165b6:	6105      	strcc	r5, [r0, #16]
 80165b8:	6082      	str	r2, [r0, #8]
 80165ba:	6903      	ldr	r3, [r0, #16]
 80165bc:	9a03      	ldr	r2, [sp, #12]
 80165be:	805a      	strh	r2, [r3, #2]
 80165c0:	2200      	movs	r2, #0
 80165c2:	801e      	strh	r6, [r3, #0]
 80165c4:	809a      	strh	r2, [r3, #4]
 80165c6:	80da      	strh	r2, [r3, #6]
 80165c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80165ca:	9a03      	ldr	r2, [sp, #12]
 80165cc:	6901      	ldr	r1, [r0, #16]
 80165ce:	441a      	add	r2, r3
 80165d0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80165d4:	42b3      	cmp	r3, r6
 80165d6:	d103      	bne.n	80165e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80165d8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80165dc:	429a      	cmp	r2, r3
 80165de:	d01a      	beq.n	8016616 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80165e0:	88cc      	ldrh	r4, [r1, #6]
 80165e2:	888b      	ldrh	r3, [r1, #4]
 80165e4:	4323      	orrs	r3, r4
 80165e6:	d010      	beq.n	801660a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165e8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80165ec:	2c00      	cmp	r4, #0
 80165ee:	db0c      	blt.n	801660a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165f0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80165f2:	429c      	cmp	r4, r3
 80165f4:	da09      	bge.n	801660a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165f6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80165fa:	429c      	cmp	r4, r3
 80165fc:	bf38      	it	cc
 80165fe:	3108      	addcc	r1, #8
 8016600:	f104 0401 	add.w	r4, r4, #1
 8016604:	bf38      	it	cc
 8016606:	6101      	strcc	r1, [r0, #16]
 8016608:	6084      	str	r4, [r0, #8]
 801660a:	6903      	ldr	r3, [r0, #16]
 801660c:	2100      	movs	r1, #0
 801660e:	801e      	strh	r6, [r3, #0]
 8016610:	805a      	strh	r2, [r3, #2]
 8016612:	8099      	strh	r1, [r3, #4]
 8016614:	80d9      	strh	r1, [r3, #6]
 8016616:	9b06      	ldr	r3, [sp, #24]
 8016618:	4293      	cmp	r3, r2
 801661a:	f000 8082 	beq.w	8016722 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801661e:	9b08      	ldr	r3, [sp, #32]
 8016620:	9c02      	ldr	r4, [sp, #8]
 8016622:	9902      	ldr	r1, [sp, #8]
 8016624:	015b      	lsls	r3, r3, #5
 8016626:	fb93 f1f1 	sdiv	r1, r3, r1
 801662a:	fb04 3311 	mls	r3, r4, r1, r3
 801662e:	2b00      	cmp	r3, #0
 8016630:	9103      	str	r1, [sp, #12]
 8016632:	9308      	str	r3, [sp, #32]
 8016634:	da04      	bge.n	8016640 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8016636:	1e4b      	subs	r3, r1, #1
 8016638:	9303      	str	r3, [sp, #12]
 801663a:	9b08      	ldr	r3, [sp, #32]
 801663c:	4423      	add	r3, r4
 801663e:	9308      	str	r3, [sp, #32]
 8016640:	9b07      	ldr	r3, [sp, #28]
 8016642:	9902      	ldr	r1, [sp, #8]
 8016644:	1a5b      	subs	r3, r3, r1
 8016646:	9307      	str	r3, [sp, #28]
 8016648:	9b01      	ldr	r3, [sp, #4]
 801664a:	f1c3 0320 	rsb	r3, r3, #32
 801664e:	930e      	str	r3, [sp, #56]	; 0x38
 8016650:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016652:	9b01      	ldr	r3, [sp, #4]
 8016654:	1a5b      	subs	r3, r3, r1
 8016656:	464f      	mov	r7, r9
 8016658:	930a      	str	r3, [sp, #40]	; 0x28
 801665a:	2600      	movs	r6, #0
 801665c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8016660:	185b      	adds	r3, r3, r1
 8016662:	bf58      	it	pl
 8016664:	9902      	ldrpl	r1, [sp, #8]
 8016666:	9307      	str	r3, [sp, #28]
 8016668:	bf5d      	ittte	pl
 801666a:	1a5b      	subpl	r3, r3, r1
 801666c:	9307      	strpl	r3, [sp, #28]
 801666e:	9b03      	ldrpl	r3, [sp, #12]
 8016670:	9903      	ldrmi	r1, [sp, #12]
 8016672:	bf58      	it	pl
 8016674:	1c59      	addpl	r1, r3, #1
 8016676:	4489      	add	r9, r1
 8016678:	2a00      	cmp	r2, #0
 801667a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801667e:	db2e      	blt.n	80166de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016680:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016682:	4293      	cmp	r3, r2
 8016684:	dd2b      	ble.n	80166de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016686:	9c01      	ldr	r4, [sp, #4]
 8016688:	6905      	ldr	r5, [r0, #16]
 801668a:	46a0      	mov	r8, r4
 801668c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801668e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8016692:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8016696:	45a0      	cmp	r8, r4
 8016698:	f040 814f 	bne.w	801693a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801669c:	f9b5 1000 	ldrsh.w	r1, [r5]
 80166a0:	4551      	cmp	r1, sl
 80166a2:	d103      	bne.n	80166ac <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80166a4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80166a8:	4291      	cmp	r1, r2
 80166aa:	d018      	beq.n	80166de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80166ac:	ea5c 010e 	orrs.w	r1, ip, lr
 80166b0:	d00f      	beq.n	80166d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80166b2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80166b6:	2900      	cmp	r1, #0
 80166b8:	db0b      	blt.n	80166d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80166ba:	428b      	cmp	r3, r1
 80166bc:	dd09      	ble.n	80166d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80166be:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80166c2:	4299      	cmp	r1, r3
 80166c4:	bf38      	it	cc
 80166c6:	3508      	addcc	r5, #8
 80166c8:	f101 0101 	add.w	r1, r1, #1
 80166cc:	bf38      	it	cc
 80166ce:	6105      	strcc	r5, [r0, #16]
 80166d0:	6081      	str	r1, [r0, #8]
 80166d2:	6903      	ldr	r3, [r0, #16]
 80166d4:	f8a3 a000 	strh.w	sl, [r3]
 80166d8:	805a      	strh	r2, [r3, #2]
 80166da:	809e      	strh	r6, [r3, #4]
 80166dc:	80de      	strh	r6, [r3, #6]
 80166de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166e0:	6901      	ldr	r1, [r0, #16]
 80166e2:	441a      	add	r2, r3
 80166e4:	88cc      	ldrh	r4, [r1, #6]
 80166e6:	888b      	ldrh	r3, [r1, #4]
 80166e8:	4323      	orrs	r3, r4
 80166ea:	d010      	beq.n	801670e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166ec:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80166f0:	2c00      	cmp	r4, #0
 80166f2:	db0c      	blt.n	801670e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166f4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80166f6:	429c      	cmp	r4, r3
 80166f8:	da09      	bge.n	801670e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166fa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80166fe:	429c      	cmp	r4, r3
 8016700:	bf38      	it	cc
 8016702:	3108      	addcc	r1, #8
 8016704:	f104 0401 	add.w	r4, r4, #1
 8016708:	bf38      	it	cc
 801670a:	6101      	strcc	r1, [r0, #16]
 801670c:	6084      	str	r4, [r0, #8]
 801670e:	6903      	ldr	r3, [r0, #16]
 8016710:	f8a3 a000 	strh.w	sl, [r3]
 8016714:	805a      	strh	r2, [r3, #2]
 8016716:	809e      	strh	r6, [r3, #4]
 8016718:	80de      	strh	r6, [r3, #6]
 801671a:	9b06      	ldr	r3, [sp, #24]
 801671c:	4293      	cmp	r3, r2
 801671e:	464f      	mov	r7, r9
 8016720:	d19c      	bne.n	801665c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8016722:	9b01      	ldr	r3, [sp, #4]
 8016724:	6907      	ldr	r7, [r0, #16]
 8016726:	f1c3 0620 	rsb	r6, r3, #32
 801672a:	9b05      	ldr	r3, [sp, #20]
 801672c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8016730:	9b04      	ldr	r3, [sp, #16]
 8016732:	429e      	cmp	r6, r3
 8016734:	f040 81cc 	bne.w	8016ad0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8016738:	f9b7 3000 	ldrsh.w	r3, [r7]
 801673c:	459e      	cmp	lr, r3
 801673e:	d104      	bne.n	801674a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8016740:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016744:	429a      	cmp	r2, r3
 8016746:	f43f ae36 	beq.w	80163b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801674a:	88f9      	ldrh	r1, [r7, #6]
 801674c:	88bb      	ldrh	r3, [r7, #4]
 801674e:	430b      	orrs	r3, r1
 8016750:	d010      	beq.n	8016774 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016752:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016756:	2b00      	cmp	r3, #0
 8016758:	db0c      	blt.n	8016774 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801675a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801675c:	428b      	cmp	r3, r1
 801675e:	da09      	bge.n	8016774 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016760:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016764:	428b      	cmp	r3, r1
 8016766:	bf38      	it	cc
 8016768:	3708      	addcc	r7, #8
 801676a:	f103 0301 	add.w	r3, r3, #1
 801676e:	bf38      	it	cc
 8016770:	6107      	strcc	r7, [r0, #16]
 8016772:	6083      	str	r3, [r0, #8]
 8016774:	6903      	ldr	r3, [r0, #16]
 8016776:	f8a3 e000 	strh.w	lr, [r3]
 801677a:	e5ff      	b.n	801637c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801677c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801677e:	9c03      	ldr	r4, [sp, #12]
 8016780:	42a2      	cmp	r2, r4
 8016782:	f6ff ae18 	blt.w	80163b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016786:	9c06      	ldr	r4, [sp, #24]
 8016788:	42a2      	cmp	r2, r4
 801678a:	bfb8      	it	lt
 801678c:	3201      	addlt	r2, #1
 801678e:	9c08      	ldr	r4, [sp, #32]
 8016790:	bfb8      	it	lt
 8016792:	9206      	strlt	r2, [sp, #24]
 8016794:	f1c3 0220 	rsb	r2, r3, #32
 8016798:	4362      	muls	r2, r4
 801679a:	2401      	movs	r4, #1
 801679c:	940b      	str	r4, [sp, #44]	; 0x2c
 801679e:	2420      	movs	r4, #32
 80167a0:	e6d5      	b.n	801654e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80167a2:	f009 021f 	and.w	r2, r9, #31
 80167a6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80167aa:	920c      	str	r2, [sp, #48]	; 0x30
 80167ac:	9a01      	ldr	r2, [sp, #4]
 80167ae:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80167b2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80167b6:	45b0      	cmp	r8, r6
 80167b8:	f001 011f 	and.w	r1, r1, #31
 80167bc:	eba2 0203 	sub.w	r2, r2, r3
 80167c0:	d108      	bne.n	80167d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80167c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80167c4:	4419      	add	r1, r3
 80167c6:	4496      	add	lr, r2
 80167c8:	fb02 a101 	mla	r1, r2, r1, sl
 80167cc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80167d0:	80e9      	strh	r1, [r5, #6]
 80167d2:	e6f9      	b.n	80165c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80167d4:	2c00      	cmp	r4, #0
 80167d6:	f2c0 80a9 	blt.w	801692c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80167da:	2701      	movs	r7, #1
 80167dc:	f1c1 0c20 	rsb	ip, r1, #32
 80167e0:	970a      	str	r7, [sp, #40]	; 0x28
 80167e2:	fb02 f20c 	mul.w	r2, r2, ip
 80167e6:	2720      	movs	r7, #32
 80167e8:	9709      	str	r7, [sp, #36]	; 0x24
 80167ea:	fb92 fcf4 	sdiv	ip, r2, r4
 80167ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80167f0:	fb04 221c 	mls	r2, r4, ip, r2
 80167f4:	2a00      	cmp	r2, #0
 80167f6:	bfb8      	it	lt
 80167f8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80167fc:	4439      	add	r1, r7
 80167fe:	fb0c a101 	mla	r1, ip, r1, sl
 8016802:	80e9      	strh	r1, [r5, #6]
 8016804:	44e6      	add	lr, ip
 8016806:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016808:	f8a5 e004 	strh.w	lr, [r5, #4]
 801680c:	eb08 0501 	add.w	r5, r8, r1
 8016810:	6901      	ldr	r1, [r0, #16]
 8016812:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8016816:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801681a:	bfb8      	it	lt
 801681c:	1912      	addlt	r2, r2, r4
 801681e:	ea58 070e 	orrs.w	r7, r8, lr
 8016822:	d010      	beq.n	8016846 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016824:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8016828:	f1be 0f00 	cmp.w	lr, #0
 801682c:	db0b      	blt.n	8016846 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801682e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016830:	45be      	cmp	lr, r7
 8016832:	da08      	bge.n	8016846 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016834:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016838:	45be      	cmp	lr, r7
 801683a:	bf3c      	itt	cc
 801683c:	3108      	addcc	r1, #8
 801683e:	6101      	strcc	r1, [r0, #16]
 8016840:	f10e 0101 	add.w	r1, lr, #1
 8016844:	6081      	str	r1, [r0, #8]
 8016846:	6901      	ldr	r1, [r0, #16]
 8016848:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801684c:	800d      	strh	r5, [r1, #0]
 801684e:	f04f 0e00 	mov.w	lr, #0
 8016852:	42ae      	cmp	r6, r5
 8016854:	f8a1 8002 	strh.w	r8, [r1, #2]
 8016858:	f8a1 e004 	strh.w	lr, [r1, #4]
 801685c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8016860:	4463      	add	r3, ip
 8016862:	d054      	beq.n	801690e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8016864:	9901      	ldr	r1, [sp, #4]
 8016866:	1ac9      	subs	r1, r1, r3
 8016868:	4461      	add	r1, ip
 801686a:	0149      	lsls	r1, r1, #5
 801686c:	fb91 fef4 	sdiv	lr, r1, r4
 8016870:	fb04 111e 	mls	r1, r4, lr, r1
 8016874:	2900      	cmp	r1, #0
 8016876:	bfb8      	it	lt
 8016878:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801687c:	f10e 0701 	add.w	r7, lr, #1
 8016880:	bfb8      	it	lt
 8016882:	1909      	addlt	r1, r1, r4
 8016884:	1b12      	subs	r2, r2, r4
 8016886:	970d      	str	r7, [sp, #52]	; 0x34
 8016888:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801688c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801688e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8016892:	1852      	adds	r2, r2, r1
 8016894:	bf54      	ite	pl
 8016896:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801689a:	46f4      	movmi	ip, lr
 801689c:	44e3      	add	fp, ip
 801689e:	f8aa b004 	strh.w	fp, [sl, #4]
 80168a2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80168a6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80168aa:	f8aa b006 	strh.w	fp, [sl, #6]
 80168ae:	4463      	add	r3, ip
 80168b0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80168b4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80168b8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80168bc:	bf58      	it	pl
 80168be:	1b12      	subpl	r2, r2, r4
 80168c0:	443d      	add	r5, r7
 80168c2:	ea5b 070a 	orrs.w	r7, fp, sl
 80168c6:	d014      	beq.n	80168f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80168c8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80168cc:	f1ba 0f00 	cmp.w	sl, #0
 80168d0:	db0f      	blt.n	80168f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80168d2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80168d4:	45ba      	cmp	sl, r7
 80168d6:	da0c      	bge.n	80168f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80168d8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80168dc:	45ba      	cmp	sl, r7
 80168de:	bf38      	it	cc
 80168e0:	f10c 0c08 	addcc.w	ip, ip, #8
 80168e4:	f10a 0a01 	add.w	sl, sl, #1
 80168e8:	bf38      	it	cc
 80168ea:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80168ee:	f8c0 a008 	str.w	sl, [r0, #8]
 80168f2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80168f6:	f04f 0700 	mov.w	r7, #0
 80168fa:	42ae      	cmp	r6, r5
 80168fc:	f8ac 5000 	strh.w	r5, [ip]
 8016900:	f8ac 8002 	strh.w	r8, [ip, #2]
 8016904:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016908:	f8ac 7006 	strh.w	r7, [ip, #6]
 801690c:	d1bc      	bne.n	8016888 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801690e:	6904      	ldr	r4, [r0, #16]
 8016910:	9a01      	ldr	r2, [sp, #4]
 8016912:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016914:	1ad3      	subs	r3, r2, r3
 8016916:	88a2      	ldrh	r2, [r4, #4]
 8016918:	441a      	add	r2, r3
 801691a:	80a2      	strh	r2, [r4, #4]
 801691c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801691e:	3120      	adds	r1, #32
 8016920:	1a89      	subs	r1, r1, r2
 8016922:	88e2      	ldrh	r2, [r4, #6]
 8016924:	fb03 2301 	mla	r3, r3, r1, r2
 8016928:	80e3      	strh	r3, [r4, #6]
 801692a:	e64d      	b.n	80165c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801692c:	f04f 37ff 	mov.w	r7, #4294967295
 8016930:	970a      	str	r7, [sp, #40]	; 0x28
 8016932:	434a      	muls	r2, r1
 8016934:	4264      	negs	r4, r4
 8016936:	2700      	movs	r7, #0
 8016938:	e756      	b.n	80167e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801693a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801693e:	f009 031f 	and.w	r3, r9, #31
 8016942:	45d0      	cmp	r8, sl
 8016944:	f007 071f 	and.w	r7, r7, #31
 8016948:	930f      	str	r3, [sp, #60]	; 0x3c
 801694a:	fa1f fc8c 	uxth.w	ip, ip
 801694e:	fa1f fe8e 	uxth.w	lr, lr
 8016952:	d10a      	bne.n	801696a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8016954:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016956:	449c      	add	ip, r3
 8016958:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801695a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801695e:	441f      	add	r7, r3
 8016960:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016962:	fb03 e707 	mla	r7, r3, r7, lr
 8016966:	80ef      	strh	r7, [r5, #6]
 8016968:	e6b9      	b.n	80166de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801696a:	2900      	cmp	r1, #0
 801696c:	f2c0 80a8 	blt.w	8016ac0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8016970:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016972:	f1c7 0320 	rsb	r3, r7, #32
 8016976:	4363      	muls	r3, r4
 8016978:	2401      	movs	r4, #1
 801697a:	940d      	str	r4, [sp, #52]	; 0x34
 801697c:	2420      	movs	r4, #32
 801697e:	940c      	str	r4, [sp, #48]	; 0x30
 8016980:	fb93 f4f1 	sdiv	r4, r3, r1
 8016984:	fb01 3b14 	mls	fp, r1, r4, r3
 8016988:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801698a:	f1bb 0f00 	cmp.w	fp, #0
 801698e:	bfb8      	it	lt
 8016990:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016994:	441f      	add	r7, r3
 8016996:	fb04 e707 	mla	r7, r4, r7, lr
 801699a:	44a4      	add	ip, r4
 801699c:	f8a5 c004 	strh.w	ip, [r5, #4]
 80169a0:	80ef      	strh	r7, [r5, #6]
 80169a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80169a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80169a8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80169ac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80169b0:	bfb8      	it	lt
 80169b2:	448b      	addlt	fp, r1
 80169b4:	eb08 0503 	add.w	r5, r8, r3
 80169b8:	ea5e 0307 	orrs.w	r3, lr, r7
 80169bc:	d011      	beq.n	80169e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80169be:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80169c2:	f1be 0f00 	cmp.w	lr, #0
 80169c6:	db0c      	blt.n	80169e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80169c8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80169ca:	45be      	cmp	lr, r7
 80169cc:	da09      	bge.n	80169e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80169ce:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80169d2:	45be      	cmp	lr, r7
 80169d4:	bf3c      	itt	cc
 80169d6:	f10c 0708 	addcc.w	r7, ip, #8
 80169da:	6107      	strcc	r7, [r0, #16]
 80169dc:	f10e 0701 	add.w	r7, lr, #1
 80169e0:	6087      	str	r7, [r0, #8]
 80169e2:	6907      	ldr	r7, [r0, #16]
 80169e4:	b213      	sxth	r3, r2
 80169e6:	9310      	str	r3, [sp, #64]	; 0x40
 80169e8:	807b      	strh	r3, [r7, #2]
 80169ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169ec:	803d      	strh	r5, [r7, #0]
 80169ee:	4555      	cmp	r5, sl
 80169f0:	80be      	strh	r6, [r7, #4]
 80169f2:	80fe      	strh	r6, [r7, #6]
 80169f4:	eb04 0c03 	add.w	ip, r4, r3
 80169f8:	d051      	beq.n	8016a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80169fa:	9b01      	ldr	r3, [sp, #4]
 80169fc:	eba3 070c 	sub.w	r7, r3, ip
 8016a00:	443c      	add	r4, r7
 8016a02:	0164      	lsls	r4, r4, #5
 8016a04:	fb94 f8f1 	sdiv	r8, r4, r1
 8016a08:	fb01 4418 	mls	r4, r1, r8, r4
 8016a0c:	2c00      	cmp	r4, #0
 8016a0e:	bfb8      	it	lt
 8016a10:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016a14:	ebab 0301 	sub.w	r3, fp, r1
 8016a18:	f108 0701 	add.w	r7, r8, #1
 8016a1c:	bfb8      	it	lt
 8016a1e:	1864      	addlt	r4, r4, r1
 8016a20:	9309      	str	r3, [sp, #36]	; 0x24
 8016a22:	9711      	str	r7, [sp, #68]	; 0x44
 8016a24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016a26:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016a2a:	191b      	adds	r3, r3, r4
 8016a2c:	bf58      	it	pl
 8016a2e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8016a30:	f8be b004 	ldrh.w	fp, [lr, #4]
 8016a34:	9309      	str	r3, [sp, #36]	; 0x24
 8016a36:	bf48      	it	mi
 8016a38:	4647      	movmi	r7, r8
 8016a3a:	44bb      	add	fp, r7
 8016a3c:	f8ae b004 	strh.w	fp, [lr, #4]
 8016a40:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016a44:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016a48:	f8ae b006 	strh.w	fp, [lr, #6]
 8016a4c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016a50:	44bc      	add	ip, r7
 8016a52:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016a54:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016a58:	443d      	add	r5, r7
 8016a5a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8016a5e:	bf5c      	itt	pl
 8016a60:	1a5b      	subpl	r3, r3, r1
 8016a62:	9309      	strpl	r3, [sp, #36]	; 0x24
 8016a64:	ea5b 0307 	orrs.w	r3, fp, r7
 8016a68:	d011      	beq.n	8016a8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a6a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8016a6e:	f1bb 0f00 	cmp.w	fp, #0
 8016a72:	db0c      	blt.n	8016a8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a74:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016a76:	45bb      	cmp	fp, r7
 8016a78:	da09      	bge.n	8016a8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a7a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016a7e:	45bb      	cmp	fp, r7
 8016a80:	bf3c      	itt	cc
 8016a82:	f10e 0708 	addcc.w	r7, lr, #8
 8016a86:	6107      	strcc	r7, [r0, #16]
 8016a88:	f10b 0701 	add.w	r7, fp, #1
 8016a8c:	6087      	str	r7, [r0, #8]
 8016a8e:	6907      	ldr	r7, [r0, #16]
 8016a90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a92:	803d      	strh	r5, [r7, #0]
 8016a94:	4555      	cmp	r5, sl
 8016a96:	807b      	strh	r3, [r7, #2]
 8016a98:	80be      	strh	r6, [r7, #4]
 8016a9a:	80fe      	strh	r6, [r7, #6]
 8016a9c:	d1c2      	bne.n	8016a24 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8016a9e:	9b01      	ldr	r3, [sp, #4]
 8016aa0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016aa2:	eba3 0c0c 	sub.w	ip, r3, ip
 8016aa6:	6903      	ldr	r3, [r0, #16]
 8016aa8:	8899      	ldrh	r1, [r3, #4]
 8016aaa:	4461      	add	r1, ip
 8016aac:	8099      	strh	r1, [r3, #4]
 8016aae:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016ab0:	3720      	adds	r7, #32
 8016ab2:	1a7f      	subs	r7, r7, r1
 8016ab4:	88d9      	ldrh	r1, [r3, #6]
 8016ab6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8016aba:	f8a3 c006 	strh.w	ip, [r3, #6]
 8016abe:	e60e      	b.n	80166de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016ac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016ac2:	f04f 34ff 	mov.w	r4, #4294967295
 8016ac6:	940d      	str	r4, [sp, #52]	; 0x34
 8016ac8:	437b      	muls	r3, r7
 8016aca:	4249      	negs	r1, r1
 8016acc:	2400      	movs	r4, #0
 8016ace:	e756      	b.n	801697e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8016ad0:	9905      	ldr	r1, [sp, #20]
 8016ad2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8016ad6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8016ada:	f001 011f 	and.w	r1, r1, #31
 8016ade:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8016ae2:	9102      	str	r1, [sp, #8]
 8016ae4:	9904      	ldr	r1, [sp, #16]
 8016ae6:	45f3      	cmp	fp, lr
 8016ae8:	f009 0c1f 	and.w	ip, r9, #31
 8016aec:	eba1 0406 	sub.w	r4, r1, r6
 8016af0:	d108      	bne.n	8016b04 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8016af2:	9b02      	ldr	r3, [sp, #8]
 8016af4:	449c      	add	ip, r3
 8016af6:	44a0      	add	r8, r4
 8016af8:	fb04 a40c 	mla	r4, r4, ip, sl
 8016afc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016b00:	80fc      	strh	r4, [r7, #6]
 8016b02:	e458      	b.n	80163b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016b04:	9905      	ldr	r1, [sp, #20]
 8016b06:	ebb1 0109 	subs.w	r1, r1, r9
 8016b0a:	bf5b      	ittet	pl
 8016b0c:	f1cc 0520 	rsbpl	r5, ip, #32
 8016b10:	436c      	mulpl	r4, r5
 8016b12:	2500      	movmi	r5, #0
 8016b14:	2520      	movpl	r5, #32
 8016b16:	bf44      	itt	mi
 8016b18:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016b1c:	4249      	negmi	r1, r1
 8016b1e:	9501      	str	r5, [sp, #4]
 8016b20:	9b01      	ldr	r3, [sp, #4]
 8016b22:	fb94 f5f1 	sdiv	r5, r4, r1
 8016b26:	fb01 4415 	mls	r4, r1, r5, r4
 8016b2a:	bf54      	ite	pl
 8016b2c:	f04f 0901 	movpl.w	r9, #1
 8016b30:	f04f 39ff 	movmi.w	r9, #4294967295
 8016b34:	2c00      	cmp	r4, #0
 8016b36:	bfb8      	it	lt
 8016b38:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016b3c:	449c      	add	ip, r3
 8016b3e:	44a8      	add	r8, r5
 8016b40:	fb05 ac0c 	mla	ip, r5, ip, sl
 8016b44:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016b48:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016b4c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016b50:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8016b54:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016b58:	bfb8      	it	lt
 8016b5a:	1864      	addlt	r4, r4, r1
 8016b5c:	ea58 0707 	orrs.w	r7, r8, r7
 8016b60:	eb0b 0309 	add.w	r3, fp, r9
 8016b64:	d011      	beq.n	8016b8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b66:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8016b6a:	f1b8 0f00 	cmp.w	r8, #0
 8016b6e:	db0c      	blt.n	8016b8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b70:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016b72:	45b8      	cmp	r8, r7
 8016b74:	da09      	bge.n	8016b8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b76:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8016b7a:	45b8      	cmp	r8, r7
 8016b7c:	bf3c      	itt	cc
 8016b7e:	f10c 0708 	addcc.w	r7, ip, #8
 8016b82:	6107      	strcc	r7, [r0, #16]
 8016b84:	f108 0701 	add.w	r7, r8, #1
 8016b88:	6087      	str	r7, [r0, #8]
 8016b8a:	6907      	ldr	r7, [r0, #16]
 8016b8c:	f04f 0c00 	mov.w	ip, #0
 8016b90:	b212      	sxth	r2, r2
 8016b92:	459e      	cmp	lr, r3
 8016b94:	803b      	strh	r3, [r7, #0]
 8016b96:	807a      	strh	r2, [r7, #2]
 8016b98:	f8a7 c004 	strh.w	ip, [r7, #4]
 8016b9c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016ba0:	442e      	add	r6, r5
 8016ba2:	d04d      	beq.n	8016c40 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8016ba4:	9f04      	ldr	r7, [sp, #16]
 8016ba6:	1bbf      	subs	r7, r7, r6
 8016ba8:	443d      	add	r5, r7
 8016baa:	016d      	lsls	r5, r5, #5
 8016bac:	fb95 f8f1 	sdiv	r8, r5, r1
 8016bb0:	fb01 5518 	mls	r5, r1, r8, r5
 8016bb4:	4565      	cmp	r5, ip
 8016bb6:	bfb8      	it	lt
 8016bb8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016bbc:	f108 0701 	add.w	r7, r8, #1
 8016bc0:	bfb8      	it	lt
 8016bc2:	186d      	addlt	r5, r5, r1
 8016bc4:	1a64      	subs	r4, r4, r1
 8016bc6:	9703      	str	r7, [sp, #12]
 8016bc8:	f04f 0a00 	mov.w	sl, #0
 8016bcc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016bd0:	1964      	adds	r4, r4, r5
 8016bd2:	bf58      	it	pl
 8016bd4:	9f03      	ldrpl	r7, [sp, #12]
 8016bd6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016bda:	bf48      	it	mi
 8016bdc:	4647      	movmi	r7, r8
 8016bde:	44bb      	add	fp, r7
 8016be0:	f8ac b004 	strh.w	fp, [ip, #4]
 8016be4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016be8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016bec:	f8ac b006 	strh.w	fp, [ip, #6]
 8016bf0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016bf4:	443e      	add	r6, r7
 8016bf6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016bfa:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016bfe:	bf58      	it	pl
 8016c00:	1a64      	subpl	r4, r4, r1
 8016c02:	ea5b 0707 	orrs.w	r7, fp, r7
 8016c06:	444b      	add	r3, r9
 8016c08:	d011      	beq.n	8016c2e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016c0a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016c0e:	f1bb 0f00 	cmp.w	fp, #0
 8016c12:	db0c      	blt.n	8016c2e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016c14:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016c16:	45bb      	cmp	fp, r7
 8016c18:	da09      	bge.n	8016c2e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016c1a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016c1e:	45bb      	cmp	fp, r7
 8016c20:	bf3c      	itt	cc
 8016c22:	f10c 0708 	addcc.w	r7, ip, #8
 8016c26:	6107      	strcc	r7, [r0, #16]
 8016c28:	f10b 0701 	add.w	r7, fp, #1
 8016c2c:	6087      	str	r7, [r0, #8]
 8016c2e:	6907      	ldr	r7, [r0, #16]
 8016c30:	459e      	cmp	lr, r3
 8016c32:	803b      	strh	r3, [r7, #0]
 8016c34:	807a      	strh	r2, [r7, #2]
 8016c36:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016c3a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016c3e:	d1c5      	bne.n	8016bcc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8016c40:	9b04      	ldr	r3, [sp, #16]
 8016c42:	1b9e      	subs	r6, r3, r6
 8016c44:	6903      	ldr	r3, [r0, #16]
 8016c46:	889a      	ldrh	r2, [r3, #4]
 8016c48:	4432      	add	r2, r6
 8016c4a:	809a      	strh	r2, [r3, #4]
 8016c4c:	9a02      	ldr	r2, [sp, #8]
 8016c4e:	f102 0c20 	add.w	ip, r2, #32
 8016c52:	9a01      	ldr	r2, [sp, #4]
 8016c54:	ebac 0c02 	sub.w	ip, ip, r2
 8016c58:	88da      	ldrh	r2, [r3, #6]
 8016c5a:	fb06 260c 	mla	r6, r6, ip, r2
 8016c5e:	80de      	strh	r6, [r3, #6]
 8016c60:	f7ff bba9 	b.w	80163b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08016c64 <_ZN8touchgfx7Outline6lineToEii>:
 8016c64:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c66:	079b      	lsls	r3, r3, #30
 8016c68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016c6a:	460e      	mov	r6, r1
 8016c6c:	4615      	mov	r5, r2
 8016c6e:	d511      	bpl.n	8016c94 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016c70:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8016c74:	ea86 0701 	eor.w	r7, r6, r1
 8016c78:	ea85 0302 	eor.w	r3, r5, r2
 8016c7c:	433b      	orrs	r3, r7
 8016c7e:	d009      	beq.n	8016c94 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016c80:	4633      	mov	r3, r6
 8016c82:	9500      	str	r5, [sp, #0]
 8016c84:	f7ff fb3e 	bl	8016304 <_ZN8touchgfx7Outline10renderLineEiiii>
 8016c88:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c8a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8016c8e:	f043 0301 	orr.w	r3, r3, #1
 8016c92:	6243      	str	r3, [r0, #36]	; 0x24
 8016c94:	b003      	add	sp, #12
 8016c96:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016c98 <_ZN8touchgfx7Outline6moveToEii>:
 8016c98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016c9a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c9c:	4615      	mov	r5, r2
 8016c9e:	079a      	lsls	r2, r3, #30
 8016ca0:	4604      	mov	r4, r0
 8016ca2:	460e      	mov	r6, r1
 8016ca4:	d401      	bmi.n	8016caa <_ZN8touchgfx7Outline6moveToEii+0x12>
 8016ca6:	f7ff faf9 	bl	801629c <_ZN8touchgfx7Outline5resetEv>
 8016caa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016cac:	07db      	lsls	r3, r3, #31
 8016cae:	d504      	bpl.n	8016cba <_ZN8touchgfx7Outline6moveToEii+0x22>
 8016cb0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8016cb4:	4620      	mov	r0, r4
 8016cb6:	f7ff ffd5 	bl	8016c64 <_ZN8touchgfx7Outline6lineToEii>
 8016cba:	6923      	ldr	r3, [r4, #16]
 8016cbc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016cc0:	1170      	asrs	r0, r6, #5
 8016cc2:	4290      	cmp	r0, r2
 8016cc4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8016cc8:	d103      	bne.n	8016cd2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8016cca:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016cce:	4291      	cmp	r1, r2
 8016cd0:	d01a      	beq.n	8016d08 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8016cd2:	88df      	ldrh	r7, [r3, #6]
 8016cd4:	889a      	ldrh	r2, [r3, #4]
 8016cd6:	433a      	orrs	r2, r7
 8016cd8:	d010      	beq.n	8016cfc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016cda:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016cde:	2a00      	cmp	r2, #0
 8016ce0:	db0c      	blt.n	8016cfc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016ce2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8016ce4:	42ba      	cmp	r2, r7
 8016ce6:	da09      	bge.n	8016cfc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016ce8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8016cec:	42ba      	cmp	r2, r7
 8016cee:	bf38      	it	cc
 8016cf0:	3308      	addcc	r3, #8
 8016cf2:	f102 0201 	add.w	r2, r2, #1
 8016cf6:	bf38      	it	cc
 8016cf8:	6123      	strcc	r3, [r4, #16]
 8016cfa:	60a2      	str	r2, [r4, #8]
 8016cfc:	6923      	ldr	r3, [r4, #16]
 8016cfe:	2200      	movs	r2, #0
 8016d00:	8018      	strh	r0, [r3, #0]
 8016d02:	8059      	strh	r1, [r3, #2]
 8016d04:	809a      	strh	r2, [r3, #4]
 8016d06:	80da      	strh	r2, [r3, #6]
 8016d08:	6166      	str	r6, [r4, #20]
 8016d0a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8016d0e:	6225      	str	r5, [r4, #32]
 8016d10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016d12 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8016d12:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016d16:	b0d0      	sub	sp, #320	; 0x140
 8016d18:	466c      	mov	r4, sp
 8016d1a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016d1e:	4627      	mov	r7, r4
 8016d20:	1a0d      	subs	r5, r1, r0
 8016d22:	2d48      	cmp	r5, #72	; 0x48
 8016d24:	f100 0308 	add.w	r3, r0, #8
 8016d28:	f340 80d5 	ble.w	8016ed6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016d2c:	112d      	asrs	r5, r5, #4
 8016d2e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8016d32:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016d36:	6816      	ldr	r6, [r2, #0]
 8016d38:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8016d3c:	6006      	str	r6, [r0, #0]
 8016d3e:	6856      	ldr	r6, [r2, #4]
 8016d40:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016d44:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016d48:	6046      	str	r6, [r0, #4]
 8016d4a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016d4e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8016d52:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016d56:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016d5a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016d5e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8016d62:	4565      	cmp	r5, ip
 8016d64:	f1a1 0208 	sub.w	r2, r1, #8
 8016d68:	db06      	blt.n	8016d78 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8016d6a:	d119      	bne.n	8016da0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016d6c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8016d70:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8016d74:	42ae      	cmp	r6, r5
 8016d76:	dd13      	ble.n	8016da0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016d78:	460e      	mov	r6, r1
 8016d7a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8016d7e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016d82:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8016d86:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8016d8a:	601d      	str	r5, [r3, #0]
 8016d8c:	6875      	ldr	r5, [r6, #4]
 8016d8e:	605d      	str	r5, [r3, #4]
 8016d90:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016d94:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016d98:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016d9c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016da0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8016da4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8016da8:	42ae      	cmp	r6, r5
 8016daa:	db06      	blt.n	8016dba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8016dac:	d116      	bne.n	8016ddc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016dae:	f9b0 c000 	ldrsh.w	ip, [r0]
 8016db2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8016db6:	45ac      	cmp	ip, r5
 8016db8:	da10      	bge.n	8016ddc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016dba:	681d      	ldr	r5, [r3, #0]
 8016dbc:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016dc0:	6005      	str	r5, [r0, #0]
 8016dc2:	685d      	ldr	r5, [r3, #4]
 8016dc4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016dc8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016dcc:	f8a0 8008 	strh.w	r8, [r0, #8]
 8016dd0:	6045      	str	r5, [r0, #4]
 8016dd2:	8146      	strh	r6, [r0, #10]
 8016dd4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8016dd8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8016ddc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016de0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016de4:	4565      	cmp	r5, ip
 8016de6:	db06      	blt.n	8016df6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8016de8:	d119      	bne.n	8016e1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016dea:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8016dee:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016df2:	42ae      	cmp	r6, r5
 8016df4:	da13      	bge.n	8016e1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016df6:	460e      	mov	r6, r1
 8016df8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016dfc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016e00:	6005      	str	r5, [r0, #0]
 8016e02:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8016e06:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8016e0a:	6875      	ldr	r5, [r6, #4]
 8016e0c:	6045      	str	r5, [r0, #4]
 8016e0e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016e12:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016e16:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016e1a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016e1e:	3308      	adds	r3, #8
 8016e20:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016e24:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8016e28:	45e6      	cmp	lr, ip
 8016e2a:	dbf8      	blt.n	8016e1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e2c:	d105      	bne.n	8016e3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e2e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016e32:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016e36:	42ae      	cmp	r6, r5
 8016e38:	dbf1      	blt.n	8016e1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e3a:	4615      	mov	r5, r2
 8016e3c:	3a08      	subs	r2, #8
 8016e3e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8016e42:	45b4      	cmp	ip, r6
 8016e44:	dbf9      	blt.n	8016e3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e46:	d105      	bne.n	8016e54 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8016e48:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016e4c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8016e50:	45b0      	cmp	r8, r6
 8016e52:	dbf2      	blt.n	8016e3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e54:	4293      	cmp	r3, r2
 8016e56:	f1a5 0608 	sub.w	r6, r5, #8
 8016e5a:	d816      	bhi.n	8016e8a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8016e5c:	f8d6 c000 	ldr.w	ip, [r6]
 8016e60:	f9b3 a000 	ldrsh.w	sl, [r3]
 8016e64:	f8c3 c000 	str.w	ip, [r3]
 8016e68:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8016e6c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8016e70:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8016e74:	f8c3 c004 	str.w	ip, [r3, #4]
 8016e78:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016e7c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8016e80:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016e84:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016e88:	e7c9      	b.n	8016e1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e8a:	f8d6 e000 	ldr.w	lr, [r6]
 8016e8e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8016e92:	f8c0 e000 	str.w	lr, [r0]
 8016e96:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8016e9a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8016e9e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8016ea2:	f8c0 e004 	str.w	lr, [r0, #4]
 8016ea6:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016eaa:	f825 cc06 	strh.w	ip, [r5, #-6]
 8016eae:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016eb2:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016eb6:	1acd      	subs	r5, r1, r3
 8016eb8:	1a16      	subs	r6, r2, r0
 8016eba:	10ed      	asrs	r5, r5, #3
 8016ebc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8016ec0:	bfb5      	itete	lt
 8016ec2:	e9c4 0200 	strdlt	r0, r2, [r4]
 8016ec6:	e9c4 3100 	strdge	r3, r1, [r4]
 8016eca:	460a      	movlt	r2, r1
 8016ecc:	4603      	movge	r3, r0
 8016ece:	3408      	adds	r4, #8
 8016ed0:	4618      	mov	r0, r3
 8016ed2:	4611      	mov	r1, r2
 8016ed4:	e724      	b.n	8016d20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016ed6:	4299      	cmp	r1, r3
 8016ed8:	d928      	bls.n	8016f2c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8016eda:	f1a3 0210 	sub.w	r2, r3, #16
 8016ede:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8016ee2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8016ee6:	45ac      	cmp	ip, r5
 8016ee8:	db06      	blt.n	8016ef8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8016eea:	d11d      	bne.n	8016f28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016eec:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8016ef0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8016ef4:	42ae      	cmp	r6, r5
 8016ef6:	da17      	bge.n	8016f28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016ef8:	4615      	mov	r5, r2
 8016efa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8016efe:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8016f02:	6116      	str	r6, [r2, #16]
 8016f04:	686e      	ldr	r6, [r5, #4]
 8016f06:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8016f0a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8016f0e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8016f12:	42a8      	cmp	r0, r5
 8016f14:	6156      	str	r6, [r2, #20]
 8016f16:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8016f1a:	f8a2 800c 	strh.w	r8, [r2, #12]
 8016f1e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8016f22:	f1a2 0208 	sub.w	r2, r2, #8
 8016f26:	d1da      	bne.n	8016ede <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8016f28:	3308      	adds	r3, #8
 8016f2a:	e7d4      	b.n	8016ed6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016f2c:	42bc      	cmp	r4, r7
 8016f2e:	d903      	bls.n	8016f38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8016f30:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8016f34:	3c08      	subs	r4, #8
 8016f36:	e6f3      	b.n	8016d20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016f38:	b050      	add	sp, #320	; 0x140
 8016f3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016f3e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8016f3e:	b510      	push	{r4, lr}
 8016f40:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016f42:	07da      	lsls	r2, r3, #31
 8016f44:	4604      	mov	r4, r0
 8016f46:	d507      	bpl.n	8016f58 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8016f48:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8016f4c:	f7ff fe8a 	bl	8016c64 <_ZN8touchgfx7Outline6lineToEii>
 8016f50:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016f52:	f023 0301 	bic.w	r3, r3, #1
 8016f56:	6243      	str	r3, [r0, #36]	; 0x24
 8016f58:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f5a:	079b      	lsls	r3, r3, #30
 8016f5c:	d521      	bpl.n	8016fa2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8016f5e:	6923      	ldr	r3, [r4, #16]
 8016f60:	88d9      	ldrh	r1, [r3, #6]
 8016f62:	889a      	ldrh	r2, [r3, #4]
 8016f64:	430a      	orrs	r2, r1
 8016f66:	d010      	beq.n	8016f8a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f68:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016f6c:	2a00      	cmp	r2, #0
 8016f6e:	db0c      	blt.n	8016f8a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f70:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8016f72:	428a      	cmp	r2, r1
 8016f74:	da09      	bge.n	8016f8a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f76:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8016f7a:	4291      	cmp	r1, r2
 8016f7c:	bf88      	it	hi
 8016f7e:	3308      	addhi	r3, #8
 8016f80:	f102 0201 	add.w	r2, r2, #1
 8016f84:	bf88      	it	hi
 8016f86:	6123      	strhi	r3, [r4, #16]
 8016f88:	60a2      	str	r2, [r4, #8]
 8016f8a:	68a1      	ldr	r1, [r4, #8]
 8016f8c:	b129      	cbz	r1, 8016f9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016f8e:	6863      	ldr	r3, [r4, #4]
 8016f90:	4299      	cmp	r1, r3
 8016f92:	d802      	bhi.n	8016f9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016f94:	68e0      	ldr	r0, [r4, #12]
 8016f96:	f7ff febc 	bl	8016d12 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8016f9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f9c:	f023 0302 	bic.w	r3, r3, #2
 8016fa0:	6263      	str	r3, [r4, #36]	; 0x24
 8016fa2:	68e0      	ldr	r0, [r4, #12]
 8016fa4:	bd10      	pop	{r4, pc}
	...

08016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8016fa8:	4b02      	ldr	r3, [pc, #8]	; (8016fb4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8016faa:	6018      	str	r0, [r3, #0]
 8016fac:	4b02      	ldr	r3, [pc, #8]	; (8016fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8016fae:	6019      	str	r1, [r3, #0]
 8016fb0:	4770      	bx	lr
 8016fb2:	bf00      	nop
 8016fb4:	20013844 	.word	0x20013844
 8016fb8:	20013848 	.word	0x20013848

08016fbc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8016fbc:	4a02      	ldr	r2, [pc, #8]	; (8016fc8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8016fbe:	2300      	movs	r3, #0
 8016fc0:	6013      	str	r3, [r2, #0]
 8016fc2:	4a02      	ldr	r2, [pc, #8]	; (8016fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8016fc4:	6013      	str	r3, [r2, #0]
 8016fc6:	4770      	bx	lr
 8016fc8:	20013844 	.word	0x20013844
 8016fcc:	20013848 	.word	0x20013848

08016fd0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8016fd0:	4b01      	ldr	r3, [pc, #4]	; (8016fd8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8016fd2:	6818      	ldr	r0, [r3, #0]
 8016fd4:	4770      	bx	lr
 8016fd6:	bf00      	nop
 8016fd8:	20013844 	.word	0x20013844

08016fdc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8016fdc:	4b01      	ldr	r3, [pc, #4]	; (8016fe4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8016fde:	6818      	ldr	r0, [r3, #0]
 8016fe0:	4770      	bx	lr
 8016fe2:	bf00      	nop
 8016fe4:	20013848 	.word	0x20013848

08016fe8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8016fe8:	b510      	push	{r4, lr}
 8016fea:	6803      	ldr	r3, [r0, #0]
 8016fec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fee:	460c      	mov	r4, r1
 8016ff0:	4798      	blx	r3
 8016ff2:	1b03      	subs	r3, r0, r4
 8016ff4:	4258      	negs	r0, r3
 8016ff6:	4158      	adcs	r0, r3
 8016ff8:	bd10      	pop	{r4, pc}
	...

08016ffc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8016ffc:	4b01      	ldr	r3, [pc, #4]	; (8017004 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8016ffe:	6019      	str	r1, [r3, #0]
 8017000:	4770      	bx	lr
 8017002:	bf00      	nop
 8017004:	2001384c 	.word	0x2001384c

08017008 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801700c:	4696      	mov	lr, r2
 801700e:	4605      	mov	r5, r0
 8017010:	4614      	mov	r4, r2
 8017012:	460e      	mov	r6, r1
 8017014:	461f      	mov	r7, r3
 8017016:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801701a:	b097      	sub	sp, #92	; 0x5c
 801701c:	f10d 0c1c 	add.w	ip, sp, #28
 8017020:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017024:	f8de 3000 	ldr.w	r3, [lr]
 8017028:	f8cc 3000 	str.w	r3, [ip]
 801702c:	f104 0e14 	add.w	lr, r4, #20
 8017030:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017034:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017038:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801703c:	f8de 3000 	ldr.w	r3, [lr]
 8017040:	f8cc 3000 	str.w	r3, [ip]
 8017044:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017048:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801704c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017050:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017054:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8017058:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801705c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8017060:	f8de 3000 	ldr.w	r3, [lr]
 8017064:	f8cc 3000 	str.w	r3, [ip]
 8017068:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801706a:	682b      	ldr	r3, [r5, #0]
 801706c:	9201      	str	r2, [sp, #4]
 801706e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017072:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017074:	9200      	str	r2, [sp, #0]
 8017076:	f8cd 8008 	str.w	r8, [sp, #8]
 801707a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801707e:	aa07      	add	r2, sp, #28
 8017080:	463b      	mov	r3, r7
 8017082:	4631      	mov	r1, r6
 8017084:	4628      	mov	r0, r5
 8017086:	47d8      	blx	fp
 8017088:	46a6      	mov	lr, r4
 801708a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801708e:	f10d 0c1c 	add.w	ip, sp, #28
 8017092:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017096:	f8de 3000 	ldr.w	r3, [lr]
 801709a:	f8cc 3000 	str.w	r3, [ip]
 801709e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80170a2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80170a6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80170aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80170ae:	343c      	adds	r4, #60	; 0x3c
 80170b0:	f8de 3000 	ldr.w	r3, [lr]
 80170b4:	f8cc 3000 	str.w	r3, [ip]
 80170b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80170ba:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80170be:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80170c2:	6823      	ldr	r3, [r4, #0]
 80170c4:	f8cc 3000 	str.w	r3, [ip]
 80170c8:	682b      	ldr	r3, [r5, #0]
 80170ca:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80170ce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80170d0:	9201      	str	r2, [sp, #4]
 80170d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80170d4:	9200      	str	r2, [sp, #0]
 80170d6:	f8cd 8008 	str.w	r8, [sp, #8]
 80170da:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80170dc:	aa07      	add	r2, sp, #28
 80170de:	463b      	mov	r3, r7
 80170e0:	4631      	mov	r1, r6
 80170e2:	4628      	mov	r0, r5
 80170e4:	47a0      	blx	r4
 80170e6:	b017      	add	sp, #92	; 0x5c
 80170e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080170ec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80170ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170f0:	b08d      	sub	sp, #52	; 0x34
 80170f2:	4688      	mov	r8, r1
 80170f4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80170f6:	f8d3 c000 	ldr.w	ip, [r3]
 80170fa:	680f      	ldr	r7, [r1, #0]
 80170fc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8017100:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8017104:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8017108:	edd3 6a07 	vldr	s13, [r3, #28]
 801710c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801710e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8017112:	f9b1 9000 	ldrsh.w	r9, [r1]
 8017116:	f9ba 1000 	ldrsh.w	r1, [sl]
 801711a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801711e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8017122:	eba7 070c 	sub.w	r7, r7, ip
 8017126:	42bc      	cmp	r4, r7
 8017128:	bfa8      	it	ge
 801712a:	463c      	movge	r4, r7
 801712c:	ee07 4a90 	vmov	s15, r4
 8017130:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8017134:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8017138:	ee25 4a04 	vmul.f32	s8, s10, s8
 801713c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8017140:	ee25 5a27 	vmul.f32	s10, s10, s15
 8017144:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017148:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801714c:	eb09 0e0c 	add.w	lr, r9, ip
 8017150:	4571      	cmp	r1, lr
 8017152:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017156:	ee32 1a05 	vadd.f32	s2, s4, s10
 801715a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801715e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017162:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017166:	f340 808d 	ble.w	8017284 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801716a:	eba1 060e 	sub.w	r6, r1, lr
 801716e:	fb96 f5f4 	sdiv	r5, r6, r4
 8017172:	ee07 5a10 	vmov	s14, r5
 8017176:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801717a:	2d00      	cmp	r5, #0
 801717c:	fb04 6615 	mls	r6, r4, r5, r6
 8017180:	eea7 0a04 	vfma.f32	s0, s14, s8
 8017184:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017188:	eea7 1a05 	vfma.f32	s2, s14, s10
 801718c:	dd13      	ble.n	80171b6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801718e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8017192:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8017196:	eef5 6a40 	vcmp.f32	s13, #0.0
 801719a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801719e:	bf18      	it	ne
 80171a0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80171a4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80171a8:	bf08      	it	eq
 80171aa:	eeb0 7a67 	vmoveq.f32	s14, s15
 80171ae:	ee61 1a87 	vmul.f32	s3, s3, s14
 80171b2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80171b6:	fb05 f204 	mul.w	r2, r5, r4
 80171ba:	1abf      	subs	r7, r7, r2
 80171bc:	4494      	add	ip, r2
 80171be:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80171c2:	4411      	add	r1, r2
 80171c4:	eb09 020c 	add.w	r2, r9, ip
 80171c8:	443a      	add	r2, r7
 80171ca:	b209      	sxth	r1, r1
 80171cc:	428a      	cmp	r2, r1
 80171ce:	bfc4      	itt	gt
 80171d0:	eba1 0209 	subgt.w	r2, r1, r9
 80171d4:	eba2 070c 	subgt.w	r7, r2, ip
 80171d8:	2f00      	cmp	r7, #0
 80171da:	dd50      	ble.n	801727e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80171dc:	fb97 f1f4 	sdiv	r1, r7, r4
 80171e0:	fb04 7211 	mls	r2, r4, r1, r7
 80171e4:	b90a      	cbnz	r2, 80171ea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80171e6:	3901      	subs	r1, #1
 80171e8:	4622      	mov	r2, r4
 80171ea:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80171ee:	6840      	ldr	r0, [r0, #4]
 80171f0:	900b      	str	r0, [sp, #44]	; 0x2c
 80171f2:	f8d0 a000 	ldr.w	sl, [r0]
 80171f6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80171f8:	9008      	str	r0, [sp, #32]
 80171fa:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80171fe:	9818      	ldr	r0, [sp, #96]	; 0x60
 8017200:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8017204:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8017208:	695b      	ldr	r3, [r3, #20]
 801720a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801720c:	445b      	add	r3, fp
 801720e:	eef0 6a42 	vmov.f32	s13, s4
 8017212:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8017216:	ee21 3a23 	vmul.f32	s6, s2, s7
 801721a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801721e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017222:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017226:	9307      	str	r3, [sp, #28]
 8017228:	ee17 7a90 	vmov	r7, s15
 801722c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8017230:	eeb0 7a61 	vmov.f32	s14, s3
 8017234:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017238:	ee16 3a90 	vmov	r3, s13
 801723c:	fb97 f7f4 	sdiv	r7, r7, r4
 8017240:	ee17 ca90 	vmov	ip, s15
 8017244:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8017248:	fb9c fcf4 	sdiv	ip, ip, r4
 801724c:	fb0c 3306 	mla	r3, ip, r6, r3
 8017250:	9302      	str	r3, [sp, #8]
 8017252:	ee17 3a10 	vmov	r3, s14
 8017256:	44b6      	add	lr, r6
 8017258:	fb04 e505 	mla	r5, r4, r5, lr
 801725c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017260:	fb07 3706 	mla	r7, r7, r6, r3
 8017264:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017268:	e9cd 4700 	strd	r4, r7, [sp]
 801726c:	2900      	cmp	r1, #0
 801726e:	bfcc      	ite	gt
 8017270:	46a1      	movgt	r9, r4
 8017272:	4691      	movle	r9, r2
 8017274:	eba9 0306 	sub.w	r3, r9, r6
 8017278:	f8da 4008 	ldr.w	r4, [sl, #8]
 801727c:	47a0      	blx	r4
 801727e:	b00d      	add	sp, #52	; 0x34
 8017280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017284:	2500      	movs	r5, #0
 8017286:	462e      	mov	r6, r5
 8017288:	e799      	b.n	80171be <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801728c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801728c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017290:	b0db      	sub	sp, #364	; 0x16c
 8017292:	461d      	mov	r5, r3
 8017294:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017298:	930a      	str	r3, [sp, #40]	; 0x28
 801729a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801729e:	930b      	str	r3, [sp, #44]	; 0x2c
 80172a0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80172a4:	9310      	str	r3, [sp, #64]	; 0x40
 80172a6:	6803      	ldr	r3, [r0, #0]
 80172a8:	910f      	str	r1, [sp, #60]	; 0x3c
 80172aa:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80172ac:	9009      	str	r0, [sp, #36]	; 0x24
 80172ae:	4614      	mov	r4, r2
 80172b0:	4629      	mov	r1, r5
 80172b2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80172b6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80172ba:	47b8      	blx	r7
 80172bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80172be:	6058      	str	r0, [r3, #4]
 80172c0:	2800      	cmp	r0, #0
 80172c2:	f000 83a1 	beq.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172c6:	682b      	ldr	r3, [r5, #0]
 80172c8:	9314      	str	r3, [sp, #80]	; 0x50
 80172ca:	686b      	ldr	r3, [r5, #4]
 80172cc:	9315      	str	r3, [sp, #84]	; 0x54
 80172ce:	4bc4      	ldr	r3, [pc, #784]	; (80175e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80172d0:	ed94 7a02 	vldr	s14, [r4, #8]
 80172d4:	7819      	ldrb	r1, [r3, #0]
 80172d6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80172da:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80172de:	2900      	cmp	r1, #0
 80172e0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80172e4:	bf16      	itet	ne
 80172e6:	4619      	movne	r1, r3
 80172e8:	4611      	moveq	r1, r2
 80172ea:	4613      	movne	r3, r2
 80172ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172f0:	9116      	str	r1, [sp, #88]	; 0x58
 80172f2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80172f6:	f240 8387 	bls.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172fa:	ed94 7a07 	vldr	s14, [r4, #28]
 80172fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017302:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017306:	f240 837f 	bls.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801730a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801730e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017312:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017316:	f240 8377 	bls.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801731a:	6822      	ldr	r2, [r4, #0]
 801731c:	4bb1      	ldr	r3, [pc, #708]	; (80175e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801731e:	429a      	cmp	r2, r3
 8017320:	f2c0 8372 	blt.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017324:	49b0      	ldr	r1, [pc, #704]	; (80175e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8017326:	6963      	ldr	r3, [r4, #20]
 8017328:	428a      	cmp	r2, r1
 801732a:	f300 836d 	bgt.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801732e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017332:	48ae      	ldr	r0, [pc, #696]	; (80175ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8017334:	33ff      	adds	r3, #255	; 0xff
 8017336:	4283      	cmp	r3, r0
 8017338:	f200 8366 	bhi.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801733c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801733e:	4dac      	ldr	r5, [pc, #688]	; (80175f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8017340:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017344:	33ff      	adds	r3, #255	; 0xff
 8017346:	42ab      	cmp	r3, r5
 8017348:	f200 835e 	bhi.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801734c:	6862      	ldr	r2, [r4, #4]
 801734e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017352:	33ff      	adds	r3, #255	; 0xff
 8017354:	4283      	cmp	r3, r0
 8017356:	f200 8357 	bhi.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801735a:	69a1      	ldr	r1, [r4, #24]
 801735c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017360:	33ff      	adds	r3, #255	; 0xff
 8017362:	4283      	cmp	r3, r0
 8017364:	f200 8350 	bhi.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017368:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801736a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801736e:	30ff      	adds	r0, #255	; 0xff
 8017370:	42a8      	cmp	r0, r5
 8017372:	f200 8349 	bhi.w	8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017376:	428a      	cmp	r2, r1
 8017378:	f280 8110 	bge.w	801759c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801737c:	429a      	cmp	r2, r3
 801737e:	f300 8119 	bgt.w	80175b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8017382:	4299      	cmp	r1, r3
 8017384:	f280 811d 	bge.w	80175c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017388:	2502      	movs	r5, #2
 801738a:	2701      	movs	r7, #1
 801738c:	46a9      	mov	r9, r5
 801738e:	46b8      	mov	r8, r7
 8017390:	f04f 0a00 	mov.w	sl, #0
 8017394:	4621      	mov	r1, r4
 8017396:	a849      	add	r0, sp, #292	; 0x124
 8017398:	f003 ff2a 	bl	801b1f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801739c:	4622      	mov	r2, r4
 801739e:	4653      	mov	r3, sl
 80173a0:	a949      	add	r1, sp, #292	; 0x124
 80173a2:	f8cd 9000 	str.w	r9, [sp]
 80173a6:	a819      	add	r0, sp, #100	; 0x64
 80173a8:	f004 f852 	bl	801b450 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80173ac:	4622      	mov	r2, r4
 80173ae:	4653      	mov	r3, sl
 80173b0:	a949      	add	r1, sp, #292	; 0x124
 80173b2:	f8cd 8000 	str.w	r8, [sp]
 80173b6:	a829      	add	r0, sp, #164	; 0xa4
 80173b8:	f004 f84a 	bl	801b450 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80173bc:	4643      	mov	r3, r8
 80173be:	4622      	mov	r2, r4
 80173c0:	a949      	add	r1, sp, #292	; 0x124
 80173c2:	f8cd 9000 	str.w	r9, [sp]
 80173c6:	a839      	add	r0, sp, #228	; 0xe4
 80173c8:	f004 f842 	bl	801b450 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80173cc:	42af      	cmp	r7, r5
 80173ce:	bfb5      	itete	lt
 80173d0:	2300      	movlt	r3, #0
 80173d2:	2301      	movge	r3, #1
 80173d4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80173d6:	930e      	strge	r3, [sp, #56]	; 0x38
 80173d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80173da:	e893 0003 	ldmia.w	r3, {r0, r1}
 80173de:	af12      	add	r7, sp, #72	; 0x48
 80173e0:	bfb9      	ittee	lt
 80173e2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80173e4:	ac19      	addlt	r4, sp, #100	; 0x64
 80173e6:	ad19      	addge	r5, sp, #100	; 0x64
 80173e8:	ac29      	addge	r4, sp, #164	; 0xa4
 80173ea:	e887 0003 	stmia.w	r7, {r0, r1}
 80173ee:	b928      	cbnz	r0, 80173fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80173f0:	4b80      	ldr	r3, [pc, #512]	; (80175f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80173f2:	6818      	ldr	r0, [r3, #0]
 80173f4:	6803      	ldr	r3, [r0, #0]
 80173f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80173f8:	4798      	blx	r3
 80173fa:	6038      	str	r0, [r7, #0]
 80173fc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80173fe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017402:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017406:	930c      	str	r3, [sp, #48]	; 0x30
 8017408:	990c      	ldr	r1, [sp, #48]	; 0x30
 801740a:	6963      	ldr	r3, [r4, #20]
 801740c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801740e:	440b      	add	r3, r1
 8017410:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017414:	4408      	add	r0, r1
 8017416:	b200      	sxth	r0, r0
 8017418:	4283      	cmp	r3, r0
 801741a:	900d      	str	r0, [sp, #52]	; 0x34
 801741c:	f280 80dd 	bge.w	80175da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8017420:	428b      	cmp	r3, r1
 8017422:	da08      	bge.n	8017436 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017424:	2a00      	cmp	r2, #0
 8017426:	dd06      	ble.n	8017436 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017428:	1acb      	subs	r3, r1, r3
 801742a:	429a      	cmp	r2, r3
 801742c:	f2c0 80e4 	blt.w	80175f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8017430:	2b00      	cmp	r3, #0
 8017432:	f300 80e2 	bgt.w	80175fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8017436:	6967      	ldr	r7, [r4, #20]
 8017438:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801743a:	443b      	add	r3, r7
 801743c:	461f      	mov	r7, r3
 801743e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017440:	1bdf      	subs	r7, r3, r7
 8017442:	4297      	cmp	r7, r2
 8017444:	bfa8      	it	ge
 8017446:	4617      	movge	r7, r2
 8017448:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801744c:	2f00      	cmp	r7, #0
 801744e:	f340 8166 	ble.w	801771e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017452:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017454:	6829      	ldr	r1, [r5, #0]
 8017456:	f9b3 2000 	ldrsh.w	r2, [r3]
 801745a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801745e:	6820      	ldr	r0, [r4, #0]
 8017460:	4411      	add	r1, r2
 8017462:	4299      	cmp	r1, r3
 8017464:	dd1a      	ble.n	801749c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017466:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801746a:	440b      	add	r3, r1
 801746c:	4402      	add	r2, r0
 801746e:	b21b      	sxth	r3, r3
 8017470:	429a      	cmp	r2, r3
 8017472:	dc13      	bgt.n	801749c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017474:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017476:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017478:	681b      	ldr	r3, [r3, #0]
 801747a:	9206      	str	r2, [sp, #24]
 801747c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801747e:	9205      	str	r2, [sp, #20]
 8017480:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017482:	9500      	str	r5, [sp, #0]
 8017484:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017488:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801748a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801748c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017490:	a912      	add	r1, sp, #72	; 0x48
 8017492:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017496:	aa49      	add	r2, sp, #292	; 0x124
 8017498:	4623      	mov	r3, r4
 801749a:	47c8      	blx	r9
 801749c:	e9d4 2300 	ldrd	r2, r3, [r4]
 80174a0:	441a      	add	r2, r3
 80174a2:	6963      	ldr	r3, [r4, #20]
 80174a4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80174a8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80174ac:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80174b0:	68a1      	ldr	r1, [r4, #8]
 80174b2:	ed94 6a08 	vldr	s12, [r4, #32]
 80174b6:	6022      	str	r2, [r4, #0]
 80174b8:	3301      	adds	r3, #1
 80174ba:	6163      	str	r3, [r4, #20]
 80174bc:	69a3      	ldr	r3, [r4, #24]
 80174be:	ee37 7a27 	vadd.f32	s14, s14, s15
 80174c2:	3b01      	subs	r3, #1
 80174c4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80174c8:	61a3      	str	r3, [r4, #24]
 80174ca:	6923      	ldr	r3, [r4, #16]
 80174cc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80174d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80174d4:	edd4 6a07 	vldr	s13, [r4, #28]
 80174d8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80174dc:	440b      	add	r3, r1
 80174de:	68e1      	ldr	r1, [r4, #12]
 80174e0:	6123      	str	r3, [r4, #16]
 80174e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80174e6:	428b      	cmp	r3, r1
 80174e8:	edc4 6a07 	vstr	s13, [r4, #28]
 80174ec:	db15      	blt.n	801751a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80174ee:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80174f2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80174f6:	3201      	adds	r2, #1
 80174f8:	edc4 6a07 	vstr	s13, [r4, #28]
 80174fc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8017500:	6022      	str	r2, [r4, #0]
 8017502:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017506:	1a5b      	subs	r3, r3, r1
 8017508:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801750c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8017510:	6123      	str	r3, [r4, #16]
 8017512:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017516:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801751a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801751e:	441a      	add	r2, r3
 8017520:	696b      	ldr	r3, [r5, #20]
 8017522:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017526:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801752a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801752e:	68a9      	ldr	r1, [r5, #8]
 8017530:	ed95 6a08 	vldr	s12, [r5, #32]
 8017534:	602a      	str	r2, [r5, #0]
 8017536:	3301      	adds	r3, #1
 8017538:	616b      	str	r3, [r5, #20]
 801753a:	69ab      	ldr	r3, [r5, #24]
 801753c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017540:	3b01      	subs	r3, #1
 8017542:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017546:	61ab      	str	r3, [r5, #24]
 8017548:	692b      	ldr	r3, [r5, #16]
 801754a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801754e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017552:	edd5 6a07 	vldr	s13, [r5, #28]
 8017556:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801755a:	440b      	add	r3, r1
 801755c:	68e9      	ldr	r1, [r5, #12]
 801755e:	612b      	str	r3, [r5, #16]
 8017560:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017564:	428b      	cmp	r3, r1
 8017566:	edc5 6a07 	vstr	s13, [r5, #28]
 801756a:	db15      	blt.n	8017598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801756c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017570:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017574:	3201      	adds	r2, #1
 8017576:	edc5 6a07 	vstr	s13, [r5, #28]
 801757a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801757e:	602a      	str	r2, [r5, #0]
 8017580:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017584:	1a5b      	subs	r3, r3, r1
 8017586:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801758a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801758e:	612b      	str	r3, [r5, #16]
 8017590:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017594:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017598:	3f01      	subs	r7, #1
 801759a:	e757      	b.n	801744c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801759c:	4299      	cmp	r1, r3
 801759e:	dc13      	bgt.n	80175c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80175a0:	429a      	cmp	r2, r3
 80175a2:	da14      	bge.n	80175ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80175a4:	2502      	movs	r5, #2
 80175a6:	2703      	movs	r7, #3
 80175a8:	46a9      	mov	r9, r5
 80175aa:	f04f 0800 	mov.w	r8, #0
 80175ae:	f04f 0a01 	mov.w	sl, #1
 80175b2:	e6ef      	b.n	8017394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80175b4:	2501      	movs	r5, #1
 80175b6:	2700      	movs	r7, #0
 80175b8:	46a9      	mov	r9, r5
 80175ba:	46b8      	mov	r8, r7
 80175bc:	f04f 0a02 	mov.w	sl, #2
 80175c0:	e6e8      	b.n	8017394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80175c2:	2501      	movs	r5, #1
 80175c4:	2702      	movs	r7, #2
 80175c6:	e6e1      	b.n	801738c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80175c8:	2500      	movs	r5, #0
 80175ca:	2701      	movs	r7, #1
 80175cc:	e7f4      	b.n	80175b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80175ce:	2702      	movs	r7, #2
 80175d0:	2503      	movs	r5, #3
 80175d2:	f04f 0900 	mov.w	r9, #0
 80175d6:	46b8      	mov	r8, r7
 80175d8:	e7e9      	b.n	80175ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80175da:	4613      	mov	r3, r2
 80175dc:	e728      	b.n	8017430 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80175de:	bf00      	nop
 80175e0:	20013834 	.word	0x20013834
 80175e4:	fffd8f01 	.word	0xfffd8f01
 80175e8:	00027100 	.word	0x00027100
 80175ec:	0004e1ff 	.word	0x0004e1ff
 80175f0:	0004e1fe 	.word	0x0004e1fe
 80175f4:	2001383c 	.word	0x2001383c
 80175f8:	4613      	mov	r3, r2
 80175fa:	992b      	ldr	r1, [sp, #172]	; 0xac
 80175fc:	9111      	str	r1, [sp, #68]	; 0x44
 80175fe:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8017602:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8017606:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8017608:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801760c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8017610:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8017614:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8017618:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801761c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8017620:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8017624:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8017628:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801762c:	469e      	mov	lr, r3
 801762e:	469c      	mov	ip, r3
 8017630:	f04f 0900 	mov.w	r9, #0
 8017634:	f1bc 0f00 	cmp.w	ip, #0
 8017638:	d147      	bne.n	80176ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801763a:	eb03 0c07 	add.w	ip, r3, r7
 801763e:	1ad7      	subs	r7, r2, r3
 8017640:	f1b9 0f00 	cmp.w	r9, #0
 8017644:	d009      	beq.n	801765a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8017646:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801764a:	9029      	str	r0, [sp, #164]	; 0xa4
 801764c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8017650:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8017654:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8017658:	912d      	str	r1, [sp, #180]	; 0xb4
 801765a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801765c:	9111      	str	r1, [sp, #68]	; 0x44
 801765e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017662:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017666:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801766a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801766e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017672:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017676:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801767a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801767e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017682:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017686:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801768a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801768e:	f04f 0800 	mov.w	r8, #0
 8017692:	f1be 0f00 	cmp.w	lr, #0
 8017696:	d031      	beq.n	80176fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8017698:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801769a:	4431      	add	r1, r6
 801769c:	4549      	cmp	r1, r9
 801769e:	4450      	add	r0, sl
 80176a0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80176a4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80176a8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80176ac:	db08      	blt.n	80176c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80176ae:	ee77 7a85 	vadd.f32	s15, s15, s10
 80176b2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80176b6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80176ba:	3001      	adds	r0, #1
 80176bc:	eba1 0109 	sub.w	r1, r1, r9
 80176c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80176c4:	f04f 0801 	mov.w	r8, #1
 80176c8:	e7e3      	b.n	8017692 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80176ca:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80176cc:	4431      	add	r1, r6
 80176ce:	4541      	cmp	r1, r8
 80176d0:	4450      	add	r0, sl
 80176d2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80176d6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80176da:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80176de:	db08      	blt.n	80176f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80176e0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80176e4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80176e8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80176ec:	3001      	adds	r0, #1
 80176ee:	eba1 0108 	sub.w	r1, r1, r8
 80176f2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80176f6:	f04f 0901 	mov.w	r9, #1
 80176fa:	e79b      	b.n	8017634 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80176fc:	449c      	add	ip, r3
 80176fe:	1aff      	subs	r7, r7, r3
 8017700:	f1b8 0f00 	cmp.w	r8, #0
 8017704:	d009      	beq.n	801771a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8017706:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801770a:	9019      	str	r0, [sp, #100]	; 0x64
 801770c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8017710:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8017714:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8017718:	911d      	str	r1, [sp, #116]	; 0x74
 801771a:	1ad2      	subs	r2, r2, r3
 801771c:	e68b      	b.n	8017436 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801771e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017720:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8017722:	2b00      	cmp	r3, #0
 8017724:	f000 80d1 	beq.w	80178ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8017728:	ad19      	add	r5, sp, #100	; 0x64
 801772a:	ac39      	add	r4, sp, #228	; 0xe4
 801772c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801772e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017732:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017736:	930c      	str	r3, [sp, #48]	; 0x30
 8017738:	990c      	ldr	r1, [sp, #48]	; 0x30
 801773a:	6963      	ldr	r3, [r4, #20]
 801773c:	440b      	add	r3, r1
 801773e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017742:	4408      	add	r0, r1
 8017744:	b200      	sxth	r0, r0
 8017746:	4283      	cmp	r3, r0
 8017748:	900d      	str	r0, [sp, #52]	; 0x34
 801774a:	f280 80c1 	bge.w	80178d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801774e:	428b      	cmp	r3, r1
 8017750:	da08      	bge.n	8017764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017752:	2a00      	cmp	r2, #0
 8017754:	dd06      	ble.n	8017764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017756:	1acb      	subs	r3, r1, r3
 8017758:	429a      	cmp	r2, r3
 801775a:	f2c0 80bb 	blt.w	80178d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801775e:	2b00      	cmp	r3, #0
 8017760:	f300 80b9 	bgt.w	80178d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8017764:	6967      	ldr	r7, [r4, #20]
 8017766:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017768:	443b      	add	r3, r7
 801776a:	461f      	mov	r7, r3
 801776c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801776e:	1bdf      	subs	r7, r3, r7
 8017770:	4297      	cmp	r7, r2
 8017772:	bfa8      	it	ge
 8017774:	4617      	movge	r7, r2
 8017776:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801777a:	2f00      	cmp	r7, #0
 801777c:	f340 813c 	ble.w	80179f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8017780:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017782:	6829      	ldr	r1, [r5, #0]
 8017784:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017788:	f9bb 3000 	ldrsh.w	r3, [fp]
 801778c:	6820      	ldr	r0, [r4, #0]
 801778e:	4411      	add	r1, r2
 8017790:	4299      	cmp	r1, r3
 8017792:	dd1a      	ble.n	80177ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017794:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017798:	440b      	add	r3, r1
 801779a:	4402      	add	r2, r0
 801779c:	b21b      	sxth	r3, r3
 801779e:	429a      	cmp	r2, r3
 80177a0:	dc13      	bgt.n	80177ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80177a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80177a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80177a6:	681b      	ldr	r3, [r3, #0]
 80177a8:	9206      	str	r2, [sp, #24]
 80177aa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80177ac:	9205      	str	r2, [sp, #20]
 80177ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80177b0:	9500      	str	r5, [sp, #0]
 80177b2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80177b6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80177b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80177ba:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80177be:	a912      	add	r1, sp, #72	; 0x48
 80177c0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80177c4:	aa49      	add	r2, sp, #292	; 0x124
 80177c6:	4623      	mov	r3, r4
 80177c8:	47c8      	blx	r9
 80177ca:	e9d4 2300 	ldrd	r2, r3, [r4]
 80177ce:	441a      	add	r2, r3
 80177d0:	6963      	ldr	r3, [r4, #20]
 80177d2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80177d6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80177da:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80177de:	68a1      	ldr	r1, [r4, #8]
 80177e0:	ed94 6a08 	vldr	s12, [r4, #32]
 80177e4:	6022      	str	r2, [r4, #0]
 80177e6:	3301      	adds	r3, #1
 80177e8:	6163      	str	r3, [r4, #20]
 80177ea:	69a3      	ldr	r3, [r4, #24]
 80177ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80177f0:	3b01      	subs	r3, #1
 80177f2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80177f6:	61a3      	str	r3, [r4, #24]
 80177f8:	6923      	ldr	r3, [r4, #16]
 80177fa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80177fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017802:	edd4 6a07 	vldr	s13, [r4, #28]
 8017806:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801780a:	440b      	add	r3, r1
 801780c:	68e1      	ldr	r1, [r4, #12]
 801780e:	6123      	str	r3, [r4, #16]
 8017810:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017814:	428b      	cmp	r3, r1
 8017816:	edc4 6a07 	vstr	s13, [r4, #28]
 801781a:	db15      	blt.n	8017848 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801781c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017820:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017824:	3201      	adds	r2, #1
 8017826:	edc4 6a07 	vstr	s13, [r4, #28]
 801782a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801782e:	6022      	str	r2, [r4, #0]
 8017830:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017834:	1a5b      	subs	r3, r3, r1
 8017836:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801783a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801783e:	6123      	str	r3, [r4, #16]
 8017840:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017844:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017848:	e9d5 2300 	ldrd	r2, r3, [r5]
 801784c:	441a      	add	r2, r3
 801784e:	696b      	ldr	r3, [r5, #20]
 8017850:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017854:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017858:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801785c:	68a9      	ldr	r1, [r5, #8]
 801785e:	ed95 6a08 	vldr	s12, [r5, #32]
 8017862:	602a      	str	r2, [r5, #0]
 8017864:	3301      	adds	r3, #1
 8017866:	616b      	str	r3, [r5, #20]
 8017868:	69ab      	ldr	r3, [r5, #24]
 801786a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801786e:	3b01      	subs	r3, #1
 8017870:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017874:	61ab      	str	r3, [r5, #24]
 8017876:	692b      	ldr	r3, [r5, #16]
 8017878:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801787c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017880:	edd5 6a07 	vldr	s13, [r5, #28]
 8017884:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017888:	440b      	add	r3, r1
 801788a:	68e9      	ldr	r1, [r5, #12]
 801788c:	612b      	str	r3, [r5, #16]
 801788e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017892:	428b      	cmp	r3, r1
 8017894:	edc5 6a07 	vstr	s13, [r5, #28]
 8017898:	db15      	blt.n	80178c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801789a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801789e:	ee76 6a26 	vadd.f32	s13, s12, s13
 80178a2:	3201      	adds	r2, #1
 80178a4:	edc5 6a07 	vstr	s13, [r5, #28]
 80178a8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80178ac:	602a      	str	r2, [r5, #0]
 80178ae:	ee36 7a87 	vadd.f32	s14, s13, s14
 80178b2:	1a5b      	subs	r3, r3, r1
 80178b4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80178b8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80178bc:	612b      	str	r3, [r5, #16]
 80178be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80178c2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80178c6:	3f01      	subs	r7, #1
 80178c8:	e757      	b.n	801777a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80178ca:	ad39      	add	r5, sp, #228	; 0xe4
 80178cc:	ac19      	add	r4, sp, #100	; 0x64
 80178ce:	e72d      	b.n	801772c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80178d0:	4613      	mov	r3, r2
 80178d2:	e744      	b.n	801775e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80178d4:	4613      	mov	r3, r2
 80178d6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80178da:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80178dc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80178e0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80178e4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80178e8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80178ec:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80178f0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80178f4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80178f8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80178fa:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80178fe:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8017902:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8017906:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801790a:	960e      	str	r6, [sp, #56]	; 0x38
 801790c:	469e      	mov	lr, r3
 801790e:	461f      	mov	r7, r3
 8017910:	f04f 0900 	mov.w	r9, #0
 8017914:	2f00      	cmp	r7, #0
 8017916:	d146      	bne.n	80179a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8017918:	449c      	add	ip, r3
 801791a:	1ad7      	subs	r7, r2, r3
 801791c:	f1b9 0f00 	cmp.w	r9, #0
 8017920:	d009      	beq.n	8017936 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8017922:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8017926:	9039      	str	r0, [sp, #228]	; 0xe4
 8017928:	913d      	str	r1, [sp, #244]	; 0xf4
 801792a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801792e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8017932:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8017936:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8017938:	910e      	str	r1, [sp, #56]	; 0x38
 801793a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801793e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017942:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8017946:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801794a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801794e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017952:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017956:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801795a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801795e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017962:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8017966:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801796a:	f04f 0800 	mov.w	r8, #0
 801796e:	f1be 0f00 	cmp.w	lr, #0
 8017972:	d030      	beq.n	80179d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8017974:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017976:	4431      	add	r1, r6
 8017978:	4549      	cmp	r1, r9
 801797a:	4450      	add	r0, sl
 801797c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017980:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017984:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8017988:	db08      	blt.n	801799c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801798a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801798e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017992:	ee37 7a06 	vadd.f32	s14, s14, s12
 8017996:	3001      	adds	r0, #1
 8017998:	eba1 0109 	sub.w	r1, r1, r9
 801799c:	f10e 3eff 	add.w	lr, lr, #4294967295
 80179a0:	f04f 0801 	mov.w	r8, #1
 80179a4:	e7e3      	b.n	801796e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80179a6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80179a8:	4431      	add	r1, r6
 80179aa:	4541      	cmp	r1, r8
 80179ac:	4450      	add	r0, sl
 80179ae:	ee37 7a24 	vadd.f32	s14, s14, s9
 80179b2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80179b6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80179ba:	db08      	blt.n	80179ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80179bc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80179c0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80179c4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80179c8:	3001      	adds	r0, #1
 80179ca:	eba1 0108 	sub.w	r1, r1, r8
 80179ce:	3f01      	subs	r7, #1
 80179d0:	f04f 0901 	mov.w	r9, #1
 80179d4:	e79e      	b.n	8017914 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80179d6:	449c      	add	ip, r3
 80179d8:	1aff      	subs	r7, r7, r3
 80179da:	f1b8 0f00 	cmp.w	r8, #0
 80179de:	d009      	beq.n	80179f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80179e0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80179e4:	9019      	str	r0, [sp, #100]	; 0x64
 80179e6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80179ea:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80179ee:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80179f2:	911d      	str	r1, [sp, #116]	; 0x74
 80179f4:	1ad2      	subs	r2, r2, r3
 80179f6:	e6b5      	b.n	8017764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80179f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80179fa:	681b      	ldr	r3, [r3, #0]
 80179fc:	b923      	cbnz	r3, 8017a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80179fe:	4b04      	ldr	r3, [pc, #16]	; (8017a10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8017a00:	6818      	ldr	r0, [r3, #0]
 8017a02:	6803      	ldr	r3, [r0, #0]
 8017a04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017a06:	4798      	blx	r3
 8017a08:	b05b      	add	sp, #364	; 0x16c
 8017a0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a0e:	bf00      	nop
 8017a10:	2001383c 	.word	0x2001383c

08017a14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8017a14:	b570      	push	{r4, r5, r6, lr}
 8017a16:	4604      	mov	r4, r0
 8017a18:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8017a1c:	9805      	ldr	r0, [sp, #20]
 8017a1e:	6061      	str	r1, [r4, #4]
 8017a20:	2500      	movs	r5, #0
 8017a22:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8017a26:	8263      	strh	r3, [r4, #18]
 8017a28:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017a2c:	8025      	strh	r5, [r4, #0]
 8017a2e:	7221      	strb	r1, [r4, #8]
 8017a30:	7266      	strb	r6, [r4, #9]
 8017a32:	60e0      	str	r0, [r4, #12]
 8017a34:	8222      	strh	r2, [r4, #16]
 8017a36:	82a3      	strh	r3, [r4, #20]
 8017a38:	82e5      	strh	r5, [r4, #22]
 8017a3a:	8325      	strh	r5, [r4, #24]
 8017a3c:	8365      	strh	r5, [r4, #26]
 8017a3e:	83a5      	strh	r5, [r4, #28]
 8017a40:	83e5      	strh	r5, [r4, #30]
 8017a42:	8425      	strh	r5, [r4, #32]
 8017a44:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8017a48:	b32e      	cbz	r6, 8017a96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a4a:	6803      	ldr	r3, [r0, #0]
 8017a4c:	695b      	ldr	r3, [r3, #20]
 8017a4e:	4798      	blx	r3
 8017a50:	4606      	mov	r6, r0
 8017a52:	b300      	cbz	r0, 8017a96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a54:	68e0      	ldr	r0, [r4, #12]
 8017a56:	6803      	ldr	r3, [r0, #0]
 8017a58:	4631      	mov	r1, r6
 8017a5a:	68db      	ldr	r3, [r3, #12]
 8017a5c:	4798      	blx	r3
 8017a5e:	4605      	mov	r5, r0
 8017a60:	b1c8      	cbz	r0, 8017a96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a62:	7b43      	ldrb	r3, [r0, #13]
 8017a64:	7a82      	ldrb	r2, [r0, #10]
 8017a66:	005b      	lsls	r3, r3, #1
 8017a68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017a6c:	4313      	orrs	r3, r2
 8017a6e:	8423      	strh	r3, [r4, #32]
 8017a70:	7a63      	ldrb	r3, [r4, #9]
 8017a72:	2b06      	cmp	r3, #6
 8017a74:	d10f      	bne.n	8017a96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a76:	68e0      	ldr	r0, [r4, #12]
 8017a78:	6803      	ldr	r3, [r0, #0]
 8017a7a:	462a      	mov	r2, r5
 8017a7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017a7e:	4631      	mov	r1, r6
 8017a80:	4798      	blx	r3
 8017a82:	7b6b      	ldrb	r3, [r5, #13]
 8017a84:	005b      	lsls	r3, r3, #1
 8017a86:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017a8a:	7aab      	ldrb	r3, [r5, #10]
 8017a8c:	4313      	orrs	r3, r2
 8017a8e:	4418      	add	r0, r3
 8017a90:	8c23      	ldrh	r3, [r4, #32]
 8017a92:	4418      	add	r0, r3
 8017a94:	8420      	strh	r0, [r4, #32]
 8017a96:	4620      	mov	r0, r4
 8017a98:	bd70      	pop	{r4, r5, r6, pc}

08017a9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8017a9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a9e:	2400      	movs	r4, #0
 8017aa0:	b085      	sub	sp, #20
 8017aa2:	4681      	mov	r9, r0
 8017aa4:	4688      	mov	r8, r1
 8017aa6:	4692      	mov	sl, r2
 8017aa8:	469b      	mov	fp, r3
 8017aaa:	4627      	mov	r7, r4
 8017aac:	4625      	mov	r5, r4
 8017aae:	4626      	mov	r6, r4
 8017ab0:	4554      	cmp	r4, sl
 8017ab2:	da2a      	bge.n	8017b0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017ab4:	2300      	movs	r3, #0
 8017ab6:	9303      	str	r3, [sp, #12]
 8017ab8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017abc:	429d      	cmp	r5, r3
 8017abe:	d004      	beq.n	8017aca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8017ac0:	f242 030b 	movw	r3, #8203	; 0x200b
 8017ac4:	429d      	cmp	r5, r3
 8017ac6:	bf18      	it	ne
 8017ac8:	462f      	movne	r7, r5
 8017aca:	ab03      	add	r3, sp, #12
 8017acc:	4642      	mov	r2, r8
 8017ace:	4659      	mov	r1, fp
 8017ad0:	4648      	mov	r0, r9
 8017ad2:	f003 f9a3 	bl	801ae1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017ad6:	4605      	mov	r5, r0
 8017ad8:	b1b8      	cbz	r0, 8017b0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017ada:	280a      	cmp	r0, #10
 8017adc:	d015      	beq.n	8017b0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017ade:	9a03      	ldr	r2, [sp, #12]
 8017ae0:	b18a      	cbz	r2, 8017b06 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8017ae2:	7b50      	ldrb	r0, [r2, #13]
 8017ae4:	7a93      	ldrb	r3, [r2, #10]
 8017ae6:	8895      	ldrh	r5, [r2, #4]
 8017ae8:	0040      	lsls	r0, r0, #1
 8017aea:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017aee:	4303      	orrs	r3, r0
 8017af0:	9301      	str	r3, [sp, #4]
 8017af2:	f8d8 3000 	ldr.w	r3, [r8]
 8017af6:	4639      	mov	r1, r7
 8017af8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017afa:	4640      	mov	r0, r8
 8017afc:	4798      	blx	r3
 8017afe:	9b01      	ldr	r3, [sp, #4]
 8017b00:	4418      	add	r0, r3
 8017b02:	4406      	add	r6, r0
 8017b04:	b2b6      	uxth	r6, r6
 8017b06:	3401      	adds	r4, #1
 8017b08:	e7d2      	b.n	8017ab0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8017b0a:	4630      	mov	r0, r6
 8017b0c:	b005      	add	sp, #20
 8017b0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8017b12:	2a02      	cmp	r2, #2
 8017b14:	b530      	push	{r4, r5, lr}
 8017b16:	d011      	beq.n	8017b3c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8017b18:	2a03      	cmp	r2, #3
 8017b1a:	d01c      	beq.n	8017b56 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8017b1c:	2a01      	cmp	r2, #1
 8017b1e:	d10c      	bne.n	8017b3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017b20:	888b      	ldrh	r3, [r1, #4]
 8017b22:	8801      	ldrh	r1, [r0, #0]
 8017b24:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8017b28:	8844      	ldrh	r4, [r0, #2]
 8017b2a:	8004      	strh	r4, [r0, #0]
 8017b2c:	1a5b      	subs	r3, r3, r1
 8017b2e:	1a9b      	subs	r3, r3, r2
 8017b30:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8017b34:	8043      	strh	r3, [r0, #2]
 8017b36:	8081      	strh	r1, [r0, #4]
 8017b38:	80c2      	strh	r2, [r0, #6]
 8017b3a:	bd30      	pop	{r4, r5, pc}
 8017b3c:	88cb      	ldrh	r3, [r1, #6]
 8017b3e:	8842      	ldrh	r2, [r0, #2]
 8017b40:	1a9b      	subs	r3, r3, r2
 8017b42:	88c2      	ldrh	r2, [r0, #6]
 8017b44:	1a9b      	subs	r3, r3, r2
 8017b46:	888a      	ldrh	r2, [r1, #4]
 8017b48:	8801      	ldrh	r1, [r0, #0]
 8017b4a:	8043      	strh	r3, [r0, #2]
 8017b4c:	1a52      	subs	r2, r2, r1
 8017b4e:	8881      	ldrh	r1, [r0, #4]
 8017b50:	1a52      	subs	r2, r2, r1
 8017b52:	8002      	strh	r2, [r0, #0]
 8017b54:	e7f1      	b.n	8017b3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017b56:	88cb      	ldrh	r3, [r1, #6]
 8017b58:	8841      	ldrh	r1, [r0, #2]
 8017b5a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8017b5e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017b62:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8017b66:	8045      	strh	r5, [r0, #2]
 8017b68:	1a5b      	subs	r3, r3, r1
 8017b6a:	1a9b      	subs	r3, r3, r2
 8017b6c:	8003      	strh	r3, [r0, #0]
 8017b6e:	8082      	strh	r2, [r0, #4]
 8017b70:	80c4      	strh	r4, [r0, #6]
 8017b72:	e7e2      	b.n	8017b3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08017b74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8017b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b78:	b09f      	sub	sp, #124	; 0x7c
 8017b7a:	9116      	str	r1, [sp, #88]	; 0x58
 8017b7c:	9317      	str	r3, [sp, #92]	; 0x5c
 8017b7e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017b80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017b82:	8809      	ldrh	r1, [r1, #0]
 8017b84:	889b      	ldrh	r3, [r3, #4]
 8017b86:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8017b8a:	9212      	str	r2, [sp, #72]	; 0x48
 8017b8c:	440b      	add	r3, r1
 8017b8e:	b21b      	sxth	r3, r3
 8017b90:	9310      	str	r3, [sp, #64]	; 0x40
 8017b92:	f8d8 3000 	ldr.w	r3, [r8]
 8017b96:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8017b9a:	7b19      	ldrb	r1, [r3, #12]
 8017b9c:	7adb      	ldrb	r3, [r3, #11]
 8017b9e:	9011      	str	r0, [sp, #68]	; 0x44
 8017ba0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8017ba4:	9114      	str	r1, [sp, #80]	; 0x50
 8017ba6:	9315      	str	r3, [sp, #84]	; 0x54
 8017ba8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8017bac:	2a00      	cmp	r2, #0
 8017bae:	d06a      	beq.n	8017c86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8017bb0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8017bb4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017bb6:	2b06      	cmp	r3, #6
 8017bb8:	bf14      	ite	ne
 8017bba:	2301      	movne	r3, #1
 8017bbc:	2302      	moveq	r3, #2
 8017bbe:	4413      	add	r3, r2
 8017bc0:	f04f 0900 	mov.w	r9, #0
 8017bc4:	930f      	str	r3, [sp, #60]	; 0x3c
 8017bc6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8017bca:	464c      	mov	r4, r9
 8017bcc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017bd0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8017bd4:	4293      	cmp	r3, r2
 8017bd6:	f280 808f 	bge.w	8017cf8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017bda:	2300      	movs	r3, #0
 8017bdc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8017be0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8017be4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017be8:	429c      	cmp	r4, r3
 8017bea:	d006      	beq.n	8017bfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8017bec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017bee:	f242 020b 	movw	r2, #8203	; 0x200b
 8017bf2:	4294      	cmp	r4, r2
 8017bf4:	bf18      	it	ne
 8017bf6:	4623      	movne	r3, r4
 8017bf8:	930d      	str	r3, [sp, #52]	; 0x34
 8017bfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017bfc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8017bfe:	f8d8 2000 	ldr.w	r2, [r8]
 8017c02:	428b      	cmp	r3, r1
 8017c04:	db41      	blt.n	8017c8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8017c06:	6813      	ldr	r3, [r2, #0]
 8017c08:	4610      	mov	r0, r2
 8017c0a:	695b      	ldr	r3, [r3, #20]
 8017c0c:	4798      	blx	r3
 8017c0e:	4604      	mov	r4, r0
 8017c10:	f8d8 0000 	ldr.w	r0, [r8]
 8017c14:	6803      	ldr	r3, [r0, #0]
 8017c16:	aa1d      	add	r2, sp, #116	; 0x74
 8017c18:	689d      	ldr	r5, [r3, #8]
 8017c1a:	4621      	mov	r1, r4
 8017c1c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017c20:	47a8      	blx	r5
 8017c22:	901c      	str	r0, [sp, #112]	; 0x70
 8017c24:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017c28:	429c      	cmp	r4, r3
 8017c2a:	f000 80eb 	beq.w	8017e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c2e:	f242 030b 	movw	r3, #8203	; 0x200b
 8017c32:	429c      	cmp	r4, r3
 8017c34:	f000 80e6 	beq.w	8017e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c38:	2c00      	cmp	r4, #0
 8017c3a:	f000 80f8 	beq.w	8017e2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017c3e:	2c0a      	cmp	r4, #10
 8017c40:	d060      	beq.n	8017d04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017c42:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017c44:	b36a      	cbz	r2, 8017ca2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8017c46:	8894      	ldrh	r4, [r2, #4]
 8017c48:	f1bb 0f00 	cmp.w	fp, #0
 8017c4c:	d03b      	beq.n	8017cc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8017c4e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8017c52:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017c56:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017c5a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8017c5e:	f1bb 0f01 	cmp.w	fp, #1
 8017c62:	ea49 0903 	orr.w	r9, r9, r3
 8017c66:	d134      	bne.n	8017cd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8017c68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c6a:	eba6 0609 	sub.w	r6, r6, r9
 8017c6e:	2b00      	cmp	r3, #0
 8017c70:	d14f      	bne.n	8017d12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017c72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017c74:	eb09 0306 	add.w	r3, r9, r6
 8017c78:	4413      	add	r3, r2
 8017c7a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c7c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017c80:	4293      	cmp	r3, r2
 8017c82:	da51      	bge.n	8017d28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017c84:	e038      	b.n	8017cf8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017c86:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017c88:	e79a      	b.n	8017bc0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8017c8a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017c8e:	9301      	str	r3, [sp, #4]
 8017c90:	ab1d      	add	r3, sp, #116	; 0x74
 8017c92:	9300      	str	r3, [sp, #0]
 8017c94:	4659      	mov	r1, fp
 8017c96:	ab1c      	add	r3, sp, #112	; 0x70
 8017c98:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017c9a:	f003 f908 	bl	801aeae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8017c9e:	4604      	mov	r4, r0
 8017ca0:	e7c0      	b.n	8017c24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8017ca2:	f8d8 0000 	ldr.w	r0, [r8]
 8017ca6:	6803      	ldr	r3, [r0, #0]
 8017ca8:	691b      	ldr	r3, [r3, #16]
 8017caa:	4798      	blx	r3
 8017cac:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017cb0:	4298      	cmp	r0, r3
 8017cb2:	f000 80a7 	beq.w	8017e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017cb6:	f242 030b 	movw	r3, #8203	; 0x200b
 8017cba:	4298      	cmp	r0, r3
 8017cbc:	f000 80a2 	beq.w	8017e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017cc0:	f1bb 0f00 	cmp.w	fp, #0
 8017cc4:	d100      	bne.n	8017cc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8017cc6:	444e      	add	r6, r9
 8017cc8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017cca:	2a00      	cmp	r2, #0
 8017ccc:	d1bf      	bne.n	8017c4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8017cce:	4691      	mov	r9, r2
 8017cd0:	e098      	b.n	8017e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017cd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017cd4:	2b00      	cmp	r3, #0
 8017cd6:	f000 80ac 	beq.w	8017e32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8017cda:	f1bb 0f00 	cmp.w	fp, #0
 8017cde:	d118      	bne.n	8017d12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017ce0:	f8d8 0000 	ldr.w	r0, [r8]
 8017ce4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017ce6:	6803      	ldr	r3, [r0, #0]
 8017ce8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017cea:	4798      	blx	r3
 8017cec:	4406      	add	r6, r0
 8017cee:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017cf0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017cf2:	1af3      	subs	r3, r6, r3
 8017cf4:	4293      	cmp	r3, r2
 8017cf6:	dd17      	ble.n	8017d28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017cf8:	2c00      	cmp	r4, #0
 8017cfa:	f000 8098 	beq.w	8017e2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017cfe:	2c0a      	cmp	r4, #10
 8017d00:	f040 8086 	bne.w	8017e10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8017d04:	240a      	movs	r4, #10
 8017d06:	fab4 f084 	clz	r0, r4
 8017d0a:	0940      	lsrs	r0, r0, #5
 8017d0c:	b01f      	add	sp, #124	; 0x7c
 8017d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d12:	f8d8 0000 	ldr.w	r0, [r8]
 8017d16:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017d18:	6803      	ldr	r3, [r0, #0]
 8017d1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017d1c:	4798      	blx	r3
 8017d1e:	f1bb 0f01 	cmp.w	fp, #1
 8017d22:	eba6 0600 	sub.w	r6, r6, r0
 8017d26:	d0a4      	beq.n	8017c72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8017d28:	981c      	ldr	r0, [sp, #112]	; 0x70
 8017d2a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d2c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8017d30:	f9b3 7000 	ldrsh.w	r7, [r3]
 8017d34:	7b43      	ldrb	r3, [r0, #13]
 8017d36:	015b      	lsls	r3, r3, #5
 8017d38:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017d3c:	7983      	ldrb	r3, [r0, #6]
 8017d3e:	4431      	add	r1, r6
 8017d40:	4313      	orrs	r3, r2
 8017d42:	440b      	add	r3, r1
 8017d44:	42bb      	cmp	r3, r7
 8017d46:	db5d      	blt.n	8017e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017d4a:	4299      	cmp	r1, r3
 8017d4c:	da5a      	bge.n	8017e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d4e:	f8d8 0000 	ldr.w	r0, [r8]
 8017d52:	6803      	ldr	r3, [r0, #0]
 8017d54:	42b7      	cmp	r7, r6
 8017d56:	bfc8      	it	gt
 8017d58:	1bbf      	subgt	r7, r7, r6
 8017d5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017d5c:	bfcc      	ite	gt
 8017d5e:	b2bf      	uxthgt	r7, r7
 8017d60:	2700      	movle	r7, #0
 8017d62:	4798      	blx	r3
 8017d64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017d66:	7b5a      	ldrb	r2, [r3, #13]
 8017d68:	00d1      	lsls	r1, r2, #3
 8017d6a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8017d6e:	7a19      	ldrb	r1, [r3, #8]
 8017d70:	4329      	orrs	r1, r5
 8017d72:	0655      	lsls	r5, r2, #25
 8017d74:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8017d76:	bf44      	itt	mi
 8017d78:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8017d7c:	b209      	sxthmi	r1, r1
 8017d7e:	1945      	adds	r5, r0, r5
 8017d80:	1a6d      	subs	r5, r5, r1
 8017d82:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017d84:	b2ad      	uxth	r5, r5
 8017d86:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8017d8a:	fa0f fa85 	sxth.w	sl, r5
 8017d8e:	4551      	cmp	r1, sl
 8017d90:	dd3c      	ble.n	8017e0c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8017d92:	0112      	lsls	r2, r2, #4
 8017d94:	79d8      	ldrb	r0, [r3, #7]
 8017d96:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017d9a:	4302      	orrs	r2, r0
 8017d9c:	4492      	add	sl, r2
 8017d9e:	4551      	cmp	r1, sl
 8017da0:	dc30      	bgt.n	8017e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017da2:	1b4d      	subs	r5, r1, r5
 8017da4:	b22d      	sxth	r5, r5
 8017da6:	468a      	mov	sl, r1
 8017da8:	9319      	str	r3, [sp, #100]	; 0x64
 8017daa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017dac:	f8d8 0000 	ldr.w	r0, [r8]
 8017db0:	681a      	ldr	r2, [r3, #0]
 8017db2:	6801      	ldr	r1, [r0, #0]
 8017db4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8017db6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8017db8:	9313      	str	r3, [sp, #76]	; 0x4c
 8017dba:	9218      	str	r2, [sp, #96]	; 0x60
 8017dbc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017dbe:	4788      	blx	r1
 8017dc0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8017dc4:	910b      	str	r1, [sp, #44]	; 0x2c
 8017dc6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8017dca:	910a      	str	r1, [sp, #40]	; 0x28
 8017dcc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8017dd0:	9109      	str	r1, [sp, #36]	; 0x24
 8017dd2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8017dd6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017dd8:	9305      	str	r3, [sp, #20]
 8017dda:	b2ad      	uxth	r5, r5
 8017ddc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8017de0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8017de4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017de6:	9304      	str	r3, [sp, #16]
 8017de8:	4437      	add	r7, r6
 8017dea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017dec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017dee:	9206      	str	r2, [sp, #24]
 8017df0:	b23f      	sxth	r7, r7
 8017df2:	f8cd a004 	str.w	sl, [sp, #4]
 8017df6:	9700      	str	r7, [sp, #0]
 8017df8:	681a      	ldr	r2, [r3, #0]
 8017dfa:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017dfc:	685b      	ldr	r3, [r3, #4]
 8017dfe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017e00:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017e02:	47a8      	blx	r5
 8017e04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017e06:	3301      	adds	r3, #1
 8017e08:	930e      	str	r3, [sp, #56]	; 0x38
 8017e0a:	e6e1      	b.n	8017bd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8017e0c:	2500      	movs	r5, #0
 8017e0e:	e7cb      	b.n	8017da8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8017e10:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017e12:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017e14:	3501      	adds	r5, #1
 8017e16:	429d      	cmp	r5, r3
 8017e18:	f6bf af75 	bge.w	8017d06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017e1c:	4659      	mov	r1, fp
 8017e1e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017e20:	f7f2 fbac 	bl	800a57c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017e24:	4604      	mov	r4, r0
 8017e26:	b110      	cbz	r0, 8017e2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017e28:	280a      	cmp	r0, #10
 8017e2a:	d1f2      	bne.n	8017e12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8017e2c:	e76a      	b.n	8017d04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017e2e:	2400      	movs	r4, #0
 8017e30:	e769      	b.n	8017d06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017e32:	f1bb 0f00 	cmp.w	fp, #0
 8017e36:	f43f af5a 	beq.w	8017cee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8017e3a:	e775      	b.n	8017d28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08017e3c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8017e3c:	b530      	push	{r4, r5, lr}
 8017e3e:	8ac4      	ldrh	r4, [r0, #22]
 8017e40:	8b45      	ldrh	r5, [r0, #26]
 8017e42:	8343      	strh	r3, [r0, #26]
 8017e44:	442c      	add	r4, r5
 8017e46:	1ae4      	subs	r4, r4, r3
 8017e48:	82c4      	strh	r4, [r0, #22]
 8017e4a:	8b83      	ldrh	r3, [r0, #28]
 8017e4c:	8b04      	ldrh	r4, [r0, #24]
 8017e4e:	4422      	add	r2, r4
 8017e50:	440c      	add	r4, r1
 8017e52:	1a59      	subs	r1, r3, r1
 8017e54:	83c2      	strh	r2, [r0, #30]
 8017e56:	8304      	strh	r4, [r0, #24]
 8017e58:	8381      	strh	r1, [r0, #28]
 8017e5a:	bd30      	pop	{r4, r5, pc}

08017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8017e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e60:	4604      	mov	r4, r0
 8017e62:	8a47      	ldrh	r7, [r0, #18]
 8017e64:	68c0      	ldr	r0, [r0, #12]
 8017e66:	6803      	ldr	r3, [r0, #0]
 8017e68:	b085      	sub	sp, #20
 8017e6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017e6c:	4798      	blx	r3
 8017e6e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8017e72:	7a63      	ldrb	r3, [r4, #9]
 8017e74:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8017e78:	42b7      	cmp	r7, r6
 8017e7a:	f103 33ff 	add.w	r3, r3, #4294967295
 8017e7e:	bfac      	ite	ge
 8017e80:	f04f 0900 	movge.w	r9, #0
 8017e84:	f04f 0901 	movlt.w	r9, #1
 8017e88:	2b05      	cmp	r3, #5
 8017e8a:	d804      	bhi.n	8017e96 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8017e8c:	e8df f003 	tbb	[pc, r3]
 8017e90:	470e0854 	.word	0x470e0854
 8017e94:	4c4c      	.short	0x4c4c
 8017e96:	2500      	movs	r5, #0
 8017e98:	46a9      	mov	r9, r5
 8017e9a:	462e      	mov	r6, r5
 8017e9c:	462f      	mov	r7, r5
 8017e9e:	e00d      	b.n	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017ea0:	42b7      	cmp	r7, r6
 8017ea2:	bfb4      	ite	lt
 8017ea4:	2600      	movlt	r6, #0
 8017ea6:	2601      	movge	r6, #1
 8017ea8:	2500      	movs	r5, #0
 8017eaa:	e7f7      	b.n	8017e9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017eac:	42b7      	cmp	r7, r6
 8017eae:	464d      	mov	r5, r9
 8017eb0:	f04f 0900 	mov.w	r9, #0
 8017eb4:	bfb4      	ite	lt
 8017eb6:	2600      	movlt	r6, #0
 8017eb8:	2601      	movge	r6, #1
 8017eba:	464f      	mov	r7, r9
 8017ebc:	f04f 0800 	mov.w	r8, #0
 8017ec0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8017ec4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8017ec8:	f8cd 8004 	str.w	r8, [sp, #4]
 8017ecc:	2300      	movs	r3, #0
 8017ece:	9303      	str	r3, [sp, #12]
 8017ed0:	8823      	ldrh	r3, [r4, #0]
 8017ed2:	2b20      	cmp	r3, #32
 8017ed4:	d034      	beq.n	8017f40 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8017ed6:	f242 010b 	movw	r1, #8203	; 0x200b
 8017eda:	1a5a      	subs	r2, r3, r1
 8017edc:	f1d2 0a00 	rsbs	sl, r2, #0
 8017ee0:	eb4a 0a02 	adc.w	sl, sl, r2
 8017ee4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017ee8:	4293      	cmp	r3, r2
 8017eea:	d009      	beq.n	8017f00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017eec:	428b      	cmp	r3, r1
 8017eee:	9a01      	ldr	r2, [sp, #4]
 8017ef0:	bf18      	it	ne
 8017ef2:	461a      	movne	r2, r3
 8017ef4:	9201      	str	r2, [sp, #4]
 8017ef6:	bf0c      	ite	eq
 8017ef8:	f04f 0a01 	moveq.w	sl, #1
 8017efc:	f04f 0a00 	movne.w	sl, #0
 8017f00:	ab03      	add	r3, sp, #12
 8017f02:	68e2      	ldr	r2, [r4, #12]
 8017f04:	7a21      	ldrb	r1, [r4, #8]
 8017f06:	6860      	ldr	r0, [r4, #4]
 8017f08:	f002 ff88 	bl	801ae1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017f0c:	8020      	strh	r0, [r4, #0]
 8017f0e:	b9d8      	cbnz	r0, 8017f48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8017f10:	8ba2      	ldrh	r2, [r4, #28]
 8017f12:	2300      	movs	r3, #0
 8017f14:	4611      	mov	r1, r2
 8017f16:	4620      	mov	r0, r4
 8017f18:	f7ff ff90 	bl	8017e3c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017f1c:	e06e      	b.n	8017ffc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8017f1e:	2500      	movs	r5, #0
 8017f20:	46a9      	mov	r9, r5
 8017f22:	462e      	mov	r6, r5
 8017f24:	2701      	movs	r7, #1
 8017f26:	e7c9      	b.n	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017f28:	42b7      	cmp	r7, r6
 8017f2a:	f04f 0500 	mov.w	r5, #0
 8017f2e:	bfb4      	ite	lt
 8017f30:	2700      	movlt	r7, #0
 8017f32:	2701      	movge	r7, #1
 8017f34:	462e      	mov	r6, r5
 8017f36:	e7c1      	b.n	8017ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017f38:	2500      	movs	r5, #0
 8017f3a:	46a9      	mov	r9, r5
 8017f3c:	2601      	movs	r6, #1
 8017f3e:	e7ad      	b.n	8017e9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017f40:	9301      	str	r3, [sp, #4]
 8017f42:	f04f 0a01 	mov.w	sl, #1
 8017f46:	e7db      	b.n	8017f00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017f48:	8b63      	ldrh	r3, [r4, #26]
 8017f4a:	280a      	cmp	r0, #10
 8017f4c:	f103 0301 	add.w	r3, r3, #1
 8017f50:	8363      	strh	r3, [r4, #26]
 8017f52:	d0dd      	beq.n	8017f10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8017f54:	9a03      	ldr	r2, [sp, #12]
 8017f56:	bb62      	cbnz	r2, 8017fb2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8017f58:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017f5c:	4298      	cmp	r0, r3
 8017f5e:	d003      	beq.n	8017f68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017f60:	f242 030b 	movw	r3, #8203	; 0x200b
 8017f64:	4298      	cmp	r0, r3
 8017f66:	d1b1      	bne.n	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017f68:	8823      	ldrh	r3, [r4, #0]
 8017f6a:	8ba1      	ldrh	r1, [r4, #28]
 8017f6c:	2b20      	cmp	r3, #32
 8017f6e:	d003      	beq.n	8017f78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8017f70:	f242 000b 	movw	r0, #8203	; 0x200b
 8017f74:	4283      	cmp	r3, r0
 8017f76:	d131      	bne.n	8017fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8017f78:	f1ba 0f00 	cmp.w	sl, #0
 8017f7c:	bf0a      	itet	eq
 8017f7e:	4688      	moveq	r8, r1
 8017f80:	4650      	movne	r0, sl
 8017f82:	2001      	moveq	r0, #1
 8017f84:	440a      	add	r2, r1
 8017f86:	8b23      	ldrh	r3, [r4, #24]
 8017f88:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8017f8c:	b292      	uxth	r2, r2
 8017f8e:	83a2      	strh	r2, [r4, #28]
 8017f90:	4413      	add	r3, r2
 8017f92:	f1b9 0f00 	cmp.w	r9, #0
 8017f96:	d102      	bne.n	8017f9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8017f98:	2d00      	cmp	r5, #0
 8017f9a:	d042      	beq.n	8018022 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8017f9c:	b300      	cbz	r0, 8017fe0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8017f9e:	8c21      	ldrh	r1, [r4, #32]
 8017fa0:	4419      	add	r1, r3
 8017fa2:	458c      	cmp	ip, r1
 8017fa4:	da37      	bge.n	8018016 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017fa6:	8ae1      	ldrh	r1, [r4, #22]
 8017fa8:	2900      	cmp	r1, #0
 8017faa:	d034      	beq.n	8018016 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017fac:	4563      	cmp	r3, ip
 8017fae:	dd8d      	ble.n	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fb0:	e01d      	b.n	8017fee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8017fb2:	8893      	ldrh	r3, [r2, #4]
 8017fb4:	8023      	strh	r3, [r4, #0]
 8017fb6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8017fba:	9901      	ldr	r1, [sp, #4]
 8017fbc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8017fc0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8017fc4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8017fc8:	ea4b 0b00 	orr.w	fp, fp, r0
 8017fcc:	68e0      	ldr	r0, [r4, #12]
 8017fce:	6803      	ldr	r3, [r0, #0]
 8017fd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017fd2:	4798      	blx	r3
 8017fd4:	eb0b 0200 	add.w	r2, fp, r0
 8017fd8:	b292      	uxth	r2, r2
 8017fda:	e7c5      	b.n	8017f68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017fdc:	2000      	movs	r0, #0
 8017fde:	e7d1      	b.n	8017f84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8017fe0:	4563      	cmp	r3, ip
 8017fe2:	f77f af73 	ble.w	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fe6:	8ae3      	ldrh	r3, [r4, #22]
 8017fe8:	2b00      	cmp	r3, #0
 8017fea:	f43f af6f 	beq.w	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fee:	2301      	movs	r3, #1
 8017ff0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8017ff4:	8c22      	ldrh	r2, [r4, #32]
 8017ff6:	8be3      	ldrh	r3, [r4, #30]
 8017ff8:	4413      	add	r3, r2
 8017ffa:	83e3      	strh	r3, [r4, #30]
 8017ffc:	68e0      	ldr	r0, [r4, #12]
 8017ffe:	6803      	ldr	r3, [r0, #0]
 8018000:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018002:	4798      	blx	r3
 8018004:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8018008:	4418      	add	r0, r3
 801800a:	8a63      	ldrh	r3, [r4, #18]
 801800c:	1a18      	subs	r0, r3, r0
 801800e:	8260      	strh	r0, [r4, #18]
 8018010:	b005      	add	sp, #20
 8018012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018016:	2300      	movs	r3, #0
 8018018:	4611      	mov	r1, r2
 801801a:	4620      	mov	r0, r4
 801801c:	f7ff ff0e 	bl	8017e3c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018020:	e754      	b.n	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018022:	4563      	cmp	r3, ip
 8018024:	dd14      	ble.n	8018050 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8018026:	b117      	cbz	r7, 801802e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8018028:	2301      	movs	r3, #1
 801802a:	460a      	mov	r2, r1
 801802c:	e772      	b.n	8017f14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801802e:	2e00      	cmp	r6, #0
 8018030:	f43f af4c 	beq.w	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018034:	2800      	cmp	r0, #0
 8018036:	f47f af49 	bne.w	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801803a:	f1ba 0f00 	cmp.w	sl, #0
 801803e:	d002      	beq.n	8018046 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8018040:	2301      	movs	r3, #1
 8018042:	4642      	mov	r2, r8
 8018044:	e767      	b.n	8017f16 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8018046:	8ae3      	ldrh	r3, [r4, #22]
 8018048:	2b00      	cmp	r3, #0
 801804a:	f43f af3f 	beq.w	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801804e:	e7d5      	b.n	8017ffc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8018050:	2800      	cmp	r0, #0
 8018052:	f47f af3b 	bne.w	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018056:	f1ba 0f00 	cmp.w	sl, #0
 801805a:	f43f af37 	beq.w	8017ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801805e:	2301      	movs	r3, #1
 8018060:	4642      	mov	r2, r8
 8018062:	e7da      	b.n	801801a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08018064 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8018064:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018066:	4605      	mov	r5, r0
 8018068:	b08f      	sub	sp, #60	; 0x3c
 801806a:	4617      	mov	r7, r2
 801806c:	461c      	mov	r4, r3
 801806e:	460e      	mov	r6, r1
 8018070:	b1d1      	cbz	r1, 80180a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8018072:	681b      	ldr	r3, [r3, #0]
 8018074:	4620      	mov	r0, r4
 8018076:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018078:	4798      	blx	r3
 801807a:	4240      	negs	r0, r0
 801807c:	b200      	sxth	r0, r0
 801807e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8018082:	9603      	str	r6, [sp, #12]
 8018084:	9700      	str	r7, [sp, #0]
 8018086:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801808a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801808e:	4629      	mov	r1, r5
 8018090:	a805      	add	r0, sp, #20
 8018092:	f7ff fcbf 	bl	8017a14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018096:	2401      	movs	r4, #1
 8018098:	a805      	add	r0, sp, #20
 801809a:	f7ff fedf 	bl	8017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801809e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80180a2:	b163      	cbz	r3, 80180be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80180a4:	3401      	adds	r4, #1
 80180a6:	e7f7      	b.n	8018098 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80180a8:	f002 ff86 	bl	801afb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80180ac:	2401      	movs	r4, #1
 80180ae:	280a      	cmp	r0, #10
 80180b0:	4628      	mov	r0, r5
 80180b2:	bf08      	it	eq
 80180b4:	3401      	addeq	r4, #1
 80180b6:	f002 ff7f 	bl	801afb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80180ba:	2800      	cmp	r0, #0
 80180bc:	d1f7      	bne.n	80180ae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80180be:	b2a0      	uxth	r0, r4
 80180c0:	b00f      	add	sp, #60	; 0x3c
 80180c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080180c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80180c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180c8:	b0e3      	sub	sp, #396	; 0x18c
 80180ca:	461c      	mov	r4, r3
 80180cc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80180ce:	4683      	mov	fp, r0
 80180d0:	4688      	mov	r8, r1
 80180d2:	2b00      	cmp	r3, #0
 80180d4:	f000 8112 	beq.w	80182fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180d8:	6823      	ldr	r3, [r4, #0]
 80180da:	2b00      	cmp	r3, #0
 80180dc:	f000 810e 	beq.w	80182fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180e0:	7ba3      	ldrb	r3, [r4, #14]
 80180e2:	2b00      	cmp	r3, #0
 80180e4:	f000 810a 	beq.w	80182fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180e8:	6810      	ldr	r0, [r2, #0]
 80180ea:	6851      	ldr	r1, [r2, #4]
 80180ec:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80180f0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80180f4:	ad0a      	add	r5, sp, #40	; 0x28
 80180f6:	462b      	mov	r3, r5
 80180f8:	c303      	stmia	r3!, {r0, r1}
 80180fa:	2100      	movs	r1, #0
 80180fc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8018100:	910c      	str	r1, [sp, #48]	; 0x30
 8018102:	79a2      	ldrb	r2, [r4, #6]
 8018104:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018108:	a90c      	add	r1, sp, #48	; 0x30
 801810a:	4628      	mov	r0, r5
 801810c:	f7ff fd01 	bl	8017b12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018110:	a90c      	add	r1, sp, #48	; 0x30
 8018112:	4608      	mov	r0, r1
 8018114:	79a2      	ldrb	r2, [r4, #6]
 8018116:	f7ff fcfc 	bl	8017b12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801811a:	a817      	add	r0, sp, #92	; 0x5c
 801811c:	f002 fb20 	bl	801a760 <_ZN8touchgfx12TextProviderC1Ev>
 8018120:	6820      	ldr	r0, [r4, #0]
 8018122:	6803      	ldr	r3, [r0, #0]
 8018124:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018126:	4798      	blx	r3
 8018128:	4606      	mov	r6, r0
 801812a:	6820      	ldr	r0, [r4, #0]
 801812c:	6803      	ldr	r3, [r0, #0]
 801812e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018130:	4798      	blx	r3
 8018132:	4633      	mov	r3, r6
 8018134:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8018136:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8018138:	9000      	str	r0, [sp, #0]
 801813a:	a817      	add	r0, sp, #92	; 0x5c
 801813c:	f002 fb6b 	bl	801a816 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018140:	6820      	ldr	r0, [r4, #0]
 8018142:	f894 a004 	ldrb.w	sl, [r4, #4]
 8018146:	6803      	ldr	r3, [r0, #0]
 8018148:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801814a:	4798      	blx	r3
 801814c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8018150:	6823      	ldr	r3, [r4, #0]
 8018152:	4607      	mov	r7, r0
 8018154:	4406      	add	r6, r0
 8018156:	a830      	add	r0, sp, #192	; 0xc0
 8018158:	f893 9009 	ldrb.w	r9, [r3, #9]
 801815c:	f002 fb00 	bl	801a760 <_ZN8touchgfx12TextProviderC1Ev>
 8018160:	7c23      	ldrb	r3, [r4, #16]
 8018162:	b17b      	cbz	r3, 8018184 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8018164:	6820      	ldr	r0, [r4, #0]
 8018166:	6803      	ldr	r3, [r0, #0]
 8018168:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801816a:	4798      	blx	r3
 801816c:	9009      	str	r0, [sp, #36]	; 0x24
 801816e:	6820      	ldr	r0, [r4, #0]
 8018170:	6802      	ldr	r2, [r0, #0]
 8018172:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8018174:	4790      	blx	r2
 8018176:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018178:	9000      	str	r0, [sp, #0]
 801817a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801817c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801817e:	a830      	add	r0, sp, #192	; 0xc0
 8018180:	f002 fb49 	bl	801a816 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018184:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018188:	7be2      	ldrb	r2, [r4, #15]
 801818a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801818e:	1a8a      	subs	r2, r1, r2
 8018190:	7c21      	ldrb	r1, [r4, #16]
 8018192:	9103      	str	r1, [sp, #12]
 8018194:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8018198:	9102      	str	r1, [sp, #8]
 801819a:	6821      	ldr	r1, [r4, #0]
 801819c:	9101      	str	r1, [sp, #4]
 801819e:	7961      	ldrb	r1, [r4, #5]
 80181a0:	9100      	str	r1, [sp, #0]
 80181a2:	b292      	uxth	r2, r2
 80181a4:	a930      	add	r1, sp, #192	; 0xc0
 80181a6:	a80e      	add	r0, sp, #56	; 0x38
 80181a8:	f7ff fc34 	bl	8017a14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80181ac:	2e00      	cmp	r6, #0
 80181ae:	dc5b      	bgt.n	8018268 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80181b0:	af17      	add	r7, sp, #92	; 0x5c
 80181b2:	f04f 0900 	mov.w	r9, #0
 80181b6:	7c23      	ldrb	r3, [r4, #16]
 80181b8:	2b00      	cmp	r3, #0
 80181ba:	f000 80b1 	beq.w	8018320 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80181be:	a80e      	add	r0, sp, #56	; 0x38
 80181c0:	f7ff fe4c 	bl	8017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80181c4:	f1ba 0f00 	cmp.w	sl, #0
 80181c8:	f000 80a5 	beq.w	8018316 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80181cc:	7c23      	ldrb	r3, [r4, #16]
 80181ce:	9309      	str	r3, [sp, #36]	; 0x24
 80181d0:	2264      	movs	r2, #100	; 0x64
 80181d2:	4639      	mov	r1, r7
 80181d4:	a849      	add	r0, sp, #292	; 0x124
 80181d6:	f015 feee 	bl	802dfb6 <memcpy>
 80181da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80181dc:	2b00      	cmp	r3, #0
 80181de:	f000 80a7 	beq.w	8018330 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80181e2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80181e6:	7922      	ldrb	r2, [r4, #4]
 80181e8:	2a01      	cmp	r2, #1
 80181ea:	f040 808a 	bne.w	8018302 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80181ee:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80181f2:	1ac0      	subs	r0, r0, r3
 80181f4:	2302      	movs	r3, #2
 80181f6:	fb90 f0f3 	sdiv	r0, r0, r3
 80181fa:	b200      	sxth	r0, r0
 80181fc:	7c23      	ldrb	r3, [r4, #16]
 80181fe:	2b00      	cmp	r3, #0
 8018200:	f000 808b 	beq.w	801831a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8018204:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8018208:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801820c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018210:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8018214:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8018218:	4410      	add	r0, r2
 801821a:	b200      	sxth	r0, r0
 801821c:	9000      	str	r0, [sp, #0]
 801821e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8018222:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8018226:	4642      	mov	r2, r8
 8018228:	2100      	movs	r1, #0
 801822a:	4658      	mov	r0, fp
 801822c:	f7ff fca2 	bl	8017b74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8018230:	2800      	cmp	r0, #0
 8018232:	d163      	bne.n	80182fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018234:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018238:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801823c:	b2b2      	uxth	r2, r6
 801823e:	4413      	add	r3, r2
 8018240:	1a8a      	subs	r2, r1, r2
 8018242:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8018246:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801824a:	b21b      	sxth	r3, r3
 801824c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018250:	2a00      	cmp	r2, #0
 8018252:	d153      	bne.n	80182fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018254:	6822      	ldr	r2, [r4, #0]
 8018256:	8869      	ldrh	r1, [r5, #2]
 8018258:	7a12      	ldrb	r2, [r2, #8]
 801825a:	1a9b      	subs	r3, r3, r2
 801825c:	88ea      	ldrh	r2, [r5, #6]
 801825e:	440a      	add	r2, r1
 8018260:	b212      	sxth	r2, r2
 8018262:	4293      	cmp	r3, r2
 8018264:	dda7      	ble.n	80181b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8018266:	e049      	b.n	80182fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018268:	7c23      	ldrb	r3, [r4, #16]
 801826a:	444f      	add	r7, r9
 801826c:	b1c3      	cbz	r3, 80182a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801826e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8018272:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018276:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801827a:	443b      	add	r3, r7
 801827c:	4293      	cmp	r3, r2
 801827e:	da97      	bge.n	80181b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018280:	a80e      	add	r0, sp, #56	; 0x38
 8018282:	f7ff fdeb 	bl	8017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018286:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801828a:	3b01      	subs	r3, #1
 801828c:	b29b      	uxth	r3, r3
 801828e:	454b      	cmp	r3, r9
 8018290:	9309      	str	r3, [sp, #36]	; 0x24
 8018292:	d021      	beq.n	80182d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8018294:	7961      	ldrb	r1, [r4, #5]
 8018296:	a817      	add	r0, sp, #92	; 0x5c
 8018298:	f7f2 f970 	bl	800a57c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801829c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801829e:	e7f4      	b.n	801828a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80182a0:	fa1f f986 	uxth.w	r9, r6
 80182a4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80182a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80182ac:	443b      	add	r3, r7
 80182ae:	4293      	cmp	r3, r2
 80182b0:	f6bf af7e 	bge.w	80181b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80182b4:	a817      	add	r0, sp, #92	; 0x5c
 80182b6:	f002 fe7f 	bl	801afb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80182ba:	b1f8      	cbz	r0, 80182fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80182bc:	280a      	cmp	r0, #10
 80182be:	d1f1      	bne.n	80182a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80182c0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80182c4:	444b      	add	r3, r9
 80182c6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80182ca:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80182ce:	eba3 0309 	sub.w	r3, r3, r9
 80182d2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80182d6:	e7e5      	b.n	80182a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80182d8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80182dc:	b2b3      	uxth	r3, r6
 80182de:	441a      	add	r2, r3
 80182e0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80182e4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80182e8:	1ad3      	subs	r3, r2, r3
 80182ea:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80182ee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80182f2:	b11b      	cbz	r3, 80182fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80182f4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80182f8:	2b00      	cmp	r3, #0
 80182fa:	d0ba      	beq.n	8018272 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80182fc:	b063      	add	sp, #396	; 0x18c
 80182fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018302:	2a02      	cmp	r2, #2
 8018304:	d105      	bne.n	8018312 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8018306:	7be2      	ldrb	r2, [r4, #15]
 8018308:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801830c:	1a80      	subs	r0, r0, r2
 801830e:	1ac0      	subs	r0, r0, r3
 8018310:	e773      	b.n	80181fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8018312:	2000      	movs	r0, #0
 8018314:	e772      	b.n	80181fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8018316:	7be0      	ldrb	r0, [r4, #15]
 8018318:	e770      	b.n	80181fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801831a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801831e:	e773      	b.n	8018208 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8018320:	f1ba 0f00 	cmp.w	sl, #0
 8018324:	d0f7      	beq.n	8018316 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018326:	2264      	movs	r2, #100	; 0x64
 8018328:	4639      	mov	r1, r7
 801832a:	a849      	add	r0, sp, #292	; 0x124
 801832c:	f015 fe43 	bl	802dfb6 <memcpy>
 8018330:	2300      	movs	r3, #0
 8018332:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018336:	6821      	ldr	r1, [r4, #0]
 8018338:	a849      	add	r0, sp, #292	; 0x124
 801833a:	f7ff fbae 	bl	8017a9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801833e:	b203      	sxth	r3, r0
 8018340:	e751      	b.n	80181e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08018342 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8018342:	2b03      	cmp	r3, #3
 8018344:	d818      	bhi.n	8018378 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8018346:	e8df f003 	tbb	[pc, r3]
 801834a:	0602      	.short	0x0602
 801834c:	130d      	.short	0x130d
 801834e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018352:	1850      	adds	r0, r2, r1
 8018354:	4770      	bx	lr
 8018356:	8803      	ldrh	r3, [r0, #0]
 8018358:	8880      	ldrh	r0, [r0, #4]
 801835a:	4418      	add	r0, r3
 801835c:	b200      	sxth	r0, r0
 801835e:	1a80      	subs	r0, r0, r2
 8018360:	3801      	subs	r0, #1
 8018362:	4770      	bx	lr
 8018364:	8803      	ldrh	r3, [r0, #0]
 8018366:	8880      	ldrh	r0, [r0, #4]
 8018368:	4418      	add	r0, r3
 801836a:	b200      	sxth	r0, r0
 801836c:	1a40      	subs	r0, r0, r1
 801836e:	e7f7      	b.n	8018360 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018370:	f9b0 0000 	ldrsh.w	r0, [r0]
 8018374:	4410      	add	r0, r2
 8018376:	4770      	bx	lr
 8018378:	2000      	movs	r0, #0
 801837a:	4770      	bx	lr

0801837c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801837c:	2b03      	cmp	r3, #3
 801837e:	d817      	bhi.n	80183b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8018380:	e8df f003 	tbb	[pc, r3]
 8018384:	10090602 	.word	0x10090602
 8018388:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801838c:	1850      	adds	r0, r2, r1
 801838e:	4770      	bx	lr
 8018390:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8018394:	e7fa      	b.n	801838c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8018396:	8843      	ldrh	r3, [r0, #2]
 8018398:	88c0      	ldrh	r0, [r0, #6]
 801839a:	4418      	add	r0, r3
 801839c:	b200      	sxth	r0, r0
 801839e:	1a80      	subs	r0, r0, r2
 80183a0:	3801      	subs	r0, #1
 80183a2:	4770      	bx	lr
 80183a4:	8843      	ldrh	r3, [r0, #2]
 80183a6:	88c0      	ldrh	r0, [r0, #6]
 80183a8:	4418      	add	r0, r3
 80183aa:	b200      	sxth	r0, r0
 80183ac:	1a40      	subs	r0, r0, r1
 80183ae:	e7f7      	b.n	80183a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80183b0:	2000      	movs	r0, #0
 80183b2:	4770      	bx	lr

080183b4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80183b4:	4b01      	ldr	r3, [pc, #4]	; (80183bc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80183b6:	2200      	movs	r2, #0
 80183b8:	601a      	str	r2, [r3, #0]
 80183ba:	4770      	bx	lr
 80183bc:	2001384c 	.word	0x2001384c

080183c0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80183c0:	4603      	mov	r3, r0
 80183c2:	b1c8      	cbz	r0, 80183f8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80183c4:	0c02      	lsrs	r2, r0, #16
 80183c6:	0412      	lsls	r2, r2, #16
 80183c8:	b9a2      	cbnz	r2, 80183f4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80183ca:	0403      	lsls	r3, r0, #16
 80183cc:	2010      	movs	r0, #16
 80183ce:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80183d2:	bf04      	itt	eq
 80183d4:	021b      	lsleq	r3, r3, #8
 80183d6:	3008      	addeq	r0, #8
 80183d8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80183dc:	bf04      	itt	eq
 80183de:	011b      	lsleq	r3, r3, #4
 80183e0:	3004      	addeq	r0, #4
 80183e2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80183e6:	bf04      	itt	eq
 80183e8:	009b      	lsleq	r3, r3, #2
 80183ea:	3002      	addeq	r0, #2
 80183ec:	2b00      	cmp	r3, #0
 80183ee:	db04      	blt.n	80183fa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80183f0:	3001      	adds	r0, #1
 80183f2:	4770      	bx	lr
 80183f4:	2000      	movs	r0, #0
 80183f6:	e7ea      	b.n	80183ce <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80183f8:	2020      	movs	r0, #32
 80183fa:	4770      	bx	lr

080183fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80183fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018400:	b087      	sub	sp, #28
 8018402:	460d      	mov	r5, r1
 8018404:	4616      	mov	r6, r2
 8018406:	4698      	mov	r8, r3
 8018408:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801840c:	4601      	mov	r1, r0
 801840e:	b120      	cbz	r0, 801841a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018410:	b11a      	cbz	r2, 801841a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018412:	2d1f      	cmp	r5, #31
 8018414:	d801      	bhi.n	801841a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018416:	2b1f      	cmp	r3, #31
 8018418:	d904      	bls.n	8018424 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801841a:	2000      	movs	r0, #0
 801841c:	6038      	str	r0, [r7, #0]
 801841e:	b007      	add	sp, #28
 8018420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018424:	b97d      	cbnz	r5, 8018446 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8018426:	b143      	cbz	r3, 801843a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8018428:	4602      	mov	r2, r0
 801842a:	e9cd 4700 	strd	r4, r7, [sp]
 801842e:	462b      	mov	r3, r5
 8018430:	4641      	mov	r1, r8
 8018432:	4630      	mov	r0, r6
 8018434:	f7ff ffe2 	bl	80183fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018438:	e7f1      	b.n	801841e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801843a:	f04f 33ff 	mov.w	r3, #4294967295
 801843e:	603b      	str	r3, [r7, #0]
 8018440:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018444:	e7eb      	b.n	801841e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018446:	fa32 fa05 	lsrs.w	sl, r2, r5
 801844a:	d106      	bne.n	801845a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801844c:	4346      	muls	r6, r0
 801844e:	fbb6 f0f4 	udiv	r0, r6, r4
 8018452:	fb04 6610 	mls	r6, r4, r0, r6
 8018456:	603e      	str	r6, [r7, #0]
 8018458:	e7e1      	b.n	801841e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801845a:	2201      	movs	r2, #1
 801845c:	40aa      	lsls	r2, r5
 801845e:	3a01      	subs	r2, #1
 8018460:	4016      	ands	r6, r2
 8018462:	fa00 fb05 	lsl.w	fp, r0, r5
 8018466:	4630      	mov	r0, r6
 8018468:	fbbb f9f4 	udiv	r9, fp, r4
 801846c:	fb0a f309 	mul.w	r3, sl, r9
 8018470:	9303      	str	r3, [sp, #12]
 8018472:	f7ff ffa5 	bl	80183c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018476:	462b      	mov	r3, r5
 8018478:	460a      	mov	r2, r1
 801847a:	e9cd 4700 	strd	r4, r7, [sp]
 801847e:	4601      	mov	r1, r0
 8018480:	4630      	mov	r0, r6
 8018482:	f7ff ffbb 	bl	80183fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018486:	fb04 b919 	mls	r9, r4, r9, fp
 801848a:	4606      	mov	r6, r0
 801848c:	4648      	mov	r0, r9
 801848e:	eb05 0108 	add.w	r1, r5, r8
 8018492:	f7ff ff95 	bl	80183c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018496:	ab05      	add	r3, sp, #20
 8018498:	e9cd 4300 	strd	r4, r3, [sp]
 801849c:	464a      	mov	r2, r9
 801849e:	4603      	mov	r3, r0
 80184a0:	4650      	mov	r0, sl
 80184a2:	f7ff ffab 	bl	80183fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80184a6:	6839      	ldr	r1, [r7, #0]
 80184a8:	9a05      	ldr	r2, [sp, #20]
 80184aa:	9b03      	ldr	r3, [sp, #12]
 80184ac:	4411      	add	r1, r2
 80184ae:	fbb1 f2f4 	udiv	r2, r1, r4
 80184b2:	18d3      	adds	r3, r2, r3
 80184b4:	441e      	add	r6, r3
 80184b6:	fb04 1412 	mls	r4, r4, r2, r1
 80184ba:	4430      	add	r0, r6
 80184bc:	603c      	str	r4, [r7, #0]
 80184be:	e7ae      	b.n	801841e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080184c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80184c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80184c4:	b085      	sub	sp, #20
 80184c6:	f1b0 0900 	subs.w	r9, r0, #0
 80184ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80184cc:	461d      	mov	r5, r3
 80184ce:	bfbf      	itttt	lt
 80184d0:	6823      	ldrlt	r3, [r4, #0]
 80184d2:	425b      	neglt	r3, r3
 80184d4:	f1c9 0900 	rsblt	r9, r9, #0
 80184d8:	6023      	strlt	r3, [r4, #0]
 80184da:	bfb4      	ite	lt
 80184dc:	f04f 36ff 	movlt.w	r6, #4294967295
 80184e0:	2601      	movge	r6, #1
 80184e2:	2a00      	cmp	r2, #0
 80184e4:	4617      	mov	r7, r2
 80184e6:	da04      	bge.n	80184f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80184e8:	6823      	ldr	r3, [r4, #0]
 80184ea:	425b      	negs	r3, r3
 80184ec:	4257      	negs	r7, r2
 80184ee:	4276      	negs	r6, r6
 80184f0:	6023      	str	r3, [r4, #0]
 80184f2:	2d00      	cmp	r5, #0
 80184f4:	4638      	mov	r0, r7
 80184f6:	bfba      	itte	lt
 80184f8:	426d      	neglt	r5, r5
 80184fa:	f04f 38ff 	movlt.w	r8, #4294967295
 80184fe:	f04f 0801 	movge.w	r8, #1
 8018502:	f7ff ff5d 	bl	80183c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018506:	ab03      	add	r3, sp, #12
 8018508:	e9cd 5300 	strd	r5, r3, [sp]
 801850c:	463a      	mov	r2, r7
 801850e:	4603      	mov	r3, r0
 8018510:	4648      	mov	r0, r9
 8018512:	f7ff ff73 	bl	80183fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018516:	6823      	ldr	r3, [r4, #0]
 8018518:	9a03      	ldr	r2, [sp, #12]
 801851a:	4546      	cmp	r6, r8
 801851c:	441a      	add	r2, r3
 801851e:	fb92 f3f5 	sdiv	r3, r2, r5
 8018522:	4418      	add	r0, r3
 8018524:	bf18      	it	ne
 8018526:	4240      	negne	r0, r0
 8018528:	fb05 2313 	mls	r3, r5, r3, r2
 801852c:	1c72      	adds	r2, r6, #1
 801852e:	6023      	str	r3, [r4, #0]
 8018530:	d105      	bne.n	801853e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8018532:	2b00      	cmp	r3, #0
 8018534:	f1c3 0200 	rsb	r2, r3, #0
 8018538:	db0b      	blt.n	8018552 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801853a:	6022      	str	r2, [r4, #0]
 801853c:	e006      	b.n	801854c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801853e:	2e01      	cmp	r6, #1
 8018540:	d104      	bne.n	801854c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018542:	2b00      	cmp	r3, #0
 8018544:	da02      	bge.n	801854c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018546:	442b      	add	r3, r5
 8018548:	3801      	subs	r0, #1
 801854a:	6023      	str	r3, [r4, #0]
 801854c:	b005      	add	sp, #20
 801854e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018552:	3801      	subs	r0, #1
 8018554:	1b52      	subs	r2, r2, r5
 8018556:	e7f0      	b.n	801853a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018558 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018558:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801855c:	4c1c      	ldr	r4, [pc, #112]	; (80185d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801855e:	6807      	ldr	r7, [r0, #0]
 8018560:	69a3      	ldr	r3, [r4, #24]
 8018562:	4605      	mov	r5, r0
 8018564:	b92b      	cbnz	r3, 8018572 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8018566:	6840      	ldr	r0, [r0, #4]
 8018568:	e9c5 7000 	strd	r7, r0, [r5]
 801856c:	b004      	add	sp, #16
 801856e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018572:	68a2      	ldr	r2, [r4, #8]
 8018574:	6820      	ldr	r0, [r4, #0]
 8018576:	ae04      	add	r6, sp, #16
 8018578:	f04f 0802 	mov.w	r8, #2
 801857c:	fb93 f1f8 	sdiv	r1, r3, r8
 8018580:	440a      	add	r2, r1
 8018582:	f846 2d04 	str.w	r2, [r6, #-4]!
 8018586:	69e1      	ldr	r1, [r4, #28]
 8018588:	9600      	str	r6, [sp, #0]
 801858a:	463a      	mov	r2, r7
 801858c:	f7ff ff98 	bl	80184c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018590:	69a3      	ldr	r3, [r4, #24]
 8018592:	686a      	ldr	r2, [r5, #4]
 8018594:	6a21      	ldr	r1, [r4, #32]
 8018596:	9600      	str	r6, [sp, #0]
 8018598:	4607      	mov	r7, r0
 801859a:	6860      	ldr	r0, [r4, #4]
 801859c:	f7ff ff90 	bl	80184c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80185a0:	6962      	ldr	r2, [r4, #20]
 80185a2:	69a3      	ldr	r3, [r4, #24]
 80185a4:	fb93 f8f8 	sdiv	r8, r3, r8
 80185a8:	4442      	add	r2, r8
 80185aa:	9203      	str	r2, [sp, #12]
 80185ac:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80185ae:	682a      	ldr	r2, [r5, #0]
 80185b0:	9600      	str	r6, [sp, #0]
 80185b2:	4407      	add	r7, r0
 80185b4:	68e0      	ldr	r0, [r4, #12]
 80185b6:	f7ff ff83 	bl	80184c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80185ba:	9600      	str	r6, [sp, #0]
 80185bc:	4680      	mov	r8, r0
 80185be:	69a3      	ldr	r3, [r4, #24]
 80185c0:	686a      	ldr	r2, [r5, #4]
 80185c2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80185c4:	6920      	ldr	r0, [r4, #16]
 80185c6:	f7ff ff7b 	bl	80184c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80185ca:	4440      	add	r0, r8
 80185cc:	e7cc      	b.n	8018568 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80185ce:	bf00      	nop
 80185d0:	20013850 	.word	0x20013850

080185d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80185d4:	4b07      	ldr	r3, [pc, #28]	; (80185f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80185d6:	781b      	ldrb	r3, [r3, #0]
 80185d8:	2b01      	cmp	r3, #1
 80185da:	d109      	bne.n	80185f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80185dc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80185e0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80185e4:	8003      	strh	r3, [r0, #0]
 80185e6:	4b04      	ldr	r3, [pc, #16]	; (80185f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80185e8:	881b      	ldrh	r3, [r3, #0]
 80185ea:	3b01      	subs	r3, #1
 80185ec:	1a9b      	subs	r3, r3, r2
 80185ee:	800b      	strh	r3, [r1, #0]
 80185f0:	4770      	bx	lr
 80185f2:	bf00      	nop
 80185f4:	20013834 	.word	0x20013834
 80185f8:	20013830 	.word	0x20013830

080185fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80185fc:	b510      	push	{r4, lr}
 80185fe:	4b07      	ldr	r3, [pc, #28]	; (801861c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8018600:	781b      	ldrb	r3, [r3, #0]
 8018602:	2b01      	cmp	r3, #1
 8018604:	d108      	bne.n	8018618 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8018606:	4b06      	ldr	r3, [pc, #24]	; (8018620 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8018608:	880c      	ldrh	r4, [r1, #0]
 801860a:	881b      	ldrh	r3, [r3, #0]
 801860c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018610:	3b01      	subs	r3, #1
 8018612:	1b1b      	subs	r3, r3, r4
 8018614:	8003      	strh	r3, [r0, #0]
 8018616:	800a      	strh	r2, [r1, #0]
 8018618:	bd10      	pop	{r4, pc}
 801861a:	bf00      	nop
 801861c:	20013834 	.word	0x20013834
 8018620:	20013830 	.word	0x20013830

08018624 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8018624:	b510      	push	{r4, lr}
 8018626:	4b0a      	ldr	r3, [pc, #40]	; (8018650 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018628:	781b      	ldrb	r3, [r3, #0]
 801862a:	2b01      	cmp	r3, #1
 801862c:	d10e      	bne.n	801864c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801862e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018632:	8843      	ldrh	r3, [r0, #2]
 8018634:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018638:	8044      	strh	r4, [r0, #2]
 801863a:	18ca      	adds	r2, r1, r3
 801863c:	4b05      	ldr	r3, [pc, #20]	; (8018654 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801863e:	881b      	ldrh	r3, [r3, #0]
 8018640:	1a9b      	subs	r3, r3, r2
 8018642:	8003      	strh	r3, [r0, #0]
 8018644:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018648:	80c3      	strh	r3, [r0, #6]
 801864a:	8081      	strh	r1, [r0, #4]
 801864c:	bd10      	pop	{r4, pc}
 801864e:	bf00      	nop
 8018650:	20013834 	.word	0x20013834
 8018654:	20013830 	.word	0x20013830

08018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018658:	4b08      	ldr	r3, [pc, #32]	; (801867c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801865a:	781b      	ldrb	r3, [r3, #0]
 801865c:	2b01      	cmp	r3, #1
 801865e:	d10c      	bne.n	801867a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018660:	8803      	ldrh	r3, [r0, #0]
 8018662:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8018666:	8842      	ldrh	r2, [r0, #2]
 8018668:	8002      	strh	r2, [r0, #0]
 801866a:	185a      	adds	r2, r3, r1
 801866c:	4b04      	ldr	r3, [pc, #16]	; (8018680 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801866e:	881b      	ldrh	r3, [r3, #0]
 8018670:	1a9b      	subs	r3, r3, r2
 8018672:	8043      	strh	r3, [r0, #2]
 8018674:	88c3      	ldrh	r3, [r0, #6]
 8018676:	8083      	strh	r3, [r0, #4]
 8018678:	80c1      	strh	r1, [r0, #6]
 801867a:	4770      	bx	lr
 801867c:	20013834 	.word	0x20013834
 8018680:	20013830 	.word	0x20013830

08018684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8018684:	b510      	push	{r4, lr}
 8018686:	4b07      	ldr	r3, [pc, #28]	; (80186a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8018688:	781b      	ldrb	r3, [r3, #0]
 801868a:	2b01      	cmp	r3, #1
 801868c:	d108      	bne.n	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801868e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018692:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018696:	8003      	strh	r3, [r0, #0]
 8018698:	8893      	ldrh	r3, [r2, #4]
 801869a:	3b01      	subs	r3, #1
 801869c:	1b1b      	subs	r3, r3, r4
 801869e:	800b      	strh	r3, [r1, #0]
 80186a0:	bd10      	pop	{r4, pc}
 80186a2:	bf00      	nop
 80186a4:	20013834 	.word	0x20013834

080186a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80186a8:	4b0b      	ldr	r3, [pc, #44]	; (80186d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80186aa:	781b      	ldrb	r3, [r3, #0]
 80186ac:	2b01      	cmp	r3, #1
 80186ae:	d111      	bne.n	80186d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80186b0:	680b      	ldr	r3, [r1, #0]
 80186b2:	ed90 7a00 	vldr	s14, [r0]
 80186b6:	6003      	str	r3, [r0, #0]
 80186b8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80186bc:	eddf 6a07 	vldr	s13, [pc, #28]	; 80186dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80186c0:	ee07 3a90 	vmov	s15, r3
 80186c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80186c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80186cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80186d0:	edc1 7a00 	vstr	s15, [r1]
 80186d4:	4770      	bx	lr
 80186d6:	bf00      	nop
 80186d8:	20013834 	.word	0x20013834
 80186dc:	38d1b717 	.word	0x38d1b717

080186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80186e0:	b510      	push	{r4, lr}
 80186e2:	4b0a      	ldr	r3, [pc, #40]	; (801870c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80186e4:	781b      	ldrb	r3, [r3, #0]
 80186e6:	2b01      	cmp	r3, #1
 80186e8:	460a      	mov	r2, r1
 80186ea:	d10d      	bne.n	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80186ec:	8881      	ldrh	r1, [r0, #4]
 80186ee:	8803      	ldrh	r3, [r0, #0]
 80186f0:	440b      	add	r3, r1
 80186f2:	4601      	mov	r1, r0
 80186f4:	3b01      	subs	r3, #1
 80186f6:	f821 3b02 	strh.w	r3, [r1], #2
 80186fa:	f7ff ffc3 	bl	8018684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80186fe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018702:	88c2      	ldrh	r2, [r0, #6]
 8018704:	8082      	strh	r2, [r0, #4]
 8018706:	80c3      	strh	r3, [r0, #6]
 8018708:	bd10      	pop	{r4, pc}
 801870a:	bf00      	nop
 801870c:	20013834 	.word	0x20013834

08018710 <_ZN8touchgfx11Application13requestRedrawEv>:
 8018710:	4b06      	ldr	r3, [pc, #24]	; (801872c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8018712:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018716:	4b06      	ldr	r3, [pc, #24]	; (8018730 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8018718:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801871c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018720:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8018724:	2100      	movs	r1, #0
 8018726:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801872a:	4770      	bx	lr
 801872c:	20013830 	.word	0x20013830
 8018730:	20013832 	.word	0x20013832

08018734 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8018734:	4b03      	ldr	r3, [pc, #12]	; (8018744 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8018736:	6818      	ldr	r0, [r3, #0]
 8018738:	b110      	cbz	r0, 8018740 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801873a:	6803      	ldr	r3, [r0, #0]
 801873c:	699b      	ldr	r3, [r3, #24]
 801873e:	4718      	bx	r3
 8018740:	4770      	bx	lr
 8018742:	bf00      	nop
 8018744:	20013880 	.word	0x20013880

08018748 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8018748:	4770      	bx	lr
	...

0801874c <_ZN8touchgfx11Application4drawEv>:
 801874c:	b507      	push	{r0, r1, r2, lr}
 801874e:	4b09      	ldr	r3, [pc, #36]	; (8018774 <_ZN8touchgfx11Application4drawEv+0x28>)
 8018750:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018754:	4b08      	ldr	r3, [pc, #32]	; (8018778 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8018756:	f8ad 2004 	strh.w	r2, [sp, #4]
 801875a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801875e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018762:	6803      	ldr	r3, [r0, #0]
 8018764:	2100      	movs	r1, #0
 8018766:	9100      	str	r1, [sp, #0]
 8018768:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801876a:	4669      	mov	r1, sp
 801876c:	4798      	blx	r3
 801876e:	b003      	add	sp, #12
 8018770:	f85d fb04 	ldr.w	pc, [sp], #4
 8018774:	20013830 	.word	0x20013830
 8018778:	20013832 	.word	0x20013832

0801877c <_ZN8touchgfx11Application10invalidateEv>:
 801877c:	4b09      	ldr	r3, [pc, #36]	; (80187a4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801877e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018782:	4b09      	ldr	r3, [pc, #36]	; (80187a8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8018784:	b082      	sub	sp, #8
 8018786:	f9b3 3000 	ldrsh.w	r3, [r3]
 801878a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801878e:	2100      	movs	r1, #0
 8018790:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018794:	9100      	str	r1, [sp, #0]
 8018796:	6803      	ldr	r3, [r0, #0]
 8018798:	aa02      	add	r2, sp, #8
 801879a:	e912 0006 	ldmdb	r2, {r1, r2}
 801879e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80187a0:	b002      	add	sp, #8
 80187a2:	4718      	bx	r3
 80187a4:	20013830 	.word	0x20013830
 80187a8:	20013832 	.word	0x20013832

080187ac <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80187ac:	4b03      	ldr	r3, [pc, #12]	; (80187bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80187ae:	6818      	ldr	r0, [r3, #0]
 80187b0:	b110      	cbz	r0, 80187b8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80187b2:	6803      	ldr	r3, [r0, #0]
 80187b4:	69db      	ldr	r3, [r3, #28]
 80187b6:	4718      	bx	r3
 80187b8:	4770      	bx	lr
 80187ba:	bf00      	nop
 80187bc:	20013880 	.word	0x20013880

080187c0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80187c0:	4b03      	ldr	r3, [pc, #12]	; (80187d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80187c2:	6818      	ldr	r0, [r3, #0]
 80187c4:	b110      	cbz	r0, 80187cc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80187c6:	6803      	ldr	r3, [r0, #0]
 80187c8:	6a1b      	ldr	r3, [r3, #32]
 80187ca:	4718      	bx	r3
 80187cc:	4770      	bx	lr
 80187ce:	bf00      	nop
 80187d0:	20013880 	.word	0x20013880

080187d4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80187d4:	2300      	movs	r3, #0
 80187d6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80187da:	4770      	bx	lr

080187dc <_ZN8touchgfx11Application14handleKeyEventEh>:
 80187dc:	4b03      	ldr	r3, [pc, #12]	; (80187ec <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80187de:	6818      	ldr	r0, [r3, #0]
 80187e0:	b110      	cbz	r0, 80187e8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80187e2:	6803      	ldr	r3, [r0, #0]
 80187e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80187e6:	4718      	bx	r3
 80187e8:	4770      	bx	lr
 80187ea:	bf00      	nop
 80187ec:	20013880 	.word	0x20013880

080187f0 <_ZN8touchgfx11ApplicationD1Ev>:
 80187f0:	4770      	bx	lr

080187f2 <_ZN8touchgfx11ApplicationD0Ev>:
 80187f2:	b510      	push	{r4, lr}
 80187f4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80187f8:	4604      	mov	r4, r0
 80187fa:	f014 f9ca 	bl	802cb92 <_ZdlPvj>
 80187fe:	4620      	mov	r0, r4
 8018800:	bd10      	pop	{r4, pc}

08018802 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8018802:	b510      	push	{r4, lr}
 8018804:	f9b1 4000 	ldrsh.w	r4, [r1]
 8018808:	888a      	ldrh	r2, [r1, #4]
 801880a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801880e:	4422      	add	r2, r4
 8018810:	b212      	sxth	r2, r2
 8018812:	4293      	cmp	r3, r2
 8018814:	da15      	bge.n	8018842 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018816:	8882      	ldrh	r2, [r0, #4]
 8018818:	4413      	add	r3, r2
 801881a:	b21b      	sxth	r3, r3
 801881c:	429c      	cmp	r4, r3
 801881e:	da10      	bge.n	8018842 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018820:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8018824:	88c9      	ldrh	r1, [r1, #6]
 8018826:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801882a:	4419      	add	r1, r3
 801882c:	b209      	sxth	r1, r1
 801882e:	428a      	cmp	r2, r1
 8018830:	da07      	bge.n	8018842 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018832:	88c0      	ldrh	r0, [r0, #6]
 8018834:	4410      	add	r0, r2
 8018836:	b200      	sxth	r0, r0
 8018838:	4283      	cmp	r3, r0
 801883a:	bfac      	ite	ge
 801883c:	2000      	movge	r0, #0
 801883e:	2001      	movlt	r0, #1
 8018840:	bd10      	pop	{r4, pc}
 8018842:	2000      	movs	r0, #0
 8018844:	e7fc      	b.n	8018840 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08018846 <_ZN8touchgfx4Rect10restrictToEss>:
 8018846:	f9b0 3000 	ldrsh.w	r3, [r0]
 801884a:	2b00      	cmp	r3, #0
 801884c:	b510      	push	{r4, lr}
 801884e:	da04      	bge.n	801885a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8018850:	8884      	ldrh	r4, [r0, #4]
 8018852:	4423      	add	r3, r4
 8018854:	8083      	strh	r3, [r0, #4]
 8018856:	2300      	movs	r3, #0
 8018858:	8003      	strh	r3, [r0, #0]
 801885a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801885e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018862:	1b09      	subs	r1, r1, r4
 8018864:	428b      	cmp	r3, r1
 8018866:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801886a:	bfc8      	it	gt
 801886c:	8081      	strhgt	r1, [r0, #4]
 801886e:	2b00      	cmp	r3, #0
 8018870:	da04      	bge.n	801887c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8018872:	88c1      	ldrh	r1, [r0, #6]
 8018874:	440b      	add	r3, r1
 8018876:	80c3      	strh	r3, [r0, #6]
 8018878:	2300      	movs	r3, #0
 801887a:	8043      	strh	r3, [r0, #2]
 801887c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018880:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8018884:	1a52      	subs	r2, r2, r1
 8018886:	4293      	cmp	r3, r2
 8018888:	bfc8      	it	gt
 801888a:	80c2      	strhgt	r2, [r0, #6]
 801888c:	bd10      	pop	{r4, pc}
	...

08018890 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8018890:	b510      	push	{r4, lr}
 8018892:	4b10      	ldr	r3, [pc, #64]	; (80188d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8018894:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018898:	4b0f      	ldr	r3, [pc, #60]	; (80188d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801889a:	460c      	mov	r4, r1
 801889c:	4620      	mov	r0, r4
 801889e:	f9b3 1000 	ldrsh.w	r1, [r3]
 80188a2:	f7ff ffd0 	bl	8018846 <_ZN8touchgfx4Rect10restrictToEss>
 80188a6:	4b0d      	ldr	r3, [pc, #52]	; (80188dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80188a8:	6818      	ldr	r0, [r3, #0]
 80188aa:	b190      	cbz	r0, 80188d2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80188ac:	6803      	ldr	r3, [r0, #0]
 80188ae:	4621      	mov	r1, r4
 80188b0:	689b      	ldr	r3, [r3, #8]
 80188b2:	4798      	blx	r3
 80188b4:	4b0a      	ldr	r3, [pc, #40]	; (80188e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80188b6:	6818      	ldr	r0, [r3, #0]
 80188b8:	b118      	cbz	r0, 80188c2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80188ba:	6803      	ldr	r3, [r0, #0]
 80188bc:	4621      	mov	r1, r4
 80188be:	689b      	ldr	r3, [r3, #8]
 80188c0:	4798      	blx	r3
 80188c2:	4b08      	ldr	r3, [pc, #32]	; (80188e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80188c4:	6818      	ldr	r0, [r3, #0]
 80188c6:	6803      	ldr	r3, [r0, #0]
 80188c8:	4621      	mov	r1, r4
 80188ca:	69db      	ldr	r3, [r3, #28]
 80188cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80188d0:	4718      	bx	r3
 80188d2:	bd10      	pop	{r4, pc}
 80188d4:	20013832 	.word	0x20013832
 80188d8:	20013830 	.word	0x20013830
 80188dc:	20013880 	.word	0x20013880
 80188e0:	2001387c 	.word	0x2001387c
 80188e4:	2001383c 	.word	0x2001383c

080188e8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80188e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80188ea:	4606      	mov	r6, r0
 80188ec:	4608      	mov	r0, r1
 80188ee:	460f      	mov	r7, r1
 80188f0:	f7fa f957 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80188f4:	b9e8      	cbnz	r0, 8018932 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188f6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80188fa:	f9b6 4000 	ldrsh.w	r4, [r6]
 80188fe:	42a5      	cmp	r5, r4
 8018900:	db17      	blt.n	8018932 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018902:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8018906:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801890a:	429a      	cmp	r2, r3
 801890c:	db11      	blt.n	8018932 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801890e:	88b9      	ldrh	r1, [r7, #4]
 8018910:	440d      	add	r5, r1
 8018912:	88b1      	ldrh	r1, [r6, #4]
 8018914:	440c      	add	r4, r1
 8018916:	b22d      	sxth	r5, r5
 8018918:	b224      	sxth	r4, r4
 801891a:	42a5      	cmp	r5, r4
 801891c:	dc09      	bgt.n	8018932 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801891e:	88f8      	ldrh	r0, [r7, #6]
 8018920:	4410      	add	r0, r2
 8018922:	88f2      	ldrh	r2, [r6, #6]
 8018924:	4413      	add	r3, r2
 8018926:	b200      	sxth	r0, r0
 8018928:	b21b      	sxth	r3, r3
 801892a:	4298      	cmp	r0, r3
 801892c:	bfcc      	ite	gt
 801892e:	2000      	movgt	r0, #0
 8018930:	2001      	movle	r0, #1
 8018932:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018934 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8018934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018936:	4604      	mov	r4, r0
 8018938:	4608      	mov	r0, r1
 801893a:	460d      	mov	r5, r1
 801893c:	f7fa f931 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018940:	b978      	cbnz	r0, 8018962 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8018942:	4620      	mov	r0, r4
 8018944:	f7fa f92d 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018948:	f9b5 6000 	ldrsh.w	r6, [r5]
 801894c:	b150      	cbz	r0, 8018964 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801894e:	8026      	strh	r6, [r4, #0]
 8018950:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018954:	8063      	strh	r3, [r4, #2]
 8018956:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801895a:	80a3      	strh	r3, [r4, #4]
 801895c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8018960:	80e3      	strh	r3, [r4, #6]
 8018962:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018964:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018968:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801896c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8018970:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8018974:	88ed      	ldrh	r5, [r5, #6]
 8018976:	42b1      	cmp	r1, r6
 8018978:	460f      	mov	r7, r1
 801897a:	bfa8      	it	ge
 801897c:	4637      	movge	r7, r6
 801897e:	4293      	cmp	r3, r2
 8018980:	4618      	mov	r0, r3
 8018982:	4466      	add	r6, ip
 8018984:	bfa8      	it	ge
 8018986:	4610      	movge	r0, r2
 8018988:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801898c:	8027      	strh	r7, [r4, #0]
 801898e:	442a      	add	r2, r5
 8018990:	88e5      	ldrh	r5, [r4, #6]
 8018992:	8060      	strh	r0, [r4, #2]
 8018994:	4461      	add	r1, ip
 8018996:	442b      	add	r3, r5
 8018998:	b236      	sxth	r6, r6
 801899a:	b209      	sxth	r1, r1
 801899c:	b212      	sxth	r2, r2
 801899e:	b21b      	sxth	r3, r3
 80189a0:	428e      	cmp	r6, r1
 80189a2:	bfac      	ite	ge
 80189a4:	ebc7 0106 	rsbge	r1, r7, r6
 80189a8:	ebc7 0101 	rsblt	r1, r7, r1
 80189ac:	429a      	cmp	r2, r3
 80189ae:	bfac      	ite	ge
 80189b0:	ebc0 0202 	rsbge	r2, r0, r2
 80189b4:	ebc0 0203 	rsblt	r2, r0, r3
 80189b8:	80a1      	strh	r1, [r4, #4]
 80189ba:	80e2      	strh	r2, [r4, #6]
 80189bc:	e7d1      	b.n	8018962 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080189c0 <_ZN8touchgfx11Application11getInstanceEv>:
 80189c0:	4b01      	ldr	r3, [pc, #4]	; (80189c8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80189c2:	6818      	ldr	r0, [r3, #0]
 80189c4:	4770      	bx	lr
 80189c6:	bf00      	nop
 80189c8:	20013890 	.word	0x20013890

080189cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80189cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80189ce:	4b10      	ldr	r3, [pc, #64]	; (8018a10 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80189d0:	781b      	ldrb	r3, [r3, #0]
 80189d2:	4605      	mov	r5, r0
 80189d4:	b1d3      	cbz	r3, 8018a0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80189d6:	4b0f      	ldr	r3, [pc, #60]	; (8018a14 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80189d8:	4f0f      	ldr	r7, [pc, #60]	; (8018a18 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80189da:	881c      	ldrh	r4, [r3, #0]
 80189dc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80189e0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80189e4:	42a3      	cmp	r3, r4
 80189e6:	d90e      	bls.n	8018a06 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80189e8:	683b      	ldr	r3, [r7, #0]
 80189ea:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80189ee:	b10a      	cbz	r2, 80189f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80189f0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80189f2:	b900      	cbnz	r0, 80189f6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80189f4:	6898      	ldr	r0, [r3, #8]
 80189f6:	6803      	ldr	r3, [r0, #0]
 80189f8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80189fc:	69db      	ldr	r3, [r3, #28]
 80189fe:	3401      	adds	r4, #1
 8018a00:	4798      	blx	r3
 8018a02:	b2a4      	uxth	r4, r4
 8018a04:	e7ec      	b.n	80189e0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8018a06:	2300      	movs	r3, #0
 8018a08:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8018a0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018a0e:	bf00      	nop
 8018a10:	2001383a 	.word	0x2001383a
 8018a14:	2000008c 	.word	0x2000008c
 8018a18:	2001383c 	.word	0x2001383c

08018a1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8018a1c:	b510      	push	{r4, lr}
 8018a1e:	2300      	movs	r3, #0
 8018a20:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8018a24:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018a28:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018a2c:	4604      	mov	r4, r0
 8018a2e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018a32:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8018a36:	429a      	cmp	r2, r3
 8018a38:	d90e      	bls.n	8018a58 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8018a3a:	18e2      	adds	r2, r4, r3
 8018a3c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8018a40:	b122      	cbz	r2, 8018a4c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8018a42:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8018a46:	6803      	ldr	r3, [r0, #0]
 8018a48:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018a4a:	4798      	blx	r3
 8018a4c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018a50:	3301      	adds	r3, #1
 8018a52:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018a56:	e7ea      	b.n	8018a2e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8018a58:	bd10      	pop	{r4, pc}

08018a5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8018a5a:	b530      	push	{r4, r5, lr}
 8018a5c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8018a60:	2200      	movs	r2, #0
 8018a62:	b293      	uxth	r3, r2
 8018a64:	429d      	cmp	r5, r3
 8018a66:	d90e      	bls.n	8018a86 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018a68:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8018a6c:	428b      	cmp	r3, r1
 8018a6e:	d10b      	bne.n	8018a88 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018a70:	1884      	adds	r4, r0, r2
 8018a72:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8018a76:	b13b      	cbz	r3, 8018a88 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018a78:	3b01      	subs	r3, #1
 8018a7a:	b2db      	uxtb	r3, r3
 8018a7c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8018a80:	b90b      	cbnz	r3, 8018a86 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018a82:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8018a86:	bd30      	pop	{r4, r5, pc}
 8018a88:	3201      	adds	r2, #1
 8018a8a:	e7ea      	b.n	8018a62 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8018a8c:	2300      	movs	r3, #0
 8018a8e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018a92:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8018a96:	30a4      	adds	r0, #164	; 0xa4
 8018a98:	f802 3b01 	strb.w	r3, [r2], #1
 8018a9c:	4282      	cmp	r2, r0
 8018a9e:	d1fb      	bne.n	8018a98 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8018aa0:	4770      	bx	lr
	...

08018aa4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8018aa4:	b570      	push	{r4, r5, r6, lr}
 8018aa6:	4c0b      	ldr	r4, [pc, #44]	; (8018ad4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8018aa8:	4605      	mov	r5, r0
 8018aaa:	6820      	ldr	r0, [r4, #0]
 8018aac:	460e      	mov	r6, r1
 8018aae:	b110      	cbz	r0, 8018ab6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8018ab0:	6803      	ldr	r3, [r0, #0]
 8018ab2:	695b      	ldr	r3, [r3, #20]
 8018ab4:	4798      	blx	r3
 8018ab6:	1d28      	adds	r0, r5, #4
 8018ab8:	f7ff ffe8 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018abc:	6026      	str	r6, [r4, #0]
 8018abe:	6833      	ldr	r3, [r6, #0]
 8018ac0:	4630      	mov	r0, r6
 8018ac2:	68db      	ldr	r3, [r3, #12]
 8018ac4:	4798      	blx	r3
 8018ac6:	682b      	ldr	r3, [r5, #0]
 8018ac8:	4628      	mov	r0, r5
 8018aca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018acc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018ad0:	4718      	bx	r3
 8018ad2:	bf00      	nop
 8018ad4:	20013880 	.word	0x20013880

08018ad8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8018ad8:	2300      	movs	r3, #0
 8018ada:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8018ade:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8018ae2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018ae4:	461a      	mov	r2, r3
 8018ae6:	461c      	mov	r4, r3
 8018ae8:	461d      	mov	r5, r3
 8018aea:	459c      	cmp	ip, r3
 8018aec:	dd1a      	ble.n	8018b24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8018aee:	18c6      	adds	r6, r0, r3
 8018af0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8018af4:	b16e      	cbz	r6, 8018b12 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8018af6:	429a      	cmp	r2, r3
 8018af8:	d008      	beq.n	8018b0c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8018afa:	fa1f fe82 	uxth.w	lr, r2
 8018afe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8018b02:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8018b06:	1887      	adds	r7, r0, r2
 8018b08:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8018b0c:	3201      	adds	r2, #1
 8018b0e:	3301      	adds	r3, #1
 8018b10:	e7eb      	b.n	8018aea <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8018b12:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8018b16:	4299      	cmp	r1, r3
 8018b18:	bfa8      	it	ge
 8018b1a:	3501      	addge	r5, #1
 8018b1c:	429e      	cmp	r6, r3
 8018b1e:	bfc8      	it	gt
 8018b20:	3401      	addgt	r4, #1
 8018b22:	e7f4      	b.n	8018b0e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8018b24:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8018b28:	1b49      	subs	r1, r1, r5
 8018b2a:	1b1b      	subs	r3, r3, r4
 8018b2c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8018b30:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018b34:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018b38:	4293      	cmp	r3, r2
 8018b3a:	dd03      	ble.n	8018b44 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8018b3c:	3b01      	subs	r3, #1
 8018b3e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018b42:	e7f7      	b.n	8018b34 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8018b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08018b48 <_ZN8touchgfx11Application15handleTickEventEv>:
 8018b48:	b570      	push	{r4, r5, r6, lr}
 8018b4a:	4d16      	ldr	r5, [pc, #88]	; (8018ba4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8018b4c:	4604      	mov	r4, r0
 8018b4e:	6828      	ldr	r0, [r5, #0]
 8018b50:	b140      	cbz	r0, 8018b64 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018b52:	7a03      	ldrb	r3, [r0, #8]
 8018b54:	b933      	cbnz	r3, 8018b64 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018b56:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018b5a:	6803      	ldr	r3, [r0, #0]
 8018b5c:	689b      	ldr	r3, [r3, #8]
 8018b5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018b62:	4718      	bx	r3
 8018b64:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8018b68:	4e0f      	ldr	r6, [pc, #60]	; (8018ba8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8018b6a:	b973      	cbnz	r3, 8018b8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b6c:	b168      	cbz	r0, 8018b8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b6e:	7a03      	ldrb	r3, [r0, #8]
 8018b70:	b15b      	cbz	r3, 8018b8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b72:	6830      	ldr	r0, [r6, #0]
 8018b74:	b110      	cbz	r0, 8018b7c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8018b76:	6803      	ldr	r3, [r0, #0]
 8018b78:	691b      	ldr	r3, [r3, #16]
 8018b7a:	4798      	blx	r3
 8018b7c:	6828      	ldr	r0, [r5, #0]
 8018b7e:	6803      	ldr	r3, [r0, #0]
 8018b80:	68db      	ldr	r3, [r3, #12]
 8018b82:	4798      	blx	r3
 8018b84:	2301      	movs	r3, #1
 8018b86:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018b8a:	3404      	adds	r4, #4
 8018b8c:	4620      	mov	r0, r4
 8018b8e:	f7ff ff45 	bl	8018a1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8018b92:	4620      	mov	r0, r4
 8018b94:	f7ff ffa0 	bl	8018ad8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018b98:	6830      	ldr	r0, [r6, #0]
 8018b9a:	b110      	cbz	r0, 8018ba2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8018b9c:	6803      	ldr	r3, [r0, #0]
 8018b9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018ba0:	e7dd      	b.n	8018b5e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8018ba2:	bd70      	pop	{r4, r5, r6, pc}
 8018ba4:	20013884 	.word	0x20013884
 8018ba8:	20013880 	.word	0x20013880

08018bac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8018bac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018bae:	2300      	movs	r3, #0
 8018bb0:	4604      	mov	r4, r0
 8018bb2:	460d      	mov	r5, r1
 8018bb4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8018bb8:	4618      	mov	r0, r3
 8018bba:	b29a      	uxth	r2, r3
 8018bbc:	4291      	cmp	r1, r2
 8018bbe:	d911      	bls.n	8018be4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8018bc0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8018bc4:	18e6      	adds	r6, r4, r3
 8018bc6:	42af      	cmp	r7, r5
 8018bc8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8018bcc:	d105      	bne.n	8018bda <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8018bce:	2aff      	cmp	r2, #255	; 0xff
 8018bd0:	d002      	beq.n	8018bd8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018bd2:	3201      	adds	r2, #1
 8018bd4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8018bd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018bda:	2a00      	cmp	r2, #0
 8018bdc:	bf08      	it	eq
 8018bde:	2001      	moveq	r0, #1
 8018be0:	3301      	adds	r3, #1
 8018be2:	e7ea      	b.n	8018bba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8018be4:	b120      	cbz	r0, 8018bf0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018be6:	2920      	cmp	r1, #32
 8018be8:	d102      	bne.n	8018bf0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018bea:	4620      	mov	r0, r4
 8018bec:	f7ff ff74 	bl	8018ad8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018bf0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8018bf4:	2b1f      	cmp	r3, #31
 8018bf6:	d8ef      	bhi.n	8018bd8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018bf8:	18e2      	adds	r2, r4, r3
 8018bfa:	2101      	movs	r1, #1
 8018bfc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8018c00:	185a      	adds	r2, r3, r1
 8018c02:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8018c06:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8018c0a:	e7e5      	b.n	8018bd8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08018c0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8018c0c:	4603      	mov	r3, r0
 8018c0e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8018c12:	2200      	movs	r2, #0
 8018c14:	801a      	strh	r2, [r3, #0]
 8018c16:	805a      	strh	r2, [r3, #2]
 8018c18:	809a      	strh	r2, [r3, #4]
 8018c1a:	80da      	strh	r2, [r3, #6]
 8018c1c:	3308      	adds	r3, #8
 8018c1e:	428b      	cmp	r3, r1
 8018c20:	d1f8      	bne.n	8018c14 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8018c22:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8018c26:	4770      	bx	lr

08018c28 <_ZN8touchgfx11ApplicationC1Ev>:
 8018c28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018c2a:	4606      	mov	r6, r0
 8018c2c:	4b1c      	ldr	r3, [pc, #112]	; (8018ca0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8018c2e:	f846 3b04 	str.w	r3, [r6], #4
 8018c32:	4604      	mov	r4, r0
 8018c34:	2500      	movs	r5, #0
 8018c36:	22a8      	movs	r2, #168	; 0xa8
 8018c38:	2100      	movs	r1, #0
 8018c3a:	4630      	mov	r0, r6
 8018c3c:	f015 f895 	bl	802dd6a <memset>
 8018c40:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8018c44:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018c48:	f7ff ffe0 	bl	8018c0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018c4c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8018c50:	f7ff ffdc 	bl	8018c0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018c54:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8018c58:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8018c5c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8018c60:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8018c64:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8018c68:	490e      	ldr	r1, [pc, #56]	; (8018ca4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8018c6a:	480f      	ldr	r0, [pc, #60]	; (8018ca8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8018c6c:	4f0f      	ldr	r7, [pc, #60]	; (8018cac <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8018c6e:	f010 fe27 	bl	80298c0 <CRC_Lock>
 8018c72:	4b0f      	ldr	r3, [pc, #60]	; (8018cb0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8018c74:	b158      	cbz	r0, 8018c8e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8018c76:	801d      	strh	r5, [r3, #0]
 8018c78:	4a0e      	ldr	r2, [pc, #56]	; (8018cb4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8018c7a:	2300      	movs	r3, #0
 8018c7c:	6013      	str	r3, [r2, #0]
 8018c7e:	4a0e      	ldr	r2, [pc, #56]	; (8018cb8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8018c80:	603b      	str	r3, [r7, #0]
 8018c82:	4630      	mov	r0, r6
 8018c84:	6013      	str	r3, [r2, #0]
 8018c86:	f7ff ff01 	bl	8018a8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018c8a:	4620      	mov	r0, r4
 8018c8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018c8e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8018c92:	2002      	movs	r0, #2
 8018c94:	801a      	strh	r2, [r3, #0]
 8018c96:	6038      	str	r0, [r7, #0]
 8018c98:	f001 fb4a 	bl	801a330 <_ZN8touchgfx6Screen4drawEv>
 8018c9c:	e7ec      	b.n	8018c78 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8018c9e:	bf00      	nop
 8018ca0:	08031dac 	.word	0x08031dac
 8018ca4:	b5e8b5cd 	.word	0xb5e8b5cd
 8018ca8:	f407a5c2 	.word	0xf407a5c2
 8018cac:	20013880 	.word	0x20013880
 8018cb0:	2000008c 	.word	0x2000008c
 8018cb4:	20013890 	.word	0x20013890
 8018cb8:	20013884 	.word	0x20013884

08018cbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8018cbc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8018cc0:	3b01      	subs	r3, #1
 8018cc2:	b29b      	uxth	r3, r3
 8018cc4:	428b      	cmp	r3, r1
 8018cc6:	b510      	push	{r4, lr}
 8018cc8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8018ccc:	d908      	bls.n	8018ce0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8018cce:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018cd2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8018cd6:	681a      	ldr	r2, [r3, #0]
 8018cd8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8018cdc:	685a      	ldr	r2, [r3, #4]
 8018cde:	6062      	str	r2, [r4, #4]
 8018ce0:	bd10      	pop	{r4, pc}
	...

08018ce4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8018ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ce8:	4b8f      	ldr	r3, [pc, #572]	; (8018f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8018cea:	b08f      	sub	sp, #60	; 0x3c
 8018cec:	ac0a      	add	r4, sp, #40	; 0x28
 8018cee:	e884 0006 	stmia.w	r4, {r1, r2}
 8018cf2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018cf6:	4b8d      	ldr	r3, [pc, #564]	; (8018f2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8018cf8:	4683      	mov	fp, r0
 8018cfa:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018cfe:	4620      	mov	r0, r4
 8018d00:	f7ff fda1 	bl	8018846 <_ZN8touchgfx4Rect10restrictToEss>
 8018d04:	4620      	mov	r0, r4
 8018d06:	f7f9 ff4c 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018d0a:	2800      	cmp	r0, #0
 8018d0c:	d16a      	bne.n	8018de4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018d0e:	9403      	str	r4, [sp, #12]
 8018d10:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8018d14:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018d18:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8018d1c:	35a4      	adds	r5, #164	; 0xa4
 8018d1e:	9301      	str	r3, [sp, #4]
 8018d20:	b15c      	cbz	r4, 8018d3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8018d22:	4629      	mov	r1, r5
 8018d24:	9803      	ldr	r0, [sp, #12]
 8018d26:	f7ff fddf 	bl	80188e8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018d2a:	3c01      	subs	r4, #1
 8018d2c:	b118      	cbz	r0, 8018d36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8018d2e:	b2a1      	uxth	r1, r4
 8018d30:	9801      	ldr	r0, [sp, #4]
 8018d32:	f7ff ffc3 	bl	8018cbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018d36:	3d08      	subs	r5, #8
 8018d38:	e7f2      	b.n	8018d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8018d3a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8018d3e:	f8cd a010 	str.w	sl, [sp, #16]
 8018d42:	f10a 33ff 	add.w	r3, sl, #4294967295
 8018d46:	9302      	str	r3, [sp, #8]
 8018d48:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8018d4c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8018d50:	9306      	str	r3, [sp, #24]
 8018d52:	445c      	add	r4, fp
 8018d54:	2500      	movs	r5, #0
 8018d56:	4626      	mov	r6, r4
 8018d58:	f8cd a014 	str.w	sl, [sp, #20]
 8018d5c:	462f      	mov	r7, r5
 8018d5e:	9b05      	ldr	r3, [sp, #20]
 8018d60:	2b00      	cmp	r3, #0
 8018d62:	d073      	beq.n	8018e4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8018d64:	9903      	ldr	r1, [sp, #12]
 8018d66:	4630      	mov	r0, r6
 8018d68:	f7ff fd4b 	bl	8018802 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018d6c:	b350      	cbz	r0, 8018dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018d6e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8018d72:	f9b6 c000 	ldrsh.w	ip, [r6]
 8018d76:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8018d7a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8018d7e:	45e6      	cmp	lr, ip
 8018d80:	db33      	blt.n	8018dea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018d82:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018d86:	88b3      	ldrh	r3, [r6, #4]
 8018d88:	4472      	add	r2, lr
 8018d8a:	4463      	add	r3, ip
 8018d8c:	b212      	sxth	r2, r2
 8018d8e:	b21b      	sxth	r3, r3
 8018d90:	429a      	cmp	r2, r3
 8018d92:	dc2a      	bgt.n	8018dea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018d94:	88f3      	ldrh	r3, [r6, #6]
 8018d96:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8018d9a:	fa1f f289 	uxth.w	r2, r9
 8018d9e:	4413      	add	r3, r2
 8018da0:	b29b      	uxth	r3, r3
 8018da2:	45c8      	cmp	r8, r9
 8018da4:	fa1f fc88 	uxth.w	ip, r8
 8018da8:	fa0f fe83 	sxth.w	lr, r3
 8018dac:	db0f      	blt.n	8018dce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8018dae:	eba3 030c 	sub.w	r3, r3, ip
 8018db2:	1ac9      	subs	r1, r1, r3
 8018db4:	b209      	sxth	r1, r1
 8018db6:	2900      	cmp	r1, #0
 8018db8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018dbc:	dd12      	ble.n	8018de4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018dbe:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8018dc2:	4605      	mov	r5, r0
 8018dc4:	9b05      	ldr	r3, [sp, #20]
 8018dc6:	3b01      	subs	r3, #1
 8018dc8:	9305      	str	r3, [sp, #20]
 8018dca:	3e08      	subs	r6, #8
 8018dcc:	e7c7      	b.n	8018d5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8018dce:	4461      	add	r1, ip
 8018dd0:	b209      	sxth	r1, r1
 8018dd2:	4571      	cmp	r1, lr
 8018dd4:	dc38      	bgt.n	8018e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018dd6:	eba2 020c 	sub.w	r2, r2, ip
 8018dda:	b212      	sxth	r2, r2
 8018ddc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8018de0:	2a00      	cmp	r2, #0
 8018de2:	dcee      	bgt.n	8018dc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018de4:	b00f      	add	sp, #60	; 0x3c
 8018de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dea:	45c8      	cmp	r8, r9
 8018dec:	db2c      	blt.n	8018e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018dee:	88f3      	ldrh	r3, [r6, #6]
 8018df0:	4499      	add	r9, r3
 8018df2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8018df6:	4498      	add	r8, r3
 8018df8:	fa0f f989 	sxth.w	r9, r9
 8018dfc:	fa0f f888 	sxth.w	r8, r8
 8018e00:	45c1      	cmp	r9, r8
 8018e02:	db21      	blt.n	8018e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018e04:	88b3      	ldrh	r3, [r6, #4]
 8018e06:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018e0a:	fa1f f28c 	uxth.w	r2, ip
 8018e0e:	4413      	add	r3, r2
 8018e10:	b29b      	uxth	r3, r3
 8018e12:	45e6      	cmp	lr, ip
 8018e14:	fa1f f88e 	uxth.w	r8, lr
 8018e18:	fa0f f983 	sxth.w	r9, r3
 8018e1c:	db0a      	blt.n	8018e34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8018e1e:	eba3 0308 	sub.w	r3, r3, r8
 8018e22:	1ac9      	subs	r1, r1, r3
 8018e24:	b209      	sxth	r1, r1
 8018e26:	2900      	cmp	r1, #0
 8018e28:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8018e2c:	ddda      	ble.n	8018de4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018e2e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018e32:	e7c6      	b.n	8018dc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018e34:	4441      	add	r1, r8
 8018e36:	b209      	sxth	r1, r1
 8018e38:	4549      	cmp	r1, r9
 8018e3a:	dc05      	bgt.n	8018e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018e3c:	eba2 0208 	sub.w	r2, r2, r8
 8018e40:	b212      	sxth	r2, r2
 8018e42:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8018e46:	e7cb      	b.n	8018de0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8018e48:	4607      	mov	r7, r0
 8018e4a:	e7bb      	b.n	8018dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018e4c:	2d00      	cmp	r5, #0
 8018e4e:	d181      	bne.n	8018d54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8018e50:	2f00      	cmp	r7, #0
 8018e52:	f000 81dd 	beq.w	8019210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018e56:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8018e5a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8018e5e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8018e62:	b2b3      	uxth	r3, r6
 8018e64:	9305      	str	r3, [sp, #20]
 8018e66:	9a05      	ldr	r2, [sp, #20]
 8018e68:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018e6c:	4413      	add	r3, r2
 8018e6e:	b2ba      	uxth	r2, r7
 8018e70:	4492      	add	sl, r2
 8018e72:	b29b      	uxth	r3, r3
 8018e74:	fa1f fa8a 	uxth.w	sl, sl
 8018e78:	fa0f f883 	sxth.w	r8, r3
 8018e7c:	fa0f f98a 	sxth.w	r9, sl
 8018e80:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8018e84:	9b04      	ldr	r3, [sp, #16]
 8018e86:	2b00      	cmp	r3, #0
 8018e88:	d052      	beq.n	8018f30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8018e8a:	9903      	ldr	r1, [sp, #12]
 8018e8c:	4620      	mov	r0, r4
 8018e8e:	f7ff fcb8 	bl	8018802 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018e92:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8018e96:	b1c0      	cbz	r0, 8018eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018e98:	f9b4 e000 	ldrsh.w	lr, [r4]
 8018e9c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8018ea0:	4576      	cmp	r6, lr
 8018ea2:	dc22      	bgt.n	8018eea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018ea4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018ea8:	44f4      	add	ip, lr
 8018eaa:	fa0f fc8c 	sxth.w	ip, ip
 8018eae:	45e0      	cmp	r8, ip
 8018eb0:	db1b      	blt.n	8018eea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018eb2:	428f      	cmp	r7, r1
 8018eb4:	fa1f fc81 	uxth.w	ip, r1
 8018eb8:	88e1      	ldrh	r1, [r4, #6]
 8018eba:	dc0d      	bgt.n	8018ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8018ebc:	ebaa 0c0c 	sub.w	ip, sl, ip
 8018ec0:	eba1 010c 	sub.w	r1, r1, ip
 8018ec4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8018ec8:	80e1      	strh	r1, [r4, #6]
 8018eca:	4628      	mov	r0, r5
 8018ecc:	9904      	ldr	r1, [sp, #16]
 8018ece:	3901      	subs	r1, #1
 8018ed0:	9104      	str	r1, [sp, #16]
 8018ed2:	3c08      	subs	r4, #8
 8018ed4:	4605      	mov	r5, r0
 8018ed6:	e7d3      	b.n	8018e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8018ed8:	4461      	add	r1, ip
 8018eda:	b209      	sxth	r1, r1
 8018edc:	4549      	cmp	r1, r9
 8018ede:	dcf5      	bgt.n	8018ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018ee0:	eba2 0c0c 	sub.w	ip, r2, ip
 8018ee4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8018ee8:	e7ef      	b.n	8018eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018eea:	428f      	cmp	r7, r1
 8018eec:	dcee      	bgt.n	8018ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018eee:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8018ef2:	4461      	add	r1, ip
 8018ef4:	b209      	sxth	r1, r1
 8018ef6:	4589      	cmp	r9, r1
 8018ef8:	dbe8      	blt.n	8018ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018efa:	4576      	cmp	r6, lr
 8018efc:	fa1f fc8e 	uxth.w	ip, lr
 8018f00:	88a1      	ldrh	r1, [r4, #4]
 8018f02:	dc07      	bgt.n	8018f14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8018f04:	eba3 0c0c 	sub.w	ip, r3, ip
 8018f08:	eba1 010c 	sub.w	r1, r1, ip
 8018f0c:	f8a4 8000 	strh.w	r8, [r4]
 8018f10:	80a1      	strh	r1, [r4, #4]
 8018f12:	e7da      	b.n	8018eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018f14:	4461      	add	r1, ip
 8018f16:	b209      	sxth	r1, r1
 8018f18:	4588      	cmp	r8, r1
 8018f1a:	dbd7      	blt.n	8018ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018f1c:	9905      	ldr	r1, [sp, #20]
 8018f1e:	eba1 0c0c 	sub.w	ip, r1, ip
 8018f22:	f8a4 c004 	strh.w	ip, [r4, #4]
 8018f26:	e7d0      	b.n	8018eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018f28:	20013832 	.word	0x20013832
 8018f2c:	20013830 	.word	0x20013830
 8018f30:	2d00      	cmp	r5, #0
 8018f32:	f000 816d 	beq.w	8019210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018f36:	9b06      	ldr	r3, [sp, #24]
 8018f38:	445b      	add	r3, fp
 8018f3a:	461c      	mov	r4, r3
 8018f3c:	9b02      	ldr	r3, [sp, #8]
 8018f3e:	3301      	adds	r3, #1
 8018f40:	f000 8166 	beq.w	8019210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018f44:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8018f48:	4629      	mov	r1, r5
 8018f4a:	9803      	ldr	r0, [sp, #12]
 8018f4c:	f7ff fccc 	bl	80188e8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018f50:	b120      	cbz	r0, 8018f5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8018f52:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018f56:	9801      	ldr	r0, [sp, #4]
 8018f58:	f7ff feb0 	bl	8018cbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018f5c:	9903      	ldr	r1, [sp, #12]
 8018f5e:	4628      	mov	r0, r5
 8018f60:	f7ff fc4f 	bl	8018802 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018f64:	2800      	cmp	r0, #0
 8018f66:	f000 809c 	beq.w	80190a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8018f6a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8018f6e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018f72:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8018f76:	9309      	str	r3, [sp, #36]	; 0x24
 8018f78:	fa1f f189 	uxth.w	r1, r9
 8018f7c:	eb01 0c03 	add.w	ip, r1, r3
 8018f80:	fa1f fa8c 	uxth.w	sl, ip
 8018f84:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8018f88:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8018f8c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8018f90:	b283      	uxth	r3, r0
 8018f92:	eb03 050c 	add.w	r5, r3, ip
 8018f96:	b2ad      	uxth	r5, r5
 8018f98:	9505      	str	r5, [sp, #20]
 8018f9a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8018f9e:	9504      	str	r5, [sp, #16]
 8018fa0:	4548      	cmp	r0, r9
 8018fa2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8018fa6:	f340 8099 	ble.w	80190dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8018faa:	1a5b      	subs	r3, r3, r1
 8018fac:	b29b      	uxth	r3, r3
 8018fae:	4596      	cmp	lr, r2
 8018fb0:	fa0f f08a 	sxth.w	r0, sl
 8018fb4:	b21e      	sxth	r6, r3
 8018fb6:	dd2e      	ble.n	8019016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8018fb8:	9f02      	ldr	r7, [sp, #8]
 8018fba:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8018fbe:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8018fc2:	9f04      	ldr	r7, [sp, #16]
 8018fc4:	1a3f      	subs	r7, r7, r0
 8018fc6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8018fca:	fa1f fe8e 	uxth.w	lr, lr
 8018fce:	b292      	uxth	r2, r2
 8018fd0:	ebae 0102 	sub.w	r1, lr, r2
 8018fd4:	44a6      	add	lr, r4
 8018fd6:	4402      	add	r2, r0
 8018fd8:	b289      	uxth	r1, r1
 8018fda:	fa0f fe8e 	sxth.w	lr, lr
 8018fde:	b212      	sxth	r2, r2
 8018fe0:	b20d      	sxth	r5, r1
 8018fe2:	ebae 0202 	sub.w	r2, lr, r2
 8018fe6:	436f      	muls	r7, r5
 8018fe8:	4372      	muls	r2, r6
 8018fea:	4297      	cmp	r7, r2
 8018fec:	db09      	blt.n	8019002 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8018fee:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8018ff2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8018ff6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018ffa:	449c      	add	ip, r3
 8018ffc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8019000:	e686      	b.n	8018d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019002:	4421      	add	r1, r4
 8019004:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8019008:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801900c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019010:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019014:	e67c      	b.n	8018d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019016:	9f04      	ldr	r7, [sp, #16]
 8019018:	42b8      	cmp	r0, r7
 801901a:	da27      	bge.n	801906c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801901c:	9902      	ldr	r1, [sp, #8]
 801901e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8019022:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8019026:	eb05 010e 	add.w	r1, r5, lr
 801902a:	fa1f f881 	uxth.w	r8, r1
 801902e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8019032:	4411      	add	r1, r2
 8019034:	eba1 0108 	sub.w	r1, r1, r8
 8019038:	b289      	uxth	r1, r1
 801903a:	fa0f f988 	sxth.w	r9, r8
 801903e:	eba2 020e 	sub.w	r2, r2, lr
 8019042:	fa0f f881 	sxth.w	r8, r1
 8019046:	1a3f      	subs	r7, r7, r0
 8019048:	4372      	muls	r2, r6
 801904a:	fb08 f707 	mul.w	r7, r8, r7
 801904e:	42ba      	cmp	r2, r7
 8019050:	dc06      	bgt.n	8019060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8019052:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8019056:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801905a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801905e:	e7ca      	b.n	8018ff6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8019060:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8019064:	4429      	add	r1, r5
 8019066:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801906a:	e651      	b.n	8018d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801906c:	9805      	ldr	r0, [sp, #20]
 801906e:	ebaa 0000 	sub.w	r0, sl, r0
 8019072:	b280      	uxth	r0, r0
 8019074:	2d06      	cmp	r5, #6
 8019076:	fa0f fe80 	sxth.w	lr, r0
 801907a:	d817      	bhi.n	80190ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801907c:	9b04      	ldr	r3, [sp, #16]
 801907e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8019082:	1c6b      	adds	r3, r5, #1
 8019084:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8019088:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801908c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8019090:	9b01      	ldr	r3, [sp, #4]
 8019092:	9801      	ldr	r0, [sp, #4]
 8019094:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019098:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801909c:	805a      	strh	r2, [r3, #2]
 801909e:	809e      	strh	r6, [r3, #4]
 80190a0:	80d9      	strh	r1, [r3, #6]
 80190a2:	9b02      	ldr	r3, [sp, #8]
 80190a4:	3b01      	subs	r3, #1
 80190a6:	9302      	str	r3, [sp, #8]
 80190a8:	3c08      	subs	r4, #8
 80190aa:	e747      	b.n	8018f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80190ac:	9a02      	ldr	r2, [sp, #8]
 80190ae:	45b6      	cmp	lr, r6
 80190b0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80190b4:	db0d      	blt.n	80190d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80190b6:	449c      	add	ip, r3
 80190b8:	fa1f fc8c 	uxth.w	ip, ip
 80190bc:	445a      	add	r2, fp
 80190be:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80190c2:	448c      	add	ip, r1
 80190c4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80190c8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80190cc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80190d0:	e61e      	b.n	8018d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80190d2:	445a      	add	r2, fp
 80190d4:	4484      	add	ip, r0
 80190d6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80190da:	e78f      	b.n	8018ffc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80190dc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80190e0:	fa1f f18e 	uxth.w	r1, lr
 80190e4:	eb01 0806 	add.w	r8, r1, r6
 80190e8:	b293      	uxth	r3, r2
 80190ea:	fa1f f888 	uxth.w	r8, r8
 80190ee:	9306      	str	r3, [sp, #24]
 80190f0:	fa0f f388 	sxth.w	r3, r8
 80190f4:	9307      	str	r3, [sp, #28]
 80190f6:	9f06      	ldr	r7, [sp, #24]
 80190f8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80190fc:	443b      	add	r3, r7
 80190fe:	b29b      	uxth	r3, r3
 8019100:	4596      	cmp	lr, r2
 8019102:	9308      	str	r3, [sp, #32]
 8019104:	da24      	bge.n	8019150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8019106:	9905      	ldr	r1, [sp, #20]
 8019108:	eba3 0308 	sub.w	r3, r3, r8
 801910c:	ebaa 0401 	sub.w	r4, sl, r1
 8019110:	b2a4      	uxth	r4, r4
 8019112:	b29b      	uxth	r3, r3
 8019114:	b225      	sxth	r5, r4
 8019116:	b219      	sxth	r1, r3
 8019118:	eba2 020e 	sub.w	r2, r2, lr
 801911c:	eba9 0000 	sub.w	r0, r9, r0
 8019120:	436a      	muls	r2, r5
 8019122:	4348      	muls	r0, r1
 8019124:	4282      	cmp	r2, r0
 8019126:	9a02      	ldr	r2, [sp, #8]
 8019128:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801912c:	445a      	add	r2, fp
 801912e:	dc06      	bgt.n	801913e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8019130:	9b07      	ldr	r3, [sp, #28]
 8019132:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8019136:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801913a:	44a4      	add	ip, r4
 801913c:	e75e      	b.n	8018ffc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801913e:	9904      	ldr	r1, [sp, #16]
 8019140:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8019144:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8019148:	4433      	add	r3, r6
 801914a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801914e:	e5df      	b.n	8018d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019150:	9f06      	ldr	r7, [sp, #24]
 8019152:	9b04      	ldr	r3, [sp, #16]
 8019154:	1bc9      	subs	r1, r1, r7
 8019156:	fa0f f78a 	sxth.w	r7, sl
 801915a:	b289      	uxth	r1, r1
 801915c:	429f      	cmp	r7, r3
 801915e:	fa0f fe81 	sxth.w	lr, r1
 8019162:	dd23      	ble.n	80191ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8019164:	9a05      	ldr	r2, [sp, #20]
 8019166:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801916a:	9d07      	ldr	r5, [sp, #28]
 801916c:	ebaa 0202 	sub.w	r2, sl, r2
 8019170:	b292      	uxth	r2, r2
 8019172:	eba5 0a03 	sub.w	sl, r5, r3
 8019176:	b214      	sxth	r4, r2
 8019178:	eba9 0000 	sub.w	r0, r9, r0
 801917c:	9b02      	ldr	r3, [sp, #8]
 801917e:	fb0e f000 	mul.w	r0, lr, r0
 8019182:	fb04 fa0a 	mul.w	sl, r4, sl
 8019186:	00db      	lsls	r3, r3, #3
 8019188:	4550      	cmp	r0, sl
 801918a:	445b      	add	r3, fp
 801918c:	db03      	blt.n	8019196 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801918e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8019192:	4494      	add	ip, r2
 8019194:	e732      	b.n	8018ffc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019196:	9a04      	ldr	r2, [sp, #16]
 8019198:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801919c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80191a0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80191a4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80191a8:	4431      	add	r1, r6
 80191aa:	e75c      	b.n	8019066 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80191ac:	9b08      	ldr	r3, [sp, #32]
 80191ae:	eba3 0308 	sub.w	r3, r3, r8
 80191b2:	b29b      	uxth	r3, r3
 80191b4:	2d06      	cmp	r5, #6
 80191b6:	b218      	sxth	r0, r3
 80191b8:	d813      	bhi.n	80191e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80191ba:	9b07      	ldr	r3, [sp, #28]
 80191bc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80191c0:	1c6b      	adds	r3, r5, #1
 80191c2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80191c6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80191ca:	9b01      	ldr	r3, [sp, #4]
 80191cc:	9901      	ldr	r1, [sp, #4]
 80191ce:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80191d2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80191d6:	805a      	strh	r2, [r3, #2]
 80191d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80191da:	809a      	strh	r2, [r3, #4]
 80191dc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80191e0:	e75f      	b.n	80190a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80191e2:	9c02      	ldr	r4, [sp, #8]
 80191e4:	4570      	cmp	r0, lr
 80191e6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80191ea:	db0d      	blt.n	8019208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80191ec:	4431      	add	r1, r6
 80191ee:	9b06      	ldr	r3, [sp, #24]
 80191f0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80191f4:	b289      	uxth	r1, r1
 80191f6:	445c      	add	r4, fp
 80191f8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80191fc:	4419      	add	r1, r3
 80191fe:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8019202:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8019206:	e583      	b.n	8018d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019208:	445c      	add	r4, fp
 801920a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801920e:	e79b      	b.n	8019148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8019210:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8019214:	1e65      	subs	r5, r4, #1
 8019216:	b2ad      	uxth	r5, r5
 8019218:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801921c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8019220:	42b5      	cmp	r5, r6
 8019222:	d044      	beq.n	80192ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8019224:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8019228:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801922c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019230:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8019234:	4282      	cmp	r2, r0
 8019236:	d11f      	bne.n	8019278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019238:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801923c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019240:	459c      	cmp	ip, r3
 8019242:	d119      	bne.n	8019278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019244:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8019248:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801924c:	19d8      	adds	r0, r3, r7
 801924e:	b200      	sxth	r0, r0
 8019250:	4288      	cmp	r0, r1
 8019252:	d109      	bne.n	8019268 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8019254:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8019258:	4413      	add	r3, r2
 801925a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801925e:	4629      	mov	r1, r5
 8019260:	9801      	ldr	r0, [sp, #4]
 8019262:	f7ff fd2b 	bl	8018cbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019266:	e003      	b.n	8019270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019268:	4411      	add	r1, r2
 801926a:	b209      	sxth	r1, r1
 801926c:	42b9      	cmp	r1, r7
 801926e:	d0f3      	beq.n	8019258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8019270:	3d01      	subs	r5, #1
 8019272:	b2ad      	uxth	r5, r5
 8019274:	3c08      	subs	r4, #8
 8019276:	e7d3      	b.n	8019220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8019278:	42b9      	cmp	r1, r7
 801927a:	d1f9      	bne.n	8019270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801927c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8019280:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019284:	4299      	cmp	r1, r3
 8019286:	d1f3      	bne.n	8019270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019288:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801928c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8019290:	181f      	adds	r7, r3, r0
 8019292:	b23f      	sxth	r7, r7
 8019294:	42ba      	cmp	r2, r7
 8019296:	d105      	bne.n	80192a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8019298:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801929c:	440b      	add	r3, r1
 801929e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80192a2:	e7dc      	b.n	801925e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80192a4:	440a      	add	r2, r1
 80192a6:	b212      	sxth	r2, r2
 80192a8:	4290      	cmp	r0, r2
 80192aa:	d1e1      	bne.n	8019270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80192ac:	e7f6      	b.n	801929c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80192ae:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80192b2:	2e07      	cmp	r6, #7
 80192b4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80192b8:	d812      	bhi.n	80192e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80192ba:	1c75      	adds	r5, r6, #1
 80192bc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80192c0:	9d01      	ldr	r5, [sp, #4]
 80192c2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80192c6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80192ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80192ce:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80192d2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80192d6:	442c      	add	r4, r5
 80192d8:	8061      	strh	r1, [r4, #2]
 80192da:	80a2      	strh	r2, [r4, #4]
 80192dc:	80e3      	strh	r3, [r4, #6]
 80192de:	e581      	b.n	8018de4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80192e0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80192e4:	3e01      	subs	r6, #1
 80192e6:	445c      	add	r4, fp
 80192e8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80192ec:	f04f 37ff 	mov.w	r7, #4294967295
 80192f0:	2500      	movs	r5, #0
 80192f2:	9305      	str	r3, [sp, #20]
 80192f4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80192f8:	9302      	str	r3, [sp, #8]
 80192fa:	1e72      	subs	r2, r6, #1
 80192fc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019300:	9304      	str	r3, [sp, #16]
 8019302:	4691      	mov	r9, r2
 8019304:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8019308:	f1b9 3fff 	cmp.w	r9, #4294967295
 801930c:	bf14      	ite	ne
 801930e:	9905      	ldrne	r1, [sp, #20]
 8019310:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8019314:	6818      	ldr	r0, [r3, #0]
 8019316:	9207      	str	r2, [sp, #28]
 8019318:	bf18      	it	ne
 801931a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801931e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019322:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8019326:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801932a:	9306      	str	r3, [sp, #24]
 801932c:	fb18 f801 	smulbb	r8, r8, r1
 8019330:	6859      	ldr	r1, [r3, #4]
 8019332:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019336:	4671      	mov	r1, lr
 8019338:	a80c      	add	r0, sp, #48	; 0x30
 801933a:	f7ff fafb 	bl	8018934 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801933e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8019342:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8019346:	9b04      	ldr	r3, [sp, #16]
 8019348:	9a02      	ldr	r2, [sp, #8]
 801934a:	fb10 f001 	smulbb	r0, r0, r1
 801934e:	fb02 8803 	mla	r8, r2, r3, r8
 8019352:	eba0 0108 	sub.w	r1, r0, r8
 8019356:	f04f 0c08 	mov.w	ip, #8
 801935a:	fb90 f0fc 	sdiv	r0, r0, ip
 801935e:	4288      	cmp	r0, r1
 8019360:	dc20      	bgt.n	80193a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8019362:	4551      	cmp	r1, sl
 8019364:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8019368:	da03      	bge.n	8019372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801936a:	b1d9      	cbz	r1, 80193a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801936c:	468a      	mov	sl, r1
 801936e:	464f      	mov	r7, r9
 8019370:	4635      	mov	r5, r6
 8019372:	f109 39ff 	add.w	r9, r9, #4294967295
 8019376:	f119 0f02 	cmn.w	r9, #2
 801937a:	d1c5      	bne.n	8019308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801937c:	4616      	mov	r6, r2
 801937e:	3201      	adds	r2, #1
 8019380:	f1a4 0408 	sub.w	r4, r4, #8
 8019384:	d1b6      	bne.n	80192f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8019386:	9b01      	ldr	r3, [sp, #4]
 8019388:	b2ac      	uxth	r4, r5
 801938a:	00ed      	lsls	r5, r5, #3
 801938c:	1958      	adds	r0, r3, r5
 801938e:	1c7b      	adds	r3, r7, #1
 8019390:	d10b      	bne.n	80193aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8019392:	4601      	mov	r1, r0
 8019394:	9803      	ldr	r0, [sp, #12]
 8019396:	f7ff facd 	bl	8018934 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801939a:	4621      	mov	r1, r4
 801939c:	9801      	ldr	r0, [sp, #4]
 801939e:	f7ff fc8d 	bl	8018cbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80193a2:	e4b5      	b.n	8018d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80193a4:	464f      	mov	r7, r9
 80193a6:	4635      	mov	r5, r6
 80193a8:	e7ed      	b.n	8019386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80193aa:	9b01      	ldr	r3, [sp, #4]
 80193ac:	00ff      	lsls	r7, r7, #3
 80193ae:	19d9      	adds	r1, r3, r7
 80193b0:	f7ff fac0 	bl	8018934 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80193b4:	9b03      	ldr	r3, [sp, #12]
 80193b6:	cb03      	ldmia	r3!, {r0, r1}
 80193b8:	445f      	add	r7, fp
 80193ba:	445d      	add	r5, fp
 80193bc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80193c0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80193c4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80193c8:	9b03      	ldr	r3, [sp, #12]
 80193ca:	6869      	ldr	r1, [r5, #4]
 80193cc:	c303      	stmia	r3!, {r0, r1}
 80193ce:	e7e4      	b.n	801939a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080193d0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80193d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193d4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80193d8:	b09b      	sub	sp, #108	; 0x6c
 80193da:	4604      	mov	r4, r0
 80193dc:	4630      	mov	r0, r6
 80193de:	f7f9 fbe0 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193e2:	4605      	mov	r5, r0
 80193e4:	b948      	cbnz	r0, 80193fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80193e6:	6823      	ldr	r3, [r4, #0]
 80193e8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80193ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80193ee:	4620      	mov	r0, r4
 80193f0:	4798      	blx	r3
 80193f2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80193f6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80193fa:	4bc6      	ldr	r3, [pc, #792]	; (8019714 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80193fc:	681b      	ldr	r3, [r3, #0]
 80193fe:	2b00      	cmp	r3, #0
 8019400:	d03f      	beq.n	8019482 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019402:	4dc5      	ldr	r5, [pc, #788]	; (8019718 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8019404:	4628      	mov	r0, r5
 8019406:	f7f9 fbcc 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801940a:	4606      	mov	r6, r0
 801940c:	2800      	cmp	r0, #0
 801940e:	d138      	bne.n	8019482 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019410:	4628      	mov	r0, r5
 8019412:	f7ff f907 	bl	8018624 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019416:	6823      	ldr	r3, [r4, #0]
 8019418:	6829      	ldr	r1, [r5, #0]
 801941a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801941c:	686a      	ldr	r2, [r5, #4]
 801941e:	4620      	mov	r0, r4
 8019420:	4798      	blx	r3
 8019422:	802e      	strh	r6, [r5, #0]
 8019424:	806e      	strh	r6, [r5, #2]
 8019426:	80ae      	strh	r6, [r5, #4]
 8019428:	80ee      	strh	r6, [r5, #6]
 801942a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801942e:	4dbb      	ldr	r5, [pc, #748]	; (801971c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019430:	4640      	mov	r0, r8
 8019432:	f7ff fbeb 	bl	8018c0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019436:	882e      	ldrh	r6, [r5, #0]
 8019438:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801943c:	4633      	mov	r3, r6
 801943e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8019442:	42bb      	cmp	r3, r7
 8019444:	d224      	bcs.n	8019490 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019446:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801944a:	2907      	cmp	r1, #7
 801944c:	d816      	bhi.n	801947c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801944e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8019452:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8019456:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801945a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801945e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8019462:	1c4a      	adds	r2, r1, #1
 8019464:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8019468:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801946c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8019470:	f8a2 a002 	strh.w	sl, [r2, #2]
 8019474:	f8a2 e004 	strh.w	lr, [r2, #4]
 8019478:	f8a2 c006 	strh.w	ip, [r2, #6]
 801947c:	3301      	adds	r3, #1
 801947e:	b29b      	uxth	r3, r3
 8019480:	e7df      	b.n	8019442 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8019482:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019486:	2b00      	cmp	r3, #0
 8019488:	d1cf      	bne.n	801942a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801948a:	b01b      	add	sp, #108	; 0x6c
 801948c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019490:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8019494:	42b3      	cmp	r3, r6
 8019496:	d90c      	bls.n	80194b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8019498:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801949c:	6822      	ldr	r2, [r4, #0]
 801949e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80194a2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80194a4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80194a8:	4620      	mov	r0, r4
 80194aa:	3601      	adds	r6, #1
 80194ac:	47b8      	blx	r7
 80194ae:	b2b6      	uxth	r6, r6
 80194b0:	e7ee      	b.n	8019490 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80194b2:	4a9b      	ldr	r2, [pc, #620]	; (8019720 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80194b4:	6813      	ldr	r3, [r2, #0]
 80194b6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80194ba:	2b01      	cmp	r3, #1
 80194bc:	4691      	mov	r9, r2
 80194be:	f040 80e2 	bne.w	8019686 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80194c2:	8829      	ldrh	r1, [r5, #0]
 80194c4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80194c8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80194cc:	33ae      	adds	r3, #174	; 0xae
 80194ce:	2600      	movs	r6, #0
 80194d0:	428f      	cmp	r7, r1
 80194d2:	f103 0308 	add.w	r3, r3, #8
 80194d6:	dd0a      	ble.n	80194ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80194d8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80194dc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80194e0:	4402      	add	r2, r0
 80194e2:	b212      	sxth	r2, r2
 80194e4:	4296      	cmp	r6, r2
 80194e6:	bfb8      	it	lt
 80194e8:	4616      	movlt	r6, r2
 80194ea:	3101      	adds	r1, #1
 80194ec:	e7f0      	b.n	80194d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80194ee:	4b8d      	ldr	r3, [pc, #564]	; (8019724 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80194f0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8019720 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80194f4:	881b      	ldrh	r3, [r3, #0]
 80194f6:	2b0f      	cmp	r3, #15
 80194f8:	bf88      	it	hi
 80194fa:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80194fe:	f04f 0300 	mov.w	r3, #0
 8019502:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8019506:	bf98      	it	ls
 8019508:	f04f 0b01 	movls.w	fp, #1
 801950c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8019510:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8019514:	4b82      	ldr	r3, [pc, #520]	; (8019720 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019516:	4438      	add	r0, r7
 8019518:	b207      	sxth	r7, r0
 801951a:	6818      	ldr	r0, [r3, #0]
 801951c:	42b7      	cmp	r7, r6
 801951e:	6803      	ldr	r3, [r0, #0]
 8019520:	f280 8083 	bge.w	801962a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8019524:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019528:	4798      	blx	r3
 801952a:	eb07 030b 	add.w	r3, r7, fp
 801952e:	4298      	cmp	r0, r3
 8019530:	da07      	bge.n	8019542 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019532:	42b0      	cmp	r0, r6
 8019534:	da05      	bge.n	8019542 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019536:	4287      	cmp	r7, r0
 8019538:	dd6c      	ble.n	8019614 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801953a:	2f00      	cmp	r7, #0
 801953c:	dd6a      	ble.n	8019614 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801953e:	4630      	mov	r0, r6
 8019540:	e004      	b.n	801954c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8019542:	4287      	cmp	r7, r0
 8019544:	dcfb      	bgt.n	801953e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8019546:	42b0      	cmp	r0, r6
 8019548:	bfa8      	it	ge
 801954a:	4630      	movge	r0, r6
 801954c:	4b76      	ldr	r3, [pc, #472]	; (8019728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801954e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8019552:	1bc0      	subs	r0, r0, r7
 8019554:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019558:	882f      	ldrh	r7, [r5, #0]
 801955a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801955e:	2200      	movs	r2, #0
 8019560:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019564:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019568:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801956c:	42bb      	cmp	r3, r7
 801956e:	d9cd      	bls.n	801950c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019570:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8019574:	ab07      	add	r3, sp, #28
 8019576:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801957a:	6851      	ldr	r1, [r2, #4]
 801957c:	c303      	stmia	r3!, {r0, r1}
 801957e:	a905      	add	r1, sp, #20
 8019580:	a807      	add	r0, sp, #28
 8019582:	f7ff f93e 	bl	8018802 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019586:	2800      	cmp	r0, #0
 8019588:	d04c      	beq.n	8019624 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801958a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801958e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8019592:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8019596:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801959a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801959e:	9302      	str	r3, [sp, #8]
 80195a0:	4686      	mov	lr, r0
 80195a2:	4290      	cmp	r0, r2
 80195a4:	4450      	add	r0, sl
 80195a6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80195aa:	bfb8      	it	lt
 80195ac:	4696      	movlt	lr, r2
 80195ae:	4452      	add	r2, sl
 80195b0:	4299      	cmp	r1, r3
 80195b2:	b280      	uxth	r0, r0
 80195b4:	b292      	uxth	r2, r2
 80195b6:	468c      	mov	ip, r1
 80195b8:	fa0f fa82 	sxth.w	sl, r2
 80195bc:	bfb8      	it	lt
 80195be:	469c      	movlt	ip, r3
 80195c0:	b203      	sxth	r3, r0
 80195c2:	4553      	cmp	r3, sl
 80195c4:	bfb8      	it	lt
 80195c6:	4602      	movlt	r2, r0
 80195c8:	eba2 020e 	sub.w	r2, r2, lr
 80195cc:	f8ad 2020 	strh.w	r2, [sp, #32]
 80195d0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80195d4:	9b02      	ldr	r3, [sp, #8]
 80195d6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80195da:	4411      	add	r1, r2
 80195dc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80195e0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80195e4:	4413      	add	r3, r2
 80195e6:	b289      	uxth	r1, r1
 80195e8:	b29b      	uxth	r3, r3
 80195ea:	b208      	sxth	r0, r1
 80195ec:	b21a      	sxth	r2, r3
 80195ee:	4290      	cmp	r0, r2
 80195f0:	bfb8      	it	lt
 80195f2:	460b      	movlt	r3, r1
 80195f4:	eba3 030c 	sub.w	r3, r3, ip
 80195f8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80195fc:	a807      	add	r0, sp, #28
 80195fe:	f7f9 fad0 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019602:	b920      	cbnz	r0, 801960e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8019604:	6823      	ldr	r3, [r4, #0]
 8019606:	a907      	add	r1, sp, #28
 8019608:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801960a:	4620      	mov	r0, r4
 801960c:	4798      	blx	r3
 801960e:	3701      	adds	r7, #1
 8019610:	b2bf      	uxth	r7, r7
 8019612:	e7a9      	b.n	8019568 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8019614:	f8d9 0000 	ldr.w	r0, [r9]
 8019618:	6803      	ldr	r3, [r0, #0]
 801961a:	2101      	movs	r1, #1
 801961c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019620:	4798      	blx	r3
 8019622:	e773      	b.n	801950c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019624:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019628:	e7e8      	b.n	80195fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801962a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801962c:	4798      	blx	r3
 801962e:	4b3f      	ldr	r3, [pc, #252]	; (801972c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019630:	781b      	ldrb	r3, [r3, #0]
 8019632:	2b00      	cmp	r3, #0
 8019634:	f43f af29 	beq.w	801948a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019638:	2300      	movs	r3, #0
 801963a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801963e:	882b      	ldrh	r3, [r5, #0]
 8019640:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019644:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8019648:	42ab      	cmp	r3, r5
 801964a:	f4bf af1e 	bcs.w	801948a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801964e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8019652:	2907      	cmp	r1, #7
 8019654:	d814      	bhi.n	8019680 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8019656:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801965a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801965e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8019662:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8019666:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801966a:	1c4a      	adds	r2, r1, #1
 801966c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8019670:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8019674:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8019678:	f8a2 c002 	strh.w	ip, [r2, #2]
 801967c:	8097      	strh	r7, [r2, #4]
 801967e:	80d6      	strh	r6, [r2, #6]
 8019680:	3301      	adds	r3, #1
 8019682:	b29b      	uxth	r3, r3
 8019684:	e7e0      	b.n	8019648 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8019686:	2b02      	cmp	r3, #2
 8019688:	f040 8133 	bne.w	80198f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801968c:	4b28      	ldr	r3, [pc, #160]	; (8019730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801968e:	781b      	ldrb	r3, [r3, #0]
 8019690:	2b01      	cmp	r3, #1
 8019692:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8019696:	f000 8098 	beq.w	80197ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801969a:	882a      	ldrh	r2, [r5, #0]
 801969c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80196a0:	3201      	adds	r2, #1
 80196a2:	b292      	uxth	r2, r2
 80196a4:	2900      	cmp	r1, #0
 80196a6:	d0c2      	beq.n	801962e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80196a8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80196ac:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80196b0:	441e      	add	r6, r3
 80196b2:	b236      	sxth	r6, r6
 80196b4:	4694      	mov	ip, r2
 80196b6:	f04f 0900 	mov.w	r9, #0
 80196ba:	fa1f f38c 	uxth.w	r3, ip
 80196be:	4299      	cmp	r1, r3
 80196c0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80196c4:	f240 80bf 	bls.w	8019846 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80196c8:	4427      	add	r7, r4
 80196ca:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80196ce:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80196d2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80196d6:	4283      	cmp	r3, r0
 80196d8:	f340 80a1 	ble.w	801981e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80196dc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80196e0:	4406      	add	r6, r0
 80196e2:	b236      	sxth	r6, r6
 80196e4:	429e      	cmp	r6, r3
 80196e6:	bfa8      	it	ge
 80196e8:	461e      	movge	r6, r3
 80196ea:	46e1      	mov	r9, ip
 80196ec:	f10c 0c01 	add.w	ip, ip, #1
 80196f0:	e7e3      	b.n	80196ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80196f2:	d10a      	bne.n	801970a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80196f4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80196f8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80196fc:	4562      	cmp	r2, ip
 80196fe:	bfb8      	it	lt
 8019700:	4662      	movlt	r2, ip
 8019702:	4288      	cmp	r0, r1
 8019704:	bfb8      	it	lt
 8019706:	461f      	movlt	r7, r3
 8019708:	e087      	b.n	801981a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801970a:	428a      	cmp	r2, r1
 801970c:	bfb8      	it	lt
 801970e:	460a      	movlt	r2, r1
 8019710:	e083      	b.n	801981a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8019712:	bf00      	nop
 8019714:	2001387c 	.word	0x2001387c
 8019718:	20013888 	.word	0x20013888
 801971c:	2000008c 	.word	0x2000008c
 8019720:	2001383c 	.word	0x2001383c
 8019724:	20013832 	.word	0x20013832
 8019728:	20013830 	.word	0x20013830
 801972c:	2001383a 	.word	0x2001383a
 8019730:	20013834 	.word	0x20013834
 8019734:	19a1      	adds	r1, r4, r6
 8019736:	ab07      	add	r3, sp, #28
 8019738:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801973c:	6849      	ldr	r1, [r1, #4]
 801973e:	c303      	stmia	r3!, {r0, r1}
 8019740:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019744:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019748:	2b13      	cmp	r3, #19
 801974a:	bfd8      	it	le
 801974c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019750:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019754:	440b      	add	r3, r1
 8019756:	1a9b      	subs	r3, r3, r2
 8019758:	a807      	add	r0, sp, #28
 801975a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801975e:	f7fe ff7b 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019762:	a807      	add	r0, sp, #28
 8019764:	f7f9 fa1d 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019768:	bb78      	cbnz	r0, 80197ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801976a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801976e:	f8d9 0000 	ldr.w	r0, [r9]
 8019772:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8019776:	f8d0 e000 	ldr.w	lr, [r0]
 801977a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801977e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019782:	f1bc 0f14 	cmp.w	ip, #20
 8019786:	bfa8      	it	ge
 8019788:	f04f 0c14 	movge.w	ip, #20
 801978c:	fa1f fc8c 	uxth.w	ip, ip
 8019790:	f8cd c000 	str.w	ip, [sp]
 8019794:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8019798:	47d8      	blx	fp
 801979a:	4683      	mov	fp, r0
 801979c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80197a0:	a807      	add	r0, sp, #28
 80197a2:	f7fe ff3f 	bl	8018624 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80197a6:	6823      	ldr	r3, [r4, #0]
 80197a8:	4426      	add	r6, r4
 80197aa:	4620      	mov	r0, r4
 80197ac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80197ae:	a907      	add	r1, sp, #28
 80197b0:	4798      	blx	r3
 80197b2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80197b6:	eba0 000b 	sub.w	r0, r0, fp
 80197ba:	b200      	sxth	r0, r0
 80197bc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80197c0:	b918      	cbnz	r0, 80197ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80197c2:	b2b9      	uxth	r1, r7
 80197c4:	4650      	mov	r0, sl
 80197c6:	f7ff fa79 	bl	8018cbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80197ca:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80197ce:	f1bb 0f00 	cmp.w	fp, #0
 80197d2:	f43f af2c 	beq.w	801962e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80197d6:	882b      	ldrh	r3, [r5, #0]
 80197d8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80197dc:	3301      	adds	r3, #1
 80197de:	b29b      	uxth	r3, r3
 80197e0:	2700      	movs	r7, #0
 80197e2:	b299      	uxth	r1, r3
 80197e4:	458b      	cmp	fp, r1
 80197e6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80197ea:	d9a3      	bls.n	8019734 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80197ec:	4426      	add	r6, r4
 80197ee:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80197f2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80197f6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80197fa:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80197fe:	4408      	add	r0, r1
 8019800:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8019804:	4461      	add	r1, ip
 8019806:	b200      	sxth	r0, r0
 8019808:	b209      	sxth	r1, r1
 801980a:	4288      	cmp	r0, r1
 801980c:	f6bf af71 	bge.w	80196f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8019810:	4584      	cmp	ip, r0
 8019812:	4662      	mov	r2, ip
 8019814:	461f      	mov	r7, r3
 8019816:	bfb8      	it	lt
 8019818:	4602      	movlt	r2, r0
 801981a:	3301      	adds	r3, #1
 801981c:	e7e1      	b.n	80197e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801981e:	d10e      	bne.n	801983e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8019820:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8019824:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8019828:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801982c:	4473      	add	r3, lr
 801982e:	b21b      	sxth	r3, r3
 8019830:	429e      	cmp	r6, r3
 8019832:	bfa8      	it	ge
 8019834:	461e      	movge	r6, r3
 8019836:	4287      	cmp	r7, r0
 8019838:	bfb8      	it	lt
 801983a:	46e1      	movlt	r9, ip
 801983c:	e756      	b.n	80196ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801983e:	4286      	cmp	r6, r0
 8019840:	bfa8      	it	ge
 8019842:	4606      	movge	r6, r0
 8019844:	e752      	b.n	80196ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8019846:	eb0a 0007 	add.w	r0, sl, r7
 801984a:	4427      	add	r7, r4
 801984c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8019850:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8019854:	f1bb 0f13 	cmp.w	fp, #19
 8019858:	bfde      	ittt	le
 801985a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801985e:	445e      	addle	r6, fp
 8019860:	b236      	sxthle	r6, r6
 8019862:	f7f9 f99e 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019866:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801986a:	2800      	cmp	r0, #0
 801986c:	f47f af1a 	bne.w	80196a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8019870:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8019874:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019878:	482a      	ldr	r0, [pc, #168]	; (8019924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801987a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801987e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8019882:	6800      	ldr	r0, [r0, #0]
 8019884:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019888:	1ab6      	subs	r6, r6, r2
 801988a:	2e14      	cmp	r6, #20
 801988c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8019890:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019894:	bfa8      	it	ge
 8019896:	2614      	movge	r6, #20
 8019898:	f8d0 c000 	ldr.w	ip, [r0]
 801989c:	b2b6      	uxth	r6, r6
 801989e:	fa1f fb8b 	uxth.w	fp, fp
 80198a2:	455e      	cmp	r6, fp
 80198a4:	bf94      	ite	ls
 80198a6:	9600      	strls	r6, [sp, #0]
 80198a8:	f8cd b000 	strhi.w	fp, [sp]
 80198ac:	b292      	uxth	r2, r2
 80198ae:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80198b2:	b29b      	uxth	r3, r3
 80198b4:	b289      	uxth	r1, r1
 80198b6:	47b0      	blx	r6
 80198b8:	6823      	ldr	r3, [r4, #0]
 80198ba:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80198be:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80198c0:	a907      	add	r1, sp, #28
 80198c2:	4620      	mov	r0, r4
 80198c4:	4798      	blx	r3
 80198c6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80198ca:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80198ce:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80198d2:	1a5b      	subs	r3, r3, r1
 80198d4:	440a      	add	r2, r1
 80198d6:	b21b      	sxth	r3, r3
 80198d8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80198dc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80198e0:	2b00      	cmp	r3, #0
 80198e2:	f47f aeda 	bne.w	801969a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80198e6:	fa1f f189 	uxth.w	r1, r9
 80198ea:	4650      	mov	r0, sl
 80198ec:	f7ff f9e6 	bl	8018cbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80198f0:	e6d3      	b.n	801969a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80198f2:	882e      	ldrh	r6, [r5, #0]
 80198f4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80198f8:	42b3      	cmp	r3, r6
 80198fa:	f67f ae98 	bls.w	801962e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80198fe:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8019902:	ab07      	add	r3, sp, #28
 8019904:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8019908:	6851      	ldr	r1, [r2, #4]
 801990a:	c303      	stmia	r3!, {r0, r1}
 801990c:	a807      	add	r0, sp, #28
 801990e:	f7f9 f948 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019912:	b920      	cbnz	r0, 801991e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8019914:	6823      	ldr	r3, [r4, #0]
 8019916:	a907      	add	r1, sp, #28
 8019918:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801991a:	4620      	mov	r0, r4
 801991c:	4798      	blx	r3
 801991e:	3601      	adds	r6, #1
 8019920:	b2b6      	uxth	r6, r6
 8019922:	e7e7      	b.n	80198f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8019924:	2001383c 	.word	0x2001383c

08019928 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8019928:	4b03      	ldr	r3, [pc, #12]	; (8019938 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801992a:	2200      	movs	r2, #0
 801992c:	801a      	strh	r2, [r3, #0]
 801992e:	805a      	strh	r2, [r3, #2]
 8019930:	809a      	strh	r2, [r3, #4]
 8019932:	80da      	strh	r2, [r3, #6]
 8019934:	4770      	bx	lr
 8019936:	bf00      	nop
 8019938:	20013888 	.word	0x20013888

0801993c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801993c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019940:	4606      	mov	r6, r0
 8019942:	b09d      	sub	sp, #116	; 0x74
 8019944:	a803      	add	r0, sp, #12
 8019946:	4614      	mov	r4, r2
 8019948:	468a      	mov	sl, r1
 801994a:	461d      	mov	r5, r3
 801994c:	f000 ff08 	bl	801a760 <_ZN8touchgfx12TextProviderC1Ev>
 8019950:	6833      	ldr	r3, [r6, #0]
 8019952:	4630      	mov	r0, r6
 8019954:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019956:	4798      	blx	r3
 8019958:	6833      	ldr	r3, [r6, #0]
 801995a:	4607      	mov	r7, r0
 801995c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801995e:	4630      	mov	r0, r6
 8019960:	4798      	blx	r3
 8019962:	462a      	mov	r2, r5
 8019964:	9000      	str	r0, [sp, #0]
 8019966:	4621      	mov	r1, r4
 8019968:	463b      	mov	r3, r7
 801996a:	a803      	add	r0, sp, #12
 801996c:	f000 ff53 	bl	801a816 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019970:	2500      	movs	r5, #0
 8019972:	462c      	mov	r4, r5
 8019974:	46a9      	mov	r9, r5
 8019976:	46a8      	mov	r8, r5
 8019978:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801997c:	2300      	movs	r3, #0
 801997e:	9302      	str	r3, [sp, #8]
 8019980:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8019984:	429c      	cmp	r4, r3
 8019986:	d002      	beq.n	801998e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8019988:	455c      	cmp	r4, fp
 801998a:	bf18      	it	ne
 801998c:	4625      	movne	r5, r4
 801998e:	ab02      	add	r3, sp, #8
 8019990:	4632      	mov	r2, r6
 8019992:	4651      	mov	r1, sl
 8019994:	a803      	add	r0, sp, #12
 8019996:	f001 fa41 	bl	801ae1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801999a:	4604      	mov	r4, r0
 801999c:	b108      	cbz	r0, 80199a2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801999e:	280a      	cmp	r0, #10
 80199a0:	d10a      	bne.n	80199b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80199a2:	45c1      	cmp	r9, r8
 80199a4:	bf38      	it	cc
 80199a6:	46c1      	movcc	r9, r8
 80199a8:	f04f 0800 	mov.w	r8, #0
 80199ac:	2c00      	cmp	r4, #0
 80199ae:	d1e5      	bne.n	801997c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80199b0:	4648      	mov	r0, r9
 80199b2:	b01d      	add	sp, #116	; 0x74
 80199b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199b8:	9a02      	ldr	r2, [sp, #8]
 80199ba:	2a00      	cmp	r2, #0
 80199bc:	d0de      	beq.n	801997c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80199be:	7b57      	ldrb	r7, [r2, #13]
 80199c0:	6833      	ldr	r3, [r6, #0]
 80199c2:	8894      	ldrh	r4, [r2, #4]
 80199c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80199c6:	007f      	lsls	r7, r7, #1
 80199c8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80199cc:	7a97      	ldrb	r7, [r2, #10]
 80199ce:	4629      	mov	r1, r5
 80199d0:	4307      	orrs	r7, r0
 80199d2:	4630      	mov	r0, r6
 80199d4:	4798      	blx	r3
 80199d6:	4438      	add	r0, r7
 80199d8:	4480      	add	r8, r0
 80199da:	fa1f f888 	uxth.w	r8, r8
 80199de:	e7e5      	b.n	80199ac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080199e0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80199e0:	b508      	push	{r3, lr}
 80199e2:	6803      	ldr	r3, [r0, #0]
 80199e4:	68db      	ldr	r3, [r3, #12]
 80199e6:	4798      	blx	r3
 80199e8:	b128      	cbz	r0, 80199f6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80199ea:	7b43      	ldrb	r3, [r0, #13]
 80199ec:	7a80      	ldrb	r0, [r0, #10]
 80199ee:	005b      	lsls	r3, r3, #1
 80199f0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80199f4:	4318      	orrs	r0, r3
 80199f6:	bd08      	pop	{r3, pc}

080199f8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80199f8:	b40e      	push	{r1, r2, r3}
 80199fa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80199fc:	b09e      	sub	sp, #120	; 0x78
 80199fe:	ab23      	add	r3, sp, #140	; 0x8c
 8019a00:	4605      	mov	r5, r0
 8019a02:	f853 4b04 	ldr.w	r4, [r3], #4
 8019a06:	9303      	str	r3, [sp, #12]
 8019a08:	a805      	add	r0, sp, #20
 8019a0a:	f000 fea9 	bl	801a760 <_ZN8touchgfx12TextProviderC1Ev>
 8019a0e:	682b      	ldr	r3, [r5, #0]
 8019a10:	4628      	mov	r0, r5
 8019a12:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019a14:	4798      	blx	r3
 8019a16:	682b      	ldr	r3, [r5, #0]
 8019a18:	4606      	mov	r6, r0
 8019a1a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019a1c:	4628      	mov	r0, r5
 8019a1e:	4798      	blx	r3
 8019a20:	4633      	mov	r3, r6
 8019a22:	ae1e      	add	r6, sp, #120	; 0x78
 8019a24:	4621      	mov	r1, r4
 8019a26:	9000      	str	r0, [sp, #0]
 8019a28:	9a03      	ldr	r2, [sp, #12]
 8019a2a:	2400      	movs	r4, #0
 8019a2c:	a805      	add	r0, sp, #20
 8019a2e:	f000 fef2 	bl	801a816 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019a32:	f846 4d68 	str.w	r4, [r6, #-104]!
 8019a36:	462a      	mov	r2, r5
 8019a38:	4633      	mov	r3, r6
 8019a3a:	4621      	mov	r1, r4
 8019a3c:	a805      	add	r0, sp, #20
 8019a3e:	f001 f9ed 	bl	801ae1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019a42:	b1f0      	cbz	r0, 8019a82 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8019a44:	280a      	cmp	r0, #10
 8019a46:	d018      	beq.n	8019a7a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019a48:	9f04      	ldr	r7, [sp, #16]
 8019a4a:	b1b7      	cbz	r7, 8019a7a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019a4c:	7b78      	ldrb	r0, [r7, #13]
 8019a4e:	7a3b      	ldrb	r3, [r7, #8]
 8019a50:	88ea      	ldrh	r2, [r5, #6]
 8019a52:	00c1      	lsls	r1, r0, #3
 8019a54:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019a58:	4319      	orrs	r1, r3
 8019a5a:	0643      	lsls	r3, r0, #25
 8019a5c:	bf44      	itt	mi
 8019a5e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8019a62:	b219      	sxthmi	r1, r3
 8019a64:	0100      	lsls	r0, r0, #4
 8019a66:	79fb      	ldrb	r3, [r7, #7]
 8019a68:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8019a6c:	4303      	orrs	r3, r0
 8019a6e:	4413      	add	r3, r2
 8019a70:	1a5b      	subs	r3, r3, r1
 8019a72:	b21b      	sxth	r3, r3
 8019a74:	429c      	cmp	r4, r3
 8019a76:	bfb8      	it	lt
 8019a78:	461c      	movlt	r4, r3
 8019a7a:	4633      	mov	r3, r6
 8019a7c:	462a      	mov	r2, r5
 8019a7e:	2100      	movs	r1, #0
 8019a80:	e7dc      	b.n	8019a3c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8019a82:	b2a0      	uxth	r0, r4
 8019a84:	b01e      	add	sp, #120	; 0x78
 8019a86:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019a8a:	b003      	add	sp, #12
 8019a8c:	4770      	bx	lr

08019a8e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8019a8e:	7a43      	ldrb	r3, [r0, #9]
 8019a90:	8880      	ldrh	r0, [r0, #4]
 8019a92:	4418      	add	r0, r3
 8019a94:	b280      	uxth	r0, r0
 8019a96:	4770      	bx	lr

08019a98 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8019a98:	6803      	ldr	r3, [r0, #0]
 8019a9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019a9c:	4718      	bx	r3

08019a9e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8019a9e:	b40e      	push	{r1, r2, r3}
 8019aa0:	b570      	push	{r4, r5, r6, lr}
 8019aa2:	b09d      	sub	sp, #116	; 0x74
 8019aa4:	ab21      	add	r3, sp, #132	; 0x84
 8019aa6:	4604      	mov	r4, r0
 8019aa8:	f853 5b04 	ldr.w	r5, [r3], #4
 8019aac:	9302      	str	r3, [sp, #8]
 8019aae:	a803      	add	r0, sp, #12
 8019ab0:	f000 fe56 	bl	801a760 <_ZN8touchgfx12TextProviderC1Ev>
 8019ab4:	6823      	ldr	r3, [r4, #0]
 8019ab6:	4620      	mov	r0, r4
 8019ab8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019aba:	4798      	blx	r3
 8019abc:	6823      	ldr	r3, [r4, #0]
 8019abe:	4606      	mov	r6, r0
 8019ac0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019ac2:	4620      	mov	r0, r4
 8019ac4:	4798      	blx	r3
 8019ac6:	4633      	mov	r3, r6
 8019ac8:	9000      	str	r0, [sp, #0]
 8019aca:	9a02      	ldr	r2, [sp, #8]
 8019acc:	4629      	mov	r1, r5
 8019ace:	a803      	add	r0, sp, #12
 8019ad0:	f000 fea1 	bl	801a816 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019ad4:	a803      	add	r0, sp, #12
 8019ad6:	f001 fa6f 	bl	801afb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019ada:	2401      	movs	r4, #1
 8019adc:	b2a3      	uxth	r3, r4
 8019ade:	b140      	cbz	r0, 8019af2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8019ae0:	280a      	cmp	r0, #10
 8019ae2:	bf08      	it	eq
 8019ae4:	3301      	addeq	r3, #1
 8019ae6:	a803      	add	r0, sp, #12
 8019ae8:	bf08      	it	eq
 8019aea:	b21c      	sxtheq	r4, r3
 8019aec:	f001 fa64 	bl	801afb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019af0:	e7f4      	b.n	8019adc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8019af2:	4618      	mov	r0, r3
 8019af4:	b01d      	add	sp, #116	; 0x74
 8019af6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019afa:	b003      	add	sp, #12
 8019afc:	4770      	bx	lr

08019afe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8019afe:	b40e      	push	{r1, r2, r3}
 8019b00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019b02:	b09e      	sub	sp, #120	; 0x78
 8019b04:	ab23      	add	r3, sp, #140	; 0x8c
 8019b06:	4604      	mov	r4, r0
 8019b08:	f853 5b04 	ldr.w	r5, [r3], #4
 8019b0c:	9303      	str	r3, [sp, #12]
 8019b0e:	a805      	add	r0, sp, #20
 8019b10:	f000 fe26 	bl	801a760 <_ZN8touchgfx12TextProviderC1Ev>
 8019b14:	6823      	ldr	r3, [r4, #0]
 8019b16:	4620      	mov	r0, r4
 8019b18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019b1a:	4798      	blx	r3
 8019b1c:	6823      	ldr	r3, [r4, #0]
 8019b1e:	4606      	mov	r6, r0
 8019b20:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019b22:	4620      	mov	r0, r4
 8019b24:	4798      	blx	r3
 8019b26:	4633      	mov	r3, r6
 8019b28:	4629      	mov	r1, r5
 8019b2a:	9000      	str	r0, [sp, #0]
 8019b2c:	9a03      	ldr	r2, [sp, #12]
 8019b2e:	a805      	add	r0, sp, #20
 8019b30:	ad1e      	add	r5, sp, #120	; 0x78
 8019b32:	f000 fe70 	bl	801a816 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019b36:	2100      	movs	r1, #0
 8019b38:	f845 1d68 	str.w	r1, [r5, #-104]!
 8019b3c:	4622      	mov	r2, r4
 8019b3e:	462b      	mov	r3, r5
 8019b40:	a805      	add	r0, sp, #20
 8019b42:	f001 f96b 	bl	801ae1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019b46:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8019b4a:	b1d8      	cbz	r0, 8019b84 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8019b4c:	280a      	cmp	r0, #10
 8019b4e:	d012      	beq.n	8019b76 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019b50:	9804      	ldr	r0, [sp, #16]
 8019b52:	b180      	cbz	r0, 8019b76 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019b54:	7b47      	ldrb	r7, [r0, #13]
 8019b56:	88e2      	ldrh	r2, [r4, #6]
 8019b58:	00fb      	lsls	r3, r7, #3
 8019b5a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019b5e:	7a03      	ldrb	r3, [r0, #8]
 8019b60:	430b      	orrs	r3, r1
 8019b62:	0679      	lsls	r1, r7, #25
 8019b64:	bf44      	itt	mi
 8019b66:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019b6a:	b21b      	sxthmi	r3, r3
 8019b6c:	1ad3      	subs	r3, r2, r3
 8019b6e:	b21b      	sxth	r3, r3
 8019b70:	429e      	cmp	r6, r3
 8019b72:	bfa8      	it	ge
 8019b74:	461e      	movge	r6, r3
 8019b76:	462b      	mov	r3, r5
 8019b78:	4622      	mov	r2, r4
 8019b7a:	2100      	movs	r1, #0
 8019b7c:	a805      	add	r0, sp, #20
 8019b7e:	f001 f94d 	bl	801ae1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019b82:	e7e2      	b.n	8019b4a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8019b84:	4630      	mov	r0, r6
 8019b86:	b01e      	add	sp, #120	; 0x78
 8019b88:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019b8c:	b003      	add	sp, #12
 8019b8e:	4770      	bx	lr

08019b90 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8019b90:	b513      	push	{r0, r1, r4, lr}
 8019b92:	6803      	ldr	r3, [r0, #0]
 8019b94:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8019b98:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019b9c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8019ba0:	2400      	movs	r4, #0
 8019ba2:	9400      	str	r4, [sp, #0]
 8019ba4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8019ba8:	691b      	ldr	r3, [r3, #16]
 8019baa:	4669      	mov	r1, sp
 8019bac:	4798      	blx	r3
 8019bae:	b002      	add	sp, #8
 8019bb0:	bd10      	pop	{r4, pc}

08019bb2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8019bb2:	b538      	push	{r3, r4, r5, lr}
 8019bb4:	680b      	ldr	r3, [r1, #0]
 8019bb6:	460c      	mov	r4, r1
 8019bb8:	68db      	ldr	r3, [r3, #12]
 8019bba:	4605      	mov	r5, r0
 8019bbc:	4798      	blx	r3
 8019bbe:	6823      	ldr	r3, [r4, #0]
 8019bc0:	4620      	mov	r0, r4
 8019bc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019bc4:	4629      	mov	r1, r5
 8019bc6:	4798      	blx	r3
 8019bc8:	4628      	mov	r0, r5
 8019bca:	bd38      	pop	{r3, r4, r5, pc}

08019bcc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8019bcc:	b410      	push	{r4}
 8019bce:	880a      	ldrh	r2, [r1, #0]
 8019bd0:	8884      	ldrh	r4, [r0, #4]
 8019bd2:	4422      	add	r2, r4
 8019bd4:	800a      	strh	r2, [r1, #0]
 8019bd6:	88c4      	ldrh	r4, [r0, #6]
 8019bd8:	884a      	ldrh	r2, [r1, #2]
 8019bda:	4422      	add	r2, r4
 8019bdc:	804a      	strh	r2, [r1, #2]
 8019bde:	6940      	ldr	r0, [r0, #20]
 8019be0:	b120      	cbz	r0, 8019bec <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8019be2:	6803      	ldr	r3, [r0, #0]
 8019be4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019be8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019bea:	4718      	bx	r3
 8019bec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019bf0:	4770      	bx	lr

08019bf2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8019bf2:	b570      	push	{r4, r5, r6, lr}
 8019bf4:	8882      	ldrh	r2, [r0, #4]
 8019bf6:	880b      	ldrh	r3, [r1, #0]
 8019bf8:	4413      	add	r3, r2
 8019bfa:	800b      	strh	r3, [r1, #0]
 8019bfc:	88c2      	ldrh	r2, [r0, #6]
 8019bfe:	884b      	ldrh	r3, [r1, #2]
 8019c00:	460c      	mov	r4, r1
 8019c02:	4413      	add	r3, r2
 8019c04:	804b      	strh	r3, [r1, #2]
 8019c06:	4605      	mov	r5, r0
 8019c08:	1d01      	adds	r1, r0, #4
 8019c0a:	4620      	mov	r0, r4
 8019c0c:	f7f8 ff86 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8019c10:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019c14:	2b00      	cmp	r3, #0
 8019c16:	dd0b      	ble.n	8019c30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019c18:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019c1c:	2b00      	cmp	r3, #0
 8019c1e:	dd07      	ble.n	8019c30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019c20:	6968      	ldr	r0, [r5, #20]
 8019c22:	b128      	cbz	r0, 8019c30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019c24:	6803      	ldr	r3, [r0, #0]
 8019c26:	4621      	mov	r1, r4
 8019c28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019c2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c2e:	4718      	bx	r3
 8019c30:	bd70      	pop	{r4, r5, r6, pc}
	...

08019c34 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8019c34:	b570      	push	{r4, r5, r6, lr}
 8019c36:	8882      	ldrh	r2, [r0, #4]
 8019c38:	880b      	ldrh	r3, [r1, #0]
 8019c3a:	4413      	add	r3, r2
 8019c3c:	800b      	strh	r3, [r1, #0]
 8019c3e:	88c2      	ldrh	r2, [r0, #6]
 8019c40:	884b      	ldrh	r3, [r1, #2]
 8019c42:	460c      	mov	r4, r1
 8019c44:	4413      	add	r3, r2
 8019c46:	804b      	strh	r3, [r1, #2]
 8019c48:	4605      	mov	r5, r0
 8019c4a:	1d01      	adds	r1, r0, #4
 8019c4c:	4620      	mov	r0, r4
 8019c4e:	f7f8 ff65 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8019c52:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019c56:	2b00      	cmp	r3, #0
 8019c58:	dd19      	ble.n	8019c8e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c5a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019c5e:	2b00      	cmp	r3, #0
 8019c60:	dd15      	ble.n	8019c8e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c62:	6968      	ldr	r0, [r5, #20]
 8019c64:	b128      	cbz	r0, 8019c72 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8019c66:	6803      	ldr	r3, [r0, #0]
 8019c68:	4621      	mov	r1, r4
 8019c6a:	691b      	ldr	r3, [r3, #16]
 8019c6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c70:	4718      	bx	r3
 8019c72:	4b07      	ldr	r3, [pc, #28]	; (8019c90 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8019c74:	681b      	ldr	r3, [r3, #0]
 8019c76:	3304      	adds	r3, #4
 8019c78:	429d      	cmp	r5, r3
 8019c7a:	d108      	bne.n	8019c8e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c7c:	f7fe fea0 	bl	80189c0 <_ZN8touchgfx11Application11getInstanceEv>
 8019c80:	6803      	ldr	r3, [r0, #0]
 8019c82:	6821      	ldr	r1, [r4, #0]
 8019c84:	6862      	ldr	r2, [r4, #4]
 8019c86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019c88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c8c:	4718      	bx	r3
 8019c8e:	bd70      	pop	{r4, r5, r6, pc}
 8019c90:	20013880 	.word	0x20013880

08019c94 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8019c94:	b570      	push	{r4, r5, r6, lr}
 8019c96:	4604      	mov	r4, r0
 8019c98:	4616      	mov	r6, r2
 8019c9a:	460d      	mov	r5, r1
 8019c9c:	b901      	cbnz	r1, 8019ca0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8019c9e:	b192      	cbz	r2, 8019cc6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8019ca0:	6823      	ldr	r3, [r4, #0]
 8019ca2:	4620      	mov	r0, r4
 8019ca4:	699b      	ldr	r3, [r3, #24]
 8019ca6:	4798      	blx	r3
 8019ca8:	88e2      	ldrh	r2, [r4, #6]
 8019caa:	88a1      	ldrh	r1, [r4, #4]
 8019cac:	4432      	add	r2, r6
 8019cae:	4429      	add	r1, r5
 8019cb0:	4620      	mov	r0, r4
 8019cb2:	b212      	sxth	r2, r2
 8019cb4:	b209      	sxth	r1, r1
 8019cb6:	f7e9 fcdf 	bl	8003678 <_ZN8touchgfx8Drawable5setXYEss>
 8019cba:	6823      	ldr	r3, [r4, #0]
 8019cbc:	4620      	mov	r0, r4
 8019cbe:	699b      	ldr	r3, [r3, #24]
 8019cc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019cc4:	4718      	bx	r3
 8019cc6:	bd70      	pop	{r4, r5, r6, pc}

08019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8019cc8:	b510      	push	{r4, lr}
 8019cca:	4604      	mov	r4, r0
 8019ccc:	4608      	mov	r0, r1
 8019cce:	2300      	movs	r3, #0
 8019cd0:	8023      	strh	r3, [r4, #0]
 8019cd2:	8063      	strh	r3, [r4, #2]
 8019cd4:	6803      	ldr	r3, [r0, #0]
 8019cd6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019cda:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8019cde:	80a1      	strh	r1, [r4, #4]
 8019ce0:	80e2      	strh	r2, [r4, #6]
 8019ce2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019ce4:	4621      	mov	r1, r4
 8019ce6:	4798      	blx	r3
 8019ce8:	4620      	mov	r0, r4
 8019cea:	bd10      	pop	{r4, pc}

08019cec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8019cec:	b530      	push	{r4, r5, lr}
 8019cee:	8083      	strh	r3, [r0, #4]
 8019cf0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8019cf4:	80c3      	strh	r3, [r0, #6]
 8019cf6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8019cfa:	7203      	strb	r3, [r0, #8]
 8019cfc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019d00:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8019d04:	7243      	strb	r3, [r0, #9]
 8019d06:	7a83      	ldrb	r3, [r0, #10]
 8019d08:	6141      	str	r1, [r0, #20]
 8019d0a:	f365 0306 	bfi	r3, r5, #0, #7
 8019d0e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8019d12:	8302      	strh	r2, [r0, #24]
 8019d14:	f365 13c7 	bfi	r3, r5, #7, #1
 8019d18:	7283      	strb	r3, [r0, #10]
 8019d1a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8019d1e:	72c3      	strb	r3, [r0, #11]
 8019d20:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8019d24:	7303      	strb	r3, [r0, #12]
 8019d26:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019d2a:	81c3      	strh	r3, [r0, #14]
 8019d2c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019d30:	8203      	strh	r3, [r0, #16]
 8019d32:	4b01      	ldr	r3, [pc, #4]	; (8019d38 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8019d34:	6003      	str	r3, [r0, #0]
 8019d36:	bd30      	pop	{r4, r5, pc}
 8019d38:	08031e68 	.word	0x08031e68

08019d3c <_ZNK8touchgfx9ConstFont4findEt>:
 8019d3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019d3e:	6944      	ldr	r4, [r0, #20]
 8019d40:	b3bc      	cbz	r4, 8019db2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d42:	88a3      	ldrh	r3, [r4, #4]
 8019d44:	8b02      	ldrh	r2, [r0, #24]
 8019d46:	1acb      	subs	r3, r1, r3
 8019d48:	f102 32ff 	add.w	r2, r2, #4294967295
 8019d4c:	d431      	bmi.n	8019db2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d4e:	4293      	cmp	r3, r2
 8019d50:	dd0c      	ble.n	8019d6c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8019d52:	230e      	movs	r3, #14
 8019d54:	fb03 4302 	mla	r3, r3, r2, r4
 8019d58:	889b      	ldrh	r3, [r3, #4]
 8019d5a:	1a5b      	subs	r3, r3, r1
 8019d5c:	1ad3      	subs	r3, r2, r3
 8019d5e:	429a      	cmp	r2, r3
 8019d60:	db27      	blt.n	8019db2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d62:	2b00      	cmp	r3, #0
 8019d64:	bfbc      	itt	lt
 8019d66:	2302      	movlt	r3, #2
 8019d68:	fb92 f3f3 	sdivlt	r3, r2, r3
 8019d6c:	2500      	movs	r5, #0
 8019d6e:	260e      	movs	r6, #14
 8019d70:	4295      	cmp	r5, r2
 8019d72:	dc1e      	bgt.n	8019db2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d74:	fb06 4003 	mla	r0, r6, r3, r4
 8019d78:	8887      	ldrh	r7, [r0, #4]
 8019d7a:	42b9      	cmp	r1, r7
 8019d7c:	d01a      	beq.n	8019db4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8019d7e:	d20d      	bcs.n	8019d9c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8019d80:	1e5a      	subs	r2, r3, #1
 8019d82:	4295      	cmp	r5, r2
 8019d84:	dc15      	bgt.n	8019db2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d86:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8019d8a:	1a5b      	subs	r3, r3, r1
 8019d8c:	1ad3      	subs	r3, r2, r3
 8019d8e:	429a      	cmp	r2, r3
 8019d90:	db0f      	blt.n	8019db2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d92:	429d      	cmp	r5, r3
 8019d94:	ddec      	ble.n	8019d70 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d96:	1953      	adds	r3, r2, r5
 8019d98:	105b      	asrs	r3, r3, #1
 8019d9a:	e7e9      	b.n	8019d70 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d9c:	1c5d      	adds	r5, r3, #1
 8019d9e:	42aa      	cmp	r2, r5
 8019da0:	db07      	blt.n	8019db2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019da2:	8a43      	ldrh	r3, [r0, #18]
 8019da4:	1acb      	subs	r3, r1, r3
 8019da6:	442b      	add	r3, r5
 8019da8:	429d      	cmp	r5, r3
 8019daa:	dc02      	bgt.n	8019db2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019dac:	429a      	cmp	r2, r3
 8019dae:	dadf      	bge.n	8019d70 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019db0:	e7f1      	b.n	8019d96 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8019db2:	2000      	movs	r0, #0
 8019db4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019db6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8019db6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019db8:	4604      	mov	r4, r0
 8019dba:	4617      	mov	r7, r2
 8019dbc:	461e      	mov	r6, r3
 8019dbe:	b911      	cbnz	r1, 8019dc6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8019dc0:	2500      	movs	r5, #0
 8019dc2:	4628      	mov	r0, r5
 8019dc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019dc6:	290a      	cmp	r1, #10
 8019dc8:	d0fa      	beq.n	8019dc0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019dca:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8019dce:	4291      	cmp	r1, r2
 8019dd0:	d0f6      	beq.n	8019dc0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019dd2:	f242 020b 	movw	r2, #8203	; 0x200b
 8019dd6:	4291      	cmp	r1, r2
 8019dd8:	d0f2      	beq.n	8019dc0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019dda:	f7ff ffaf 	bl	8019d3c <_ZNK8touchgfx9ConstFont4findEt>
 8019dde:	4605      	mov	r5, r0
 8019de0:	b950      	cbnz	r0, 8019df8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8019de2:	6823      	ldr	r3, [r4, #0]
 8019de4:	4620      	mov	r0, r4
 8019de6:	691b      	ldr	r3, [r3, #16]
 8019de8:	4798      	blx	r3
 8019dea:	4601      	mov	r1, r0
 8019dec:	4620      	mov	r0, r4
 8019dee:	f7ff ffa5 	bl	8019d3c <_ZNK8touchgfx9ConstFont4findEt>
 8019df2:	4605      	mov	r5, r0
 8019df4:	2800      	cmp	r0, #0
 8019df6:	d0e3      	beq.n	8019dc0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019df8:	6823      	ldr	r3, [r4, #0]
 8019dfa:	4629      	mov	r1, r5
 8019dfc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8019dfe:	4620      	mov	r0, r4
 8019e00:	4798      	blx	r3
 8019e02:	6038      	str	r0, [r7, #0]
 8019e04:	6823      	ldr	r3, [r4, #0]
 8019e06:	4620      	mov	r0, r4
 8019e08:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019e0a:	4798      	blx	r3
 8019e0c:	7030      	strb	r0, [r6, #0]
 8019e0e:	e7d8      	b.n	8019dc2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08019e10 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8019e10:	b538      	push	{r3, r4, r5, lr}
 8019e12:	4605      	mov	r5, r0
 8019e14:	f002 fb94 	bl	801c540 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019e18:	4604      	mov	r4, r0
 8019e1a:	4628      	mov	r0, r5
 8019e1c:	f002 fad4 	bl	801c3c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019e20:	2800      	cmp	r0, #0
 8019e22:	bf14      	ite	ne
 8019e24:	2002      	movne	r0, #2
 8019e26:	2000      	moveq	r0, #0
 8019e28:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019e2c:	b280      	uxth	r0, r0
 8019e2e:	bd38      	pop	{r3, r4, r5, pc}

08019e30 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8019e30:	b538      	push	{r3, r4, r5, lr}
 8019e32:	4605      	mov	r5, r0
 8019e34:	f002 fb84 	bl	801c540 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019e38:	4604      	mov	r4, r0
 8019e3a:	4628      	mov	r0, r5
 8019e3c:	f002 fac4 	bl	801c3c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019e40:	2800      	cmp	r0, #0
 8019e42:	bf14      	ite	ne
 8019e44:	2002      	movne	r0, #2
 8019e46:	2000      	moveq	r0, #0
 8019e48:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019e4c:	f040 0001 	orr.w	r0, r0, #1
 8019e50:	b280      	uxth	r0, r0
 8019e52:	bd38      	pop	{r3, r4, r5, pc}

08019e54 <_ZN8touchgfx4clzuEm>:
 8019e54:	4603      	mov	r3, r0
 8019e56:	b1c8      	cbz	r0, 8019e8c <_ZN8touchgfx4clzuEm+0x38>
 8019e58:	0c02      	lsrs	r2, r0, #16
 8019e5a:	0412      	lsls	r2, r2, #16
 8019e5c:	b9a2      	cbnz	r2, 8019e88 <_ZN8touchgfx4clzuEm+0x34>
 8019e5e:	0403      	lsls	r3, r0, #16
 8019e60:	2010      	movs	r0, #16
 8019e62:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8019e66:	bf04      	itt	eq
 8019e68:	021b      	lsleq	r3, r3, #8
 8019e6a:	3008      	addeq	r0, #8
 8019e6c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8019e70:	bf04      	itt	eq
 8019e72:	011b      	lsleq	r3, r3, #4
 8019e74:	3004      	addeq	r0, #4
 8019e76:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8019e7a:	bf04      	itt	eq
 8019e7c:	009b      	lsleq	r3, r3, #2
 8019e7e:	3002      	addeq	r0, #2
 8019e80:	2b00      	cmp	r3, #0
 8019e82:	db04      	blt.n	8019e8e <_ZN8touchgfx4clzuEm+0x3a>
 8019e84:	3001      	adds	r0, #1
 8019e86:	4770      	bx	lr
 8019e88:	2000      	movs	r0, #0
 8019e8a:	e7ea      	b.n	8019e62 <_ZN8touchgfx4clzuEm+0xe>
 8019e8c:	2020      	movs	r0, #32
 8019e8e:	4770      	bx	lr

08019e90 <_ZN8touchgfx7muldivuEmmmRm>:
 8019e90:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8019e94:	460f      	mov	r7, r1
 8019e96:	4615      	mov	r5, r2
 8019e98:	461e      	mov	r6, r3
 8019e9a:	4601      	mov	r1, r0
 8019e9c:	b100      	cbz	r0, 8019ea0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8019e9e:	b927      	cbnz	r7, 8019eaa <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8019ea0:	2000      	movs	r0, #0
 8019ea2:	6030      	str	r0, [r6, #0]
 8019ea4:	b002      	add	sp, #8
 8019ea6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019eaa:	f7ff ffd3 	bl	8019e54 <_ZN8touchgfx4clzuEm>
 8019eae:	b980      	cbnz	r0, 8019ed2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8019eb0:	4638      	mov	r0, r7
 8019eb2:	f7ff ffcf 	bl	8019e54 <_ZN8touchgfx4clzuEm>
 8019eb6:	2800      	cmp	r0, #0
 8019eb8:	dd05      	ble.n	8019ec6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8019eba:	4633      	mov	r3, r6
 8019ebc:	462a      	mov	r2, r5
 8019ebe:	4638      	mov	r0, r7
 8019ec0:	f7ff ffe6 	bl	8019e90 <_ZN8touchgfx7muldivuEmmmRm>
 8019ec4:	e7ee      	b.n	8019ea4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019ec6:	f04f 33ff 	mov.w	r3, #4294967295
 8019eca:	6033      	str	r3, [r6, #0]
 8019ecc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8019ed0:	e7e8      	b.n	8019ea4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019ed2:	fa37 f800 	lsrs.w	r8, r7, r0
 8019ed6:	fb07 f301 	mul.w	r3, r7, r1
 8019eda:	d105      	bne.n	8019ee8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8019edc:	fbb3 f0f5 	udiv	r0, r3, r5
 8019ee0:	fb05 3510 	mls	r5, r5, r0, r3
 8019ee4:	6035      	str	r5, [r6, #0]
 8019ee6:	e7dd      	b.n	8019ea4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019ee8:	2301      	movs	r3, #1
 8019eea:	fa01 fa00 	lsl.w	sl, r1, r0
 8019eee:	fa03 f000 	lsl.w	r0, r3, r0
 8019ef2:	3801      	subs	r0, #1
 8019ef4:	462a      	mov	r2, r5
 8019ef6:	4633      	mov	r3, r6
 8019ef8:	4038      	ands	r0, r7
 8019efa:	f7ff ffc9 	bl	8019e90 <_ZN8touchgfx7muldivuEmmmRm>
 8019efe:	fbba f9f5 	udiv	r9, sl, r5
 8019f02:	462a      	mov	r2, r5
 8019f04:	4607      	mov	r7, r0
 8019f06:	ab01      	add	r3, sp, #4
 8019f08:	fb05 a119 	mls	r1, r5, r9, sl
 8019f0c:	4640      	mov	r0, r8
 8019f0e:	f7ff ffbf 	bl	8019e90 <_ZN8touchgfx7muldivuEmmmRm>
 8019f12:	9b01      	ldr	r3, [sp, #4]
 8019f14:	6832      	ldr	r2, [r6, #0]
 8019f16:	fb08 f409 	mul.w	r4, r8, r9
 8019f1a:	441a      	add	r2, r3
 8019f1c:	fbb2 f3f5 	udiv	r3, r2, r5
 8019f20:	441c      	add	r4, r3
 8019f22:	443c      	add	r4, r7
 8019f24:	4420      	add	r0, r4
 8019f26:	fb05 2513 	mls	r5, r5, r3, r2
 8019f2a:	e7db      	b.n	8019ee4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08019f2c <_ZN8touchgfx6muldivElllRl>:
 8019f2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019f2e:	2800      	cmp	r0, #0
 8019f30:	bfba      	itte	lt
 8019f32:	4240      	neglt	r0, r0
 8019f34:	f04f 34ff 	movlt.w	r4, #4294967295
 8019f38:	2401      	movge	r4, #1
 8019f3a:	2900      	cmp	r1, #0
 8019f3c:	bfbc      	itt	lt
 8019f3e:	4249      	neglt	r1, r1
 8019f40:	4264      	neglt	r4, r4
 8019f42:	2a00      	cmp	r2, #0
 8019f44:	bfb6      	itet	lt
 8019f46:	4265      	neglt	r5, r4
 8019f48:	4625      	movge	r5, r4
 8019f4a:	4252      	neglt	r2, r2
 8019f4c:	4288      	cmp	r0, r1
 8019f4e:	461e      	mov	r6, r3
 8019f50:	bfc2      	ittt	gt
 8019f52:	4603      	movgt	r3, r0
 8019f54:	4608      	movgt	r0, r1
 8019f56:	4619      	movgt	r1, r3
 8019f58:	ab01      	add	r3, sp, #4
 8019f5a:	f7ff ff99 	bl	8019e90 <_ZN8touchgfx7muldivuEmmmRm>
 8019f5e:	9b01      	ldr	r3, [sp, #4]
 8019f60:	4368      	muls	r0, r5
 8019f62:	435c      	muls	r4, r3
 8019f64:	6034      	str	r4, [r6, #0]
 8019f66:	b002      	add	sp, #8
 8019f68:	bd70      	pop	{r4, r5, r6, pc}

08019f6a <_ZN8touchgfx6muldivElll>:
 8019f6a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019f6c:	4606      	mov	r6, r0
 8019f6e:	ab01      	add	r3, sp, #4
 8019f70:	460d      	mov	r5, r1
 8019f72:	4614      	mov	r4, r2
 8019f74:	f7ff ffda 	bl	8019f2c <_ZN8touchgfx6muldivElllRl>
 8019f78:	2e00      	cmp	r6, #0
 8019f7a:	db20      	blt.n	8019fbe <_ZN8touchgfx6muldivElll+0x54>
 8019f7c:	bf14      	ite	ne
 8019f7e:	2301      	movne	r3, #1
 8019f80:	2300      	moveq	r3, #0
 8019f82:	2d00      	cmp	r5, #0
 8019f84:	db1e      	blt.n	8019fc4 <_ZN8touchgfx6muldivElll+0x5a>
 8019f86:	bf14      	ite	ne
 8019f88:	2201      	movne	r2, #1
 8019f8a:	2200      	moveq	r2, #0
 8019f8c:	2c00      	cmp	r4, #0
 8019f8e:	fb03 f202 	mul.w	r2, r3, r2
 8019f92:	db1a      	blt.n	8019fca <_ZN8touchgfx6muldivElll+0x60>
 8019f94:	bf14      	ite	ne
 8019f96:	2301      	movne	r3, #1
 8019f98:	2300      	moveq	r3, #0
 8019f9a:	4353      	muls	r3, r2
 8019f9c:	2b01      	cmp	r3, #1
 8019f9e:	d117      	bne.n	8019fd0 <_ZN8touchgfx6muldivElll+0x66>
 8019fa0:	9b01      	ldr	r3, [sp, #4]
 8019fa2:	2c00      	cmp	r4, #0
 8019fa4:	bfb8      	it	lt
 8019fa6:	4264      	neglt	r4, r4
 8019fa8:	2b00      	cmp	r3, #0
 8019faa:	f104 0401 	add.w	r4, r4, #1
 8019fae:	bfb8      	it	lt
 8019fb0:	425b      	neglt	r3, r3
 8019fb2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019fb6:	db00      	blt.n	8019fba <_ZN8touchgfx6muldivElll+0x50>
 8019fb8:	3001      	adds	r0, #1
 8019fba:	b002      	add	sp, #8
 8019fbc:	bd70      	pop	{r4, r5, r6, pc}
 8019fbe:	f04f 33ff 	mov.w	r3, #4294967295
 8019fc2:	e7de      	b.n	8019f82 <_ZN8touchgfx6muldivElll+0x18>
 8019fc4:	f04f 32ff 	mov.w	r2, #4294967295
 8019fc8:	e7e0      	b.n	8019f8c <_ZN8touchgfx6muldivElll+0x22>
 8019fca:	f04f 33ff 	mov.w	r3, #4294967295
 8019fce:	e7e4      	b.n	8019f9a <_ZN8touchgfx6muldivElll+0x30>
 8019fd0:	3301      	adds	r3, #1
 8019fd2:	d1f2      	bne.n	8019fba <_ZN8touchgfx6muldivElll+0x50>
 8019fd4:	9b01      	ldr	r3, [sp, #4]
 8019fd6:	2c00      	cmp	r4, #0
 8019fd8:	bfb8      	it	lt
 8019fda:	4264      	neglt	r4, r4
 8019fdc:	2b00      	cmp	r3, #0
 8019fde:	bfb8      	it	lt
 8019fe0:	425b      	neglt	r3, r3
 8019fe2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019fe6:	bfc8      	it	gt
 8019fe8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8019fec:	e7e5      	b.n	8019fba <_ZN8touchgfx6muldivElll+0x50>

08019fee <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8019fee:	2000      	movs	r0, #0
 8019ff0:	4770      	bx	lr

08019ff2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8019ff2:	2001      	movs	r0, #1
 8019ff4:	4770      	bx	lr

08019ff6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8019ff6:	2002      	movs	r0, #2
 8019ff8:	4770      	bx	lr

08019ffa <_ZN8touchgfx6ScreenD1Ev>:
 8019ffa:	4770      	bx	lr

08019ffc <_ZN8touchgfx12GestureEventD1Ev>:
 8019ffc:	4770      	bx	lr

08019ffe <_ZN8touchgfx9DragEventD1Ev>:
 8019ffe:	4770      	bx	lr

0801a000 <_ZN8touchgfx10ClickEventD1Ev>:
 801a000:	4770      	bx	lr

0801a002 <_ZN8touchgfx10ClickEventD0Ev>:
 801a002:	b510      	push	{r4, lr}
 801a004:	210c      	movs	r1, #12
 801a006:	4604      	mov	r4, r0
 801a008:	f012 fdc3 	bl	802cb92 <_ZdlPvj>
 801a00c:	4620      	mov	r0, r4
 801a00e:	bd10      	pop	{r4, pc}

0801a010 <_ZN8touchgfx9DragEventD0Ev>:
 801a010:	b510      	push	{r4, lr}
 801a012:	2110      	movs	r1, #16
 801a014:	4604      	mov	r4, r0
 801a016:	f012 fdbc 	bl	802cb92 <_ZdlPvj>
 801a01a:	4620      	mov	r0, r4
 801a01c:	bd10      	pop	{r4, pc}

0801a01e <_ZN8touchgfx12GestureEventD0Ev>:
 801a01e:	b510      	push	{r4, lr}
 801a020:	210c      	movs	r1, #12
 801a022:	4604      	mov	r4, r0
 801a024:	f012 fdb5 	bl	802cb92 <_ZdlPvj>
 801a028:	4620      	mov	r0, r4
 801a02a:	bd10      	pop	{r4, pc}

0801a02c <_ZN8touchgfx6ScreenD0Ev>:
 801a02c:	b510      	push	{r4, lr}
 801a02e:	213c      	movs	r1, #60	; 0x3c
 801a030:	4604      	mov	r4, r0
 801a032:	f012 fdae 	bl	802cb92 <_ZdlPvj>
 801a036:	4620      	mov	r0, r4
 801a038:	bd10      	pop	{r4, pc}
	...

0801a03c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a03c:	b530      	push	{r4, r5, lr}
 801a03e:	460d      	mov	r5, r1
 801a040:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a042:	b087      	sub	sp, #28
 801a044:	4604      	mov	r4, r0
 801a046:	b301      	cbz	r1, 801a08a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a048:	a801      	add	r0, sp, #4
 801a04a:	f7ff fe3d 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a04e:	892a      	ldrh	r2, [r5, #8]
 801a050:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a054:	7928      	ldrb	r0, [r5, #4]
 801a056:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a05a:	f88d 0010 	strb.w	r0, [sp, #16]
 801a05e:	1ad2      	subs	r2, r2, r3
 801a060:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a062:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a064:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a068:	441a      	add	r2, r3
 801a06a:	896b      	ldrh	r3, [r5, #10]
 801a06c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a070:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a074:	1b5b      	subs	r3, r3, r5
 801a076:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a078:	442b      	add	r3, r5
 801a07a:	4d05      	ldr	r5, [pc, #20]	; (801a090 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a07c:	9503      	str	r5, [sp, #12]
 801a07e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a082:	6803      	ldr	r3, [r0, #0]
 801a084:	a903      	add	r1, sp, #12
 801a086:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a088:	4798      	blx	r3
 801a08a:	b007      	add	sp, #28
 801a08c:	bd30      	pop	{r4, r5, pc}
 801a08e:	bf00      	nop
 801a090:	08031ef0 	.word	0x08031ef0

0801a094 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a094:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a098:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a09a:	b08a      	sub	sp, #40	; 0x28
 801a09c:	4604      	mov	r4, r0
 801a09e:	460d      	mov	r5, r1
 801a0a0:	b113      	cbz	r3, 801a0a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a0a2:	790b      	ldrb	r3, [r1, #4]
 801a0a4:	2b00      	cmp	r3, #0
 801a0a6:	d044      	beq.n	801a132 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a0a8:	f104 0804 	add.w	r8, r4, #4
 801a0ac:	4641      	mov	r1, r8
 801a0ae:	a803      	add	r0, sp, #12
 801a0b0:	f7ff fe0a 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a0b4:	792b      	ldrb	r3, [r5, #4]
 801a0b6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a0ba:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a0be:	b983      	cbnz	r3, 801a0e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a0c0:	892a      	ldrh	r2, [r5, #8]
 801a0c2:	88e9      	ldrh	r1, [r5, #6]
 801a0c4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a0c8:	1b92      	subs	r2, r2, r6
 801a0ca:	1bc9      	subs	r1, r1, r7
 801a0cc:	9301      	str	r3, [sp, #4]
 801a0ce:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a0d2:	9300      	str	r3, [sp, #0]
 801a0d4:	b212      	sxth	r2, r2
 801a0d6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a0da:	b209      	sxth	r1, r1
 801a0dc:	4640      	mov	r0, r8
 801a0de:	f7f8 fc39 	bl	8012954 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a0e2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a0e4:	b329      	cbz	r1, 801a132 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a0e6:	a805      	add	r0, sp, #20
 801a0e8:	f7ff fdee 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a0ec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a0f0:	792b      	ldrb	r3, [r5, #4]
 801a0f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a0f4:	f88d 3020 	strb.w	r3, [sp, #32]
 801a0f8:	1abf      	subs	r7, r7, r2
 801a0fa:	88ea      	ldrh	r2, [r5, #6]
 801a0fc:	4417      	add	r7, r2
 801a0fe:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a100:	4417      	add	r7, r2
 801a102:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a106:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a10a:	1ab6      	subs	r6, r6, r2
 801a10c:	892a      	ldrh	r2, [r5, #8]
 801a10e:	4416      	add	r6, r2
 801a110:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a112:	4416      	add	r6, r2
 801a114:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a118:	4a07      	ldr	r2, [pc, #28]	; (801a138 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a11a:	9207      	str	r2, [sp, #28]
 801a11c:	2600      	movs	r6, #0
 801a11e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a122:	6803      	ldr	r3, [r0, #0]
 801a124:	a907      	add	r1, sp, #28
 801a126:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a128:	4798      	blx	r3
 801a12a:	792b      	ldrb	r3, [r5, #4]
 801a12c:	b10b      	cbz	r3, 801a132 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a12e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a132:	b00a      	add	sp, #40	; 0x28
 801a134:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a138:	08031ec8 	.word	0x08031ec8

0801a13c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a13c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a140:	460c      	mov	r4, r1
 801a142:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a144:	b088      	sub	sp, #32
 801a146:	4605      	mov	r5, r0
 801a148:	2900      	cmp	r1, #0
 801a14a:	d06d      	beq.n	801a228 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a14c:	4668      	mov	r0, sp
 801a14e:	f7ff fdbb 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a152:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a154:	88e3      	ldrh	r3, [r4, #6]
 801a156:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a15a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a15e:	440b      	add	r3, r1
 801a160:	b21b      	sxth	r3, r3
 801a162:	4543      	cmp	r3, r8
 801a164:	db31      	blt.n	801a1ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a166:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a16a:	44c4      	add	ip, r8
 801a16c:	fa0f fc8c 	sxth.w	ip, ip
 801a170:	4563      	cmp	r3, ip
 801a172:	da2a      	bge.n	801a1ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a174:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a176:	8926      	ldrh	r6, [r4, #8]
 801a178:	4416      	add	r6, r2
 801a17a:	b236      	sxth	r6, r6
 801a17c:	42be      	cmp	r6, r7
 801a17e:	db24      	blt.n	801a1ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a180:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a184:	4438      	add	r0, r7
 801a186:	b200      	sxth	r0, r0
 801a188:	4286      	cmp	r6, r0
 801a18a:	da1e      	bge.n	801a1ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a18c:	8963      	ldrh	r3, [r4, #10]
 801a18e:	4419      	add	r1, r3
 801a190:	b209      	sxth	r1, r1
 801a192:	4541      	cmp	r1, r8
 801a194:	db08      	blt.n	801a1a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a196:	4561      	cmp	r1, ip
 801a198:	da06      	bge.n	801a1a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a19a:	89a3      	ldrh	r3, [r4, #12]
 801a19c:	441a      	add	r2, r3
 801a19e:	b212      	sxth	r2, r2
 801a1a0:	42ba      	cmp	r2, r7
 801a1a2:	db01      	blt.n	801a1a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a1a4:	4282      	cmp	r2, r0
 801a1a6:	db10      	blt.n	801a1ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a1a8:	4b21      	ldr	r3, [pc, #132]	; (801a230 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a1aa:	9304      	str	r3, [sp, #16]
 801a1ac:	2302      	movs	r3, #2
 801a1ae:	f88d 3014 	strb.w	r3, [sp, #20]
 801a1b2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a1b4:	2300      	movs	r3, #0
 801a1b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a1ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a1be:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a1c2:	6803      	ldr	r3, [r0, #0]
 801a1c4:	a904      	add	r1, sp, #16
 801a1c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a1c8:	4798      	blx	r3
 801a1ca:	1d29      	adds	r1, r5, #4
 801a1cc:	a802      	add	r0, sp, #8
 801a1ce:	f7ff fd7b 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a1d2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a1d6:	88e0      	ldrh	r0, [r4, #6]
 801a1d8:	7921      	ldrb	r1, [r4, #4]
 801a1da:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a1de:	8922      	ldrh	r2, [r4, #8]
 801a1e0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a1e2:	f88d 1014 	strb.w	r1, [sp, #20]
 801a1e6:	eba3 0808 	sub.w	r8, r3, r8
 801a1ea:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a1ee:	1bdf      	subs	r7, r3, r7
 801a1f0:	b2bb      	uxth	r3, r7
 801a1f2:	fa1f f888 	uxth.w	r8, r8
 801a1f6:	8967      	ldrh	r7, [r4, #10]
 801a1f8:	89a4      	ldrh	r4, [r4, #12]
 801a1fa:	4440      	add	r0, r8
 801a1fc:	4460      	add	r0, ip
 801a1fe:	441a      	add	r2, r3
 801a200:	44b8      	add	r8, r7
 801a202:	4423      	add	r3, r4
 801a204:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a208:	4433      	add	r3, r6
 801a20a:	4432      	add	r2, r6
 801a20c:	44e0      	add	r8, ip
 801a20e:	4c09      	ldr	r4, [pc, #36]	; (801a234 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a210:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a212:	9404      	str	r4, [sp, #16]
 801a214:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a218:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a21c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a220:	6803      	ldr	r3, [r0, #0]
 801a222:	a904      	add	r1, sp, #16
 801a224:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a226:	4798      	blx	r3
 801a228:	b008      	add	sp, #32
 801a22a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a22e:	bf00      	nop
 801a230:	08031ec8 	.word	0x08031ec8
 801a234:	08031edc 	.word	0x08031edc

0801a238 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a238:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a23a:	4604      	mov	r4, r0
 801a23c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a240:	3201      	adds	r2, #1
 801a242:	d112      	bne.n	801a26a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a244:	6803      	ldr	r3, [r0, #0]
 801a246:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a24a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a24e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a252:	2500      	movs	r5, #0
 801a254:	9500      	str	r5, [sp, #0]
 801a256:	466d      	mov	r5, sp
 801a258:	4629      	mov	r1, r5
 801a25a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a25e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a260:	4798      	blx	r3
 801a262:	e895 0003 	ldmia.w	r5, {r0, r1}
 801a266:	e884 0003 	stmia.w	r4, {r0, r1}
 801a26a:	4620      	mov	r0, r4
 801a26c:	b003      	add	sp, #12
 801a26e:	bd30      	pop	{r4, r5, pc}

0801a270 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801a270:	b513      	push	{r0, r1, r4, lr}
 801a272:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801a276:	3301      	adds	r3, #1
 801a278:	4604      	mov	r4, r0
 801a27a:	d109      	bne.n	801a290 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801a27c:	4601      	mov	r1, r0
 801a27e:	4668      	mov	r0, sp
 801a280:	f7ff fd22 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a284:	f8bd 3000 	ldrh.w	r3, [sp]
 801a288:	8423      	strh	r3, [r4, #32]
 801a28a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a28e:	8463      	strh	r3, [r4, #34]	; 0x22
 801a290:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801a294:	b002      	add	sp, #8
 801a296:	bd10      	pop	{r4, pc}

0801a298 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801a298:	b513      	push	{r0, r1, r4, lr}
 801a29a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801a29e:	3301      	adds	r3, #1
 801a2a0:	4604      	mov	r4, r0
 801a2a2:	d109      	bne.n	801a2b8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801a2a4:	4601      	mov	r1, r0
 801a2a6:	4668      	mov	r0, sp
 801a2a8:	f7ff fd0e 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a2ac:	f8bd 3000 	ldrh.w	r3, [sp]
 801a2b0:	8423      	strh	r3, [r4, #32]
 801a2b2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a2b6:	8463      	strh	r3, [r4, #34]	; 0x22
 801a2b8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801a2bc:	b002      	add	sp, #8
 801a2be:	bd10      	pop	{r4, pc}

0801a2c0 <_ZN8touchgfx6ScreenC1Ev>:
 801a2c0:	b570      	push	{r4, r5, r6, lr}
 801a2c2:	4605      	mov	r5, r0
 801a2c4:	4b16      	ldr	r3, [pc, #88]	; (801a320 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801a2c6:	f845 3b04 	str.w	r3, [r5], #4
 801a2ca:	2300      	movs	r3, #0
 801a2cc:	8103      	strh	r3, [r0, #8]
 801a2ce:	8143      	strh	r3, [r0, #10]
 801a2d0:	8183      	strh	r3, [r0, #12]
 801a2d2:	81c3      	strh	r3, [r0, #14]
 801a2d4:	8203      	strh	r3, [r0, #16]
 801a2d6:	8243      	strh	r3, [r0, #18]
 801a2d8:	8283      	strh	r3, [r0, #20]
 801a2da:	82c3      	strh	r3, [r0, #22]
 801a2dc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801a2e0:	6203      	str	r3, [r0, #32]
 801a2e2:	8483      	strh	r3, [r0, #36]	; 0x24
 801a2e4:	84c3      	strh	r3, [r0, #38]	; 0x26
 801a2e6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801a2ea:	4a0e      	ldr	r2, [pc, #56]	; (801a324 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801a2ec:	6343      	str	r3, [r0, #52]	; 0x34
 801a2ee:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801a2f2:	4b0d      	ldr	r3, [pc, #52]	; (801a328 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801a2f4:	6042      	str	r2, [r0, #4]
 801a2f6:	f9b3 6000 	ldrsh.w	r6, [r3]
 801a2fa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801a2fc:	4a0b      	ldr	r2, [pc, #44]	; (801a32c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801a2fe:	4604      	mov	r4, r0
 801a300:	2101      	movs	r1, #1
 801a302:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801a306:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801a30a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a30e:	4628      	mov	r0, r5
 801a310:	4798      	blx	r3
 801a312:	6863      	ldr	r3, [r4, #4]
 801a314:	4628      	mov	r0, r5
 801a316:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a318:	4631      	mov	r1, r6
 801a31a:	4798      	blx	r3
 801a31c:	4620      	mov	r0, r4
 801a31e:	bd70      	pop	{r4, r5, r6, pc}
 801a320:	08031f04 	.word	0x08031f04
 801a324:	08031588 	.word	0x08031588
 801a328:	20013832 	.word	0x20013832
 801a32c:	20013830 	.word	0x20013830

0801a330 <_ZN8touchgfx6Screen4drawEv>:
 801a330:	b507      	push	{r0, r1, r2, lr}
 801a332:	4b09      	ldr	r3, [pc, #36]	; (801a358 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801a334:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a338:	4b08      	ldr	r3, [pc, #32]	; (801a35c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801a33a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a33e:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a342:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a346:	6803      	ldr	r3, [r0, #0]
 801a348:	2100      	movs	r1, #0
 801a34a:	9100      	str	r1, [sp, #0]
 801a34c:	689b      	ldr	r3, [r3, #8]
 801a34e:	4669      	mov	r1, sp
 801a350:	4798      	blx	r3
 801a352:	b003      	add	sp, #12
 801a354:	f85d fb04 	ldr.w	pc, [sp], #4
 801a358:	20013830 	.word	0x20013830
 801a35c:	20013832 	.word	0x20013832

0801a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801a360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a364:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801a368:	2b00      	cmp	r3, #0
 801a36a:	b089      	sub	sp, #36	; 0x24
 801a36c:	4680      	mov	r8, r0
 801a36e:	460c      	mov	r4, r1
 801a370:	4615      	mov	r5, r2
 801a372:	dd0e      	ble.n	801a392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a374:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801a378:	2b00      	cmp	r3, #0
 801a37a:	dd0a      	ble.n	801a392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a37c:	4628      	mov	r0, r5
 801a37e:	f7ff ff5b 	bl	801a238 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a382:	4621      	mov	r1, r4
 801a384:	f7fe fa3d 	bl	8018802 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801a388:	69eb      	ldr	r3, [r5, #28]
 801a38a:	b928      	cbnz	r0, 801a398 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801a38c:	461d      	mov	r5, r3
 801a38e:	2b00      	cmp	r3, #0
 801a390:	d1f4      	bne.n	801a37c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801a392:	b009      	add	sp, #36	; 0x24
 801a394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a398:	ae04      	add	r6, sp, #16
 801a39a:	2b00      	cmp	r3, #0
 801a39c:	f000 80b5 	beq.w	801a50a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a3a0:	682b      	ldr	r3, [r5, #0]
 801a3a2:	4629      	mov	r1, r5
 801a3a4:	68db      	ldr	r3, [r3, #12]
 801a3a6:	a802      	add	r0, sp, #8
 801a3a8:	4798      	blx	r3
 801a3aa:	4628      	mov	r0, r5
 801a3ac:	f7ff ff60 	bl	801a270 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a3b0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801a3b4:	4407      	add	r7, r0
 801a3b6:	4628      	mov	r0, r5
 801a3b8:	f7ff ff6e 	bl	801a298 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a3bc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a3c0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801a3c4:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a3c8:	4418      	add	r0, r3
 801a3ca:	4621      	mov	r1, r4
 801a3cc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801a3d0:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a3d4:	b23f      	sxth	r7, r7
 801a3d6:	4630      	mov	r0, r6
 801a3d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a3dc:	f8ad 7010 	strh.w	r7, [sp, #16]
 801a3e0:	f7f8 fb9c 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 801a3e4:	4628      	mov	r0, r5
 801a3e6:	f7ff ff27 	bl	801a238 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a3ea:	4602      	mov	r2, r0
 801a3ec:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a3f0:	ab06      	add	r3, sp, #24
 801a3f2:	e883 0003 	stmia.w	r3, {r0, r1}
 801a3f6:	4611      	mov	r1, r2
 801a3f8:	4618      	mov	r0, r3
 801a3fa:	f7f8 fb8f 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 801a3fe:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a402:	f9b4 1000 	ldrsh.w	r1, [r4]
 801a406:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801a40a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801a40e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801a412:	4299      	cmp	r1, r3
 801a414:	d10b      	bne.n	801a42e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a416:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a41a:	4552      	cmp	r2, sl
 801a41c:	d107      	bne.n	801a42e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a41e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801a422:	455a      	cmp	r2, fp
 801a424:	d103      	bne.n	801a42e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a426:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801a42a:	454a      	cmp	r2, r9
 801a42c:	d06d      	beq.n	801a50a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a42e:	f1bb 0f00 	cmp.w	fp, #0
 801a432:	dd65      	ble.n	801a500 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a434:	f1b9 0f00 	cmp.w	r9, #0
 801a438:	dd62      	ble.n	801a500 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a43a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a43e:	fa1f f08a 	uxth.w	r0, sl
 801a442:	4552      	cmp	r2, sl
 801a444:	9000      	str	r0, [sp, #0]
 801a446:	da12      	bge.n	801a46e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801a448:	9301      	str	r3, [sp, #4]
 801a44a:	9b00      	ldr	r3, [sp, #0]
 801a44c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a450:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a454:	1a9a      	subs	r2, r3, r2
 801a456:	f8ad 1010 	strh.w	r1, [sp, #16]
 801a45a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a45e:	f8ad 2016 	strh.w	r2, [sp, #22]
 801a462:	69ea      	ldr	r2, [r5, #28]
 801a464:	4631      	mov	r1, r6
 801a466:	4640      	mov	r0, r8
 801a468:	f7ff ff7a 	bl	801a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a46c:	9b01      	ldr	r3, [sp, #4]
 801a46e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a472:	429a      	cmp	r2, r3
 801a474:	b29f      	uxth	r7, r3
 801a476:	da0d      	bge.n	801a494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801a478:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a47c:	1aba      	subs	r2, r7, r2
 801a47e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a482:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a486:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a48a:	69ea      	ldr	r2, [r5, #28]
 801a48c:	4631      	mov	r1, r6
 801a48e:	4640      	mov	r0, r8
 801a490:	f7ff ff66 	bl	801a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a494:	8822      	ldrh	r2, [r4, #0]
 801a496:	88a3      	ldrh	r3, [r4, #4]
 801a498:	445f      	add	r7, fp
 801a49a:	4413      	add	r3, r2
 801a49c:	b29b      	uxth	r3, r3
 801a49e:	b2bf      	uxth	r7, r7
 801a4a0:	b23a      	sxth	r2, r7
 801a4a2:	b219      	sxth	r1, r3
 801a4a4:	4291      	cmp	r1, r2
 801a4a6:	dd0d      	ble.n	801a4c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801a4a8:	1bdb      	subs	r3, r3, r7
 801a4aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a4ae:	f8ad a012 	strh.w	sl, [sp, #18]
 801a4b2:	f8ad 3014 	strh.w	r3, [sp, #20]
 801a4b6:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a4ba:	69ea      	ldr	r2, [r5, #28]
 801a4bc:	4631      	mov	r1, r6
 801a4be:	4640      	mov	r0, r8
 801a4c0:	f7ff ff4e 	bl	801a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a4c4:	88e2      	ldrh	r2, [r4, #6]
 801a4c6:	8863      	ldrh	r3, [r4, #2]
 801a4c8:	4413      	add	r3, r2
 801a4ca:	9a00      	ldr	r2, [sp, #0]
 801a4cc:	444a      	add	r2, r9
 801a4ce:	b29b      	uxth	r3, r3
 801a4d0:	fa1f f982 	uxth.w	r9, r2
 801a4d4:	fa0f f289 	sxth.w	r2, r9
 801a4d8:	b219      	sxth	r1, r3
 801a4da:	428a      	cmp	r2, r1
 801a4dc:	da15      	bge.n	801a50a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a4de:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a4e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a4e6:	f8ad 1014 	strh.w	r1, [sp, #20]
 801a4ea:	eba3 0309 	sub.w	r3, r3, r9
 801a4ee:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a4f2:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a4f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a4fa:	69ea      	ldr	r2, [r5, #28]
 801a4fc:	4631      	mov	r1, r6
 801a4fe:	e001      	b.n	801a504 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801a500:	69ea      	ldr	r2, [r5, #28]
 801a502:	4621      	mov	r1, r4
 801a504:	4640      	mov	r0, r8
 801a506:	f7ff ff2b 	bl	801a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a50a:	4628      	mov	r0, r5
 801a50c:	f7ff fe94 	bl	801a238 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a510:	6861      	ldr	r1, [r4, #4]
 801a512:	4602      	mov	r2, r0
 801a514:	6820      	ldr	r0, [r4, #0]
 801a516:	4633      	mov	r3, r6
 801a518:	c303      	stmia	r3!, {r0, r1}
 801a51a:	4611      	mov	r1, r2
 801a51c:	4630      	mov	r0, r6
 801a51e:	f7f8 fafd 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 801a522:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801a526:	2b00      	cmp	r3, #0
 801a528:	f77f af33 	ble.w	801a392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a52c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801a530:	2b00      	cmp	r3, #0
 801a532:	f77f af2e 	ble.w	801a392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a536:	4628      	mov	r0, r5
 801a538:	f7ff fe9a 	bl	801a270 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a53c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801a540:	1a18      	subs	r0, r3, r0
 801a542:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a546:	4628      	mov	r0, r5
 801a548:	f7ff fea6 	bl	801a298 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a54c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a550:	1a18      	subs	r0, r3, r0
 801a552:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a556:	682b      	ldr	r3, [r5, #0]
 801a558:	4631      	mov	r1, r6
 801a55a:	689b      	ldr	r3, [r3, #8]
 801a55c:	4628      	mov	r0, r5
 801a55e:	4798      	blx	r3
 801a560:	e717      	b.n	801a392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801a562 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801a562:	b570      	push	{r4, r5, r6, lr}
 801a564:	460c      	mov	r4, r1
 801a566:	b086      	sub	sp, #24
 801a568:	1d06      	adds	r6, r0, #4
 801a56a:	2300      	movs	r3, #0
 801a56c:	4631      	mov	r1, r6
 801a56e:	4605      	mov	r5, r0
 801a570:	a802      	add	r0, sp, #8
 801a572:	9301      	str	r3, [sp, #4]
 801a574:	f7ff fba8 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a578:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a57c:	8822      	ldrh	r2, [r4, #0]
 801a57e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801a582:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a586:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a58a:	1ad2      	subs	r2, r2, r3
 801a58c:	8863      	ldrh	r3, [r4, #2]
 801a58e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a592:	1a5b      	subs	r3, r3, r1
 801a594:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801a598:	f8ad 1016 	strh.w	r1, [sp, #22]
 801a59c:	aa01      	add	r2, sp, #4
 801a59e:	a904      	add	r1, sp, #16
 801a5a0:	4630      	mov	r0, r6
 801a5a2:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a5a6:	f7f8 fb91 	bl	8012ccc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801a5aa:	9a01      	ldr	r2, [sp, #4]
 801a5ac:	b11a      	cbz	r2, 801a5b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801a5ae:	4621      	mov	r1, r4
 801a5b0:	4628      	mov	r0, r5
 801a5b2:	f7ff fed5 	bl	801a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a5b6:	b006      	add	sp, #24
 801a5b8:	bd70      	pop	{r4, r5, r6, pc}

0801a5ba <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801a5ba:	b530      	push	{r4, r5, lr}
 801a5bc:	4602      	mov	r2, r0
 801a5be:	4604      	mov	r4, r0
 801a5c0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801a5c4:	b085      	sub	sp, #20
 801a5c6:	460d      	mov	r5, r1
 801a5c8:	6851      	ldr	r1, [r2, #4]
 801a5ca:	466b      	mov	r3, sp
 801a5cc:	c303      	stmia	r3!, {r0, r1}
 801a5ce:	4629      	mov	r1, r5
 801a5d0:	4668      	mov	r0, sp
 801a5d2:	f7f8 faa3 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 801a5d6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a5da:	b12b      	cbz	r3, 801a5e8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801a5dc:	4669      	mov	r1, sp
 801a5de:	4620      	mov	r0, r4
 801a5e0:	f7ff ffbf 	bl	801a562 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801a5e4:	b005      	add	sp, #20
 801a5e6:	bd30      	pop	{r4, r5, pc}
 801a5e8:	3404      	adds	r4, #4
 801a5ea:	4621      	mov	r1, r4
 801a5ec:	a802      	add	r0, sp, #8
 801a5ee:	f7ff fb6b 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a5f2:	f8bd 3000 	ldrh.w	r3, [sp]
 801a5f6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801a5fa:	1a9b      	subs	r3, r3, r2
 801a5fc:	f8ad 3000 	strh.w	r3, [sp]
 801a600:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a604:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a608:	4669      	mov	r1, sp
 801a60a:	1a9b      	subs	r3, r3, r2
 801a60c:	4620      	mov	r0, r4
 801a60e:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a612:	f7f8 fb22 	bl	8012c5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801a616:	e7e5      	b.n	801a5e4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801a618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801a618:	680a      	ldr	r2, [r1, #0]
 801a61a:	460b      	mov	r3, r1
 801a61c:	6992      	ldr	r2, [r2, #24]
 801a61e:	1d01      	adds	r1, r0, #4
 801a620:	4618      	mov	r0, r3
 801a622:	4710      	bx	r2

0801a624 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 801a624:	4298      	cmp	r0, r3
 801a626:	d200      	bcs.n	801a62a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 801a628:	b913      	cbnz	r3, 801a630 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801a62a:	440a      	add	r2, r1
 801a62c:	b210      	sxth	r0, r2
 801a62e:	4770      	bx	lr
 801a630:	ee07 0a90 	vmov	s15, r0
 801a634:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a638:	ee07 3a90 	vmov	s15, r3
 801a63c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a640:	eddf 4a15 	vldr	s9, [pc, #84]	; 801a698 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 801a644:	eddf 5a15 	vldr	s11, [pc, #84]	; 801a69c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 801a648:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a64c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a650:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a654:	ee07 2a90 	vmov	s15, r2
 801a658:	eee7 5a24 	vfma.f32	s11, s14, s9
 801a65c:	ee27 5a07 	vmul.f32	s10, s14, s14
 801a660:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a664:	eee5 6a25 	vfma.f32	s13, s10, s11
 801a668:	ee07 1a90 	vmov	s15, r1
 801a66c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a670:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a674:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a678:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a67c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a680:	bfcc      	ite	gt
 801a682:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a686:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a68a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a68e:	ee17 3a90 	vmov	r3, s15
 801a692:	b218      	sxth	r0, r3
 801a694:	4770      	bx	lr
 801a696:	bf00      	nop
 801a698:	402ce6b0 	.word	0x402ce6b0
 801a69c:	3fd9cd60 	.word	0x3fd9cd60

0801a6a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801a6a0:	4298      	cmp	r0, r3
 801a6a2:	d200      	bcs.n	801a6a6 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801a6a4:	b913      	cbnz	r3, 801a6ac <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801a6a6:	440a      	add	r2, r1
 801a6a8:	b210      	sxth	r0, r2
 801a6aa:	4770      	bx	lr
 801a6ac:	ee07 0a90 	vmov	s15, r0
 801a6b0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a6b4:	ee07 3a90 	vmov	s15, r3
 801a6b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a6bc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a6c0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a6c4:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a6c8:	ee07 2a90 	vmov	s15, r2
 801a6cc:	ee67 5a07 	vmul.f32	s11, s14, s14
 801a6d0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a6d4:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a6d8:	ee07 1a90 	vmov	s15, r1
 801a6dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a6e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a6e4:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a6e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a6ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6f0:	bfcc      	ite	gt
 801a6f2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a6f6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a6fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a6fe:	ee17 3a90 	vmov	r3, s15
 801a702:	b218      	sxth	r0, r3
 801a704:	4770      	bx	lr

0801a706 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801a706:	4298      	cmp	r0, r3
 801a708:	d200      	bcs.n	801a70c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801a70a:	b913      	cbnz	r3, 801a712 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801a70c:	440a      	add	r2, r1
 801a70e:	b210      	sxth	r0, r2
 801a710:	4770      	bx	lr
 801a712:	ee07 2a90 	vmov	s15, r2
 801a716:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801a71a:	ee07 0a90 	vmov	s15, r0
 801a71e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801a722:	ee67 7a27 	vmul.f32	s15, s14, s15
 801a726:	ee07 3a10 	vmov	s14, r3
 801a72a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801a72e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a732:	ee07 1a90 	vmov	s15, r1
 801a736:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a73a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a73e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a742:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a746:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a74a:	bfcc      	ite	gt
 801a74c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a750:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a754:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a758:	ee17 3a90 	vmov	r3, s15
 801a75c:	b218      	sxth	r0, r3
 801a75e:	4770      	bx	lr

0801a760 <_ZN8touchgfx12TextProviderC1Ev>:
 801a760:	b538      	push	{r3, r4, r5, lr}
 801a762:	2500      	movs	r5, #0
 801a764:	2302      	movs	r3, #2
 801a766:	4604      	mov	r4, r0
 801a768:	e9c0 5500 	strd	r5, r5, [r0]
 801a76c:	7403      	strb	r3, [r0, #16]
 801a76e:	6145      	str	r5, [r0, #20]
 801a770:	7605      	strb	r5, [r0, #24]
 801a772:	83c5      	strh	r5, [r0, #30]
 801a774:	8405      	strh	r5, [r0, #32]
 801a776:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a778:	8705      	strh	r5, [r0, #56]	; 0x38
 801a77a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801a77c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801a780:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801a784:	220e      	movs	r2, #14
 801a786:	4629      	mov	r1, r5
 801a788:	304c      	adds	r0, #76	; 0x4c
 801a78a:	f013 faee 	bl	802dd6a <memset>
 801a78e:	2301      	movs	r3, #1
 801a790:	4620      	mov	r0, r4
 801a792:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801a796:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a79a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801a79e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801a7a2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801a7a6:	f7ef ff2b 	bl	800a600 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801a7aa:	4620      	mov	r0, r4
 801a7ac:	bd38      	pop	{r3, r4, r5, pc}

0801a7ae <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801a7ae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a7b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a7b4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801a7b6:	fab0 f080 	clz	r0, r0
 801a7ba:	0940      	lsrs	r0, r0, #5
 801a7bc:	4770      	bx	lr

0801a7be <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801a7be:	b530      	push	{r4, r5, lr}
 801a7c0:	2500      	movs	r5, #0
 801a7c2:	2401      	movs	r4, #1
 801a7c4:	6843      	ldr	r3, [r0, #4]
 801a7c6:	b913      	cbnz	r3, 801a7ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801a7c8:	6803      	ldr	r3, [r0, #0]
 801a7ca:	b313      	cbz	r3, 801a812 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a7cc:	6043      	str	r3, [r0, #4]
 801a7ce:	7e03      	ldrb	r3, [r0, #24]
 801a7d0:	b143      	cbz	r3, 801a7e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801a7d2:	6943      	ldr	r3, [r0, #20]
 801a7d4:	b12b      	cbz	r3, 801a7e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a7d6:	881a      	ldrh	r2, [r3, #0]
 801a7d8:	b11a      	cbz	r2, 801a7e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a7da:	1c9a      	adds	r2, r3, #2
 801a7dc:	6142      	str	r2, [r0, #20]
 801a7de:	8818      	ldrh	r0, [r3, #0]
 801a7e0:	bd30      	pop	{r4, r5, pc}
 801a7e2:	7605      	strb	r5, [r0, #24]
 801a7e4:	6843      	ldr	r3, [r0, #4]
 801a7e6:	8819      	ldrh	r1, [r3, #0]
 801a7e8:	b199      	cbz	r1, 801a812 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a7ea:	1c9a      	adds	r2, r3, #2
 801a7ec:	2902      	cmp	r1, #2
 801a7ee:	6042      	str	r2, [r0, #4]
 801a7f0:	d1f5      	bne.n	801a7de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801a7f2:	7c03      	ldrb	r3, [r0, #16]
 801a7f4:	2b01      	cmp	r3, #1
 801a7f6:	d8e5      	bhi.n	801a7c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7f8:	1c5a      	adds	r2, r3, #1
 801a7fa:	3302      	adds	r3, #2
 801a7fc:	7402      	strb	r2, [r0, #16]
 801a7fe:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801a802:	6143      	str	r3, [r0, #20]
 801a804:	2b00      	cmp	r3, #0
 801a806:	d0dd      	beq.n	801a7c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a808:	881b      	ldrh	r3, [r3, #0]
 801a80a:	2b00      	cmp	r3, #0
 801a80c:	d0da      	beq.n	801a7c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a80e:	7604      	strb	r4, [r0, #24]
 801a810:	e7d8      	b.n	801a7c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a812:	2000      	movs	r0, #0
 801a814:	e7e4      	b.n	801a7e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801a816 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801a816:	b430      	push	{r4, r5}
 801a818:	6001      	str	r1, [r0, #0]
 801a81a:	2100      	movs	r1, #0
 801a81c:	6041      	str	r1, [r0, #4]
 801a81e:	6815      	ldr	r5, [r2, #0]
 801a820:	6085      	str	r5, [r0, #8]
 801a822:	6852      	ldr	r2, [r2, #4]
 801a824:	6443      	str	r3, [r0, #68]	; 0x44
 801a826:	9b02      	ldr	r3, [sp, #8]
 801a828:	60c2      	str	r2, [r0, #12]
 801a82a:	7401      	strb	r1, [r0, #16]
 801a82c:	6141      	str	r1, [r0, #20]
 801a82e:	7601      	strb	r1, [r0, #24]
 801a830:	8701      	strh	r1, [r0, #56]	; 0x38
 801a832:	8401      	strh	r1, [r0, #32]
 801a834:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801a838:	6483      	str	r3, [r0, #72]	; 0x48
 801a83a:	bc30      	pop	{r4, r5}
 801a83c:	f7ef bee0 	b.w	800a600 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801a840 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801a840:	b408      	push	{r3}
 801a842:	b510      	push	{r4, lr}
 801a844:	b085      	sub	sp, #20
 801a846:	ac07      	add	r4, sp, #28
 801a848:	f854 3b04 	ldr.w	r3, [r4], #4
 801a84c:	9300      	str	r3, [sp, #0]
 801a84e:	4613      	mov	r3, r2
 801a850:	4622      	mov	r2, r4
 801a852:	9403      	str	r4, [sp, #12]
 801a854:	f7ff ffdf 	bl	801a816 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a858:	b005      	add	sp, #20
 801a85a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a85e:	b001      	add	sp, #4
 801a860:	4770      	bx	lr

0801a862 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801a862:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a864:	4605      	mov	r5, r0
 801a866:	4608      	mov	r0, r1
 801a868:	b1e9      	cbz	r1, 801a8a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801a86a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801a86e:	460b      	mov	r3, r1
 801a870:	f101 0708 	add.w	r7, r1, #8
 801a874:	4622      	mov	r2, r4
 801a876:	6818      	ldr	r0, [r3, #0]
 801a878:	6859      	ldr	r1, [r3, #4]
 801a87a:	4626      	mov	r6, r4
 801a87c:	c603      	stmia	r6!, {r0, r1}
 801a87e:	3308      	adds	r3, #8
 801a880:	42bb      	cmp	r3, r7
 801a882:	4634      	mov	r4, r6
 801a884:	d1f7      	bne.n	801a876 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801a886:	6818      	ldr	r0, [r3, #0]
 801a888:	6030      	str	r0, [r6, #0]
 801a88a:	889b      	ldrh	r3, [r3, #4]
 801a88c:	80b3      	strh	r3, [r6, #4]
 801a88e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801a892:	015b      	lsls	r3, r3, #5
 801a894:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a898:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801a89c:	430b      	orrs	r3, r1
 801a89e:	425b      	negs	r3, r3
 801a8a0:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801a8a4:	4610      	mov	r0, r2
 801a8a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a8a8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801a8a8:	b538      	push	{r3, r4, r5, lr}
 801a8aa:	460c      	mov	r4, r1
 801a8ac:	6811      	ldr	r1, [r2, #0]
 801a8ae:	4610      	mov	r0, r2
 801a8b0:	68cd      	ldr	r5, [r1, #12]
 801a8b2:	4619      	mov	r1, r3
 801a8b4:	47a8      	blx	r5
 801a8b6:	2800      	cmp	r0, #0
 801a8b8:	bf08      	it	eq
 801a8ba:	4620      	moveq	r0, r4
 801a8bc:	bd38      	pop	{r3, r4, r5, pc}
	...

0801a8c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801a8c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a8c2:	4604      	mov	r4, r0
 801a8c4:	4615      	mov	r5, r2
 801a8c6:	4608      	mov	r0, r1
 801a8c8:	b93a      	cbnz	r2, 801a8da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801a8ca:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801a8ce:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801a8d2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801a8d6:	4628      	mov	r0, r5
 801a8d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a8da:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801a8de:	8893      	ldrh	r3, [r2, #4]
 801a8e0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801a8e4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801a8e8:	79ee      	ldrb	r6, [r5, #7]
 801a8ea:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801a8ee:	4316      	orrs	r6, r2
 801a8f0:	19da      	adds	r2, r3, r7
 801a8f2:	b291      	uxth	r1, r2
 801a8f4:	291d      	cmp	r1, #29
 801a8f6:	b2b7      	uxth	r7, r6
 801a8f8:	d87a      	bhi.n	801a9f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a8fa:	2201      	movs	r2, #1
 801a8fc:	408a      	lsls	r2, r1
 801a8fe:	4975      	ldr	r1, [pc, #468]	; (801aad4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801a900:	420a      	tst	r2, r1
 801a902:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801a906:	d12d      	bne.n	801a964 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801a908:	f412 7f60 	tst.w	r2, #896	; 0x380
 801a90c:	d070      	beq.n	801a9f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a90e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801a912:	462b      	mov	r3, r5
 801a914:	f105 0e08 	add.w	lr, r5, #8
 801a918:	4615      	mov	r5, r2
 801a91a:	6818      	ldr	r0, [r3, #0]
 801a91c:	6859      	ldr	r1, [r3, #4]
 801a91e:	4694      	mov	ip, r2
 801a920:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801a924:	3308      	adds	r3, #8
 801a926:	4573      	cmp	r3, lr
 801a928:	4662      	mov	r2, ip
 801a92a:	d1f6      	bne.n	801a91a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801a92c:	6818      	ldr	r0, [r3, #0]
 801a92e:	f8cc 0000 	str.w	r0, [ip]
 801a932:	889b      	ldrh	r3, [r3, #4]
 801a934:	f8ac 3004 	strh.w	r3, [ip, #4]
 801a938:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801a93c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801a940:	b2b3      	uxth	r3, r6
 801a942:	1aca      	subs	r2, r1, r3
 801a944:	b292      	uxth	r2, r2
 801a946:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801a94a:	10d2      	asrs	r2, r2, #3
 801a94c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801a950:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801a954:	4302      	orrs	r2, r0
 801a956:	1bcf      	subs	r7, r1, r7
 801a958:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801a95c:	1afb      	subs	r3, r7, r3
 801a95e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801a962:	e7b8      	b.n	801a8d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a964:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801a966:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a96a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801a96c:	f640 6333 	movw	r3, #3635	; 0xe33
 801a970:	4299      	cmp	r1, r3
 801a972:	d110      	bne.n	801a996 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801a974:	6803      	ldr	r3, [r0, #0]
 801a976:	68db      	ldr	r3, [r3, #12]
 801a978:	4798      	blx	r3
 801a97a:	7b41      	ldrb	r1, [r0, #13]
 801a97c:	00cb      	lsls	r3, r1, #3
 801a97e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a982:	7a03      	ldrb	r3, [r0, #8]
 801a984:	0648      	lsls	r0, r1, #25
 801a986:	ea43 0302 	orr.w	r3, r3, r2
 801a98a:	bf44      	itt	mi
 801a98c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a990:	b21b      	sxthmi	r3, r3
 801a992:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a996:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801a99a:	443b      	add	r3, r7
 801a99c:	4433      	add	r3, r6
 801a99e:	b29b      	uxth	r3, r3
 801a9a0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801a9a4:	462a      	mov	r2, r5
 801a9a6:	f105 0c08 	add.w	ip, r5, #8
 801a9aa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a9ae:	4635      	mov	r5, r6
 801a9b0:	6810      	ldr	r0, [r2, #0]
 801a9b2:	6851      	ldr	r1, [r2, #4]
 801a9b4:	4637      	mov	r7, r6
 801a9b6:	c703      	stmia	r7!, {r0, r1}
 801a9b8:	3208      	adds	r2, #8
 801a9ba:	4562      	cmp	r2, ip
 801a9bc:	463e      	mov	r6, r7
 801a9be:	d1f7      	bne.n	801a9b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801a9c0:	6810      	ldr	r0, [r2, #0]
 801a9c2:	6038      	str	r0, [r7, #0]
 801a9c4:	8892      	ldrh	r2, [r2, #4]
 801a9c6:	80ba      	strh	r2, [r7, #4]
 801a9c8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801a9cc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801a9d0:	10db      	asrs	r3, r3, #3
 801a9d2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801a9d6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a9da:	4313      	orrs	r3, r2
 801a9dc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801a9e0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801a9e4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801a9e8:	1a9b      	subs	r3, r3, r2
 801a9ea:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801a9ee:	e772      	b.n	801a8d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a9f0:	f023 0204 	bic.w	r2, r3, #4
 801a9f4:	f640 611b 	movw	r1, #3611	; 0xe1b
 801a9f8:	428a      	cmp	r2, r1
 801a9fa:	d003      	beq.n	801aa04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801a9fc:	f640 621d 	movw	r2, #3613	; 0xe1d
 801aa00:	4293      	cmp	r3, r2
 801aa02:	d120      	bne.n	801aa46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801aa04:	3b01      	subs	r3, #1
 801aa06:	4602      	mov	r2, r0
 801aa08:	b29b      	uxth	r3, r3
 801aa0a:	4629      	mov	r1, r5
 801aa0c:	4620      	mov	r0, r4
 801aa0e:	f7ff ff4b 	bl	801a8a8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801aa12:	7b41      	ldrb	r1, [r0, #13]
 801aa14:	00cb      	lsls	r3, r1, #3
 801aa16:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aa1a:	7a03      	ldrb	r3, [r0, #8]
 801aa1c:	0649      	lsls	r1, r1, #25
 801aa1e:	ea43 0302 	orr.w	r3, r3, r2
 801aa22:	bf44      	itt	mi
 801aa24:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aa28:	b21b      	sxthmi	r3, r3
 801aa2a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aa2e:	7b6b      	ldrb	r3, [r5, #13]
 801aa30:	7aaa      	ldrb	r2, [r5, #10]
 801aa32:	005b      	lsls	r3, r3, #1
 801aa34:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801aa38:	4313      	orrs	r3, r2
 801aa3a:	115a      	asrs	r2, r3, #5
 801aa3c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801aa40:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aa44:	e036      	b.n	801aab4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801aa46:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801aa4a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801aa4e:	7a2a      	ldrb	r2, [r5, #8]
 801aa50:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801aa54:	ea42 0201 	orr.w	r2, r2, r1
 801aa58:	bf1c      	itt	ne
 801aa5a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801aa5e:	b212      	sxthne	r2, r2
 801aa60:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801aa64:	f640 6109 	movw	r1, #3593	; 0xe09
 801aa68:	f023 0210 	bic.w	r2, r3, #16
 801aa6c:	428a      	cmp	r2, r1
 801aa6e:	d003      	beq.n	801aa78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801aa70:	f640 6213 	movw	r2, #3603	; 0xe13
 801aa74:	4293      	cmp	r3, r2
 801aa76:	d12a      	bne.n	801aace <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801aa78:	7b6e      	ldrb	r6, [r5, #13]
 801aa7a:	0076      	lsls	r6, r6, #1
 801aa7c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801aa80:	7aae      	ldrb	r6, [r5, #10]
 801aa82:	4316      	orrs	r6, r2
 801aa84:	f640 6213 	movw	r2, #3603	; 0xe13
 801aa88:	4293      	cmp	r3, r2
 801aa8a:	bf18      	it	ne
 801aa8c:	f103 33ff 	addne.w	r3, r3, #4294967295
 801aa90:	4602      	mov	r2, r0
 801aa92:	bf14      	ite	ne
 801aa94:	b29b      	uxthne	r3, r3
 801aa96:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801aa9a:	4629      	mov	r1, r5
 801aa9c:	4620      	mov	r0, r4
 801aa9e:	f7ff ff03 	bl	801a8a8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801aaa2:	7b43      	ldrb	r3, [r0, #13]
 801aaa4:	7a82      	ldrb	r2, [r0, #10]
 801aaa6:	005b      	lsls	r3, r3, #1
 801aaa8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801aaac:	4313      	orrs	r3, r2
 801aaae:	1af6      	subs	r6, r6, r3
 801aab0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801aab4:	7b69      	ldrb	r1, [r5, #13]
 801aab6:	00cb      	lsls	r3, r1, #3
 801aab8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aabc:	7a2b      	ldrb	r3, [r5, #8]
 801aabe:	4313      	orrs	r3, r2
 801aac0:	064a      	lsls	r2, r1, #25
 801aac2:	bf44      	itt	mi
 801aac4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aac8:	b21b      	sxthmi	r3, r3
 801aaca:	1bdb      	subs	r3, r3, r7
 801aacc:	e747      	b.n	801a95e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801aace:	2300      	movs	r3, #0
 801aad0:	e7b6      	b.n	801aa40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801aad2:	bf00      	nop
 801aad4:	3fc00079 	.word	0x3fc00079

0801aad8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801aad8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801aadc:	4604      	mov	r4, r0
 801aade:	b942      	cbnz	r2, 801aaf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801aae0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801aae4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801aae8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801aaec:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aaf0:	e047      	b.n	801ab82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801aaf2:	7b51      	ldrb	r1, [r2, #13]
 801aaf4:	8893      	ldrh	r3, [r2, #4]
 801aaf6:	010d      	lsls	r5, r1, #4
 801aaf8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801aafc:	79d5      	ldrb	r5, [r2, #7]
 801aafe:	4305      	orrs	r5, r0
 801ab00:	2d04      	cmp	r5, #4
 801ab02:	bfcc      	ite	gt
 801ab04:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801ab08:	f04f 0e01 	movle.w	lr, #1
 801ab0c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801ab10:	f200 80ab 	bhi.w	801ac6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801ab14:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801ab18:	4283      	cmp	r3, r0
 801ab1a:	d216      	bcs.n	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab1c:	f240 605b 	movw	r0, #1627	; 0x65b
 801ab20:	4283      	cmp	r3, r0
 801ab22:	d859      	bhi.n	801abd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801ab24:	f240 6057 	movw	r0, #1623	; 0x657
 801ab28:	4283      	cmp	r3, r0
 801ab2a:	d20e      	bcs.n	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab2c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ab30:	d24a      	bcs.n	801abc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801ab32:	f240 604e 	movw	r0, #1614	; 0x64e
 801ab36:	4283      	cmp	r3, r0
 801ab38:	d207      	bcs.n	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab3a:	f240 601a 	movw	r0, #1562	; 0x61a
 801ab3e:	4283      	cmp	r3, r0
 801ab40:	d02a      	beq.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab42:	d821      	bhi.n	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801ab44:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801ab48:	d35b      	bcc.n	801ac02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ab4a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801ab4e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ab52:	f040 80d0 	bne.w	801acf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ab56:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801ab5a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ab5e:	f040 80ca 	bne.w	801acf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ab62:	00cb      	lsls	r3, r1, #3
 801ab64:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ab68:	7a13      	ldrb	r3, [r2, #8]
 801ab6a:	0649      	lsls	r1, r1, #25
 801ab6c:	ea43 0300 	orr.w	r3, r3, r0
 801ab70:	bf44      	itt	mi
 801ab72:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ab76:	b21b      	sxthmi	r3, r3
 801ab78:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ab7c:	1b5d      	subs	r5, r3, r5
 801ab7e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ab82:	4610      	mov	r0, r2
 801ab84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ab88:	f240 604b 	movw	r0, #1611	; 0x64b
 801ab8c:	4283      	cmp	r3, r0
 801ab8e:	d338      	bcc.n	801ac02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ab90:	f240 604c 	movw	r0, #1612	; 0x64c
 801ab94:	4283      	cmp	r3, r0
 801ab96:	d9d8      	bls.n	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab98:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801ab9c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801aba0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801aba4:	f040 80f2 	bne.w	801ad8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801aba8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801abac:	f040 80ee 	bne.w	801ad8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801abb0:	00cb      	lsls	r3, r1, #3
 801abb2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801abb6:	7a13      	ldrb	r3, [r2, #8]
 801abb8:	064e      	lsls	r6, r1, #25
 801abba:	ea43 0300 	orr.w	r3, r3, r0
 801abbe:	bf44      	itt	mi
 801abc0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801abc4:	b21b      	sxthmi	r3, r3
 801abc6:	e7d9      	b.n	801ab7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801abc8:	f240 6054 	movw	r0, #1620	; 0x654
 801abcc:	4283      	cmp	r3, r0
 801abce:	d8e3      	bhi.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abd0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801abd4:	d9e0      	bls.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abd6:	e7b8      	b.n	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abd8:	f240 6074 	movw	r0, #1652	; 0x674
 801abdc:	4283      	cmp	r3, r0
 801abde:	d0b4      	beq.n	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abe0:	d82d      	bhi.n	801ac3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801abe2:	f240 605e 	movw	r0, #1630	; 0x65e
 801abe6:	4283      	cmp	r3, r0
 801abe8:	d804      	bhi.n	801abf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801abea:	f240 605d 	movw	r0, #1629	; 0x65d
 801abee:	4283      	cmp	r3, r0
 801abf0:	d3d2      	bcc.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abf2:	e7aa      	b.n	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abf4:	f240 605f 	movw	r0, #1631	; 0x65f
 801abf8:	4283      	cmp	r3, r0
 801abfa:	d0cd      	beq.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abfc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801ac00:	d0a3      	beq.n	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac02:	00cb      	lsls	r3, r1, #3
 801ac04:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ac08:	7a13      	ldrb	r3, [r2, #8]
 801ac0a:	0649      	lsls	r1, r1, #25
 801ac0c:	ea43 0300 	orr.w	r3, r3, r0
 801ac10:	bf44      	itt	mi
 801ac12:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ac16:	b21b      	sxthmi	r3, r3
 801ac18:	1b5d      	subs	r5, r3, r5
 801ac1a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ac1e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ac22:	7b53      	ldrb	r3, [r2, #13]
 801ac24:	015b      	lsls	r3, r3, #5
 801ac26:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801ac2a:	7993      	ldrb	r3, [r2, #6]
 801ac2c:	430b      	orrs	r3, r1
 801ac2e:	005b      	lsls	r3, r3, #1
 801ac30:	2105      	movs	r1, #5
 801ac32:	fb93 f3f1 	sdiv	r3, r3, r1
 801ac36:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801ac3a:	440b      	add	r3, r1
 801ac3c:	e756      	b.n	801aaec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801ac3e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801ac42:	4283      	cmp	r3, r0
 801ac44:	d809      	bhi.n	801ac5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801ac46:	f240 60df 	movw	r0, #1759	; 0x6df
 801ac4a:	4283      	cmp	r3, r0
 801ac4c:	f4bf af7d 	bcs.w	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac50:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801ac54:	2b05      	cmp	r3, #5
 801ac56:	d8d4      	bhi.n	801ac02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ac58:	e777      	b.n	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac5a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801ac5e:	4283      	cmp	r3, r0
 801ac60:	d09a      	beq.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac62:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801ac66:	4283      	cmp	r3, r0
 801ac68:	e7ca      	b.n	801ac00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801ac6a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801ac6e:	d22b      	bcs.n	801acc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801ac70:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801ac74:	4283      	cmp	r3, r0
 801ac76:	d28f      	bcs.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac78:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801ac7c:	4283      	cmp	r3, r0
 801ac7e:	d816      	bhi.n	801acae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801ac80:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801ac84:	4283      	cmp	r3, r0
 801ac86:	f4bf af60 	bcs.w	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac8a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801ac8e:	4283      	cmp	r3, r0
 801ac90:	d80a      	bhi.n	801aca8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801ac92:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801ac96:	4283      	cmp	r3, r0
 801ac98:	f4bf af57 	bcs.w	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac9c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801aca0:	4283      	cmp	r3, r0
 801aca2:	f43f af79 	beq.w	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aca6:	e7ac      	b.n	801ac02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801aca8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801acac:	e7f8      	b.n	801aca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801acae:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801acb2:	4283      	cmp	r3, r0
 801acb4:	d802      	bhi.n	801acbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801acb6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801acba:	e798      	b.n	801abee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801acbc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801acc0:	4283      	cmp	r3, r0
 801acc2:	f47f af42 	bne.w	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801acc6:	e767      	b.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acc8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801accc:	4283      	cmp	r3, r0
 801acce:	f43f af63 	beq.w	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acd2:	d802      	bhi.n	801acda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801acd4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801acd8:	e7f2      	b.n	801acc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801acda:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801acde:	4283      	cmp	r3, r0
 801ace0:	d805      	bhi.n	801acee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801ace2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801ace6:	4283      	cmp	r3, r0
 801ace8:	f4ff af2f 	bcc.w	801ab4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801acec:	e754      	b.n	801ab98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acee:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801acf2:	4283      	cmp	r3, r0
 801acf4:	e7af      	b.n	801ac56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801acf6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801acfa:	4617      	mov	r7, r2
 801acfc:	f102 0808 	add.w	r8, r2, #8
 801ad00:	4666      	mov	r6, ip
 801ad02:	6838      	ldr	r0, [r7, #0]
 801ad04:	6879      	ldr	r1, [r7, #4]
 801ad06:	46e6      	mov	lr, ip
 801ad08:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801ad0c:	3708      	adds	r7, #8
 801ad0e:	4547      	cmp	r7, r8
 801ad10:	46f4      	mov	ip, lr
 801ad12:	d1f6      	bne.n	801ad02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801ad14:	6838      	ldr	r0, [r7, #0]
 801ad16:	f8ce 0000 	str.w	r0, [lr]
 801ad1a:	88b9      	ldrh	r1, [r7, #4]
 801ad1c:	f8ae 1004 	strh.w	r1, [lr, #4]
 801ad20:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ad24:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ad28:	d009      	beq.n	801ad3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801ad2a:	7b51      	ldrb	r1, [r2, #13]
 801ad2c:	7992      	ldrb	r2, [r2, #6]
 801ad2e:	0149      	lsls	r1, r1, #5
 801ad30:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801ad34:	4311      	orrs	r1, r2
 801ad36:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801ad3a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801ad3e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ad42:	b2ad      	uxth	r5, r5
 801ad44:	d00d      	beq.n	801ad62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801ad46:	442b      	add	r3, r5
 801ad48:	b29b      	uxth	r3, r3
 801ad4a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ad4e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ad52:	10db      	asrs	r3, r3, #3
 801ad54:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ad58:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ad5c:	4313      	orrs	r3, r2
 801ad5e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ad62:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801ad66:	00cb      	lsls	r3, r1, #3
 801ad68:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ad6c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801ad70:	064f      	lsls	r7, r1, #25
 801ad72:	ea43 0302 	orr.w	r3, r3, r2
 801ad76:	bf44      	itt	mi
 801ad78:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ad7c:	b21b      	sxthmi	r3, r3
 801ad7e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ad82:	1b5b      	subs	r3, r3, r5
 801ad84:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801ad88:	4632      	mov	r2, r6
 801ad8a:	e6fa      	b.n	801ab82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801ad8c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801ad90:	4617      	mov	r7, r2
 801ad92:	f102 0908 	add.w	r9, r2, #8
 801ad96:	4666      	mov	r6, ip
 801ad98:	6838      	ldr	r0, [r7, #0]
 801ad9a:	6879      	ldr	r1, [r7, #4]
 801ad9c:	46e0      	mov	r8, ip
 801ad9e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801ada2:	3708      	adds	r7, #8
 801ada4:	454f      	cmp	r7, r9
 801ada6:	46c4      	mov	ip, r8
 801ada8:	d1f6      	bne.n	801ad98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801adaa:	6838      	ldr	r0, [r7, #0]
 801adac:	f8c8 0000 	str.w	r0, [r8]
 801adb0:	88b9      	ldrh	r1, [r7, #4]
 801adb2:	f8a8 1004 	strh.w	r1, [r8, #4]
 801adb6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801adba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801adbe:	d009      	beq.n	801add4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801adc0:	7b51      	ldrb	r1, [r2, #13]
 801adc2:	7992      	ldrb	r2, [r2, #6]
 801adc4:	0149      	lsls	r1, r1, #5
 801adc6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801adca:	4311      	orrs	r1, r2
 801adcc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801add0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801add4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801add8:	d00e      	beq.n	801adf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801adda:	eba3 030e 	sub.w	r3, r3, lr
 801adde:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ade2:	b29b      	uxth	r3, r3
 801ade4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ade8:	10db      	asrs	r3, r3, #3
 801adea:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801adee:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801adf2:	4313      	orrs	r3, r2
 801adf4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801adf8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801adfc:	00cb      	lsls	r3, r1, #3
 801adfe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ae02:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801ae06:	0648      	lsls	r0, r1, #25
 801ae08:	ea43 0302 	orr.w	r3, r3, r2
 801ae0c:	bf44      	itt	mi
 801ae0e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ae12:	b21b      	sxthmi	r3, r3
 801ae14:	1b5d      	subs	r5, r3, r5
 801ae16:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ae1a:	e7b5      	b.n	801ad88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801ae1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801ae1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ae20:	461e      	mov	r6, r3
 801ae22:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801ae24:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ae28:	4604      	mov	r4, r0
 801ae2a:	4617      	mov	r7, r2
 801ae2c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801ae30:	f7ef fba4 	bl	800a57c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801ae34:	4605      	mov	r5, r0
 801ae36:	b918      	cbnz	r0, 801ae40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801ae38:	6030      	str	r0, [r6, #0]
 801ae3a:	4628      	mov	r0, r5
 801ae3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ae40:	683b      	ldr	r3, [r7, #0]
 801ae42:	4601      	mov	r1, r0
 801ae44:	68db      	ldr	r3, [r3, #12]
 801ae46:	4638      	mov	r0, r7
 801ae48:	4798      	blx	r3
 801ae4a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801ae4e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801ae52:	4602      	mov	r2, r0
 801ae54:	6030      	str	r0, [r6, #0]
 801ae56:	d213      	bcs.n	801ae80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801ae58:	4643      	mov	r3, r8
 801ae5a:	4639      	mov	r1, r7
 801ae5c:	4620      	mov	r0, r4
 801ae5e:	f7ff fe3b 	bl	801aad8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801ae62:	6030      	str	r0, [r6, #0]
 801ae64:	6833      	ldr	r3, [r6, #0]
 801ae66:	b143      	cbz	r3, 801ae7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801ae68:	7b5a      	ldrb	r2, [r3, #13]
 801ae6a:	7a9b      	ldrb	r3, [r3, #10]
 801ae6c:	0052      	lsls	r2, r2, #1
 801ae6e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801ae72:	4313      	orrs	r3, r2
 801ae74:	bf0c      	ite	eq
 801ae76:	2301      	moveq	r3, #1
 801ae78:	2300      	movne	r3, #0
 801ae7a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801ae7e:	e7dc      	b.n	801ae3a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801ae80:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801ae84:	b29b      	uxth	r3, r3
 801ae86:	2b7f      	cmp	r3, #127	; 0x7f
 801ae88:	d804      	bhi.n	801ae94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801ae8a:	4639      	mov	r1, r7
 801ae8c:	4620      	mov	r0, r4
 801ae8e:	f7ff fd17 	bl	801a8c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801ae92:	e7e6      	b.n	801ae62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801ae94:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801ae98:	2b00      	cmp	r3, #0
 801ae9a:	d0e3      	beq.n	801ae64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801ae9c:	f640 1302 	movw	r3, #2306	; 0x902
 801aea0:	429d      	cmp	r5, r3
 801aea2:	d1df      	bne.n	801ae64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801aea4:	4601      	mov	r1, r0
 801aea6:	4620      	mov	r0, r4
 801aea8:	f7ff fcdb 	bl	801a862 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801aeac:	e7d9      	b.n	801ae62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801aeae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801aeae:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801aeb2:	461e      	mov	r6, r3
 801aeb4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801aeb6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801aeba:	4604      	mov	r4, r0
 801aebc:	4617      	mov	r7, r2
 801aebe:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801aec2:	f7ef fb5b 	bl	800a57c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801aec6:	4605      	mov	r5, r0
 801aec8:	b918      	cbnz	r0, 801aed2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801aeca:	6030      	str	r0, [r6, #0]
 801aecc:	4628      	mov	r0, r5
 801aece:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801aed2:	683b      	ldr	r3, [r7, #0]
 801aed4:	4601      	mov	r1, r0
 801aed6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801aeda:	4638      	mov	r0, r7
 801aedc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801aee0:	47c8      	blx	r9
 801aee2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801aee6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801aeea:	4602      	mov	r2, r0
 801aeec:	6030      	str	r0, [r6, #0]
 801aeee:	d213      	bcs.n	801af18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801aef0:	4643      	mov	r3, r8
 801aef2:	4639      	mov	r1, r7
 801aef4:	4620      	mov	r0, r4
 801aef6:	f7ff fdef 	bl	801aad8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801aefa:	6030      	str	r0, [r6, #0]
 801aefc:	6833      	ldr	r3, [r6, #0]
 801aefe:	b143      	cbz	r3, 801af12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801af00:	7b5a      	ldrb	r2, [r3, #13]
 801af02:	7a9b      	ldrb	r3, [r3, #10]
 801af04:	0052      	lsls	r2, r2, #1
 801af06:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801af0a:	4313      	orrs	r3, r2
 801af0c:	bf0c      	ite	eq
 801af0e:	2301      	moveq	r3, #1
 801af10:	2300      	movne	r3, #0
 801af12:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801af16:	e7d9      	b.n	801aecc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801af18:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801af1c:	b29b      	uxth	r3, r3
 801af1e:	2b7f      	cmp	r3, #127	; 0x7f
 801af20:	d804      	bhi.n	801af2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801af22:	4639      	mov	r1, r7
 801af24:	4620      	mov	r0, r4
 801af26:	f7ff fccb 	bl	801a8c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801af2a:	e7e6      	b.n	801aefa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801af2c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801af30:	2b00      	cmp	r3, #0
 801af32:	d0e3      	beq.n	801aefc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801af34:	f640 1302 	movw	r3, #2306	; 0x902
 801af38:	429d      	cmp	r5, r3
 801af3a:	d1df      	bne.n	801aefc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801af3c:	4601      	mov	r1, r0
 801af3e:	4620      	mov	r0, r4
 801af40:	f7ff fc8f 	bl	801a862 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801af44:	e7d9      	b.n	801aefa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801af46 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801af46:	b510      	push	{r4, lr}
 801af48:	4604      	mov	r4, r0
 801af4a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801af4e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af50:	b1f1      	cbz	r1, 801af90 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801af52:	2b0a      	cmp	r3, #10
 801af54:	d02f      	beq.n	801afb6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801af56:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801af58:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801af5c:	3901      	subs	r1, #1
 801af5e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801af60:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801af64:	1c51      	adds	r1, r2, #1
 801af66:	b289      	uxth	r1, r1
 801af68:	2901      	cmp	r1, #1
 801af6a:	bf84      	itt	hi
 801af6c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801af70:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801af72:	f103 0201 	add.w	r2, r3, #1
 801af76:	8722      	strh	r2, [r4, #56]	; 0x38
 801af78:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801af7a:	bf98      	it	ls
 801af7c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801af7e:	4413      	add	r3, r2
 801af80:	b29b      	uxth	r3, r3
 801af82:	2b09      	cmp	r3, #9
 801af84:	bf88      	it	hi
 801af86:	3b0a      	subhi	r3, #10
 801af88:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801af8c:	8458      	strh	r0, [r3, #34]	; 0x22
 801af8e:	e7dc      	b.n	801af4a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801af90:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af92:	2b0a      	cmp	r3, #10
 801af94:	d00f      	beq.n	801afb6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801af96:	4620      	mov	r0, r4
 801af98:	f7ff fc11 	bl	801a7be <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801af9c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af9e:	1c5a      	adds	r2, r3, #1
 801afa0:	8722      	strh	r2, [r4, #56]	; 0x38
 801afa2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801afa4:	4413      	add	r3, r2
 801afa6:	b29b      	uxth	r3, r3
 801afa8:	2b09      	cmp	r3, #9
 801afaa:	bf88      	it	hi
 801afac:	3b0a      	subhi	r3, #10
 801afae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801afb2:	8458      	strh	r0, [r3, #34]	; 0x22
 801afb4:	e7ec      	b.n	801af90 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801afb6:	bd10      	pop	{r4, pc}

0801afb8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801afb8:	b538      	push	{r3, r4, r5, lr}
 801afba:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801afbc:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801afc0:	4604      	mov	r4, r0
 801afc2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801afc4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801afc6:	3a01      	subs	r2, #1
 801afc8:	8702      	strh	r2, [r0, #56]	; 0x38
 801afca:	1c5a      	adds	r2, r3, #1
 801afcc:	b292      	uxth	r2, r2
 801afce:	2a09      	cmp	r2, #9
 801afd0:	bf86      	itte	hi
 801afd2:	3b09      	subhi	r3, #9
 801afd4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801afd6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801afd8:	f7ff ffb5 	bl	801af46 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801afdc:	8c23      	ldrh	r3, [r4, #32]
 801afde:	2b01      	cmp	r3, #1
 801afe0:	bf9c      	itt	ls
 801afe2:	3301      	addls	r3, #1
 801afe4:	8423      	strhls	r3, [r4, #32]
 801afe6:	8be3      	ldrh	r3, [r4, #30]
 801afe8:	b90b      	cbnz	r3, 801afee <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801afea:	2302      	movs	r3, #2
 801afec:	83e3      	strh	r3, [r4, #30]
 801afee:	8be3      	ldrh	r3, [r4, #30]
 801aff0:	3b01      	subs	r3, #1
 801aff2:	b29b      	uxth	r3, r3
 801aff4:	83e3      	strh	r3, [r4, #30]
 801aff6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801affa:	4628      	mov	r0, r5
 801affc:	8365      	strh	r5, [r4, #26]
 801affe:	bd38      	pop	{r3, r4, r5, pc}

0801b000 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801b000:	428a      	cmp	r2, r1
 801b002:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b006:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801b008:	d931      	bls.n	801b06e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801b00a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801b00c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801b010:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801b014:	19ee      	adds	r6, r5, r7
 801b016:	1a54      	subs	r4, r2, r1
 801b018:	3e01      	subs	r6, #1
 801b01a:	fa1f fe84 	uxth.w	lr, r4
 801b01e:	b2b4      	uxth	r4, r6
 801b020:	eba4 090e 	sub.w	r9, r4, lr
 801b024:	fa1f f989 	uxth.w	r9, r9
 801b028:	2c09      	cmp	r4, #9
 801b02a:	4626      	mov	r6, r4
 801b02c:	bf88      	it	hi
 801b02e:	f1a4 060a 	subhi.w	r6, r4, #10
 801b032:	f1bc 0f00 	cmp.w	ip, #0
 801b036:	bf08      	it	eq
 801b038:	f04f 0c02 	moveq.w	ip, #2
 801b03c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b040:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b044:	fa1f fc8c 	uxth.w	ip, ip
 801b048:	3c01      	subs	r4, #1
 801b04a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b04e:	b2a4      	uxth	r4, r4
 801b050:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b054:	454c      	cmp	r4, r9
 801b056:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b05a:	d1e5      	bne.n	801b028 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b05c:	eba5 050e 	sub.w	r5, r5, lr
 801b060:	eb0e 0408 	add.w	r4, lr, r8
 801b064:	8705      	strh	r5, [r0, #56]	; 0x38
 801b066:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b06a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b06e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b070:	1a64      	subs	r4, r4, r1
 801b072:	4439      	add	r1, r7
 801b074:	b289      	uxth	r1, r1
 801b076:	2909      	cmp	r1, #9
 801b078:	bf88      	it	hi
 801b07a:	390a      	subhi	r1, #10
 801b07c:	8704      	strh	r4, [r0, #56]	; 0x38
 801b07e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b080:	250a      	movs	r5, #10
 801b082:	b18a      	cbz	r2, 801b0a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b084:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b086:	3a01      	subs	r2, #1
 801b088:	b292      	uxth	r2, r2
 801b08a:	3101      	adds	r1, #1
 801b08c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b090:	8701      	strh	r1, [r0, #56]	; 0x38
 801b092:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b094:	b901      	cbnz	r1, 801b098 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b096:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b098:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b09a:	3901      	subs	r1, #1
 801b09c:	b289      	uxth	r1, r1
 801b09e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b0a0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b0a4:	844c      	strh	r4, [r1, #34]	; 0x22
 801b0a6:	e7ec      	b.n	801b082 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b0a8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b0ac:	f7ff bf4b 	b.w	801af46 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b0b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b0b0:	b570      	push	{r4, r5, r6, lr}
 801b0b2:	2500      	movs	r5, #0
 801b0b4:	4295      	cmp	r5, r2
 801b0b6:	d011      	beq.n	801b0dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b0b8:	8bc4      	ldrh	r4, [r0, #30]
 801b0ba:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b0be:	4414      	add	r4, r2
 801b0c0:	3c01      	subs	r4, #1
 801b0c2:	1b64      	subs	r4, r4, r5
 801b0c4:	b2a4      	uxth	r4, r4
 801b0c6:	2c01      	cmp	r4, #1
 801b0c8:	bf88      	it	hi
 801b0ca:	3c02      	subhi	r4, #2
 801b0cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b0d0:	8b64      	ldrh	r4, [r4, #26]
 801b0d2:	42b4      	cmp	r4, r6
 801b0d4:	d117      	bne.n	801b106 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b0d6:	3501      	adds	r5, #1
 801b0d8:	b2ad      	uxth	r5, r5
 801b0da:	e7eb      	b.n	801b0b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b0dc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b0e0:	2400      	movs	r4, #0
 801b0e2:	4413      	add	r3, r2
 801b0e4:	b2a2      	uxth	r2, r4
 801b0e6:	429a      	cmp	r2, r3
 801b0e8:	da0f      	bge.n	801b10a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b0ea:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b0ec:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b0f0:	4432      	add	r2, r6
 801b0f2:	b292      	uxth	r2, r2
 801b0f4:	2a09      	cmp	r2, #9
 801b0f6:	bf88      	it	hi
 801b0f8:	3a0a      	subhi	r2, #10
 801b0fa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b0fe:	3401      	adds	r4, #1
 801b100:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b102:	42aa      	cmp	r2, r5
 801b104:	d0ee      	beq.n	801b0e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b106:	2000      	movs	r0, #0
 801b108:	bd70      	pop	{r4, r5, r6, pc}
 801b10a:	2001      	movs	r0, #1
 801b10c:	e7fc      	b.n	801b108 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b10e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b10e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b112:	4605      	mov	r5, r0
 801b114:	4616      	mov	r6, r2
 801b116:	1c8c      	adds	r4, r1, #2
 801b118:	8809      	ldrh	r1, [r1, #0]
 801b11a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b11e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b122:	42b3      	cmp	r3, r6
 801b124:	d124      	bne.n	801b170 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b126:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b12a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b12e:	f001 070f 	and.w	r7, r1, #15
 801b132:	f8cd 8000 	str.w	r8, [sp]
 801b136:	464b      	mov	r3, r9
 801b138:	4652      	mov	r2, sl
 801b13a:	4621      	mov	r1, r4
 801b13c:	4628      	mov	r0, r5
 801b13e:	f7ff ffb7 	bl	801b0b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b142:	4683      	mov	fp, r0
 801b144:	b168      	cbz	r0, 801b162 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b146:	eb0a 0109 	add.w	r1, sl, r9
 801b14a:	4441      	add	r1, r8
 801b14c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b150:	463a      	mov	r2, r7
 801b152:	4649      	mov	r1, r9
 801b154:	4628      	mov	r0, r5
 801b156:	f7ff ff53 	bl	801b000 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b15a:	4658      	mov	r0, fp
 801b15c:	b003      	add	sp, #12
 801b15e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b162:	eb07 010a 	add.w	r1, r7, sl
 801b166:	4449      	add	r1, r9
 801b168:	4441      	add	r1, r8
 801b16a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b16e:	e7d2      	b.n	801b116 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b170:	f04f 0b00 	mov.w	fp, #0
 801b174:	e7f1      	b.n	801b15a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b176 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b176:	b570      	push	{r4, r5, r6, lr}
 801b178:	8810      	ldrh	r0, [r2, #0]
 801b17a:	4298      	cmp	r0, r3
 801b17c:	d817      	bhi.n	801b1ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b17e:	1e48      	subs	r0, r1, #1
 801b180:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b184:	4298      	cmp	r0, r3
 801b186:	d312      	bcc.n	801b1ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b188:	2400      	movs	r4, #0
 801b18a:	428c      	cmp	r4, r1
 801b18c:	d20f      	bcs.n	801b1ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b18e:	1860      	adds	r0, r4, r1
 801b190:	1040      	asrs	r0, r0, #1
 801b192:	0085      	lsls	r5, r0, #2
 801b194:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b198:	42b3      	cmp	r3, r6
 801b19a:	d902      	bls.n	801b1a2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b19c:	3001      	adds	r0, #1
 801b19e:	b284      	uxth	r4, r0
 801b1a0:	e7f3      	b.n	801b18a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b1a2:	d201      	bcs.n	801b1a8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b1a4:	b281      	uxth	r1, r0
 801b1a6:	e7f0      	b.n	801b18a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b1a8:	442a      	add	r2, r5
 801b1aa:	8850      	ldrh	r0, [r2, #2]
 801b1ac:	bd70      	pop	{r4, r5, r6, pc}
 801b1ae:	2000      	movs	r0, #0
 801b1b0:	e7fc      	b.n	801b1ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b1b2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b1b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b1b6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b1b8:	886f      	ldrh	r7, [r5, #2]
 801b1ba:	4604      	mov	r4, r0
 801b1bc:	087f      	lsrs	r7, r7, #1
 801b1be:	260b      	movs	r6, #11
 801b1c0:	3e01      	subs	r6, #1
 801b1c2:	d013      	beq.n	801b1ec <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b1c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b1c6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b1ca:	462a      	mov	r2, r5
 801b1cc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b1d0:	4639      	mov	r1, r7
 801b1d2:	4643      	mov	r3, r8
 801b1d4:	4620      	mov	r0, r4
 801b1d6:	f7ff ffce 	bl	801b176 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b1da:	b138      	cbz	r0, 801b1ec <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b1dc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b1e0:	4642      	mov	r2, r8
 801b1e2:	4620      	mov	r0, r4
 801b1e4:	f7ff ff93 	bl	801b10e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b1e8:	2800      	cmp	r0, #0
 801b1ea:	d1e9      	bne.n	801b1c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b1ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b1f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b1f0:	b570      	push	{r4, r5, r6, lr}
 801b1f2:	694a      	ldr	r2, [r1, #20]
 801b1f4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b1f6:	684b      	ldr	r3, [r1, #4]
 801b1f8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b1fa:	1b54      	subs	r4, r2, r5
 801b1fc:	f000 8106 	beq.w	801b40c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b200:	1b9b      	subs	r3, r3, r6
 801b202:	d003      	beq.n	801b20c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b204:	4363      	muls	r3, r4
 801b206:	2210      	movs	r2, #16
 801b208:	fb93 f3f2 	sdiv	r3, r3, r2
 801b20c:	680c      	ldr	r4, [r1, #0]
 801b20e:	698a      	ldr	r2, [r1, #24]
 801b210:	1b65      	subs	r5, r4, r5
 801b212:	f000 80fd 	beq.w	801b410 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801b216:	1b92      	subs	r2, r2, r6
 801b218:	d003      	beq.n	801b222 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b21a:	436a      	muls	r2, r5
 801b21c:	2410      	movs	r4, #16
 801b21e:	fb92 f2f4 	sdiv	r2, r2, r4
 801b222:	1a9b      	subs	r3, r3, r2
 801b224:	ee07 3a90 	vmov	s15, r3
 801b228:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801b44c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801b22c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b230:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b234:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b238:	460a      	mov	r2, r1
 801b23a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801b23e:	4603      	mov	r3, r0
 801b240:	f100 040c 	add.w	r4, r0, #12
 801b244:	eeb1 6a43 	vneg.f32	s12, s6
 801b248:	edd2 7a02 	vldr	s15, [r2, #8]
 801b24c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801b250:	3214      	adds	r2, #20
 801b252:	ece3 6a01 	vstmia	r3!, {s13}
 801b256:	ed52 7a02 	vldr	s15, [r2, #-8]
 801b25a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b25e:	429c      	cmp	r4, r3
 801b260:	edc3 7a02 	vstr	s15, [r3, #8]
 801b264:	ed52 7a01 	vldr	s15, [r2, #-4]
 801b268:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b26c:	edc3 7a05 	vstr	s15, [r3, #20]
 801b270:	d1ea      	bne.n	801b248 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801b272:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b274:	698b      	ldr	r3, [r1, #24]
 801b276:	edd0 4a02 	vldr	s9, [r0, #8]
 801b27a:	edd0 3a00 	vldr	s7, [r0]
 801b27e:	edd0 6a01 	vldr	s13, [r0, #4]
 801b282:	ed90 5a05 	vldr	s10, [r0, #20]
 801b286:	ed90 2a03 	vldr	s4, [r0, #12]
 801b28a:	edd0 5a04 	vldr	s11, [r0, #16]
 801b28e:	ed90 1a07 	vldr	s2, [r0, #28]
 801b292:	edd0 2a06 	vldr	s5, [r0, #24]
 801b296:	1a9b      	subs	r3, r3, r2
 801b298:	ee07 3a90 	vmov	s15, r3
 801b29c:	684b      	ldr	r3, [r1, #4]
 801b29e:	1a9b      	subs	r3, r3, r2
 801b2a0:	ee07 3a10 	vmov	s14, r3
 801b2a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b2a8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801b2ac:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b2b0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801b2b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2b8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801b2bc:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2c0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801b2c4:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b2c8:	ee32 5a45 	vsub.f32	s10, s4, s10
 801b2cc:	ee67 7a83 	vmul.f32	s15, s15, s6
 801b2d0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801b2d4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b2d6:	694a      	ldr	r2, [r1, #20]
 801b2d8:	1b13      	subs	r3, r2, r4
 801b2da:	ee07 3a10 	vmov	s14, r3
 801b2de:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2e2:	680b      	ldr	r3, [r1, #0]
 801b2e4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2e8:	1b1b      	subs	r3, r3, r4
 801b2ea:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801b2ee:	ee07 3a10 	vmov	s14, r3
 801b2f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2f6:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2fa:	eee6 4a87 	vfma.f32	s9, s13, s14
 801b2fe:	ee64 4a86 	vmul.f32	s9, s9, s12
 801b302:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801b306:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b308:	698b      	ldr	r3, [r1, #24]
 801b30a:	1a9b      	subs	r3, r3, r2
 801b30c:	ee06 3a90 	vmov	s13, r3
 801b310:	684b      	ldr	r3, [r1, #4]
 801b312:	1a9b      	subs	r3, r3, r2
 801b314:	ee07 3a10 	vmov	s14, r3
 801b318:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b31c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b320:	ee66 6a84 	vmul.f32	s13, s13, s8
 801b324:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b328:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801b32c:	eee5 6a87 	vfma.f32	s13, s11, s14
 801b330:	ee66 6a83 	vmul.f32	s13, s13, s6
 801b334:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801b338:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b33a:	694a      	ldr	r2, [r1, #20]
 801b33c:	1b13      	subs	r3, r2, r4
 801b33e:	ee07 3a10 	vmov	s14, r3
 801b342:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b346:	680b      	ldr	r3, [r1, #0]
 801b348:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b34c:	1b1b      	subs	r3, r3, r4
 801b34e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801b352:	ee07 3a10 	vmov	s14, r3
 801b356:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b35a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b35e:	eea5 5a87 	vfma.f32	s10, s11, s14
 801b362:	edd0 5a08 	vldr	s11, [r0, #32]
 801b366:	ee25 5a06 	vmul.f32	s10, s10, s12
 801b36a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801b36e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801b372:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b374:	698b      	ldr	r3, [r1, #24]
 801b376:	1a9b      	subs	r3, r3, r2
 801b378:	ee07 3a10 	vmov	s14, r3
 801b37c:	684b      	ldr	r3, [r1, #4]
 801b37e:	1a9b      	subs	r3, r3, r2
 801b380:	ee01 3a90 	vmov	s3, r3
 801b384:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b388:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801b38c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b390:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801b394:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801b398:	ee61 1a84 	vmul.f32	s3, s3, s8
 801b39c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801b3a0:	ee27 7a03 	vmul.f32	s14, s14, s6
 801b3a4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b3a8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b3aa:	694a      	ldr	r2, [r1, #20]
 801b3ac:	1b13      	subs	r3, r2, r4
 801b3ae:	ee03 3a10 	vmov	s6, r3
 801b3b2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b3b6:	680b      	ldr	r3, [r1, #0]
 801b3b8:	ee23 3a04 	vmul.f32	s6, s6, s8
 801b3bc:	1b1b      	subs	r3, r3, r4
 801b3be:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801b3c2:	ee03 3a10 	vmov	s6, r3
 801b3c6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b3ca:	ee23 4a04 	vmul.f32	s8, s6, s8
 801b3ce:	eee1 5a04 	vfma.f32	s11, s2, s8
 801b3d2:	ee25 6a86 	vmul.f32	s12, s11, s12
 801b3d6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801b3da:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801b3de:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801b3e2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801b3e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3ea:	dd13      	ble.n	801b414 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801b3ec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b3f0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801b3f4:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b3f6:	eee3 7a87 	vfma.f32	s15, s7, s14
 801b3fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801b3fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b402:	dd15      	ble.n	801b430 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801b404:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b408:	6403      	str	r3, [r0, #64]	; 0x40
 801b40a:	bd70      	pop	{r4, r5, r6, pc}
 801b40c:	4623      	mov	r3, r4
 801b40e:	e6fd      	b.n	801b20c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b410:	462a      	mov	r2, r5
 801b412:	e706      	b.n	801b222 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b414:	d502      	bpl.n	801b41c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801b416:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b41a:	e7e9      	b.n	801b3f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801b41c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801b420:	eea3 2a85 	vfma.f32	s4, s7, s10
 801b424:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801b428:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b42c:	dade      	bge.n	801b3ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801b42e:	e7f2      	b.n	801b416 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801b430:	d502      	bpl.n	801b438 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801b432:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b436:	e7e7      	b.n	801b408 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801b438:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801b43c:	eee3 4a86 	vfma.f32	s9, s7, s12
 801b440:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801b444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b448:	dadc      	bge.n	801b404 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801b44a:	e7f2      	b.n	801b432 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801b44c:	3d800000 	.word	0x3d800000

0801b450 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801b450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b454:	2714      	movs	r7, #20
 801b456:	435f      	muls	r7, r3
 801b458:	eb02 0c07 	add.w	ip, r2, r7
 801b45c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801b460:	f115 0e0f 	adds.w	lr, r5, #15
 801b464:	f100 80a2 	bmi.w	801b5ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801b468:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801b46c:	9c08      	ldr	r4, [sp, #32]
 801b46e:	f8c0 e014 	str.w	lr, [r0, #20]
 801b472:	2614      	movs	r6, #20
 801b474:	4366      	muls	r6, r4
 801b476:	eb02 0806 	add.w	r8, r2, r6
 801b47a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b47e:	f115 040f 	adds.w	r4, r5, #15
 801b482:	f100 809f 	bmi.w	801b5c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801b486:	1124      	asrs	r4, r4, #4
 801b488:	eba4 040e 	sub.w	r4, r4, lr
 801b48c:	6184      	str	r4, [r0, #24]
 801b48e:	2c00      	cmp	r4, #0
 801b490:	f000 808a 	beq.w	801b5a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801b494:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801b498:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801b49c:	5995      	ldr	r5, [r2, r6]
 801b49e:	eba4 0809 	sub.w	r8, r4, r9
 801b4a2:	59d4      	ldr	r4, [r2, r7]
 801b4a4:	eba5 0a04 	sub.w	sl, r5, r4
 801b4a8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801b4ac:	fb0e fe05 	mul.w	lr, lr, r5
 801b4b0:	fb0a ee19 	mls	lr, sl, r9, lr
 801b4b4:	fb08 e404 	mla	r4, r8, r4, lr
 801b4b8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801b4bc:	3c01      	subs	r4, #1
 801b4be:	19a4      	adds	r4, r4, r6
 801b4c0:	f100 808c 	bmi.w	801b5dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801b4c4:	fb94 fef6 	sdiv	lr, r4, r6
 801b4c8:	f8c0 e000 	str.w	lr, [r0]
 801b4cc:	fb06 441e 	mls	r4, r6, lr, r4
 801b4d0:	6104      	str	r4, [r0, #16]
 801b4d2:	2d00      	cmp	r5, #0
 801b4d4:	f2c0 8095 	blt.w	801b602 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801b4d8:	fb95 f4f6 	sdiv	r4, r5, r6
 801b4dc:	6044      	str	r4, [r0, #4]
 801b4de:	fb06 5514 	mls	r5, r6, r4, r5
 801b4e2:	6085      	str	r5, [r0, #8]
 801b4e4:	60c6      	str	r6, [r0, #12]
 801b4e6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b4ea:	6945      	ldr	r5, [r0, #20]
 801b4ec:	59d2      	ldr	r2, [r2, r7]
 801b4ee:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801b624 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801b4f2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b4f6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801b4fa:	ee07 4a10 	vmov	s14, r4
 801b4fe:	6804      	ldr	r4, [r0, #0]
 801b500:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801b504:	ee07 2a90 	vmov	s15, r2
 801b508:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b50c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b510:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b514:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b518:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b51c:	edd3 6a00 	vldr	s13, [r3]
 801b520:	eee6 6a07 	vfma.f32	s13, s12, s14
 801b524:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801b528:	eee6 6a27 	vfma.f32	s13, s12, s15
 801b52c:	edc0 6a07 	vstr	s13, [r0, #28]
 801b530:	edd0 6a01 	vldr	s13, [r0, #4]
 801b534:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801b538:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b53c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b540:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b544:	ed80 6a08 	vstr	s12, [r0, #32]
 801b548:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801b54a:	6242      	str	r2, [r0, #36]	; 0x24
 801b54c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801b550:	ed93 6a03 	vldr	s12, [r3, #12]
 801b554:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b558:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b55c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801b560:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801b564:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b568:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801b56c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b570:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801b574:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b576:	6302      	str	r2, [r0, #48]	; 0x30
 801b578:	ed93 6a06 	vldr	s12, [r3, #24]
 801b57c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801b580:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b584:	eeb0 7a46 	vmov.f32	s14, s12
 801b588:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801b58c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801b590:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b594:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801b598:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801b59c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b5a0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801b5a4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801b5a6:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b5a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b5ac:	f1c5 0501 	rsb	r5, r5, #1
 801b5b0:	f015 050f 	ands.w	r5, r5, #15
 801b5b4:	bf18      	it	ne
 801b5b6:	2501      	movne	r5, #1
 801b5b8:	2410      	movs	r4, #16
 801b5ba:	fb9e fef4 	sdiv	lr, lr, r4
 801b5be:	ebae 0e05 	sub.w	lr, lr, r5
 801b5c2:	e753      	b.n	801b46c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801b5c4:	f1c5 0501 	rsb	r5, r5, #1
 801b5c8:	f015 050f 	ands.w	r5, r5, #15
 801b5cc:	bf18      	it	ne
 801b5ce:	2501      	movne	r5, #1
 801b5d0:	f04f 0910 	mov.w	r9, #16
 801b5d4:	fb94 f4f9 	sdiv	r4, r4, r9
 801b5d8:	1b64      	subs	r4, r4, r5
 801b5da:	e755      	b.n	801b488 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801b5dc:	4264      	negs	r4, r4
 801b5de:	fb94 fef6 	sdiv	lr, r4, r6
 801b5e2:	f1ce 0800 	rsb	r8, lr, #0
 801b5e6:	fb06 441e 	mls	r4, r6, lr, r4
 801b5ea:	f8c0 8000 	str.w	r8, [r0]
 801b5ee:	6104      	str	r4, [r0, #16]
 801b5f0:	2c00      	cmp	r4, #0
 801b5f2:	f43f af6e 	beq.w	801b4d2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801b5f6:	ea6f 0e0e 	mvn.w	lr, lr
 801b5fa:	f8c0 e000 	str.w	lr, [r0]
 801b5fe:	1b34      	subs	r4, r6, r4
 801b600:	e766      	b.n	801b4d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801b602:	426d      	negs	r5, r5
 801b604:	fb95 f4f6 	sdiv	r4, r5, r6
 801b608:	f1c4 0e00 	rsb	lr, r4, #0
 801b60c:	fb06 5514 	mls	r5, r6, r4, r5
 801b610:	f8c0 e004 	str.w	lr, [r0, #4]
 801b614:	6085      	str	r5, [r0, #8]
 801b616:	2d00      	cmp	r5, #0
 801b618:	f43f af64 	beq.w	801b4e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801b61c:	43e4      	mvns	r4, r4
 801b61e:	6044      	str	r4, [r0, #4]
 801b620:	1b75      	subs	r5, r6, r5
 801b622:	e75e      	b.n	801b4e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801b624:	3d800000 	.word	0x3d800000

0801b628 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801b628:	4602      	mov	r2, r0
 801b62a:	b148      	cbz	r0, 801b640 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801b62c:	2300      	movs	r3, #0
 801b62e:	b298      	uxth	r0, r3
 801b630:	3301      	adds	r3, #1
 801b632:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801b636:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801b63a:	2900      	cmp	r1, #0
 801b63c:	d1f7      	bne.n	801b62e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801b63e:	4770      	bx	lr
 801b640:	4770      	bx	lr

0801b642 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801b642:	b530      	push	{r4, r5, lr}
 801b644:	4604      	mov	r4, r0
 801b646:	b159      	cbz	r1, 801b660 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801b648:	b148      	cbz	r0, 801b65e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b64a:	2300      	movs	r3, #0
 801b64c:	b298      	uxth	r0, r3
 801b64e:	4282      	cmp	r2, r0
 801b650:	d905      	bls.n	801b65e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b652:	5ccd      	ldrb	r5, [r1, r3]
 801b654:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801b658:	3301      	adds	r3, #1
 801b65a:	2d00      	cmp	r5, #0
 801b65c:	d1f6      	bne.n	801b64c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801b65e:	bd30      	pop	{r4, r5, pc}
 801b660:	4608      	mov	r0, r1
 801b662:	e7fc      	b.n	801b65e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801b664 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801b664:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b666:	b08b      	sub	sp, #44	; 0x2c
 801b668:	468c      	mov	ip, r1
 801b66a:	2100      	movs	r1, #0
 801b66c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b670:	4604      	mov	r4, r0
 801b672:	261f      	movs	r6, #31
 801b674:	af01      	add	r7, sp, #4
 801b676:	fb94 fef3 	sdiv	lr, r4, r3
 801b67a:	fb03 441e 	mls	r4, r3, lr, r4
 801b67e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801b682:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801b686:	b2ec      	uxtb	r4, r5
 801b688:	2d09      	cmp	r5, #9
 801b68a:	bfd4      	ite	le
 801b68c:	3430      	addle	r4, #48	; 0x30
 801b68e:	3457      	addgt	r4, #87	; 0x57
 801b690:	b2e4      	uxtb	r4, r4
 801b692:	55bc      	strb	r4, [r7, r6]
 801b694:	4674      	mov	r4, lr
 801b696:	1e71      	subs	r1, r6, #1
 801b698:	b974      	cbnz	r4, 801b6b8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801b69a:	2800      	cmp	r0, #0
 801b69c:	da05      	bge.n	801b6aa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801b69e:	ab0a      	add	r3, sp, #40	; 0x28
 801b6a0:	4419      	add	r1, r3
 801b6a2:	232d      	movs	r3, #45	; 0x2d
 801b6a4:	f801 3c24 	strb.w	r3, [r1, #-36]
 801b6a8:	1eb1      	subs	r1, r6, #2
 801b6aa:	3101      	adds	r1, #1
 801b6ac:	4439      	add	r1, r7
 801b6ae:	4660      	mov	r0, ip
 801b6b0:	f7ff ffc7 	bl	801b642 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b6b4:	b00b      	add	sp, #44	; 0x2c
 801b6b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b6b8:	460e      	mov	r6, r1
 801b6ba:	e7dc      	b.n	801b676 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801b6bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801b6bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b6be:	b08b      	sub	sp, #44	; 0x2c
 801b6c0:	468c      	mov	ip, r1
 801b6c2:	2100      	movs	r1, #0
 801b6c4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b6c8:	ae01      	add	r6, sp, #4
 801b6ca:	211f      	movs	r1, #31
 801b6cc:	fbb0 f7f3 	udiv	r7, r0, r3
 801b6d0:	fb03 0517 	mls	r5, r3, r7, r0
 801b6d4:	b2ec      	uxtb	r4, r5
 801b6d6:	2d09      	cmp	r5, #9
 801b6d8:	bfd4      	ite	le
 801b6da:	3430      	addle	r4, #48	; 0x30
 801b6dc:	3457      	addgt	r4, #87	; 0x57
 801b6de:	b2e4      	uxtb	r4, r4
 801b6e0:	558c      	strb	r4, [r1, r6]
 801b6e2:	4638      	mov	r0, r7
 801b6e4:	1e4c      	subs	r4, r1, #1
 801b6e6:	b92f      	cbnz	r7, 801b6f4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801b6e8:	4431      	add	r1, r6
 801b6ea:	4660      	mov	r0, ip
 801b6ec:	f7ff ffa9 	bl	801b642 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b6f0:	b00b      	add	sp, #44	; 0x2c
 801b6f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b6f4:	4621      	mov	r1, r4
 801b6f6:	e7e9      	b.n	801b6cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801b6f8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801b6f8:	b410      	push	{r4}
 801b6fa:	b131      	cbz	r1, 801b70a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b6fc:	1e9c      	subs	r4, r3, #2
 801b6fe:	2c22      	cmp	r4, #34	; 0x22
 801b700:	d803      	bhi.n	801b70a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b702:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b706:	f7ff bfad 	b.w	801b664 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801b70a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b70e:	4770      	bx	lr

0801b710 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801b710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b714:	4691      	mov	r9, r2
 801b716:	b085      	sub	sp, #20
 801b718:	6802      	ldr	r2, [r0, #0]
 801b71a:	9201      	str	r2, [sp, #4]
 801b71c:	4688      	mov	r8, r1
 801b71e:	4683      	mov	fp, r0
 801b720:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801b724:	9103      	str	r1, [sp, #12]
 801b726:	4610      	mov	r0, r2
 801b728:	461c      	mov	r4, r3
 801b72a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801b72e:	9302      	str	r3, [sp, #8]
 801b730:	f7ff ff7a 	bl	801b628 <_ZN8touchgfx7Unicode6strlenEPKt>
 801b734:	f1b8 0f00 	cmp.w	r8, #0
 801b738:	bf0c      	ite	eq
 801b73a:	4684      	moveq	ip, r0
 801b73c:	f100 0c01 	addne.w	ip, r0, #1
 801b740:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801b744:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801b748:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b74a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b74c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801b750:	9903      	ldr	r1, [sp, #12]
 801b752:	fa1f fc8c 	uxth.w	ip, ip
 801b756:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801b75a:	d041      	beq.n	801b7e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b75c:	d834      	bhi.n	801b7c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801b75e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801b762:	d059      	beq.n	801b818 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801b764:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801b768:	d03a      	beq.n	801b7e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b76a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801b76e:	d034      	beq.n	801b7da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b770:	2400      	movs	r4, #0
 801b772:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801b776:	3a01      	subs	r2, #1
 801b778:	b169      	cbz	r1, 801b796 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b77a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b77c:	458c      	cmp	ip, r1
 801b77e:	da09      	bge.n	801b794 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b780:	eba1 010c 	sub.w	r1, r1, ip
 801b784:	b289      	uxth	r1, r1
 801b786:	b933      	cbnz	r3, 801b796 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b788:	2e00      	cmp	r6, #0
 801b78a:	d051      	beq.n	801b830 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b78c:	2800      	cmp	r0, #0
 801b78e:	d04f      	beq.n	801b830 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b790:	440c      	add	r4, r1
 801b792:	b2a4      	uxth	r4, r4
 801b794:	2100      	movs	r1, #0
 801b796:	682b      	ldr	r3, [r5, #0]
 801b798:	4293      	cmp	r3, r2
 801b79a:	da07      	bge.n	801b7ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b79c:	f1b8 0f00 	cmp.w	r8, #0
 801b7a0:	d004      	beq.n	801b7ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b7a2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801b7a6:	682b      	ldr	r3, [r5, #0]
 801b7a8:	3301      	adds	r3, #1
 801b7aa:	602b      	str	r3, [r5, #0]
 801b7ac:	2730      	movs	r7, #48	; 0x30
 801b7ae:	2c00      	cmp	r4, #0
 801b7b0:	d04e      	beq.n	801b850 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b7b2:	682e      	ldr	r6, [r5, #0]
 801b7b4:	3c01      	subs	r4, #1
 801b7b6:	42b2      	cmp	r2, r6
 801b7b8:	b2a4      	uxth	r4, r4
 801b7ba:	dd49      	ble.n	801b850 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b7bc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b7c0:	682b      	ldr	r3, [r5, #0]
 801b7c2:	3301      	adds	r3, #1
 801b7c4:	602b      	str	r3, [r5, #0]
 801b7c6:	e7f2      	b.n	801b7ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801b7c8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801b7cc:	d01d      	beq.n	801b80a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801b7ce:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801b7d2:	d002      	beq.n	801b7da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b7d4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801b7d8:	e7c9      	b.n	801b76e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801b7da:	4684      	mov	ip, r0
 801b7dc:	f04f 0800 	mov.w	r8, #0
 801b7e0:	2c00      	cmp	r4, #0
 801b7e2:	d0c6      	beq.n	801b772 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b7e4:	b947      	cbnz	r7, 801b7f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b7e6:	2801      	cmp	r0, #1
 801b7e8:	d106      	bne.n	801b7f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b7ea:	8814      	ldrh	r4, [r2, #0]
 801b7ec:	2c30      	cmp	r4, #48	; 0x30
 801b7ee:	bf02      	ittt	eq
 801b7f0:	3202      	addeq	r2, #2
 801b7f2:	f8cb 2000 	streq.w	r2, [fp]
 801b7f6:	4638      	moveq	r0, r7
 801b7f8:	45bc      	cmp	ip, r7
 801b7fa:	da14      	bge.n	801b826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801b7fc:	b2bf      	uxth	r7, r7
 801b7fe:	eba7 040c 	sub.w	r4, r7, ip
 801b802:	b2a4      	uxth	r4, r4
 801b804:	46bc      	mov	ip, r7
 801b806:	2600      	movs	r6, #0
 801b808:	e7b3      	b.n	801b772 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b80a:	4684      	mov	ip, r0
 801b80c:	b16c      	cbz	r4, 801b82a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801b80e:	42b8      	cmp	r0, r7
 801b810:	dd00      	ble.n	801b814 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801b812:	b2b8      	uxth	r0, r7
 801b814:	2400      	movs	r4, #0
 801b816:	e003      	b.n	801b820 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801b818:	f04f 0c01 	mov.w	ip, #1
 801b81c:	2400      	movs	r4, #0
 801b81e:	4660      	mov	r0, ip
 801b820:	4626      	mov	r6, r4
 801b822:	46a0      	mov	r8, r4
 801b824:	e7a5      	b.n	801b772 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b826:	2400      	movs	r4, #0
 801b828:	e7ed      	b.n	801b806 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801b82a:	4626      	mov	r6, r4
 801b82c:	46a0      	mov	r8, r4
 801b82e:	e7a0      	b.n	801b772 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b830:	2900      	cmp	r1, #0
 801b832:	d0b0      	beq.n	801b796 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b834:	2720      	movs	r7, #32
 801b836:	682e      	ldr	r6, [r5, #0]
 801b838:	2900      	cmp	r1, #0
 801b83a:	d0ac      	beq.n	801b796 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b83c:	3901      	subs	r1, #1
 801b83e:	4296      	cmp	r6, r2
 801b840:	b289      	uxth	r1, r1
 801b842:	daa7      	bge.n	801b794 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b844:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b848:	682b      	ldr	r3, [r5, #0]
 801b84a:	3301      	adds	r3, #1
 801b84c:	602b      	str	r3, [r5, #0]
 801b84e:	e7f2      	b.n	801b836 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801b850:	b188      	cbz	r0, 801b876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b852:	682b      	ldr	r3, [r5, #0]
 801b854:	3801      	subs	r0, #1
 801b856:	429a      	cmp	r2, r3
 801b858:	b280      	uxth	r0, r0
 801b85a:	dd0c      	ble.n	801b876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b85c:	f8db 3000 	ldr.w	r3, [fp]
 801b860:	1c9c      	adds	r4, r3, #2
 801b862:	f8cb 4000 	str.w	r4, [fp]
 801b866:	881c      	ldrh	r4, [r3, #0]
 801b868:	682b      	ldr	r3, [r5, #0]
 801b86a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801b86e:	682b      	ldr	r3, [r5, #0]
 801b870:	3301      	adds	r3, #1
 801b872:	602b      	str	r3, [r5, #0]
 801b874:	e7ec      	b.n	801b850 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b876:	2620      	movs	r6, #32
 801b878:	b151      	cbz	r1, 801b890 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b87a:	6828      	ldr	r0, [r5, #0]
 801b87c:	3901      	subs	r1, #1
 801b87e:	4282      	cmp	r2, r0
 801b880:	b289      	uxth	r1, r1
 801b882:	dd05      	ble.n	801b890 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b884:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801b888:	682b      	ldr	r3, [r5, #0]
 801b88a:	3301      	adds	r3, #1
 801b88c:	602b      	str	r3, [r5, #0]
 801b88e:	e7f3      	b.n	801b878 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801b890:	b005      	add	sp, #20
 801b892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b896 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801b896:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b89a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801b89e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801b8a2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801b8a6:	2400      	movs	r4, #0
 801b8a8:	8014      	strh	r4, [r2, #0]
 801b8aa:	701c      	strb	r4, [r3, #0]
 801b8ac:	f888 4000 	strb.w	r4, [r8]
 801b8b0:	f88c 4000 	strb.w	r4, [ip]
 801b8b4:	f88e 4000 	strb.w	r4, [lr]
 801b8b8:	703c      	strb	r4, [r7, #0]
 801b8ba:	6804      	ldr	r4, [r0, #0]
 801b8bc:	b1a4      	cbz	r4, 801b8e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801b8be:	8824      	ldrh	r4, [r4, #0]
 801b8c0:	f04f 0901 	mov.w	r9, #1
 801b8c4:	b314      	cbz	r4, 801b90c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8c6:	2c2b      	cmp	r4, #43	; 0x2b
 801b8c8:	d001      	beq.n	801b8ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801b8ca:	2c20      	cmp	r4, #32
 801b8cc:	d110      	bne.n	801b8f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801b8ce:	8014      	strh	r4, [r2, #0]
 801b8d0:	6804      	ldr	r4, [r0, #0]
 801b8d2:	b10c      	cbz	r4, 801b8d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801b8d4:	3402      	adds	r4, #2
 801b8d6:	6004      	str	r4, [r0, #0]
 801b8d8:	680c      	ldr	r4, [r1, #0]
 801b8da:	b10c      	cbz	r4, 801b8e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801b8dc:	3401      	adds	r4, #1
 801b8de:	600c      	str	r4, [r1, #0]
 801b8e0:	6804      	ldr	r4, [r0, #0]
 801b8e2:	b17c      	cbz	r4, 801b904 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801b8e4:	8824      	ldrh	r4, [r4, #0]
 801b8e6:	e7ed      	b.n	801b8c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b8e8:	680c      	ldr	r4, [r1, #0]
 801b8ea:	b17c      	cbz	r4, 801b90c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8ec:	7824      	ldrb	r4, [r4, #0]
 801b8ee:	e7e7      	b.n	801b8c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801b8f0:	2c2d      	cmp	r4, #45	; 0x2d
 801b8f2:	d102      	bne.n	801b8fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801b8f4:	f883 9000 	strb.w	r9, [r3]
 801b8f8:	e7ea      	b.n	801b8d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b8fa:	2c23      	cmp	r4, #35	; 0x23
 801b8fc:	d107      	bne.n	801b90e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801b8fe:	f888 9000 	strb.w	r9, [r8]
 801b902:	e7e5      	b.n	801b8d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b904:	680c      	ldr	r4, [r1, #0]
 801b906:	b10c      	cbz	r4, 801b90c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b908:	7824      	ldrb	r4, [r4, #0]
 801b90a:	e7db      	b.n	801b8c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b90c:	2400      	movs	r4, #0
 801b90e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801b912:	2b09      	cmp	r3, #9
 801b914:	d901      	bls.n	801b91a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801b916:	2c2a      	cmp	r4, #42	; 0x2a
 801b918:	d122      	bne.n	801b960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b91a:	2301      	movs	r3, #1
 801b91c:	2c30      	cmp	r4, #48	; 0x30
 801b91e:	f88e 3000 	strb.w	r3, [lr]
 801b922:	d10d      	bne.n	801b940 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b924:	f88c 3000 	strb.w	r3, [ip]
 801b928:	6803      	ldr	r3, [r0, #0]
 801b92a:	b10b      	cbz	r3, 801b930 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801b92c:	3302      	adds	r3, #2
 801b92e:	6003      	str	r3, [r0, #0]
 801b930:	680b      	ldr	r3, [r1, #0]
 801b932:	b10b      	cbz	r3, 801b938 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801b934:	3301      	adds	r3, #1
 801b936:	600b      	str	r3, [r1, #0]
 801b938:	6803      	ldr	r3, [r0, #0]
 801b93a:	2b00      	cmp	r3, #0
 801b93c:	d02f      	beq.n	801b99e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801b93e:	881c      	ldrh	r4, [r3, #0]
 801b940:	2c2a      	cmp	r4, #42	; 0x2a
 801b942:	d135      	bne.n	801b9b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b944:	f04f 33ff 	mov.w	r3, #4294967295
 801b948:	6033      	str	r3, [r6, #0]
 801b94a:	6803      	ldr	r3, [r0, #0]
 801b94c:	b10b      	cbz	r3, 801b952 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801b94e:	3302      	adds	r3, #2
 801b950:	6003      	str	r3, [r0, #0]
 801b952:	680b      	ldr	r3, [r1, #0]
 801b954:	b10b      	cbz	r3, 801b95a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801b956:	3301      	adds	r3, #1
 801b958:	600b      	str	r3, [r1, #0]
 801b95a:	6803      	ldr	r3, [r0, #0]
 801b95c:	b31b      	cbz	r3, 801b9a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801b95e:	881c      	ldrh	r4, [r3, #0]
 801b960:	2c2e      	cmp	r4, #46	; 0x2e
 801b962:	d11a      	bne.n	801b99a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b964:	2301      	movs	r3, #1
 801b966:	703b      	strb	r3, [r7, #0]
 801b968:	6803      	ldr	r3, [r0, #0]
 801b96a:	b10b      	cbz	r3, 801b970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801b96c:	3302      	adds	r3, #2
 801b96e:	6003      	str	r3, [r0, #0]
 801b970:	680b      	ldr	r3, [r1, #0]
 801b972:	b10b      	cbz	r3, 801b978 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801b974:	3301      	adds	r3, #1
 801b976:	600b      	str	r3, [r1, #0]
 801b978:	6803      	ldr	r3, [r0, #0]
 801b97a:	2b00      	cmp	r3, #0
 801b97c:	d036      	beq.n	801b9ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801b97e:	881b      	ldrh	r3, [r3, #0]
 801b980:	2b2a      	cmp	r3, #42	; 0x2a
 801b982:	d137      	bne.n	801b9f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b984:	f04f 33ff 	mov.w	r3, #4294967295
 801b988:	602b      	str	r3, [r5, #0]
 801b98a:	6803      	ldr	r3, [r0, #0]
 801b98c:	b10b      	cbz	r3, 801b992 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801b98e:	3302      	adds	r3, #2
 801b990:	6003      	str	r3, [r0, #0]
 801b992:	680b      	ldr	r3, [r1, #0]
 801b994:	b10b      	cbz	r3, 801b99a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b996:	3301      	adds	r3, #1
 801b998:	600b      	str	r3, [r1, #0]
 801b99a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b99e:	680c      	ldr	r4, [r1, #0]
 801b9a0:	b134      	cbz	r4, 801b9b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b9a2:	7824      	ldrb	r4, [r4, #0]
 801b9a4:	e7cc      	b.n	801b940 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b9a6:	680b      	ldr	r3, [r1, #0]
 801b9a8:	2b00      	cmp	r3, #0
 801b9aa:	d0f6      	beq.n	801b99a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b9ac:	781c      	ldrb	r4, [r3, #0]
 801b9ae:	e7d7      	b.n	801b960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b9b0:	2300      	movs	r3, #0
 801b9b2:	6033      	str	r3, [r6, #0]
 801b9b4:	220a      	movs	r2, #10
 801b9b6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801b9ba:	fa1f f38c 	uxth.w	r3, ip
 801b9be:	2b09      	cmp	r3, #9
 801b9c0:	d8ce      	bhi.n	801b960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b9c2:	6833      	ldr	r3, [r6, #0]
 801b9c4:	fb02 c303 	mla	r3, r2, r3, ip
 801b9c8:	6033      	str	r3, [r6, #0]
 801b9ca:	6803      	ldr	r3, [r0, #0]
 801b9cc:	b10b      	cbz	r3, 801b9d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801b9ce:	3302      	adds	r3, #2
 801b9d0:	6003      	str	r3, [r0, #0]
 801b9d2:	680b      	ldr	r3, [r1, #0]
 801b9d4:	b10b      	cbz	r3, 801b9da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801b9d6:	3301      	adds	r3, #1
 801b9d8:	600b      	str	r3, [r1, #0]
 801b9da:	6803      	ldr	r3, [r0, #0]
 801b9dc:	b10b      	cbz	r3, 801b9e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801b9de:	881c      	ldrh	r4, [r3, #0]
 801b9e0:	e7e9      	b.n	801b9b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9e2:	680c      	ldr	r4, [r1, #0]
 801b9e4:	2c00      	cmp	r4, #0
 801b9e6:	d0e6      	beq.n	801b9b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9e8:	7824      	ldrb	r4, [r4, #0]
 801b9ea:	e7e4      	b.n	801b9b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9ec:	680b      	ldr	r3, [r1, #0]
 801b9ee:	b10b      	cbz	r3, 801b9f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b9f0:	781b      	ldrb	r3, [r3, #0]
 801b9f2:	e7c5      	b.n	801b980 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801b9f4:	2200      	movs	r2, #0
 801b9f6:	602a      	str	r2, [r5, #0]
 801b9f8:	240a      	movs	r4, #10
 801b9fa:	3b30      	subs	r3, #48	; 0x30
 801b9fc:	b29e      	uxth	r6, r3
 801b9fe:	2e09      	cmp	r6, #9
 801ba00:	682a      	ldr	r2, [r5, #0]
 801ba02:	d813      	bhi.n	801ba2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801ba04:	fb04 3302 	mla	r3, r4, r2, r3
 801ba08:	602b      	str	r3, [r5, #0]
 801ba0a:	6803      	ldr	r3, [r0, #0]
 801ba0c:	b10b      	cbz	r3, 801ba12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801ba0e:	3302      	adds	r3, #2
 801ba10:	6003      	str	r3, [r0, #0]
 801ba12:	680b      	ldr	r3, [r1, #0]
 801ba14:	b10b      	cbz	r3, 801ba1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801ba16:	3301      	adds	r3, #1
 801ba18:	600b      	str	r3, [r1, #0]
 801ba1a:	6803      	ldr	r3, [r0, #0]
 801ba1c:	b10b      	cbz	r3, 801ba22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801ba1e:	881b      	ldrh	r3, [r3, #0]
 801ba20:	e7eb      	b.n	801b9fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ba22:	680b      	ldr	r3, [r1, #0]
 801ba24:	2b00      	cmp	r3, #0
 801ba26:	d0e8      	beq.n	801b9fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ba28:	781b      	ldrb	r3, [r3, #0]
 801ba2a:	e7e6      	b.n	801b9fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ba2c:	2a06      	cmp	r2, #6
 801ba2e:	bfa8      	it	ge
 801ba30:	2206      	movge	r2, #6
 801ba32:	602a      	str	r2, [r5, #0]
 801ba34:	e7b1      	b.n	801b99a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801ba36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801ba36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba3a:	b0a3      	sub	sp, #140	; 0x8c
 801ba3c:	2600      	movs	r6, #0
 801ba3e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801ba42:	4607      	mov	r7, r0
 801ba44:	4688      	mov	r8, r1
 801ba46:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801ba4a:	4631      	mov	r1, r6
 801ba4c:	2242      	movs	r2, #66	; 0x42
 801ba4e:	4648      	mov	r0, r9
 801ba50:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801ba52:	960d      	str	r6, [sp, #52]	; 0x34
 801ba54:	f012 f989 	bl	802dd6a <memset>
 801ba58:	b15f      	cbz	r7, 801ba72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801ba5a:	f108 3aff 	add.w	sl, r8, #4294967295
 801ba5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ba60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ba62:	b152      	cbz	r2, 801ba7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801ba64:	8812      	ldrh	r2, [r2, #0]
 801ba66:	b10a      	cbz	r2, 801ba6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ba68:	459a      	cmp	sl, r3
 801ba6a:	dc2e      	bgt.n	801baca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801ba6c:	2200      	movs	r2, #0
 801ba6e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801ba72:	4638      	mov	r0, r7
 801ba74:	b023      	add	sp, #140	; 0x8c
 801ba76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba7a:	9a08      	ldr	r2, [sp, #32]
 801ba7c:	2a00      	cmp	r2, #0
 801ba7e:	d0f5      	beq.n	801ba6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ba80:	7812      	ldrb	r2, [r2, #0]
 801ba82:	e7f0      	b.n	801ba66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801ba84:	2d00      	cmp	r5, #0
 801ba86:	d0ea      	beq.n	801ba5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba88:	782a      	ldrb	r2, [r5, #0]
 801ba8a:	b142      	cbz	r2, 801ba9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801ba8c:	2a25      	cmp	r2, #37	; 0x25
 801ba8e:	d001      	beq.n	801ba94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801ba90:	459a      	cmp	sl, r3
 801ba92:	dc08      	bgt.n	801baa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801ba94:	f1bb 0f00 	cmp.w	fp, #0
 801ba98:	d121      	bne.n	801bade <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801ba9a:	2d00      	cmp	r5, #0
 801ba9c:	d0df      	beq.n	801ba5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba9e:	782a      	ldrb	r2, [r5, #0]
 801baa0:	f04f 0b00 	mov.w	fp, #0
 801baa4:	e01d      	b.n	801bae2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801baa6:	f1bb 0f00 	cmp.w	fp, #0
 801baaa:	d078      	beq.n	801bb9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801baac:	f8bb 2000 	ldrh.w	r2, [fp]
 801bab0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801bab4:	f1bb 0f00 	cmp.w	fp, #0
 801bab8:	d002      	beq.n	801bac0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801baba:	f10b 0202 	add.w	r2, fp, #2
 801babe:	9209      	str	r2, [sp, #36]	; 0x24
 801bac0:	b10d      	cbz	r5, 801bac6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801bac2:	3501      	adds	r5, #1
 801bac4:	9508      	str	r5, [sp, #32]
 801bac6:	3301      	adds	r3, #1
 801bac8:	930d      	str	r3, [sp, #52]	; 0x34
 801baca:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801bace:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bad0:	f1bb 0f00 	cmp.w	fp, #0
 801bad4:	d0d6      	beq.n	801ba84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801bad6:	f8bb 2000 	ldrh.w	r2, [fp]
 801bada:	2a00      	cmp	r2, #0
 801badc:	d1d6      	bne.n	801ba8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801bade:	f8bb 2000 	ldrh.w	r2, [fp]
 801bae2:	2a00      	cmp	r2, #0
 801bae4:	d0bb      	beq.n	801ba5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bae6:	459a      	cmp	sl, r3
 801bae8:	ddb9      	ble.n	801ba5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801baea:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801baee:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801baf2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801baf6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801bafa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801bafe:	960e      	str	r6, [sp, #56]	; 0x38
 801bb00:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801bb04:	960f      	str	r6, [sp, #60]	; 0x3c
 801bb06:	f1bb 0f00 	cmp.w	fp, #0
 801bb0a:	d002      	beq.n	801bb12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801bb0c:	f10b 0302 	add.w	r3, fp, #2
 801bb10:	9309      	str	r3, [sp, #36]	; 0x24
 801bb12:	b10d      	cbz	r5, 801bb18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801bb14:	1c6b      	adds	r3, r5, #1
 801bb16:	9308      	str	r3, [sp, #32]
 801bb18:	ab0f      	add	r3, sp, #60	; 0x3c
 801bb1a:	9305      	str	r3, [sp, #20]
 801bb1c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bb20:	9304      	str	r3, [sp, #16]
 801bb22:	ab0e      	add	r3, sp, #56	; 0x38
 801bb24:	9303      	str	r3, [sp, #12]
 801bb26:	ab0c      	add	r3, sp, #48	; 0x30
 801bb28:	9302      	str	r3, [sp, #8]
 801bb2a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bb2e:	9301      	str	r3, [sp, #4]
 801bb30:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bb34:	9300      	str	r3, [sp, #0]
 801bb36:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bb3a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bb3e:	a908      	add	r1, sp, #32
 801bb40:	a809      	add	r0, sp, #36	; 0x24
 801bb42:	f7ff fea8 	bl	801b896 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801bb46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bb48:	2b00      	cmp	r3, #0
 801bb4a:	bfbe      	ittt	lt
 801bb4c:	6823      	ldrlt	r3, [r4, #0]
 801bb4e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bb52:	930e      	strlt	r3, [sp, #56]	; 0x38
 801bb54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bb56:	bfb8      	it	lt
 801bb58:	3404      	addlt	r4, #4
 801bb5a:	2b00      	cmp	r3, #0
 801bb5c:	bfb8      	it	lt
 801bb5e:	6823      	ldrlt	r3, [r4, #0]
 801bb60:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801bb64:	bfbe      	ittt	lt
 801bb66:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bb6a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801bb6c:	3404      	addlt	r4, #4
 801bb6e:	b1d9      	cbz	r1, 801bba8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801bb70:	880b      	ldrh	r3, [r1, #0]
 801bb72:	2b69      	cmp	r3, #105	; 0x69
 801bb74:	d01f      	beq.n	801bbb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bb76:	d82f      	bhi.n	801bbd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801bb78:	2b58      	cmp	r3, #88	; 0x58
 801bb7a:	d01c      	beq.n	801bbb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bb7c:	d818      	bhi.n	801bbb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801bb7e:	2b25      	cmp	r3, #37	; 0x25
 801bb80:	d034      	beq.n	801bbec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801bb82:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801bb86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bb88:	f1bb 0f00 	cmp.w	fp, #0
 801bb8c:	f000 80b8 	beq.w	801bd00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801bb90:	f8bb 5000 	ldrh.w	r5, [fp]
 801bb94:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801bb98:	3301      	adds	r3, #1
 801bb9a:	930d      	str	r3, [sp, #52]	; 0x34
 801bb9c:	e029      	b.n	801bbf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bb9e:	b10d      	cbz	r5, 801bba4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801bba0:	782a      	ldrb	r2, [r5, #0]
 801bba2:	e785      	b.n	801bab0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bba4:	462a      	mov	r2, r5
 801bba6:	e783      	b.n	801bab0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bba8:	2a00      	cmp	r2, #0
 801bbaa:	d0ea      	beq.n	801bb82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bbac:	7813      	ldrb	r3, [r2, #0]
 801bbae:	e7e0      	b.n	801bb72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801bbb0:	3b63      	subs	r3, #99	; 0x63
 801bbb2:	2b01      	cmp	r3, #1
 801bbb4:	d8e5      	bhi.n	801bb82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bbb6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801bbba:	b329      	cbz	r1, 801bc08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801bbbc:	880b      	ldrh	r3, [r1, #0]
 801bbbe:	2b69      	cmp	r3, #105	; 0x69
 801bbc0:	d063      	beq.n	801bc8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bbc2:	d825      	bhi.n	801bc10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801bbc4:	2b63      	cmp	r3, #99	; 0x63
 801bbc6:	d038      	beq.n	801bc3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801bbc8:	2b64      	cmp	r3, #100	; 0x64
 801bbca:	d05e      	beq.n	801bc8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bbcc:	2b58      	cmp	r3, #88	; 0x58
 801bbce:	d07b      	beq.n	801bcc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801bbd0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801bbd4:	4625      	mov	r5, r4
 801bbd6:	e036      	b.n	801bc46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bbd8:	2b73      	cmp	r3, #115	; 0x73
 801bbda:	d0ec      	beq.n	801bbb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bbdc:	d802      	bhi.n	801bbe4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801bbde:	2b6f      	cmp	r3, #111	; 0x6f
 801bbe0:	d1cf      	bne.n	801bb82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bbe2:	e7e8      	b.n	801bbb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bbe4:	2b75      	cmp	r3, #117	; 0x75
 801bbe6:	d0e6      	beq.n	801bbb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bbe8:	2b78      	cmp	r3, #120	; 0x78
 801bbea:	e7f9      	b.n	801bbe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801bbec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bbee:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801bbf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bbf4:	b10b      	cbz	r3, 801bbfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801bbf6:	3302      	adds	r3, #2
 801bbf8:	9309      	str	r3, [sp, #36]	; 0x24
 801bbfa:	9b08      	ldr	r3, [sp, #32]
 801bbfc:	2b00      	cmp	r3, #0
 801bbfe:	f43f af2e 	beq.w	801ba5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bc02:	3301      	adds	r3, #1
 801bc04:	9308      	str	r3, [sp, #32]
 801bc06:	e72a      	b.n	801ba5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bc08:	2a00      	cmp	r2, #0
 801bc0a:	d0e1      	beq.n	801bbd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bc0c:	7813      	ldrb	r3, [r2, #0]
 801bc0e:	e7d6      	b.n	801bbbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801bc10:	2b73      	cmp	r3, #115	; 0x73
 801bc12:	d036      	beq.n	801bc82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801bc14:	d807      	bhi.n	801bc26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801bc16:	2b6f      	cmp	r3, #111	; 0x6f
 801bc18:	d1da      	bne.n	801bbd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bc1a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc1c:	1d25      	adds	r5, r4, #4
 801bc1e:	eba8 0202 	sub.w	r2, r8, r2
 801bc22:	2308      	movs	r3, #8
 801bc24:	e04a      	b.n	801bcbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bc26:	2b75      	cmp	r3, #117	; 0x75
 801bc28:	d043      	beq.n	801bcb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801bc2a:	2b78      	cmp	r3, #120	; 0x78
 801bc2c:	d1d0      	bne.n	801bbd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bc2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc30:	1d25      	adds	r5, r4, #4
 801bc32:	eba8 0202 	sub.w	r2, r8, r2
 801bc36:	2310      	movs	r3, #16
 801bc38:	e040      	b.n	801bcbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bc3a:	6823      	ldr	r3, [r4, #0]
 801bc3c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801bc40:	1d25      	adds	r5, r4, #4
 801bc42:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801bc46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bc48:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bc4c:	2b00      	cmp	r3, #0
 801bc4e:	d052      	beq.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801bc50:	881a      	ldrh	r2, [r3, #0]
 801bc52:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bc56:	a80d      	add	r0, sp, #52	; 0x34
 801bc58:	9005      	str	r0, [sp, #20]
 801bc5a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bc5e:	9004      	str	r0, [sp, #16]
 801bc60:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bc62:	9003      	str	r0, [sp, #12]
 801bc64:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bc68:	9002      	str	r0, [sp, #8]
 801bc6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bc6c:	9001      	str	r0, [sp, #4]
 801bc6e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bc72:	9000      	str	r0, [sp, #0]
 801bc74:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801bc78:	a810      	add	r0, sp, #64	; 0x40
 801bc7a:	f7ff fd49 	bl	801b710 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bc7e:	462c      	mov	r4, r5
 801bc80:	e7b7      	b.n	801bbf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bc82:	6823      	ldr	r3, [r4, #0]
 801bc84:	1d25      	adds	r5, r4, #4
 801bc86:	9310      	str	r3, [sp, #64]	; 0x40
 801bc88:	e7dd      	b.n	801bc46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bc8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc8c:	6820      	ldr	r0, [r4, #0]
 801bc8e:	eba8 0202 	sub.w	r2, r8, r2
 801bc92:	230a      	movs	r3, #10
 801bc94:	b292      	uxth	r2, r2
 801bc96:	4649      	mov	r1, r9
 801bc98:	f7ff fce4 	bl	801b664 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801bc9c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801bca0:	2b2d      	cmp	r3, #45	; 0x2d
 801bca2:	f104 0504 	add.w	r5, r4, #4
 801bca6:	d1ce      	bne.n	801bc46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bca8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bcac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bcae:	3302      	adds	r3, #2
 801bcb0:	e7e9      	b.n	801bc86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801bcb2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bcb4:	1d25      	adds	r5, r4, #4
 801bcb6:	eba8 0202 	sub.w	r2, r8, r2
 801bcba:	230a      	movs	r3, #10
 801bcbc:	b292      	uxth	r2, r2
 801bcbe:	4649      	mov	r1, r9
 801bcc0:	6820      	ldr	r0, [r4, #0]
 801bcc2:	f7ff fcfb 	bl	801b6bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bcc6:	e7be      	b.n	801bc46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bcc8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bcca:	6820      	ldr	r0, [r4, #0]
 801bccc:	eba8 0202 	sub.w	r2, r8, r2
 801bcd0:	b292      	uxth	r2, r2
 801bcd2:	2310      	movs	r3, #16
 801bcd4:	4649      	mov	r1, r9
 801bcd6:	f7ff fcf1 	bl	801b6bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bcda:	1d25      	adds	r5, r4, #4
 801bcdc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801bce0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801bce4:	2b00      	cmp	r3, #0
 801bce6:	d0ae      	beq.n	801bc46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bce8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801bcec:	2919      	cmp	r1, #25
 801bcee:	d8f7      	bhi.n	801bce0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bcf0:	3b20      	subs	r3, #32
 801bcf2:	8013      	strh	r3, [r2, #0]
 801bcf4:	e7f4      	b.n	801bce0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bcf6:	9a08      	ldr	r2, [sp, #32]
 801bcf8:	2a00      	cmp	r2, #0
 801bcfa:	d0aa      	beq.n	801bc52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bcfc:	7812      	ldrb	r2, [r2, #0]
 801bcfe:	e7a8      	b.n	801bc52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bd00:	2d00      	cmp	r5, #0
 801bd02:	f43f af47 	beq.w	801bb94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801bd06:	782d      	ldrb	r5, [r5, #0]
 801bd08:	e744      	b.n	801bb94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801bd0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801bd0a:	b507      	push	{r0, r1, r2, lr}
 801bd0c:	9300      	str	r3, [sp, #0]
 801bd0e:	4613      	mov	r3, r2
 801bd10:	2200      	movs	r2, #0
 801bd12:	f7ff fe90 	bl	801ba36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801bd16:	b003      	add	sp, #12
 801bd18:	f85d fb04 	ldr.w	pc, [sp], #4

0801bd1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801bd1c:	b40c      	push	{r2, r3}
 801bd1e:	b507      	push	{r0, r1, r2, lr}
 801bd20:	ab04      	add	r3, sp, #16
 801bd22:	f853 2b04 	ldr.w	r2, [r3], #4
 801bd26:	9301      	str	r3, [sp, #4]
 801bd28:	f7ff ffef 	bl	801bd0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801bd2c:	b003      	add	sp, #12
 801bd2e:	f85d eb04 	ldr.w	lr, [sp], #4
 801bd32:	b002      	add	sp, #8
 801bd34:	4770      	bx	lr
	...

0801bd38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801bd38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd3c:	b0c5      	sub	sp, #276	; 0x114
 801bd3e:	2400      	movs	r4, #0
 801bd40:	af11      	add	r7, sp, #68	; 0x44
 801bd42:	4606      	mov	r6, r0
 801bd44:	468a      	mov	sl, r1
 801bd46:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bd4a:	4621      	mov	r1, r4
 801bd4c:	22c8      	movs	r2, #200	; 0xc8
 801bd4e:	4638      	mov	r0, r7
 801bd50:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801bd54:	940d      	str	r4, [sp, #52]	; 0x34
 801bd56:	f012 f808 	bl	802dd6a <memset>
 801bd5a:	b16e      	cbz	r6, 801bd78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801bd5c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801c000 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801bd60:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bd62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd64:	b162      	cbz	r2, 801bd80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801bd66:	8812      	ldrh	r2, [r2, #0]
 801bd68:	b11a      	cbz	r2, 801bd72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bd6a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801bd6e:	4299      	cmp	r1, r3
 801bd70:	dc2e      	bgt.n	801bdd0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801bd72:	2200      	movs	r2, #0
 801bd74:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bd78:	4630      	mov	r0, r6
 801bd7a:	b045      	add	sp, #276	; 0x114
 801bd7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd80:	9a08      	ldr	r2, [sp, #32]
 801bd82:	2a00      	cmp	r2, #0
 801bd84:	d0f5      	beq.n	801bd72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bd86:	7812      	ldrb	r2, [r2, #0]
 801bd88:	e7ee      	b.n	801bd68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801bd8a:	2d00      	cmp	r5, #0
 801bd8c:	d0e8      	beq.n	801bd60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bd8e:	782a      	ldrb	r2, [r5, #0]
 801bd90:	b142      	cbz	r2, 801bda4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801bd92:	2a25      	cmp	r2, #37	; 0x25
 801bd94:	d001      	beq.n	801bd9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801bd96:	4299      	cmp	r1, r3
 801bd98:	dc08      	bgt.n	801bdac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801bd9a:	f1b8 0f00 	cmp.w	r8, #0
 801bd9e:	d121      	bne.n	801bde4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801bda0:	2d00      	cmp	r5, #0
 801bda2:	d0dd      	beq.n	801bd60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bda4:	782a      	ldrb	r2, [r5, #0]
 801bda6:	f04f 0800 	mov.w	r8, #0
 801bdaa:	e01d      	b.n	801bde8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801bdac:	f1b8 0f00 	cmp.w	r8, #0
 801bdb0:	d07f      	beq.n	801beb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801bdb2:	f8b8 2000 	ldrh.w	r2, [r8]
 801bdb6:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bdba:	f1b8 0f00 	cmp.w	r8, #0
 801bdbe:	d002      	beq.n	801bdc6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801bdc0:	f108 0202 	add.w	r2, r8, #2
 801bdc4:	9209      	str	r2, [sp, #36]	; 0x24
 801bdc6:	b10d      	cbz	r5, 801bdcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801bdc8:	3501      	adds	r5, #1
 801bdca:	9508      	str	r5, [sp, #32]
 801bdcc:	3301      	adds	r3, #1
 801bdce:	930d      	str	r3, [sp, #52]	; 0x34
 801bdd0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801bdd4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bdd6:	f1b8 0f00 	cmp.w	r8, #0
 801bdda:	d0d6      	beq.n	801bd8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801bddc:	f8b8 2000 	ldrh.w	r2, [r8]
 801bde0:	2a00      	cmp	r2, #0
 801bde2:	d1d6      	bne.n	801bd92 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801bde4:	f8b8 2000 	ldrh.w	r2, [r8]
 801bde8:	2a00      	cmp	r2, #0
 801bdea:	d0b9      	beq.n	801bd60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bdec:	4299      	cmp	r1, r3
 801bdee:	ddb7      	ble.n	801bd60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bdf0:	2300      	movs	r3, #0
 801bdf2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bdf6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801bdfa:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801bdfe:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801be02:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801be06:	930e      	str	r3, [sp, #56]	; 0x38
 801be08:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801be0c:	930f      	str	r3, [sp, #60]	; 0x3c
 801be0e:	f1b8 0f00 	cmp.w	r8, #0
 801be12:	d002      	beq.n	801be1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801be14:	f108 0302 	add.w	r3, r8, #2
 801be18:	9309      	str	r3, [sp, #36]	; 0x24
 801be1a:	b10d      	cbz	r5, 801be20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801be1c:	1c6b      	adds	r3, r5, #1
 801be1e:	9308      	str	r3, [sp, #32]
 801be20:	ab0f      	add	r3, sp, #60	; 0x3c
 801be22:	9305      	str	r3, [sp, #20]
 801be24:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801be28:	9304      	str	r3, [sp, #16]
 801be2a:	ab0e      	add	r3, sp, #56	; 0x38
 801be2c:	9303      	str	r3, [sp, #12]
 801be2e:	ab0c      	add	r3, sp, #48	; 0x30
 801be30:	9302      	str	r3, [sp, #8]
 801be32:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801be36:	9301      	str	r3, [sp, #4]
 801be38:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801be3c:	9300      	str	r3, [sp, #0]
 801be3e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801be42:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801be46:	a908      	add	r1, sp, #32
 801be48:	a809      	add	r0, sp, #36	; 0x24
 801be4a:	f7ff fd24 	bl	801b896 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801be4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801be50:	2b00      	cmp	r3, #0
 801be52:	da0b      	bge.n	801be6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801be54:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801be58:	edd3 7a00 	vldr	s15, [r3]
 801be5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801be60:	3401      	adds	r4, #1
 801be62:	ee17 3a90 	vmov	r3, s15
 801be66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be6a:	930e      	str	r3, [sp, #56]	; 0x38
 801be6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801be6e:	2b00      	cmp	r3, #0
 801be70:	da0b      	bge.n	801be8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801be72:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801be76:	edd3 7a00 	vldr	s15, [r3]
 801be7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801be7e:	3401      	adds	r4, #1
 801be80:	ee17 3a90 	vmov	r3, s15
 801be84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be88:	930f      	str	r3, [sp, #60]	; 0x3c
 801be8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be8c:	b1b3      	cbz	r3, 801bebc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801be8e:	881a      	ldrh	r2, [r3, #0]
 801be90:	2a25      	cmp	r2, #37	; 0x25
 801be92:	d018      	beq.n	801bec6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801be94:	2a66      	cmp	r2, #102	; 0x66
 801be96:	d01c      	beq.n	801bed2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801be98:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801be9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be9e:	f1b8 0f00 	cmp.w	r8, #0
 801bea2:	f000 8121 	beq.w	801c0e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801bea6:	f8b8 5000 	ldrh.w	r5, [r8]
 801beaa:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801beae:	3301      	adds	r3, #1
 801beb0:	e00d      	b.n	801bece <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801beb2:	b10d      	cbz	r5, 801beb8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801beb4:	782a      	ldrb	r2, [r5, #0]
 801beb6:	e77e      	b.n	801bdb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801beb8:	462a      	mov	r2, r5
 801beba:	e77c      	b.n	801bdb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801bebc:	9b08      	ldr	r3, [sp, #32]
 801bebe:	2b00      	cmp	r3, #0
 801bec0:	d0ea      	beq.n	801be98 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801bec2:	781a      	ldrb	r2, [r3, #0]
 801bec4:	e7e4      	b.n	801be90 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801bec6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bec8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801becc:	3302      	adds	r3, #2
 801bece:	930d      	str	r3, [sp, #52]	; 0x34
 801bed0:	e041      	b.n	801bf56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801bed2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bed6:	edd3 7a00 	vldr	s15, [r3]
 801beda:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bede:	9710      	str	r7, [sp, #64]	; 0x40
 801bee0:	3401      	adds	r4, #1
 801bee2:	b923      	cbnz	r3, 801beee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801bee4:	2301      	movs	r3, #1
 801bee6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801beea:	2306      	movs	r3, #6
 801beec:	930f      	str	r3, [sp, #60]	; 0x3c
 801beee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bef2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bef6:	bf48      	it	mi
 801bef8:	eef1 7a67 	vnegmi.f32	s15, s15
 801befc:	eeb0 7ae7 	vabs.f32	s14, s15
 801bf00:	bf48      	it	mi
 801bf02:	232d      	movmi	r3, #45	; 0x2d
 801bf04:	eeb4 7a45 	vcmp.f32	s14, s10
 801bf08:	bf48      	it	mi
 801bf0a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801bf0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf12:	dd2b      	ble.n	801bf6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801bf14:	4b3b      	ldr	r3, [pc, #236]	; (801c004 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801bf16:	9311      	str	r3, [sp, #68]	; 0x44
 801bf18:	2366      	movs	r3, #102	; 0x66
 801bf1a:	9312      	str	r3, [sp, #72]	; 0x48
 801bf1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf1e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bf22:	2b00      	cmp	r3, #0
 801bf24:	f000 80da 	beq.w	801c0dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801bf28:	881a      	ldrh	r2, [r3, #0]
 801bf2a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bf2e:	a80d      	add	r0, sp, #52	; 0x34
 801bf30:	9005      	str	r0, [sp, #20]
 801bf32:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bf36:	9004      	str	r0, [sp, #16]
 801bf38:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bf3a:	9003      	str	r0, [sp, #12]
 801bf3c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bf40:	9002      	str	r0, [sp, #8]
 801bf42:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bf44:	9001      	str	r0, [sp, #4]
 801bf46:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bf4a:	9000      	str	r0, [sp, #0]
 801bf4c:	e9cd a606 	strd	sl, r6, [sp, #24]
 801bf50:	a810      	add	r0, sp, #64	; 0x40
 801bf52:	f7ff fbdd 	bl	801b710 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bf56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf58:	b10b      	cbz	r3, 801bf5e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801bf5a:	3302      	adds	r3, #2
 801bf5c:	9309      	str	r3, [sp, #36]	; 0x24
 801bf5e:	9b08      	ldr	r3, [sp, #32]
 801bf60:	2b00      	cmp	r3, #0
 801bf62:	f43f aefd 	beq.w	801bd60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf66:	3301      	adds	r3, #1
 801bf68:	9308      	str	r3, [sp, #32]
 801bf6a:	e6f9      	b.n	801bd60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf6c:	eef4 7a67 	vcmp.f32	s15, s15
 801bf70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf74:	d63a      	bvs.n	801bfec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801bf76:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801bf7a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801bf7e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801bf82:	eeb0 6a67 	vmov.f32	s12, s15
 801bf86:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bf8a:	eef0 5a47 	vmov.f32	s11, s14
 801bf8e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801bf92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf96:	da2d      	bge.n	801bff4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801bf98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bf9a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801bf9e:	2100      	movs	r1, #0
 801bfa0:	eef0 4a46 	vmov.f32	s9, s12
 801bfa4:	ebaa 0202 	sub.w	r2, sl, r2
 801bfa8:	eef4 6ac6 	vcmpe.f32	s13, s12
 801bfac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfb0:	b28d      	uxth	r5, r1
 801bfb2:	db2c      	blt.n	801c00e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801bfb4:	1a53      	subs	r3, r2, r1
 801bfb6:	2b00      	cmp	r3, #0
 801bfb8:	dd29      	ble.n	801c00e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801bfba:	3101      	adds	r1, #1
 801bfbc:	2964      	cmp	r1, #100	; 0x64
 801bfbe:	d025      	beq.n	801c00c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801bfc0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801bfc4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801bfc8:	ee17 3a10 	vmov	r3, s14
 801bfcc:	2b09      	cmp	r3, #9
 801bfce:	bfa8      	it	ge
 801bfd0:	2309      	movge	r3, #9
 801bfd2:	ee07 3a10 	vmov	s14, r3
 801bfd6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bfda:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801bfde:	eee7 7a66 	vfms.f32	s15, s14, s13
 801bfe2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801bfe6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801bfea:	e7dd      	b.n	801bfa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801bfec:	4b06      	ldr	r3, [pc, #24]	; (801c008 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801bfee:	9311      	str	r3, [sp, #68]	; 0x44
 801bff0:	236e      	movs	r3, #110	; 0x6e
 801bff2:	e792      	b.n	801bf1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801bff4:	ee66 6a87 	vmul.f32	s13, s13, s14
 801bff8:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801bffc:	e7c7      	b.n	801bf8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801bffe:	bf00      	nop
 801c000:	7f7fffff 	.word	0x7f7fffff
 801c004:	006e0069 	.word	0x006e0069
 801c008:	0061006e 	.word	0x0061006e
 801c00c:	2563      	movs	r5, #99	; 0x63
 801c00e:	2a63      	cmp	r2, #99	; 0x63
 801c010:	bfd4      	ite	le
 801c012:	ebc5 0202 	rsble	r2, r5, r2
 801c016:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801c01a:	2a00      	cmp	r2, #0
 801c01c:	dd43      	ble.n	801c0a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801c01e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c020:	2b00      	cmp	r3, #0
 801c022:	dd40      	ble.n	801c0a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801c024:	f04f 0901 	mov.w	r9, #1
 801c028:	210a      	movs	r1, #10
 801c02a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801c02e:	d30c      	bcc.n	801c04a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801c030:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c034:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801c038:	ee17 0a10 	vmov	r0, s14
 801c03c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c040:	fb01 0909 	mla	r9, r1, r9, r0
 801c044:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c048:	e7ef      	b.n	801c02a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801c04a:	3501      	adds	r5, #1
 801c04c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c04e:	b292      	uxth	r2, r2
 801c050:	230a      	movs	r3, #10
 801c052:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801c056:	4648      	mov	r0, r9
 801c058:	f7ff fb4e 	bl	801b6f8 <_ZN8touchgfx7Unicode4itoaElPtti>
 801c05c:	f1b9 0f01 	cmp.w	r9, #1
 801c060:	dc1f      	bgt.n	801c0a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801c062:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801c066:	2b00      	cmp	r3, #0
 801c068:	bf0c      	ite	eq
 801c06a:	2300      	moveq	r3, #0
 801c06c:	232e      	movne	r3, #46	; 0x2e
 801c06e:	aa44      	add	r2, sp, #272	; 0x110
 801c070:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c074:	eef4 7ae4 	vcmpe.f32	s15, s9
 801c078:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c07c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801c080:	f6ff af4c 	blt.w	801bf1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c084:	2300      	movs	r3, #0
 801c086:	f838 2b02 	ldrh.w	r2, [r8], #2
 801c08a:	1c59      	adds	r1, r3, #1
 801c08c:	b98a      	cbnz	r2, 801c0b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801c08e:	b29b      	uxth	r3, r3
 801c090:	2130      	movs	r1, #48	; 0x30
 801c092:	b983      	cbnz	r3, 801c0b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801c094:	2331      	movs	r3, #49	; 0x31
 801c096:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c09a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c09c:	3b02      	subs	r3, #2
 801c09e:	9310      	str	r3, [sp, #64]	; 0x40
 801c0a0:	e73c      	b.n	801bf1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c0a2:	232e      	movs	r3, #46	; 0x2e
 801c0a4:	e7e3      	b.n	801c06e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801c0a6:	ab44      	add	r3, sp, #272	; 0x110
 801c0a8:	3501      	adds	r5, #1
 801c0aa:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801c0ae:	2300      	movs	r3, #0
 801c0b0:	e7e0      	b.n	801c074 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801c0b2:	460b      	mov	r3, r1
 801c0b4:	e7e7      	b.n	801c086 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801c0b6:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801c0ba:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801c0be:	2808      	cmp	r0, #8
 801c0c0:	d806      	bhi.n	801c0d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801c0c2:	a944      	add	r1, sp, #272	; 0x110
 801c0c4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801c0c8:	3201      	adds	r2, #1
 801c0ca:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801c0ce:	e725      	b.n	801bf1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c0d0:	2a39      	cmp	r2, #57	; 0x39
 801c0d2:	bf08      	it	eq
 801c0d4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801c0d8:	3b01      	subs	r3, #1
 801c0da:	e7da      	b.n	801c092 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801c0dc:	9a08      	ldr	r2, [sp, #32]
 801c0de:	2a00      	cmp	r2, #0
 801c0e0:	f43f af23 	beq.w	801bf2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c0e4:	7812      	ldrb	r2, [r2, #0]
 801c0e6:	e720      	b.n	801bf2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c0e8:	2d00      	cmp	r5, #0
 801c0ea:	f43f aede 	beq.w	801beaa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c0ee:	782d      	ldrb	r5, [r5, #0]
 801c0f0:	e6db      	b.n	801beaa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c0f2:	bf00      	nop

0801c0f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801c0f4:	b507      	push	{r0, r1, r2, lr}
 801c0f6:	9300      	str	r3, [sp, #0]
 801c0f8:	4613      	mov	r3, r2
 801c0fa:	2200      	movs	r2, #0
 801c0fc:	f7ff fe1c 	bl	801bd38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801c100:	b003      	add	sp, #12
 801c102:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801c108 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c108:	4b01      	ldr	r3, [pc, #4]	; (801c110 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c10a:	6018      	str	r0, [r3, #0]
 801c10c:	4770      	bx	lr
 801c10e:	bf00      	nop
 801c110:	200138a4 	.word	0x200138a4

0801c114 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c114:	4b06      	ldr	r3, [pc, #24]	; (801c130 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c116:	881a      	ldrh	r2, [r3, #0]
 801c118:	4282      	cmp	r2, r0
 801c11a:	d807      	bhi.n	801c12c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c11c:	4b05      	ldr	r3, [pc, #20]	; (801c134 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c11e:	881b      	ldrh	r3, [r3, #0]
 801c120:	4413      	add	r3, r2
 801c122:	4298      	cmp	r0, r3
 801c124:	bfac      	ite	ge
 801c126:	2000      	movge	r0, #0
 801c128:	2001      	movlt	r0, #1
 801c12a:	4770      	bx	lr
 801c12c:	2000      	movs	r0, #0
 801c12e:	4770      	bx	lr
 801c130:	200138c4 	.word	0x200138c4
 801c134:	200138c8 	.word	0x200138c8

0801c138 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c138:	b508      	push	{r3, lr}
 801c13a:	4601      	mov	r1, r0
 801c13c:	f7ff ffea 	bl	801c114 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c140:	b118      	cbz	r0, 801c14a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c142:	4b02      	ldr	r3, [pc, #8]	; (801c14c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c144:	681b      	ldr	r3, [r3, #0]
 801c146:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c14a:	bd08      	pop	{r3, pc}
 801c14c:	200138a8 	.word	0x200138a8

0801c150 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c150:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c152:	4c24      	ldr	r4, [pc, #144]	; (801c1e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c154:	6823      	ldr	r3, [r4, #0]
 801c156:	2b00      	cmp	r3, #0
 801c158:	d042      	beq.n	801c1e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c15a:	4a23      	ldr	r2, [pc, #140]	; (801c1e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c15c:	4d23      	ldr	r5, [pc, #140]	; (801c1ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c15e:	8811      	ldrh	r1, [r2, #0]
 801c160:	f8b5 c000 	ldrh.w	ip, [r5]
 801c164:	4822      	ldr	r0, [pc, #136]	; (801c1f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c166:	4461      	add	r1, ip
 801c168:	1c4a      	adds	r2, r1, #1
 801c16a:	f022 0201 	bic.w	r2, r2, #1
 801c16e:	008f      	lsls	r7, r1, #2
 801c170:	0412      	lsls	r2, r2, #16
 801c172:	19de      	adds	r6, r3, r7
 801c174:	0c12      	lsrs	r2, r2, #16
 801c176:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c17a:	6006      	str	r6, [r0, #0]
 801c17c:	4e1d      	ldr	r6, [pc, #116]	; (801c1f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c17e:	19da      	adds	r2, r3, r7
 801c180:	6032      	str	r2, [r6, #0]
 801c182:	220e      	movs	r2, #14
 801c184:	fb02 f20c 	mul.w	r2, r2, ip
 801c188:	3203      	adds	r2, #3
 801c18a:	f022 0203 	bic.w	r2, r2, #3
 801c18e:	443a      	add	r2, r7
 801c190:	4f19      	ldr	r7, [pc, #100]	; (801c1f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c192:	4413      	add	r3, r2
 801c194:	603b      	str	r3, [r7, #0]
 801c196:	4f19      	ldr	r7, [pc, #100]	; (801c1fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c198:	2300      	movs	r3, #0
 801c19a:	803b      	strh	r3, [r7, #0]
 801c19c:	4f18      	ldr	r7, [pc, #96]	; (801c200 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c19e:	683f      	ldr	r7, [r7, #0]
 801c1a0:	1aba      	subs	r2, r7, r2
 801c1a2:	4f18      	ldr	r7, [pc, #96]	; (801c204 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c1a4:	603a      	str	r2, [r7, #0]
 801c1a6:	4a18      	ldr	r2, [pc, #96]	; (801c208 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c1a8:	469c      	mov	ip, r3
 801c1aa:	8013      	strh	r3, [r2, #0]
 801c1ac:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c1b0:	428b      	cmp	r3, r1
 801c1b2:	d10d      	bne.n	801c1d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c1b4:	882d      	ldrh	r5, [r5, #0]
 801c1b6:	6830      	ldr	r0, [r6, #0]
 801c1b8:	2300      	movs	r3, #0
 801c1ba:	240e      	movs	r4, #14
 801c1bc:	429d      	cmp	r5, r3
 801c1be:	d90f      	bls.n	801c1e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c1c0:	fb04 0203 	mla	r2, r4, r3, r0
 801c1c4:	3301      	adds	r3, #1
 801c1c6:	7b11      	ldrb	r1, [r2, #12]
 801c1c8:	f36f 1145 	bfc	r1, #5, #1
 801c1cc:	7311      	strb	r1, [r2, #12]
 801c1ce:	e7f5      	b.n	801c1bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c1d0:	6822      	ldr	r2, [r4, #0]
 801c1d2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c1d6:	6802      	ldr	r2, [r0, #0]
 801c1d8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c1dc:	3301      	adds	r3, #1
 801c1de:	e7e7      	b.n	801c1b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c1e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c1e2:	bf00      	nop
 801c1e4:	200138a8 	.word	0x200138a8
 801c1e8:	200138c4 	.word	0x200138c4
 801c1ec:	200138c8 	.word	0x200138c8
 801c1f0:	200138bc 	.word	0x200138bc
 801c1f4:	200138ac 	.word	0x200138ac
 801c1f8:	200138b4 	.word	0x200138b4
 801c1fc:	200138c6 	.word	0x200138c6
 801c200:	200138b0 	.word	0x200138b0
 801c204:	200138c0 	.word	0x200138c0
 801c208:	200138b8 	.word	0x200138b8

0801c20c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c20c:	4b06      	ldr	r3, [pc, #24]	; (801c228 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c20e:	681b      	ldr	r3, [r3, #0]
 801c210:	b943      	cbnz	r3, 801c224 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c212:	b139      	cbz	r1, 801c224 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c214:	4b05      	ldr	r3, [pc, #20]	; (801c22c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c216:	801a      	strh	r2, [r3, #0]
 801c218:	4b05      	ldr	r3, [pc, #20]	; (801c230 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c21a:	6019      	str	r1, [r3, #0]
 801c21c:	4b05      	ldr	r3, [pc, #20]	; (801c234 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c21e:	6018      	str	r0, [r3, #0]
 801c220:	f7ff bf96 	b.w	801c150 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c224:	4770      	bx	lr
 801c226:	bf00      	nop
 801c228:	200138b4 	.word	0x200138b4
 801c22c:	200138c8 	.word	0x200138c8
 801c230:	200138b0 	.word	0x200138b0
 801c234:	200138a8 	.word	0x200138a8

0801c238 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c238:	b470      	push	{r4, r5, r6}
 801c23a:	4c07      	ldr	r4, [pc, #28]	; (801c258 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c23c:	6826      	ldr	r6, [r4, #0]
 801c23e:	4605      	mov	r5, r0
 801c240:	4610      	mov	r0, r2
 801c242:	9a03      	ldr	r2, [sp, #12]
 801c244:	b936      	cbnz	r6, 801c254 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c246:	6025      	str	r5, [r4, #0]
 801c248:	4c04      	ldr	r4, [pc, #16]	; (801c25c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c24a:	8021      	strh	r1, [r4, #0]
 801c24c:	bc70      	pop	{r4, r5, r6}
 801c24e:	4619      	mov	r1, r3
 801c250:	f7ff bfdc 	b.w	801c20c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c254:	bc70      	pop	{r4, r5, r6}
 801c256:	4770      	bx	lr
 801c258:	200138cc 	.word	0x200138cc
 801c25c:	200138c4 	.word	0x200138c4

0801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c260:	4a12      	ldr	r2, [pc, #72]	; (801c2ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c262:	8803      	ldrh	r3, [r0, #0]
 801c264:	8812      	ldrh	r2, [r2, #0]
 801c266:	4293      	cmp	r3, r2
 801c268:	d207      	bcs.n	801c27a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c26a:	4a11      	ldr	r2, [pc, #68]	; (801c2b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c26c:	6812      	ldr	r2, [r2, #0]
 801c26e:	2114      	movs	r1, #20
 801c270:	fb01 2303 	mla	r3, r1, r3, r2
 801c274:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c278:	4770      	bx	lr
 801c27a:	490e      	ldr	r1, [pc, #56]	; (801c2b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c27c:	8809      	ldrh	r1, [r1, #0]
 801c27e:	4411      	add	r1, r2
 801c280:	428b      	cmp	r3, r1
 801c282:	da04      	bge.n	801c28e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c284:	1a9b      	subs	r3, r3, r2
 801c286:	4a0c      	ldr	r2, [pc, #48]	; (801c2b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c288:	210e      	movs	r1, #14
 801c28a:	6812      	ldr	r2, [r2, #0]
 801c28c:	e7f0      	b.n	801c270 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c28e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c292:	4293      	cmp	r3, r2
 801c294:	d108      	bne.n	801c2a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c296:	4b09      	ldr	r3, [pc, #36]	; (801c2bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c298:	781b      	ldrb	r3, [r3, #0]
 801c29a:	b91b      	cbnz	r3, 801c2a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c29c:	4b08      	ldr	r3, [pc, #32]	; (801c2c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c29e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c2a2:	4770      	bx	lr
 801c2a4:	4b07      	ldr	r3, [pc, #28]	; (801c2c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c2a6:	e7fa      	b.n	801c29e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c2a8:	2000      	movs	r0, #0
 801c2aa:	4770      	bx	lr
 801c2ac:	200138c4 	.word	0x200138c4
 801c2b0:	200138cc 	.word	0x200138cc
 801c2b4:	200138c8 	.word	0x200138c8
 801c2b8:	200138ac 	.word	0x200138ac
 801c2bc:	20013834 	.word	0x20013834
 801c2c0:	20013836 	.word	0x20013836
 801c2c4:	20013838 	.word	0x20013838

0801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c2c8:	4a12      	ldr	r2, [pc, #72]	; (801c314 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c2ca:	8803      	ldrh	r3, [r0, #0]
 801c2cc:	8812      	ldrh	r2, [r2, #0]
 801c2ce:	4293      	cmp	r3, r2
 801c2d0:	d207      	bcs.n	801c2e2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c2d2:	4a11      	ldr	r2, [pc, #68]	; (801c318 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c2d4:	6812      	ldr	r2, [r2, #0]
 801c2d6:	2114      	movs	r1, #20
 801c2d8:	fb01 2303 	mla	r3, r1, r3, r2
 801c2dc:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c2e0:	4770      	bx	lr
 801c2e2:	490e      	ldr	r1, [pc, #56]	; (801c31c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c2e4:	8809      	ldrh	r1, [r1, #0]
 801c2e6:	4411      	add	r1, r2
 801c2e8:	428b      	cmp	r3, r1
 801c2ea:	da04      	bge.n	801c2f6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c2ec:	1a9b      	subs	r3, r3, r2
 801c2ee:	4a0c      	ldr	r2, [pc, #48]	; (801c320 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c2f0:	210e      	movs	r1, #14
 801c2f2:	6812      	ldr	r2, [r2, #0]
 801c2f4:	e7f0      	b.n	801c2d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c2f6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c2fa:	4293      	cmp	r3, r2
 801c2fc:	d108      	bne.n	801c310 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c2fe:	4b09      	ldr	r3, [pc, #36]	; (801c324 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c300:	781b      	ldrb	r3, [r3, #0]
 801c302:	b91b      	cbnz	r3, 801c30c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c304:	4b08      	ldr	r3, [pc, #32]	; (801c328 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c306:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c30a:	4770      	bx	lr
 801c30c:	4b07      	ldr	r3, [pc, #28]	; (801c32c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c30e:	e7fa      	b.n	801c306 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c310:	2000      	movs	r0, #0
 801c312:	4770      	bx	lr
 801c314:	200138c4 	.word	0x200138c4
 801c318:	200138cc 	.word	0x200138cc
 801c31c:	200138c8 	.word	0x200138c8
 801c320:	200138ac 	.word	0x200138ac
 801c324:	20013834 	.word	0x20013834
 801c328:	20013838 	.word	0x20013838
 801c32c:	20013836 	.word	0x20013836

0801c330 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c330:	b510      	push	{r4, lr}
 801c332:	4a1f      	ldr	r2, [pc, #124]	; (801c3b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c334:	880b      	ldrh	r3, [r1, #0]
 801c336:	8812      	ldrh	r2, [r2, #0]
 801c338:	4293      	cmp	r3, r2
 801c33a:	d213      	bcs.n	801c364 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c33c:	4a1d      	ldr	r2, [pc, #116]	; (801c3b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c33e:	6812      	ldr	r2, [r2, #0]
 801c340:	2114      	movs	r1, #20
 801c342:	fb01 2303 	mla	r3, r1, r3, r2
 801c346:	8a1a      	ldrh	r2, [r3, #16]
 801c348:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c34c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c350:	8a5b      	ldrh	r3, [r3, #18]
 801c352:	8004      	strh	r4, [r0, #0]
 801c354:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c358:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c35c:	8041      	strh	r1, [r0, #2]
 801c35e:	8082      	strh	r2, [r0, #4]
 801c360:	80c3      	strh	r3, [r0, #6]
 801c362:	e00e      	b.n	801c382 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c364:	4914      	ldr	r1, [pc, #80]	; (801c3b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c366:	8809      	ldrh	r1, [r1, #0]
 801c368:	4411      	add	r1, r2
 801c36a:	428b      	cmp	r3, r1
 801c36c:	da0a      	bge.n	801c384 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c36e:	1a9b      	subs	r3, r3, r2
 801c370:	4a12      	ldr	r2, [pc, #72]	; (801c3bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c372:	6812      	ldr	r2, [r2, #0]
 801c374:	210e      	movs	r1, #14
 801c376:	fb01 2303 	mla	r3, r1, r3, r2
 801c37a:	681a      	ldr	r2, [r3, #0]
 801c37c:	6002      	str	r2, [r0, #0]
 801c37e:	685a      	ldr	r2, [r3, #4]
 801c380:	6042      	str	r2, [r0, #4]
 801c382:	bd10      	pop	{r4, pc}
 801c384:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c388:	4293      	cmp	r3, r2
 801c38a:	d10b      	bne.n	801c3a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c38c:	4b0c      	ldr	r3, [pc, #48]	; (801c3c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c38e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c392:	4b0c      	ldr	r3, [pc, #48]	; (801c3c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c394:	8081      	strh	r1, [r0, #4]
 801c396:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c39a:	80c2      	strh	r2, [r0, #6]
 801c39c:	2300      	movs	r3, #0
 801c39e:	8003      	strh	r3, [r0, #0]
 801c3a0:	8043      	strh	r3, [r0, #2]
 801c3a2:	e7ee      	b.n	801c382 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c3a4:	2300      	movs	r3, #0
 801c3a6:	8003      	strh	r3, [r0, #0]
 801c3a8:	8043      	strh	r3, [r0, #2]
 801c3aa:	8083      	strh	r3, [r0, #4]
 801c3ac:	e7d8      	b.n	801c360 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c3ae:	bf00      	nop
 801c3b0:	200138c4 	.word	0x200138c4
 801c3b4:	200138cc 	.word	0x200138cc
 801c3b8:	200138c8 	.word	0x200138c8
 801c3bc:	200138ac 	.word	0x200138ac
 801c3c0:	20013830 	.word	0x20013830
 801c3c4:	20013832 	.word	0x20013832

0801c3c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c3c8:	4a17      	ldr	r2, [pc, #92]	; (801c428 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801c3ca:	8803      	ldrh	r3, [r0, #0]
 801c3cc:	8812      	ldrh	r2, [r2, #0]
 801c3ce:	4293      	cmp	r3, r2
 801c3d0:	d213      	bcs.n	801c3fa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801c3d2:	4a16      	ldr	r2, [pc, #88]	; (801c42c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c3d4:	6812      	ldr	r2, [r2, #0]
 801c3d6:	2114      	movs	r1, #20
 801c3d8:	fb01 2303 	mla	r3, r1, r3, r2
 801c3dc:	8a1a      	ldrh	r2, [r3, #16]
 801c3de:	8919      	ldrh	r1, [r3, #8]
 801c3e0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c3e4:	428a      	cmp	r2, r1
 801c3e6:	db1d      	blt.n	801c424 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c3e8:	8a58      	ldrh	r0, [r3, #18]
 801c3ea:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c3ee:	895b      	ldrh	r3, [r3, #10]
 801c3f0:	4298      	cmp	r0, r3
 801c3f2:	bfac      	ite	ge
 801c3f4:	2000      	movge	r0, #0
 801c3f6:	2001      	movlt	r0, #1
 801c3f8:	4770      	bx	lr
 801c3fa:	490d      	ldr	r1, [pc, #52]	; (801c430 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c3fc:	8809      	ldrh	r1, [r1, #0]
 801c3fe:	4411      	add	r1, r2
 801c400:	428b      	cmp	r3, r1
 801c402:	da0d      	bge.n	801c420 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801c404:	1a9b      	subs	r3, r3, r2
 801c406:	4a0b      	ldr	r2, [pc, #44]	; (801c434 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c408:	6812      	ldr	r2, [r2, #0]
 801c40a:	210e      	movs	r1, #14
 801c40c:	fb01 2303 	mla	r3, r1, r3, r2
 801c410:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c414:	891a      	ldrh	r2, [r3, #8]
 801c416:	4291      	cmp	r1, r2
 801c418:	db04      	blt.n	801c424 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c41a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c41e:	e7e6      	b.n	801c3ee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801c420:	2000      	movs	r0, #0
 801c422:	4770      	bx	lr
 801c424:	2001      	movs	r0, #1
 801c426:	4770      	bx	lr
 801c428:	200138c4 	.word	0x200138c4
 801c42c:	200138cc 	.word	0x200138cc
 801c430:	200138c8 	.word	0x200138c8
 801c434:	200138ac 	.word	0x200138ac

0801c438 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c438:	4a12      	ldr	r2, [pc, #72]	; (801c484 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c43a:	8803      	ldrh	r3, [r0, #0]
 801c43c:	8811      	ldrh	r1, [r2, #0]
 801c43e:	428b      	cmp	r3, r1
 801c440:	d20b      	bcs.n	801c45a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801c442:	4a11      	ldr	r2, [pc, #68]	; (801c488 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c444:	6812      	ldr	r2, [r2, #0]
 801c446:	b112      	cbz	r2, 801c44e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c448:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c44c:	b9c0      	cbnz	r0, 801c480 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801c44e:	4a0f      	ldr	r2, [pc, #60]	; (801c48c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c450:	6811      	ldr	r1, [r2, #0]
 801c452:	2214      	movs	r2, #20
 801c454:	4353      	muls	r3, r2
 801c456:	58c8      	ldr	r0, [r1, r3]
 801c458:	4770      	bx	lr
 801c45a:	4a0d      	ldr	r2, [pc, #52]	; (801c490 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c45c:	8812      	ldrh	r2, [r2, #0]
 801c45e:	440a      	add	r2, r1
 801c460:	4293      	cmp	r3, r2
 801c462:	da04      	bge.n	801c46e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801c464:	4a08      	ldr	r2, [pc, #32]	; (801c488 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c466:	6812      	ldr	r2, [r2, #0]
 801c468:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c46c:	4770      	bx	lr
 801c46e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c472:	4293      	cmp	r3, r2
 801c474:	d103      	bne.n	801c47e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c476:	4b07      	ldr	r3, [pc, #28]	; (801c494 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c478:	681b      	ldr	r3, [r3, #0]
 801c47a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c47c:	4770      	bx	lr
 801c47e:	2000      	movs	r0, #0
 801c480:	4770      	bx	lr
 801c482:	bf00      	nop
 801c484:	200138c4 	.word	0x200138c4
 801c488:	200138a8 	.word	0x200138a8
 801c48c:	200138cc 	.word	0x200138cc
 801c490:	200138c8 	.word	0x200138c8
 801c494:	2001383c 	.word	0x2001383c

0801c498 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c498:	4b24      	ldr	r3, [pc, #144]	; (801c52c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801c49a:	8802      	ldrh	r2, [r0, #0]
 801c49c:	8818      	ldrh	r0, [r3, #0]
 801c49e:	4282      	cmp	r2, r0
 801c4a0:	d221      	bcs.n	801c4e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801c4a2:	4b23      	ldr	r3, [pc, #140]	; (801c530 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801c4a4:	6819      	ldr	r1, [r3, #0]
 801c4a6:	2314      	movs	r3, #20
 801c4a8:	fb03 1302 	mla	r3, r3, r2, r1
 801c4ac:	6858      	ldr	r0, [r3, #4]
 801c4ae:	2800      	cmp	r0, #0
 801c4b0:	d03a      	beq.n	801c528 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c4b2:	4920      	ldr	r1, [pc, #128]	; (801c534 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c4b4:	6809      	ldr	r1, [r1, #0]
 801c4b6:	2900      	cmp	r1, #0
 801c4b8:	d036      	beq.n	801c528 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c4ba:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c4be:	2900      	cmp	r1, #0
 801c4c0:	d032      	beq.n	801c528 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c4c2:	891a      	ldrh	r2, [r3, #8]
 801c4c4:	8958      	ldrh	r0, [r3, #10]
 801c4c6:	4350      	muls	r0, r2
 801c4c8:	7c5a      	ldrb	r2, [r3, #17]
 801c4ca:	7cdb      	ldrb	r3, [r3, #19]
 801c4cc:	0952      	lsrs	r2, r2, #5
 801c4ce:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c4d2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c4d6:	2b0b      	cmp	r3, #11
 801c4d8:	bf18      	it	ne
 801c4da:	0040      	lslne	r0, r0, #1
 801c4dc:	3003      	adds	r0, #3
 801c4de:	f020 0003 	bic.w	r0, r0, #3
 801c4e2:	4408      	add	r0, r1
 801c4e4:	4770      	bx	lr
 801c4e6:	4b14      	ldr	r3, [pc, #80]	; (801c538 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c4e8:	881b      	ldrh	r3, [r3, #0]
 801c4ea:	4403      	add	r3, r0
 801c4ec:	429a      	cmp	r2, r3
 801c4ee:	da1a      	bge.n	801c526 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c4f0:	4b12      	ldr	r3, [pc, #72]	; (801c53c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c4f2:	681b      	ldr	r3, [r3, #0]
 801c4f4:	1a10      	subs	r0, r2, r0
 801c4f6:	210e      	movs	r1, #14
 801c4f8:	fb01 3000 	mla	r0, r1, r0, r3
 801c4fc:	7b03      	ldrb	r3, [r0, #12]
 801c4fe:	f003 031f 	and.w	r3, r3, #31
 801c502:	2b0b      	cmp	r3, #11
 801c504:	d10b      	bne.n	801c51e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801c506:	8903      	ldrh	r3, [r0, #8]
 801c508:	8940      	ldrh	r0, [r0, #10]
 801c50a:	4358      	muls	r0, r3
 801c50c:	4b09      	ldr	r3, [pc, #36]	; (801c534 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c50e:	6819      	ldr	r1, [r3, #0]
 801c510:	3003      	adds	r0, #3
 801c512:	f020 0303 	bic.w	r3, r0, #3
 801c516:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c51a:	4418      	add	r0, r3
 801c51c:	4770      	bx	lr
 801c51e:	2b0d      	cmp	r3, #13
 801c520:	d101      	bne.n	801c526 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c522:	300d      	adds	r0, #13
 801c524:	4770      	bx	lr
 801c526:	2000      	movs	r0, #0
 801c528:	4770      	bx	lr
 801c52a:	bf00      	nop
 801c52c:	200138c4 	.word	0x200138c4
 801c530:	200138cc 	.word	0x200138cc
 801c534:	200138a8 	.word	0x200138a8
 801c538:	200138c8 	.word	0x200138c8
 801c53c:	200138ac 	.word	0x200138ac

0801c540 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801c540:	b510      	push	{r4, lr}
 801c542:	4a17      	ldr	r2, [pc, #92]	; (801c5a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801c544:	8803      	ldrh	r3, [r0, #0]
 801c546:	8812      	ldrh	r2, [r2, #0]
 801c548:	4293      	cmp	r3, r2
 801c54a:	d20c      	bcs.n	801c566 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801c54c:	4a15      	ldr	r2, [pc, #84]	; (801c5a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801c54e:	6812      	ldr	r2, [r2, #0]
 801c550:	2114      	movs	r1, #20
 801c552:	fb01 2303 	mla	r3, r1, r3, r2
 801c556:	7c58      	ldrb	r0, [r3, #17]
 801c558:	0942      	lsrs	r2, r0, #5
 801c55a:	7cd8      	ldrb	r0, [r3, #19]
 801c55c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801c560:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801c564:	bd10      	pop	{r4, pc}
 801c566:	4910      	ldr	r1, [pc, #64]	; (801c5a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801c568:	8809      	ldrh	r1, [r1, #0]
 801c56a:	4411      	add	r1, r2
 801c56c:	428b      	cmp	r3, r1
 801c56e:	da09      	bge.n	801c584 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801c570:	1a9b      	subs	r3, r3, r2
 801c572:	4a0e      	ldr	r2, [pc, #56]	; (801c5ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801c574:	6812      	ldr	r2, [r2, #0]
 801c576:	210e      	movs	r1, #14
 801c578:	fb01 2303 	mla	r3, r1, r3, r2
 801c57c:	7b18      	ldrb	r0, [r3, #12]
 801c57e:	f000 001f 	and.w	r0, r0, #31
 801c582:	e7ef      	b.n	801c564 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c584:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c588:	4293      	cmp	r3, r2
 801c58a:	d106      	bne.n	801c59a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801c58c:	f7e8 ffb0 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 801c590:	6803      	ldr	r3, [r0, #0]
 801c592:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c596:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c598:	4718      	bx	r3
 801c59a:	2000      	movs	r0, #0
 801c59c:	e7e2      	b.n	801c564 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c59e:	bf00      	nop
 801c5a0:	200138c4 	.word	0x200138c4
 801c5a4:	200138cc 	.word	0x200138cc
 801c5a8:	200138c8 	.word	0x200138c8
 801c5ac:	200138ac 	.word	0x200138ac

0801c5b0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801c5b0:	2010      	movs	r0, #16
 801c5b2:	4770      	bx	lr

0801c5b4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801c5b4:	2000      	movs	r0, #0
 801c5b6:	4770      	bx	lr

0801c5b8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c5b8:	4b02      	ldr	r3, [pc, #8]	; (801c5c4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801c5ba:	8818      	ldrh	r0, [r3, #0]
 801c5bc:	0040      	lsls	r0, r0, #1
 801c5be:	b280      	uxth	r0, r0
 801c5c0:	4770      	bx	lr
 801c5c2:	bf00      	nop
 801c5c4:	20013836 	.word	0x20013836

0801c5c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c5c8:	2bff      	cmp	r3, #255	; 0xff
 801c5ca:	d050      	beq.n	801c66e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801c5cc:	2a0b      	cmp	r2, #11
 801c5ce:	d04a      	beq.n	801c666 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c5d0:	d80e      	bhi.n	801c5f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801c5d2:	2a03      	cmp	r2, #3
 801c5d4:	d03f      	beq.n	801c656 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801c5d6:	d804      	bhi.n	801c5e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801c5d8:	2a01      	cmp	r2, #1
 801c5da:	d03e      	beq.n	801c65a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801c5dc:	d93f      	bls.n	801c65e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801c5de:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801c5e0:	4770      	bx	lr
 801c5e2:	2a09      	cmp	r2, #9
 801c5e4:	d03f      	beq.n	801c666 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c5e6:	d83c      	bhi.n	801c662 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c5e8:	2a08      	cmp	r2, #8
 801c5ea:	d03a      	beq.n	801c662 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c5ec:	2000      	movs	r0, #0
 801c5ee:	4770      	bx	lr
 801c5f0:	2a2f      	cmp	r2, #47	; 0x2f
 801c5f2:	d024      	beq.n	801c63e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801c5f4:	d80d      	bhi.n	801c612 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801c5f6:	2a2d      	cmp	r2, #45	; 0x2d
 801c5f8:	d014      	beq.n	801c624 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801c5fa:	d826      	bhi.n	801c64a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801c5fc:	2a2c      	cmp	r2, #44	; 0x2c
 801c5fe:	d1f5      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c600:	684b      	ldr	r3, [r1, #4]
 801c602:	781b      	ldrb	r3, [r3, #0]
 801c604:	2b01      	cmp	r3, #1
 801c606:	d018      	beq.n	801c63a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801c608:	d323      	bcc.n	801c652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801c60a:	2b02      	cmp	r3, #2
 801c60c:	d1ee      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c60e:	6880      	ldr	r0, [r0, #8]
 801c610:	4770      	bx	lr
 801c612:	2a31      	cmp	r2, #49	; 0x31
 801c614:	d004      	beq.n	801c620 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801c616:	d328      	bcc.n	801c66a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c618:	2a32      	cmp	r2, #50	; 0x32
 801c61a:	d026      	beq.n	801c66a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c61c:	2a33      	cmp	r2, #51	; 0x33
 801c61e:	d1e5      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c620:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801c622:	4770      	bx	lr
 801c624:	684b      	ldr	r3, [r1, #4]
 801c626:	781b      	ldrb	r3, [r3, #0]
 801c628:	2b01      	cmp	r3, #1
 801c62a:	d004      	beq.n	801c636 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801c62c:	d30b      	bcc.n	801c646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801c62e:	2b02      	cmp	r3, #2
 801c630:	d1dc      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c632:	6900      	ldr	r0, [r0, #16]
 801c634:	4770      	bx	lr
 801c636:	6a00      	ldr	r0, [r0, #32]
 801c638:	4770      	bx	lr
 801c63a:	6980      	ldr	r0, [r0, #24]
 801c63c:	4770      	bx	lr
 801c63e:	684b      	ldr	r3, [r1, #4]
 801c640:	781b      	ldrb	r3, [r3, #0]
 801c642:	2b00      	cmp	r3, #0
 801c644:	d1d2      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c646:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801c648:	4770      	bx	lr
 801c64a:	684b      	ldr	r3, [r1, #4]
 801c64c:	781b      	ldrb	r3, [r3, #0]
 801c64e:	2b00      	cmp	r3, #0
 801c650:	d1cc      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c652:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801c654:	4770      	bx	lr
 801c656:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801c658:	4770      	bx	lr
 801c65a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801c65c:	4770      	bx	lr
 801c65e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801c660:	4770      	bx	lr
 801c662:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801c664:	4770      	bx	lr
 801c666:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801c668:	4770      	bx	lr
 801c66a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801c66c:	4770      	bx	lr
 801c66e:	2a0b      	cmp	r2, #11
 801c670:	d049      	beq.n	801c706 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c672:	d80e      	bhi.n	801c692 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801c674:	2a03      	cmp	r2, #3
 801c676:	d040      	beq.n	801c6fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801c678:	d804      	bhi.n	801c684 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801c67a:	2a01      	cmp	r2, #1
 801c67c:	d03f      	beq.n	801c6fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801c67e:	d940      	bls.n	801c702 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801c680:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801c682:	4770      	bx	lr
 801c684:	2a09      	cmp	r2, #9
 801c686:	d03e      	beq.n	801c706 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c688:	d801      	bhi.n	801c68e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801c68a:	2a08      	cmp	r2, #8
 801c68c:	d1ae      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c68e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801c690:	4770      	bx	lr
 801c692:	2a2f      	cmp	r2, #47	; 0x2f
 801c694:	d024      	beq.n	801c6e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801c696:	d80d      	bhi.n	801c6b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801c698:	2a2d      	cmp	r2, #45	; 0x2d
 801c69a:	d014      	beq.n	801c6c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801c69c:	d826      	bhi.n	801c6ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801c69e:	2a2c      	cmp	r2, #44	; 0x2c
 801c6a0:	d1a4      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6a2:	684b      	ldr	r3, [r1, #4]
 801c6a4:	781b      	ldrb	r3, [r3, #0]
 801c6a6:	2b01      	cmp	r3, #1
 801c6a8:	d018      	beq.n	801c6dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801c6aa:	d324      	bcc.n	801c6f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801c6ac:	2b02      	cmp	r3, #2
 801c6ae:	d19d      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6b0:	68c0      	ldr	r0, [r0, #12]
 801c6b2:	4770      	bx	lr
 801c6b4:	2a31      	cmp	r2, #49	; 0x31
 801c6b6:	d004      	beq.n	801c6c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801c6b8:	d327      	bcc.n	801c70a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c6ba:	2a32      	cmp	r2, #50	; 0x32
 801c6bc:	d025      	beq.n	801c70a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c6be:	2a33      	cmp	r2, #51	; 0x33
 801c6c0:	d194      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6c2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801c6c4:	4770      	bx	lr
 801c6c6:	684b      	ldr	r3, [r1, #4]
 801c6c8:	781b      	ldrb	r3, [r3, #0]
 801c6ca:	2b01      	cmp	r3, #1
 801c6cc:	d004      	beq.n	801c6d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801c6ce:	d30b      	bcc.n	801c6e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801c6d0:	2b02      	cmp	r3, #2
 801c6d2:	d18b      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6d4:	6940      	ldr	r0, [r0, #20]
 801c6d6:	4770      	bx	lr
 801c6d8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801c6da:	4770      	bx	lr
 801c6dc:	69c0      	ldr	r0, [r0, #28]
 801c6de:	4770      	bx	lr
 801c6e0:	684b      	ldr	r3, [r1, #4]
 801c6e2:	781b      	ldrb	r3, [r3, #0]
 801c6e4:	2b00      	cmp	r3, #0
 801c6e6:	d181      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6e8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801c6ea:	4770      	bx	lr
 801c6ec:	684b      	ldr	r3, [r1, #4]
 801c6ee:	781b      	ldrb	r3, [r3, #0]
 801c6f0:	2b00      	cmp	r3, #0
 801c6f2:	f47f af7b 	bne.w	801c5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6f6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801c6f8:	4770      	bx	lr
 801c6fa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801c6fc:	4770      	bx	lr
 801c6fe:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801c700:	4770      	bx	lr
 801c702:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801c704:	4770      	bx	lr
 801c706:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801c708:	4770      	bx	lr
 801c70a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801c70c:	4770      	bx	lr

0801c70e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c70e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c712:	b087      	sub	sp, #28
 801c714:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c716:	9205      	str	r2, [sp, #20]
 801c718:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c71c:	9202      	str	r2, [sp, #8]
 801c71e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c722:	9101      	str	r1, [sp, #4]
 801c724:	6841      	ldr	r1, [r0, #4]
 801c726:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c72a:	fb01 2404 	mla	r4, r1, r4, r2
 801c72e:	6802      	ldr	r2, [r0, #0]
 801c730:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c734:	f8de 2000 	ldr.w	r2, [lr]
 801c738:	9203      	str	r2, [sp, #12]
 801c73a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c73e:	3204      	adds	r2, #4
 801c740:	9204      	str	r2, [sp, #16]
 801c742:	9a02      	ldr	r2, [sp, #8]
 801c744:	43d6      	mvns	r6, r2
 801c746:	b2f6      	uxtb	r6, r6
 801c748:	9a01      	ldr	r2, [sp, #4]
 801c74a:	2a00      	cmp	r2, #0
 801c74c:	dc03      	bgt.n	801c756 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c74e:	9a05      	ldr	r2, [sp, #20]
 801c750:	2a00      	cmp	r2, #0
 801c752:	f340 8129 	ble.w	801c9a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c756:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c758:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c75c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c760:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c764:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c766:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c76a:	2b00      	cmp	r3, #0
 801c76c:	dd0e      	ble.n	801c78c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c76e:	1408      	asrs	r0, r1, #16
 801c770:	d405      	bmi.n	801c77e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c772:	4560      	cmp	r0, ip
 801c774:	da03      	bge.n	801c77e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c776:	1410      	asrs	r0, r2, #16
 801c778:	d401      	bmi.n	801c77e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c77a:	42b8      	cmp	r0, r7
 801c77c:	db07      	blt.n	801c78e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c77e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c780:	4401      	add	r1, r0
 801c782:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c784:	3b01      	subs	r3, #1
 801c786:	4402      	add	r2, r0
 801c788:	3402      	adds	r4, #2
 801c78a:	e7ee      	b.n	801c76a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c78c:	d071      	beq.n	801c872 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c78e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c790:	1e58      	subs	r0, r3, #1
 801c792:	fb05 1500 	mla	r5, r5, r0, r1
 801c796:	142d      	asrs	r5, r5, #16
 801c798:	d45f      	bmi.n	801c85a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c79a:	4565      	cmp	r5, ip
 801c79c:	da5d      	bge.n	801c85a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c79e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c7a0:	fb05 2000 	mla	r0, r5, r0, r2
 801c7a4:	1400      	asrs	r0, r0, #16
 801c7a6:	d458      	bmi.n	801c85a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c7a8:	42b8      	cmp	r0, r7
 801c7aa:	da56      	bge.n	801c85a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c7ac:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801c7b0:	4699      	mov	r9, r3
 801c7b2:	46a2      	mov	sl, r4
 801c7b4:	f1b9 0f00 	cmp.w	r9, #0
 801c7b8:	dd57      	ble.n	801c86a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c7ba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c7be:	9803      	ldr	r0, [sp, #12]
 801c7c0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801c7c4:	140d      	asrs	r5, r1, #16
 801c7c6:	fb07 000c 	mla	r0, r7, ip, r0
 801c7ca:	f109 39ff 	add.w	r9, r9, #4294967295
 801c7ce:	5d40      	ldrb	r0, [r0, r5]
 801c7d0:	9d04      	ldr	r5, [sp, #16]
 801c7d2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c7d6:	f8ba 5000 	ldrh.w	r5, [sl]
 801c7da:	122f      	asrs	r7, r5, #8
 801c7dc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c7e0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c7e4:	fb17 f706 	smulbb	r7, r7, r6
 801c7e8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c7ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c7f0:	00ed      	lsls	r5, r5, #3
 801c7f2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c7f6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c7fa:	10c7      	asrs	r7, r0, #3
 801c7fc:	b2ed      	uxtb	r5, r5
 801c7fe:	00c0      	lsls	r0, r0, #3
 801c800:	fb18 f806 	smulbb	r8, r8, r6
 801c804:	fb15 f506 	smulbb	r5, r5, r6
 801c808:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c80c:	b2c0      	uxtb	r0, r0
 801c80e:	fa1f fc8c 	uxth.w	ip, ip
 801c812:	fb07 870b 	mla	r7, r7, fp, r8
 801c816:	fb00 500b 	mla	r0, r0, fp, r5
 801c81a:	b280      	uxth	r0, r0
 801c81c:	b2bf      	uxth	r7, r7
 801c81e:	f10c 0501 	add.w	r5, ip, #1
 801c822:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c826:	f107 0801 	add.w	r8, r7, #1
 801c82a:	1c45      	adds	r5, r0, #1
 801c82c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c830:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c834:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c836:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c83a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c83e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c842:	ea45 0c0c 	orr.w	ip, r5, ip
 801c846:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c84a:	4401      	add	r1, r0
 801c84c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c84e:	ea4c 0c08 	orr.w	ip, ip, r8
 801c852:	f82a cb02 	strh.w	ip, [sl], #2
 801c856:	4402      	add	r2, r0
 801c858:	e7ac      	b.n	801c7b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c85a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801c85e:	f04f 0800 	mov.w	r8, #0
 801c862:	eb03 0008 	add.w	r0, r3, r8
 801c866:	2800      	cmp	r0, #0
 801c868:	dc41      	bgt.n	801c8ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c86a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c86e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c872:	9b01      	ldr	r3, [sp, #4]
 801c874:	2b00      	cmp	r3, #0
 801c876:	f340 8097 	ble.w	801c9a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c87a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c87e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c882:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c886:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c888:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c88c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c890:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c894:	eef0 6a62 	vmov.f32	s13, s5
 801c898:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c89c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c8a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c8a4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801c8a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c8ac:	eef0 6a43 	vmov.f32	s13, s6
 801c8b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c8b4:	ee12 2a90 	vmov	r2, s5
 801c8b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c8bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8c0:	ee13 2a10 	vmov	r2, s6
 801c8c4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c8c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8cc:	9314      	str	r3, [sp, #80]	; 0x50
 801c8ce:	9b01      	ldr	r3, [sp, #4]
 801c8d0:	9a05      	ldr	r2, [sp, #20]
 801c8d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c8d6:	3b01      	subs	r3, #1
 801c8d8:	9301      	str	r3, [sp, #4]
 801c8da:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801c8de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8e0:	eeb0 3a67 	vmov.f32	s6, s15
 801c8e4:	bf08      	it	eq
 801c8e6:	4613      	moveq	r3, r2
 801c8e8:	eef0 2a47 	vmov.f32	s5, s14
 801c8ec:	e72c      	b.n	801c748 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c8ee:	140f      	asrs	r7, r1, #16
 801c8f0:	d453      	bmi.n	801c99a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8f2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c8f6:	42bd      	cmp	r5, r7
 801c8f8:	dd4f      	ble.n	801c99a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c8fe:	d44c      	bmi.n	801c99a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c900:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c904:	4560      	cmp	r0, ip
 801c906:	dd48      	ble.n	801c99a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c908:	9803      	ldr	r0, [sp, #12]
 801c90a:	b22d      	sxth	r5, r5
 801c90c:	fb0c 0505 	mla	r5, ip, r5, r0
 801c910:	5de8      	ldrb	r0, [r5, r7]
 801c912:	9d04      	ldr	r5, [sp, #16]
 801c914:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c918:	f06f 0501 	mvn.w	r5, #1
 801c91c:	fb05 fb08 	mul.w	fp, r5, r8
 801c920:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c924:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c928:	122f      	asrs	r7, r5, #8
 801c92a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c92e:	fb17 f706 	smulbb	r7, r7, r6
 801c932:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c936:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c93a:	00ed      	lsls	r5, r5, #3
 801c93c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c940:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c944:	10c7      	asrs	r7, r0, #3
 801c946:	b2ed      	uxtb	r5, r5
 801c948:	00c0      	lsls	r0, r0, #3
 801c94a:	fb19 f906 	smulbb	r9, r9, r6
 801c94e:	fb15 f506 	smulbb	r5, r5, r6
 801c952:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c956:	b2c0      	uxtb	r0, r0
 801c958:	fa1f fc8c 	uxth.w	ip, ip
 801c95c:	fb07 970a 	mla	r7, r7, sl, r9
 801c960:	fb00 500a 	mla	r0, r0, sl, r5
 801c964:	b2bf      	uxth	r7, r7
 801c966:	b280      	uxth	r0, r0
 801c968:	f10c 0501 	add.w	r5, ip, #1
 801c96c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c970:	f107 0901 	add.w	r9, r7, #1
 801c974:	1c45      	adds	r5, r0, #1
 801c976:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c97a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c97e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c982:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c986:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c98a:	ea45 0c0c 	orr.w	ip, r5, ip
 801c98e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c992:	ea4c 0c09 	orr.w	ip, ip, r9
 801c996:	f824 c00b 	strh.w	ip, [r4, fp]
 801c99a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c99c:	4401      	add	r1, r0
 801c99e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c9a0:	f108 38ff 	add.w	r8, r8, #4294967295
 801c9a4:	4402      	add	r2, r0
 801c9a6:	e75c      	b.n	801c862 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801c9a8:	b007      	add	sp, #28
 801c9aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c9ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c9ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c9b2:	b085      	sub	sp, #20
 801c9b4:	4693      	mov	fp, r2
 801c9b6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c9b8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c9ba:	6870      	ldr	r0, [r6, #4]
 801c9bc:	9100      	str	r1, [sp, #0]
 801c9be:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c9c2:	fb00 2404 	mla	r4, r0, r4, r2
 801c9c6:	6832      	ldr	r2, [r6, #0]
 801c9c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c9cc:	682a      	ldr	r2, [r5, #0]
 801c9ce:	9201      	str	r2, [sp, #4]
 801c9d0:	686a      	ldr	r2, [r5, #4]
 801c9d2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c9d6:	3204      	adds	r2, #4
 801c9d8:	9202      	str	r2, [sp, #8]
 801c9da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c9de:	9a00      	ldr	r2, [sp, #0]
 801c9e0:	2a00      	cmp	r2, #0
 801c9e2:	dc03      	bgt.n	801c9ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c9e4:	f1bb 0f00 	cmp.w	fp, #0
 801c9e8:	f340 80a0 	ble.w	801cb2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801c9ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c9ee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c9f2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c9f6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c9fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c9fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ca00:	2b00      	cmp	r3, #0
 801ca02:	dd0c      	ble.n	801ca1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ca04:	1406      	asrs	r6, r0, #16
 801ca06:	d405      	bmi.n	801ca14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ca08:	454e      	cmp	r6, r9
 801ca0a:	da03      	bge.n	801ca14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ca0c:	1416      	asrs	r6, r2, #16
 801ca0e:	d401      	bmi.n	801ca14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ca10:	4546      	cmp	r6, r8
 801ca12:	db05      	blt.n	801ca20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ca14:	4470      	add	r0, lr
 801ca16:	4462      	add	r2, ip
 801ca18:	3b01      	subs	r3, #1
 801ca1a:	3402      	adds	r4, #2
 801ca1c:	e7f0      	b.n	801ca00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ca1e:	d00f      	beq.n	801ca40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ca20:	1e5e      	subs	r6, r3, #1
 801ca22:	fb0e 0706 	mla	r7, lr, r6, r0
 801ca26:	143f      	asrs	r7, r7, #16
 801ca28:	d541      	bpl.n	801caae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801ca2a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ca2e:	4698      	mov	r8, r3
 801ca30:	9603      	str	r6, [sp, #12]
 801ca32:	f1b8 0f00 	cmp.w	r8, #0
 801ca36:	dc59      	bgt.n	801caec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ca38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ca3c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ca40:	9b00      	ldr	r3, [sp, #0]
 801ca42:	2b00      	cmp	r3, #0
 801ca44:	dd72      	ble.n	801cb2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ca46:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca4e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ca52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ca54:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca58:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca5c:	eeb0 6a62 	vmov.f32	s12, s5
 801ca60:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca68:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca6c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ca70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca74:	eeb0 6a43 	vmov.f32	s12, s6
 801ca78:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca7c:	ee12 2a90 	vmov	r2, s5
 801ca80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca84:	fb92 fef3 	sdiv	lr, r2, r3
 801ca88:	ee13 2a10 	vmov	r2, s6
 801ca8c:	fb92 fcf3 	sdiv	ip, r2, r3
 801ca90:	9b00      	ldr	r3, [sp, #0]
 801ca92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca96:	3b01      	subs	r3, #1
 801ca98:	9300      	str	r3, [sp, #0]
 801ca9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ca9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801caa0:	eeb0 3a67 	vmov.f32	s6, s15
 801caa4:	bf08      	it	eq
 801caa6:	465b      	moveq	r3, fp
 801caa8:	eef0 2a47 	vmov.f32	s5, s14
 801caac:	e797      	b.n	801c9de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801caae:	454f      	cmp	r7, r9
 801cab0:	dabb      	bge.n	801ca2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cab2:	fb0c 2606 	mla	r6, ip, r6, r2
 801cab6:	1436      	asrs	r6, r6, #16
 801cab8:	d4b7      	bmi.n	801ca2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801caba:	4546      	cmp	r6, r8
 801cabc:	dab5      	bge.n	801ca2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cabe:	461e      	mov	r6, r3
 801cac0:	46a0      	mov	r8, r4
 801cac2:	2e00      	cmp	r6, #0
 801cac4:	ddb8      	ble.n	801ca38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cac6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801caca:	9901      	ldr	r1, [sp, #4]
 801cacc:	1417      	asrs	r7, r2, #16
 801cace:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cad2:	fb0a 1707 	mla	r7, sl, r7, r1
 801cad6:	9902      	ldr	r1, [sp, #8]
 801cad8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801cadc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cae0:	f828 7b02 	strh.w	r7, [r8], #2
 801cae4:	4470      	add	r0, lr
 801cae6:	4462      	add	r2, ip
 801cae8:	3e01      	subs	r6, #1
 801caea:	e7ea      	b.n	801cac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801caec:	ea5f 4920 	movs.w	r9, r0, asr #16
 801caf0:	d417      	bmi.n	801cb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801caf2:	68ae      	ldr	r6, [r5, #8]
 801caf4:	454e      	cmp	r6, r9
 801caf6:	dd14      	ble.n	801cb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801caf8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cafc:	d411      	bmi.n	801cb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cafe:	68ef      	ldr	r7, [r5, #12]
 801cb00:	4557      	cmp	r7, sl
 801cb02:	dd0e      	ble.n	801cb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cb04:	9f01      	ldr	r7, [sp, #4]
 801cb06:	b236      	sxth	r6, r6
 801cb08:	fb0a 7606 	mla	r6, sl, r6, r7
 801cb0c:	9f02      	ldr	r7, [sp, #8]
 801cb0e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801cb12:	f06f 0101 	mvn.w	r1, #1
 801cb16:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cb1a:	fb01 f608 	mul.w	r6, r1, r8
 801cb1e:	9903      	ldr	r1, [sp, #12]
 801cb20:	538f      	strh	r7, [r1, r6]
 801cb22:	4470      	add	r0, lr
 801cb24:	4462      	add	r2, ip
 801cb26:	f108 38ff 	add.w	r8, r8, #4294967295
 801cb2a:	e782      	b.n	801ca32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb2c:	b005      	add	sp, #20
 801cb2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb36:	b087      	sub	sp, #28
 801cb38:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cb3a:	9205      	str	r2, [sp, #20]
 801cb3c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cb40:	9203      	str	r2, [sp, #12]
 801cb42:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801cb46:	9102      	str	r1, [sp, #8]
 801cb48:	6861      	ldr	r1, [r4, #4]
 801cb4a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cb4e:	fb01 2000 	mla	r0, r1, r0, r2
 801cb52:	6822      	ldr	r2, [r4, #0]
 801cb54:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801cb58:	9200      	str	r2, [sp, #0]
 801cb5a:	f8dc 2000 	ldr.w	r2, [ip]
 801cb5e:	9204      	str	r2, [sp, #16]
 801cb60:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cb64:	3204      	adds	r2, #4
 801cb66:	9201      	str	r2, [sp, #4]
 801cb68:	9a03      	ldr	r2, [sp, #12]
 801cb6a:	43d5      	mvns	r5, r2
 801cb6c:	b2ed      	uxtb	r5, r5
 801cb6e:	9a02      	ldr	r2, [sp, #8]
 801cb70:	2a00      	cmp	r2, #0
 801cb72:	dc03      	bgt.n	801cb7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cb74:	9a05      	ldr	r2, [sp, #20]
 801cb76:	2a00      	cmp	r2, #0
 801cb78:	f340 812c 	ble.w	801cdd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cb7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cb7e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801cb82:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801cb86:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cb8a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cb8c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cb90:	2b00      	cmp	r3, #0
 801cb92:	dd10      	ble.n	801cbb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb94:	140c      	asrs	r4, r1, #16
 801cb96:	d405      	bmi.n	801cba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb98:	4574      	cmp	r4, lr
 801cb9a:	da03      	bge.n	801cba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb9c:	1414      	asrs	r4, r2, #16
 801cb9e:	d401      	bmi.n	801cba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cba0:	42bc      	cmp	r4, r7
 801cba2:	db09      	blt.n	801cbb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cba4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cba6:	9800      	ldr	r0, [sp, #0]
 801cba8:	4421      	add	r1, r4
 801cbaa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cbac:	3002      	adds	r0, #2
 801cbae:	4422      	add	r2, r4
 801cbb0:	3b01      	subs	r3, #1
 801cbb2:	9000      	str	r0, [sp, #0]
 801cbb4:	e7ec      	b.n	801cb90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801cbb6:	d071      	beq.n	801cc9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801cbb8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cbba:	1e5c      	subs	r4, r3, #1
 801cbbc:	fb06 1604 	mla	r6, r6, r4, r1
 801cbc0:	1436      	asrs	r6, r6, #16
 801cbc2:	d45d      	bmi.n	801cc80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbc4:	4576      	cmp	r6, lr
 801cbc6:	da5b      	bge.n	801cc80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbc8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801cbca:	fb06 2404 	mla	r4, r6, r4, r2
 801cbce:	1424      	asrs	r4, r4, #16
 801cbd0:	d456      	bmi.n	801cc80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbd2:	42bc      	cmp	r4, r7
 801cbd4:	da54      	bge.n	801cc80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbd6:	f8dd 9000 	ldr.w	r9, [sp]
 801cbda:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801cbde:	4698      	mov	r8, r3
 801cbe0:	f1b8 0f00 	cmp.w	r8, #0
 801cbe4:	dd54      	ble.n	801cc90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801cbe6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cbea:	9804      	ldr	r0, [sp, #16]
 801cbec:	1414      	asrs	r4, r2, #16
 801cbee:	fb07 0404 	mla	r4, r7, r4, r0
 801cbf2:	140e      	asrs	r6, r1, #16
 801cbf4:	9801      	ldr	r0, [sp, #4]
 801cbf6:	f814 e006 	ldrb.w	lr, [r4, r6]
 801cbfa:	f8b9 4000 	ldrh.w	r4, [r9]
 801cbfe:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cc02:	eb00 0b0e 	add.w	fp, r0, lr
 801cc06:	1227      	asrs	r7, r4, #8
 801cc08:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cc0c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cc10:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801cc14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cc16:	fb16 f60a 	smulbb	r6, r6, sl
 801cc1a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cc1e:	fb07 6705 	mla	r7, r7, r5, r6
 801cc22:	10e6      	asrs	r6, r4, #3
 801cc24:	00e4      	lsls	r4, r4, #3
 801cc26:	b2e4      	uxtb	r4, r4
 801cc28:	fb1b fb0a 	smulbb	fp, fp, sl
 801cc2c:	fb14 f405 	smulbb	r4, r4, r5
 801cc30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cc34:	b2bf      	uxth	r7, r7
 801cc36:	fb06 b605 	mla	r6, r6, r5, fp
 801cc3a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801cc3e:	b2b6      	uxth	r6, r6
 801cc40:	fa1f fe8e 	uxth.w	lr, lr
 801cc44:	1c7c      	adds	r4, r7, #1
 801cc46:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cc4a:	f106 0b01 	add.w	fp, r6, #1
 801cc4e:	f10e 0401 	add.w	r4, lr, #1
 801cc52:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801cc56:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cc5a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cc5e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cc62:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cc66:	4327      	orrs	r7, r4
 801cc68:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cc6c:	4401      	add	r1, r0
 801cc6e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cc70:	ea47 070b 	orr.w	r7, r7, fp
 801cc74:	f829 7b02 	strh.w	r7, [r9], #2
 801cc78:	4402      	add	r2, r0
 801cc7a:	f108 38ff 	add.w	r8, r8, #4294967295
 801cc7e:	e7af      	b.n	801cbe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801cc80:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801cc84:	f04f 0e00 	mov.w	lr, #0
 801cc88:	eb03 040e 	add.w	r4, r3, lr
 801cc8c:	2c00      	cmp	r4, #0
 801cc8e:	dc43      	bgt.n	801cd18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cc90:	9a00      	ldr	r2, [sp, #0]
 801cc92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cc96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cc9a:	9300      	str	r3, [sp, #0]
 801cc9c:	9b02      	ldr	r3, [sp, #8]
 801cc9e:	2b00      	cmp	r3, #0
 801cca0:	f340 8098 	ble.w	801cdd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cca4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cca8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ccac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ccb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ccb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ccb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ccba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ccbe:	eef0 6a62 	vmov.f32	s13, s5
 801ccc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ccc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccce:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801ccd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ccd6:	eef0 6a43 	vmov.f32	s13, s6
 801ccda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ccde:	ee12 2a90 	vmov	r2, s5
 801cce2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cce6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccea:	ee13 2a10 	vmov	r2, s6
 801ccee:	9313      	str	r3, [sp, #76]	; 0x4c
 801ccf0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ccf2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccf6:	9314      	str	r3, [sp, #80]	; 0x50
 801ccf8:	9b02      	ldr	r3, [sp, #8]
 801ccfa:	9a05      	ldr	r2, [sp, #20]
 801ccfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd00:	3b01      	subs	r3, #1
 801cd02:	9302      	str	r3, [sp, #8]
 801cd04:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cd08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cd0a:	eeb0 3a67 	vmov.f32	s6, s15
 801cd0e:	bf08      	it	eq
 801cd10:	4613      	moveq	r3, r2
 801cd12:	eef0 2a47 	vmov.f32	s5, s14
 801cd16:	e72a      	b.n	801cb6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cd18:	140f      	asrs	r7, r1, #16
 801cd1a:	d454      	bmi.n	801cdc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd1c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801cd20:	42be      	cmp	r6, r7
 801cd22:	dd50      	ble.n	801cdc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd24:	ea5f 4822 	movs.w	r8, r2, asr #16
 801cd28:	d44d      	bmi.n	801cdc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd2a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801cd2e:	4544      	cmp	r4, r8
 801cd30:	dd49      	ble.n	801cdc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd32:	9c04      	ldr	r4, [sp, #16]
 801cd34:	b236      	sxth	r6, r6
 801cd36:	fb08 4606 	mla	r6, r8, r6, r4
 801cd3a:	f06f 0001 	mvn.w	r0, #1
 801cd3e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801cd42:	9c01      	ldr	r4, [sp, #4]
 801cd44:	fb00 fa0e 	mul.w	sl, r0, lr
 801cd48:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cd4c:	9800      	ldr	r0, [sp, #0]
 801cd4e:	eb04 0b08 	add.w	fp, r4, r8
 801cd52:	f830 400a 	ldrh.w	r4, [r0, sl]
 801cd56:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cd5a:	9801      	ldr	r0, [sp, #4]
 801cd5c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cd60:	f810 8008 	ldrb.w	r8, [r0, r8]
 801cd64:	9800      	ldr	r0, [sp, #0]
 801cd66:	1227      	asrs	r7, r4, #8
 801cd68:	fb16 f609 	smulbb	r6, r6, r9
 801cd6c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cd70:	fb07 6705 	mla	r7, r7, r5, r6
 801cd74:	10e6      	asrs	r6, r4, #3
 801cd76:	00e4      	lsls	r4, r4, #3
 801cd78:	b2e4      	uxtb	r4, r4
 801cd7a:	fb1b fb09 	smulbb	fp, fp, r9
 801cd7e:	fb14 f405 	smulbb	r4, r4, r5
 801cd82:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cd86:	b2bf      	uxth	r7, r7
 801cd88:	fb06 b605 	mla	r6, r6, r5, fp
 801cd8c:	fb08 4809 	mla	r8, r8, r9, r4
 801cd90:	b2b6      	uxth	r6, r6
 801cd92:	fa1f f888 	uxth.w	r8, r8
 801cd96:	1c7c      	adds	r4, r7, #1
 801cd98:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cd9c:	f106 0b01 	add.w	fp, r6, #1
 801cda0:	f108 0401 	add.w	r4, r8, #1
 801cda4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801cda8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cdac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cdb0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cdb4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cdb8:	4327      	orrs	r7, r4
 801cdba:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cdbe:	ea47 070b 	orr.w	r7, r7, fp
 801cdc2:	f820 700a 	strh.w	r7, [r0, sl]
 801cdc6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cdc8:	4401      	add	r1, r0
 801cdca:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cdcc:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cdd0:	4402      	add	r2, r0
 801cdd2:	e759      	b.n	801cc88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801cdd4:	b007      	add	sp, #28
 801cdd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801cddc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cde0:	b085      	sub	sp, #20
 801cde2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cde6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cde8:	9203      	str	r2, [sp, #12]
 801cdea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cdee:	6870      	ldr	r0, [r6, #4]
 801cdf0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cdf2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801cdf6:	686f      	ldr	r7, [r5, #4]
 801cdf8:	9101      	str	r1, [sp, #4]
 801cdfa:	fb00 2404 	mla	r4, r0, r4, r2
 801cdfe:	6832      	ldr	r2, [r6, #0]
 801ce00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ce04:	682a      	ldr	r2, [r5, #0]
 801ce06:	9202      	str	r2, [sp, #8]
 801ce08:	3704      	adds	r7, #4
 801ce0a:	9a01      	ldr	r2, [sp, #4]
 801ce0c:	2a00      	cmp	r2, #0
 801ce0e:	dc03      	bgt.n	801ce18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ce10:	9a03      	ldr	r2, [sp, #12]
 801ce12:	2a00      	cmp	r2, #0
 801ce14:	f340 80cc 	ble.w	801cfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ce18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ce1a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ce1e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ce22:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ce26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ce28:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ce2c:	2b00      	cmp	r3, #0
 801ce2e:	dd0d      	ble.n	801ce4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ce30:	1406      	asrs	r6, r0, #16
 801ce32:	d405      	bmi.n	801ce40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ce34:	454e      	cmp	r6, r9
 801ce36:	da03      	bge.n	801ce40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ce38:	1416      	asrs	r6, r2, #16
 801ce3a:	d401      	bmi.n	801ce40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ce3c:	4546      	cmp	r6, r8
 801ce3e:	db06      	blt.n	801ce4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ce40:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801ce42:	4460      	add	r0, ip
 801ce44:	4432      	add	r2, r6
 801ce46:	3b01      	subs	r3, #1
 801ce48:	3402      	adds	r4, #2
 801ce4a:	e7ef      	b.n	801ce2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801ce4c:	d00f      	beq.n	801ce6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ce4e:	1e5e      	subs	r6, r3, #1
 801ce50:	fb0c 0e06 	mla	lr, ip, r6, r0
 801ce54:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801ce58:	d543      	bpl.n	801cee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ce5a:	4698      	mov	r8, r3
 801ce5c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801ce60:	f1b8 0f00 	cmp.w	r8, #0
 801ce64:	dc71      	bgt.n	801cf4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ce66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ce6a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ce6e:	9b01      	ldr	r3, [sp, #4]
 801ce70:	2b00      	cmp	r3, #0
 801ce72:	f340 809d 	ble.w	801cfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ce76:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce7e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ce82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce84:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce8c:	eeb0 6a62 	vmov.f32	s12, s5
 801ce90:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ce98:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce9c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cea0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cea4:	eeb0 6a43 	vmov.f32	s12, s6
 801cea8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ceac:	ee12 2a90 	vmov	r2, s5
 801ceb0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ceb4:	fb92 fcf3 	sdiv	ip, r2, r3
 801ceb8:	ee13 2a10 	vmov	r2, s6
 801cebc:	fb92 f3f3 	sdiv	r3, r2, r3
 801cec0:	9312      	str	r3, [sp, #72]	; 0x48
 801cec2:	9b01      	ldr	r3, [sp, #4]
 801cec4:	9a03      	ldr	r2, [sp, #12]
 801cec6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ceca:	3b01      	subs	r3, #1
 801cecc:	9301      	str	r3, [sp, #4]
 801cece:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ced2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ced4:	eeb0 3a67 	vmov.f32	s6, s15
 801ced8:	bf08      	it	eq
 801ceda:	4613      	moveq	r3, r2
 801cedc:	eef0 2a47 	vmov.f32	s5, s14
 801cee0:	e793      	b.n	801ce0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cee2:	45ce      	cmp	lr, r9
 801cee4:	dab9      	bge.n	801ce5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cee6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cee8:	fb01 2606 	mla	r6, r1, r6, r2
 801ceec:	1436      	asrs	r6, r6, #16
 801ceee:	d4b4      	bmi.n	801ce5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cef0:	4546      	cmp	r6, r8
 801cef2:	dab2      	bge.n	801ce5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cef4:	4698      	mov	r8, r3
 801cef6:	46a2      	mov	sl, r4
 801cef8:	f1b8 0f00 	cmp.w	r8, #0
 801cefc:	ddb3      	ble.n	801ce66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cefe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cf02:	9902      	ldr	r1, [sp, #8]
 801cf04:	1416      	asrs	r6, r2, #16
 801cf06:	fb09 1606 	mla	r6, r9, r6, r1
 801cf0a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801cf0e:	492a      	ldr	r1, [pc, #168]	; (801cfb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801cf10:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801cf14:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cf18:	eb07 0b0e 	add.w	fp, r7, lr
 801cf1c:	4460      	add	r0, ip
 801cf1e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801cf22:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801cf26:	00f6      	lsls	r6, r6, #3
 801cf28:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801cf2c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cf30:	ea49 0606 	orr.w	r6, r9, r6
 801cf34:	f817 900e 	ldrb.w	r9, [r7, lr]
 801cf38:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cf3a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801cf3e:	f82a 6b02 	strh.w	r6, [sl], #2
 801cf42:	440a      	add	r2, r1
 801cf44:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf48:	e7d6      	b.n	801cef8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801cf4a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cf4e:	d429      	bmi.n	801cfa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf50:	68ae      	ldr	r6, [r5, #8]
 801cf52:	454e      	cmp	r6, r9
 801cf54:	dd26      	ble.n	801cfa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf56:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801cf5a:	d423      	bmi.n	801cfa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf5c:	68e9      	ldr	r1, [r5, #12]
 801cf5e:	4559      	cmp	r1, fp
 801cf60:	dd20      	ble.n	801cfa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf62:	9902      	ldr	r1, [sp, #8]
 801cf64:	fa0f fe86 	sxth.w	lr, r6
 801cf68:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801cf6c:	f06f 0101 	mvn.w	r1, #1
 801cf70:	f81e e009 	ldrb.w	lr, [lr, r9]
 801cf74:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cf78:	eb07 060e 	add.w	r6, r7, lr
 801cf7c:	fb01 f908 	mul.w	r9, r1, r8
 801cf80:	f896 b002 	ldrb.w	fp, [r6, #2]
 801cf84:	7876      	ldrb	r6, [r6, #1]
 801cf86:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801cf8a:	00f6      	lsls	r6, r6, #3
 801cf8c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801cf90:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cf94:	ea4b 0606 	orr.w	r6, fp, r6
 801cf98:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801cf9c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801cfa0:	f82a 6009 	strh.w	r6, [sl, r9]
 801cfa4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cfa6:	4460      	add	r0, ip
 801cfa8:	440a      	add	r2, r1
 801cfaa:	f108 38ff 	add.w	r8, r8, #4294967295
 801cfae:	e757      	b.n	801ce60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cfb0:	b005      	add	sp, #20
 801cfb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfb6:	bf00      	nop
 801cfb8:	fffff800 	.word	0xfffff800

0801cfbc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cfbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfc0:	b087      	sub	sp, #28
 801cfc2:	468b      	mov	fp, r1
 801cfc4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cfc6:	9204      	str	r2, [sp, #16]
 801cfc8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cfcc:	9205      	str	r2, [sp, #20]
 801cfce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cfd2:	6841      	ldr	r1, [r0, #4]
 801cfd4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cfd8:	fb01 2404 	mla	r4, r1, r4, r2
 801cfdc:	6802      	ldr	r2, [r0, #0]
 801cfde:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cfe2:	f8dc 2000 	ldr.w	r2, [ip]
 801cfe6:	9201      	str	r2, [sp, #4]
 801cfe8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cfec:	3204      	adds	r2, #4
 801cfee:	9202      	str	r2, [sp, #8]
 801cff0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cff4:	f1bb 0f00 	cmp.w	fp, #0
 801cff8:	dc03      	bgt.n	801d002 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801cffa:	9a04      	ldr	r2, [sp, #16]
 801cffc:	2a00      	cmp	r2, #0
 801cffe:	f340 8138 	ble.w	801d272 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d002:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d004:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d008:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801d00c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d010:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d012:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d016:	2b00      	cmp	r3, #0
 801d018:	dd0e      	ble.n	801d038 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d01a:	1402      	asrs	r2, r0, #16
 801d01c:	d405      	bmi.n	801d02a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d01e:	42ba      	cmp	r2, r7
 801d020:	da03      	bge.n	801d02a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d022:	140a      	asrs	r2, r1, #16
 801d024:	d401      	bmi.n	801d02a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d026:	42b2      	cmp	r2, r6
 801d028:	db07      	blt.n	801d03a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d02a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d02c:	4410      	add	r0, r2
 801d02e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d030:	3b01      	subs	r3, #1
 801d032:	4411      	add	r1, r2
 801d034:	3402      	adds	r4, #2
 801d036:	e7ee      	b.n	801d016 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d038:	d019      	beq.n	801d06e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d03a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d03c:	1e5a      	subs	r2, r3, #1
 801d03e:	fb05 0502 	mla	r5, r5, r2, r0
 801d042:	142d      	asrs	r5, r5, #16
 801d044:	d409      	bmi.n	801d05a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d046:	42bd      	cmp	r5, r7
 801d048:	da07      	bge.n	801d05a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d04a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d04c:	fb05 1202 	mla	r2, r5, r2, r1
 801d050:	1412      	asrs	r2, r2, #16
 801d052:	d402      	bmi.n	801d05a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d054:	42b2      	cmp	r2, r6
 801d056:	f2c0 80ac 	blt.w	801d1b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d05a:	f04f 0e00 	mov.w	lr, #0
 801d05e:	eb03 020e 	add.w	r2, r3, lr
 801d062:	2a00      	cmp	r2, #0
 801d064:	dc3e      	bgt.n	801d0e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d066:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d06a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d06e:	f1bb 0f00 	cmp.w	fp, #0
 801d072:	f340 80fe 	ble.w	801d272 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d076:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d07a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d07e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d082:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d084:	f1bb 0b01 	subs.w	fp, fp, #1
 801d088:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d08c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d090:	eeb0 6a62 	vmov.f32	s12, s5
 801d094:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d098:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d09c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d0a0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d0a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d0a8:	eeb0 6a43 	vmov.f32	s12, s6
 801d0ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d0b0:	ee12 2a90 	vmov	r2, s5
 801d0b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d0b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d0bc:	ee13 2a10 	vmov	r2, s6
 801d0c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d0c4:	9313      	str	r3, [sp, #76]	; 0x4c
 801d0c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d0c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d0cc:	9a04      	ldr	r2, [sp, #16]
 801d0ce:	9314      	str	r3, [sp, #80]	; 0x50
 801d0d0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d0d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d0d6:	eeb0 3a67 	vmov.f32	s6, s15
 801d0da:	bf08      	it	eq
 801d0dc:	4613      	moveq	r3, r2
 801d0de:	eef0 2a47 	vmov.f32	s5, s14
 801d0e2:	e787      	b.n	801cff4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d0e4:	1406      	asrs	r6, r0, #16
 801d0e6:	d45d      	bmi.n	801d1a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0e8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d0ec:	42b5      	cmp	r5, r6
 801d0ee:	dd59      	ble.n	801d1a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0f0:	140f      	asrs	r7, r1, #16
 801d0f2:	d457      	bmi.n	801d1a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0f4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d0f8:	42ba      	cmp	r2, r7
 801d0fa:	dd53      	ble.n	801d1a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0fc:	9a01      	ldr	r2, [sp, #4]
 801d0fe:	b22d      	sxth	r5, r5
 801d100:	fb07 2505 	mla	r5, r7, r5, r2
 801d104:	5daa      	ldrb	r2, [r5, r6]
 801d106:	9d02      	ldr	r5, [sp, #8]
 801d108:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d10c:	0e2e      	lsrs	r6, r5, #24
 801d10e:	d049      	beq.n	801d1a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d110:	f06f 0201 	mvn.w	r2, #1
 801d114:	fb02 f20e 	mul.w	r2, r2, lr
 801d118:	9203      	str	r2, [sp, #12]
 801d11a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d11e:	9a05      	ldr	r2, [sp, #20]
 801d120:	4356      	muls	r6, r2
 801d122:	1c72      	adds	r2, r6, #1
 801d124:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d128:	1212      	asrs	r2, r2, #8
 801d12a:	fa1f f982 	uxth.w	r9, r2
 801d12e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d132:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d136:	43d2      	mvns	r2, r2
 801d138:	b2d2      	uxtb	r2, r2
 801d13a:	fb16 f609 	smulbb	r6, r6, r9
 801d13e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d142:	fb07 6702 	mla	r7, r7, r2, r6
 801d146:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d14a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d14e:	b2ed      	uxtb	r5, r5
 801d150:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d154:	fa5f f888 	uxtb.w	r8, r8
 801d158:	fb15 f509 	smulbb	r5, r5, r9
 801d15c:	fb08 5502 	mla	r5, r8, r2, r5
 801d160:	b2bf      	uxth	r7, r7
 801d162:	fb1a fa09 	smulbb	sl, sl, r9
 801d166:	b2ad      	uxth	r5, r5
 801d168:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d16c:	fb06 a602 	mla	r6, r6, r2, sl
 801d170:	1c7a      	adds	r2, r7, #1
 801d172:	f105 0a01 	add.w	sl, r5, #1
 801d176:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d17a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d17e:	b2b6      	uxth	r6, r6
 801d180:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d184:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d188:	ea4a 0707 	orr.w	r7, sl, r7
 801d18c:	f106 0a01 	add.w	sl, r6, #1
 801d190:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d194:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d198:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d19c:	9a03      	ldr	r2, [sp, #12]
 801d19e:	ea47 070a 	orr.w	r7, r7, sl
 801d1a2:	52a7      	strh	r7, [r4, r2]
 801d1a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d1a6:	4410      	add	r0, r2
 801d1a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d1aa:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d1ae:	4411      	add	r1, r2
 801d1b0:	e755      	b.n	801d05e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d1b2:	f04f 0800 	mov.w	r8, #0
 801d1b6:	eba3 0208 	sub.w	r2, r3, r8
 801d1ba:	2a00      	cmp	r2, #0
 801d1bc:	f77f af53 	ble.w	801d066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d1c0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d1c4:	9f01      	ldr	r7, [sp, #4]
 801d1c6:	140a      	asrs	r2, r1, #16
 801d1c8:	1405      	asrs	r5, r0, #16
 801d1ca:	fb06 7202 	mla	r2, r6, r2, r7
 801d1ce:	5d52      	ldrb	r2, [r2, r5]
 801d1d0:	9d02      	ldr	r5, [sp, #8]
 801d1d2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d1d6:	0e2e      	lsrs	r6, r5, #24
 801d1d8:	d044      	beq.n	801d264 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d1da:	9a05      	ldr	r2, [sp, #20]
 801d1dc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d1e0:	4356      	muls	r6, r2
 801d1e2:	1c72      	adds	r2, r6, #1
 801d1e4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d1e8:	1212      	asrs	r2, r2, #8
 801d1ea:	fa1f f982 	uxth.w	r9, r2
 801d1ee:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d1f2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d1f6:	43d2      	mvns	r2, r2
 801d1f8:	b2d2      	uxtb	r2, r2
 801d1fa:	fb16 f609 	smulbb	r6, r6, r9
 801d1fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d202:	fb07 6702 	mla	r7, r7, r2, r6
 801d206:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d20a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d20e:	b2ed      	uxtb	r5, r5
 801d210:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d214:	fa5f fe8e 	uxtb.w	lr, lr
 801d218:	fb15 f509 	smulbb	r5, r5, r9
 801d21c:	fb0e 5502 	mla	r5, lr, r2, r5
 801d220:	b2bf      	uxth	r7, r7
 801d222:	fb1a fa09 	smulbb	sl, sl, r9
 801d226:	b2ad      	uxth	r5, r5
 801d228:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d22c:	fb06 a602 	mla	r6, r6, r2, sl
 801d230:	1c7a      	adds	r2, r7, #1
 801d232:	f105 0a01 	add.w	sl, r5, #1
 801d236:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d23a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d23e:	b2b6      	uxth	r6, r6
 801d240:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d244:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d248:	ea4a 0707 	orr.w	r7, sl, r7
 801d24c:	f106 0a01 	add.w	sl, r6, #1
 801d250:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d254:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d258:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d25c:	ea47 070a 	orr.w	r7, r7, sl
 801d260:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d264:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d266:	4410      	add	r0, r2
 801d268:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d26a:	f108 0801 	add.w	r8, r8, #1
 801d26e:	4411      	add	r1, r2
 801d270:	e7a1      	b.n	801d1b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d272:	b007      	add	sp, #28
 801d274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d278 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d27c:	b085      	sub	sp, #20
 801d27e:	468b      	mov	fp, r1
 801d280:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d282:	9203      	str	r2, [sp, #12]
 801d284:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d288:	6841      	ldr	r1, [r0, #4]
 801d28a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d28e:	fb01 2404 	mla	r4, r1, r4, r2
 801d292:	6802      	ldr	r2, [r0, #0]
 801d294:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d298:	f8de 2000 	ldr.w	r2, [lr]
 801d29c:	9200      	str	r2, [sp, #0]
 801d29e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d2a2:	3204      	adds	r2, #4
 801d2a4:	9201      	str	r2, [sp, #4]
 801d2a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d2aa:	f1bb 0f00 	cmp.w	fp, #0
 801d2ae:	dc03      	bgt.n	801d2b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d2b0:	9a03      	ldr	r2, [sp, #12]
 801d2b2:	2a00      	cmp	r2, #0
 801d2b4:	f340 8153 	ble.w	801d55e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d2b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d2ba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d2be:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d2c2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d2c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d2c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d2cc:	2b00      	cmp	r3, #0
 801d2ce:	dd0e      	ble.n	801d2ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2d0:	1408      	asrs	r0, r1, #16
 801d2d2:	d405      	bmi.n	801d2e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d2d4:	42b8      	cmp	r0, r7
 801d2d6:	da03      	bge.n	801d2e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d2d8:	1410      	asrs	r0, r2, #16
 801d2da:	d401      	bmi.n	801d2e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d2dc:	42b0      	cmp	r0, r6
 801d2de:	db07      	blt.n	801d2f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d2e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d2e2:	4401      	add	r1, r0
 801d2e4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d2e6:	3b01      	subs	r3, #1
 801d2e8:	4402      	add	r2, r0
 801d2ea:	3402      	adds	r4, #2
 801d2ec:	e7ee      	b.n	801d2cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d2ee:	d017      	beq.n	801d320 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d2f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d2f2:	1e58      	subs	r0, r3, #1
 801d2f4:	fb05 1500 	mla	r5, r5, r0, r1
 801d2f8:	142d      	asrs	r5, r5, #16
 801d2fa:	d409      	bmi.n	801d310 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2fc:	42bd      	cmp	r5, r7
 801d2fe:	da07      	bge.n	801d310 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d300:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d302:	fb05 2000 	mla	r0, r5, r0, r2
 801d306:	1400      	asrs	r0, r0, #16
 801d308:	d402      	bmi.n	801d310 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d30a:	42b0      	cmp	r0, r6
 801d30c:	f2c0 80bc 	blt.w	801d488 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d310:	2600      	movs	r6, #0
 801d312:	1998      	adds	r0, r3, r6
 801d314:	2800      	cmp	r0, #0
 801d316:	dc3e      	bgt.n	801d396 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d318:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d31c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d320:	f1bb 0f00 	cmp.w	fp, #0
 801d324:	f340 811b 	ble.w	801d55e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d328:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d32c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d330:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d334:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d336:	f1bb 0b01 	subs.w	fp, fp, #1
 801d33a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d33e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d342:	eeb0 6a62 	vmov.f32	s12, s5
 801d346:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d34a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d34e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d352:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d356:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d35a:	eeb0 6a43 	vmov.f32	s12, s6
 801d35e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d362:	ee12 2a90 	vmov	r2, s5
 801d366:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d36a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d36e:	ee13 2a10 	vmov	r2, s6
 801d372:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d376:	9311      	str	r3, [sp, #68]	; 0x44
 801d378:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d37a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d37e:	9a03      	ldr	r2, [sp, #12]
 801d380:	9312      	str	r3, [sp, #72]	; 0x48
 801d382:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d386:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d388:	eeb0 3a67 	vmov.f32	s6, s15
 801d38c:	bf08      	it	eq
 801d38e:	4613      	moveq	r3, r2
 801d390:	eef0 2a47 	vmov.f32	s5, s14
 801d394:	e789      	b.n	801d2aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d396:	140f      	asrs	r7, r1, #16
 801d398:	d426      	bmi.n	801d3e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d39a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d39e:	42bd      	cmp	r5, r7
 801d3a0:	dd22      	ble.n	801d3e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d3a2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d3a6:	d41f      	bmi.n	801d3e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d3a8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d3ac:	4560      	cmp	r0, ip
 801d3ae:	dd1b      	ble.n	801d3e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d3b0:	9800      	ldr	r0, [sp, #0]
 801d3b2:	b22d      	sxth	r5, r5
 801d3b4:	fb0c 0505 	mla	r5, ip, r5, r0
 801d3b8:	5de8      	ldrb	r0, [r5, r7]
 801d3ba:	9d01      	ldr	r5, [sp, #4]
 801d3bc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d3c0:	0e07      	lsrs	r7, r0, #24
 801d3c2:	2fff      	cmp	r7, #255	; 0xff
 801d3c4:	d116      	bne.n	801d3f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d3c6:	f06f 0501 	mvn.w	r5, #1
 801d3ca:	fb05 f706 	mul.w	r7, r5, r6
 801d3ce:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d3d2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d3d6:	0945      	lsrs	r5, r0, #5
 801d3d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d3dc:	ea4c 0505 	orr.w	r5, ip, r5
 801d3e0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d3e4:	4305      	orrs	r5, r0
 801d3e6:	53e5      	strh	r5, [r4, r7]
 801d3e8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d3ea:	4401      	add	r1, r0
 801d3ec:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d3ee:	3e01      	subs	r6, #1
 801d3f0:	4402      	add	r2, r0
 801d3f2:	e78e      	b.n	801d312 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d3f4:	b2fd      	uxtb	r5, r7
 801d3f6:	2f00      	cmp	r7, #0
 801d3f8:	d0f6      	beq.n	801d3e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d3fa:	f06f 0701 	mvn.w	r7, #1
 801d3fe:	4377      	muls	r7, r6
 801d400:	fa1f f985 	uxth.w	r9, r5
 801d404:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d408:	9702      	str	r7, [sp, #8]
 801d40a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d40e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d412:	43ed      	mvns	r5, r5
 801d414:	b2ed      	uxtb	r5, r5
 801d416:	fb17 f709 	smulbb	r7, r7, r9
 801d41a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d41e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d422:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d426:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d42a:	b2c0      	uxtb	r0, r0
 801d42c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d430:	fa5f f888 	uxtb.w	r8, r8
 801d434:	fb10 f009 	smulbb	r0, r0, r9
 801d438:	fb08 0005 	mla	r0, r8, r5, r0
 801d43c:	b280      	uxth	r0, r0
 801d43e:	fa1f fc8c 	uxth.w	ip, ip
 801d442:	fb1a fa09 	smulbb	sl, sl, r9
 801d446:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d44a:	fb07 a705 	mla	r7, r7, r5, sl
 801d44e:	f100 0a01 	add.w	sl, r0, #1
 801d452:	f10c 0501 	add.w	r5, ip, #1
 801d456:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d45a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d45e:	b2bf      	uxth	r7, r7
 801d460:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d464:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d468:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d46c:	f107 0a01 	add.w	sl, r7, #1
 801d470:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d474:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d478:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d47c:	9802      	ldr	r0, [sp, #8]
 801d47e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d482:	f824 c000 	strh.w	ip, [r4, r0]
 801d486:	e7af      	b.n	801d3e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d488:	f04f 0800 	mov.w	r8, #0
 801d48c:	eba3 0008 	sub.w	r0, r3, r8
 801d490:	2800      	cmp	r0, #0
 801d492:	f77f af41 	ble.w	801d318 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d496:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d49a:	9f00      	ldr	r7, [sp, #0]
 801d49c:	1410      	asrs	r0, r2, #16
 801d49e:	140d      	asrs	r5, r1, #16
 801d4a0:	fb06 7000 	mla	r0, r6, r0, r7
 801d4a4:	5d40      	ldrb	r0, [r0, r5]
 801d4a6:	9d01      	ldr	r5, [sp, #4]
 801d4a8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d4ac:	0e2e      	lsrs	r6, r5, #24
 801d4ae:	2eff      	cmp	r6, #255	; 0xff
 801d4b0:	d112      	bne.n	801d4d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d4b2:	482c      	ldr	r0, [pc, #176]	; (801d564 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d4b4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d4b8:	0968      	lsrs	r0, r5, #5
 801d4ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d4be:	4330      	orrs	r0, r6
 801d4c0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d4c4:	4328      	orrs	r0, r5
 801d4c6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d4ca:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d4cc:	4401      	add	r1, r0
 801d4ce:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d4d0:	f108 0801 	add.w	r8, r8, #1
 801d4d4:	4402      	add	r2, r0
 801d4d6:	e7d9      	b.n	801d48c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d4d8:	b2f0      	uxtb	r0, r6
 801d4da:	2e00      	cmp	r6, #0
 801d4dc:	d0f5      	beq.n	801d4ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d4de:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d4e2:	fa1f f980 	uxth.w	r9, r0
 801d4e6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d4ea:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d4ee:	43c0      	mvns	r0, r0
 801d4f0:	b2c0      	uxtb	r0, r0
 801d4f2:	fb16 f609 	smulbb	r6, r6, r9
 801d4f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d4fa:	fb07 6700 	mla	r7, r7, r0, r6
 801d4fe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d502:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d506:	b2ed      	uxtb	r5, r5
 801d508:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d50c:	fa5f fc8c 	uxtb.w	ip, ip
 801d510:	fb15 f509 	smulbb	r5, r5, r9
 801d514:	fb0c 5500 	mla	r5, ip, r0, r5
 801d518:	b2bf      	uxth	r7, r7
 801d51a:	fb1a fa09 	smulbb	sl, sl, r9
 801d51e:	b2ad      	uxth	r5, r5
 801d520:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d524:	fb06 a600 	mla	r6, r6, r0, sl
 801d528:	1c78      	adds	r0, r7, #1
 801d52a:	f105 0a01 	add.w	sl, r5, #1
 801d52e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d532:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d536:	b2b6      	uxth	r6, r6
 801d538:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d53c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d540:	ea4a 0707 	orr.w	r7, sl, r7
 801d544:	f106 0a01 	add.w	sl, r6, #1
 801d548:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d54c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d550:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d554:	ea47 070a 	orr.w	r7, r7, sl
 801d558:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d55c:	e7b5      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d55e:	b005      	add	sp, #20
 801d560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d564:	fffff800 	.word	0xfffff800

0801d568 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d56c:	b087      	sub	sp, #28
 801d56e:	468b      	mov	fp, r1
 801d570:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d572:	9204      	str	r2, [sp, #16]
 801d574:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d578:	9205      	str	r2, [sp, #20]
 801d57a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d57e:	6861      	ldr	r1, [r4, #4]
 801d580:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801d584:	fb01 2000 	mla	r0, r1, r0, r2
 801d588:	6822      	ldr	r2, [r4, #0]
 801d58a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d58e:	f8de 2000 	ldr.w	r2, [lr]
 801d592:	9201      	str	r2, [sp, #4]
 801d594:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d598:	9202      	str	r2, [sp, #8]
 801d59a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d59e:	f1bb 0f00 	cmp.w	fp, #0
 801d5a2:	dc03      	bgt.n	801d5ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801d5a4:	9a04      	ldr	r2, [sp, #16]
 801d5a6:	2a00      	cmp	r2, #0
 801d5a8:	f340 8142 	ble.w	801d830 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d5ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d5ae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d5b2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d5b6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d5ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d5bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d5c0:	2b00      	cmp	r3, #0
 801d5c2:	dd0e      	ble.n	801d5e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d5c4:	140c      	asrs	r4, r1, #16
 801d5c6:	d405      	bmi.n	801d5d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5c8:	42bc      	cmp	r4, r7
 801d5ca:	da03      	bge.n	801d5d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5cc:	1414      	asrs	r4, r2, #16
 801d5ce:	d401      	bmi.n	801d5d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5d0:	42b4      	cmp	r4, r6
 801d5d2:	db07      	blt.n	801d5e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d5d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d5d6:	4421      	add	r1, r4
 801d5d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d5da:	3b01      	subs	r3, #1
 801d5dc:	4422      	add	r2, r4
 801d5de:	3002      	adds	r0, #2
 801d5e0:	e7ee      	b.n	801d5c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d5e2:	d019      	beq.n	801d618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d5e4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d5e6:	1e5c      	subs	r4, r3, #1
 801d5e8:	fb05 1504 	mla	r5, r5, r4, r1
 801d5ec:	142d      	asrs	r5, r5, #16
 801d5ee:	d409      	bmi.n	801d604 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5f0:	42bd      	cmp	r5, r7
 801d5f2:	da07      	bge.n	801d604 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5f4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d5f6:	fb05 2404 	mla	r4, r5, r4, r2
 801d5fa:	1424      	asrs	r4, r4, #16
 801d5fc:	d402      	bmi.n	801d604 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5fe:	42b4      	cmp	r4, r6
 801d600:	f2c0 80b1 	blt.w	801d766 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d604:	f04f 0800 	mov.w	r8, #0
 801d608:	eb03 0408 	add.w	r4, r3, r8
 801d60c:	2c00      	cmp	r4, #0
 801d60e:	dc3e      	bgt.n	801d68e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d610:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d614:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d618:	f1bb 0f00 	cmp.w	fp, #0
 801d61c:	f340 8108 	ble.w	801d830 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d620:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d624:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d628:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d62c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d62e:	f1bb 0b01 	subs.w	fp, fp, #1
 801d632:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d636:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d63a:	eeb0 6a62 	vmov.f32	s12, s5
 801d63e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d642:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d646:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d64a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d64e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d652:	eeb0 6a43 	vmov.f32	s12, s6
 801d656:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d65a:	ee12 2a90 	vmov	r2, s5
 801d65e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d662:	fb92 f3f3 	sdiv	r3, r2, r3
 801d666:	ee13 2a10 	vmov	r2, s6
 801d66a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d66e:	9313      	str	r3, [sp, #76]	; 0x4c
 801d670:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d672:	fb92 f3f3 	sdiv	r3, r2, r3
 801d676:	9a04      	ldr	r2, [sp, #16]
 801d678:	9314      	str	r3, [sp, #80]	; 0x50
 801d67a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d67e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d680:	eeb0 3a67 	vmov.f32	s6, s15
 801d684:	bf08      	it	eq
 801d686:	4613      	moveq	r3, r2
 801d688:	eef0 2a47 	vmov.f32	s5, s14
 801d68c:	e787      	b.n	801d59e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801d68e:	140e      	asrs	r6, r1, #16
 801d690:	d462      	bmi.n	801d758 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d692:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d696:	42b5      	cmp	r5, r6
 801d698:	dd5e      	ble.n	801d758 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d69a:	1417      	asrs	r7, r2, #16
 801d69c:	d45c      	bmi.n	801d758 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d69e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801d6a2:	42bc      	cmp	r4, r7
 801d6a4:	dd58      	ble.n	801d758 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d6a6:	b22d      	sxth	r5, r5
 801d6a8:	fb07 6505 	mla	r5, r7, r5, r6
 801d6ac:	9c02      	ldr	r4, [sp, #8]
 801d6ae:	5d66      	ldrb	r6, [r4, r5]
 801d6b0:	2e00      	cmp	r6, #0
 801d6b2:	d051      	beq.n	801d758 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d6b4:	9c01      	ldr	r4, [sp, #4]
 801d6b6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801d6ba:	f06f 0401 	mvn.w	r4, #1
 801d6be:	fb04 f408 	mul.w	r4, r4, r8
 801d6c2:	9403      	str	r4, [sp, #12]
 801d6c4:	5b05      	ldrh	r5, [r0, r4]
 801d6c6:	9c05      	ldr	r4, [sp, #20]
 801d6c8:	4366      	muls	r6, r4
 801d6ca:	1c74      	adds	r4, r6, #1
 801d6cc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d6d0:	1224      	asrs	r4, r4, #8
 801d6d2:	b2a7      	uxth	r7, r4
 801d6d4:	122e      	asrs	r6, r5, #8
 801d6d6:	43e4      	mvns	r4, r4
 801d6d8:	b2e4      	uxtb	r4, r4
 801d6da:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801d6de:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d6e2:	fb16 f604 	smulbb	r6, r6, r4
 801d6e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d6ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d6ee:	00ed      	lsls	r5, r5, #3
 801d6f0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d6f4:	b2ed      	uxtb	r5, r5
 801d6f6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801d6fa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d6fe:	fb15 f504 	smulbb	r5, r5, r4
 801d702:	fa5f f989 	uxtb.w	r9, r9
 801d706:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d70a:	fb09 5507 	mla	r5, r9, r7, r5
 801d70e:	fb1a fa04 	smulbb	sl, sl, r4
 801d712:	fa1f fc8c 	uxth.w	ip, ip
 801d716:	b2ad      	uxth	r5, r5
 801d718:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d71c:	fb06 a607 	mla	r6, r6, r7, sl
 801d720:	f10c 0401 	add.w	r4, ip, #1
 801d724:	f105 0a01 	add.w	sl, r5, #1
 801d728:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d72c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d730:	b2b6      	uxth	r6, r6
 801d732:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d736:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d73a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d73e:	f106 0a01 	add.w	sl, r6, #1
 801d742:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d746:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d74a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d74e:	9c03      	ldr	r4, [sp, #12]
 801d750:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d754:	f820 c004 	strh.w	ip, [r0, r4]
 801d758:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d75a:	4421      	add	r1, r4
 801d75c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d75e:	f108 38ff 	add.w	r8, r8, #4294967295
 801d762:	4422      	add	r2, r4
 801d764:	e750      	b.n	801d608 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d766:	f04f 0900 	mov.w	r9, #0
 801d76a:	eba3 0409 	sub.w	r4, r3, r9
 801d76e:	2c00      	cmp	r4, #0
 801d770:	f77f af4e 	ble.w	801d610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d774:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d778:	140d      	asrs	r5, r1, #16
 801d77a:	1414      	asrs	r4, r2, #16
 801d77c:	fb06 5404 	mla	r4, r6, r4, r5
 801d780:	9d02      	ldr	r5, [sp, #8]
 801d782:	5d2e      	ldrb	r6, [r5, r4]
 801d784:	2e00      	cmp	r6, #0
 801d786:	d04c      	beq.n	801d822 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801d788:	9d01      	ldr	r5, [sp, #4]
 801d78a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801d78e:	9c05      	ldr	r4, [sp, #20]
 801d790:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801d794:	4366      	muls	r6, r4
 801d796:	1c74      	adds	r4, r6, #1
 801d798:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d79c:	1224      	asrs	r4, r4, #8
 801d79e:	b2a7      	uxth	r7, r4
 801d7a0:	122e      	asrs	r6, r5, #8
 801d7a2:	43e4      	mvns	r4, r4
 801d7a4:	b2e4      	uxtb	r4, r4
 801d7a6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d7aa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d7ae:	fb16 f604 	smulbb	r6, r6, r4
 801d7b2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d7b6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d7ba:	00ed      	lsls	r5, r5, #3
 801d7bc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d7c0:	b2ed      	uxtb	r5, r5
 801d7c2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d7c6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d7ca:	fb15 f504 	smulbb	r5, r5, r4
 801d7ce:	fa5f f888 	uxtb.w	r8, r8
 801d7d2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d7d6:	fb08 5507 	mla	r5, r8, r7, r5
 801d7da:	fb1a fa04 	smulbb	sl, sl, r4
 801d7de:	fa1f fc8c 	uxth.w	ip, ip
 801d7e2:	b2ad      	uxth	r5, r5
 801d7e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d7e8:	fb06 a607 	mla	r6, r6, r7, sl
 801d7ec:	f10c 0401 	add.w	r4, ip, #1
 801d7f0:	f105 0a01 	add.w	sl, r5, #1
 801d7f4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d7f8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d7fc:	b2b6      	uxth	r6, r6
 801d7fe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d802:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d806:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d80a:	f106 0a01 	add.w	sl, r6, #1
 801d80e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d812:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d816:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d81a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d81e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801d822:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d824:	4421      	add	r1, r4
 801d826:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d828:	f109 0901 	add.w	r9, r9, #1
 801d82c:	4422      	add	r2, r4
 801d82e:	e79c      	b.n	801d76a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801d830:	b007      	add	sp, #28
 801d832:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d836 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d836:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d83a:	b085      	sub	sp, #20
 801d83c:	468b      	mov	fp, r1
 801d83e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d840:	9203      	str	r2, [sp, #12]
 801d842:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801d846:	6861      	ldr	r1, [r4, #4]
 801d848:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d84c:	fb01 2000 	mla	r0, r1, r0, r2
 801d850:	6822      	ldr	r2, [r4, #0]
 801d852:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d856:	f8d8 2000 	ldr.w	r2, [r8]
 801d85a:	9200      	str	r2, [sp, #0]
 801d85c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801d860:	9201      	str	r2, [sp, #4]
 801d862:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d866:	f1bb 0f00 	cmp.w	fp, #0
 801d86a:	dc03      	bgt.n	801d874 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d86c:	9a03      	ldr	r2, [sp, #12]
 801d86e:	2a00      	cmp	r2, #0
 801d870:	f340 8146 	ble.w	801db00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d874:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d876:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d87a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d87e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d882:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d884:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d888:	2b00      	cmp	r3, #0
 801d88a:	dd0e      	ble.n	801d8aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d88c:	140c      	asrs	r4, r1, #16
 801d88e:	d405      	bmi.n	801d89c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d890:	42bc      	cmp	r4, r7
 801d892:	da03      	bge.n	801d89c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d894:	1414      	asrs	r4, r2, #16
 801d896:	d401      	bmi.n	801d89c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d898:	42b4      	cmp	r4, r6
 801d89a:	db07      	blt.n	801d8ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d89c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d89e:	4421      	add	r1, r4
 801d8a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d8a2:	3b01      	subs	r3, #1
 801d8a4:	4422      	add	r2, r4
 801d8a6:	3002      	adds	r0, #2
 801d8a8:	e7ee      	b.n	801d888 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d8aa:	d017      	beq.n	801d8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d8ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d8ae:	1e5c      	subs	r4, r3, #1
 801d8b0:	fb05 1504 	mla	r5, r5, r4, r1
 801d8b4:	142d      	asrs	r5, r5, #16
 801d8b6:	d409      	bmi.n	801d8cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d8b8:	42bd      	cmp	r5, r7
 801d8ba:	da07      	bge.n	801d8cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d8bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d8be:	fb05 2404 	mla	r4, r5, r4, r2
 801d8c2:	1424      	asrs	r4, r4, #16
 801d8c4:	d402      	bmi.n	801d8cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d8c6:	42b4      	cmp	r4, r6
 801d8c8:	f2c0 80b3 	blt.w	801da32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801d8cc:	2600      	movs	r6, #0
 801d8ce:	199c      	adds	r4, r3, r6
 801d8d0:	2c00      	cmp	r4, #0
 801d8d2:	dc3e      	bgt.n	801d952 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d8d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d8d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d8dc:	f1bb 0f00 	cmp.w	fp, #0
 801d8e0:	f340 810e 	ble.w	801db00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d8e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d8e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d8ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d8f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d8f2:	f1bb 0b01 	subs.w	fp, fp, #1
 801d8f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d8fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d8fe:	eeb0 6a62 	vmov.f32	s12, s5
 801d902:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d906:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d90a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d90e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d912:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d916:	eeb0 6a43 	vmov.f32	s12, s6
 801d91a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d91e:	ee12 2a90 	vmov	r2, s5
 801d922:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d926:	fb92 f3f3 	sdiv	r3, r2, r3
 801d92a:	ee13 2a10 	vmov	r2, s6
 801d92e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d932:	9311      	str	r3, [sp, #68]	; 0x44
 801d934:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d936:	fb92 f3f3 	sdiv	r3, r2, r3
 801d93a:	9a03      	ldr	r2, [sp, #12]
 801d93c:	9312      	str	r3, [sp, #72]	; 0x48
 801d93e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d942:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d944:	eeb0 3a67 	vmov.f32	s6, s15
 801d948:	bf08      	it	eq
 801d94a:	4613      	moveq	r3, r2
 801d94c:	eef0 2a47 	vmov.f32	s5, s14
 801d950:	e789      	b.n	801d866 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d952:	140f      	asrs	r7, r1, #16
 801d954:	d418      	bmi.n	801d988 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d956:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801d95a:	42bd      	cmp	r5, r7
 801d95c:	dd14      	ble.n	801d988 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d95e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d962:	d411      	bmi.n	801d988 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d964:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801d968:	4564      	cmp	r4, ip
 801d96a:	dd0d      	ble.n	801d988 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d96c:	b22d      	sxth	r5, r5
 801d96e:	fb0c 7505 	mla	r5, ip, r5, r7
 801d972:	9c01      	ldr	r4, [sp, #4]
 801d974:	5d64      	ldrb	r4, [r4, r5]
 801d976:	2cff      	cmp	r4, #255	; 0xff
 801d978:	d10c      	bne.n	801d994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801d97a:	9c00      	ldr	r4, [sp, #0]
 801d97c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801d980:	f06f 0401 	mvn.w	r4, #1
 801d984:	4374      	muls	r4, r6
 801d986:	5305      	strh	r5, [r0, r4]
 801d988:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d98a:	4421      	add	r1, r4
 801d98c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d98e:	3e01      	subs	r6, #1
 801d990:	4422      	add	r2, r4
 801d992:	e79c      	b.n	801d8ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d994:	2c00      	cmp	r4, #0
 801d996:	d0f7      	beq.n	801d988 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d998:	9f00      	ldr	r7, [sp, #0]
 801d99a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801d99e:	f06f 0501 	mvn.w	r5, #1
 801d9a2:	4375      	muls	r5, r6
 801d9a4:	9502      	str	r5, [sp, #8]
 801d9a6:	5b45      	ldrh	r5, [r0, r5]
 801d9a8:	fa1f fc84 	uxth.w	ip, r4
 801d9ac:	122f      	asrs	r7, r5, #8
 801d9ae:	43e4      	mvns	r4, r4
 801d9b0:	b2e4      	uxtb	r4, r4
 801d9b2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801d9b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d9ba:	fb17 f704 	smulbb	r7, r7, r4
 801d9be:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d9c2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d9c6:	00ed      	lsls	r5, r5, #3
 801d9c8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801d9cc:	b2ed      	uxtb	r5, r5
 801d9ce:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801d9d2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d9d6:	fb15 f504 	smulbb	r5, r5, r4
 801d9da:	fa5f f989 	uxtb.w	r9, r9
 801d9de:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d9e2:	fb09 550c 	mla	r5, r9, ip, r5
 801d9e6:	fb1a fa04 	smulbb	sl, sl, r4
 801d9ea:	fa1f fe8e 	uxth.w	lr, lr
 801d9ee:	b2ad      	uxth	r5, r5
 801d9f0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d9f4:	fb07 a70c 	mla	r7, r7, ip, sl
 801d9f8:	f10e 0401 	add.w	r4, lr, #1
 801d9fc:	f105 0a01 	add.w	sl, r5, #1
 801da00:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801da04:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801da08:	b2bf      	uxth	r7, r7
 801da0a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801da0e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801da12:	ea4a 0e0e 	orr.w	lr, sl, lr
 801da16:	f107 0a01 	add.w	sl, r7, #1
 801da1a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801da1e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801da22:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801da26:	9c02      	ldr	r4, [sp, #8]
 801da28:	ea4e 0e0a 	orr.w	lr, lr, sl
 801da2c:	f820 e004 	strh.w	lr, [r0, r4]
 801da30:	e7aa      	b.n	801d988 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da32:	f04f 0900 	mov.w	r9, #0
 801da36:	eba3 0409 	sub.w	r4, r3, r9
 801da3a:	2c00      	cmp	r4, #0
 801da3c:	f77f af4a 	ble.w	801d8d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801da40:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801da44:	1414      	asrs	r4, r2, #16
 801da46:	140d      	asrs	r5, r1, #16
 801da48:	fb06 5504 	mla	r5, r6, r4, r5
 801da4c:	9c01      	ldr	r4, [sp, #4]
 801da4e:	5d64      	ldrb	r4, [r4, r5]
 801da50:	2cff      	cmp	r4, #255	; 0xff
 801da52:	d10b      	bne.n	801da6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801da54:	9c00      	ldr	r4, [sp, #0]
 801da56:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801da5a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801da5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801da60:	4421      	add	r1, r4
 801da62:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801da64:	f109 0901 	add.w	r9, r9, #1
 801da68:	4422      	add	r2, r4
 801da6a:	e7e4      	b.n	801da36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801da6c:	2c00      	cmp	r4, #0
 801da6e:	d0f6      	beq.n	801da5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801da70:	9e00      	ldr	r6, [sp, #0]
 801da72:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801da76:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801da7a:	b2a7      	uxth	r7, r4
 801da7c:	122e      	asrs	r6, r5, #8
 801da7e:	43e4      	mvns	r4, r4
 801da80:	b2e4      	uxtb	r4, r4
 801da82:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801da86:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801da8a:	fb16 f604 	smulbb	r6, r6, r4
 801da8e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801da92:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da96:	00ed      	lsls	r5, r5, #3
 801da98:	fb0c 6c07 	mla	ip, ip, r7, r6
 801da9c:	b2ed      	uxtb	r5, r5
 801da9e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801daa2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801daa6:	fb15 f504 	smulbb	r5, r5, r4
 801daaa:	fa5f fe8e 	uxtb.w	lr, lr
 801daae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dab2:	fb0e 5507 	mla	r5, lr, r7, r5
 801dab6:	fb1a fa04 	smulbb	sl, sl, r4
 801daba:	fa1f fc8c 	uxth.w	ip, ip
 801dabe:	b2ad      	uxth	r5, r5
 801dac0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dac4:	fb06 a607 	mla	r6, r6, r7, sl
 801dac8:	f10c 0401 	add.w	r4, ip, #1
 801dacc:	f105 0a01 	add.w	sl, r5, #1
 801dad0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dad4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dad8:	b2b6      	uxth	r6, r6
 801dada:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dade:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dae2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dae6:	f106 0a01 	add.w	sl, r6, #1
 801daea:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801daee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801daf2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801daf6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dafa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dafe:	e7ae      	b.n	801da5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801db00:	b005      	add	sp, #20
 801db02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801db06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801db06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db0a:	b085      	sub	sp, #20
 801db0c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801db0e:	9203      	str	r2, [sp, #12]
 801db10:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801db14:	9201      	str	r2, [sp, #4]
 801db16:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801db1a:	9100      	str	r1, [sp, #0]
 801db1c:	6841      	ldr	r1, [r0, #4]
 801db1e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801db22:	fb01 2404 	mla	r4, r1, r4, r2
 801db26:	6802      	ldr	r2, [r0, #0]
 801db28:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801db2c:	f8de 2000 	ldr.w	r2, [lr]
 801db30:	9202      	str	r2, [sp, #8]
 801db32:	9a01      	ldr	r2, [sp, #4]
 801db34:	43d6      	mvns	r6, r2
 801db36:	b2f6      	uxtb	r6, r6
 801db38:	9a00      	ldr	r2, [sp, #0]
 801db3a:	2a00      	cmp	r2, #0
 801db3c:	dc03      	bgt.n	801db46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801db3e:	9a03      	ldr	r2, [sp, #12]
 801db40:	2a00      	cmp	r2, #0
 801db42:	f340 8124 	ble.w	801dd8e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801db46:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801db48:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801db4c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801db50:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801db54:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801db56:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801db5a:	2b00      	cmp	r3, #0
 801db5c:	dd0e      	ble.n	801db7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801db5e:	1408      	asrs	r0, r1, #16
 801db60:	d405      	bmi.n	801db6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db62:	4560      	cmp	r0, ip
 801db64:	da03      	bge.n	801db6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db66:	1410      	asrs	r0, r2, #16
 801db68:	d401      	bmi.n	801db6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db6a:	42b8      	cmp	r0, r7
 801db6c:	db07      	blt.n	801db7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801db6e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801db70:	4401      	add	r1, r0
 801db72:	9812      	ldr	r0, [sp, #72]	; 0x48
 801db74:	3b01      	subs	r3, #1
 801db76:	4402      	add	r2, r0
 801db78:	3402      	adds	r4, #2
 801db7a:	e7ee      	b.n	801db5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801db7c:	d06e      	beq.n	801dc5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801db7e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801db80:	1e58      	subs	r0, r3, #1
 801db82:	fb05 1500 	mla	r5, r5, r0, r1
 801db86:	142d      	asrs	r5, r5, #16
 801db88:	d45c      	bmi.n	801dc44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db8a:	4565      	cmp	r5, ip
 801db8c:	da5a      	bge.n	801dc44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db8e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801db90:	fb05 2000 	mla	r0, r5, r0, r2
 801db94:	1400      	asrs	r0, r0, #16
 801db96:	d455      	bmi.n	801dc44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db98:	42b8      	cmp	r0, r7
 801db9a:	da53      	bge.n	801dc44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db9c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801dba0:	4699      	mov	r9, r3
 801dba2:	46a2      	mov	sl, r4
 801dba4:	f1b9 0f00 	cmp.w	r9, #0
 801dba8:	dd54      	ble.n	801dc54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801dbaa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801dbae:	140d      	asrs	r5, r1, #16
 801dbb0:	1410      	asrs	r0, r2, #16
 801dbb2:	fb07 5000 	mla	r0, r7, r0, r5
 801dbb6:	9d02      	ldr	r5, [sp, #8]
 801dbb8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801dbbc:	f8ba 5000 	ldrh.w	r5, [sl]
 801dbc0:	122f      	asrs	r7, r5, #8
 801dbc2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dbc6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dbca:	fb17 f706 	smulbb	r7, r7, r6
 801dbce:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801dbd2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dbd6:	00ed      	lsls	r5, r5, #3
 801dbd8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801dbdc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801dbe0:	10c7      	asrs	r7, r0, #3
 801dbe2:	b2ed      	uxtb	r5, r5
 801dbe4:	00c0      	lsls	r0, r0, #3
 801dbe6:	fb18 f806 	smulbb	r8, r8, r6
 801dbea:	fb15 f506 	smulbb	r5, r5, r6
 801dbee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dbf2:	b2c0      	uxtb	r0, r0
 801dbf4:	fa1f fc8c 	uxth.w	ip, ip
 801dbf8:	fb07 870b 	mla	r7, r7, fp, r8
 801dbfc:	fb00 500b 	mla	r0, r0, fp, r5
 801dc00:	b280      	uxth	r0, r0
 801dc02:	b2bf      	uxth	r7, r7
 801dc04:	f10c 0501 	add.w	r5, ip, #1
 801dc08:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dc0c:	f107 0801 	add.w	r8, r7, #1
 801dc10:	1c45      	adds	r5, r0, #1
 801dc12:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dc16:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801dc1a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dc1c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dc20:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dc24:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801dc28:	ea45 0c0c 	orr.w	ip, r5, ip
 801dc2c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801dc30:	4401      	add	r1, r0
 801dc32:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dc34:	ea4c 0c08 	orr.w	ip, ip, r8
 801dc38:	f82a cb02 	strh.w	ip, [sl], #2
 801dc3c:	4402      	add	r2, r0
 801dc3e:	f109 39ff 	add.w	r9, r9, #4294967295
 801dc42:	e7af      	b.n	801dba4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801dc44:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801dc48:	f04f 0800 	mov.w	r8, #0
 801dc4c:	eb03 0008 	add.w	r0, r3, r8
 801dc50:	2800      	cmp	r0, #0
 801dc52:	dc41      	bgt.n	801dcd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801dc54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dc58:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dc5c:	9b00      	ldr	r3, [sp, #0]
 801dc5e:	2b00      	cmp	r3, #0
 801dc60:	f340 8095 	ble.w	801dd8e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dc64:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dc6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dc70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dc76:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dc7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dc7e:	eef0 6a62 	vmov.f32	s13, s5
 801dc82:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dc86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dc8e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801dc92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dc96:	eef0 6a43 	vmov.f32	s13, s6
 801dc9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dc9e:	ee12 2a90 	vmov	r2, s5
 801dca2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dca6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dcaa:	ee13 2a10 	vmov	r2, s6
 801dcae:	9311      	str	r3, [sp, #68]	; 0x44
 801dcb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dcb2:	fb92 f3f3 	sdiv	r3, r2, r3
 801dcb6:	9312      	str	r3, [sp, #72]	; 0x48
 801dcb8:	9b00      	ldr	r3, [sp, #0]
 801dcba:	9a03      	ldr	r2, [sp, #12]
 801dcbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dcc0:	3b01      	subs	r3, #1
 801dcc2:	9300      	str	r3, [sp, #0]
 801dcc4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801dcc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dcca:	eeb0 3a67 	vmov.f32	s6, s15
 801dcce:	bf08      	it	eq
 801dcd0:	4613      	moveq	r3, r2
 801dcd2:	eef0 2a47 	vmov.f32	s5, s14
 801dcd6:	e72f      	b.n	801db38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801dcd8:	140f      	asrs	r7, r1, #16
 801dcda:	d451      	bmi.n	801dd80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcdc:	f8de 5008 	ldr.w	r5, [lr, #8]
 801dce0:	42bd      	cmp	r5, r7
 801dce2:	dd4d      	ble.n	801dd80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dce4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801dce8:	d44a      	bmi.n	801dd80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcea:	f8de 000c 	ldr.w	r0, [lr, #12]
 801dcee:	4560      	cmp	r0, ip
 801dcf0:	dd46      	ble.n	801dd80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcf2:	b22d      	sxth	r5, r5
 801dcf4:	fb0c 7505 	mla	r5, ip, r5, r7
 801dcf8:	9802      	ldr	r0, [sp, #8]
 801dcfa:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801dcfe:	f06f 0501 	mvn.w	r5, #1
 801dd02:	fb05 fb08 	mul.w	fp, r5, r8
 801dd06:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dd0a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801dd0e:	122f      	asrs	r7, r5, #8
 801dd10:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dd14:	fb17 f706 	smulbb	r7, r7, r6
 801dd18:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801dd1c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dd20:	00ed      	lsls	r5, r5, #3
 801dd22:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801dd26:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801dd2a:	10c7      	asrs	r7, r0, #3
 801dd2c:	b2ed      	uxtb	r5, r5
 801dd2e:	00c0      	lsls	r0, r0, #3
 801dd30:	fb19 f906 	smulbb	r9, r9, r6
 801dd34:	fb15 f506 	smulbb	r5, r5, r6
 801dd38:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dd3c:	b2c0      	uxtb	r0, r0
 801dd3e:	fa1f fc8c 	uxth.w	ip, ip
 801dd42:	fb07 970a 	mla	r7, r7, sl, r9
 801dd46:	fb00 500a 	mla	r0, r0, sl, r5
 801dd4a:	b2bf      	uxth	r7, r7
 801dd4c:	b280      	uxth	r0, r0
 801dd4e:	f10c 0501 	add.w	r5, ip, #1
 801dd52:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dd56:	f107 0901 	add.w	r9, r7, #1
 801dd5a:	1c45      	adds	r5, r0, #1
 801dd5c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dd60:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801dd64:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dd68:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dd6c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dd70:	ea45 0c0c 	orr.w	ip, r5, ip
 801dd74:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dd78:	ea4c 0c09 	orr.w	ip, ip, r9
 801dd7c:	f824 c00b 	strh.w	ip, [r4, fp]
 801dd80:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dd82:	4401      	add	r1, r0
 801dd84:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dd86:	f108 38ff 	add.w	r8, r8, #4294967295
 801dd8a:	4402      	add	r2, r0
 801dd8c:	e75e      	b.n	801dc4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801dd8e:	b005      	add	sp, #20
 801dd90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd98:	b085      	sub	sp, #20
 801dd9a:	4693      	mov	fp, r2
 801dd9c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801dd9e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801dda0:	6870      	ldr	r0, [r6, #4]
 801dda2:	9101      	str	r1, [sp, #4]
 801dda4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dda8:	fb00 2404 	mla	r4, r0, r4, r2
 801ddac:	6832      	ldr	r2, [r6, #0]
 801ddae:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801ddb2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ddb6:	682a      	ldr	r2, [r5, #0]
 801ddb8:	9202      	str	r2, [sp, #8]
 801ddba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ddbe:	9a01      	ldr	r2, [sp, #4]
 801ddc0:	2a00      	cmp	r2, #0
 801ddc2:	dc03      	bgt.n	801ddcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ddc4:	f1bb 0f00 	cmp.w	fp, #0
 801ddc8:	f340 809a 	ble.w	801df00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801ddcc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ddce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ddd2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ddd6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ddda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dddc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dde0:	2b00      	cmp	r3, #0
 801dde2:	dd0c      	ble.n	801ddfe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801dde4:	1406      	asrs	r6, r0, #16
 801dde6:	d405      	bmi.n	801ddf4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dde8:	454e      	cmp	r6, r9
 801ddea:	da03      	bge.n	801ddf4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ddec:	1416      	asrs	r6, r2, #16
 801ddee:	d401      	bmi.n	801ddf4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ddf0:	4546      	cmp	r6, r8
 801ddf2:	db05      	blt.n	801de00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ddf4:	4470      	add	r0, lr
 801ddf6:	4462      	add	r2, ip
 801ddf8:	3b01      	subs	r3, #1
 801ddfa:	3402      	adds	r4, #2
 801ddfc:	e7f0      	b.n	801dde0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ddfe:	d00f      	beq.n	801de20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801de00:	1e5e      	subs	r6, r3, #1
 801de02:	fb0e 0706 	mla	r7, lr, r6, r0
 801de06:	143f      	asrs	r7, r7, #16
 801de08:	d541      	bpl.n	801de8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801de0a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801de0e:	4698      	mov	r8, r3
 801de10:	9603      	str	r6, [sp, #12]
 801de12:	f1b8 0f00 	cmp.w	r8, #0
 801de16:	dc56      	bgt.n	801dec6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801de18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801de1c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801de20:	9b01      	ldr	r3, [sp, #4]
 801de22:	2b00      	cmp	r3, #0
 801de24:	dd6c      	ble.n	801df00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801de26:	ee30 0a04 	vadd.f32	s0, s0, s8
 801de2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de2e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801de32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de34:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de3c:	eeb0 6a62 	vmov.f32	s12, s5
 801de40:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de48:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de4c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801de50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de54:	eeb0 6a43 	vmov.f32	s12, s6
 801de58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de5c:	ee12 2a90 	vmov	r2, s5
 801de60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de64:	fb92 fef3 	sdiv	lr, r2, r3
 801de68:	ee13 2a10 	vmov	r2, s6
 801de6c:	fb92 fcf3 	sdiv	ip, r2, r3
 801de70:	9b01      	ldr	r3, [sp, #4]
 801de72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de76:	3b01      	subs	r3, #1
 801de78:	9301      	str	r3, [sp, #4]
 801de7a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801de7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de80:	eeb0 3a67 	vmov.f32	s6, s15
 801de84:	bf08      	it	eq
 801de86:	465b      	moveq	r3, fp
 801de88:	eef0 2a47 	vmov.f32	s5, s14
 801de8c:	e797      	b.n	801ddbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801de8e:	454f      	cmp	r7, r9
 801de90:	dabb      	bge.n	801de0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de92:	fb0c 2606 	mla	r6, ip, r6, r2
 801de96:	1436      	asrs	r6, r6, #16
 801de98:	d4b7      	bmi.n	801de0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de9a:	4546      	cmp	r6, r8
 801de9c:	dab5      	bge.n	801de0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de9e:	461e      	mov	r6, r3
 801dea0:	46a0      	mov	r8, r4
 801dea2:	2e00      	cmp	r6, #0
 801dea4:	ddb8      	ble.n	801de18 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dea6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801deaa:	9902      	ldr	r1, [sp, #8]
 801deac:	1417      	asrs	r7, r2, #16
 801deae:	ea4f 4920 	mov.w	r9, r0, asr #16
 801deb2:	fb0a 9707 	mla	r7, sl, r7, r9
 801deb6:	4470      	add	r0, lr
 801deb8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801debc:	f828 7b02 	strh.w	r7, [r8], #2
 801dec0:	4462      	add	r2, ip
 801dec2:	3e01      	subs	r6, #1
 801dec4:	e7ed      	b.n	801dea2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801dec6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801deca:	d414      	bmi.n	801def6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801decc:	68ae      	ldr	r6, [r5, #8]
 801dece:	454e      	cmp	r6, r9
 801ded0:	dd11      	ble.n	801def6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801ded2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801ded6:	d40e      	bmi.n	801def6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801ded8:	68ef      	ldr	r7, [r5, #12]
 801deda:	4557      	cmp	r7, sl
 801dedc:	dd0b      	ble.n	801def6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dede:	b236      	sxth	r6, r6
 801dee0:	fb0a 9606 	mla	r6, sl, r6, r9
 801dee4:	9f02      	ldr	r7, [sp, #8]
 801dee6:	f06f 0101 	mvn.w	r1, #1
 801deea:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801deee:	fb01 f608 	mul.w	r6, r1, r8
 801def2:	9903      	ldr	r1, [sp, #12]
 801def4:	538f      	strh	r7, [r1, r6]
 801def6:	4470      	add	r0, lr
 801def8:	4462      	add	r2, ip
 801defa:	f108 38ff 	add.w	r8, r8, #4294967295
 801defe:	e788      	b.n	801de12 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801df00:	b005      	add	sp, #20
 801df02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801df06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801df06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df0a:	b087      	sub	sp, #28
 801df0c:	468b      	mov	fp, r1
 801df0e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801df10:	9203      	str	r2, [sp, #12]
 801df12:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801df16:	9204      	str	r2, [sp, #16]
 801df18:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801df1c:	6841      	ldr	r1, [r0, #4]
 801df1e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801df22:	fb01 2505 	mla	r5, r1, r5, r2
 801df26:	6802      	ldr	r2, [r0, #0]
 801df28:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801df2c:	f8d9 2000 	ldr.w	r2, [r9]
 801df30:	9201      	str	r2, [sp, #4]
 801df32:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801df36:	f1bb 0f00 	cmp.w	fp, #0
 801df3a:	dc03      	bgt.n	801df44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801df3c:	9a03      	ldr	r2, [sp, #12]
 801df3e:	2a00      	cmp	r2, #0
 801df40:	f340 8159 	ble.w	801e1f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801df44:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801df46:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801df4a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801df4e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801df52:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801df54:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801df58:	2b00      	cmp	r3, #0
 801df5a:	dd0e      	ble.n	801df7a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df5c:	1402      	asrs	r2, r0, #16
 801df5e:	d405      	bmi.n	801df6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df60:	42ba      	cmp	r2, r7
 801df62:	da03      	bge.n	801df6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df64:	140a      	asrs	r2, r1, #16
 801df66:	d401      	bmi.n	801df6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df68:	42b2      	cmp	r2, r6
 801df6a:	db07      	blt.n	801df7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df6c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801df6e:	4410      	add	r0, r2
 801df70:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801df72:	3b01      	subs	r3, #1
 801df74:	4411      	add	r1, r2
 801df76:	3502      	adds	r5, #2
 801df78:	e7ee      	b.n	801df58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801df7a:	d017      	beq.n	801dfac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801df7c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801df7e:	1e5a      	subs	r2, r3, #1
 801df80:	fb04 0402 	mla	r4, r4, r2, r0
 801df84:	1424      	asrs	r4, r4, #16
 801df86:	d409      	bmi.n	801df9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df88:	42bc      	cmp	r4, r7
 801df8a:	da07      	bge.n	801df9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df8c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801df8e:	fb04 1202 	mla	r2, r4, r2, r1
 801df92:	1412      	asrs	r2, r2, #16
 801df94:	d402      	bmi.n	801df9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df96:	42b2      	cmp	r2, r6
 801df98:	f2c0 80bf 	blt.w	801e11a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801df9c:	2700      	movs	r7, #0
 801df9e:	19da      	adds	r2, r3, r7
 801dfa0:	2a00      	cmp	r2, #0
 801dfa2:	dc3e      	bgt.n	801e022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801dfa4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dfa8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801dfac:	f1bb 0f00 	cmp.w	fp, #0
 801dfb0:	f340 8121 	ble.w	801e1f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801dfb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dfb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dfbc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dfc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dfc2:	f1bb 0b01 	subs.w	fp, fp, #1
 801dfc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dfca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dfce:	eeb0 6a62 	vmov.f32	s12, s5
 801dfd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dfd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dfda:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dfde:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801dfe2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dfe6:	eeb0 6a43 	vmov.f32	s12, s6
 801dfea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dfee:	ee12 2a90 	vmov	r2, s5
 801dff2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dff6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dffa:	ee13 2a10 	vmov	r2, s6
 801dffe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e002:	9313      	str	r3, [sp, #76]	; 0x4c
 801e004:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e006:	fb92 f3f3 	sdiv	r3, r2, r3
 801e00a:	9a03      	ldr	r2, [sp, #12]
 801e00c:	9314      	str	r3, [sp, #80]	; 0x50
 801e00e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e012:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e014:	eeb0 3a67 	vmov.f32	s6, s15
 801e018:	bf08      	it	eq
 801e01a:	4613      	moveq	r3, r2
 801e01c:	eef0 2a47 	vmov.f32	s5, s14
 801e020:	e789      	b.n	801df36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e022:	1406      	asrs	r6, r0, #16
 801e024:	d42d      	bmi.n	801e082 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e026:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e02a:	42b4      	cmp	r4, r6
 801e02c:	dd29      	ble.n	801e082 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e02e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e032:	d426      	bmi.n	801e082 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e034:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e038:	4562      	cmp	r2, ip
 801e03a:	dd22      	ble.n	801e082 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e03c:	b224      	sxth	r4, r4
 801e03e:	9a01      	ldr	r2, [sp, #4]
 801e040:	fb0c 6404 	mla	r4, ip, r4, r6
 801e044:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e048:	0e22      	lsrs	r2, r4, #24
 801e04a:	d01a      	beq.n	801e082 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e04c:	9e04      	ldr	r6, [sp, #16]
 801e04e:	4372      	muls	r2, r6
 801e050:	1c56      	adds	r6, r2, #1
 801e052:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e056:	1212      	asrs	r2, r2, #8
 801e058:	0a26      	lsrs	r6, r4, #8
 801e05a:	2aff      	cmp	r2, #255	; 0xff
 801e05c:	9605      	str	r6, [sp, #20]
 801e05e:	d116      	bne.n	801e08e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e060:	f06f 0201 	mvn.w	r2, #1
 801e064:	fb02 fc07 	mul.w	ip, r2, r7
 801e068:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e06c:	0962      	lsrs	r2, r4, #5
 801e06e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e072:	f026 0607 	bic.w	r6, r6, #7
 801e076:	4316      	orrs	r6, r2
 801e078:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e07c:	4326      	orrs	r6, r4
 801e07e:	f825 600c 	strh.w	r6, [r5, ip]
 801e082:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e084:	4410      	add	r0, r2
 801e086:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e088:	3f01      	subs	r7, #1
 801e08a:	4411      	add	r1, r2
 801e08c:	e787      	b.n	801df9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e08e:	f06f 0601 	mvn.w	r6, #1
 801e092:	437e      	muls	r6, r7
 801e094:	fa1f fa82 	uxth.w	sl, r2
 801e098:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e09c:	9602      	str	r6, [sp, #8]
 801e09e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e0a2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e0a6:	43d2      	mvns	r2, r2
 801e0a8:	b2d2      	uxtb	r2, r2
 801e0aa:	fb1c fc0a 	smulbb	ip, ip, sl
 801e0ae:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e0b2:	fb0e ce02 	mla	lr, lr, r2, ip
 801e0b6:	b2e4      	uxtb	r4, r4
 801e0b8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e0bc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e0c0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e0c4:	fa5f f888 	uxtb.w	r8, r8
 801e0c8:	fb14 f40a 	smulbb	r4, r4, sl
 801e0cc:	fb08 4402 	mla	r4, r8, r2, r4
 801e0d0:	fa1f fe8e 	uxth.w	lr, lr
 801e0d4:	fb16 f60a 	smulbb	r6, r6, sl
 801e0d8:	b2a4      	uxth	r4, r4
 801e0da:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e0de:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e0e2:	f10e 0201 	add.w	r2, lr, #1
 801e0e6:	1c66      	adds	r6, r4, #1
 801e0e8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e0ec:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e0f0:	fa1f fc8c 	uxth.w	ip, ip
 801e0f4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e0f8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e0fc:	ea46 0e0e 	orr.w	lr, r6, lr
 801e100:	f10c 0601 	add.w	r6, ip, #1
 801e104:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e108:	0976      	lsrs	r6, r6, #5
 801e10a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e10e:	9a02      	ldr	r2, [sp, #8]
 801e110:	ea4e 0e06 	orr.w	lr, lr, r6
 801e114:	f825 e002 	strh.w	lr, [r5, r2]
 801e118:	e7b3      	b.n	801e082 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e11a:	f04f 0800 	mov.w	r8, #0
 801e11e:	eba3 0208 	sub.w	r2, r3, r8
 801e122:	2a00      	cmp	r2, #0
 801e124:	f77f af3e 	ble.w	801dfa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e128:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e12c:	1404      	asrs	r4, r0, #16
 801e12e:	140a      	asrs	r2, r1, #16
 801e130:	fb06 4202 	mla	r2, r6, r2, r4
 801e134:	9c01      	ldr	r4, [sp, #4]
 801e136:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e13a:	0e22      	lsrs	r2, r4, #24
 801e13c:	d016      	beq.n	801e16c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e13e:	9e04      	ldr	r6, [sp, #16]
 801e140:	4372      	muls	r2, r6
 801e142:	1c56      	adds	r6, r2, #1
 801e144:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e148:	1212      	asrs	r2, r2, #8
 801e14a:	2aff      	cmp	r2, #255	; 0xff
 801e14c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e150:	d113      	bne.n	801e17a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e152:	0962      	lsrs	r2, r4, #5
 801e154:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e158:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e15c:	f026 0607 	bic.w	r6, r6, #7
 801e160:	4316      	orrs	r6, r2
 801e162:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e166:	4326      	orrs	r6, r4
 801e168:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e16c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e16e:	4410      	add	r0, r2
 801e170:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e172:	f108 0801 	add.w	r8, r8, #1
 801e176:	4411      	add	r1, r2
 801e178:	e7d1      	b.n	801e11e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e17a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e17e:	fa1f fa82 	uxth.w	sl, r2
 801e182:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e186:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e18a:	43d2      	mvns	r2, r2
 801e18c:	b2d2      	uxtb	r2, r2
 801e18e:	fb17 f70a 	smulbb	r7, r7, sl
 801e192:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e196:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e19a:	b2e4      	uxtb	r4, r4
 801e19c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e1a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e1a4:	fa5f fe8e 	uxtb.w	lr, lr
 801e1a8:	fb14 f40a 	smulbb	r4, r4, sl
 801e1ac:	fb0e 4402 	mla	r4, lr, r2, r4
 801e1b0:	b2f6      	uxtb	r6, r6
 801e1b2:	fa1f fc8c 	uxth.w	ip, ip
 801e1b6:	fb16 f60a 	smulbb	r6, r6, sl
 801e1ba:	b2a4      	uxth	r4, r4
 801e1bc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e1c0:	fb07 6702 	mla	r7, r7, r2, r6
 801e1c4:	f10c 0201 	add.w	r2, ip, #1
 801e1c8:	1c66      	adds	r6, r4, #1
 801e1ca:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e1ce:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e1d2:	b2bf      	uxth	r7, r7
 801e1d4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e1d8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e1dc:	ea46 0c0c 	orr.w	ip, r6, ip
 801e1e0:	1c7e      	adds	r6, r7, #1
 801e1e2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e1e6:	0976      	lsrs	r6, r6, #5
 801e1e8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e1ec:	ea4c 0c06 	orr.w	ip, ip, r6
 801e1f0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e1f4:	e7ba      	b.n	801e16c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e1f6:	b007      	add	sp, #28
 801e1f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e1fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e1fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e200:	b085      	sub	sp, #20
 801e202:	468b      	mov	fp, r1
 801e204:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e206:	9203      	str	r2, [sp, #12]
 801e208:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e20c:	6841      	ldr	r1, [r0, #4]
 801e20e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e212:	fb01 2404 	mla	r4, r1, r4, r2
 801e216:	6802      	ldr	r2, [r0, #0]
 801e218:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e21c:	f8d8 2000 	ldr.w	r2, [r8]
 801e220:	9201      	str	r2, [sp, #4]
 801e222:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e226:	f1bb 0f00 	cmp.w	fp, #0
 801e22a:	dc03      	bgt.n	801e234 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e22c:	9a03      	ldr	r2, [sp, #12]
 801e22e:	2a00      	cmp	r2, #0
 801e230:	f340 814f 	ble.w	801e4d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e234:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e236:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e23a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e23e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e242:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e244:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e248:	2b00      	cmp	r3, #0
 801e24a:	dd0e      	ble.n	801e26a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e24c:	1408      	asrs	r0, r1, #16
 801e24e:	d405      	bmi.n	801e25c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e250:	42b8      	cmp	r0, r7
 801e252:	da03      	bge.n	801e25c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e254:	1410      	asrs	r0, r2, #16
 801e256:	d401      	bmi.n	801e25c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e258:	42b0      	cmp	r0, r6
 801e25a:	db07      	blt.n	801e26c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e25c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e25e:	4401      	add	r1, r0
 801e260:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e262:	3b01      	subs	r3, #1
 801e264:	4402      	add	r2, r0
 801e266:	3402      	adds	r4, #2
 801e268:	e7ee      	b.n	801e248 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e26a:	d017      	beq.n	801e29c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e26c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e26e:	1e58      	subs	r0, r3, #1
 801e270:	fb05 1500 	mla	r5, r5, r0, r1
 801e274:	142d      	asrs	r5, r5, #16
 801e276:	d409      	bmi.n	801e28c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e278:	42bd      	cmp	r5, r7
 801e27a:	da07      	bge.n	801e28c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e27c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e27e:	fb05 2000 	mla	r0, r5, r0, r2
 801e282:	1400      	asrs	r0, r0, #16
 801e284:	d402      	bmi.n	801e28c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e286:	42b0      	cmp	r0, r6
 801e288:	f2c0 80ba 	blt.w	801e400 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e28c:	2600      	movs	r6, #0
 801e28e:	1998      	adds	r0, r3, r6
 801e290:	2800      	cmp	r0, #0
 801e292:	dc3e      	bgt.n	801e312 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e294:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e298:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e29c:	f1bb 0f00 	cmp.w	fp, #0
 801e2a0:	f340 8117 	ble.w	801e4d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e2a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e2a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e2ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e2b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2b2:	f1bb 0b01 	subs.w	fp, fp, #1
 801e2b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e2ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e2be:	eeb0 6a62 	vmov.f32	s12, s5
 801e2c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e2c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e2ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e2ce:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e2d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e2d6:	eeb0 6a43 	vmov.f32	s12, s6
 801e2da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e2de:	ee12 2a90 	vmov	r2, s5
 801e2e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e2e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2ea:	ee13 2a10 	vmov	r2, s6
 801e2ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e2f2:	9311      	str	r3, [sp, #68]	; 0x44
 801e2f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2fa:	9a03      	ldr	r2, [sp, #12]
 801e2fc:	9312      	str	r3, [sp, #72]	; 0x48
 801e2fe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e302:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e304:	eeb0 3a67 	vmov.f32	s6, s15
 801e308:	bf08      	it	eq
 801e30a:	4613      	moveq	r3, r2
 801e30c:	eef0 2a47 	vmov.f32	s5, s14
 801e310:	e789      	b.n	801e226 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e312:	140f      	asrs	r7, r1, #16
 801e314:	d424      	bmi.n	801e360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e316:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e31a:	42bd      	cmp	r5, r7
 801e31c:	dd20      	ble.n	801e360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e31e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e322:	d41d      	bmi.n	801e360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e324:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e328:	4560      	cmp	r0, ip
 801e32a:	dd19      	ble.n	801e360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e32c:	b22d      	sxth	r5, r5
 801e32e:	fb0c 7505 	mla	r5, ip, r5, r7
 801e332:	9801      	ldr	r0, [sp, #4]
 801e334:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e338:	0e07      	lsrs	r7, r0, #24
 801e33a:	2fff      	cmp	r7, #255	; 0xff
 801e33c:	d116      	bne.n	801e36c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e33e:	f06f 0501 	mvn.w	r5, #1
 801e342:	fb05 f706 	mul.w	r7, r5, r6
 801e346:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e34a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e34e:	0945      	lsrs	r5, r0, #5
 801e350:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e354:	ea4c 0505 	orr.w	r5, ip, r5
 801e358:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e35c:	4305      	orrs	r5, r0
 801e35e:	53e5      	strh	r5, [r4, r7]
 801e360:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e362:	4401      	add	r1, r0
 801e364:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e366:	3e01      	subs	r6, #1
 801e368:	4402      	add	r2, r0
 801e36a:	e790      	b.n	801e28e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e36c:	b2fd      	uxtb	r5, r7
 801e36e:	2f00      	cmp	r7, #0
 801e370:	d0f6      	beq.n	801e360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e372:	f06f 0701 	mvn.w	r7, #1
 801e376:	4377      	muls	r7, r6
 801e378:	fa1f f985 	uxth.w	r9, r5
 801e37c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e380:	9702      	str	r7, [sp, #8]
 801e382:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e386:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e38a:	43ed      	mvns	r5, r5
 801e38c:	b2ed      	uxtb	r5, r5
 801e38e:	fb17 f709 	smulbb	r7, r7, r9
 801e392:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e396:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e39a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e39e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e3a2:	b2c0      	uxtb	r0, r0
 801e3a4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e3a8:	fa5f fe8e 	uxtb.w	lr, lr
 801e3ac:	fb10 f009 	smulbb	r0, r0, r9
 801e3b0:	fb0e 0005 	mla	r0, lr, r5, r0
 801e3b4:	b280      	uxth	r0, r0
 801e3b6:	fa1f fc8c 	uxth.w	ip, ip
 801e3ba:	fb1a fa09 	smulbb	sl, sl, r9
 801e3be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e3c2:	fb07 a705 	mla	r7, r7, r5, sl
 801e3c6:	f100 0a01 	add.w	sl, r0, #1
 801e3ca:	f10c 0501 	add.w	r5, ip, #1
 801e3ce:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e3d2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e3d6:	b2bf      	uxth	r7, r7
 801e3d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e3dc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e3e0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e3e4:	f107 0a01 	add.w	sl, r7, #1
 801e3e8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e3ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e3f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e3f4:	9802      	ldr	r0, [sp, #8]
 801e3f6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e3fa:	f824 c000 	strh.w	ip, [r4, r0]
 801e3fe:	e7af      	b.n	801e360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e400:	f04f 0e00 	mov.w	lr, #0
 801e404:	eba3 000e 	sub.w	r0, r3, lr
 801e408:	2800      	cmp	r0, #0
 801e40a:	f77f af43 	ble.w	801e294 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e40e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e412:	140d      	asrs	r5, r1, #16
 801e414:	1410      	asrs	r0, r2, #16
 801e416:	fb06 5000 	mla	r0, r6, r0, r5
 801e41a:	9d01      	ldr	r5, [sp, #4]
 801e41c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e420:	0e2e      	lsrs	r6, r5, #24
 801e422:	2eff      	cmp	r6, #255	; 0xff
 801e424:	d112      	bne.n	801e44c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e426:	482c      	ldr	r0, [pc, #176]	; (801e4d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e428:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e42c:	0968      	lsrs	r0, r5, #5
 801e42e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e432:	4330      	orrs	r0, r6
 801e434:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e438:	4328      	orrs	r0, r5
 801e43a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e43e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e440:	4401      	add	r1, r0
 801e442:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e444:	f10e 0e01 	add.w	lr, lr, #1
 801e448:	4402      	add	r2, r0
 801e44a:	e7db      	b.n	801e404 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e44c:	b2f0      	uxtb	r0, r6
 801e44e:	2e00      	cmp	r6, #0
 801e450:	d0f5      	beq.n	801e43e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e452:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e456:	fa1f f980 	uxth.w	r9, r0
 801e45a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e45e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e462:	43c0      	mvns	r0, r0
 801e464:	b2c0      	uxtb	r0, r0
 801e466:	fb16 f609 	smulbb	r6, r6, r9
 801e46a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e46e:	fb07 6700 	mla	r7, r7, r0, r6
 801e472:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e476:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e47a:	b2ed      	uxtb	r5, r5
 801e47c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e480:	fa5f fc8c 	uxtb.w	ip, ip
 801e484:	fb15 f509 	smulbb	r5, r5, r9
 801e488:	fb0c 5500 	mla	r5, ip, r0, r5
 801e48c:	b2bf      	uxth	r7, r7
 801e48e:	fb1a fa09 	smulbb	sl, sl, r9
 801e492:	b2ad      	uxth	r5, r5
 801e494:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e498:	fb06 a600 	mla	r6, r6, r0, sl
 801e49c:	1c78      	adds	r0, r7, #1
 801e49e:	f105 0a01 	add.w	sl, r5, #1
 801e4a2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e4a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e4aa:	b2b6      	uxth	r6, r6
 801e4ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e4b0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e4b4:	ea4a 0707 	orr.w	r7, sl, r7
 801e4b8:	f106 0a01 	add.w	sl, r6, #1
 801e4bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e4c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e4c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e4c8:	ea47 070a 	orr.w	r7, r7, sl
 801e4cc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e4d0:	e7b5      	b.n	801e43e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e4d2:	b005      	add	sp, #20
 801e4d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4d8:	fffff800 	.word	0xfffff800

0801e4dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4e0:	b087      	sub	sp, #28
 801e4e2:	468b      	mov	fp, r1
 801e4e4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e4e6:	9203      	str	r2, [sp, #12]
 801e4e8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e4ec:	9204      	str	r2, [sp, #16]
 801e4ee:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e4f2:	6841      	ldr	r1, [r0, #4]
 801e4f4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e4f8:	fb01 2404 	mla	r4, r1, r4, r2
 801e4fc:	6802      	ldr	r2, [r0, #0]
 801e4fe:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e502:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e506:	3201      	adds	r2, #1
 801e508:	f022 0201 	bic.w	r2, r2, #1
 801e50c:	9200      	str	r2, [sp, #0]
 801e50e:	f8d9 2000 	ldr.w	r2, [r9]
 801e512:	9201      	str	r2, [sp, #4]
 801e514:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e518:	f1bb 0f00 	cmp.w	fp, #0
 801e51c:	dc03      	bgt.n	801e526 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e51e:	9a03      	ldr	r2, [sp, #12]
 801e520:	2a00      	cmp	r2, #0
 801e522:	f340 8169 	ble.w	801e7f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e526:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e528:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e52c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e530:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e534:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e536:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e53a:	2b00      	cmp	r3, #0
 801e53c:	dd0e      	ble.n	801e55c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e53e:	1402      	asrs	r2, r0, #16
 801e540:	d405      	bmi.n	801e54e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e542:	42ba      	cmp	r2, r7
 801e544:	da03      	bge.n	801e54e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e546:	140a      	asrs	r2, r1, #16
 801e548:	d401      	bmi.n	801e54e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e54a:	42b2      	cmp	r2, r6
 801e54c:	db07      	blt.n	801e55e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e54e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e550:	4410      	add	r0, r2
 801e552:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e554:	3b01      	subs	r3, #1
 801e556:	4411      	add	r1, r2
 801e558:	3402      	adds	r4, #2
 801e55a:	e7ee      	b.n	801e53a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e55c:	d017      	beq.n	801e58e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e55e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e560:	1e5a      	subs	r2, r3, #1
 801e562:	fb05 0502 	mla	r5, r5, r2, r0
 801e566:	142d      	asrs	r5, r5, #16
 801e568:	d409      	bmi.n	801e57e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e56a:	42bd      	cmp	r5, r7
 801e56c:	da07      	bge.n	801e57e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e56e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e570:	fb05 1202 	mla	r2, r5, r2, r1
 801e574:	1412      	asrs	r2, r2, #16
 801e576:	d402      	bmi.n	801e57e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e578:	42b2      	cmp	r2, r6
 801e57a:	f2c0 80c7 	blt.w	801e70c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801e57e:	2700      	movs	r7, #0
 801e580:	19da      	adds	r2, r3, r7
 801e582:	2a00      	cmp	r2, #0
 801e584:	dc3e      	bgt.n	801e604 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e586:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e58a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e58e:	f1bb 0f00 	cmp.w	fp, #0
 801e592:	f340 8131 	ble.w	801e7f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e596:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e59a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e59e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e5a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5a4:	f1bb 0b01 	subs.w	fp, fp, #1
 801e5a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e5ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e5b0:	eeb0 6a62 	vmov.f32	s12, s5
 801e5b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e5b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e5bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e5c0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e5c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e5c8:	eeb0 6a43 	vmov.f32	s12, s6
 801e5cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e5d0:	ee12 2a90 	vmov	r2, s5
 801e5d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e5d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5dc:	ee13 2a10 	vmov	r2, s6
 801e5e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e5e4:	9313      	str	r3, [sp, #76]	; 0x4c
 801e5e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5ec:	9a03      	ldr	r2, [sp, #12]
 801e5ee:	9314      	str	r3, [sp, #80]	; 0x50
 801e5f0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e5f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5f6:	eeb0 3a67 	vmov.f32	s6, s15
 801e5fa:	bf08      	it	eq
 801e5fc:	4613      	moveq	r3, r2
 801e5fe:	eef0 2a47 	vmov.f32	s5, s14
 801e602:	e789      	b.n	801e518 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e604:	1405      	asrs	r5, r0, #16
 801e606:	d435      	bmi.n	801e674 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e608:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e60c:	42aa      	cmp	r2, r5
 801e60e:	dd31      	ble.n	801e674 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e610:	140e      	asrs	r6, r1, #16
 801e612:	d42f      	bmi.n	801e674 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e614:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e618:	42b2      	cmp	r2, r6
 801e61a:	dd2b      	ble.n	801e674 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e61c:	9a00      	ldr	r2, [sp, #0]
 801e61e:	fb06 5502 	mla	r5, r6, r2, r5
 801e622:	086a      	lsrs	r2, r5, #1
 801e624:	9e01      	ldr	r6, [sp, #4]
 801e626:	5cb2      	ldrb	r2, [r6, r2]
 801e628:	07ee      	lsls	r6, r5, #31
 801e62a:	bf54      	ite	pl
 801e62c:	f002 020f 	andpl.w	r2, r2, #15
 801e630:	1112      	asrmi	r2, r2, #4
 801e632:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e636:	b2d2      	uxtb	r2, r2
 801e638:	b1e2      	cbz	r2, 801e674 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e63a:	9d04      	ldr	r5, [sp, #16]
 801e63c:	436a      	muls	r2, r5
 801e63e:	1c55      	adds	r5, r2, #1
 801e640:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e644:	4d6e      	ldr	r5, [pc, #440]	; (801e800 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e646:	682d      	ldr	r5, [r5, #0]
 801e648:	1212      	asrs	r2, r2, #8
 801e64a:	0a2e      	lsrs	r6, r5, #8
 801e64c:	2aff      	cmp	r2, #255	; 0xff
 801e64e:	9605      	str	r6, [sp, #20]
 801e650:	d116      	bne.n	801e680 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e652:	f06f 0201 	mvn.w	r2, #1
 801e656:	fb02 fc07 	mul.w	ip, r2, r7
 801e65a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e65e:	096a      	lsrs	r2, r5, #5
 801e660:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e664:	f026 0607 	bic.w	r6, r6, #7
 801e668:	4316      	orrs	r6, r2
 801e66a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e66e:	432e      	orrs	r6, r5
 801e670:	f824 600c 	strh.w	r6, [r4, ip]
 801e674:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e676:	4410      	add	r0, r2
 801e678:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e67a:	3f01      	subs	r7, #1
 801e67c:	4411      	add	r1, r2
 801e67e:	e77f      	b.n	801e580 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801e680:	f06f 0601 	mvn.w	r6, #1
 801e684:	437e      	muls	r6, r7
 801e686:	fa1f fa82 	uxth.w	sl, r2
 801e68a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801e68e:	9602      	str	r6, [sp, #8]
 801e690:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e694:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801e698:	43d2      	mvns	r2, r2
 801e69a:	b2d2      	uxtb	r2, r2
 801e69c:	fb1c fc0a 	smulbb	ip, ip, sl
 801e6a0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e6a4:	fb0e ce02 	mla	lr, lr, r2, ip
 801e6a8:	b2ed      	uxtb	r5, r5
 801e6aa:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e6ae:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e6b2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e6b6:	fa5f f888 	uxtb.w	r8, r8
 801e6ba:	fb15 f50a 	smulbb	r5, r5, sl
 801e6be:	fb08 5502 	mla	r5, r8, r2, r5
 801e6c2:	fa1f fe8e 	uxth.w	lr, lr
 801e6c6:	fb16 f60a 	smulbb	r6, r6, sl
 801e6ca:	b2ad      	uxth	r5, r5
 801e6cc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e6d0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e6d4:	f10e 0201 	add.w	r2, lr, #1
 801e6d8:	1c6e      	adds	r6, r5, #1
 801e6da:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e6de:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801e6e2:	fa1f fc8c 	uxth.w	ip, ip
 801e6e6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e6ea:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e6ee:	ea46 0e0e 	orr.w	lr, r6, lr
 801e6f2:	f10c 0601 	add.w	r6, ip, #1
 801e6f6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e6fa:	0976      	lsrs	r6, r6, #5
 801e6fc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e700:	9a02      	ldr	r2, [sp, #8]
 801e702:	ea4e 0e06 	orr.w	lr, lr, r6
 801e706:	f824 e002 	strh.w	lr, [r4, r2]
 801e70a:	e7b3      	b.n	801e674 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e70c:	f04f 0800 	mov.w	r8, #0
 801e710:	eba3 0208 	sub.w	r2, r3, r8
 801e714:	2a00      	cmp	r2, #0
 801e716:	f77f af36 	ble.w	801e586 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e71a:	9e00      	ldr	r6, [sp, #0]
 801e71c:	1402      	asrs	r2, r0, #16
 801e71e:	140d      	asrs	r5, r1, #16
 801e720:	fb06 2505 	mla	r5, r6, r5, r2
 801e724:	086a      	lsrs	r2, r5, #1
 801e726:	9e01      	ldr	r6, [sp, #4]
 801e728:	5cb2      	ldrb	r2, [r6, r2]
 801e72a:	07ed      	lsls	r5, r5, #31
 801e72c:	bf54      	ite	pl
 801e72e:	f002 020f 	andpl.w	r2, r2, #15
 801e732:	1112      	asrmi	r2, r2, #4
 801e734:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e738:	b2d2      	uxtb	r2, r2
 801e73a:	b1c2      	cbz	r2, 801e76e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e73c:	9d04      	ldr	r5, [sp, #16]
 801e73e:	436a      	muls	r2, r5
 801e740:	1c55      	adds	r5, r2, #1
 801e742:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e746:	4d2e      	ldr	r5, [pc, #184]	; (801e800 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e748:	1212      	asrs	r2, r2, #8
 801e74a:	682e      	ldr	r6, [r5, #0]
 801e74c:	2aff      	cmp	r2, #255	; 0xff
 801e74e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801e752:	d113      	bne.n	801e77c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801e754:	0972      	lsrs	r2, r6, #5
 801e756:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e75a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e75e:	f025 0507 	bic.w	r5, r5, #7
 801e762:	4315      	orrs	r5, r2
 801e764:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e768:	4335      	orrs	r5, r6
 801e76a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801e76e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e770:	4410      	add	r0, r2
 801e772:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e774:	f108 0801 	add.w	r8, r8, #1
 801e778:	4411      	add	r1, r2
 801e77a:	e7c9      	b.n	801e710 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e77c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801e780:	fa1f fa82 	uxth.w	sl, r2
 801e784:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e788:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801e78c:	43d2      	mvns	r2, r2
 801e78e:	b2d2      	uxtb	r2, r2
 801e790:	fb17 f70a 	smulbb	r7, r7, sl
 801e794:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e798:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e79c:	b2f6      	uxtb	r6, r6
 801e79e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e7a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e7a6:	fa5f fe8e 	uxtb.w	lr, lr
 801e7aa:	fb16 f60a 	smulbb	r6, r6, sl
 801e7ae:	fb0e 6602 	mla	r6, lr, r2, r6
 801e7b2:	b2ed      	uxtb	r5, r5
 801e7b4:	fa1f fc8c 	uxth.w	ip, ip
 801e7b8:	fb15 f50a 	smulbb	r5, r5, sl
 801e7bc:	b2b6      	uxth	r6, r6
 801e7be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e7c2:	fb07 5702 	mla	r7, r7, r2, r5
 801e7c6:	f10c 0201 	add.w	r2, ip, #1
 801e7ca:	1c75      	adds	r5, r6, #1
 801e7cc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e7d0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e7d4:	b2bf      	uxth	r7, r7
 801e7d6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e7da:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e7de:	ea45 0c0c 	orr.w	ip, r5, ip
 801e7e2:	1c7d      	adds	r5, r7, #1
 801e7e4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801e7e8:	096d      	lsrs	r5, r5, #5
 801e7ea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e7ee:	ea4c 0c05 	orr.w	ip, ip, r5
 801e7f2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801e7f6:	e7ba      	b.n	801e76e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e7f8:	b007      	add	sp, #28
 801e7fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7fe:	bf00      	nop
 801e800:	2001384c 	.word	0x2001384c

0801e804 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e808:	b087      	sub	sp, #28
 801e80a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801eb18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801e80e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e810:	9205      	str	r2, [sp, #20]
 801e812:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e816:	9101      	str	r1, [sp, #4]
 801e818:	6841      	ldr	r1, [r0, #4]
 801e81a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801e81e:	fb01 2404 	mla	r4, r1, r4, r2
 801e822:	6802      	ldr	r2, [r0, #0]
 801e824:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e828:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e82c:	3201      	adds	r2, #1
 801e82e:	f022 0201 	bic.w	r2, r2, #1
 801e832:	9202      	str	r2, [sp, #8]
 801e834:	f8db 2000 	ldr.w	r2, [fp]
 801e838:	9203      	str	r2, [sp, #12]
 801e83a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e83e:	9a01      	ldr	r2, [sp, #4]
 801e840:	2a00      	cmp	r2, #0
 801e842:	dc03      	bgt.n	801e84c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e844:	9a05      	ldr	r2, [sp, #20]
 801e846:	2a00      	cmp	r2, #0
 801e848:	f340 8162 	ble.w	801eb10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e84c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e84e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801e852:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801e856:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e85a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e85c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e860:	2b00      	cmp	r3, #0
 801e862:	dd0e      	ble.n	801e882 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e864:	1402      	asrs	r2, r0, #16
 801e866:	d405      	bmi.n	801e874 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e868:	42ba      	cmp	r2, r7
 801e86a:	da03      	bge.n	801e874 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e86c:	140a      	asrs	r2, r1, #16
 801e86e:	d401      	bmi.n	801e874 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e870:	42b2      	cmp	r2, r6
 801e872:	db07      	blt.n	801e884 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e874:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e876:	4410      	add	r0, r2
 801e878:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e87a:	3b01      	subs	r3, #1
 801e87c:	4411      	add	r1, r2
 801e87e:	3402      	adds	r4, #2
 801e880:	e7ee      	b.n	801e860 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801e882:	d017      	beq.n	801e8b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801e884:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e886:	1e5a      	subs	r2, r3, #1
 801e888:	fb05 0502 	mla	r5, r5, r2, r0
 801e88c:	142d      	asrs	r5, r5, #16
 801e88e:	d409      	bmi.n	801e8a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e890:	42bd      	cmp	r5, r7
 801e892:	da07      	bge.n	801e8a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e894:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e896:	fb05 1202 	mla	r2, r5, r2, r1
 801e89a:	1412      	asrs	r2, r2, #16
 801e89c:	d402      	bmi.n	801e8a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e89e:	42b2      	cmp	r2, r6
 801e8a0:	f2c0 80c3 	blt.w	801ea2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801e8a4:	2500      	movs	r5, #0
 801e8a6:	195a      	adds	r2, r3, r5
 801e8a8:	2a00      	cmp	r2, #0
 801e8aa:	dc3f      	bgt.n	801e92c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e8ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e8b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e8b4:	9b01      	ldr	r3, [sp, #4]
 801e8b6:	2b00      	cmp	r3, #0
 801e8b8:	f340 812a 	ble.w	801eb10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e8bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e8c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e8c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e8c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e8ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e8ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e8d2:	eeb0 6a62 	vmov.f32	s12, s5
 801e8d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e8da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e8de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e8e2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e8e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e8ea:	eeb0 6a43 	vmov.f32	s12, s6
 801e8ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e8f2:	ee12 2a90 	vmov	r2, s5
 801e8f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e8fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8fe:	ee13 2a10 	vmov	r2, s6
 801e902:	9313      	str	r3, [sp, #76]	; 0x4c
 801e904:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e906:	fb92 f3f3 	sdiv	r3, r2, r3
 801e90a:	9314      	str	r3, [sp, #80]	; 0x50
 801e90c:	9b01      	ldr	r3, [sp, #4]
 801e90e:	9a05      	ldr	r2, [sp, #20]
 801e910:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e914:	3b01      	subs	r3, #1
 801e916:	9301      	str	r3, [sp, #4]
 801e918:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e91c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e91e:	eeb0 3a67 	vmov.f32	s6, s15
 801e922:	bf08      	it	eq
 801e924:	4613      	moveq	r3, r2
 801e926:	eef0 2a47 	vmov.f32	s5, s14
 801e92a:	e788      	b.n	801e83e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e92c:	1406      	asrs	r6, r0, #16
 801e92e:	d42c      	bmi.n	801e98a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e930:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e934:	42b2      	cmp	r2, r6
 801e936:	dd28      	ble.n	801e98a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e938:	140f      	asrs	r7, r1, #16
 801e93a:	d426      	bmi.n	801e98a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e93c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801e940:	42ba      	cmp	r2, r7
 801e942:	dd22      	ble.n	801e98a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e944:	9a02      	ldr	r2, [sp, #8]
 801e946:	fb07 6602 	mla	r6, r7, r2, r6
 801e94a:	0872      	lsrs	r2, r6, #1
 801e94c:	9f03      	ldr	r7, [sp, #12]
 801e94e:	5cba      	ldrb	r2, [r7, r2]
 801e950:	07f6      	lsls	r6, r6, #31
 801e952:	bf54      	ite	pl
 801e954:	f002 020f 	andpl.w	r2, r2, #15
 801e958:	1112      	asrmi	r2, r2, #4
 801e95a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e95e:	b2d2      	uxtb	r2, r2
 801e960:	2aff      	cmp	r2, #255	; 0xff
 801e962:	d118      	bne.n	801e996 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801e964:	f8d8 2000 	ldr.w	r2, [r8]
 801e968:	f06f 0601 	mvn.w	r6, #1
 801e96c:	fb06 f705 	mul.w	r7, r6, r5
 801e970:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801e974:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801e978:	0956      	lsrs	r6, r2, #5
 801e97a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e97e:	ea4c 0606 	orr.w	r6, ip, r6
 801e982:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e986:	4316      	orrs	r6, r2
 801e988:	53e6      	strh	r6, [r4, r7]
 801e98a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e98c:	4410      	add	r0, r2
 801e98e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e990:	3d01      	subs	r5, #1
 801e992:	4411      	add	r1, r2
 801e994:	e787      	b.n	801e8a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e996:	2a00      	cmp	r2, #0
 801e998:	d0f7      	beq.n	801e98a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e99a:	f06f 0601 	mvn.w	r6, #1
 801e99e:	436e      	muls	r6, r5
 801e9a0:	f8d8 c000 	ldr.w	ip, [r8]
 801e9a4:	f834 e006 	ldrh.w	lr, [r4, r6]
 801e9a8:	9604      	str	r6, [sp, #16]
 801e9aa:	fa1f f982 	uxth.w	r9, r2
 801e9ae:	ea4f 272e 	mov.w	r7, lr, asr #8
 801e9b2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801e9b6:	43d2      	mvns	r2, r2
 801e9b8:	b2d2      	uxtb	r2, r2
 801e9ba:	fb16 f609 	smulbb	r6, r6, r9
 801e9be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e9c2:	fb07 6702 	mla	r7, r7, r2, r6
 801e9c6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801e9ca:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e9ce:	fa5f fc8c 	uxtb.w	ip, ip
 801e9d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e9d6:	fa5f fe8e 	uxtb.w	lr, lr
 801e9da:	fb1c fc09 	smulbb	ip, ip, r9
 801e9de:	fb0e cc02 	mla	ip, lr, r2, ip
 801e9e2:	b2bf      	uxth	r7, r7
 801e9e4:	fb1a fa09 	smulbb	sl, sl, r9
 801e9e8:	fa1f fc8c 	uxth.w	ip, ip
 801e9ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e9f0:	fb06 a602 	mla	r6, r6, r2, sl
 801e9f4:	1c7a      	adds	r2, r7, #1
 801e9f6:	f10c 0a01 	add.w	sl, ip, #1
 801e9fa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e9fe:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ea02:	b2b6      	uxth	r6, r6
 801ea04:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ea08:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ea0c:	ea4a 0707 	orr.w	r7, sl, r7
 801ea10:	f106 0a01 	add.w	sl, r6, #1
 801ea14:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ea18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ea1c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ea20:	9a04      	ldr	r2, [sp, #16]
 801ea22:	ea47 070a 	orr.w	r7, r7, sl
 801ea26:	52a7      	strh	r7, [r4, r2]
 801ea28:	e7af      	b.n	801e98a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea2a:	f04f 0e00 	mov.w	lr, #0
 801ea2e:	eba3 020e 	sub.w	r2, r3, lr
 801ea32:	2a00      	cmp	r2, #0
 801ea34:	f77f af3a 	ble.w	801e8ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ea38:	9e02      	ldr	r6, [sp, #8]
 801ea3a:	1402      	asrs	r2, r0, #16
 801ea3c:	140d      	asrs	r5, r1, #16
 801ea3e:	fb06 2505 	mla	r5, r6, r5, r2
 801ea42:	086a      	lsrs	r2, r5, #1
 801ea44:	9e03      	ldr	r6, [sp, #12]
 801ea46:	5cb2      	ldrb	r2, [r6, r2]
 801ea48:	07ed      	lsls	r5, r5, #31
 801ea4a:	bf54      	ite	pl
 801ea4c:	f002 020f 	andpl.w	r2, r2, #15
 801ea50:	1112      	asrmi	r2, r2, #4
 801ea52:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ea56:	b2d2      	uxtb	r2, r2
 801ea58:	2aff      	cmp	r2, #255	; 0xff
 801ea5a:	d115      	bne.n	801ea88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ea5c:	f8d8 5000 	ldr.w	r5, [r8]
 801ea60:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ea64:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ea68:	096a      	lsrs	r2, r5, #5
 801ea6a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea6e:	4332      	orrs	r2, r6
 801ea70:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ea74:	432a      	orrs	r2, r5
 801ea76:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ea7a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea7c:	4410      	add	r0, r2
 801ea7e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea80:	f10e 0e01 	add.w	lr, lr, #1
 801ea84:	4411      	add	r1, r2
 801ea86:	e7d2      	b.n	801ea2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ea88:	2a00      	cmp	r2, #0
 801ea8a:	d0f6      	beq.n	801ea7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ea8c:	f8d8 7000 	ldr.w	r7, [r8]
 801ea90:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ea94:	fa1f f982 	uxth.w	r9, r2
 801ea98:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ea9c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801eaa0:	43d2      	mvns	r2, r2
 801eaa2:	b2d2      	uxtb	r2, r2
 801eaa4:	fb15 f509 	smulbb	r5, r5, r9
 801eaa8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801eaac:	fb06 5602 	mla	r6, r6, r2, r5
 801eab0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801eab4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801eab8:	b2ff      	uxtb	r7, r7
 801eaba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801eabe:	fa5f fc8c 	uxtb.w	ip, ip
 801eac2:	fb17 f709 	smulbb	r7, r7, r9
 801eac6:	fb0c 7702 	mla	r7, ip, r2, r7
 801eaca:	b2b6      	uxth	r6, r6
 801eacc:	fb1a fa09 	smulbb	sl, sl, r9
 801ead0:	b2bf      	uxth	r7, r7
 801ead2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ead6:	fb05 a502 	mla	r5, r5, r2, sl
 801eada:	1c72      	adds	r2, r6, #1
 801eadc:	f107 0a01 	add.w	sl, r7, #1
 801eae0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801eae4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801eae8:	b2ad      	uxth	r5, r5
 801eaea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eaee:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801eaf2:	ea4a 0606 	orr.w	r6, sl, r6
 801eaf6:	f105 0a01 	add.w	sl, r5, #1
 801eafa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801eafe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eb02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eb06:	ea46 060a 	orr.w	r6, r6, sl
 801eb0a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801eb0e:	e7b4      	b.n	801ea7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801eb10:	b007      	add	sp, #28
 801eb12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb16:	bf00      	nop
 801eb18:	2001384c 	.word	0x2001384c

0801eb1c <_ZN8touchgfx8LCD16bppD1Ev>:
 801eb1c:	4770      	bx	lr

0801eb1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801eb1e:	4770      	bx	lr

0801eb20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801eb20:	4770      	bx	lr

0801eb22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801eb22:	4770      	bx	lr

0801eb24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801eb24:	4770      	bx	lr

0801eb26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801eb26:	4770      	bx	lr

0801eb28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801eb28:	4770      	bx	lr

0801eb2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801eb2a:	4770      	bx	lr

0801eb2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb2c:	4770      	bx	lr

0801eb2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb2e:	4770      	bx	lr

0801eb30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb30:	4770      	bx	lr

0801eb32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb32:	4770      	bx	lr

0801eb34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb34:	4770      	bx	lr

0801eb36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb36:	4770      	bx	lr

0801eb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb38:	4770      	bx	lr

0801eb3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb3a:	4770      	bx	lr

0801eb3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb3c:	4770      	bx	lr

0801eb3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801eb3e:	4770      	bx	lr

0801eb40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb40:	4770      	bx	lr

0801eb42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb42:	4770      	bx	lr

0801eb44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb44:	4770      	bx	lr

0801eb46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb46:	4770      	bx	lr

0801eb48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb48:	4770      	bx	lr

0801eb4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb4a:	4770      	bx	lr

0801eb4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb4c:	4770      	bx	lr

0801eb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb4e:	4770      	bx	lr

0801eb50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb50:	4770      	bx	lr

0801eb52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801eb52:	4770      	bx	lr

0801eb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb54:	4770      	bx	lr

0801eb56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb56:	4770      	bx	lr

0801eb58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb58:	4770      	bx	lr

0801eb5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801eb5a:	4770      	bx	lr

0801eb5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801eb5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eb60:	b088      	sub	sp, #32
 801eb62:	ac08      	add	r4, sp, #32
 801eb64:	4606      	mov	r6, r0
 801eb66:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801eb6a:	4620      	mov	r0, r4
 801eb6c:	4688      	mov	r8, r1
 801eb6e:	4691      	mov	r9, r2
 801eb70:	f7fd fc62 	bl	801c438 <_ZNK8touchgfx6Bitmap7getDataEv>
 801eb74:	6833      	ldr	r3, [r6, #0]
 801eb76:	4605      	mov	r5, r0
 801eb78:	4620      	mov	r0, r4
 801eb7a:	699f      	ldr	r7, [r3, #24]
 801eb7c:	f7fd fb70 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801eb80:	4682      	mov	sl, r0
 801eb82:	4620      	mov	r0, r4
 801eb84:	f7fd fba0 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801eb88:	9500      	str	r5, [sp, #0]
 801eb8a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801eb8e:	464b      	mov	r3, r9
 801eb90:	a806      	add	r0, sp, #24
 801eb92:	4642      	mov	r2, r8
 801eb94:	4631      	mov	r1, r6
 801eb96:	47b8      	blx	r7
 801eb98:	4628      	mov	r0, r5
 801eb9a:	b008      	add	sp, #32
 801eb9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801eba0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801eba0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801eba4:	2300      	movs	r3, #0
 801eba6:	9300      	str	r3, [sp, #0]
 801eba8:	4b3d      	ldr	r3, [pc, #244]	; (801eca0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ebaa:	781b      	ldrb	r3, [r3, #0]
 801ebac:	2b00      	cmp	r3, #0
 801ebae:	d137      	bne.n	801ec20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ebb0:	4a3c      	ldr	r2, [pc, #240]	; (801eca4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ebb2:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ebb6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ebba:	2b00      	cmp	r3, #0
 801ebbc:	d132      	bne.n	801ec24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ebbe:	4b3a      	ldr	r3, [pc, #232]	; (801eca8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ebc0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ebc4:	6808      	ldr	r0, [r1, #0]
 801ebc6:	6849      	ldr	r1, [r1, #4]
 801ebc8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ebcc:	ac02      	add	r4, sp, #8
 801ebce:	ab02      	add	r3, sp, #8
 801ebd0:	c303      	stmia	r3!, {r0, r1}
 801ebd2:	4669      	mov	r1, sp
 801ebd4:	4620      	mov	r0, r4
 801ebd6:	f7f9 fd83 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ebda:	4668      	mov	r0, sp
 801ebdc:	f7f9 fd3c 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ebe0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ebe4:	f8bd 2000 	ldrh.w	r2, [sp]
 801ebe8:	4d30      	ldr	r5, [pc, #192]	; (801ecac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ebea:	4413      	add	r3, r2
 801ebec:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ebf0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ebf4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ebf8:	6828      	ldr	r0, [r5, #0]
 801ebfa:	4413      	add	r3, r2
 801ebfc:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ec00:	6803      	ldr	r3, [r0, #0]
 801ec02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ec04:	4798      	blx	r3
 801ec06:	f010 0f01 	tst.w	r0, #1
 801ec0a:	462f      	mov	r7, r5
 801ec0c:	d00c      	beq.n	801ec28 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ec0e:	6828      	ldr	r0, [r5, #0]
 801ec10:	6803      	ldr	r3, [r0, #0]
 801ec12:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ec16:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ec18:	4798      	blx	r3
 801ec1a:	b004      	add	sp, #16
 801ec1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ec20:	4a21      	ldr	r2, [pc, #132]	; (801eca8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ec22:	e7c6      	b.n	801ebb2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ec24:	4b1f      	ldr	r3, [pc, #124]	; (801eca4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ec26:	e7cb      	b.n	801ebc0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ec28:	6838      	ldr	r0, [r7, #0]
 801ec2a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ec2e:	6803      	ldr	r3, [r0, #0]
 801ec30:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ec34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ec36:	4798      	blx	r3
 801ec38:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ec3c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ec40:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ec44:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ec48:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ec4c:	6838      	ldr	r0, [r7, #0]
 801ec4e:	6803      	ldr	r3, [r0, #0]
 801ec50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ec52:	4798      	blx	r3
 801ec54:	4a13      	ldr	r2, [pc, #76]	; (801eca4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ec56:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ec5a:	8813      	ldrh	r3, [r2, #0]
 801ec5c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ec60:	fb03 1404 	mla	r4, r3, r4, r1
 801ec64:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ec68:	435d      	muls	r5, r3
 801ec6a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ec6e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ec72:	4691      	mov	r9, r2
 801ec74:	6838      	ldr	r0, [r7, #0]
 801ec76:	42ac      	cmp	r4, r5
 801ec78:	6803      	ldr	r3, [r0, #0]
 801ec7a:	d20e      	bcs.n	801ec9a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ec7c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ec80:	4632      	mov	r2, r6
 801ec82:	4643      	mov	r3, r8
 801ec84:	4621      	mov	r1, r4
 801ec86:	47d0      	blx	sl
 801ec88:	f8b9 3000 	ldrh.w	r3, [r9]
 801ec8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ec90:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ec94:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ec98:	e7ec      	b.n	801ec74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ec9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ec9c:	4798      	blx	r3
 801ec9e:	e7bc      	b.n	801ec1a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801eca0:	20013834 	.word	0x20013834
 801eca4:	20013836 	.word	0x20013836
 801eca8:	20013838 	.word	0x20013838
 801ecac:	2001383c 	.word	0x2001383c

0801ecb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801ecb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecb4:	b08b      	sub	sp, #44	; 0x2c
 801ecb6:	460f      	mov	r7, r1
 801ecb8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ecbc:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ecc0:	4616      	mov	r6, r2
 801ecc2:	f1bb 0f00 	cmp.w	fp, #0
 801ecc6:	d04a      	beq.n	801ed5e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ecc8:	6810      	ldr	r0, [r2, #0]
 801ecca:	6851      	ldr	r1, [r2, #4]
 801eccc:	ad06      	add	r5, sp, #24
 801ecce:	c503      	stmia	r5!, {r0, r1}
 801ecd0:	6818      	ldr	r0, [r3, #0]
 801ecd2:	6859      	ldr	r1, [r3, #4]
 801ecd4:	ad08      	add	r5, sp, #32
 801ecd6:	c503      	stmia	r5!, {r0, r1}
 801ecd8:	a806      	add	r0, sp, #24
 801ecda:	f7f9 fcbd 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ecde:	4631      	mov	r1, r6
 801ece0:	a808      	add	r0, sp, #32
 801ece2:	f7f9 fcfd 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ece6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ecea:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ecee:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801ecf2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801ecf6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801ecfa:	fb16 2103 	smlabb	r1, r6, r3, r2
 801ecfe:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801ed02:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ed06:	4f5f      	ldr	r7, [pc, #380]	; (801ee84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ed08:	440a      	add	r2, r1
 801ed0a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ed0e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ed12:	6838      	ldr	r0, [r7, #0]
 801ed14:	4413      	add	r3, r2
 801ed16:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ed1a:	6803      	ldr	r3, [r0, #0]
 801ed1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ed1e:	4798      	blx	r3
 801ed20:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ed24:	46b9      	mov	r9, r7
 801ed26:	d11d      	bne.n	801ed64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ed28:	b9fc      	cbnz	r4, 801ed6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ed2a:	f010 0f01 	tst.w	r0, #1
 801ed2e:	d01c      	beq.n	801ed6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ed30:	f8d9 0000 	ldr.w	r0, [r9]
 801ed34:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ed38:	6801      	ldr	r1, [r0, #0]
 801ed3a:	f8cd b00c 	str.w	fp, [sp, #12]
 801ed3e:	2700      	movs	r7, #0
 801ed40:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ed44:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ed48:	9402      	str	r4, [sp, #8]
 801ed4a:	b2ad      	uxth	r5, r5
 801ed4c:	fa1f f488 	uxth.w	r4, r8
 801ed50:	9501      	str	r5, [sp, #4]
 801ed52:	9400      	str	r4, [sp, #0]
 801ed54:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ed56:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ed5a:	4631      	mov	r1, r6
 801ed5c:	47a0      	blx	r4
 801ed5e:	b00b      	add	sp, #44	; 0x2c
 801ed60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed64:	f010 0f04 	tst.w	r0, #4
 801ed68:	e7e1      	b.n	801ed2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ed6a:	f8d9 0000 	ldr.w	r0, [r9]
 801ed6e:	6803      	ldr	r3, [r0, #0]
 801ed70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed72:	4798      	blx	r3
 801ed74:	4b44      	ldr	r3, [pc, #272]	; (801ee88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ed76:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ed7a:	881a      	ldrh	r2, [r3, #0]
 801ed7c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ed80:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ed84:	fb02 1404 	mla	r4, r2, r4, r1
 801ed88:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ed8c:	469a      	mov	sl, r3
 801ed8e:	fb05 f502 	mul.w	r5, r5, r2
 801ed92:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ed96:	d059      	beq.n	801ee4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ed98:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ed9c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801eda0:	fa1f f28b 	uxth.w	r2, fp
 801eda4:	fa1f f989 	uxth.w	r9, r9
 801eda8:	469e      	mov	lr, r3
 801edaa:	42ac      	cmp	r4, r5
 801edac:	d264      	bcs.n	801ee78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801edae:	eb04 0a07 	add.w	sl, r4, r7
 801edb2:	4554      	cmp	r4, sl
 801edb4:	d23d      	bcs.n	801ee32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801edb6:	8821      	ldrh	r1, [r4, #0]
 801edb8:	f836 3b02 	ldrh.w	r3, [r6], #2
 801edbc:	1208      	asrs	r0, r1, #8
 801edbe:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801edc2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801edc6:	fb10 f009 	smulbb	r0, r0, r9
 801edca:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801edce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801edd2:	00c9      	lsls	r1, r1, #3
 801edd4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801edd8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801eddc:	10d8      	asrs	r0, r3, #3
 801edde:	b2c9      	uxtb	r1, r1
 801ede0:	00db      	lsls	r3, r3, #3
 801ede2:	fa1f fc8c 	uxth.w	ip, ip
 801ede6:	fb1b fb09 	smulbb	fp, fp, r9
 801edea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801edee:	b2db      	uxtb	r3, r3
 801edf0:	fb11 f109 	smulbb	r1, r1, r9
 801edf4:	fb00 b002 	mla	r0, r0, r2, fp
 801edf8:	fb03 1302 	mla	r3, r3, r2, r1
 801edfc:	f10c 0b01 	add.w	fp, ip, #1
 801ee00:	b29b      	uxth	r3, r3
 801ee02:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801ee06:	b280      	uxth	r0, r0
 801ee08:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801ee0c:	f103 0c01 	add.w	ip, r3, #1
 801ee10:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ee14:	1c43      	adds	r3, r0, #1
 801ee16:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ee1a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ee1e:	0940      	lsrs	r0, r0, #5
 801ee20:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ee24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ee28:	ea4c 0c00 	orr.w	ip, ip, r0
 801ee2c:	f824 cb02 	strh.w	ip, [r4], #2
 801ee30:	e7bf      	b.n	801edb2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ee32:	f8be 3000 	ldrh.w	r3, [lr]
 801ee36:	eba3 0308 	sub.w	r3, r3, r8
 801ee3a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ee3e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ee42:	eba3 0308 	sub.w	r3, r3, r8
 801ee46:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ee4a:	e7ae      	b.n	801edaa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ee4c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ee50:	f8d9 0000 	ldr.w	r0, [r9]
 801ee54:	42ac      	cmp	r4, r5
 801ee56:	6803      	ldr	r3, [r0, #0]
 801ee58:	d20e      	bcs.n	801ee78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ee5a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ee5e:	4632      	mov	r2, r6
 801ee60:	463b      	mov	r3, r7
 801ee62:	4621      	mov	r1, r4
 801ee64:	47c0      	blx	r8
 801ee66:	f8ba 3000 	ldrh.w	r3, [sl]
 801ee6a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ee6e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ee72:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ee76:	e7eb      	b.n	801ee50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ee78:	4b02      	ldr	r3, [pc, #8]	; (801ee84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ee7a:	6818      	ldr	r0, [r3, #0]
 801ee7c:	6803      	ldr	r3, [r0, #0]
 801ee7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ee80:	4798      	blx	r3
 801ee82:	e76c      	b.n	801ed5e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ee84:	2001383c 	.word	0x2001383c
 801ee88:	20013836 	.word	0x20013836

0801ee8c <_ZN8touchgfx8LCD16bppD0Ev>:
 801ee8c:	b510      	push	{r4, lr}
 801ee8e:	2184      	movs	r1, #132	; 0x84
 801ee90:	4604      	mov	r4, r0
 801ee92:	f00d fe7e 	bl	802cb92 <_ZdlPvj>
 801ee96:	4620      	mov	r0, r4
 801ee98:	bd10      	pop	{r4, pc}

0801ee9a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ee9a:	b510      	push	{r4, lr}
 801ee9c:	2104      	movs	r1, #4
 801ee9e:	4604      	mov	r4, r0
 801eea0:	f00d fe77 	bl	802cb92 <_ZdlPvj>
 801eea4:	4620      	mov	r0, r4
 801eea6:	bd10      	pop	{r4, pc}

0801eea8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801eea8:	b510      	push	{r4, lr}
 801eeaa:	2104      	movs	r1, #4
 801eeac:	4604      	mov	r4, r0
 801eeae:	f00d fe70 	bl	802cb92 <_ZdlPvj>
 801eeb2:	4620      	mov	r0, r4
 801eeb4:	bd10      	pop	{r4, pc}

0801eeb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801eeb6:	b510      	push	{r4, lr}
 801eeb8:	f640 0144 	movw	r1, #2116	; 0x844
 801eebc:	4604      	mov	r4, r0
 801eebe:	f00d fe68 	bl	802cb92 <_ZdlPvj>
 801eec2:	4620      	mov	r0, r4
 801eec4:	bd10      	pop	{r4, pc}

0801eec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801eec6:	b510      	push	{r4, lr}
 801eec8:	2104      	movs	r1, #4
 801eeca:	4604      	mov	r4, r0
 801eecc:	f00d fe61 	bl	802cb92 <_ZdlPvj>
 801eed0:	4620      	mov	r0, r4
 801eed2:	bd10      	pop	{r4, pc}

0801eed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801eed4:	b510      	push	{r4, lr}
 801eed6:	2104      	movs	r1, #4
 801eed8:	4604      	mov	r4, r0
 801eeda:	f00d fe5a 	bl	802cb92 <_ZdlPvj>
 801eede:	4620      	mov	r0, r4
 801eee0:	bd10      	pop	{r4, pc}

0801eee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801eee2:	b510      	push	{r4, lr}
 801eee4:	2104      	movs	r1, #4
 801eee6:	4604      	mov	r4, r0
 801eee8:	f00d fe53 	bl	802cb92 <_ZdlPvj>
 801eeec:	4620      	mov	r0, r4
 801eeee:	bd10      	pop	{r4, pc}

0801eef0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801eef0:	b510      	push	{r4, lr}
 801eef2:	2104      	movs	r1, #4
 801eef4:	4604      	mov	r4, r0
 801eef6:	f00d fe4c 	bl	802cb92 <_ZdlPvj>
 801eefa:	4620      	mov	r0, r4
 801eefc:	bd10      	pop	{r4, pc}

0801eefe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801eefe:	b510      	push	{r4, lr}
 801ef00:	2104      	movs	r1, #4
 801ef02:	4604      	mov	r4, r0
 801ef04:	f00d fe45 	bl	802cb92 <_ZdlPvj>
 801ef08:	4620      	mov	r0, r4
 801ef0a:	bd10      	pop	{r4, pc}

0801ef0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801ef0c:	b510      	push	{r4, lr}
 801ef0e:	2104      	movs	r1, #4
 801ef10:	4604      	mov	r4, r0
 801ef12:	f00d fe3e 	bl	802cb92 <_ZdlPvj>
 801ef16:	4620      	mov	r0, r4
 801ef18:	bd10      	pop	{r4, pc}

0801ef1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ef1a:	b510      	push	{r4, lr}
 801ef1c:	2104      	movs	r1, #4
 801ef1e:	4604      	mov	r4, r0
 801ef20:	f00d fe37 	bl	802cb92 <_ZdlPvj>
 801ef24:	4620      	mov	r0, r4
 801ef26:	bd10      	pop	{r4, pc}

0801ef28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801ef28:	b510      	push	{r4, lr}
 801ef2a:	2104      	movs	r1, #4
 801ef2c:	4604      	mov	r4, r0
 801ef2e:	f00d fe30 	bl	802cb92 <_ZdlPvj>
 801ef32:	4620      	mov	r0, r4
 801ef34:	bd10      	pop	{r4, pc}

0801ef36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ef36:	b510      	push	{r4, lr}
 801ef38:	2104      	movs	r1, #4
 801ef3a:	4604      	mov	r4, r0
 801ef3c:	f00d fe29 	bl	802cb92 <_ZdlPvj>
 801ef40:	4620      	mov	r0, r4
 801ef42:	bd10      	pop	{r4, pc}

0801ef44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ef44:	b510      	push	{r4, lr}
 801ef46:	2104      	movs	r1, #4
 801ef48:	4604      	mov	r4, r0
 801ef4a:	f00d fe22 	bl	802cb92 <_ZdlPvj>
 801ef4e:	4620      	mov	r0, r4
 801ef50:	bd10      	pop	{r4, pc}

0801ef52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ef52:	b510      	push	{r4, lr}
 801ef54:	2104      	movs	r1, #4
 801ef56:	4604      	mov	r4, r0
 801ef58:	f00d fe1b 	bl	802cb92 <_ZdlPvj>
 801ef5c:	4620      	mov	r0, r4
 801ef5e:	bd10      	pop	{r4, pc}

0801ef60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ef60:	b510      	push	{r4, lr}
 801ef62:	2104      	movs	r1, #4
 801ef64:	4604      	mov	r4, r0
 801ef66:	f00d fe14 	bl	802cb92 <_ZdlPvj>
 801ef6a:	4620      	mov	r0, r4
 801ef6c:	bd10      	pop	{r4, pc}

0801ef6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ef6e:	b510      	push	{r4, lr}
 801ef70:	2104      	movs	r1, #4
 801ef72:	4604      	mov	r4, r0
 801ef74:	f00d fe0d 	bl	802cb92 <_ZdlPvj>
 801ef78:	4620      	mov	r0, r4
 801ef7a:	bd10      	pop	{r4, pc}

0801ef7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ef7c:	b510      	push	{r4, lr}
 801ef7e:	2104      	movs	r1, #4
 801ef80:	4604      	mov	r4, r0
 801ef82:	f00d fe06 	bl	802cb92 <_ZdlPvj>
 801ef86:	4620      	mov	r0, r4
 801ef88:	bd10      	pop	{r4, pc}

0801ef8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ef8a:	b510      	push	{r4, lr}
 801ef8c:	2104      	movs	r1, #4
 801ef8e:	4604      	mov	r4, r0
 801ef90:	f00d fdff 	bl	802cb92 <_ZdlPvj>
 801ef94:	4620      	mov	r0, r4
 801ef96:	bd10      	pop	{r4, pc}

0801ef98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ef98:	b510      	push	{r4, lr}
 801ef9a:	2104      	movs	r1, #4
 801ef9c:	4604      	mov	r4, r0
 801ef9e:	f00d fdf8 	bl	802cb92 <_ZdlPvj>
 801efa2:	4620      	mov	r0, r4
 801efa4:	bd10      	pop	{r4, pc}

0801efa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801efa6:	b510      	push	{r4, lr}
 801efa8:	2104      	movs	r1, #4
 801efaa:	4604      	mov	r4, r0
 801efac:	f00d fdf1 	bl	802cb92 <_ZdlPvj>
 801efb0:	4620      	mov	r0, r4
 801efb2:	bd10      	pop	{r4, pc}

0801efb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801efb4:	b510      	push	{r4, lr}
 801efb6:	2104      	movs	r1, #4
 801efb8:	4604      	mov	r4, r0
 801efba:	f00d fdea 	bl	802cb92 <_ZdlPvj>
 801efbe:	4620      	mov	r0, r4
 801efc0:	bd10      	pop	{r4, pc}

0801efc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801efc2:	b510      	push	{r4, lr}
 801efc4:	2104      	movs	r1, #4
 801efc6:	4604      	mov	r4, r0
 801efc8:	f00d fde3 	bl	802cb92 <_ZdlPvj>
 801efcc:	4620      	mov	r0, r4
 801efce:	bd10      	pop	{r4, pc}

0801efd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801efd0:	b510      	push	{r4, lr}
 801efd2:	2104      	movs	r1, #4
 801efd4:	4604      	mov	r4, r0
 801efd6:	f00d fddc 	bl	802cb92 <_ZdlPvj>
 801efda:	4620      	mov	r0, r4
 801efdc:	bd10      	pop	{r4, pc}

0801efde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801efde:	b510      	push	{r4, lr}
 801efe0:	2104      	movs	r1, #4
 801efe2:	4604      	mov	r4, r0
 801efe4:	f00d fdd5 	bl	802cb92 <_ZdlPvj>
 801efe8:	4620      	mov	r0, r4
 801efea:	bd10      	pop	{r4, pc}

0801efec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801efec:	b510      	push	{r4, lr}
 801efee:	2104      	movs	r1, #4
 801eff0:	4604      	mov	r4, r0
 801eff2:	f00d fdce 	bl	802cb92 <_ZdlPvj>
 801eff6:	4620      	mov	r0, r4
 801eff8:	bd10      	pop	{r4, pc}

0801effa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801effa:	b510      	push	{r4, lr}
 801effc:	2104      	movs	r1, #4
 801effe:	4604      	mov	r4, r0
 801f000:	f00d fdc7 	bl	802cb92 <_ZdlPvj>
 801f004:	4620      	mov	r0, r4
 801f006:	bd10      	pop	{r4, pc}

0801f008 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f008:	b510      	push	{r4, lr}
 801f00a:	2104      	movs	r1, #4
 801f00c:	4604      	mov	r4, r0
 801f00e:	f00d fdc0 	bl	802cb92 <_ZdlPvj>
 801f012:	4620      	mov	r0, r4
 801f014:	bd10      	pop	{r4, pc}

0801f016 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f016:	b510      	push	{r4, lr}
 801f018:	2104      	movs	r1, #4
 801f01a:	4604      	mov	r4, r0
 801f01c:	f00d fdb9 	bl	802cb92 <_ZdlPvj>
 801f020:	4620      	mov	r0, r4
 801f022:	bd10      	pop	{r4, pc}

0801f024 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f024:	b510      	push	{r4, lr}
 801f026:	2104      	movs	r1, #4
 801f028:	4604      	mov	r4, r0
 801f02a:	f00d fdb2 	bl	802cb92 <_ZdlPvj>
 801f02e:	4620      	mov	r0, r4
 801f030:	bd10      	pop	{r4, pc}

0801f032 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f032:	b510      	push	{r4, lr}
 801f034:	2104      	movs	r1, #4
 801f036:	4604      	mov	r4, r0
 801f038:	f00d fdab 	bl	802cb92 <_ZdlPvj>
 801f03c:	4620      	mov	r0, r4
 801f03e:	bd10      	pop	{r4, pc}

0801f040 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f040:	b510      	push	{r4, lr}
 801f042:	2104      	movs	r1, #4
 801f044:	4604      	mov	r4, r0
 801f046:	f00d fda4 	bl	802cb92 <_ZdlPvj>
 801f04a:	4620      	mov	r0, r4
 801f04c:	bd10      	pop	{r4, pc}
	...

0801f050 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f054:	b08f      	sub	sp, #60	; 0x3c
 801f056:	461c      	mov	r4, r3
 801f058:	9205      	str	r2, [sp, #20]
 801f05a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f05e:	9100      	str	r1, [sp, #0]
 801f060:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f062:	9201      	str	r2, [sp, #4]
 801f064:	2a00      	cmp	r2, #0
 801f066:	f000 8115 	beq.w	801f294 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f06a:	6820      	ldr	r0, [r4, #0]
 801f06c:	6861      	ldr	r1, [r4, #4]
 801f06e:	aa0a      	add	r2, sp, #40	; 0x28
 801f070:	c203      	stmia	r2!, {r0, r1}
 801f072:	6818      	ldr	r0, [r3, #0]
 801f074:	6859      	ldr	r1, [r3, #4]
 801f076:	aa0c      	add	r2, sp, #48	; 0x30
 801f078:	c203      	stmia	r2!, {r0, r1}
 801f07a:	a80a      	add	r0, sp, #40	; 0x28
 801f07c:	f7f9 faec 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f080:	4621      	mov	r1, r4
 801f082:	a80c      	add	r0, sp, #48	; 0x30
 801f084:	f7f9 fb2c 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f088:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f08c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f090:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f094:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f098:	bfde      	ittt	le
 801f09a:	b2b3      	uxthle	r3, r6
 801f09c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f0a0:	fb92 f3f3 	sdivle	r3, r2, r3
 801f0a4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f0a8:	bfc8      	it	gt
 801f0aa:	2301      	movgt	r3, #1
 801f0ac:	fb92 f1f3 	sdiv	r1, r2, r3
 801f0b0:	fa1f fc81 	uxth.w	ip, r1
 801f0b4:	fb0c 2413 	mls	r4, ip, r3, r2
 801f0b8:	fb14 f406 	smulbb	r4, r4, r6
 801f0bc:	441d      	add	r5, r3
 801f0be:	4404      	add	r4, r0
 801f0c0:	4661      	mov	r1, ip
 801f0c2:	3d01      	subs	r5, #1
 801f0c4:	b2a4      	uxth	r4, r4
 801f0c6:	fb95 f5f3 	sdiv	r5, r5, r3
 801f0ca:	b131      	cbz	r1, 801f0da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f0cc:	9b05      	ldr	r3, [sp, #20]
 801f0ce:	9900      	ldr	r1, [sp, #0]
 801f0d0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f0d4:	ba1b      	rev	r3, r3
 801f0d6:	4419      	add	r1, r3
 801f0d8:	9100      	str	r1, [sp, #0]
 801f0da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f0de:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f0e2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f0e6:	4418      	add	r0, r3
 801f0e8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f0ec:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f0f0:	441a      	add	r2, r3
 801f0f2:	4b6a      	ldr	r3, [pc, #424]	; (801f29c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f0f4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f0f8:	6818      	ldr	r0, [r3, #0]
 801f0fa:	6803      	ldr	r3, [r0, #0]
 801f0fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f0fe:	4798      	blx	r3
 801f100:	4967      	ldr	r1, [pc, #412]	; (801f2a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f102:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f106:	880b      	ldrh	r3, [r1, #0]
 801f108:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f10c:	9109      	str	r1, [sp, #36]	; 0x24
 801f10e:	fb03 c202 	mla	r2, r3, r2, ip
 801f112:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f116:	4373      	muls	r3, r6
 801f118:	b2ad      	uxth	r5, r5
 801f11a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f11e:	00ad      	lsls	r5, r5, #2
 801f120:	9306      	str	r3, [sp, #24]
 801f122:	1d2b      	adds	r3, r5, #4
 801f124:	9307      	str	r3, [sp, #28]
 801f126:	9b01      	ldr	r3, [sp, #4]
 801f128:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f12c:	9103      	str	r1, [sp, #12]
 801f12e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f132:	2c00      	cmp	r4, #0
 801f134:	bf0c      	ite	eq
 801f136:	46c6      	moveq	lr, r8
 801f138:	f04f 0e00 	movne.w	lr, #0
 801f13c:	2300      	movs	r3, #0
 801f13e:	b292      	uxth	r2, r2
 801f140:	fa1f fe8e 	uxth.w	lr, lr
 801f144:	9302      	str	r3, [sp, #8]
 801f146:	9204      	str	r2, [sp, #16]
 801f148:	9a06      	ldr	r2, [sp, #24]
 801f14a:	4282      	cmp	r2, r0
 801f14c:	f240 809d 	bls.w	801f28a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f150:	b963      	cbnz	r3, 801f16c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f152:	9b00      	ldr	r3, [sp, #0]
 801f154:	781a      	ldrb	r2, [r3, #0]
 801f156:	0993      	lsrs	r3, r2, #6
 801f158:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f15c:	9202      	str	r2, [sp, #8]
 801f15e:	1e5a      	subs	r2, r3, #1
 801f160:	2a02      	cmp	r2, #2
 801f162:	d815      	bhi.n	801f190 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f164:	9a00      	ldr	r2, [sp, #0]
 801f166:	3201      	adds	r2, #1
 801f168:	9200      	str	r2, [sp, #0]
 801f16a:	b29b      	uxth	r3, r3
 801f16c:	b1b4      	cbz	r4, 801f19c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f16e:	429c      	cmp	r4, r3
 801f170:	bf95      	itete	ls
 801f172:	1b1c      	subls	r4, r3, r4
 801f174:	1ae4      	subhi	r4, r4, r3
 801f176:	fa1f fa84 	uxthls.w	sl, r4
 801f17a:	b2a4      	uxthhi	r4, r4
 801f17c:	bf87      	ittee	hi
 801f17e:	4671      	movhi	r1, lr
 801f180:	f04f 0a00 	movhi.w	sl, #0
 801f184:	fa1f f188 	uxthls.w	r1, r8
 801f188:	2400      	movls	r4, #0
 801f18a:	4653      	mov	r3, sl
 801f18c:	468e      	mov	lr, r1
 801f18e:	e7db      	b.n	801f148 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f190:	9a00      	ldr	r2, [sp, #0]
 801f192:	9b00      	ldr	r3, [sp, #0]
 801f194:	3202      	adds	r2, #2
 801f196:	785b      	ldrb	r3, [r3, #1]
 801f198:	9200      	str	r2, [sp, #0]
 801f19a:	e7e7      	b.n	801f16c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f19c:	2202      	movs	r2, #2
 801f19e:	4615      	mov	r5, r2
 801f1a0:	9907      	ldr	r1, [sp, #28]
 801f1a2:	9a02      	ldr	r2, [sp, #8]
 801f1a4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f1a8:	9905      	ldr	r1, [sp, #20]
 801f1aa:	4573      	cmp	r3, lr
 801f1ac:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f1b0:	9a01      	ldr	r2, [sp, #4]
 801f1b2:	bf2b      	itete	cs
 801f1b4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f1b8:	ebae 0103 	subcc.w	r1, lr, r3
 801f1bc:	46f1      	movcs	r9, lr
 801f1be:	4699      	movcc	r9, r3
 801f1c0:	bf27      	ittee	cs
 801f1c2:	fa1f fa8a 	uxthcs.w	sl, sl
 801f1c6:	4621      	movcs	r1, r4
 801f1c8:	b289      	uxthcc	r1, r1
 801f1ca:	46a2      	movcc	sl, r4
 801f1cc:	2aff      	cmp	r2, #255	; 0xff
 801f1ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f1d2:	d105      	bne.n	801f1e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f1d4:	4481      	add	r9, r0
 801f1d6:	4581      	cmp	r9, r0
 801f1d8:	d045      	beq.n	801f266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f1da:	f820 cb02 	strh.w	ip, [r0], #2
 801f1de:	e7fa      	b.n	801f1d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f1e0:	9d03      	ldr	r5, [sp, #12]
 801f1e2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f1e6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f1ea:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f1ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f1f2:	436a      	muls	r2, r5
 801f1f4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f1f8:	fa5f fc8c 	uxtb.w	ip, ip
 801f1fc:	9208      	str	r2, [sp, #32]
 801f1fe:	fb0b fb05 	mul.w	fp, fp, r5
 801f202:	fb0c fc05 	mul.w	ip, ip, r5
 801f206:	4481      	add	r9, r0
 801f208:	4581      	cmp	r9, r0
 801f20a:	d02c      	beq.n	801f266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f20c:	8802      	ldrh	r2, [r0, #0]
 801f20e:	9d04      	ldr	r5, [sp, #16]
 801f210:	9f04      	ldr	r7, [sp, #16]
 801f212:	1216      	asrs	r6, r2, #8
 801f214:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f218:	fb16 f605 	smulbb	r6, r6, r5
 801f21c:	9d08      	ldr	r5, [sp, #32]
 801f21e:	442e      	add	r6, r5
 801f220:	10d5      	asrs	r5, r2, #3
 801f222:	00d2      	lsls	r2, r2, #3
 801f224:	b2d2      	uxtb	r2, r2
 801f226:	fb12 f207 	smulbb	r2, r2, r7
 801f22a:	b2b6      	uxth	r6, r6
 801f22c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f230:	4462      	add	r2, ip
 801f232:	fb15 f507 	smulbb	r5, r5, r7
 801f236:	b292      	uxth	r2, r2
 801f238:	1c77      	adds	r7, r6, #1
 801f23a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f23e:	1c57      	adds	r7, r2, #1
 801f240:	445d      	add	r5, fp
 801f242:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f246:	b2ad      	uxth	r5, r5
 801f248:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f24c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f250:	4316      	orrs	r6, r2
 801f252:	1c6a      	adds	r2, r5, #1
 801f254:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f258:	096d      	lsrs	r5, r5, #5
 801f25a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f25e:	432e      	orrs	r6, r5
 801f260:	f820 6b02 	strh.w	r6, [r0], #2
 801f264:	e7d0      	b.n	801f208 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f266:	4573      	cmp	r3, lr
 801f268:	d38f      	bcc.n	801f18a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f26a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f26e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f270:	fa1f f188 	uxth.w	r1, r8
 801f274:	1a64      	subs	r4, r4, r1
 801f276:	881b      	ldrh	r3, [r3, #0]
 801f278:	b2a4      	uxth	r4, r4
 801f27a:	2c00      	cmp	r4, #0
 801f27c:	eba3 0308 	sub.w	r3, r3, r8
 801f280:	bf18      	it	ne
 801f282:	2100      	movne	r1, #0
 801f284:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f288:	e77f      	b.n	801f18a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f28a:	4b04      	ldr	r3, [pc, #16]	; (801f29c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f28c:	6818      	ldr	r0, [r3, #0]
 801f28e:	6803      	ldr	r3, [r0, #0]
 801f290:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f292:	4798      	blx	r3
 801f294:	b00f      	add	sp, #60	; 0x3c
 801f296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f29a:	bf00      	nop
 801f29c:	2001383c 	.word	0x2001383c
 801f2a0:	20013836 	.word	0x20013836

0801f2a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f2a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f2a8:	b09f      	sub	sp, #124	; 0x7c
 801f2aa:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f2ae:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f2b2:	9209      	str	r2, [sp, #36]	; 0x24
 801f2b4:	461d      	mov	r5, r3
 801f2b6:	4604      	mov	r4, r0
 801f2b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2ba:	2a00      	cmp	r2, #0
 801f2bc:	f000 81eb 	beq.w	801f696 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f2c0:	6828      	ldr	r0, [r5, #0]
 801f2c2:	6869      	ldr	r1, [r5, #4]
 801f2c4:	aa1a      	add	r2, sp, #104	; 0x68
 801f2c6:	c203      	stmia	r2!, {r0, r1}
 801f2c8:	6818      	ldr	r0, [r3, #0]
 801f2ca:	6859      	ldr	r1, [r3, #4]
 801f2cc:	aa1c      	add	r2, sp, #112	; 0x70
 801f2ce:	c203      	stmia	r2!, {r0, r1}
 801f2d0:	a81a      	add	r0, sp, #104	; 0x68
 801f2d2:	f7f9 f9c1 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f2d6:	4629      	mov	r1, r5
 801f2d8:	a81c      	add	r0, sp, #112	; 0x70
 801f2da:	f7f9 fa01 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f2de:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f2e2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f2e6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f2ea:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f2ee:	bfd7      	itett	le
 801f2f0:	b29a      	uxthle	r2, r3
 801f2f2:	2201      	movgt	r2, #1
 801f2f4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f2f8:	fb91 f2f2 	sdivle	r2, r1, r2
 801f2fc:	9202      	str	r2, [sp, #8]
 801f2fe:	9802      	ldr	r0, [sp, #8]
 801f300:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f304:	fb92 f0f0 	sdiv	r0, r2, r0
 801f308:	b280      	uxth	r0, r0
 801f30a:	9010      	str	r0, [sp, #64]	; 0x40
 801f30c:	9902      	ldr	r1, [sp, #8]
 801f30e:	9802      	ldr	r0, [sp, #8]
 801f310:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f312:	4488      	add	r8, r1
 801f314:	fb05 2510 	mls	r5, r5, r0, r2
 801f318:	fb15 f503 	smulbb	r5, r5, r3
 801f31c:	f108 38ff 	add.w	r8, r8, #4294967295
 801f320:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f324:	fb98 f8f1 	sdiv	r8, r8, r1
 801f328:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f32c:	440d      	add	r5, r1
 801f32e:	4419      	add	r1, r3
 801f330:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f334:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f338:	441a      	add	r2, r3
 801f33a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f33e:	9304      	str	r3, [sp, #16]
 801f340:	4b95      	ldr	r3, [pc, #596]	; (801f598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f342:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f346:	6818      	ldr	r0, [r3, #0]
 801f348:	6803      	ldr	r3, [r0, #0]
 801f34a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f34c:	4798      	blx	r3
 801f34e:	4b93      	ldr	r3, [pc, #588]	; (801f59c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f350:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f354:	881a      	ldrh	r2, [r3, #0]
 801f356:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f35a:	9318      	str	r3, [sp, #96]	; 0x60
 801f35c:	fb02 7101 	mla	r1, r2, r1, r7
 801f360:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f364:	4356      	muls	r6, r2
 801f366:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f36a:	f108 0801 	add.w	r8, r8, #1
 801f36e:	920a      	str	r2, [sp, #40]	; 0x28
 801f370:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f372:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f376:	930f      	str	r3, [sp, #60]	; 0x3c
 801f378:	fa1f f888 	uxth.w	r8, r8
 801f37c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f380:	f108 0204 	add.w	r2, r8, #4
 801f384:	9211      	str	r2, [sp, #68]	; 0x44
 801f386:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f388:	4b85      	ldr	r3, [pc, #532]	; (801f5a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f38a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f38e:	b2ad      	uxth	r5, r5
 801f390:	9215      	str	r2, [sp, #84]	; 0x54
 801f392:	2d00      	cmp	r5, #0
 801f394:	9a04      	ldr	r2, [sp, #16]
 801f396:	f04f 0100 	mov.w	r1, #0
 801f39a:	bf18      	it	ne
 801f39c:	2200      	movne	r2, #0
 801f39e:	1b1b      	subs	r3, r3, r4
 801f3a0:	b292      	uxth	r2, r2
 801f3a2:	910d      	str	r1, [sp, #52]	; 0x34
 801f3a4:	9319      	str	r3, [sp, #100]	; 0x64
 801f3a6:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f3a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f3aa:	fa11 f383 	uxtah	r3, r1, r3
 801f3ae:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f3b0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f3b4:	3304      	adds	r3, #4
 801f3b6:	9306      	str	r3, [sp, #24]
 801f3b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f3ba:	4283      	cmp	r3, r0
 801f3bc:	f240 8166 	bls.w	801f68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f3c0:	9902      	ldr	r1, [sp, #8]
 801f3c2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f3c6:	fbb5 f3f3 	udiv	r3, r5, r3
 801f3ca:	1acb      	subs	r3, r1, r3
 801f3cc:	b29b      	uxth	r3, r3
 801f3ce:	9316      	str	r3, [sp, #88]	; 0x58
 801f3d0:	9b06      	ldr	r3, [sp, #24]
 801f3d2:	9e06      	ldr	r6, [sp, #24]
 801f3d4:	7859      	ldrb	r1, [r3, #1]
 801f3d6:	789b      	ldrb	r3, [r3, #2]
 801f3d8:	7836      	ldrb	r6, [r6, #0]
 801f3da:	9612      	str	r6, [sp, #72]	; 0x48
 801f3dc:	021b      	lsls	r3, r3, #8
 801f3de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f3e2:	9906      	ldr	r1, [sp, #24]
 801f3e4:	78c9      	ldrb	r1, [r1, #3]
 801f3e6:	430b      	orrs	r3, r1
 801f3e8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801f3ea:	3601      	adds	r6, #1
 801f3ec:	4419      	add	r1, r3
 801f3ee:	9605      	str	r6, [sp, #20]
 801f3f0:	1c4e      	adds	r6, r1, #1
 801f3f2:	9603      	str	r6, [sp, #12]
 801f3f4:	7849      	ldrb	r1, [r1, #1]
 801f3f6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f3f8:	0209      	lsls	r1, r1, #8
 801f3fa:	5cf3      	ldrb	r3, [r6, r3]
 801f3fc:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801f400:	4319      	orrs	r1, r3
 801f402:	b28b      	uxth	r3, r1
 801f404:	930c      	str	r3, [sp, #48]	; 0x30
 801f406:	2300      	movs	r3, #0
 801f408:	f04f 0a01 	mov.w	sl, #1
 801f40c:	9307      	str	r3, [sp, #28]
 801f40e:	469c      	mov	ip, r3
 801f410:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f414:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f418:	46d3      	mov	fp, sl
 801f41a:	4657      	mov	r7, sl
 801f41c:	930e      	str	r3, [sp, #56]	; 0x38
 801f41e:	2d00      	cmp	r5, #0
 801f420:	d07e      	beq.n	801f520 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801f422:	42af      	cmp	r7, r5
 801f424:	d26e      	bcs.n	801f504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801f426:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f428:	9201      	str	r2, [sp, #4]
 801f42a:	1bed      	subs	r5, r5, r7
 801f42c:	4283      	cmp	r3, r0
 801f42e:	b2ad      	uxth	r5, r5
 801f430:	d802      	bhi.n	801f438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801f432:	e073      	b.n	801f51c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801f434:	2b00      	cmp	r3, #0
 801f436:	d15f      	bne.n	801f4f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801f438:	9b03      	ldr	r3, [sp, #12]
 801f43a:	785b      	ldrb	r3, [r3, #1]
 801f43c:	f1cb 0207 	rsb	r2, fp, #7
 801f440:	4093      	lsls	r3, r2
 801f442:	005b      	lsls	r3, r3, #1
 801f444:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f448:	9b03      	ldr	r3, [sp, #12]
 801f44a:	781b      	ldrb	r3, [r3, #0]
 801f44c:	fa43 f30b 	asr.w	r3, r3, fp
 801f450:	b2db      	uxtb	r3, r3
 801f452:	4313      	orrs	r3, r2
 801f454:	f10b 0201 	add.w	r2, fp, #1
 801f458:	fa5f fb82 	uxtb.w	fp, r2
 801f45c:	9a03      	ldr	r2, [sp, #12]
 801f45e:	f1bb 0f08 	cmp.w	fp, #8
 801f462:	bf15      	itete	ne
 801f464:	3201      	addne	r2, #1
 801f466:	3202      	addeq	r2, #2
 801f468:	9203      	strne	r2, [sp, #12]
 801f46a:	9203      	streq	r2, [sp, #12]
 801f46c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f46e:	b29f      	uxth	r7, r3
 801f470:	bf08      	it	eq
 801f472:	f04f 0b00 	moveq.w	fp, #0
 801f476:	42ba      	cmp	r2, r7
 801f478:	d309      	bcc.n	801f48e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f47a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f47e:	2301      	movs	r3, #1
 801f480:	9a05      	ldr	r2, [sp, #20]
 801f482:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801f486:	d30e      	bcc.n	801f4a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801f488:	469a      	mov	sl, r3
 801f48a:	2600      	movs	r6, #0
 801f48c:	e035      	b.n	801f4fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801f48e:	9b05      	ldr	r3, [sp, #20]
 801f490:	429f      	cmp	r7, r3
 801f492:	d318      	bcc.n	801f4c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801f494:	eb04 030a 	add.w	r3, r4, sl
 801f498:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801f49c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801f4a0:	f10a 0301 	add.w	r3, sl, #1
 801f4a4:	b29b      	uxth	r3, r3
 801f4a6:	9a05      	ldr	r2, [sp, #20]
 801f4a8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f4ac:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f4ae:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f4b2:	7116      	strb	r6, [r2, #4]
 801f4b4:	f10a 0601 	add.w	r6, sl, #1
 801f4b8:	80d1      	strh	r1, [r2, #6]
 801f4ba:	7156      	strb	r6, [r2, #5]
 801f4bc:	9a05      	ldr	r2, [sp, #20]
 801f4be:	3201      	adds	r2, #1
 801f4c0:	b292      	uxth	r2, r2
 801f4c2:	9205      	str	r2, [sp, #20]
 801f4c4:	e7e0      	b.n	801f488 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801f4c6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801f4ca:	463a      	mov	r2, r7
 801f4cc:	795b      	ldrb	r3, [r3, #5]
 801f4ce:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f4d2:	4426      	add	r6, r4
 801f4d4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801f4d6:	eb01 0c06 	add.w	ip, r1, r6
 801f4da:	f1bc 0f00 	cmp.w	ip, #0
 801f4de:	dd07      	ble.n	801f4f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801f4e0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f4e4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801f4e8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801f4ec:	88d2      	ldrh	r2, [r2, #6]
 801f4ee:	e7f1      	b.n	801f4d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801f4f0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f4f4:	b29b      	uxth	r3, r3
 801f4f6:	e7c3      	b.n	801f480 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801f4f8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f4fa:	970c      	str	r7, [sp, #48]	; 0x30
 801f4fc:	9a01      	ldr	r2, [sp, #4]
 801f4fe:	46b4      	mov	ip, r6
 801f500:	461f      	mov	r7, r3
 801f502:	e78c      	b.n	801f41e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801f504:	1b7b      	subs	r3, r7, r5
 801f506:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f50a:	9201      	str	r2, [sp, #4]
 801f50c:	eb0c 0605 	add.w	r6, ip, r5
 801f510:	b29b      	uxth	r3, r3
 801f512:	b2b6      	uxth	r6, r6
 801f514:	2500      	movs	r5, #0
 801f516:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f518:	4282      	cmp	r2, r0
 801f51a:	d88b      	bhi.n	801f434 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f51c:	9a01      	ldr	r2, [sp, #4]
 801f51e:	e74b      	b.n	801f3b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801f520:	4297      	cmp	r7, r2
 801f522:	d332      	bcc.n	801f58a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801f524:	1abb      	subs	r3, r7, r2
 801f526:	b29b      	uxth	r3, r3
 801f528:	9208      	str	r2, [sp, #32]
 801f52a:	9501      	str	r5, [sp, #4]
 801f52c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f52e:	29ff      	cmp	r1, #255	; 0xff
 801f530:	9908      	ldr	r1, [sp, #32]
 801f532:	eb0c 0601 	add.w	r6, ip, r1
 801f536:	d135      	bne.n	801f5a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801f538:	f1a0 0e02 	sub.w	lr, r0, #2
 801f53c:	b2b6      	uxth	r6, r6
 801f53e:	45b4      	cmp	ip, r6
 801f540:	f040 808c 	bne.w	801f65c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801f544:	9908      	ldr	r1, [sp, #32]
 801f546:	4297      	cmp	r7, r2
 801f548:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f54c:	d3e2      	bcc.n	801f514 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801f54e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f550:	9904      	ldr	r1, [sp, #16]
 801f552:	8812      	ldrh	r2, [r2, #0]
 801f554:	1a52      	subs	r2, r2, r1
 801f556:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f55a:	9a07      	ldr	r2, [sp, #28]
 801f55c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f55e:	3201      	adds	r2, #1
 801f560:	428a      	cmp	r2, r1
 801f562:	9207      	str	r2, [sp, #28]
 801f564:	f040 8087 	bne.w	801f676 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f568:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f56c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801f570:	9b04      	ldr	r3, [sp, #16]
 801f572:	1bed      	subs	r5, r5, r7
 801f574:	b2ad      	uxth	r5, r5
 801f576:	2d00      	cmp	r5, #0
 801f578:	bf08      	it	eq
 801f57a:	461a      	moveq	r2, r3
 801f57c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f57e:	bf18      	it	ne
 801f580:	2200      	movne	r2, #0
 801f582:	3301      	adds	r3, #1
 801f584:	930d      	str	r3, [sp, #52]	; 0x34
 801f586:	b292      	uxth	r2, r2
 801f588:	e70d      	b.n	801f3a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801f58a:	1bd1      	subs	r1, r2, r7
 801f58c:	b28b      	uxth	r3, r1
 801f58e:	9301      	str	r3, [sp, #4]
 801f590:	9708      	str	r7, [sp, #32]
 801f592:	462b      	mov	r3, r5
 801f594:	e7ca      	b.n	801f52c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801f596:	bf00      	nop
 801f598:	2001383c 	.word	0x2001383c
 801f59c:	20013836 	.word	0x20013836
 801f5a0:	fffff7fb 	.word	0xfffff7fb
 801f5a4:	b2b6      	uxth	r6, r6
 801f5a6:	900b      	str	r0, [sp, #44]	; 0x2c
 801f5a8:	45b4      	cmp	ip, r6
 801f5aa:	d0cb      	beq.n	801f544 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801f5ac:	f10c 0101 	add.w	r1, ip, #1
 801f5b0:	44a4      	add	ip, r4
 801f5b2:	9117      	str	r1, [sp, #92]	; 0x5c
 801f5b4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f5b8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f5ba:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f5be:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f5c0:	f8b1 c000 	ldrh.w	ip, [r1]
 801f5c4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5c6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801f5ca:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f5ce:	fb1e fe01 	smulbb	lr, lr, r1
 801f5d2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801f5d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5d8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f5dc:	fb08 e801 	mla	r8, r8, r1, lr
 801f5e0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801f5e4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5e6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f5ea:	fb19 f901 	smulbb	r9, r9, r1
 801f5ee:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801f5f2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5f4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f5f8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801f5fc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f600:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f602:	fa5f fc8c 	uxtb.w	ip, ip
 801f606:	fb1c fc01 	smulbb	ip, ip, r1
 801f60a:	00ed      	lsls	r5, r5, #3
 801f60c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f60e:	b2ed      	uxtb	r5, r5
 801f610:	fb05 c501 	mla	r5, r5, r1, ip
 801f614:	fa1f f888 	uxth.w	r8, r8
 801f618:	fa1f fe8e 	uxth.w	lr, lr
 801f61c:	b2ad      	uxth	r5, r5
 801f61e:	f108 0c01 	add.w	ip, r8, #1
 801f622:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801f626:	f10e 0901 	add.w	r9, lr, #1
 801f62a:	f105 0c01 	add.w	ip, r5, #1
 801f62e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801f632:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801f636:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f63a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f63e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f642:	ea4c 0808 	orr.w	r8, ip, r8
 801f646:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f648:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801f64c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f650:	ea48 0809 	orr.w	r8, r8, r9
 801f654:	f821 8b02 	strh.w	r8, [r1], #2
 801f658:	910b      	str	r1, [sp, #44]	; 0x2c
 801f65a:	e7a5      	b.n	801f5a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801f65c:	f10c 0801 	add.w	r8, ip, #1
 801f660:	44a4      	add	ip, r4
 801f662:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f664:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f668:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f66c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801f670:	fa1f fc88 	uxth.w	ip, r8
 801f674:	e763      	b.n	801f53e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801f676:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f67a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f67e:	1aad      	subs	r5, r5, r2
 801f680:	b2ad      	uxth	r5, r5
 801f682:	2d00      	cmp	r5, #0
 801f684:	bf18      	it	ne
 801f686:	2200      	movne	r2, #0
 801f688:	9201      	str	r2, [sp, #4]
 801f68a:	e744      	b.n	801f516 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801f68c:	4b03      	ldr	r3, [pc, #12]	; (801f69c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801f68e:	6818      	ldr	r0, [r3, #0]
 801f690:	6803      	ldr	r3, [r0, #0]
 801f692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f694:	4798      	blx	r3
 801f696:	b01f      	add	sp, #124	; 0x7c
 801f698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f69c:	2001383c 	.word	0x2001383c

0801f6a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f6a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6a4:	b08f      	sub	sp, #60	; 0x3c
 801f6a6:	461c      	mov	r4, r3
 801f6a8:	9203      	str	r2, [sp, #12]
 801f6aa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f6ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f6b0:	9202      	str	r2, [sp, #8]
 801f6b2:	460f      	mov	r7, r1
 801f6b4:	2a00      	cmp	r2, #0
 801f6b6:	f000 8128 	beq.w	801f90a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801f6ba:	6820      	ldr	r0, [r4, #0]
 801f6bc:	6861      	ldr	r1, [r4, #4]
 801f6be:	aa0a      	add	r2, sp, #40	; 0x28
 801f6c0:	c203      	stmia	r2!, {r0, r1}
 801f6c2:	6818      	ldr	r0, [r3, #0]
 801f6c4:	6859      	ldr	r1, [r3, #4]
 801f6c6:	aa0c      	add	r2, sp, #48	; 0x30
 801f6c8:	c203      	stmia	r2!, {r0, r1}
 801f6ca:	a80a      	add	r0, sp, #40	; 0x28
 801f6cc:	f7f8 ffc4 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f6d0:	4621      	mov	r1, r4
 801f6d2:	a80c      	add	r0, sp, #48	; 0x30
 801f6d4:	f7f9 f804 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f6d8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f6dc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f6e0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f6e4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f6e8:	bfde      	ittt	le
 801f6ea:	b2b3      	uxthle	r3, r6
 801f6ec:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f6f0:	fb92 f3f3 	sdivle	r3, r2, r3
 801f6f4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f6f8:	bfc8      	it	gt
 801f6fa:	2301      	movgt	r3, #1
 801f6fc:	fb92 f1f3 	sdiv	r1, r2, r3
 801f700:	fa1f fc81 	uxth.w	ip, r1
 801f704:	fb0c 2413 	mls	r4, ip, r3, r2
 801f708:	fb14 f406 	smulbb	r4, r4, r6
 801f70c:	441d      	add	r5, r3
 801f70e:	4404      	add	r4, r0
 801f710:	4661      	mov	r1, ip
 801f712:	3d01      	subs	r5, #1
 801f714:	b2a4      	uxth	r4, r4
 801f716:	fb95 f5f3 	sdiv	r5, r5, r3
 801f71a:	b121      	cbz	r1, 801f726 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801f71c:	9b03      	ldr	r3, [sp, #12]
 801f71e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f722:	ba1b      	rev	r3, r3
 801f724:	441f      	add	r7, r3
 801f726:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f72a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f72e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f732:	4418      	add	r0, r3
 801f734:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f738:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f73c:	441a      	add	r2, r3
 801f73e:	4b74      	ldr	r3, [pc, #464]	; (801f910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f740:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f744:	6818      	ldr	r0, [r3, #0]
 801f746:	6803      	ldr	r3, [r0, #0]
 801f748:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f74a:	4798      	blx	r3
 801f74c:	4a71      	ldr	r2, [pc, #452]	; (801f914 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801f74e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801f752:	8813      	ldrh	r3, [r2, #0]
 801f754:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f758:	9209      	str	r2, [sp, #36]	; 0x24
 801f75a:	fb03 c101 	mla	r1, r3, r1, ip
 801f75e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f762:	4373      	muls	r3, r6
 801f764:	b2ad      	uxth	r5, r5
 801f766:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f76a:	00ad      	lsls	r5, r5, #2
 801f76c:	2c00      	cmp	r4, #0
 801f76e:	9304      	str	r3, [sp, #16]
 801f770:	f105 0304 	add.w	r3, r5, #4
 801f774:	9305      	str	r3, [sp, #20]
 801f776:	bf0c      	ite	eq
 801f778:	46c8      	moveq	r8, r9
 801f77a:	f04f 0800 	movne.w	r8, #0
 801f77e:	2300      	movs	r3, #0
 801f780:	fa1f f888 	uxth.w	r8, r8
 801f784:	9301      	str	r3, [sp, #4]
 801f786:	9a04      	ldr	r2, [sp, #16]
 801f788:	4282      	cmp	r2, r0
 801f78a:	f240 80b9 	bls.w	801f900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801f78e:	b95b      	cbnz	r3, 801f7a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801f790:	783a      	ldrb	r2, [r7, #0]
 801f792:	0993      	lsrs	r3, r2, #6
 801f794:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f798:	9201      	str	r2, [sp, #4]
 801f79a:	1e5a      	subs	r2, r3, #1
 801f79c:	2a02      	cmp	r2, #2
 801f79e:	bf8d      	iteet	hi
 801f7a0:	787b      	ldrbhi	r3, [r7, #1]
 801f7a2:	3701      	addls	r7, #1
 801f7a4:	b29b      	uxthls	r3, r3
 801f7a6:	3702      	addhi	r7, #2
 801f7a8:	b184      	cbz	r4, 801f7cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801f7aa:	429c      	cmp	r4, r3
 801f7ac:	bf95      	itete	ls
 801f7ae:	1b1c      	subls	r4, r3, r4
 801f7b0:	1ae4      	subhi	r4, r4, r3
 801f7b2:	fa1f fa84 	uxthls.w	sl, r4
 801f7b6:	b2a4      	uxthhi	r4, r4
 801f7b8:	bf87      	ittee	hi
 801f7ba:	46c4      	movhi	ip, r8
 801f7bc:	f04f 0a00 	movhi.w	sl, #0
 801f7c0:	fa1f fc89 	uxthls.w	ip, r9
 801f7c4:	2400      	movls	r4, #0
 801f7c6:	4653      	mov	r3, sl
 801f7c8:	46e0      	mov	r8, ip
 801f7ca:	e7dc      	b.n	801f786 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801f7cc:	2204      	movs	r2, #4
 801f7ce:	4615      	mov	r5, r2
 801f7d0:	9905      	ldr	r1, [sp, #20]
 801f7d2:	9a01      	ldr	r2, [sp, #4]
 801f7d4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f7d8:	9903      	ldr	r1, [sp, #12]
 801f7da:	588a      	ldr	r2, [r1, r2]
 801f7dc:	4543      	cmp	r3, r8
 801f7de:	bf27      	ittee	cs
 801f7e0:	eba3 0a08 	subcs.w	sl, r3, r8
 801f7e4:	46c6      	movcs	lr, r8
 801f7e6:	eba8 0c03 	subcc.w	ip, r8, r3
 801f7ea:	469e      	movcc	lr, r3
 801f7ec:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801f7f0:	bf27      	ittee	cs
 801f7f2:	fa1f fa8a 	uxthcs.w	sl, sl
 801f7f6:	46a4      	movcs	ip, r4
 801f7f8:	fa1f fc8c 	uxthcc.w	ip, ip
 801f7fc:	46a2      	movcc	sl, r4
 801f7fe:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801f802:	2900      	cmp	r1, #0
 801f804:	d066      	beq.n	801f8d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801f806:	29ff      	cmp	r1, #255	; 0xff
 801f808:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f80c:	d114      	bne.n	801f838 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f80e:	9d02      	ldr	r5, [sp, #8]
 801f810:	2dff      	cmp	r5, #255	; 0xff
 801f812:	d111      	bne.n	801f838 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f814:	0951      	lsrs	r1, r2, #5
 801f816:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801f81a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f81e:	f026 0607 	bic.w	r6, r6, #7
 801f822:	430e      	orrs	r6, r1
 801f824:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f828:	4316      	orrs	r6, r2
 801f82a:	b2b6      	uxth	r6, r6
 801f82c:	4486      	add	lr, r0
 801f82e:	4586      	cmp	lr, r0
 801f830:	d051      	beq.n	801f8d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f832:	f820 6b02 	strh.w	r6, [r0], #2
 801f836:	e7fa      	b.n	801f82e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801f838:	9d02      	ldr	r5, [sp, #8]
 801f83a:	4369      	muls	r1, r5
 801f83c:	1c4d      	adds	r5, r1, #1
 801f83e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801f842:	122d      	asrs	r5, r5, #8
 801f844:	ea6f 0b05 	mvn.w	fp, r5
 801f848:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f84c:	b2ad      	uxth	r5, r5
 801f84e:	b2f6      	uxtb	r6, r6
 801f850:	b2d2      	uxtb	r2, r2
 801f852:	fb11 f105 	smulbb	r1, r1, r5
 801f856:	fb16 f605 	smulbb	r6, r6, r5
 801f85a:	fb12 f205 	smulbb	r2, r2, r5
 801f85e:	b289      	uxth	r1, r1
 801f860:	b2b6      	uxth	r6, r6
 801f862:	b292      	uxth	r2, r2
 801f864:	9106      	str	r1, [sp, #24]
 801f866:	9607      	str	r6, [sp, #28]
 801f868:	9208      	str	r2, [sp, #32]
 801f86a:	4486      	add	lr, r0
 801f86c:	fa5f fb8b 	uxtb.w	fp, fp
 801f870:	4586      	cmp	lr, r0
 801f872:	d030      	beq.n	801f8d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f874:	8802      	ldrh	r2, [r0, #0]
 801f876:	9906      	ldr	r1, [sp, #24]
 801f878:	1216      	asrs	r6, r2, #8
 801f87a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f87e:	10d5      	asrs	r5, r2, #3
 801f880:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f884:	fb06 160b 	mla	r6, r6, fp, r1
 801f888:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f88c:	9907      	ldr	r1, [sp, #28]
 801f88e:	00d2      	lsls	r2, r2, #3
 801f890:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f894:	fb05 150b 	mla	r5, r5, fp, r1
 801f898:	b2d2      	uxtb	r2, r2
 801f89a:	9908      	ldr	r1, [sp, #32]
 801f89c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f8a0:	b2b6      	uxth	r6, r6
 801f8a2:	fb02 120b 	mla	r2, r2, fp, r1
 801f8a6:	b292      	uxth	r2, r2
 801f8a8:	1c71      	adds	r1, r6, #1
 801f8aa:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801f8ae:	1c51      	adds	r1, r2, #1
 801f8b0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f8b4:	b2ad      	uxth	r5, r5
 801f8b6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f8ba:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f8be:	4316      	orrs	r6, r2
 801f8c0:	1c6a      	adds	r2, r5, #1
 801f8c2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f8c6:	096d      	lsrs	r5, r5, #5
 801f8c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f8cc:	432e      	orrs	r6, r5
 801f8ce:	f820 6b02 	strh.w	r6, [r0], #2
 801f8d2:	e7cd      	b.n	801f870 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801f8d4:	4470      	add	r0, lr
 801f8d6:	4543      	cmp	r3, r8
 801f8d8:	f4ff af75 	bcc.w	801f7c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f8dc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f8e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8e2:	fa1f fc89 	uxth.w	ip, r9
 801f8e6:	eba4 040c 	sub.w	r4, r4, ip
 801f8ea:	881b      	ldrh	r3, [r3, #0]
 801f8ec:	b2a4      	uxth	r4, r4
 801f8ee:	2c00      	cmp	r4, #0
 801f8f0:	eba3 0309 	sub.w	r3, r3, r9
 801f8f4:	bf18      	it	ne
 801f8f6:	f04f 0c00 	movne.w	ip, #0
 801f8fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f8fe:	e762      	b.n	801f7c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f900:	4b03      	ldr	r3, [pc, #12]	; (801f910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f902:	6818      	ldr	r0, [r3, #0]
 801f904:	6803      	ldr	r3, [r0, #0]
 801f906:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f908:	4798      	blx	r3
 801f90a:	b00f      	add	sp, #60	; 0x3c
 801f90c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f910:	2001383c 	.word	0x2001383c
 801f914:	20013836 	.word	0x20013836

0801f918 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f91c:	b093      	sub	sp, #76	; 0x4c
 801f91e:	461c      	mov	r4, r3
 801f920:	9205      	str	r2, [sp, #20]
 801f922:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801f926:	9101      	str	r1, [sp, #4]
 801f928:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f92a:	9202      	str	r2, [sp, #8]
 801f92c:	2a00      	cmp	r2, #0
 801f92e:	f000 812c 	beq.w	801fb8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801f932:	6820      	ldr	r0, [r4, #0]
 801f934:	6861      	ldr	r1, [r4, #4]
 801f936:	aa0e      	add	r2, sp, #56	; 0x38
 801f938:	c203      	stmia	r2!, {r0, r1}
 801f93a:	6818      	ldr	r0, [r3, #0]
 801f93c:	6859      	ldr	r1, [r3, #4]
 801f93e:	aa10      	add	r2, sp, #64	; 0x40
 801f940:	c203      	stmia	r2!, {r0, r1}
 801f942:	a80e      	add	r0, sp, #56	; 0x38
 801f944:	f7f8 fe88 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f948:	4621      	mov	r1, r4
 801f94a:	a810      	add	r0, sp, #64	; 0x40
 801f94c:	f7f8 fec8 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f950:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f954:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801f958:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801f95c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f960:	bfde      	ittt	le
 801f962:	b2b3      	uxthle	r3, r6
 801f964:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f968:	fb92 f3f3 	sdivle	r3, r2, r3
 801f96c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f970:	bfc8      	it	gt
 801f972:	2301      	movgt	r3, #1
 801f974:	fb92 f1f3 	sdiv	r1, r2, r3
 801f978:	fa1f fc81 	uxth.w	ip, r1
 801f97c:	fb0c 2413 	mls	r4, ip, r3, r2
 801f980:	fb14 f406 	smulbb	r4, r4, r6
 801f984:	441d      	add	r5, r3
 801f986:	4404      	add	r4, r0
 801f988:	4661      	mov	r1, ip
 801f98a:	3d01      	subs	r5, #1
 801f98c:	b2a4      	uxth	r4, r4
 801f98e:	fb95 f5f3 	sdiv	r5, r5, r3
 801f992:	b131      	cbz	r1, 801f9a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801f994:	9b05      	ldr	r3, [sp, #20]
 801f996:	9901      	ldr	r1, [sp, #4]
 801f998:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f99c:	ba1b      	rev	r3, r3
 801f99e:	4419      	add	r1, r3
 801f9a0:	9101      	str	r1, [sp, #4]
 801f9a2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f9a6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f9aa:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801f9ae:	4418      	add	r0, r3
 801f9b0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801f9b4:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801f9b8:	441a      	add	r2, r3
 801f9ba:	4b75      	ldr	r3, [pc, #468]	; (801fb90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801f9bc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801f9c0:	6818      	ldr	r0, [r3, #0]
 801f9c2:	6803      	ldr	r3, [r0, #0]
 801f9c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f9c6:	4798      	blx	r3
 801f9c8:	4972      	ldr	r1, [pc, #456]	; (801fb94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801f9ca:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801f9ce:	880b      	ldrh	r3, [r1, #0]
 801f9d0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f9d4:	910d      	str	r1, [sp, #52]	; 0x34
 801f9d6:	fb03 c202 	mla	r2, r3, r2, ip
 801f9da:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f9de:	4373      	muls	r3, r6
 801f9e0:	b2ad      	uxth	r5, r5
 801f9e2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f9e6:	00ad      	lsls	r5, r5, #2
 801f9e8:	9308      	str	r3, [sp, #32]
 801f9ea:	1d2b      	adds	r3, r5, #4
 801f9ec:	9309      	str	r3, [sp, #36]	; 0x24
 801f9ee:	9b02      	ldr	r3, [sp, #8]
 801f9f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f9f4:	9106      	str	r1, [sp, #24]
 801f9f6:	43da      	mvns	r2, r3
 801f9f8:	2c00      	cmp	r4, #0
 801f9fa:	bf0c      	ite	eq
 801f9fc:	46dc      	moveq	ip, fp
 801f9fe:	f04f 0c00 	movne.w	ip, #0
 801fa02:	2300      	movs	r3, #0
 801fa04:	b2d2      	uxtb	r2, r2
 801fa06:	fa1f fc8c 	uxth.w	ip, ip
 801fa0a:	9303      	str	r3, [sp, #12]
 801fa0c:	9207      	str	r2, [sp, #28]
 801fa0e:	9a08      	ldr	r2, [sp, #32]
 801fa10:	4282      	cmp	r2, r0
 801fa12:	f240 80b5 	bls.w	801fb80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801fa16:	b963      	cbnz	r3, 801fa32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fa18:	9b01      	ldr	r3, [sp, #4]
 801fa1a:	781a      	ldrb	r2, [r3, #0]
 801fa1c:	0993      	lsrs	r3, r2, #6
 801fa1e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fa22:	9203      	str	r2, [sp, #12]
 801fa24:	1e5a      	subs	r2, r3, #1
 801fa26:	2a02      	cmp	r2, #2
 801fa28:	d815      	bhi.n	801fa56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801fa2a:	9a01      	ldr	r2, [sp, #4]
 801fa2c:	3201      	adds	r2, #1
 801fa2e:	9201      	str	r2, [sp, #4]
 801fa30:	b29b      	uxth	r3, r3
 801fa32:	b1b4      	cbz	r4, 801fa62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801fa34:	429c      	cmp	r4, r3
 801fa36:	bf95      	itete	ls
 801fa38:	1b1c      	subls	r4, r3, r4
 801fa3a:	1ae4      	subhi	r4, r4, r3
 801fa3c:	fa1f f884 	uxthls.w	r8, r4
 801fa40:	b2a4      	uxthhi	r4, r4
 801fa42:	bf87      	ittee	hi
 801fa44:	4666      	movhi	r6, ip
 801fa46:	f04f 0800 	movhi.w	r8, #0
 801fa4a:	fa1f f68b 	uxthls.w	r6, fp
 801fa4e:	2400      	movls	r4, #0
 801fa50:	4643      	mov	r3, r8
 801fa52:	46b4      	mov	ip, r6
 801fa54:	e7db      	b.n	801fa0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801fa56:	9a01      	ldr	r2, [sp, #4]
 801fa58:	9b01      	ldr	r3, [sp, #4]
 801fa5a:	3202      	adds	r2, #2
 801fa5c:	785b      	ldrb	r3, [r3, #1]
 801fa5e:	9201      	str	r2, [sp, #4]
 801fa60:	e7e7      	b.n	801fa32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fa62:	2203      	movs	r2, #3
 801fa64:	4615      	mov	r5, r2
 801fa66:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fa68:	9a03      	ldr	r2, [sp, #12]
 801fa6a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fa6e:	9905      	ldr	r1, [sp, #20]
 801fa70:	4563      	cmp	r3, ip
 801fa72:	eb01 0502 	add.w	r5, r1, r2
 801fa76:	9902      	ldr	r1, [sp, #8]
 801fa78:	bf29      	itett	cs
 801fa7a:	eba3 080c 	subcs.w	r8, r3, ip
 801fa7e:	ebac 0603 	subcc.w	r6, ip, r3
 801fa82:	fa1f f888 	uxthcs.w	r8, r8
 801fa86:	46e1      	movcs	r9, ip
 801fa88:	bf2f      	iteee	cs
 801fa8a:	4626      	movcs	r6, r4
 801fa8c:	b2b6      	uxthcc	r6, r6
 801fa8e:	4699      	movcc	r9, r3
 801fa90:	46a0      	movcc	r8, r4
 801fa92:	29ff      	cmp	r1, #255	; 0xff
 801fa94:	d04a      	beq.n	801fb2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801fa96:	9f06      	ldr	r7, [sp, #24]
 801fa98:	78a9      	ldrb	r1, [r5, #2]
 801fa9a:	9004      	str	r0, [sp, #16]
 801fa9c:	4379      	muls	r1, r7
 801fa9e:	910a      	str	r1, [sp, #40]	; 0x28
 801faa0:	7869      	ldrb	r1, [r5, #1]
 801faa2:	4379      	muls	r1, r7
 801faa4:	910b      	str	r1, [sp, #44]	; 0x2c
 801faa6:	9905      	ldr	r1, [sp, #20]
 801faa8:	5c8a      	ldrb	r2, [r1, r2]
 801faaa:	437a      	muls	r2, r7
 801faac:	920c      	str	r2, [sp, #48]	; 0x30
 801faae:	46ca      	mov	sl, r9
 801fab0:	f1ba 0f00 	cmp.w	sl, #0
 801fab4:	d03d      	beq.n	801fb32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801fab6:	9a04      	ldr	r2, [sp, #16]
 801fab8:	9f07      	ldr	r7, [sp, #28]
 801faba:	8812      	ldrh	r2, [r2, #0]
 801fabc:	1215      	asrs	r5, r2, #8
 801fabe:	46be      	mov	lr, r7
 801fac0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fac4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801fac6:	10d1      	asrs	r1, r2, #3
 801fac8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801facc:	fb05 750e 	mla	r5, r5, lr, r7
 801fad0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fad4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801fad6:	00d2      	lsls	r2, r2, #3
 801fad8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fadc:	fb01 710e 	mla	r1, r1, lr, r7
 801fae0:	b2d2      	uxtb	r2, r2
 801fae2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fae4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fae8:	b2ad      	uxth	r5, r5
 801faea:	fb02 720e 	mla	r2, r2, lr, r7
 801faee:	b292      	uxth	r2, r2
 801faf0:	f105 0e01 	add.w	lr, r5, #1
 801faf4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801faf8:	f102 0e01 	add.w	lr, r2, #1
 801fafc:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801fb00:	b289      	uxth	r1, r1
 801fb02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fb06:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fb0a:	4315      	orrs	r5, r2
 801fb0c:	1c4a      	adds	r2, r1, #1
 801fb0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fb12:	0949      	lsrs	r1, r1, #5
 801fb14:	9a04      	ldr	r2, [sp, #16]
 801fb16:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fb1a:	430d      	orrs	r5, r1
 801fb1c:	f822 5b02 	strh.w	r5, [r2], #2
 801fb20:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fb24:	9204      	str	r2, [sp, #16]
 801fb26:	fa1f fa8a 	uxth.w	sl, sl
 801fb2a:	e7c1      	b.n	801fab0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801fb2c:	4649      	mov	r1, r9
 801fb2e:	4686      	mov	lr, r0
 801fb30:	b999      	cbnz	r1, 801fb5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801fb32:	4563      	cmp	r3, ip
 801fb34:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801fb38:	d38a      	bcc.n	801fa50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fb3a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801fb3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fb40:	fa1f f68b 	uxth.w	r6, fp
 801fb44:	1ba4      	subs	r4, r4, r6
 801fb46:	881b      	ldrh	r3, [r3, #0]
 801fb48:	b2a4      	uxth	r4, r4
 801fb4a:	2c00      	cmp	r4, #0
 801fb4c:	eba3 030b 	sub.w	r3, r3, fp
 801fb50:	bf18      	it	ne
 801fb52:	2600      	movne	r6, #0
 801fb54:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fb58:	e77a      	b.n	801fa50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fb5a:	78aa      	ldrb	r2, [r5, #2]
 801fb5c:	4f0e      	ldr	r7, [pc, #56]	; (801fb98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801fb5e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801fb62:	786a      	ldrb	r2, [r5, #1]
 801fb64:	00d2      	lsls	r2, r2, #3
 801fb66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb6a:	ea4a 0202 	orr.w	r2, sl, r2
 801fb6e:	f895 a000 	ldrb.w	sl, [r5]
 801fb72:	3901      	subs	r1, #1
 801fb74:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801fb78:	f82e 2b02 	strh.w	r2, [lr], #2
 801fb7c:	b289      	uxth	r1, r1
 801fb7e:	e7d7      	b.n	801fb30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801fb80:	4b03      	ldr	r3, [pc, #12]	; (801fb90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fb82:	6818      	ldr	r0, [r3, #0]
 801fb84:	6803      	ldr	r3, [r0, #0]
 801fb86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fb88:	4798      	blx	r3
 801fb8a:	b013      	add	sp, #76	; 0x4c
 801fb8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb90:	2001383c 	.word	0x2001383c
 801fb94:	20013836 	.word	0x20013836
 801fb98:	fffff800 	.word	0xfffff800

0801fb9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fb9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fba0:	b09d      	sub	sp, #116	; 0x74
 801fba2:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801fba6:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801fbaa:	920e      	str	r2, [sp, #56]	; 0x38
 801fbac:	461c      	mov	r4, r3
 801fbae:	4683      	mov	fp, r0
 801fbb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fbb2:	2a00      	cmp	r2, #0
 801fbb4:	f000 81e0 	beq.w	801ff78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801fbb8:	6820      	ldr	r0, [r4, #0]
 801fbba:	6861      	ldr	r1, [r4, #4]
 801fbbc:	aa18      	add	r2, sp, #96	; 0x60
 801fbbe:	c203      	stmia	r2!, {r0, r1}
 801fbc0:	6818      	ldr	r0, [r3, #0]
 801fbc2:	6859      	ldr	r1, [r3, #4]
 801fbc4:	aa1a      	add	r2, sp, #104	; 0x68
 801fbc6:	c203      	stmia	r2!, {r0, r1}
 801fbc8:	a818      	add	r0, sp, #96	; 0x60
 801fbca:	f7f8 fd45 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fbce:	4621      	mov	r1, r4
 801fbd0:	a81a      	add	r0, sp, #104	; 0x68
 801fbd2:	f7f8 fd85 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fbd6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801fbda:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801fbde:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fbe2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fbe6:	bfd7      	itett	le
 801fbe8:	b29a      	uxthle	r2, r3
 801fbea:	2201      	movgt	r2, #1
 801fbec:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fbf0:	fb91 f2f2 	sdivle	r2, r1, r2
 801fbf4:	9202      	str	r2, [sp, #8]
 801fbf6:	9802      	ldr	r0, [sp, #8]
 801fbf8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801fbfc:	fb92 f0f0 	sdiv	r0, r2, r0
 801fc00:	b280      	uxth	r0, r0
 801fc02:	900f      	str	r0, [sp, #60]	; 0x3c
 801fc04:	9902      	ldr	r1, [sp, #8]
 801fc06:	9802      	ldr	r0, [sp, #8]
 801fc08:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fc0a:	440c      	add	r4, r1
 801fc0c:	fb05 2510 	mls	r5, r5, r0, r2
 801fc10:	fb15 f503 	smulbb	r5, r5, r3
 801fc14:	3c01      	subs	r4, #1
 801fc16:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801fc1a:	fb94 f4f1 	sdiv	r4, r4, r1
 801fc1e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801fc22:	440d      	add	r5, r1
 801fc24:	4419      	add	r1, r3
 801fc26:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801fc2a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801fc2e:	441a      	add	r2, r3
 801fc30:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fc34:	9306      	str	r3, [sp, #24]
 801fc36:	4bb3      	ldr	r3, [pc, #716]	; (801ff04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801fc38:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801fc3c:	6818      	ldr	r0, [r3, #0]
 801fc3e:	6803      	ldr	r3, [r0, #0]
 801fc40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc42:	4798      	blx	r3
 801fc44:	4bb0      	ldr	r3, [pc, #704]	; (801ff08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801fc46:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801fc4a:	881a      	ldrh	r2, [r3, #0]
 801fc4c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801fc50:	9316      	str	r3, [sp, #88]	; 0x58
 801fc52:	fb02 7101 	mla	r1, r2, r1, r7
 801fc56:	3401      	adds	r4, #1
 801fc58:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801fc5c:	b2a4      	uxth	r4, r4
 801fc5e:	4356      	muls	r6, r2
 801fc60:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801fc64:	00a4      	lsls	r4, r4, #2
 801fc66:	920a      	str	r2, [sp, #40]	; 0x28
 801fc68:	1d22      	adds	r2, r4, #4
 801fc6a:	b2ad      	uxth	r5, r5
 801fc6c:	9213      	str	r2, [sp, #76]	; 0x4c
 801fc6e:	4ba7      	ldr	r3, [pc, #668]	; (801ff0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801fc70:	9a06      	ldr	r2, [sp, #24]
 801fc72:	2d00      	cmp	r5, #0
 801fc74:	bf0c      	ite	eq
 801fc76:	4611      	moveq	r1, r2
 801fc78:	2100      	movne	r1, #0
 801fc7a:	2200      	movs	r2, #0
 801fc7c:	eba3 030b 	sub.w	r3, r3, fp
 801fc80:	b289      	uxth	r1, r1
 801fc82:	920d      	str	r2, [sp, #52]	; 0x34
 801fc84:	9317      	str	r3, [sp, #92]	; 0x5c
 801fc86:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fc88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fc8a:	fa12 f383 	uxtah	r3, r2, r3
 801fc8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fc90:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fc94:	3304      	adds	r3, #4
 801fc96:	9308      	str	r3, [sp, #32]
 801fc98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc9a:	4543      	cmp	r3, r8
 801fc9c:	f240 8167 	bls.w	801ff6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fca0:	9a02      	ldr	r2, [sp, #8]
 801fca2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801fca6:	fbb5 f3f3 	udiv	r3, r5, r3
 801fcaa:	1ad3      	subs	r3, r2, r3
 801fcac:	b29b      	uxth	r3, r3
 801fcae:	9314      	str	r3, [sp, #80]	; 0x50
 801fcb0:	9b08      	ldr	r3, [sp, #32]
 801fcb2:	9808      	ldr	r0, [sp, #32]
 801fcb4:	785a      	ldrb	r2, [r3, #1]
 801fcb6:	789b      	ldrb	r3, [r3, #2]
 801fcb8:	7800      	ldrb	r0, [r0, #0]
 801fcba:	9010      	str	r0, [sp, #64]	; 0x40
 801fcbc:	021b      	lsls	r3, r3, #8
 801fcbe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801fcc2:	9a08      	ldr	r2, [sp, #32]
 801fcc4:	78d2      	ldrb	r2, [r2, #3]
 801fcc6:	4313      	orrs	r3, r2
 801fcc8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fcca:	3001      	adds	r0, #1
 801fccc:	441a      	add	r2, r3
 801fcce:	9007      	str	r0, [sp, #28]
 801fcd0:	1c50      	adds	r0, r2, #1
 801fcd2:	9005      	str	r0, [sp, #20]
 801fcd4:	7852      	ldrb	r2, [r2, #1]
 801fcd6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fcd8:	0212      	lsls	r2, r2, #8
 801fcda:	5cc3      	ldrb	r3, [r0, r3]
 801fcdc:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801fce0:	431a      	orrs	r2, r3
 801fce2:	b293      	uxth	r3, r2
 801fce4:	930b      	str	r3, [sp, #44]	; 0x2c
 801fce6:	2300      	movs	r3, #0
 801fce8:	9309      	str	r3, [sp, #36]	; 0x24
 801fcea:	2301      	movs	r3, #1
 801fcec:	9301      	str	r3, [sp, #4]
 801fcee:	9304      	str	r3, [sp, #16]
 801fcf0:	2300      	movs	r3, #0
 801fcf2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801fcf6:	9303      	str	r3, [sp, #12]
 801fcf8:	f04f 0e01 	mov.w	lr, #1
 801fcfc:	2d00      	cmp	r5, #0
 801fcfe:	d07c      	beq.n	801fdfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801fd00:	45ae      	cmp	lr, r5
 801fd02:	d26b      	bcs.n	801fddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801fd04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd06:	eba5 050e 	sub.w	r5, r5, lr
 801fd0a:	4543      	cmp	r3, r8
 801fd0c:	b2ad      	uxth	r5, r5
 801fd0e:	460c      	mov	r4, r1
 801fd10:	d802      	bhi.n	801fd18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801fd12:	e070      	b.n	801fdf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801fd14:	2b00      	cmp	r3, #0
 801fd16:	d15c      	bne.n	801fdd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fd18:	9b05      	ldr	r3, [sp, #20]
 801fd1a:	9a04      	ldr	r2, [sp, #16]
 801fd1c:	785b      	ldrb	r3, [r3, #1]
 801fd1e:	9904      	ldr	r1, [sp, #16]
 801fd20:	f1c2 0207 	rsb	r2, r2, #7
 801fd24:	4093      	lsls	r3, r2
 801fd26:	005b      	lsls	r3, r3, #1
 801fd28:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fd2c:	9b05      	ldr	r3, [sp, #20]
 801fd2e:	781b      	ldrb	r3, [r3, #0]
 801fd30:	410b      	asrs	r3, r1
 801fd32:	3101      	adds	r1, #1
 801fd34:	b2c9      	uxtb	r1, r1
 801fd36:	2908      	cmp	r1, #8
 801fd38:	9104      	str	r1, [sp, #16]
 801fd3a:	9905      	ldr	r1, [sp, #20]
 801fd3c:	bf0a      	itet	eq
 801fd3e:	3102      	addeq	r1, #2
 801fd40:	3101      	addne	r1, #1
 801fd42:	9105      	streq	r1, [sp, #20]
 801fd44:	b2db      	uxtb	r3, r3
 801fd46:	bf0a      	itet	eq
 801fd48:	2100      	moveq	r1, #0
 801fd4a:	9105      	strne	r1, [sp, #20]
 801fd4c:	9104      	streq	r1, [sp, #16]
 801fd4e:	4313      	orrs	r3, r2
 801fd50:	9910      	ldr	r1, [sp, #64]	; 0x40
 801fd52:	b29a      	uxth	r2, r3
 801fd54:	4291      	cmp	r1, r2
 801fd56:	d30a      	bcc.n	801fd6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fd58:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801fd5c:	2301      	movs	r3, #1
 801fd5e:	9907      	ldr	r1, [sp, #28]
 801fd60:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801fd64:	d30f      	bcc.n	801fd86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fd66:	2100      	movs	r1, #0
 801fd68:	9301      	str	r3, [sp, #4]
 801fd6a:	9103      	str	r1, [sp, #12]
 801fd6c:	e032      	b.n	801fdd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801fd6e:	9b07      	ldr	r3, [sp, #28]
 801fd70:	429a      	cmp	r2, r3
 801fd72:	d318      	bcc.n	801fda6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801fd74:	9b01      	ldr	r3, [sp, #4]
 801fd76:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801fd7a:	445b      	add	r3, fp
 801fd7c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801fd80:	9b01      	ldr	r3, [sp, #4]
 801fd82:	3301      	adds	r3, #1
 801fd84:	b29b      	uxth	r3, r3
 801fd86:	9907      	ldr	r1, [sp, #28]
 801fd88:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801fd8c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fd90:	7108      	strb	r0, [r1, #4]
 801fd92:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fd94:	80c8      	strh	r0, [r1, #6]
 801fd96:	9801      	ldr	r0, [sp, #4]
 801fd98:	3001      	adds	r0, #1
 801fd9a:	7148      	strb	r0, [r1, #5]
 801fd9c:	9907      	ldr	r1, [sp, #28]
 801fd9e:	3101      	adds	r1, #1
 801fda0:	b289      	uxth	r1, r1
 801fda2:	9107      	str	r1, [sp, #28]
 801fda4:	e7df      	b.n	801fd66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801fda6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801fdaa:	4611      	mov	r1, r2
 801fdac:	795b      	ldrb	r3, [r3, #5]
 801fdae:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801fdb2:	4458      	add	r0, fp
 801fdb4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801fdb6:	4406      	add	r6, r0
 801fdb8:	2e00      	cmp	r6, #0
 801fdba:	dd06      	ble.n	801fdca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801fdbc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fdc0:	790e      	ldrb	r6, [r1, #4]
 801fdc2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801fdc6:	88c9      	ldrh	r1, [r1, #6]
 801fdc8:	e7f4      	b.n	801fdb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801fdca:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801fdce:	b29b      	uxth	r3, r3
 801fdd0:	e7c5      	b.n	801fd5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801fdd2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fdd4:	920b      	str	r2, [sp, #44]	; 0x2c
 801fdd6:	4621      	mov	r1, r4
 801fdd8:	469e      	mov	lr, r3
 801fdda:	e78f      	b.n	801fcfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801fddc:	9a03      	ldr	r2, [sp, #12]
 801fdde:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801fde2:	442a      	add	r2, r5
 801fde4:	ebae 0305 	sub.w	r3, lr, r5
 801fde8:	b292      	uxth	r2, r2
 801fdea:	b29b      	uxth	r3, r3
 801fdec:	9203      	str	r2, [sp, #12]
 801fdee:	2500      	movs	r5, #0
 801fdf0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fdf2:	4542      	cmp	r2, r8
 801fdf4:	d88e      	bhi.n	801fd14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801fdf6:	4621      	mov	r1, r4
 801fdf8:	e74e      	b.n	801fc98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801fdfa:	458e      	cmp	lr, r1
 801fdfc:	bf29      	itett	cs
 801fdfe:	ebae 0301 	subcs.w	r3, lr, r1
 801fe02:	eba1 040e 	subcc.w	r4, r1, lr
 801fe06:	b29b      	uxthcs	r3, r3
 801fe08:	910c      	strcs	r1, [sp, #48]	; 0x30
 801fe0a:	bf2f      	iteee	cs
 801fe0c:	462c      	movcs	r4, r5
 801fe0e:	b2a4      	uxthcc	r4, r4
 801fe10:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801fe14:	462b      	movcc	r3, r5
 801fe16:	f04f 0900 	mov.w	r9, #0
 801fe1a:	9a03      	ldr	r2, [sp, #12]
 801fe1c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fe1e:	444a      	add	r2, r9
 801fe20:	4548      	cmp	r0, r9
 801fe22:	b292      	uxth	r2, r2
 801fe24:	d074      	beq.n	801ff10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801fe26:	445a      	add	r2, fp
 801fe28:	2004      	movs	r0, #4
 801fe2a:	4605      	mov	r5, r0
 801fe2c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801fe30:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fe32:	fb15 0202 	smlabb	r2, r5, r2, r0
 801fe36:	9812      	ldr	r0, [sp, #72]	; 0x48
 801fe38:	5880      	ldr	r0, [r0, r2]
 801fe3a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801fe3e:	d014      	beq.n	801fe6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fe40:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801fe44:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801fe48:	d112      	bne.n	801fe70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fe4a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe4c:	2aff      	cmp	r2, #255	; 0xff
 801fe4e:	d10f      	bne.n	801fe70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fe50:	0942      	lsrs	r2, r0, #5
 801fe52:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801fe56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe5a:	f025 0507 	bic.w	r5, r5, #7
 801fe5e:	4315      	orrs	r5, r2
 801fe60:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801fe64:	4305      	orrs	r5, r0
 801fe66:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801fe6a:	f109 0901 	add.w	r9, r9, #1
 801fe6e:	e7d4      	b.n	801fe1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801fe70:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801fe74:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801fe78:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801fe7c:	9215      	str	r2, [sp, #84]	; 0x54
 801fe7e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe80:	fb02 fa0a 	mul.w	sl, r2, sl
 801fe84:	f10a 0201 	add.w	r2, sl, #1
 801fe88:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801fe8c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801fe90:	1212      	asrs	r2, r2, #8
 801fe92:	fa1f fa82 	uxth.w	sl, r2
 801fe96:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801fe9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801fe9e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fea2:	43d2      	mvns	r2, r2
 801fea4:	b2d2      	uxtb	r2, r2
 801fea6:	fb16 f60a 	smulbb	r6, r6, sl
 801feaa:	fa5f fc8c 	uxtb.w	ip, ip
 801feae:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801feb2:	b2c0      	uxtb	r0, r0
 801feb4:	fb07 6702 	mla	r7, r7, r2, r6
 801feb8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801febc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801febe:	fb10 f00a 	smulbb	r0, r0, sl
 801fec2:	fb0c 0002 	mla	r0, ip, r2, r0
 801fec6:	b2ed      	uxtb	r5, r5
 801fec8:	b2bf      	uxth	r7, r7
 801feca:	fb15 f50a 	smulbb	r5, r5, sl
 801fece:	b280      	uxth	r0, r0
 801fed0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801fed4:	fb06 5602 	mla	r6, r6, r2, r5
 801fed8:	1c7a      	adds	r2, r7, #1
 801feda:	1c45      	adds	r5, r0, #1
 801fedc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801fee0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801fee4:	b2b6      	uxth	r6, r6
 801fee6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801feea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801feee:	432f      	orrs	r7, r5
 801fef0:	1c75      	adds	r5, r6, #1
 801fef2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801fef6:	096d      	lsrs	r5, r5, #5
 801fef8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fefc:	432f      	orrs	r7, r5
 801fefe:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801ff02:	e7b2      	b.n	801fe6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ff04:	2001383c 	.word	0x2001383c
 801ff08:	20013836 	.word	0x20013836
 801ff0c:	fffff7fb 	.word	0xfffff7fb
 801ff10:	9203      	str	r2, [sp, #12]
 801ff12:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ff14:	458e      	cmp	lr, r1
 801ff16:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ff1a:	f4ff af68 	bcc.w	801fdee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801ff1e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801ff20:	9906      	ldr	r1, [sp, #24]
 801ff22:	8812      	ldrh	r2, [r2, #0]
 801ff24:	1a52      	subs	r2, r2, r1
 801ff26:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ff2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ff2c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801ff2e:	3201      	adds	r2, #1
 801ff30:	428a      	cmp	r2, r1
 801ff32:	9209      	str	r2, [sp, #36]	; 0x24
 801ff34:	d111      	bne.n	801ff5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801ff36:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801ff3a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801ff3e:	9b06      	ldr	r3, [sp, #24]
 801ff40:	eba5 0509 	sub.w	r5, r5, r9
 801ff44:	b2ad      	uxth	r5, r5
 801ff46:	2d00      	cmp	r5, #0
 801ff48:	bf08      	it	eq
 801ff4a:	4619      	moveq	r1, r3
 801ff4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff4e:	bf18      	it	ne
 801ff50:	2100      	movne	r1, #0
 801ff52:	3301      	adds	r3, #1
 801ff54:	930d      	str	r3, [sp, #52]	; 0x34
 801ff56:	b289      	uxth	r1, r1
 801ff58:	e695      	b.n	801fc86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801ff5a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ff5e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801ff62:	1b2d      	subs	r5, r5, r4
 801ff64:	b2ad      	uxth	r5, r5
 801ff66:	2d00      	cmp	r5, #0
 801ff68:	bf18      	it	ne
 801ff6a:	2400      	movne	r4, #0
 801ff6c:	e740      	b.n	801fdf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801ff6e:	4b04      	ldr	r3, [pc, #16]	; (801ff80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801ff70:	6818      	ldr	r0, [r3, #0]
 801ff72:	6803      	ldr	r3, [r0, #0]
 801ff74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ff76:	4798      	blx	r3
 801ff78:	b01d      	add	sp, #116	; 0x74
 801ff7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff7e:	bf00      	nop
 801ff80:	2001383c 	.word	0x2001383c

0801ff84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ff84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff88:	b09f      	sub	sp, #124	; 0x7c
 801ff8a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801ff8e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801ff92:	920a      	str	r2, [sp, #40]	; 0x28
 801ff94:	461d      	mov	r5, r3
 801ff96:	4604      	mov	r4, r0
 801ff98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff9a:	2a00      	cmp	r2, #0
 801ff9c:	f000 81fa 	beq.w	8020394 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801ffa0:	6828      	ldr	r0, [r5, #0]
 801ffa2:	6869      	ldr	r1, [r5, #4]
 801ffa4:	aa1a      	add	r2, sp, #104	; 0x68
 801ffa6:	c203      	stmia	r2!, {r0, r1}
 801ffa8:	6818      	ldr	r0, [r3, #0]
 801ffaa:	6859      	ldr	r1, [r3, #4]
 801ffac:	aa1c      	add	r2, sp, #112	; 0x70
 801ffae:	c203      	stmia	r2!, {r0, r1}
 801ffb0:	a81a      	add	r0, sp, #104	; 0x68
 801ffb2:	f7f8 fb51 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ffb6:	4629      	mov	r1, r5
 801ffb8:	a81c      	add	r0, sp, #112	; 0x70
 801ffba:	f7f8 fb91 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ffbe:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ffc2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ffc6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801ffca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ffce:	bfd7      	itett	le
 801ffd0:	b29a      	uxthle	r2, r3
 801ffd2:	2201      	movgt	r2, #1
 801ffd4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ffd8:	fb91 f2f2 	sdivle	r2, r1, r2
 801ffdc:	9201      	str	r2, [sp, #4]
 801ffde:	9801      	ldr	r0, [sp, #4]
 801ffe0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801ffe4:	fb92 f0f0 	sdiv	r0, r2, r0
 801ffe8:	b280      	uxth	r0, r0
 801ffea:	9010      	str	r0, [sp, #64]	; 0x40
 801ffec:	9901      	ldr	r1, [sp, #4]
 801ffee:	9801      	ldr	r0, [sp, #4]
 801fff0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801fff2:	440e      	add	r6, r1
 801fff4:	fb05 2510 	mls	r5, r5, r0, r2
 801fff8:	fb15 f503 	smulbb	r5, r5, r3
 801fffc:	3e01      	subs	r6, #1
 801fffe:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8020002:	fb96 f6f1 	sdiv	r6, r6, r1
 8020006:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 802000a:	440d      	add	r5, r1
 802000c:	4419      	add	r1, r3
 802000e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8020012:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8020016:	441a      	add	r2, r3
 8020018:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 802001c:	9304      	str	r3, [sp, #16]
 802001e:	4b96      	ldr	r3, [pc, #600]	; (8020278 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8020020:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8020024:	6818      	ldr	r0, [r3, #0]
 8020026:	6803      	ldr	r3, [r0, #0]
 8020028:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802002a:	4798      	blx	r3
 802002c:	4b93      	ldr	r3, [pc, #588]	; (802027c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 802002e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8020032:	881a      	ldrh	r2, [r3, #0]
 8020034:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8020038:	9318      	str	r3, [sp, #96]	; 0x60
 802003a:	fb02 c101 	mla	r1, r2, r1, ip
 802003e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8020042:	4357      	muls	r7, r2
 8020044:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8020048:	3601      	adds	r6, #1
 802004a:	920b      	str	r2, [sp, #44]	; 0x2c
 802004c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802004e:	4b8c      	ldr	r3, [pc, #560]	; (8020280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8020050:	b2b6      	uxth	r6, r6
 8020052:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8020056:	1d32      	adds	r2, r6, #4
 8020058:	9206      	str	r2, [sp, #24]
 802005a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802005c:	43d2      	mvns	r2, r2
 802005e:	b2d2      	uxtb	r2, r2
 8020060:	b2ad      	uxth	r5, r5
 8020062:	9215      	str	r2, [sp, #84]	; 0x54
 8020064:	9a04      	ldr	r2, [sp, #16]
 8020066:	2d00      	cmp	r5, #0
 8020068:	bf0c      	ite	eq
 802006a:	4611      	moveq	r1, r2
 802006c:	2100      	movne	r1, #0
 802006e:	2200      	movs	r2, #0
 8020070:	1b1b      	subs	r3, r3, r4
 8020072:	b289      	uxth	r1, r1
 8020074:	920d      	str	r2, [sp, #52]	; 0x34
 8020076:	9319      	str	r3, [sp, #100]	; 0x64
 8020078:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802007a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802007c:	fa12 f383 	uxtah	r3, r2, r3
 8020080:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020082:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8020086:	3304      	adds	r3, #4
 8020088:	9307      	str	r3, [sp, #28]
 802008a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802008c:	455b      	cmp	r3, fp
 802008e:	f240 817c 	bls.w	802038a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8020092:	9a01      	ldr	r2, [sp, #4]
 8020094:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8020098:	fbb5 f3f3 	udiv	r3, r5, r3
 802009c:	1ad3      	subs	r3, r2, r3
 802009e:	b29b      	uxth	r3, r3
 80200a0:	9316      	str	r3, [sp, #88]	; 0x58
 80200a2:	9b07      	ldr	r3, [sp, #28]
 80200a4:	9807      	ldr	r0, [sp, #28]
 80200a6:	785a      	ldrb	r2, [r3, #1]
 80200a8:	789b      	ldrb	r3, [r3, #2]
 80200aa:	7800      	ldrb	r0, [r0, #0]
 80200ac:	9011      	str	r0, [sp, #68]	; 0x44
 80200ae:	021b      	lsls	r3, r3, #8
 80200b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80200b4:	9a07      	ldr	r2, [sp, #28]
 80200b6:	78d2      	ldrb	r2, [r2, #3]
 80200b8:	4313      	orrs	r3, r2
 80200ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80200bc:	3001      	adds	r0, #1
 80200be:	441a      	add	r2, r3
 80200c0:	9005      	str	r0, [sp, #20]
 80200c2:	1c50      	adds	r0, r2, #1
 80200c4:	9003      	str	r0, [sp, #12]
 80200c6:	7852      	ldrb	r2, [r2, #1]
 80200c8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80200ca:	0212      	lsls	r2, r2, #8
 80200cc:	5cc3      	ldrb	r3, [r0, r3]
 80200ce:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80200d2:	431a      	orrs	r2, r3
 80200d4:	b293      	uxth	r3, r2
 80200d6:	930c      	str	r3, [sp, #48]	; 0x30
 80200d8:	2300      	movs	r3, #0
 80200da:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 80200de:	9308      	str	r3, [sp, #32]
 80200e0:	461a      	mov	r2, r3
 80200e2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80200e6:	930e      	str	r3, [sp, #56]	; 0x38
 80200e8:	f04f 0801 	mov.w	r8, #1
 80200ec:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80200f0:	f8cd 8008 	str.w	r8, [sp, #8]
 80200f4:	46c4      	mov	ip, r8
 80200f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80200f8:	2d00      	cmp	r5, #0
 80200fa:	d07c      	beq.n	80201f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80200fc:	45ac      	cmp	ip, r5
 80200fe:	d26c      	bcs.n	80201da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8020100:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020102:	eba5 050c 	sub.w	r5, r5, ip
 8020106:	455b      	cmp	r3, fp
 8020108:	b2ad      	uxth	r5, r5
 802010a:	4608      	mov	r0, r1
 802010c:	d802      	bhi.n	8020114 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802010e:	e070      	b.n	80201f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8020110:	2b00      	cmp	r3, #0
 8020112:	d15c      	bne.n	80201ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020114:	9b03      	ldr	r3, [sp, #12]
 8020116:	9a02      	ldr	r2, [sp, #8]
 8020118:	785b      	ldrb	r3, [r3, #1]
 802011a:	9902      	ldr	r1, [sp, #8]
 802011c:	f1c2 0207 	rsb	r2, r2, #7
 8020120:	4093      	lsls	r3, r2
 8020122:	005b      	lsls	r3, r3, #1
 8020124:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8020128:	9b03      	ldr	r3, [sp, #12]
 802012a:	781b      	ldrb	r3, [r3, #0]
 802012c:	410b      	asrs	r3, r1
 802012e:	3101      	adds	r1, #1
 8020130:	b2c9      	uxtb	r1, r1
 8020132:	2908      	cmp	r1, #8
 8020134:	9102      	str	r1, [sp, #8]
 8020136:	9903      	ldr	r1, [sp, #12]
 8020138:	bf0a      	itet	eq
 802013a:	3102      	addeq	r1, #2
 802013c:	3101      	addne	r1, #1
 802013e:	9103      	streq	r1, [sp, #12]
 8020140:	b2db      	uxtb	r3, r3
 8020142:	bf0a      	itet	eq
 8020144:	2100      	moveq	r1, #0
 8020146:	9103      	strne	r1, [sp, #12]
 8020148:	9102      	streq	r1, [sp, #8]
 802014a:	4313      	orrs	r3, r2
 802014c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802014e:	b29a      	uxth	r2, r3
 8020150:	4291      	cmp	r1, r2
 8020152:	d30a      	bcc.n	802016a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8020154:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8020158:	2301      	movs	r3, #1
 802015a:	9905      	ldr	r1, [sp, #20]
 802015c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8020160:	d30f      	bcc.n	8020182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8020162:	2100      	movs	r1, #0
 8020164:	4698      	mov	r8, r3
 8020166:	9100      	str	r1, [sp, #0]
 8020168:	e032      	b.n	80201d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 802016a:	9b05      	ldr	r3, [sp, #20]
 802016c:	429a      	cmp	r2, r3
 802016e:	d318      	bcc.n	80201a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8020170:	eb04 0308 	add.w	r3, r4, r8
 8020174:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8020178:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 802017c:	f108 0301 	add.w	r3, r8, #1
 8020180:	b29b      	uxth	r3, r3
 8020182:	9905      	ldr	r1, [sp, #20]
 8020184:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8020188:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 802018c:	710e      	strb	r6, [r1, #4]
 802018e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020190:	80ce      	strh	r6, [r1, #6]
 8020192:	f108 0601 	add.w	r6, r8, #1
 8020196:	714e      	strb	r6, [r1, #5]
 8020198:	9905      	ldr	r1, [sp, #20]
 802019a:	3101      	adds	r1, #1
 802019c:	b289      	uxth	r1, r1
 802019e:	9105      	str	r1, [sp, #20]
 80201a0:	e7df      	b.n	8020162 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 80201a2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80201a6:	4611      	mov	r1, r2
 80201a8:	795b      	ldrb	r3, [r3, #5]
 80201aa:	f603 0604 	addw	r6, r3, #2052	; 0x804
 80201ae:	4426      	add	r6, r4
 80201b0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 80201b2:	4437      	add	r7, r6
 80201b4:	2f00      	cmp	r7, #0
 80201b6:	dd06      	ble.n	80201c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80201b8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80201bc:	790f      	ldrb	r7, [r1, #4]
 80201be:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80201c2:	88c9      	ldrh	r1, [r1, #6]
 80201c4:	e7f4      	b.n	80201b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 80201c6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 80201ca:	b29b      	uxth	r3, r3
 80201cc:	e7c5      	b.n	802015a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80201ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80201d0:	920c      	str	r2, [sp, #48]	; 0x30
 80201d2:	4601      	mov	r1, r0
 80201d4:	9a00      	ldr	r2, [sp, #0]
 80201d6:	469c      	mov	ip, r3
 80201d8:	e78e      	b.n	80200f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 80201da:	1957      	adds	r7, r2, r5
 80201dc:	ebac 0305 	sub.w	r3, ip, r5
 80201e0:	b2ba      	uxth	r2, r7
 80201e2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80201e6:	9200      	str	r2, [sp, #0]
 80201e8:	b29b      	uxth	r3, r3
 80201ea:	2500      	movs	r5, #0
 80201ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80201ee:	455a      	cmp	r2, fp
 80201f0:	d88e      	bhi.n	8020110 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80201f2:	4601      	mov	r1, r0
 80201f4:	e749      	b.n	802008a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80201f6:	458c      	cmp	ip, r1
 80201f8:	bf2c      	ite	cs
 80201fa:	4628      	movcs	r0, r5
 80201fc:	462b      	movcc	r3, r5
 80201fe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8020200:	bf27      	ittee	cs
 8020202:	9109      	strcs	r1, [sp, #36]	; 0x24
 8020204:	ebac 0301 	subcs.w	r3, ip, r1
 8020208:	eba1 000c 	subcc.w	r0, r1, ip
 802020c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8020210:	bf2c      	ite	cs
 8020212:	b29b      	uxthcs	r3, r3
 8020214:	b280      	uxthcc	r0, r0
 8020216:	2dff      	cmp	r5, #255	; 0xff
 8020218:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802021a:	eb02 0705 	add.w	r7, r2, r5
 802021e:	b2bd      	uxth	r5, r7
 8020220:	9500      	str	r5, [sp, #0]
 8020222:	d12f      	bne.n	8020284 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8020224:	465e      	mov	r6, fp
 8020226:	9d00      	ldr	r5, [sp, #0]
 8020228:	42aa      	cmp	r2, r5
 802022a:	f040 8084 	bne.w	8020336 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 802022e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020230:	458c      	cmp	ip, r1
 8020232:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020236:	d3d8      	bcc.n	80201ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8020238:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802023a:	9904      	ldr	r1, [sp, #16]
 802023c:	8812      	ldrh	r2, [r2, #0]
 802023e:	1a52      	subs	r2, r2, r1
 8020240:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020244:	9a08      	ldr	r2, [sp, #32]
 8020246:	9916      	ldr	r1, [sp, #88]	; 0x58
 8020248:	3201      	adds	r2, #1
 802024a:	428a      	cmp	r2, r1
 802024c:	9208      	str	r2, [sp, #32]
 802024e:	f040 8092 	bne.w	8020376 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8020252:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8020256:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 802025a:	9b04      	ldr	r3, [sp, #16]
 802025c:	eba5 050c 	sub.w	r5, r5, ip
 8020260:	b2ad      	uxth	r5, r5
 8020262:	2d00      	cmp	r5, #0
 8020264:	bf08      	it	eq
 8020266:	4619      	moveq	r1, r3
 8020268:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802026a:	bf18      	it	ne
 802026c:	2100      	movne	r1, #0
 802026e:	3301      	adds	r3, #1
 8020270:	930d      	str	r3, [sp, #52]	; 0x34
 8020272:	b289      	uxth	r1, r1
 8020274:	e700      	b.n	8020078 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020276:	bf00      	nop
 8020278:	2001383c 	.word	0x2001383c
 802027c:	20013836 	.word	0x20013836
 8020280:	fffff7fb 	.word	0xfffff7fb
 8020284:	46d9      	mov	r9, fp
 8020286:	9d00      	ldr	r5, [sp, #0]
 8020288:	42aa      	cmp	r2, r5
 802028a:	d0d0      	beq.n	802022e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 802028c:	1c55      	adds	r5, r2, #1
 802028e:	4422      	add	r2, r4
 8020290:	9517      	str	r5, [sp, #92]	; 0x5c
 8020292:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8020296:	9a06      	ldr	r2, [sp, #24]
 8020298:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802029c:	4472      	add	r2, lr
 802029e:	9212      	str	r2, [sp, #72]	; 0x48
 80202a0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80202a2:	f8b9 2000 	ldrh.w	r2, [r9]
 80202a6:	f897 a002 	ldrb.w	sl, [r7, #2]
 80202aa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80202ac:	1216      	asrs	r6, r2, #8
 80202ae:	fb1a fa07 	smulbb	sl, sl, r7
 80202b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80202b6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80202b8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80202bc:	fb06 a607 	mla	r6, r6, r7, sl
 80202c0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80202c2:	f897 a001 	ldrb.w	sl, [r7, #1]
 80202c6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80202c8:	10d5      	asrs	r5, r2, #3
 80202ca:	fb1a fa07 	smulbb	sl, sl, r7
 80202ce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80202d2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80202d4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80202d8:	fb05 a507 	mla	r5, r5, r7, sl
 80202dc:	9f06      	ldr	r7, [sp, #24]
 80202de:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80202e2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80202e4:	00d2      	lsls	r2, r2, #3
 80202e6:	fb1e fe07 	smulbb	lr, lr, r7
 80202ea:	b2d2      	uxtb	r2, r2
 80202ec:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80202ee:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80202f2:	b2b6      	uxth	r6, r6
 80202f4:	fb02 e207 	mla	r2, r2, r7, lr
 80202f8:	b292      	uxth	r2, r2
 80202fa:	b2ad      	uxth	r5, r5
 80202fc:	f106 0a01 	add.w	sl, r6, #1
 8020300:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8020304:	f102 0e01 	add.w	lr, r2, #1
 8020308:	f105 0a01 	add.w	sl, r5, #1
 802030c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8020310:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020314:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020318:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802031c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020320:	ea4e 0606 	orr.w	r6, lr, r6
 8020324:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020328:	ea46 060a 	orr.w	r6, r6, sl
 802032c:	f829 6b02 	strh.w	r6, [r9], #2
 8020330:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020334:	e7a7      	b.n	8020286 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8020336:	f102 0e01 	add.w	lr, r2, #1
 802033a:	4422      	add	r2, r4
 802033c:	9f06      	ldr	r7, [sp, #24]
 802033e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8020342:	9a06      	ldr	r2, [sp, #24]
 8020344:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020348:	eb02 0a05 	add.w	sl, r2, r5
 802034c:	4a13      	ldr	r2, [pc, #76]	; (802039c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 802034e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020352:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8020356:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802035a:	00d2      	lsls	r2, r2, #3
 802035c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020360:	ea49 0202 	orr.w	r2, r9, r2
 8020364:	f817 9005 	ldrb.w	r9, [r7, r5]
 8020368:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802036c:	f826 2b02 	strh.w	r2, [r6], #2
 8020370:	fa1f f28e 	uxth.w	r2, lr
 8020374:	e757      	b.n	8020226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8020376:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 802037a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 802037e:	1a2d      	subs	r5, r5, r0
 8020380:	b2ad      	uxth	r5, r5
 8020382:	2d00      	cmp	r5, #0
 8020384:	bf18      	it	ne
 8020386:	2000      	movne	r0, #0
 8020388:	e730      	b.n	80201ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 802038a:	4b05      	ldr	r3, [pc, #20]	; (80203a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 802038c:	6818      	ldr	r0, [r3, #0]
 802038e:	6803      	ldr	r3, [r0, #0]
 8020390:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020392:	4798      	blx	r3
 8020394:	b01f      	add	sp, #124	; 0x7c
 8020396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802039a:	bf00      	nop
 802039c:	fffff800 	.word	0xfffff800
 80203a0:	2001383c 	.word	0x2001383c

080203a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80203a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203a8:	b091      	sub	sp, #68	; 0x44
 80203aa:	469b      	mov	fp, r3
 80203ac:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80203b0:	4616      	mov	r6, r2
 80203b2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80203b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80203ba:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80203be:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80203c2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80203c6:	4604      	mov	r4, r0
 80203c8:	460d      	mov	r5, r1
 80203ca:	4640      	mov	r0, r8
 80203cc:	4659      	mov	r1, fp
 80203ce:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80203d2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80203d6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80203da:	f7f2 fb9f 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 80203de:	4631      	mov	r1, r6
 80203e0:	4640      	mov	r0, r8
 80203e2:	f7f2 fb9b 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 80203e6:	4b74      	ldr	r3, [pc, #464]	; (80205b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80203e8:	8818      	ldrh	r0, [r3, #0]
 80203ea:	4b74      	ldr	r3, [pc, #464]	; (80205bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80203ec:	8819      	ldrh	r1, [r3, #0]
 80203ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80203f2:	2b00      	cmp	r3, #0
 80203f4:	b202      	sxth	r2, r0
 80203f6:	b20e      	sxth	r6, r1
 80203f8:	da07      	bge.n	802040a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80203fa:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80203fe:	4463      	add	r3, ip
 8020400:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8020404:	2300      	movs	r3, #0
 8020406:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 802040a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802040e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020412:	1ad2      	subs	r2, r2, r3
 8020414:	4594      	cmp	ip, r2
 8020416:	bfc4      	itt	gt
 8020418:	1ac2      	subgt	r2, r0, r3
 802041a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 802041e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020422:	2a00      	cmp	r2, #0
 8020424:	da07      	bge.n	8020436 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8020426:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 802042a:	4462      	add	r2, ip
 802042c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8020430:	2200      	movs	r2, #0
 8020432:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8020436:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 802043a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 802043e:	eba6 060a 	sub.w	r6, r6, sl
 8020442:	42b2      	cmp	r2, r6
 8020444:	bfc4      	itt	gt
 8020446:	eba1 020a 	subgt.w	r2, r1, sl
 802044a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 802044e:	4a5c      	ldr	r2, [pc, #368]	; (80205c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8020450:	7812      	ldrb	r2, [r2, #0]
 8020452:	b9a2      	cbnz	r2, 802047e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8020454:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8020458:	4286      	cmp	r6, r0
 802045a:	4640      	mov	r0, r8
 802045c:	9303      	str	r3, [sp, #12]
 802045e:	bf14      	ite	ne
 8020460:	2600      	movne	r6, #0
 8020462:	2601      	moveq	r6, #1
 8020464:	f7f2 fb9d 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020468:	9b03      	ldr	r3, [sp, #12]
 802046a:	b160      	cbz	r0, 8020486 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 802046c:	2300      	movs	r3, #0
 802046e:	8023      	strh	r3, [r4, #0]
 8020470:	8063      	strh	r3, [r4, #2]
 8020472:	80a3      	strh	r3, [r4, #4]
 8020474:	4620      	mov	r0, r4
 8020476:	80e3      	strh	r3, [r4, #6]
 8020478:	b011      	add	sp, #68	; 0x44
 802047a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802047e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020482:	428e      	cmp	r6, r1
 8020484:	e7e9      	b.n	802045a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8020486:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802048a:	9205      	str	r2, [sp, #20]
 802048c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020490:	9206      	str	r2, [sp, #24]
 8020492:	f8bb 2000 	ldrh.w	r2, [fp]
 8020496:	900e      	str	r0, [sp, #56]	; 0x38
 8020498:	1a9b      	subs	r3, r3, r2
 802049a:	b21b      	sxth	r3, r3
 802049c:	9303      	str	r3, [sp, #12]
 802049e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80204a2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80204a6:	ebaa 0a03 	sub.w	sl, sl, r3
 80204aa:	fa0f f38a 	sxth.w	r3, sl
 80204ae:	9304      	str	r3, [sp, #16]
 80204b0:	9b03      	ldr	r3, [sp, #12]
 80204b2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80204b6:	9b04      	ldr	r3, [sp, #16]
 80204b8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80204bc:	9b05      	ldr	r3, [sp, #20]
 80204be:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80204c2:	a90e      	add	r1, sp, #56	; 0x38
 80204c4:	9b06      	ldr	r3, [sp, #24]
 80204c6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80204ca:	a80c      	add	r0, sp, #48	; 0x30
 80204cc:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80204d0:	f7f8 f906 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80204d4:	4640      	mov	r0, r8
 80204d6:	f7f8 f8bf 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80204da:	a80e      	add	r0, sp, #56	; 0x38
 80204dc:	f7f8 f8bc 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80204e0:	4b38      	ldr	r3, [pc, #224]	; (80205c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80204e2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80204e6:	881b      	ldrh	r3, [r3, #0]
 80204e8:	9307      	str	r3, [sp, #28]
 80204ea:	682b      	ldr	r3, [r5, #0]
 80204ec:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80205c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80204f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80204f2:	4628      	mov	r0, r5
 80204f4:	4798      	blx	r3
 80204f6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80204fa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80204fe:	4681      	mov	r9, r0
 8020500:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8020504:	f8db 0000 	ldr.w	r0, [fp]
 8020508:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802050a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802050e:	6803      	ldr	r3, [r0, #0]
 8020510:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020512:	4798      	blx	r3
 8020514:	4607      	mov	r7, r0
 8020516:	f8db 0000 	ldr.w	r0, [fp]
 802051a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 802051e:	6803      	ldr	r3, [r0, #0]
 8020520:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020524:	9109      	str	r1, [sp, #36]	; 0x24
 8020526:	9208      	str	r2, [sp, #32]
 8020528:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802052a:	4798      	blx	r3
 802052c:	f010 0f01 	tst.w	r0, #1
 8020530:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020534:	d012      	beq.n	802055c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8020536:	f8db 0000 	ldr.w	r0, [fp]
 802053a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 802053e:	6803      	ldr	r3, [r0, #0]
 8020540:	9200      	str	r2, [sp, #0]
 8020542:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8020544:	e898 0006 	ldmia.w	r8, {r1, r2}
 8020548:	462b      	mov	r3, r5
 802054a:	47b0      	blx	r6
 802054c:	9b03      	ldr	r3, [sp, #12]
 802054e:	8023      	strh	r3, [r4, #0]
 8020550:	9b04      	ldr	r3, [sp, #16]
 8020552:	8063      	strh	r3, [r4, #2]
 8020554:	9b05      	ldr	r3, [sp, #20]
 8020556:	80a3      	strh	r3, [r4, #4]
 8020558:	9b06      	ldr	r3, [sp, #24]
 802055a:	e78b      	b.n	8020474 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 802055c:	fb09 f202 	mul.w	r2, r9, r2
 8020560:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8020564:	440f      	add	r7, r1
 8020566:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 802056a:	b166      	cbz	r6, 8020586 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 802056c:	9a07      	ldr	r2, [sp, #28]
 802056e:	4592      	cmp	sl, r2
 8020570:	d109      	bne.n	8020586 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020572:	f8db 0000 	ldr.w	r0, [fp]
 8020576:	6802      	ldr	r2, [r0, #0]
 8020578:	fb09 f303 	mul.w	r3, r9, r3
 802057c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 802057e:	4629      	mov	r1, r5
 8020580:	463a      	mov	r2, r7
 8020582:	47b0      	blx	r6
 8020584:	e7e2      	b.n	802054c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020586:	fb0a f303 	mul.w	r3, sl, r3
 802058a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80205c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 802058e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8020592:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8020596:	4545      	cmp	r5, r8
 8020598:	d2d8      	bcs.n	802054c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 802059a:	f8db 0000 	ldr.w	r0, [fp]
 802059e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80205a2:	6802      	ldr	r2, [r0, #0]
 80205a4:	4629      	mov	r1, r5
 80205a6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80205aa:	005b      	lsls	r3, r3, #1
 80205ac:	463a      	mov	r2, r7
 80205ae:	47d0      	blx	sl
 80205b0:	444f      	add	r7, r9
 80205b2:	4435      	add	r5, r6
 80205b4:	e7ef      	b.n	8020596 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80205b6:	bf00      	nop
 80205b8:	20013830 	.word	0x20013830
 80205bc:	20013832 	.word	0x20013832
 80205c0:	20013834 	.word	0x20013834
 80205c4:	20013836 	.word	0x20013836
 80205c8:	2001383c 	.word	0x2001383c

080205cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80205cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80205ce:	4606      	mov	r6, r0
 80205d0:	b087      	sub	sp, #28
 80205d2:	460c      	mov	r4, r1
 80205d4:	4617      	mov	r7, r2
 80205d6:	461d      	mov	r5, r3
 80205d8:	b333      	cbz	r3, 8020628 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80205da:	4608      	mov	r0, r1
 80205dc:	f7f2 fae1 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80205e0:	bb10      	cbnz	r0, 8020628 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80205e2:	6820      	ldr	r0, [r4, #0]
 80205e4:	6861      	ldr	r1, [r4, #4]
 80205e6:	4c1c      	ldr	r4, [pc, #112]	; (8020658 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80205e8:	ab04      	add	r3, sp, #16
 80205ea:	c303      	stmia	r3!, {r0, r1}
 80205ec:	a804      	add	r0, sp, #16
 80205ee:	f7f8 f833 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80205f2:	6820      	ldr	r0, [r4, #0]
 80205f4:	6803      	ldr	r3, [r0, #0]
 80205f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80205f8:	4798      	blx	r3
 80205fa:	2dff      	cmp	r5, #255	; 0xff
 80205fc:	d016      	beq.n	802062c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80205fe:	f010 0f08 	tst.w	r0, #8
 8020602:	6820      	ldr	r0, [r4, #0]
 8020604:	d015      	beq.n	8020632 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8020606:	2400      	movs	r4, #0
 8020608:	6801      	ldr	r1, [r0, #0]
 802060a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 802060e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020612:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8020616:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 802061a:	9401      	str	r4, [sp, #4]
 802061c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8020620:	9400      	str	r4, [sp, #0]
 8020622:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8020624:	4639      	mov	r1, r7
 8020626:	47a0      	blx	r4
 8020628:	b007      	add	sp, #28
 802062a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802062c:	f010 0f02 	tst.w	r0, #2
 8020630:	e7e7      	b.n	8020602 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8020632:	6803      	ldr	r3, [r0, #0]
 8020634:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020636:	4798      	blx	r3
 8020638:	4b08      	ldr	r3, [pc, #32]	; (802065c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 802063a:	881a      	ldrh	r2, [r3, #0]
 802063c:	6833      	ldr	r3, [r6, #0]
 802063e:	e9cd 7500 	strd	r7, r5, [sp]
 8020642:	4601      	mov	r1, r0
 8020644:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8020646:	4630      	mov	r0, r6
 8020648:	ab04      	add	r3, sp, #16
 802064a:	47a8      	blx	r5
 802064c:	6820      	ldr	r0, [r4, #0]
 802064e:	6803      	ldr	r3, [r0, #0]
 8020650:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020652:	4798      	blx	r3
 8020654:	e7e8      	b.n	8020628 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020656:	bf00      	nop
 8020658:	2001383c 	.word	0x2001383c
 802065c:	20013836 	.word	0x20013836

08020660 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8020660:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020664:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8020668:	9e08      	ldr	r6, [sp, #32]
 802066a:	4688      	mov	r8, r1
 802066c:	4614      	mov	r4, r2
 802066e:	461d      	mov	r5, r3
 8020670:	2f00      	cmp	r7, #0
 8020672:	f000 80a9 	beq.w	80207c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020676:	4618      	mov	r0, r3
 8020678:	f7f2 fa93 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 802067c:	2800      	cmp	r0, #0
 802067e:	f040 80a3 	bne.w	80207c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020682:	f9b5 1000 	ldrsh.w	r1, [r5]
 8020686:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 802068a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 802068e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8020692:	fb04 1303 	mla	r3, r4, r3, r1
 8020696:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 802069a:	4365      	muls	r5, r4
 802069c:	2fff      	cmp	r7, #255	; 0xff
 802069e:	eba4 0200 	sub.w	r2, r4, r0
 80206a2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80206a6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80206aa:	d04a      	beq.n	8020742 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80206ac:	b2bc      	uxth	r4, r7
 80206ae:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80206b2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80206b6:	fa5f f788 	uxtb.w	r7, r8
 80206ba:	b2f3      	uxtb	r3, r6
 80206bc:	0040      	lsls	r0, r0, #1
 80206be:	fb0e fe04 	mul.w	lr, lr, r4
 80206c2:	4367      	muls	r7, r4
 80206c4:	4363      	muls	r3, r4
 80206c6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80206ca:	fa1f fc8c 	uxth.w	ip, ip
 80206ce:	42a9      	cmp	r1, r5
 80206d0:	d27a      	bcs.n	80207c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80206d2:	eb01 0900 	add.w	r9, r1, r0
 80206d6:	4549      	cmp	r1, r9
 80206d8:	d231      	bcs.n	802073e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80206da:	880a      	ldrh	r2, [r1, #0]
 80206dc:	1214      	asrs	r4, r2, #8
 80206de:	10d6      	asrs	r6, r2, #3
 80206e0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80206e4:	00d2      	lsls	r2, r2, #3
 80206e6:	b2d2      	uxtb	r2, r2
 80206e8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80206ec:	fb14 f40c 	smulbb	r4, r4, ip
 80206f0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80206f4:	4474      	add	r4, lr
 80206f6:	fb12 f20c 	smulbb	r2, r2, ip
 80206fa:	b2a4      	uxth	r4, r4
 80206fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020700:	441a      	add	r2, r3
 8020702:	b292      	uxth	r2, r2
 8020704:	f104 0a01 	add.w	sl, r4, #1
 8020708:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802070c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020710:	fb16 f60c 	smulbb	r6, r6, ip
 8020714:	f102 0a01 	add.w	sl, r2, #1
 8020718:	443e      	add	r6, r7
 802071a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802071e:	b2b6      	uxth	r6, r6
 8020720:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020724:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020728:	4322      	orrs	r2, r4
 802072a:	1c74      	adds	r4, r6, #1
 802072c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8020730:	0976      	lsrs	r6, r6, #5
 8020732:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020736:	4332      	orrs	r2, r6
 8020738:	f821 2b02 	strh.w	r2, [r1], #2
 802073c:	e7cb      	b.n	80206d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 802073e:	4441      	add	r1, r8
 8020740:	e7c5      	b.n	80206ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8020742:	4f22      	ldr	r7, [pc, #136]	; (80207cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8020744:	0973      	lsrs	r3, r6, #5
 8020746:	ea08 0707 	and.w	r7, r8, r7
 802074a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802074e:	433b      	orrs	r3, r7
 8020750:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020754:	4333      	orrs	r3, r6
 8020756:	07e7      	lsls	r7, r4, #31
 8020758:	b29b      	uxth	r3, r3
 802075a:	d50b      	bpl.n	8020774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 802075c:	0040      	lsls	r0, r0, #1
 802075e:	0052      	lsls	r2, r2, #1
 8020760:	42a9      	cmp	r1, r5
 8020762:	d231      	bcs.n	80207c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020764:	180c      	adds	r4, r1, r0
 8020766:	42a1      	cmp	r1, r4
 8020768:	d202      	bcs.n	8020770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 802076a:	f821 3b02 	strh.w	r3, [r1], #2
 802076e:	e7fa      	b.n	8020766 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8020770:	4411      	add	r1, r2
 8020772:	e7f5      	b.n	8020760 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8020774:	078e      	lsls	r6, r1, #30
 8020776:	d008      	beq.n	802078a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8020778:	0066      	lsls	r6, r4, #1
 802077a:	460a      	mov	r2, r1
 802077c:	42aa      	cmp	r2, r5
 802077e:	d202      	bcs.n	8020786 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8020780:	8013      	strh	r3, [r2, #0]
 8020782:	4432      	add	r2, r6
 8020784:	e7fa      	b.n	802077c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8020786:	3102      	adds	r1, #2
 8020788:	3801      	subs	r0, #1
 802078a:	07c2      	lsls	r2, r0, #31
 802078c:	d50b      	bpl.n	80207a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 802078e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8020792:	3a01      	subs	r2, #1
 8020794:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8020798:	0066      	lsls	r6, r4, #1
 802079a:	42aa      	cmp	r2, r5
 802079c:	d202      	bcs.n	80207a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 802079e:	8013      	strh	r3, [r2, #0]
 80207a0:	4432      	add	r2, r6
 80207a2:	e7fa      	b.n	802079a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80207a4:	3801      	subs	r0, #1
 80207a6:	b178      	cbz	r0, 80207c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80207a8:	1040      	asrs	r0, r0, #1
 80207aa:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80207ae:	0080      	lsls	r0, r0, #2
 80207b0:	0064      	lsls	r4, r4, #1
 80207b2:	42a9      	cmp	r1, r5
 80207b4:	d208      	bcs.n	80207c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80207b6:	180e      	adds	r6, r1, r0
 80207b8:	460a      	mov	r2, r1
 80207ba:	42b2      	cmp	r2, r6
 80207bc:	d202      	bcs.n	80207c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80207be:	f842 3b04 	str.w	r3, [r2], #4
 80207c2:	e7fa      	b.n	80207ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80207c4:	4421      	add	r1, r4
 80207c6:	e7f4      	b.n	80207b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80207c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80207cc:	00fff800 	.word	0x00fff800

080207d0 <_ZN8touchgfx8LCD16bppC1Ev>:
 80207d0:	2200      	movs	r2, #0
 80207d2:	4912      	ldr	r1, [pc, #72]	; (802081c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80207d4:	6042      	str	r2, [r0, #4]
 80207d6:	6001      	str	r1, [r0, #0]
 80207d8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80207dc:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80207e0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80207e4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80207e8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80207ec:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80207f0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80207f4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80207f8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80207fc:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8020800:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8020804:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8020808:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 802080c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8020810:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 8020814:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8020818:	4770      	bx	lr
 802081a:	bf00      	nop
 802081c:	080321bc 	.word	0x080321bc

08020820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8020820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020824:	460d      	mov	r5, r1
 8020826:	b08d      	sub	sp, #52	; 0x34
 8020828:	4604      	mov	r4, r0
 802082a:	6808      	ldr	r0, [r1, #0]
 802082c:	6849      	ldr	r1, [r1, #4]
 802082e:	4699      	mov	r9, r3
 8020830:	ab08      	add	r3, sp, #32
 8020832:	c303      	stmia	r3!, {r0, r1}
 8020834:	6810      	ldr	r0, [r2, #0]
 8020836:	6851      	ldr	r1, [r2, #4]
 8020838:	ab0a      	add	r3, sp, #40	; 0x28
 802083a:	c303      	stmia	r3!, {r0, r1}
 802083c:	a808      	add	r0, sp, #32
 802083e:	f7f7 ff0b 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020842:	4629      	mov	r1, r5
 8020844:	a80a      	add	r0, sp, #40	; 0x28
 8020846:	f7f7 ff4b 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802084a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802084e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8020852:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8020856:	4d63      	ldr	r5, [pc, #396]	; (80209e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020858:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 802085c:	6828      	ldr	r0, [r5, #0]
 802085e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020862:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020866:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802086a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 802086e:	440a      	add	r2, r1
 8020870:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020874:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8020878:	4413      	add	r3, r2
 802087a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 802087e:	6803      	ldr	r3, [r0, #0]
 8020880:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020882:	4798      	blx	r3
 8020884:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020888:	d119      	bne.n	80208be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 802088a:	f010 0f20 	tst.w	r0, #32
 802088e:	6828      	ldr	r0, [r5, #0]
 8020890:	d018      	beq.n	80208c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8020892:	2500      	movs	r5, #0
 8020894:	6801      	ldr	r1, [r0, #0]
 8020896:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802089a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 802089e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80208a2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 80208a6:	9502      	str	r5, [sp, #8]
 80208a8:	b2b6      	uxth	r6, r6
 80208aa:	fa1f f588 	uxth.w	r5, r8
 80208ae:	9601      	str	r6, [sp, #4]
 80208b0:	9500      	str	r5, [sp, #0]
 80208b2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80208b4:	4621      	mov	r1, r4
 80208b6:	47a8      	blx	r5
 80208b8:	b00d      	add	sp, #52	; 0x34
 80208ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208be:	f010 0f40 	tst.w	r0, #64	; 0x40
 80208c2:	e7e4      	b.n	802088e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80208c4:	6803      	ldr	r3, [r0, #0]
 80208c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80208c8:	4798      	blx	r3
 80208ca:	4947      	ldr	r1, [pc, #284]	; (80209e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80208cc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80208d0:	880b      	ldrh	r3, [r1, #0]
 80208d2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80208d6:	fb03 5202 	mla	r2, r3, r2, r5
 80208da:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80208de:	4373      	muls	r3, r6
 80208e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80208e4:	9307      	str	r3, [sp, #28]
 80208e6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80208ea:	9306      	str	r3, [sp, #24]
 80208ec:	468a      	mov	sl, r1
 80208ee:	9b07      	ldr	r3, [sp, #28]
 80208f0:	4298      	cmp	r0, r3
 80208f2:	d270      	bcs.n	80209d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80208f4:	9b06      	ldr	r3, [sp, #24]
 80208f6:	4621      	mov	r1, r4
 80208f8:	eb00 0b03 	add.w	fp, r0, r3
 80208fc:	4558      	cmp	r0, fp
 80208fe:	d25d      	bcs.n	80209bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8020900:	f851 4b04 	ldr.w	r4, [r1], #4
 8020904:	0e23      	lsrs	r3, r4, #24
 8020906:	d014      	beq.n	8020932 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020908:	2bff      	cmp	r3, #255	; 0xff
 802090a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 802090e:	d112      	bne.n	8020936 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020910:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020914:	d10f      	bne.n	8020936 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020916:	0963      	lsrs	r3, r4, #5
 8020918:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802091c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020920:	f02c 0c07 	bic.w	ip, ip, #7
 8020924:	ea43 0c0c 	orr.w	ip, r3, ip
 8020928:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 802092c:	ea4c 0404 	orr.w	r4, ip, r4
 8020930:	8004      	strh	r4, [r0, #0]
 8020932:	3002      	adds	r0, #2
 8020934:	e7e2      	b.n	80208fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8020936:	fb09 f303 	mul.w	r3, r9, r3
 802093a:	8807      	ldrh	r7, [r0, #0]
 802093c:	1c5a      	adds	r2, r3, #1
 802093e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8020942:	1212      	asrs	r2, r2, #8
 8020944:	123e      	asrs	r6, r7, #8
 8020946:	b293      	uxth	r3, r2
 8020948:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 802094c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020950:	43d2      	mvns	r2, r2
 8020952:	b2d2      	uxtb	r2, r2
 8020954:	10fd      	asrs	r5, r7, #3
 8020956:	fb1e fe03 	smulbb	lr, lr, r3
 802095a:	00ff      	lsls	r7, r7, #3
 802095c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020960:	fb06 e602 	mla	r6, r6, r2, lr
 8020964:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020968:	b2ff      	uxtb	r7, r7
 802096a:	fa5f fc8c 	uxtb.w	ip, ip
 802096e:	b2e4      	uxtb	r4, r4
 8020970:	b2b6      	uxth	r6, r6
 8020972:	fb1c fc03 	smulbb	ip, ip, r3
 8020976:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 802097a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 802097e:	fb14 f403 	smulbb	r4, r4, r3
 8020982:	fb05 c502 	mla	r5, r5, r2, ip
 8020986:	f106 0e01 	add.w	lr, r6, #1
 802098a:	fb07 4702 	mla	r7, r7, r2, r4
 802098e:	b2ad      	uxth	r5, r5
 8020990:	b2bf      	uxth	r7, r7
 8020992:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020996:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 802099a:	f105 0c01 	add.w	ip, r5, #1
 802099e:	1c7e      	adds	r6, r7, #1
 80209a0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80209a4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80209a8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80209ac:	096d      	lsrs	r5, r5, #5
 80209ae:	ea46 060e 	orr.w	r6, r6, lr
 80209b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80209b6:	432e      	orrs	r6, r5
 80209b8:	8006      	strh	r6, [r0, #0]
 80209ba:	e7ba      	b.n	8020932 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80209bc:	f8ba 3000 	ldrh.w	r3, [sl]
 80209c0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80209c4:	eba3 0308 	sub.w	r3, r3, r8
 80209c8:	eba4 0408 	sub.w	r4, r4, r8
 80209cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80209d0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80209d4:	e78b      	b.n	80208ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80209d6:	4b03      	ldr	r3, [pc, #12]	; (80209e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80209d8:	6818      	ldr	r0, [r3, #0]
 80209da:	6803      	ldr	r3, [r0, #0]
 80209dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80209de:	4798      	blx	r3
 80209e0:	e76a      	b.n	80208b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80209e2:	bf00      	nop
 80209e4:	2001383c 	.word	0x2001383c
 80209e8:	20013836 	.word	0x20013836

080209ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80209ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80209f0:	460c      	mov	r4, r1
 80209f2:	b085      	sub	sp, #20
 80209f4:	6810      	ldr	r0, [r2, #0]
 80209f6:	6851      	ldr	r1, [r2, #4]
 80209f8:	466d      	mov	r5, sp
 80209fa:	c503      	stmia	r5!, {r0, r1}
 80209fc:	6818      	ldr	r0, [r3, #0]
 80209fe:	6859      	ldr	r1, [r3, #4]
 8020a00:	4616      	mov	r6, r2
 8020a02:	c503      	stmia	r5!, {r0, r1}
 8020a04:	4668      	mov	r0, sp
 8020a06:	f7f7 fe27 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020a0a:	4631      	mov	r1, r6
 8020a0c:	a802      	add	r0, sp, #8
 8020a0e:	f7f7 fe67 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020a12:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8020a16:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8020a1a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8020a1e:	4d28      	ldr	r5, [pc, #160]	; (8020ac0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8020a20:	4e28      	ldr	r6, [pc, #160]	; (8020ac4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8020a22:	6828      	ldr	r0, [r5, #0]
 8020a24:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8020a28:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8020a2c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020a30:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020a34:	f8bd 1000 	ldrh.w	r1, [sp]
 8020a38:	440a      	add	r2, r1
 8020a3a:	f8ad 2008 	strh.w	r2, [sp, #8]
 8020a3e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8020a42:	4413      	add	r3, r2
 8020a44:	f8ad 300a 	strh.w	r3, [sp, #10]
 8020a48:	6803      	ldr	r3, [r0, #0]
 8020a4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020a4c:	4798      	blx	r3
 8020a4e:	8833      	ldrh	r3, [r6, #0]
 8020a50:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8020a54:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8020a58:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8020ac8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8020a5c:	fb03 1202 	mla	r2, r3, r2, r1
 8020a60:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020a64:	fb08 f303 	mul.w	r3, r8, r3
 8020a68:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020a6c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8020a70:	4298      	cmp	r0, r3
 8020a72:	d21d      	bcs.n	8020ab0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8020a74:	eb00 080c 	add.w	r8, r0, ip
 8020a78:	4540      	cmp	r0, r8
 8020a7a:	d20f      	bcs.n	8020a9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8020a7c:	f854 1b04 	ldr.w	r1, [r4], #4
 8020a80:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8020a84:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8020a88:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020a8c:	ea42 0209 	orr.w	r2, r2, r9
 8020a90:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020a94:	430a      	orrs	r2, r1
 8020a96:	f820 2b02 	strh.w	r2, [r0], #2
 8020a9a:	e7ed      	b.n	8020a78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8020a9c:	8832      	ldrh	r2, [r6, #0]
 8020a9e:	1bd2      	subs	r2, r2, r7
 8020aa0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020aa4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020aa8:	1bd2      	subs	r2, r2, r7
 8020aaa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8020aae:	e7df      	b.n	8020a70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8020ab0:	6828      	ldr	r0, [r5, #0]
 8020ab2:	6803      	ldr	r3, [r0, #0]
 8020ab4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020ab6:	4798      	blx	r3
 8020ab8:	b005      	add	sp, #20
 8020aba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020abe:	bf00      	nop
 8020ac0:	2001383c 	.word	0x2001383c
 8020ac4:	20013836 	.word	0x20013836
 8020ac8:	fffff800 	.word	0xfffff800

08020acc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8020acc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020ad0:	460e      	mov	r6, r1
 8020ad2:	b08e      	sub	sp, #56	; 0x38
 8020ad4:	4604      	mov	r4, r0
 8020ad6:	6808      	ldr	r0, [r1, #0]
 8020ad8:	6849      	ldr	r1, [r1, #4]
 8020ada:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020cb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8020ade:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8020cb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8020ae2:	461d      	mov	r5, r3
 8020ae4:	ab0a      	add	r3, sp, #40	; 0x28
 8020ae6:	c303      	stmia	r3!, {r0, r1}
 8020ae8:	6810      	ldr	r0, [r2, #0]
 8020aea:	6851      	ldr	r1, [r2, #4]
 8020aec:	ab0c      	add	r3, sp, #48	; 0x30
 8020aee:	c303      	stmia	r3!, {r0, r1}
 8020af0:	a80a      	add	r0, sp, #40	; 0x28
 8020af2:	f7f7 fdb1 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020af6:	4631      	mov	r1, r6
 8020af8:	a80c      	add	r0, sp, #48	; 0x30
 8020afa:	f7f7 fdf1 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020afe:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020b02:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8020b06:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020b0a:	f8d8 0000 	ldr.w	r0, [r8]
 8020b0e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8020b12:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8020b16:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020b1a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020b1e:	440c      	add	r4, r1
 8020b20:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8020b24:	440a      	add	r2, r1
 8020b26:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020b2a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8020b2e:	4413      	add	r3, r2
 8020b30:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020b34:	6803      	ldr	r3, [r0, #0]
 8020b36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020b38:	4798      	blx	r3
 8020b3a:	2dff      	cmp	r5, #255	; 0xff
 8020b3c:	d124      	bne.n	8020b88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8020b3e:	f010 0f01 	tst.w	r0, #1
 8020b42:	f8d8 0000 	ldr.w	r0, [r8]
 8020b46:	d022      	beq.n	8020b8e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8020b48:	2100      	movs	r1, #0
 8020b4a:	f8d0 c000 	ldr.w	ip, [r0]
 8020b4e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8020b52:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8020b56:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8020b5a:	f04f 0e01 	mov.w	lr, #1
 8020b5e:	f8cd e018 	str.w	lr, [sp, #24]
 8020b62:	f8b9 e000 	ldrh.w	lr, [r9]
 8020b66:	9503      	str	r5, [sp, #12]
 8020b68:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8020b6c:	b2b6      	uxth	r6, r6
 8020b6e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020b72:	9102      	str	r1, [sp, #8]
 8020b74:	b2bf      	uxth	r7, r7
 8020b76:	9601      	str	r6, [sp, #4]
 8020b78:	9700      	str	r7, [sp, #0]
 8020b7a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8020b7e:	4621      	mov	r1, r4
 8020b80:	47a8      	blx	r5
 8020b82:	b00e      	add	sp, #56	; 0x38
 8020b84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020b88:	f010 0f04 	tst.w	r0, #4
 8020b8c:	e7d9      	b.n	8020b42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8020b8e:	6803      	ldr	r3, [r0, #0]
 8020b90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020b92:	4798      	blx	r3
 8020b94:	f8b9 3000 	ldrh.w	r3, [r9]
 8020b98:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8020b9c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8020ba0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020ba4:	fb03 1202 	mla	r2, r3, r2, r1
 8020ba8:	ebac 0c07 	sub.w	ip, ip, r7
 8020bac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020bb0:	435e      	muls	r6, r3
 8020bb2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020bb6:	2dff      	cmp	r5, #255	; 0xff
 8020bb8:	eba3 0707 	sub.w	r7, r3, r7
 8020bbc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020bc0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020bc4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020bc8:	d049      	beq.n	8020c5e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020bca:	43eb      	mvns	r3, r5
 8020bcc:	fa1f f985 	uxth.w	r9, r5
 8020bd0:	b2db      	uxtb	r3, r3
 8020bd2:	42b0      	cmp	r0, r6
 8020bd4:	d266      	bcs.n	8020ca4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020bd6:	eb00 0a0e 	add.w	sl, r0, lr
 8020bda:	4550      	cmp	r0, sl
 8020bdc:	4621      	mov	r1, r4
 8020bde:	f104 0403 	add.w	r4, r4, #3
 8020be2:	d25b      	bcs.n	8020c9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020be4:	8802      	ldrh	r2, [r0, #0]
 8020be6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020bea:	ea4f 2822 	mov.w	r8, r2, asr #8
 8020bee:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8020bf2:	fb11 f109 	smulbb	r1, r1, r9
 8020bf6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020bfa:	10d5      	asrs	r5, r2, #3
 8020bfc:	fb08 1803 	mla	r8, r8, r3, r1
 8020c00:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020c04:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020c08:	fb11 f109 	smulbb	r1, r1, r9
 8020c0c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020c10:	fb05 1503 	mla	r5, r5, r3, r1
 8020c14:	00d2      	lsls	r2, r2, #3
 8020c16:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020c1a:	b2d2      	uxtb	r2, r2
 8020c1c:	fb11 f109 	smulbb	r1, r1, r9
 8020c20:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020c24:	fa1f f888 	uxth.w	r8, r8
 8020c28:	fb02 1203 	mla	r2, r2, r3, r1
 8020c2c:	b292      	uxth	r2, r2
 8020c2e:	f108 0101 	add.w	r1, r8, #1
 8020c32:	b2ad      	uxth	r5, r5
 8020c34:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8020c38:	1c51      	adds	r1, r2, #1
 8020c3a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020c3e:	1c69      	adds	r1, r5, #1
 8020c40:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020c44:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8020c48:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020c4c:	096d      	lsrs	r5, r5, #5
 8020c4e:	ea42 0208 	orr.w	r2, r2, r8
 8020c52:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020c56:	432a      	orrs	r2, r5
 8020c58:	f820 2b02 	strh.w	r2, [r0], #2
 8020c5c:	e7bd      	b.n	8020bda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8020c5e:	4a14      	ldr	r2, [pc, #80]	; (8020cb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8020c60:	42b0      	cmp	r0, r6
 8020c62:	d21f      	bcs.n	8020ca4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020c64:	eb00 050e 	add.w	r5, r0, lr
 8020c68:	42a8      	cmp	r0, r5
 8020c6a:	4621      	mov	r1, r4
 8020c6c:	f104 0403 	add.w	r4, r4, #3
 8020c70:	d210      	bcs.n	8020c94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8020c72:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8020c76:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020c7a:	00db      	lsls	r3, r3, #3
 8020c7c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8020c80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c84:	430b      	orrs	r3, r1
 8020c86:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020c8a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020c8e:	f820 3b02 	strh.w	r3, [r0], #2
 8020c92:	e7e9      	b.n	8020c68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020c94:	4438      	add	r0, r7
 8020c96:	eb01 040c 	add.w	r4, r1, ip
 8020c9a:	e7e1      	b.n	8020c60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020c9c:	4438      	add	r0, r7
 8020c9e:	eb01 040c 	add.w	r4, r1, ip
 8020ca2:	e796      	b.n	8020bd2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020ca4:	4b03      	ldr	r3, [pc, #12]	; (8020cb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020ca6:	6818      	ldr	r0, [r3, #0]
 8020ca8:	6803      	ldr	r3, [r0, #0]
 8020caa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020cac:	4798      	blx	r3
 8020cae:	e768      	b.n	8020b82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8020cb0:	fffff800 	.word	0xfffff800
 8020cb4:	2001383c 	.word	0x2001383c
 8020cb8:	20013836 	.word	0x20013836

08020cbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020cbc:	b4f0      	push	{r4, r5, r6, r7}
 8020cbe:	4616      	mov	r6, r2
 8020cc0:	2e01      	cmp	r6, #1
 8020cc2:	461c      	mov	r4, r3
 8020cc4:	460d      	mov	r5, r1
 8020cc6:	9a04      	ldr	r2, [sp, #16]
 8020cc8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020ccc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8020cd0:	d012      	beq.n	8020cf8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8020cd2:	d303      	bcc.n	8020cdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020cd4:	2e02      	cmp	r6, #2
 8020cd6:	d00a      	beq.n	8020cee <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020cd8:	bcf0      	pop	{r4, r5, r6, r7}
 8020cda:	4770      	bx	lr
 8020cdc:	6805      	ldr	r5, [r0, #0]
 8020cde:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8020ce2:	68ed      	ldr	r5, [r5, #12]
 8020ce4:	4613      	mov	r3, r2
 8020ce6:	46ac      	mov	ip, r5
 8020ce8:	4622      	mov	r2, r4
 8020cea:	bcf0      	pop	{r4, r5, r6, r7}
 8020cec:	4760      	bx	ip
 8020cee:	4621      	mov	r1, r4
 8020cf0:	4628      	mov	r0, r5
 8020cf2:	bcf0      	pop	{r4, r5, r6, r7}
 8020cf4:	f7ff bd94 	b.w	8020820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020cf8:	4621      	mov	r1, r4
 8020cfa:	4628      	mov	r0, r5
 8020cfc:	bcf0      	pop	{r4, r5, r6, r7}
 8020cfe:	f7ff bee5 	b.w	8020acc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020d04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d08:	4681      	mov	r9, r0
 8020d0a:	b093      	sub	sp, #76	; 0x4c
 8020d0c:	6810      	ldr	r0, [r2, #0]
 8020d0e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8020d12:	4f6d      	ldr	r7, [pc, #436]	; (8020ec8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020d14:	4688      	mov	r8, r1
 8020d16:	6851      	ldr	r1, [r2, #4]
 8020d18:	ac0e      	add	r4, sp, #56	; 0x38
 8020d1a:	c403      	stmia	r4!, {r0, r1}
 8020d1c:	6818      	ldr	r0, [r3, #0]
 8020d1e:	6859      	ldr	r1, [r3, #4]
 8020d20:	ac10      	add	r4, sp, #64	; 0x40
 8020d22:	4616      	mov	r6, r2
 8020d24:	c403      	stmia	r4!, {r0, r1}
 8020d26:	a80e      	add	r0, sp, #56	; 0x38
 8020d28:	f7f7 fc96 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020d2c:	4631      	mov	r1, r6
 8020d2e:	a810      	add	r0, sp, #64	; 0x40
 8020d30:	f7f7 fcd6 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020d34:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8020d38:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8020d3c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020d40:	4e62      	ldr	r6, [pc, #392]	; (8020ecc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020d42:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8020d46:	6830      	ldr	r0, [r6, #0]
 8020d48:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8020d4c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020d50:	4489      	add	r9, r1
 8020d52:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8020d56:	440a      	add	r2, r1
 8020d58:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8020d5c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020d60:	4413      	add	r3, r2
 8020d62:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8020d66:	6803      	ldr	r3, [r0, #0]
 8020d68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020d6a:	4798      	blx	r3
 8020d6c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020d70:	6830      	ldr	r0, [r6, #0]
 8020d72:	d01d      	beq.n	8020db0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8020d74:	2200      	movs	r2, #0
 8020d76:	6801      	ldr	r1, [r0, #0]
 8020d78:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8020d7c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020d80:	220b      	movs	r2, #11
 8020d82:	9207      	str	r2, [sp, #28]
 8020d84:	883a      	ldrh	r2, [r7, #0]
 8020d86:	9206      	str	r2, [sp, #24]
 8020d88:	2201      	movs	r2, #1
 8020d8a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8020d8e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8020d92:	9203      	str	r2, [sp, #12]
 8020d94:	b2a4      	uxth	r4, r4
 8020d96:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8020d9a:	9200      	str	r2, [sp, #0]
 8020d9c:	b2ad      	uxth	r5, r5
 8020d9e:	9502      	str	r5, [sp, #8]
 8020da0:	9401      	str	r4, [sp, #4]
 8020da2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8020da4:	4642      	mov	r2, r8
 8020da6:	4649      	mov	r1, r9
 8020da8:	47a0      	blx	r4
 8020daa:	b013      	add	sp, #76	; 0x4c
 8020dac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020db0:	6803      	ldr	r3, [r0, #0]
 8020db2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020db4:	4798      	blx	r3
 8020db6:	883b      	ldrh	r3, [r7, #0]
 8020db8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020dbc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020dc0:	fb03 1202 	mla	r2, r3, r2, r1
 8020dc4:	435d      	muls	r5, r3
 8020dc6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020dca:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020dce:	920c      	str	r2, [sp, #48]	; 0x30
 8020dd0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020dd4:	1b12      	subs	r2, r2, r4
 8020dd6:	920d      	str	r2, [sp, #52]	; 0x34
 8020dd8:	0062      	lsls	r2, r4, #1
 8020dda:	1b1c      	subs	r4, r3, r4
 8020ddc:	0063      	lsls	r3, r4, #1
 8020dde:	920a      	str	r2, [sp, #40]	; 0x28
 8020de0:	930b      	str	r3, [sp, #44]	; 0x2c
 8020de2:	f04f 0e04 	mov.w	lr, #4
 8020de6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020de8:	4298      	cmp	r0, r3
 8020dea:	d266      	bcs.n	8020eba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8020dec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020dee:	eb00 0b03 	add.w	fp, r0, r3
 8020df2:	4558      	cmp	r0, fp
 8020df4:	d25c      	bcs.n	8020eb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8020df6:	f819 3b01 	ldrb.w	r3, [r9], #1
 8020dfa:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020dfe:	f858 2003 	ldr.w	r2, [r8, r3]
 8020e02:	0e11      	lsrs	r1, r2, #24
 8020e04:	d012      	beq.n	8020e2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020e06:	29ff      	cmp	r1, #255	; 0xff
 8020e08:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8020e0c:	d110      	bne.n	8020e30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020e0e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020e12:	d10d      	bne.n	8020e30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020e14:	0953      	lsrs	r3, r2, #5
 8020e16:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8020e1a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020e1e:	f027 0707 	bic.w	r7, r7, #7
 8020e22:	431f      	orrs	r7, r3
 8020e24:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020e28:	433a      	orrs	r2, r7
 8020e2a:	8002      	strh	r2, [r0, #0]
 8020e2c:	3002      	adds	r0, #2
 8020e2e:	e7e0      	b.n	8020df2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8020e30:	fb0a f101 	mul.w	r1, sl, r1
 8020e34:	8806      	ldrh	r6, [r0, #0]
 8020e36:	1c4b      	adds	r3, r1, #1
 8020e38:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8020e3c:	1235      	asrs	r5, r6, #8
 8020e3e:	10f4      	asrs	r4, r6, #3
 8020e40:	121b      	asrs	r3, r3, #8
 8020e42:	00f6      	lsls	r6, r6, #3
 8020e44:	b299      	uxth	r1, r3
 8020e46:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8020e4a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020e4e:	b2f6      	uxtb	r6, r6
 8020e50:	43db      	mvns	r3, r3
 8020e52:	b2d2      	uxtb	r2, r2
 8020e54:	b2db      	uxtb	r3, r3
 8020e56:	fb1c fc01 	smulbb	ip, ip, r1
 8020e5a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020e5e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020e62:	fb12 f201 	smulbb	r2, r2, r1
 8020e66:	fb05 c503 	mla	r5, r5, r3, ip
 8020e6a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020e6e:	b2ff      	uxtb	r7, r7
 8020e70:	fb06 2203 	mla	r2, r6, r3, r2
 8020e74:	b2ad      	uxth	r5, r5
 8020e76:	fb17 f701 	smulbb	r7, r7, r1
 8020e7a:	b292      	uxth	r2, r2
 8020e7c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8020e80:	fb04 7403 	mla	r4, r4, r3, r7
 8020e84:	f105 0c01 	add.w	ip, r5, #1
 8020e88:	1c57      	adds	r7, r2, #1
 8020e8a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020e8e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020e92:	b2a4      	uxth	r4, r4
 8020e94:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020e98:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020e9c:	433d      	orrs	r5, r7
 8020e9e:	1c67      	adds	r7, r4, #1
 8020ea0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020ea4:	0964      	lsrs	r4, r4, #5
 8020ea6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020eaa:	4325      	orrs	r5, r4
 8020eac:	8005      	strh	r5, [r0, #0]
 8020eae:	e7bd      	b.n	8020e2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020eb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020eb2:	4418      	add	r0, r3
 8020eb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020eb6:	4499      	add	r9, r3
 8020eb8:	e795      	b.n	8020de6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8020eba:	4b04      	ldr	r3, [pc, #16]	; (8020ecc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020ebc:	6818      	ldr	r0, [r3, #0]
 8020ebe:	6803      	ldr	r3, [r0, #0]
 8020ec0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020ec2:	4798      	blx	r3
 8020ec4:	e771      	b.n	8020daa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8020ec6:	bf00      	nop
 8020ec8:	20013836 	.word	0x20013836
 8020ecc:	2001383c 	.word	0x2001383c

08020ed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8020ed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ed4:	b087      	sub	sp, #28
 8020ed6:	4680      	mov	r8, r0
 8020ed8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8020edc:	460d      	mov	r5, r1
 8020ede:	4614      	mov	r4, r2
 8020ee0:	2e00      	cmp	r6, #0
 8020ee2:	f000 80b9 	beq.w	8021058 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8020ee6:	6810      	ldr	r0, [r2, #0]
 8020ee8:	6851      	ldr	r1, [r2, #4]
 8020eea:	af02      	add	r7, sp, #8
 8020eec:	c703      	stmia	r7!, {r0, r1}
 8020eee:	6818      	ldr	r0, [r3, #0]
 8020ef0:	6859      	ldr	r1, [r3, #4]
 8020ef2:	af04      	add	r7, sp, #16
 8020ef4:	c703      	stmia	r7!, {r0, r1}
 8020ef6:	a802      	add	r0, sp, #8
 8020ef8:	f7f7 fbae 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020efc:	4621      	mov	r1, r4
 8020efe:	a804      	add	r0, sp, #16
 8020f00:	f7f7 fbee 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020f04:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020f08:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020f0c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8020f10:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8020f14:	fb14 2103 	smlabb	r1, r4, r3, r2
 8020f18:	eb08 0401 	add.w	r4, r8, r1
 8020f1c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020f20:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020f24:	440a      	add	r2, r1
 8020f26:	f8ad 2010 	strh.w	r2, [sp, #16]
 8020f2a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020f2e:	4413      	add	r3, r2
 8020f30:	f8ad 3012 	strh.w	r3, [sp, #18]
 8020f34:	4b4a      	ldr	r3, [pc, #296]	; (8021060 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8020f36:	6818      	ldr	r0, [r3, #0]
 8020f38:	6803      	ldr	r3, [r0, #0]
 8020f3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020f3c:	4798      	blx	r3
 8020f3e:	4b49      	ldr	r3, [pc, #292]	; (8021064 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8020f40:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8020f44:	881a      	ldrh	r2, [r3, #0]
 8020f46:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8020f4a:	2eff      	cmp	r6, #255	; 0xff
 8020f4c:	fb02 c101 	mla	r1, r2, r1, ip
 8020f50:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8020f54:	fb02 f207 	mul.w	r2, r2, r7
 8020f58:	f105 0104 	add.w	r1, r5, #4
 8020f5c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8020f60:	461d      	mov	r5, r3
 8020f62:	d05a      	beq.n	802101a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8020f64:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8020f68:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020f6c:	b2b6      	uxth	r6, r6
 8020f6e:	fa1f fe8e 	uxth.w	lr, lr
 8020f72:	9301      	str	r3, [sp, #4]
 8020f74:	4282      	cmp	r2, r0
 8020f76:	d96a      	bls.n	802104e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8020f78:	eb00 0b0a 	add.w	fp, r0, sl
 8020f7c:	4583      	cmp	fp, r0
 8020f7e:	d940      	bls.n	8021002 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8020f80:	f814 3b01 	ldrb.w	r3, [r4], #1
 8020f84:	8805      	ldrh	r5, [r0, #0]
 8020f86:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8020f8a:	122f      	asrs	r7, r5, #8
 8020f8c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020f90:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020f94:	fb17 f70e 	smulbb	r7, r7, lr
 8020f98:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8020f9c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020fa0:	00ed      	lsls	r5, r5, #3
 8020fa2:	fb0c 7c06 	mla	ip, ip, r6, r7
 8020fa6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8020faa:	10df      	asrs	r7, r3, #3
 8020fac:	b2ed      	uxtb	r5, r5
 8020fae:	00db      	lsls	r3, r3, #3
 8020fb0:	fa1f fc8c 	uxth.w	ip, ip
 8020fb4:	fb19 f90e 	smulbb	r9, r9, lr
 8020fb8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020fbc:	b2db      	uxtb	r3, r3
 8020fbe:	fb15 f50e 	smulbb	r5, r5, lr
 8020fc2:	fb07 9706 	mla	r7, r7, r6, r9
 8020fc6:	fb03 5306 	mla	r3, r3, r6, r5
 8020fca:	f10c 0901 	add.w	r9, ip, #1
 8020fce:	b29b      	uxth	r3, r3
 8020fd0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020fd4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8020fd8:	f103 0c01 	add.w	ip, r3, #1
 8020fdc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020fe0:	b2bf      	uxth	r7, r7
 8020fe2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020fe6:	ea4c 0c09 	orr.w	ip, ip, r9
 8020fea:	f107 0901 	add.w	r9, r7, #1
 8020fee:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020ff2:	097f      	lsrs	r7, r7, #5
 8020ff4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020ff8:	ea4c 0c07 	orr.w	ip, ip, r7
 8020ffc:	f820 cb02 	strh.w	ip, [r0], #2
 8021000:	e7bc      	b.n	8020f7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8021002:	9b01      	ldr	r3, [sp, #4]
 8021004:	881b      	ldrh	r3, [r3, #0]
 8021006:	eba3 0308 	sub.w	r3, r3, r8
 802100a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802100e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021012:	eba3 0308 	sub.w	r3, r3, r8
 8021016:	441c      	add	r4, r3
 8021018:	e7ac      	b.n	8020f74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 802101a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802101e:	4282      	cmp	r2, r0
 8021020:	d915      	bls.n	802104e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8021022:	eb00 060a 	add.w	r6, r0, sl
 8021026:	4286      	cmp	r6, r0
 8021028:	d906      	bls.n	8021038 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 802102a:	f814 3b01 	ldrb.w	r3, [r4], #1
 802102e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8021032:	f820 3b02 	strh.w	r3, [r0], #2
 8021036:	e7f6      	b.n	8021026 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8021038:	882b      	ldrh	r3, [r5, #0]
 802103a:	eba3 0308 	sub.w	r3, r3, r8
 802103e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021042:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021046:	eba3 0308 	sub.w	r3, r3, r8
 802104a:	441c      	add	r4, r3
 802104c:	e7e7      	b.n	802101e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 802104e:	4b04      	ldr	r3, [pc, #16]	; (8021060 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021050:	6818      	ldr	r0, [r3, #0]
 8021052:	6803      	ldr	r3, [r0, #0]
 8021054:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021056:	4798      	blx	r3
 8021058:	b007      	add	sp, #28
 802105a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802105e:	bf00      	nop
 8021060:	2001383c 	.word	0x2001383c
 8021064:	20013836 	.word	0x20013836

08021068 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8021068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802106c:	b091      	sub	sp, #68	; 0x44
 802106e:	4680      	mov	r8, r0
 8021070:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8021074:	460f      	mov	r7, r1
 8021076:	4614      	mov	r4, r2
 8021078:	2d00      	cmp	r5, #0
 802107a:	d051      	beq.n	8021120 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802107c:	6810      	ldr	r0, [r2, #0]
 802107e:	6851      	ldr	r1, [r2, #4]
 8021080:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8021284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8021084:	ae0c      	add	r6, sp, #48	; 0x30
 8021086:	c603      	stmia	r6!, {r0, r1}
 8021088:	6818      	ldr	r0, [r3, #0]
 802108a:	6859      	ldr	r1, [r3, #4]
 802108c:	ae0e      	add	r6, sp, #56	; 0x38
 802108e:	c603      	stmia	r6!, {r0, r1}
 8021090:	a80c      	add	r0, sp, #48	; 0x30
 8021092:	f7f7 fae1 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021096:	4621      	mov	r1, r4
 8021098:	a80e      	add	r0, sp, #56	; 0x38
 802109a:	f7f7 fb21 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802109e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80210a2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80210a6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80210aa:	f8d9 0000 	ldr.w	r0, [r9]
 80210ae:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80210b2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80210b6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80210ba:	eb08 0401 	add.w	r4, r8, r1
 80210be:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80210c2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8021288 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80210c6:	440a      	add	r2, r1
 80210c8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80210cc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80210d0:	4413      	add	r3, r2
 80210d2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80210d6:	6803      	ldr	r3, [r0, #0]
 80210d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80210da:	4798      	blx	r3
 80210dc:	f010 0f80 	tst.w	r0, #128	; 0x80
 80210e0:	f8d9 0000 	ldr.w	r0, [r9]
 80210e4:	d01f      	beq.n	8021126 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80210e6:	2200      	movs	r2, #0
 80210e8:	6801      	ldr	r1, [r0, #0]
 80210ea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80210ee:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80210f2:	220b      	movs	r2, #11
 80210f4:	9207      	str	r2, [sp, #28]
 80210f6:	f8b8 2000 	ldrh.w	r2, [r8]
 80210fa:	9206      	str	r2, [sp, #24]
 80210fc:	2201      	movs	r2, #1
 80210fe:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8021102:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8021106:	9203      	str	r2, [sp, #12]
 8021108:	fa1f f28a 	uxth.w	r2, sl
 802110c:	9202      	str	r2, [sp, #8]
 802110e:	b2b6      	uxth	r6, r6
 8021110:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8021114:	9200      	str	r2, [sp, #0]
 8021116:	9601      	str	r6, [sp, #4]
 8021118:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 802111a:	463a      	mov	r2, r7
 802111c:	4621      	mov	r1, r4
 802111e:	47a8      	blx	r5
 8021120:	b011      	add	sp, #68	; 0x44
 8021122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021126:	6803      	ldr	r3, [r0, #0]
 8021128:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802112a:	4798      	blx	r3
 802112c:	f8b8 2000 	ldrh.w	r2, [r8]
 8021130:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021134:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8021138:	2dff      	cmp	r5, #255	; 0xff
 802113a:	fb02 1303 	mla	r3, r2, r3, r1
 802113e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021142:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8021146:	fb0a fa02 	mul.w	sl, sl, r2
 802114a:	d062      	beq.n	8021212 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 802114c:	ea6f 0c05 	mvn.w	ip, r5
 8021150:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8021154:	930a      	str	r3, [sp, #40]	; 0x28
 8021156:	b2ad      	uxth	r5, r5
 8021158:	fa5f fc8c 	uxtb.w	ip, ip
 802115c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8021160:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021162:	4298      	cmp	r0, r3
 8021164:	f080 8085 	bcs.w	8021272 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021168:	eb00 0b09 	add.w	fp, r0, r9
 802116c:	4558      	cmp	r0, fp
 802116e:	d246      	bcs.n	80211fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8021170:	f814 eb01 	ldrb.w	lr, [r4], #1
 8021174:	2303      	movs	r3, #3
 8021176:	2204      	movs	r2, #4
 8021178:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 802117c:	eb07 0a0e 	add.w	sl, r7, lr
 8021180:	8803      	ldrh	r3, [r0, #0]
 8021182:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8021186:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802118a:	1219      	asrs	r1, r3, #8
 802118c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021190:	fb18 f805 	smulbb	r8, r8, r5
 8021194:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8021198:	10da      	asrs	r2, r3, #3
 802119a:	fb01 810c 	mla	r1, r1, ip, r8
 802119e:	00db      	lsls	r3, r3, #3
 80211a0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80211a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80211a8:	b2db      	uxtb	r3, r3
 80211aa:	fb18 f805 	smulbb	r8, r8, r5
 80211ae:	fb1e fe05 	smulbb	lr, lr, r5
 80211b2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80211b6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80211ba:	b289      	uxth	r1, r1
 80211bc:	fb02 820c 	mla	r2, r2, ip, r8
 80211c0:	fb03 e30c 	mla	r3, r3, ip, lr
 80211c4:	b292      	uxth	r2, r2
 80211c6:	b29b      	uxth	r3, r3
 80211c8:	f101 0801 	add.w	r8, r1, #1
 80211cc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80211d0:	f103 0e01 	add.w	lr, r3, #1
 80211d4:	f102 0801 	add.w	r8, r2, #1
 80211d8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80211dc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80211e0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80211e4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80211e8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80211ec:	ea4e 0101 	orr.w	r1, lr, r1
 80211f0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80211f4:	ea41 0108 	orr.w	r1, r1, r8
 80211f8:	f820 1b02 	strh.w	r1, [r0], #2
 80211fc:	e7b6      	b.n	802116c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80211fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021200:	881b      	ldrh	r3, [r3, #0]
 8021202:	1b9b      	subs	r3, r3, r6
 8021204:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021208:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802120c:	1b9b      	subs	r3, r3, r6
 802120e:	441c      	add	r4, r3
 8021210:	e7a6      	b.n	8021160 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8021212:	491b      	ldr	r1, [pc, #108]	; (8021280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8021214:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8021218:	2203      	movs	r2, #3
 802121a:	2504      	movs	r5, #4
 802121c:	4550      	cmp	r0, sl
 802121e:	d228      	bcs.n	8021272 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021220:	eb00 0c09 	add.w	ip, r0, r9
 8021224:	4560      	cmp	r0, ip
 8021226:	4623      	mov	r3, r4
 8021228:	d219      	bcs.n	802125e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 802122a:	f893 e000 	ldrb.w	lr, [r3]
 802122e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8021232:	eb07 0b0e 	add.w	fp, r7, lr
 8021236:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802123a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802123e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8021242:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8021246:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 802124a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802124e:	ea43 030b 	orr.w	r3, r3, fp
 8021252:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8021256:	3401      	adds	r4, #1
 8021258:	f820 3b02 	strh.w	r3, [r0], #2
 802125c:	e7e2      	b.n	8021224 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 802125e:	f8b8 3000 	ldrh.w	r3, [r8]
 8021262:	1b9b      	subs	r3, r3, r6
 8021264:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021268:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802126c:	1b9b      	subs	r3, r3, r6
 802126e:	441c      	add	r4, r3
 8021270:	e7d4      	b.n	802121c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8021272:	4b04      	ldr	r3, [pc, #16]	; (8021284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8021274:	6818      	ldr	r0, [r3, #0]
 8021276:	6803      	ldr	r3, [r0, #0]
 8021278:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802127a:	4798      	blx	r3
 802127c:	e750      	b.n	8021120 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802127e:	bf00      	nop
 8021280:	fffff800 	.word	0xfffff800
 8021284:	2001383c 	.word	0x2001383c
 8021288:	20013836 	.word	0x20013836

0802128c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802128c:	b4f0      	push	{r4, r5, r6, r7}
 802128e:	460c      	mov	r4, r1
 8021290:	4611      	mov	r1, r2
 8021292:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8021296:	780f      	ldrb	r7, [r1, #0]
 8021298:	784e      	ldrb	r6, [r1, #1]
 802129a:	2f01      	cmp	r7, #1
 802129c:	461a      	mov	r2, r3
 802129e:	9b04      	ldr	r3, [sp, #16]
 80212a0:	d036      	beq.n	8021310 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 80212a2:	d31e      	bcc.n	80212e2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 80212a4:	2f02      	cmp	r7, #2
 80212a6:	d14a      	bne.n	802133e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212a8:	2e03      	cmp	r6, #3
 80212aa:	d848      	bhi.n	802133e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212ac:	e8df f006 	tbb	[pc, r6]
 80212b0:	16140702 	.word	0x16140702
 80212b4:	9504      	str	r5, [sp, #16]
 80212b6:	4620      	mov	r0, r4
 80212b8:	bcf0      	pop	{r4, r5, r6, r7}
 80212ba:	f7ff be09 	b.w	8020ed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80212be:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80212c0:	2800      	cmp	r0, #0
 80212c2:	d03c      	beq.n	802133e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212c4:	6806      	ldr	r6, [r0, #0]
 80212c6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80212ca:	68b5      	ldr	r5, [r6, #8]
 80212cc:	4613      	mov	r3, r2
 80212ce:	46ac      	mov	ip, r5
 80212d0:	460a      	mov	r2, r1
 80212d2:	4621      	mov	r1, r4
 80212d4:	bcf0      	pop	{r4, r5, r6, r7}
 80212d6:	4760      	bx	ip
 80212d8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80212da:	e7f1      	b.n	80212c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80212dc:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80212e0:	e7ee      	b.n	80212c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80212e2:	2e03      	cmp	r6, #3
 80212e4:	d82b      	bhi.n	802133e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212e6:	e8df f006 	tbb	[pc, r6]
 80212ea:	0702      	.short	0x0702
 80212ec:	100e      	.short	0x100e
 80212ee:	9504      	str	r5, [sp, #16]
 80212f0:	4620      	mov	r0, r4
 80212f2:	bcf0      	pop	{r4, r5, r6, r7}
 80212f4:	f7ff bd06 	b.w	8020d04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80212f8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80212fa:	b300      	cbz	r0, 802133e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212fc:	6806      	ldr	r6, [r0, #0]
 80212fe:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021302:	68f5      	ldr	r5, [r6, #12]
 8021304:	e7e2      	b.n	80212cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021306:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021308:	e7f7      	b.n	80212fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 802130a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802130e:	e7f4      	b.n	80212fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8021310:	2e03      	cmp	r6, #3
 8021312:	d814      	bhi.n	802133e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021314:	e8df f006 	tbb	[pc, r6]
 8021318:	100e0702 	.word	0x100e0702
 802131c:	9504      	str	r5, [sp, #16]
 802131e:	4620      	mov	r0, r4
 8021320:	bcf0      	pop	{r4, r5, r6, r7}
 8021322:	f7ff bea1 	b.w	8021068 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8021326:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021328:	b148      	cbz	r0, 802133e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802132a:	6806      	ldr	r6, [r0, #0]
 802132c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021330:	6935      	ldr	r5, [r6, #16]
 8021332:	e7cb      	b.n	80212cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021334:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021336:	e7f7      	b.n	8021328 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8021338:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802133c:	e7f4      	b.n	8021328 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 802133e:	bcf0      	pop	{r4, r5, r6, r7}
 8021340:	4770      	bx	lr
	...

08021344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8021344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021348:	4604      	mov	r4, r0
 802134a:	b087      	sub	sp, #28
 802134c:	6810      	ldr	r0, [r2, #0]
 802134e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8021352:	f8df 9238 	ldr.w	r9, [pc, #568]	; 802158c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8021356:	460e      	mov	r6, r1
 8021358:	6851      	ldr	r1, [r2, #4]
 802135a:	ad02      	add	r5, sp, #8
 802135c:	c503      	stmia	r5!, {r0, r1}
 802135e:	6818      	ldr	r0, [r3, #0]
 8021360:	6859      	ldr	r1, [r3, #4]
 8021362:	ad04      	add	r5, sp, #16
 8021364:	4617      	mov	r7, r2
 8021366:	c503      	stmia	r5!, {r0, r1}
 8021368:	a802      	add	r0, sp, #8
 802136a:	f7f7 f975 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802136e:	4639      	mov	r1, r7
 8021370:	a804      	add	r0, sp, #16
 8021372:	f7f7 f9b5 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021376:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802137a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802137e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8021382:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8021386:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802138a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802138e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8021392:	440e      	add	r6, r1
 8021394:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021398:	440a      	add	r2, r1
 802139a:	f8ad 2010 	strh.w	r2, [sp, #16]
 802139e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80213a2:	4413      	add	r3, r2
 80213a4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80213a8:	4b77      	ldr	r3, [pc, #476]	; (8021588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80213aa:	6818      	ldr	r0, [r3, #0]
 80213ac:	6803      	ldr	r3, [r0, #0]
 80213ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80213b0:	4798      	blx	r3
 80213b2:	f8b9 b000 	ldrh.w	fp, [r9]
 80213b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80213ba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80213be:	fb0b 2303 	mla	r3, fp, r3, r2
 80213c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80213c6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80213ca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80213ce:	fb05 f50b 	mul.w	r5, r5, fp
 80213d2:	9300      	str	r3, [sp, #0]
 80213d4:	d069      	beq.n	80214aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80213d6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80213da:	4558      	cmp	r0, fp
 80213dc:	f080 80cc 	bcs.w	8021578 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80213e0:	9b00      	ldr	r3, [sp, #0]
 80213e2:	18c3      	adds	r3, r0, r3
 80213e4:	9301      	str	r3, [sp, #4]
 80213e6:	4631      	mov	r1, r6
 80213e8:	9b01      	ldr	r3, [sp, #4]
 80213ea:	4298      	cmp	r0, r3
 80213ec:	d24f      	bcs.n	802148e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80213ee:	f811 2b01 	ldrb.w	r2, [r1], #1
 80213f2:	2a00      	cmp	r2, #0
 80213f4:	d048      	beq.n	8021488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80213f6:	fb0a f202 	mul.w	r2, sl, r2
 80213fa:	1c53      	adds	r3, r2, #1
 80213fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021400:	121b      	asrs	r3, r3, #8
 8021402:	d041      	beq.n	8021488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021404:	8802      	ldrh	r2, [r0, #0]
 8021406:	f8b4 c000 	ldrh.w	ip, [r4]
 802140a:	b29e      	uxth	r6, r3
 802140c:	1215      	asrs	r5, r2, #8
 802140e:	43db      	mvns	r3, r3
 8021410:	b2db      	uxtb	r3, r3
 8021412:	ea4f 272c 	mov.w	r7, ip, asr #8
 8021416:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802141a:	fb15 f503 	smulbb	r5, r5, r3
 802141e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8021422:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8021426:	00d2      	lsls	r2, r2, #3
 8021428:	fb07 5706 	mla	r7, r7, r6, r5
 802142c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021430:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021434:	b2d2      	uxtb	r2, r2
 8021436:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802143a:	b2bf      	uxth	r7, r7
 802143c:	fb1e fe03 	smulbb	lr, lr, r3
 8021440:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021444:	fa5f fc8c 	uxtb.w	ip, ip
 8021448:	fb12 f203 	smulbb	r2, r2, r3
 802144c:	fb05 e506 	mla	r5, r5, r6, lr
 8021450:	fb0c 2c06 	mla	ip, ip, r6, r2
 8021454:	f107 0e01 	add.w	lr, r7, #1
 8021458:	fa1f fc8c 	uxth.w	ip, ip
 802145c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8021460:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8021464:	f10c 0701 	add.w	r7, ip, #1
 8021468:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802146c:	b2ad      	uxth	r5, r5
 802146e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021472:	ea47 070e 	orr.w	r7, r7, lr
 8021476:	f105 0e01 	add.w	lr, r5, #1
 802147a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 802147e:	096d      	lsrs	r5, r5, #5
 8021480:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021484:	432f      	orrs	r7, r5
 8021486:	8007      	strh	r7, [r0, #0]
 8021488:	3002      	adds	r0, #2
 802148a:	3402      	adds	r4, #2
 802148c:	e7ac      	b.n	80213e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 802148e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021492:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021496:	eba3 0308 	sub.w	r3, r3, r8
 802149a:	eba6 0608 	sub.w	r6, r6, r8
 802149e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80214a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80214a6:	440e      	add	r6, r1
 80214a8:	e797      	b.n	80213da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80214aa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80214ae:	42a8      	cmp	r0, r5
 80214b0:	d262      	bcs.n	8021578 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80214b2:	9b00      	ldr	r3, [sp, #0]
 80214b4:	4631      	mov	r1, r6
 80214b6:	eb00 0b03 	add.w	fp, r0, r3
 80214ba:	4558      	cmp	r0, fp
 80214bc:	d24e      	bcs.n	802155c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80214be:	f811 3b01 	ldrb.w	r3, [r1], #1
 80214c2:	b12b      	cbz	r3, 80214d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80214c4:	2bff      	cmp	r3, #255	; 0xff
 80214c6:	f8b4 e000 	ldrh.w	lr, [r4]
 80214ca:	d104      	bne.n	80214d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80214cc:	f8a0 e000 	strh.w	lr, [r0]
 80214d0:	3002      	adds	r0, #2
 80214d2:	3402      	adds	r4, #2
 80214d4:	e7f1      	b.n	80214ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80214d6:	8802      	ldrh	r2, [r0, #0]
 80214d8:	b29f      	uxth	r7, r3
 80214da:	1216      	asrs	r6, r2, #8
 80214dc:	43db      	mvns	r3, r3
 80214de:	b2db      	uxtb	r3, r3
 80214e0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80214e4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80214e8:	fb16 f603 	smulbb	r6, r6, r3
 80214ec:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80214f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80214f4:	00d2      	lsls	r2, r2, #3
 80214f6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80214fa:	b2d2      	uxtb	r2, r2
 80214fc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8021500:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8021504:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021508:	fb1a fa03 	smulbb	sl, sl, r3
 802150c:	fa1f fc8c 	uxth.w	ip, ip
 8021510:	fb12 f303 	smulbb	r3, r2, r3
 8021514:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021518:	fa5f fe8e 	uxtb.w	lr, lr
 802151c:	fb06 a607 	mla	r6, r6, r7, sl
 8021520:	f10c 0201 	add.w	r2, ip, #1
 8021524:	fb0e 3307 	mla	r3, lr, r7, r3
 8021528:	b2b6      	uxth	r6, r6
 802152a:	b29b      	uxth	r3, r3
 802152c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8021530:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8021534:	f106 0a01 	add.w	sl, r6, #1
 8021538:	f103 0c01 	add.w	ip, r3, #1
 802153c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021540:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8021544:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021548:	0976      	lsrs	r6, r6, #5
 802154a:	ea4c 0c02 	orr.w	ip, ip, r2
 802154e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021552:	ea4c 0c06 	orr.w	ip, ip, r6
 8021556:	f8a0 c000 	strh.w	ip, [r0]
 802155a:	e7b9      	b.n	80214d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802155c:	f8b9 3000 	ldrh.w	r3, [r9]
 8021560:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021564:	eba3 0308 	sub.w	r3, r3, r8
 8021568:	eba6 0608 	sub.w	r6, r6, r8
 802156c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021570:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021574:	440e      	add	r6, r1
 8021576:	e79a      	b.n	80214ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8021578:	4b03      	ldr	r3, [pc, #12]	; (8021588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802157a:	6818      	ldr	r0, [r3, #0]
 802157c:	6803      	ldr	r3, [r0, #0]
 802157e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021580:	4798      	blx	r3
 8021582:	b007      	add	sp, #28
 8021584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021588:	2001383c 	.word	0x2001383c
 802158c:	20013836 	.word	0x20013836

08021590 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8021590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021594:	b089      	sub	sp, #36	; 0x24
 8021596:	4682      	mov	sl, r0
 8021598:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 802159c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802159e:	460f      	mov	r7, r1
 80215a0:	4691      	mov	r9, r2
 80215a2:	4698      	mov	r8, r3
 80215a4:	2e00      	cmp	r6, #0
 80215a6:	d03d      	beq.n	8021624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215a8:	4608      	mov	r0, r1
 80215aa:	f7fa fe59 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80215ae:	4605      	mov	r5, r0
 80215b0:	4638      	mov	r0, r7
 80215b2:	f7fa fe89 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80215b6:	f8ad 000e 	strh.w	r0, [sp, #14]
 80215ba:	4638      	mov	r0, r7
 80215bc:	f8ad 9008 	strh.w	r9, [sp, #8]
 80215c0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80215c4:	f8ad 800a 	strh.w	r8, [sp, #10]
 80215c8:	f7fa ff36 	bl	801c438 <_ZNK8touchgfx6Bitmap7getDataEv>
 80215cc:	4605      	mov	r5, r0
 80215ce:	4638      	mov	r0, r7
 80215d0:	f7fa ff62 	bl	801c498 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80215d4:	4681      	mov	r9, r0
 80215d6:	4638      	mov	r0, r7
 80215d8:	f7fa ffb2 	bl	801c540 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80215dc:	280b      	cmp	r0, #11
 80215de:	d821      	bhi.n	8021624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215e0:	e8df f000 	tbb	[pc, r0]
 80215e4:	2006aebe 	.word	0x2006aebe
 80215e8:	20202020 	.word	0x20202020
 80215ec:	b5202020 	.word	0xb5202020
 80215f0:	4bb0      	ldr	r3, [pc, #704]	; (80218b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80215f2:	6818      	ldr	r0, [r3, #0]
 80215f4:	6803      	ldr	r3, [r0, #0]
 80215f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80215f8:	4798      	blx	r3
 80215fa:	2eff      	cmp	r6, #255	; 0xff
 80215fc:	d101      	bne.n	8021602 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80215fe:	0683      	lsls	r3, r0, #26
 8021600:	d506      	bpl.n	8021610 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 8021602:	4633      	mov	r3, r6
 8021604:	4622      	mov	r2, r4
 8021606:	a902      	add	r1, sp, #8
 8021608:	4628      	mov	r0, r5
 802160a:	f7ff f909 	bl	8020820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802160e:	e009      	b.n	8021624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021610:	4638      	mov	r0, r7
 8021612:	f7fa fed9 	bl	801c3c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021616:	b940      	cbnz	r0, 802162a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8021618:	4623      	mov	r3, r4
 802161a:	aa02      	add	r2, sp, #8
 802161c:	4629      	mov	r1, r5
 802161e:	4650      	mov	r0, sl
 8021620:	f7ff f9e4 	bl	80209ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021624:	b009      	add	sp, #36	; 0x24
 8021626:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802162a:	f10d 0818 	add.w	r8, sp, #24
 802162e:	4639      	mov	r1, r7
 8021630:	4640      	mov	r0, r8
 8021632:	f7fa fe7d 	bl	801c330 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021636:	e898 0003 	ldmia.w	r8, {r0, r1}
 802163a:	af04      	add	r7, sp, #16
 802163c:	e887 0003 	stmia.w	r7, {r0, r1}
 8021640:	4638      	mov	r0, r7
 8021642:	4621      	mov	r1, r4
 8021644:	f7f1 fa6a 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 8021648:	4638      	mov	r0, r7
 802164a:	f7f1 faaa 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 802164e:	2800      	cmp	r0, #0
 8021650:	d1d7      	bne.n	8021602 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021652:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021656:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 802165a:	4293      	cmp	r3, r2
 802165c:	dd12      	ble.n	8021684 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 802165e:	1a9b      	subs	r3, r3, r2
 8021660:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021664:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021668:	f8ad 0018 	strh.w	r0, [sp, #24]
 802166c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021670:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021674:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021678:	4642      	mov	r2, r8
 802167a:	4633      	mov	r3, r6
 802167c:	a902      	add	r1, sp, #8
 802167e:	4628      	mov	r0, r5
 8021680:	f7ff f8ce 	bl	8020820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021684:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021688:	f9b4 2000 	ldrsh.w	r2, [r4]
 802168c:	4293      	cmp	r3, r2
 802168e:	dd12      	ble.n	80216b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8021690:	1a9b      	subs	r3, r3, r2
 8021692:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021696:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802169a:	f8ad 2018 	strh.w	r2, [sp, #24]
 802169e:	f8ad 001a 	strh.w	r0, [sp, #26]
 80216a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80216a6:	f8ad 101e 	strh.w	r1, [sp, #30]
 80216aa:	23ff      	movs	r3, #255	; 0xff
 80216ac:	4642      	mov	r2, r8
 80216ae:	a902      	add	r1, sp, #8
 80216b0:	4628      	mov	r0, r5
 80216b2:	f7ff f8b5 	bl	8020820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80216b6:	463b      	mov	r3, r7
 80216b8:	aa02      	add	r2, sp, #8
 80216ba:	4629      	mov	r1, r5
 80216bc:	4650      	mov	r0, sl
 80216be:	f7ff f995 	bl	80209ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80216c2:	88a2      	ldrh	r2, [r4, #4]
 80216c4:	8823      	ldrh	r3, [r4, #0]
 80216c6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80216ca:	4413      	add	r3, r2
 80216cc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80216d0:	440a      	add	r2, r1
 80216d2:	b29b      	uxth	r3, r3
 80216d4:	b292      	uxth	r2, r2
 80216d6:	b211      	sxth	r1, r2
 80216d8:	b218      	sxth	r0, r3
 80216da:	4288      	cmp	r0, r1
 80216dc:	dd12      	ble.n	8021704 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80216de:	1a9b      	subs	r3, r3, r2
 80216e0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80216e4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80216e8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80216ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80216f0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80216f4:	23ff      	movs	r3, #255	; 0xff
 80216f6:	4642      	mov	r2, r8
 80216f8:	a902      	add	r1, sp, #8
 80216fa:	4628      	mov	r0, r5
 80216fc:	f8ad 601a 	strh.w	r6, [sp, #26]
 8021700:	f7ff f88e 	bl	8020820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021704:	88e2      	ldrh	r2, [r4, #6]
 8021706:	8863      	ldrh	r3, [r4, #2]
 8021708:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802170c:	4413      	add	r3, r2
 802170e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021712:	440a      	add	r2, r1
 8021714:	b29b      	uxth	r3, r3
 8021716:	b292      	uxth	r2, r2
 8021718:	b211      	sxth	r1, r2
 802171a:	b218      	sxth	r0, r3
 802171c:	4288      	cmp	r0, r1
 802171e:	dd81      	ble.n	8021624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021720:	1a9b      	subs	r3, r3, r2
 8021722:	f9b4 6000 	ldrsh.w	r6, [r4]
 8021726:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802172a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802172e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8021732:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021736:	f8ad 001c 	strh.w	r0, [sp, #28]
 802173a:	23ff      	movs	r3, #255	; 0xff
 802173c:	4642      	mov	r2, r8
 802173e:	e762      	b.n	8021606 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8021740:	4633      	mov	r3, r6
 8021742:	4622      	mov	r2, r4
 8021744:	a902      	add	r1, sp, #8
 8021746:	4628      	mov	r0, r5
 8021748:	f7ff f9c0 	bl	8020acc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 802174c:	e76a      	b.n	8021624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802174e:	e9cd 4600 	strd	r4, r6, [sp]
 8021752:	ab02      	add	r3, sp, #8
 8021754:	464a      	mov	r2, r9
 8021756:	4629      	mov	r1, r5
 8021758:	4650      	mov	r0, sl
 802175a:	f7ff fd97 	bl	802128c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802175e:	e761      	b.n	8021624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021760:	4638      	mov	r0, r7
 8021762:	f7fa fe31 	bl	801c3c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021766:	b950      	cbnz	r0, 802177e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8021768:	e9cd 6000 	strd	r6, r0, [sp]
 802176c:	f8da 3000 	ldr.w	r3, [sl]
 8021770:	aa02      	add	r2, sp, #8
 8021772:	68de      	ldr	r6, [r3, #12]
 8021774:	4629      	mov	r1, r5
 8021776:	4623      	mov	r3, r4
 8021778:	4650      	mov	r0, sl
 802177a:	47b0      	blx	r6
 802177c:	e752      	b.n	8021624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802177e:	f10d 0818 	add.w	r8, sp, #24
 8021782:	4639      	mov	r1, r7
 8021784:	4640      	mov	r0, r8
 8021786:	f7fa fdd3 	bl	801c330 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802178a:	e898 0003 	ldmia.w	r8, {r0, r1}
 802178e:	af04      	add	r7, sp, #16
 8021790:	e887 0003 	stmia.w	r7, {r0, r1}
 8021794:	4638      	mov	r0, r7
 8021796:	4621      	mov	r1, r4
 8021798:	f7f1 f9c0 	bl	8012b1c <_ZN8touchgfx4RectaNERKS0_>
 802179c:	4638      	mov	r0, r7
 802179e:	f7f1 fa00 	bl	8012ba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80217a2:	b138      	cbz	r0, 80217b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 80217a4:	9600      	str	r6, [sp, #0]
 80217a6:	4623      	mov	r3, r4
 80217a8:	aa02      	add	r2, sp, #8
 80217aa:	4649      	mov	r1, r9
 80217ac:	4628      	mov	r0, r5
 80217ae:	f7ff fdc9 	bl	8021344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80217b2:	e737      	b.n	8021624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80217b4:	e9cd 6000 	strd	r6, r0, [sp]
 80217b8:	f8da 3000 	ldr.w	r3, [sl]
 80217bc:	aa02      	add	r2, sp, #8
 80217be:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80217c2:	4629      	mov	r1, r5
 80217c4:	463b      	mov	r3, r7
 80217c6:	4650      	mov	r0, sl
 80217c8:	47d8      	blx	fp
 80217ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80217ce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80217d2:	4293      	cmp	r3, r2
 80217d4:	dd13      	ble.n	80217fe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 80217d6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80217da:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80217de:	f8ad 0018 	strh.w	r0, [sp, #24]
 80217e2:	1a9b      	subs	r3, r3, r2
 80217e4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80217e8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80217ec:	f8ad 301e 	strh.w	r3, [sp, #30]
 80217f0:	9600      	str	r6, [sp, #0]
 80217f2:	4643      	mov	r3, r8
 80217f4:	aa02      	add	r2, sp, #8
 80217f6:	4649      	mov	r1, r9
 80217f8:	4628      	mov	r0, r5
 80217fa:	f7ff fda3 	bl	8021344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80217fe:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021802:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021806:	4293      	cmp	r3, r2
 8021808:	dd13      	ble.n	8021832 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 802180a:	1a9b      	subs	r3, r3, r2
 802180c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021810:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021814:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021818:	f8ad 001a 	strh.w	r0, [sp, #26]
 802181c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021820:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021824:	9600      	str	r6, [sp, #0]
 8021826:	4643      	mov	r3, r8
 8021828:	aa02      	add	r2, sp, #8
 802182a:	4649      	mov	r1, r9
 802182c:	4628      	mov	r0, r5
 802182e:	f7ff fd89 	bl	8021344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021832:	88a2      	ldrh	r2, [r4, #4]
 8021834:	8823      	ldrh	r3, [r4, #0]
 8021836:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802183a:	4413      	add	r3, r2
 802183c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021840:	440a      	add	r2, r1
 8021842:	b29b      	uxth	r3, r3
 8021844:	b292      	uxth	r2, r2
 8021846:	b211      	sxth	r1, r2
 8021848:	b218      	sxth	r0, r3
 802184a:	4288      	cmp	r0, r1
 802184c:	dd13      	ble.n	8021876 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 802184e:	1a9b      	subs	r3, r3, r2
 8021850:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021854:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021858:	f8ad 1018 	strh.w	r1, [sp, #24]
 802185c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021860:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021864:	9600      	str	r6, [sp, #0]
 8021866:	4643      	mov	r3, r8
 8021868:	aa02      	add	r2, sp, #8
 802186a:	4649      	mov	r1, r9
 802186c:	4628      	mov	r0, r5
 802186e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8021872:	f7ff fd67 	bl	8021344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021876:	88e2      	ldrh	r2, [r4, #6]
 8021878:	8863      	ldrh	r3, [r4, #2]
 802187a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802187e:	4413      	add	r3, r2
 8021880:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021884:	440a      	add	r2, r1
 8021886:	b29b      	uxth	r3, r3
 8021888:	b292      	uxth	r2, r2
 802188a:	b211      	sxth	r1, r2
 802188c:	b218      	sxth	r0, r3
 802188e:	4288      	cmp	r0, r1
 8021890:	f77f aec8 	ble.w	8021624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021894:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021898:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802189c:	f8ad 7018 	strh.w	r7, [sp, #24]
 80218a0:	1a9b      	subs	r3, r3, r2
 80218a2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80218a6:	f8ad 101a 	strh.w	r1, [sp, #26]
 80218aa:	f8ad 001c 	strh.w	r0, [sp, #28]
 80218ae:	9600      	str	r6, [sp, #0]
 80218b0:	4643      	mov	r3, r8
 80218b2:	e779      	b.n	80217a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 80218b4:	2001383c 	.word	0x2001383c

080218b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80218b8:	b180      	cbz	r0, 80218dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80218ba:	2903      	cmp	r1, #3
 80218bc:	d81c      	bhi.n	80218f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80218be:	e8df f001 	tbb	[pc, r1]
 80218c2:	1d02      	.short	0x1d02
 80218c4:	1f08      	.short	0x1f08
 80218c6:	4b10      	ldr	r3, [pc, #64]	; (8021908 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80218c8:	8818      	ldrh	r0, [r3, #0]
 80218ca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80218ce:	4240      	negs	r0, r0
 80218d0:	4770      	bx	lr
 80218d2:	4b0d      	ldr	r3, [pc, #52]	; (8021908 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80218d4:	8818      	ldrh	r0, [r3, #0]
 80218d6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80218da:	4770      	bx	lr
 80218dc:	2903      	cmp	r1, #3
 80218de:	d80b      	bhi.n	80218f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80218e0:	a301      	add	r3, pc, #4	; (adr r3, 80218e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80218e2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80218e6:	bf00      	nop
 80218e8:	080218fd 	.word	0x080218fd
 80218ec:	080218d3 	.word	0x080218d3
 80218f0:	08021901 	.word	0x08021901
 80218f4:	080218c7 	.word	0x080218c7
 80218f8:	2000      	movs	r0, #0
 80218fa:	4770      	bx	lr
 80218fc:	2001      	movs	r0, #1
 80218fe:	4770      	bx	lr
 8021900:	f04f 30ff 	mov.w	r0, #4294967295
 8021904:	4770      	bx	lr
 8021906:	bf00      	nop
 8021908:	20013836 	.word	0x20013836

0802190c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 802190c:	b180      	cbz	r0, 8021930 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 802190e:	2903      	cmp	r1, #3
 8021910:	d81c      	bhi.n	802194c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021912:	e8df f001 	tbb	[pc, r1]
 8021916:	021d      	.short	0x021d
 8021918:	071f      	.short	0x071f
 802191a:	4b10      	ldr	r3, [pc, #64]	; (802195c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 802191c:	8818      	ldrh	r0, [r3, #0]
 802191e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021922:	4770      	bx	lr
 8021924:	4b0d      	ldr	r3, [pc, #52]	; (802195c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021926:	8818      	ldrh	r0, [r3, #0]
 8021928:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802192c:	4240      	negs	r0, r0
 802192e:	4770      	bx	lr
 8021930:	2903      	cmp	r1, #3
 8021932:	d80b      	bhi.n	802194c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021934:	a301      	add	r3, pc, #4	; (adr r3, 802193c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8021936:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 802193a:	bf00      	nop
 802193c:	0802191b 	.word	0x0802191b
 8021940:	08021955 	.word	0x08021955
 8021944:	08021925 	.word	0x08021925
 8021948:	08021951 	.word	0x08021951
 802194c:	2000      	movs	r0, #0
 802194e:	4770      	bx	lr
 8021950:	2001      	movs	r0, #1
 8021952:	4770      	bx	lr
 8021954:	f04f 30ff 	mov.w	r0, #4294967295
 8021958:	4770      	bx	lr
 802195a:	bf00      	nop
 802195c:	20013836 	.word	0x20013836

08021960 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021964:	b099      	sub	sp, #100	; 0x64
 8021966:	910b      	str	r1, [sp, #44]	; 0x2c
 8021968:	a914      	add	r1, sp, #80	; 0x50
 802196a:	e881 000c 	stmia.w	r1, {r2, r3}
 802196e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8021972:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8021976:	f891 900d 	ldrb.w	r9, [r1, #13]
 802197a:	9309      	str	r3, [sp, #36]	; 0x24
 802197c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021980:	9310      	str	r3, [sp, #64]	; 0x40
 8021982:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8021986:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 802198a:	930c      	str	r3, [sp, #48]	; 0x30
 802198c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8021990:	798f      	ldrb	r7, [r1, #6]
 8021992:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8021996:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 802199a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 802199e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80219a2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80219a6:	431f      	orrs	r7, r3
 80219a8:	f000 8195 	beq.w	8021cd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80219ac:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80219b0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80219b4:	f891 9007 	ldrb.w	r9, [r1, #7]
 80219b8:	ea59 0903 	orrs.w	r9, r9, r3
 80219bc:	f000 818b 	beq.w	8021cd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80219c0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80219c4:	b29b      	uxth	r3, r3
 80219c6:	2d00      	cmp	r5, #0
 80219c8:	f000 812e 	beq.w	8021c28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80219cc:	1aed      	subs	r5, r5, r3
 80219ce:	b2ad      	uxth	r5, r5
 80219d0:	042b      	lsls	r3, r5, #16
 80219d2:	d502      	bpl.n	80219da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80219d4:	1b64      	subs	r4, r4, r5
 80219d6:	b224      	sxth	r4, r4
 80219d8:	2500      	movs	r5, #0
 80219da:	f9b2 1000 	ldrsh.w	r1, [r2]
 80219de:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80219e2:	428c      	cmp	r4, r1
 80219e4:	b28b      	uxth	r3, r1
 80219e6:	bfbf      	itttt	lt
 80219e8:	18ed      	addlt	r5, r5, r3
 80219ea:	1b2c      	sublt	r4, r5, r4
 80219ec:	b2a5      	uxthlt	r5, r4
 80219ee:	460c      	movlt	r4, r1
 80219f0:	8891      	ldrh	r1, [r2, #4]
 80219f2:	440b      	add	r3, r1
 80219f4:	b21b      	sxth	r3, r3
 80219f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80219f8:	88d3      	ldrh	r3, [r2, #6]
 80219fa:	8852      	ldrh	r2, [r2, #2]
 80219fc:	4413      	add	r3, r2
 80219fe:	b21b      	sxth	r3, r3
 8021a00:	930d      	str	r3, [sp, #52]	; 0x34
 8021a02:	4bbe      	ldr	r3, [pc, #760]	; (8021cfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8021a04:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021a06:	f893 b000 	ldrb.w	fp, [r3]
 8021a0a:	f10b 3cff 	add.w	ip, fp, #4294967295
 8021a0e:	f1dc 0300 	rsbs	r3, ip, #0
 8021a12:	eb43 030c 	adc.w	r3, r3, ip
 8021a16:	930e      	str	r3, [sp, #56]	; 0x38
 8021a18:	4621      	mov	r1, r4
 8021a1a:	4653      	mov	r3, sl
 8021a1c:	a814      	add	r0, sp, #80	; 0x50
 8021a1e:	f7f6 fc90 	bl	8018342 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8021a22:	4621      	mov	r1, r4
 8021a24:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8021a28:	4653      	mov	r3, sl
 8021a2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021a2c:	a814      	add	r0, sp, #80	; 0x50
 8021a2e:	f7f6 fca5 	bl	801837c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8021a32:	a918      	add	r1, sp, #96	; 0x60
 8021a34:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8021a38:	a817      	add	r0, sp, #92	; 0x5c
 8021a3a:	f7f6 fdcb 	bl	80185d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8021a3e:	f1ba 0f00 	cmp.w	sl, #0
 8021a42:	f040 80f4 	bne.w	8021c2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8021a46:	f1bb 0f01 	cmp.w	fp, #1
 8021a4a:	f040 80f8 	bne.w	8021c3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8021a4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021a50:	2b00      	cmp	r3, #0
 8021a52:	f040 8145 	bne.w	8021ce0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8021a56:	b2ba      	uxth	r2, r7
 8021a58:	b905      	cbnz	r5, 8021a5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8021a5a:	b16e      	cbz	r6, 8021a78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8021a5c:	fb06 5302 	mla	r3, r6, r2, r5
 8021a60:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021a62:	fb08 f303 	mul.w	r3, r8, r3
 8021a66:	4631      	mov	r1, r6
 8021a68:	f003 0607 	and.w	r6, r3, #7
 8021a6c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8021a70:	9328      	str	r3, [sp, #160]	; 0xa0
 8021a72:	eba9 0301 	sub.w	r3, r9, r1
 8021a76:	930a      	str	r3, [sp, #40]	; 0x28
 8021a78:	4651      	mov	r1, sl
 8021a7a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a7c:	f7ff ff1c 	bl	80218b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8021a80:	4681      	mov	r9, r0
 8021a82:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a84:	f7ff ff42 	bl	802190c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8021a88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021a8a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021a8c:	eba3 0a01 	sub.w	sl, r3, r1
 8021a90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021a92:	459a      	cmp	sl, r3
 8021a94:	bfa8      	it	ge
 8021a96:	469a      	movge	sl, r3
 8021a98:	f1ba 0f00 	cmp.w	sl, #0
 8021a9c:	4683      	mov	fp, r0
 8021a9e:	f340 811a 	ble.w	8021cd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021aa2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021aa4:	1b64      	subs	r4, r4, r5
 8021aa6:	1b1c      	subs	r4, r3, r4
 8021aa8:	42bc      	cmp	r4, r7
 8021aaa:	bfd4      	ite	le
 8021aac:	ebc5 0504 	rsble	r5, r5, r4
 8021ab0:	ebc5 0507 	rsbgt	r5, r5, r7
 8021ab4:	2d00      	cmp	r5, #0
 8021ab6:	f340 810e 	ble.w	8021cd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021aba:	1b52      	subs	r2, r2, r5
 8021abc:	fb08 f302 	mul.w	r3, r8, r2
 8021ac0:	930f      	str	r3, [sp, #60]	; 0x3c
 8021ac2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021ac4:	2b00      	cmp	r3, #0
 8021ac6:	f040 8116 	bne.w	8021cf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8021aca:	4b8d      	ldr	r3, [pc, #564]	; (8021d00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8021acc:	6818      	ldr	r0, [r3, #0]
 8021ace:	6803      	ldr	r3, [r0, #0]
 8021ad0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021ad2:	4798      	blx	r3
 8021ad4:	2301      	movs	r3, #1
 8021ad6:	fa03 f308 	lsl.w	r3, r3, r8
 8021ada:	4a8a      	ldr	r2, [pc, #552]	; (8021d04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8021adc:	3b01      	subs	r3, #1
 8021ade:	b2db      	uxtb	r3, r3
 8021ae0:	8811      	ldrh	r1, [r2, #0]
 8021ae2:	930e      	str	r3, [sp, #56]	; 0x38
 8021ae4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8021ae8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8021aec:	fb01 2303 	mla	r3, r1, r3, r2
 8021af0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021af4:	930a      	str	r3, [sp, #40]	; 0x28
 8021af6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021af8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021afc:	9313      	str	r3, [sp, #76]	; 0x4c
 8021afe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021b00:	0a19      	lsrs	r1, r3, #8
 8021b02:	b2cb      	uxtb	r3, r1
 8021b04:	9312      	str	r3, [sp, #72]	; 0x48
 8021b06:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021b08:	b2db      	uxtb	r3, r3
 8021b0a:	9311      	str	r3, [sp, #68]	; 0x44
 8021b0c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021b0e:	095a      	lsrs	r2, r3, #5
 8021b10:	4b7d      	ldr	r3, [pc, #500]	; (8021d08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8021b12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021b16:	400b      	ands	r3, r1
 8021b18:	4313      	orrs	r3, r2
 8021b1a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021b1c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021b20:	4313      	orrs	r3, r2
 8021b22:	b29b      	uxth	r3, r3
 8021b24:	9310      	str	r3, [sp, #64]	; 0x40
 8021b26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021b28:	781a      	ldrb	r2, [r3, #0]
 8021b2a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8021b2e:	4132      	asrs	r2, r6
 8021b30:	fb05 b919 	mls	r9, r5, r9, fp
 8021b34:	fb03 fb05 	mul.w	fp, r3, r5
 8021b38:	b2d2      	uxtb	r2, r2
 8021b3a:	930d      	str	r3, [sp, #52]	; 0x34
 8021b3c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8021b40:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8021b44:	f0c0 80f5 	bcc.w	8021d32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8021b48:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8021b4c:	46ae      	mov	lr, r5
 8021b4e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8021b52:	f0c0 80dd 	bcc.w	8021d10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8021b56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021b58:	4013      	ands	r3, r2
 8021b5a:	d055      	beq.n	8021c08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8021b5c:	20ff      	movs	r0, #255	; 0xff
 8021b5e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021b60:	fb90 f1f1 	sdiv	r1, r0, r1
 8021b64:	434b      	muls	r3, r1
 8021b66:	2bfe      	cmp	r3, #254	; 0xfe
 8021b68:	dd03      	ble.n	8021b72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8021b6a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021b6c:	4281      	cmp	r1, r0
 8021b6e:	f000 80cd 	beq.w	8021d0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8021b72:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021b74:	f8bc 4000 	ldrh.w	r4, [ip]
 8021b78:	fb11 f303 	smulbb	r3, r1, r3
 8021b7c:	b29b      	uxth	r3, r3
 8021b7e:	1c59      	adds	r1, r3, #1
 8021b80:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021b84:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021b88:	b29f      	uxth	r7, r3
 8021b8a:	43db      	mvns	r3, r3
 8021b8c:	b2db      	uxtb	r3, r3
 8021b8e:	9309      	str	r3, [sp, #36]	; 0x24
 8021b90:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b92:	1220      	asrs	r0, r4, #8
 8021b94:	fb13 f907 	smulbb	r9, r3, r7
 8021b98:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021b9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b9e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021ba2:	fb00 9003 	mla	r0, r0, r3, r9
 8021ba6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021ba8:	10e1      	asrs	r1, r4, #3
 8021baa:	fb13 f907 	smulbb	r9, r3, r7
 8021bae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021bb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021bb4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8021bb8:	fb01 9103 	mla	r1, r1, r3, r9
 8021bbc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021bbe:	00e4      	lsls	r4, r4, #3
 8021bc0:	fb13 f707 	smulbb	r7, r3, r7
 8021bc4:	b2e4      	uxtb	r4, r4
 8021bc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021bc8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021bcc:	fb04 7403 	mla	r4, r4, r3, r7
 8021bd0:	b280      	uxth	r0, r0
 8021bd2:	b2a4      	uxth	r4, r4
 8021bd4:	1c43      	adds	r3, r0, #1
 8021bd6:	f104 0901 	add.w	r9, r4, #1
 8021bda:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021bde:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021be2:	b289      	uxth	r1, r1
 8021be4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8021be8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021bec:	ea49 0000 	orr.w	r0, r9, r0
 8021bf0:	f101 0901 	add.w	r9, r1, #1
 8021bf4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8021bf8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021bfc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021c00:	ea40 0009 	orr.w	r0, r0, r9
 8021c04:	f8ac 0000 	strh.w	r0, [ip]
 8021c08:	4446      	add	r6, r8
 8021c0a:	b2b6      	uxth	r6, r6
 8021c0c:	2e07      	cmp	r6, #7
 8021c0e:	bf81      	itttt	hi
 8021c10:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8021c12:	785a      	ldrbhi	r2, [r3, #1]
 8021c14:	3301      	addhi	r3, #1
 8021c16:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8021c18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021c1a:	bf9a      	itte	ls
 8021c1c:	fa42 f208 	asrls.w	r2, r2, r8
 8021c20:	b2d2      	uxtbls	r2, r2
 8021c22:	2600      	movhi	r6, #0
 8021c24:	449c      	add	ip, r3
 8021c26:	e792      	b.n	8021b4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8021c28:	441c      	add	r4, r3
 8021c2a:	b224      	sxth	r4, r4
 8021c2c:	e6d5      	b.n	80219da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021c2e:	f1ba 0f01 	cmp.w	sl, #1
 8021c32:	f47f af0c 	bne.w	8021a4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c36:	f1bb 0f01 	cmp.w	fp, #1
 8021c3a:	f47f af08 	bne.w	8021a4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c3e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8021d00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8021c42:	f8db 0000 	ldr.w	r0, [fp]
 8021c46:	6803      	ldr	r3, [r0, #0]
 8021c48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021c4a:	4798      	blx	r3
 8021c4c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8021c50:	465a      	mov	r2, fp
 8021c52:	d006      	beq.n	8021c62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021c54:	f1b8 0f04 	cmp.w	r8, #4
 8021c58:	d140      	bne.n	8021cdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8021c5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021c5c:	3300      	adds	r3, #0
 8021c5e:	bf18      	it	ne
 8021c60:	2301      	movne	r3, #1
 8021c62:	0580      	lsls	r0, r0, #22
 8021c64:	d56e      	bpl.n	8021d44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021c66:	f1b8 0f08 	cmp.w	r8, #8
 8021c6a:	d16b      	bne.n	8021d44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021c6c:	2b00      	cmp	r3, #0
 8021c6e:	bf0c      	ite	eq
 8021c70:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8021c74:	f44f 7180 	movne.w	r1, #256	; 0x100
 8021c78:	2d00      	cmp	r5, #0
 8021c7a:	f47f aee8 	bne.w	8021a4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c7e:	2e00      	cmp	r6, #0
 8021c80:	f47f aee5 	bne.w	8021a4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c84:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021c86:	19e3      	adds	r3, r4, r7
 8021c88:	4283      	cmp	r3, r0
 8021c8a:	f73f aee0 	bgt.w	8021a4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c90:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021c92:	444b      	add	r3, r9
 8021c94:	4283      	cmp	r3, r0
 8021c96:	f73f aeda 	bgt.w	8021a4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c9a:	6810      	ldr	r0, [r2, #0]
 8021c9c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8021ca0:	6804      	ldr	r4, [r0, #0]
 8021ca2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8021ca6:	b2bf      	uxth	r7, r7
 8021ca8:	f1b8 0f08 	cmp.w	r8, #8
 8021cac:	f04f 0500 	mov.w	r5, #0
 8021cb0:	bf18      	it	ne
 8021cb2:	3701      	addne	r7, #1
 8021cb4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021cb8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021cba:	9104      	str	r1, [sp, #16]
 8021cbc:	bf18      	it	ne
 8021cbe:	f027 0701 	bicne.w	r7, r7, #1
 8021cc2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021cc4:	bf18      	it	ne
 8021cc6:	b2bf      	uxthne	r7, r7
 8021cc8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021ccc:	e9cd 7900 	strd	r7, r9, [sp]
 8021cd0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021cd2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8021cd4:	47a0      	blx	r4
 8021cd6:	b019      	add	sp, #100	; 0x64
 8021cd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021cdc:	2300      	movs	r3, #0
 8021cde:	e7c0      	b.n	8021c62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021ce0:	2208      	movs	r2, #8
 8021ce2:	fb92 f3f8 	sdiv	r3, r2, r8
 8021ce6:	1e5a      	subs	r2, r3, #1
 8021ce8:	443a      	add	r2, r7
 8021cea:	fb92 f2f3 	sdiv	r2, r2, r3
 8021cee:	fb12 f203 	smulbb	r2, r2, r3
 8021cf2:	b292      	uxth	r2, r2
 8021cf4:	e6b0      	b.n	8021a58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8021cf6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021cf8:	e6ec      	b.n	8021ad4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8021cfa:	bf00      	nop
 8021cfc:	20013834 	.word	0x20013834
 8021d00:	2001383c 	.word	0x2001383c
 8021d04:	20013836 	.word	0x20013836
 8021d08:	00fff800 	.word	0x00fff800
 8021d0c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021d0e:	e779      	b.n	8021c04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8021d10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021d12:	b153      	cbz	r3, 8021d2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8021d14:	441e      	add	r6, r3
 8021d16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d18:	b2b6      	uxth	r6, r6
 8021d1a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8021d1e:	f006 0607 	and.w	r6, r6, #7
 8021d22:	781a      	ldrb	r2, [r3, #0]
 8021d24:	9328      	str	r3, [sp, #160]	; 0xa0
 8021d26:	4132      	asrs	r2, r6
 8021d28:	b2d2      	uxtb	r2, r2
 8021d2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d2c:	445b      	add	r3, fp
 8021d2e:	930a      	str	r3, [sp, #40]	; 0x28
 8021d30:	e706      	b.n	8021b40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8021d32:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021d34:	2b00      	cmp	r3, #0
 8021d36:	d1ce      	bne.n	8021cd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021d38:	4b05      	ldr	r3, [pc, #20]	; (8021d50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8021d3a:	6818      	ldr	r0, [r3, #0]
 8021d3c:	6803      	ldr	r3, [r0, #0]
 8021d3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021d40:	4798      	blx	r3
 8021d42:	e7c8      	b.n	8021cd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021d44:	2b00      	cmp	r3, #0
 8021d46:	f43f ae82 	beq.w	8021a4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d4a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021d4e:	e793      	b.n	8021c78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021d50:	2001383c 	.word	0x2001383c

08021d54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021d54:	b538      	push	{r3, r4, r5, lr}
 8021d56:	4c15      	ldr	r4, [pc, #84]	; (8021dac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8021d58:	7823      	ldrb	r3, [r4, #0]
 8021d5a:	f3bf 8f5b 	dmb	ish
 8021d5e:	07da      	lsls	r2, r3, #31
 8021d60:	4605      	mov	r5, r0
 8021d62:	d40b      	bmi.n	8021d7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021d64:	4620      	mov	r0, r4
 8021d66:	f00a ff16 	bl	802cb96 <__cxa_guard_acquire>
 8021d6a:	b138      	cbz	r0, 8021d7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021d6c:	4620      	mov	r0, r4
 8021d6e:	f00a ff1e 	bl	802cbae <__cxa_guard_release>
 8021d72:	4a0f      	ldr	r2, [pc, #60]	; (8021db0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021d74:	490f      	ldr	r1, [pc, #60]	; (8021db4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8021d76:	4810      	ldr	r0, [pc, #64]	; (8021db8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021d78:	f00a ff06 	bl	802cb88 <__aeabi_atexit>
 8021d7c:	4c0f      	ldr	r4, [pc, #60]	; (8021dbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021d7e:	7823      	ldrb	r3, [r4, #0]
 8021d80:	f3bf 8f5b 	dmb	ish
 8021d84:	07db      	lsls	r3, r3, #31
 8021d86:	d40b      	bmi.n	8021da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021d88:	4620      	mov	r0, r4
 8021d8a:	f00a ff04 	bl	802cb96 <__cxa_guard_acquire>
 8021d8e:	b138      	cbz	r0, 8021da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021d90:	4620      	mov	r0, r4
 8021d92:	f00a ff0c 	bl	802cbae <__cxa_guard_release>
 8021d96:	4a06      	ldr	r2, [pc, #24]	; (8021db0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021d98:	4909      	ldr	r1, [pc, #36]	; (8021dc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8021d9a:	480a      	ldr	r0, [pc, #40]	; (8021dc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021d9c:	f00a fef4 	bl	802cb88 <__aeabi_atexit>
 8021da0:	4b05      	ldr	r3, [pc, #20]	; (8021db8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021da2:	612b      	str	r3, [r5, #16]
 8021da4:	4b07      	ldr	r3, [pc, #28]	; (8021dc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021da6:	616b      	str	r3, [r5, #20]
 8021da8:	bd38      	pop	{r3, r4, r5, pc}
 8021daa:	bf00      	nop
 8021dac:	2001391c 	.word	0x2001391c
 8021db0:	20000000 	.word	0x20000000
 8021db4:	0801eb57 	.word	0x0801eb57
 8021db8:	200000d8 	.word	0x200000d8
 8021dbc:	20013920 	.word	0x20013920
 8021dc0:	0801eb55 	.word	0x0801eb55
 8021dc4:	200000dc 	.word	0x200000dc

08021dc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8021dc8:	b538      	push	{r3, r4, r5, lr}
 8021dca:	4c15      	ldr	r4, [pc, #84]	; (8021e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021dcc:	7823      	ldrb	r3, [r4, #0]
 8021dce:	f3bf 8f5b 	dmb	ish
 8021dd2:	07da      	lsls	r2, r3, #31
 8021dd4:	4605      	mov	r5, r0
 8021dd6:	d40b      	bmi.n	8021df0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021dd8:	4620      	mov	r0, r4
 8021dda:	f00a fedc 	bl	802cb96 <__cxa_guard_acquire>
 8021dde:	b138      	cbz	r0, 8021df0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021de0:	4620      	mov	r0, r4
 8021de2:	f00a fee4 	bl	802cbae <__cxa_guard_release>
 8021de6:	4a0f      	ldr	r2, [pc, #60]	; (8021e24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021de8:	490f      	ldr	r1, [pc, #60]	; (8021e28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8021dea:	4810      	ldr	r0, [pc, #64]	; (8021e2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021dec:	f00a fecc 	bl	802cb88 <__aeabi_atexit>
 8021df0:	4c0f      	ldr	r4, [pc, #60]	; (8021e30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021df2:	7823      	ldrb	r3, [r4, #0]
 8021df4:	f3bf 8f5b 	dmb	ish
 8021df8:	07db      	lsls	r3, r3, #31
 8021dfa:	d40b      	bmi.n	8021e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021dfc:	4620      	mov	r0, r4
 8021dfe:	f00a feca 	bl	802cb96 <__cxa_guard_acquire>
 8021e02:	b138      	cbz	r0, 8021e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021e04:	4620      	mov	r0, r4
 8021e06:	f00a fed2 	bl	802cbae <__cxa_guard_release>
 8021e0a:	4a06      	ldr	r2, [pc, #24]	; (8021e24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021e0c:	4909      	ldr	r1, [pc, #36]	; (8021e34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021e0e:	480a      	ldr	r0, [pc, #40]	; (8021e38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021e10:	f00a feba 	bl	802cb88 <__aeabi_atexit>
 8021e14:	4b05      	ldr	r3, [pc, #20]	; (8021e2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021e16:	60ab      	str	r3, [r5, #8]
 8021e18:	4b07      	ldr	r3, [pc, #28]	; (8021e38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021e1a:	60eb      	str	r3, [r5, #12]
 8021e1c:	bd38      	pop	{r3, r4, r5, pc}
 8021e1e:	bf00      	nop
 8021e20:	200138f4 	.word	0x200138f4
 8021e24:	20000000 	.word	0x20000000
 8021e28:	0801eb5b 	.word	0x0801eb5b
 8021e2c:	200000b0 	.word	0x200000b0
 8021e30:	200138f8 	.word	0x200138f8
 8021e34:	0801eb59 	.word	0x0801eb59
 8021e38:	200000b4 	.word	0x200000b4

08021e3c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8021e3c:	b510      	push	{r4, lr}
 8021e3e:	4604      	mov	r4, r0
 8021e40:	f7ff ff88 	bl	8021d54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8021e44:	4620      	mov	r0, r4
 8021e46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021e4a:	f7ff bfbd 	b.w	8021dc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08021e50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8021e50:	b538      	push	{r3, r4, r5, lr}
 8021e52:	4c15      	ldr	r4, [pc, #84]	; (8021ea8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8021e54:	7823      	ldrb	r3, [r4, #0]
 8021e56:	f3bf 8f5b 	dmb	ish
 8021e5a:	07da      	lsls	r2, r3, #31
 8021e5c:	4605      	mov	r5, r0
 8021e5e:	d40b      	bmi.n	8021e78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021e60:	4620      	mov	r0, r4
 8021e62:	f00a fe98 	bl	802cb96 <__cxa_guard_acquire>
 8021e66:	b138      	cbz	r0, 8021e78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021e68:	4620      	mov	r0, r4
 8021e6a:	f00a fea0 	bl	802cbae <__cxa_guard_release>
 8021e6e:	4a0f      	ldr	r2, [pc, #60]	; (8021eac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021e70:	490f      	ldr	r1, [pc, #60]	; (8021eb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8021e72:	4810      	ldr	r0, [pc, #64]	; (8021eb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021e74:	f00a fe88 	bl	802cb88 <__aeabi_atexit>
 8021e78:	4c0f      	ldr	r4, [pc, #60]	; (8021eb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8021e7a:	7823      	ldrb	r3, [r4, #0]
 8021e7c:	f3bf 8f5b 	dmb	ish
 8021e80:	07db      	lsls	r3, r3, #31
 8021e82:	d40b      	bmi.n	8021e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021e84:	4620      	mov	r0, r4
 8021e86:	f00a fe86 	bl	802cb96 <__cxa_guard_acquire>
 8021e8a:	b138      	cbz	r0, 8021e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021e8c:	4620      	mov	r0, r4
 8021e8e:	f00a fe8e 	bl	802cbae <__cxa_guard_release>
 8021e92:	4a06      	ldr	r2, [pc, #24]	; (8021eac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021e94:	4909      	ldr	r1, [pc, #36]	; (8021ebc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8021e96:	480a      	ldr	r0, [pc, #40]	; (8021ec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021e98:	f00a fe76 	bl	802cb88 <__aeabi_atexit>
 8021e9c:	4b05      	ldr	r3, [pc, #20]	; (8021eb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021e9e:	622b      	str	r3, [r5, #32]
 8021ea0:	4b07      	ldr	r3, [pc, #28]	; (8021ec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021ea2:	626b      	str	r3, [r5, #36]	; 0x24
 8021ea4:	bd38      	pop	{r3, r4, r5, pc}
 8021ea6:	bf00      	nop
 8021ea8:	20013924 	.word	0x20013924
 8021eac:	20000000 	.word	0x20000000
 8021eb0:	0801eb4f 	.word	0x0801eb4f
 8021eb4:	200000e0 	.word	0x200000e0
 8021eb8:	20013928 	.word	0x20013928
 8021ebc:	0801eb4d 	.word	0x0801eb4d
 8021ec0:	200000e4 	.word	0x200000e4

08021ec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021ec4:	b538      	push	{r3, r4, r5, lr}
 8021ec6:	4c15      	ldr	r4, [pc, #84]	; (8021f1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8021ec8:	7823      	ldrb	r3, [r4, #0]
 8021eca:	f3bf 8f5b 	dmb	ish
 8021ece:	07da      	lsls	r2, r3, #31
 8021ed0:	4605      	mov	r5, r0
 8021ed2:	d40b      	bmi.n	8021eec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021ed4:	4620      	mov	r0, r4
 8021ed6:	f00a fe5e 	bl	802cb96 <__cxa_guard_acquire>
 8021eda:	b138      	cbz	r0, 8021eec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021edc:	4620      	mov	r0, r4
 8021ede:	f00a fe66 	bl	802cbae <__cxa_guard_release>
 8021ee2:	4a0f      	ldr	r2, [pc, #60]	; (8021f20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021ee4:	490f      	ldr	r1, [pc, #60]	; (8021f24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8021ee6:	4810      	ldr	r0, [pc, #64]	; (8021f28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021ee8:	f00a fe4e 	bl	802cb88 <__aeabi_atexit>
 8021eec:	4c0f      	ldr	r4, [pc, #60]	; (8021f2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8021eee:	7823      	ldrb	r3, [r4, #0]
 8021ef0:	f3bf 8f5b 	dmb	ish
 8021ef4:	07db      	lsls	r3, r3, #31
 8021ef6:	d40b      	bmi.n	8021f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021ef8:	4620      	mov	r0, r4
 8021efa:	f00a fe4c 	bl	802cb96 <__cxa_guard_acquire>
 8021efe:	b138      	cbz	r0, 8021f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021f00:	4620      	mov	r0, r4
 8021f02:	f00a fe54 	bl	802cbae <__cxa_guard_release>
 8021f06:	4a06      	ldr	r2, [pc, #24]	; (8021f20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021f08:	4909      	ldr	r1, [pc, #36]	; (8021f30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8021f0a:	480a      	ldr	r0, [pc, #40]	; (8021f34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021f0c:	f00a fe3c 	bl	802cb88 <__aeabi_atexit>
 8021f10:	4b05      	ldr	r3, [pc, #20]	; (8021f28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021f12:	61ab      	str	r3, [r5, #24]
 8021f14:	4b07      	ldr	r3, [pc, #28]	; (8021f34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021f16:	61eb      	str	r3, [r5, #28]
 8021f18:	bd38      	pop	{r3, r4, r5, pc}
 8021f1a:	bf00      	nop
 8021f1c:	200138fc 	.word	0x200138fc
 8021f20:	20000000 	.word	0x20000000
 8021f24:	0801eb53 	.word	0x0801eb53
 8021f28:	200000b8 	.word	0x200000b8
 8021f2c:	20013900 	.word	0x20013900
 8021f30:	0801eb51 	.word	0x0801eb51
 8021f34:	200000bc 	.word	0x200000bc

08021f38 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8021f38:	b510      	push	{r4, lr}
 8021f3a:	4604      	mov	r4, r0
 8021f3c:	f7ff ff88 	bl	8021e50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8021f40:	4620      	mov	r0, r4
 8021f42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021f46:	f7ff bfbd 	b.w	8021ec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08021f4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8021f4c:	b538      	push	{r3, r4, r5, lr}
 8021f4e:	4c15      	ldr	r4, [pc, #84]	; (8021fa4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8021f50:	7823      	ldrb	r3, [r4, #0]
 8021f52:	f3bf 8f5b 	dmb	ish
 8021f56:	07da      	lsls	r2, r3, #31
 8021f58:	4605      	mov	r5, r0
 8021f5a:	d40b      	bmi.n	8021f74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021f5c:	4620      	mov	r0, r4
 8021f5e:	f00a fe1a 	bl	802cb96 <__cxa_guard_acquire>
 8021f62:	b138      	cbz	r0, 8021f74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021f64:	4620      	mov	r0, r4
 8021f66:	f00a fe22 	bl	802cbae <__cxa_guard_release>
 8021f6a:	4a0f      	ldr	r2, [pc, #60]	; (8021fa8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021f6c:	490f      	ldr	r1, [pc, #60]	; (8021fac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8021f6e:	4810      	ldr	r0, [pc, #64]	; (8021fb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021f70:	f00a fe0a 	bl	802cb88 <__aeabi_atexit>
 8021f74:	4c0f      	ldr	r4, [pc, #60]	; (8021fb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8021f76:	7823      	ldrb	r3, [r4, #0]
 8021f78:	f3bf 8f5b 	dmb	ish
 8021f7c:	07db      	lsls	r3, r3, #31
 8021f7e:	d40b      	bmi.n	8021f98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021f80:	4620      	mov	r0, r4
 8021f82:	f00a fe08 	bl	802cb96 <__cxa_guard_acquire>
 8021f86:	b138      	cbz	r0, 8021f98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021f88:	4620      	mov	r0, r4
 8021f8a:	f00a fe10 	bl	802cbae <__cxa_guard_release>
 8021f8e:	4a06      	ldr	r2, [pc, #24]	; (8021fa8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021f90:	4909      	ldr	r1, [pc, #36]	; (8021fb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8021f92:	480a      	ldr	r0, [pc, #40]	; (8021fbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021f94:	f00a fdf8 	bl	802cb88 <__aeabi_atexit>
 8021f98:	4b05      	ldr	r3, [pc, #20]	; (8021fb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021f9a:	632b      	str	r3, [r5, #48]	; 0x30
 8021f9c:	4b07      	ldr	r3, [pc, #28]	; (8021fbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021f9e:	636b      	str	r3, [r5, #52]	; 0x34
 8021fa0:	bd38      	pop	{r3, r4, r5, pc}
 8021fa2:	bf00      	nop
 8021fa4:	20013934 	.word	0x20013934
 8021fa8:	20000000 	.word	0x20000000
 8021fac:	0801eb47 	.word	0x0801eb47
 8021fb0:	200000f0 	.word	0x200000f0
 8021fb4:	20013938 	.word	0x20013938
 8021fb8:	0801eb45 	.word	0x0801eb45
 8021fbc:	200000f4 	.word	0x200000f4

08021fc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8021fc0:	b538      	push	{r3, r4, r5, lr}
 8021fc2:	4c15      	ldr	r4, [pc, #84]	; (8022018 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8021fc4:	7823      	ldrb	r3, [r4, #0]
 8021fc6:	f3bf 8f5b 	dmb	ish
 8021fca:	07da      	lsls	r2, r3, #31
 8021fcc:	4605      	mov	r5, r0
 8021fce:	d40b      	bmi.n	8021fe8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021fd0:	4620      	mov	r0, r4
 8021fd2:	f00a fde0 	bl	802cb96 <__cxa_guard_acquire>
 8021fd6:	b138      	cbz	r0, 8021fe8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021fd8:	4620      	mov	r0, r4
 8021fda:	f00a fde8 	bl	802cbae <__cxa_guard_release>
 8021fde:	4a0f      	ldr	r2, [pc, #60]	; (802201c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021fe0:	490f      	ldr	r1, [pc, #60]	; (8022020 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8021fe2:	4810      	ldr	r0, [pc, #64]	; (8022024 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021fe4:	f00a fdd0 	bl	802cb88 <__aeabi_atexit>
 8021fe8:	4c0f      	ldr	r4, [pc, #60]	; (8022028 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8021fea:	7823      	ldrb	r3, [r4, #0]
 8021fec:	f3bf 8f5b 	dmb	ish
 8021ff0:	07db      	lsls	r3, r3, #31
 8021ff2:	d40b      	bmi.n	802200c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021ff4:	4620      	mov	r0, r4
 8021ff6:	f00a fdce 	bl	802cb96 <__cxa_guard_acquire>
 8021ffa:	b138      	cbz	r0, 802200c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021ffc:	4620      	mov	r0, r4
 8021ffe:	f00a fdd6 	bl	802cbae <__cxa_guard_release>
 8022002:	4a06      	ldr	r2, [pc, #24]	; (802201c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8022004:	4909      	ldr	r1, [pc, #36]	; (802202c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8022006:	480a      	ldr	r0, [pc, #40]	; (8022030 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8022008:	f00a fdbe 	bl	802cb88 <__aeabi_atexit>
 802200c:	4b05      	ldr	r3, [pc, #20]	; (8022024 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802200e:	62ab      	str	r3, [r5, #40]	; 0x28
 8022010:	4b07      	ldr	r3, [pc, #28]	; (8022030 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8022012:	62eb      	str	r3, [r5, #44]	; 0x2c
 8022014:	bd38      	pop	{r3, r4, r5, pc}
 8022016:	bf00      	nop
 8022018:	20013904 	.word	0x20013904
 802201c:	20000000 	.word	0x20000000
 8022020:	0801eb4b 	.word	0x0801eb4b
 8022024:	200000c0 	.word	0x200000c0
 8022028:	20013908 	.word	0x20013908
 802202c:	0801eb49 	.word	0x0801eb49
 8022030:	200000c4 	.word	0x200000c4

08022034 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8022034:	b510      	push	{r4, lr}
 8022036:	4604      	mov	r4, r0
 8022038:	f7ff ff88 	bl	8021f4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802203c:	4620      	mov	r0, r4
 802203e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022042:	f7ff bfbd 	b.w	8021fc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08022048 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8022048:	b538      	push	{r3, r4, r5, lr}
 802204a:	4c15      	ldr	r4, [pc, #84]	; (80220a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802204c:	7823      	ldrb	r3, [r4, #0]
 802204e:	f3bf 8f5b 	dmb	ish
 8022052:	07da      	lsls	r2, r3, #31
 8022054:	4605      	mov	r5, r0
 8022056:	d40b      	bmi.n	8022070 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022058:	4620      	mov	r0, r4
 802205a:	f00a fd9c 	bl	802cb96 <__cxa_guard_acquire>
 802205e:	b138      	cbz	r0, 8022070 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022060:	4620      	mov	r0, r4
 8022062:	f00a fda4 	bl	802cbae <__cxa_guard_release>
 8022066:	4a0f      	ldr	r2, [pc, #60]	; (80220a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022068:	490f      	ldr	r1, [pc, #60]	; (80220a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802206a:	4810      	ldr	r0, [pc, #64]	; (80220ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802206c:	f00a fd8c 	bl	802cb88 <__aeabi_atexit>
 8022070:	4c0f      	ldr	r4, [pc, #60]	; (80220b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8022072:	7823      	ldrb	r3, [r4, #0]
 8022074:	f3bf 8f5b 	dmb	ish
 8022078:	07db      	lsls	r3, r3, #31
 802207a:	d40b      	bmi.n	8022094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802207c:	4620      	mov	r0, r4
 802207e:	f00a fd8a 	bl	802cb96 <__cxa_guard_acquire>
 8022082:	b138      	cbz	r0, 8022094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022084:	4620      	mov	r0, r4
 8022086:	f00a fd92 	bl	802cbae <__cxa_guard_release>
 802208a:	4a06      	ldr	r2, [pc, #24]	; (80220a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802208c:	4909      	ldr	r1, [pc, #36]	; (80220b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802208e:	480a      	ldr	r0, [pc, #40]	; (80220b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022090:	f00a fd7a 	bl	802cb88 <__aeabi_atexit>
 8022094:	4b05      	ldr	r3, [pc, #20]	; (80220ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022096:	652b      	str	r3, [r5, #80]	; 0x50
 8022098:	4b07      	ldr	r3, [pc, #28]	; (80220b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802209a:	656b      	str	r3, [r5, #84]	; 0x54
 802209c:	bd38      	pop	{r3, r4, r5, pc}
 802209e:	bf00      	nop
 80220a0:	2001393c 	.word	0x2001393c
 80220a4:	20000000 	.word	0x20000000
 80220a8:	0801eb37 	.word	0x0801eb37
 80220ac:	200000f8 	.word	0x200000f8
 80220b0:	20013940 	.word	0x20013940
 80220b4:	0801eb35 	.word	0x0801eb35
 80220b8:	200000fc 	.word	0x200000fc

080220bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80220bc:	b538      	push	{r3, r4, r5, lr}
 80220be:	4c15      	ldr	r4, [pc, #84]	; (8022114 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80220c0:	7823      	ldrb	r3, [r4, #0]
 80220c2:	f3bf 8f5b 	dmb	ish
 80220c6:	07da      	lsls	r2, r3, #31
 80220c8:	4605      	mov	r5, r0
 80220ca:	d40b      	bmi.n	80220e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80220cc:	4620      	mov	r0, r4
 80220ce:	f00a fd62 	bl	802cb96 <__cxa_guard_acquire>
 80220d2:	b138      	cbz	r0, 80220e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80220d4:	4620      	mov	r0, r4
 80220d6:	f00a fd6a 	bl	802cbae <__cxa_guard_release>
 80220da:	4a0f      	ldr	r2, [pc, #60]	; (8022118 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80220dc:	490f      	ldr	r1, [pc, #60]	; (802211c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80220de:	4810      	ldr	r0, [pc, #64]	; (8022120 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80220e0:	f00a fd52 	bl	802cb88 <__aeabi_atexit>
 80220e4:	4c0f      	ldr	r4, [pc, #60]	; (8022124 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80220e6:	7823      	ldrb	r3, [r4, #0]
 80220e8:	f3bf 8f5b 	dmb	ish
 80220ec:	07db      	lsls	r3, r3, #31
 80220ee:	d40b      	bmi.n	8022108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80220f0:	4620      	mov	r0, r4
 80220f2:	f00a fd50 	bl	802cb96 <__cxa_guard_acquire>
 80220f6:	b138      	cbz	r0, 8022108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80220f8:	4620      	mov	r0, r4
 80220fa:	f00a fd58 	bl	802cbae <__cxa_guard_release>
 80220fe:	4a06      	ldr	r2, [pc, #24]	; (8022118 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8022100:	4909      	ldr	r1, [pc, #36]	; (8022128 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8022102:	480a      	ldr	r0, [pc, #40]	; (802212c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8022104:	f00a fd40 	bl	802cb88 <__aeabi_atexit>
 8022108:	4b05      	ldr	r3, [pc, #20]	; (8022120 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802210a:	64ab      	str	r3, [r5, #72]	; 0x48
 802210c:	4b07      	ldr	r3, [pc, #28]	; (802212c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 802210e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8022110:	bd38      	pop	{r3, r4, r5, pc}
 8022112:	bf00      	nop
 8022114:	20013944 	.word	0x20013944
 8022118:	20000000 	.word	0x20000000
 802211c:	0801eb3b 	.word	0x0801eb3b
 8022120:	20000100 	.word	0x20000100
 8022124:	20013948 	.word	0x20013948
 8022128:	0801eb39 	.word	0x0801eb39
 802212c:	20000104 	.word	0x20000104

08022130 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8022130:	b538      	push	{r3, r4, r5, lr}
 8022132:	4c15      	ldr	r4, [pc, #84]	; (8022188 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8022134:	7823      	ldrb	r3, [r4, #0]
 8022136:	f3bf 8f5b 	dmb	ish
 802213a:	07da      	lsls	r2, r3, #31
 802213c:	4605      	mov	r5, r0
 802213e:	d40b      	bmi.n	8022158 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022140:	4620      	mov	r0, r4
 8022142:	f00a fd28 	bl	802cb96 <__cxa_guard_acquire>
 8022146:	b138      	cbz	r0, 8022158 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022148:	4620      	mov	r0, r4
 802214a:	f00a fd30 	bl	802cbae <__cxa_guard_release>
 802214e:	4a0f      	ldr	r2, [pc, #60]	; (802218c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022150:	490f      	ldr	r1, [pc, #60]	; (8022190 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8022152:	4810      	ldr	r0, [pc, #64]	; (8022194 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022154:	f00a fd18 	bl	802cb88 <__aeabi_atexit>
 8022158:	4c0f      	ldr	r4, [pc, #60]	; (8022198 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802215a:	7823      	ldrb	r3, [r4, #0]
 802215c:	f3bf 8f5b 	dmb	ish
 8022160:	07db      	lsls	r3, r3, #31
 8022162:	d40b      	bmi.n	802217c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022164:	4620      	mov	r0, r4
 8022166:	f00a fd16 	bl	802cb96 <__cxa_guard_acquire>
 802216a:	b138      	cbz	r0, 802217c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802216c:	4620      	mov	r0, r4
 802216e:	f00a fd1e 	bl	802cbae <__cxa_guard_release>
 8022172:	4a06      	ldr	r2, [pc, #24]	; (802218c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022174:	4909      	ldr	r1, [pc, #36]	; (802219c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8022176:	480a      	ldr	r0, [pc, #40]	; (80221a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022178:	f00a fd06 	bl	802cb88 <__aeabi_atexit>
 802217c:	4b05      	ldr	r3, [pc, #20]	; (8022194 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802217e:	642b      	str	r3, [r5, #64]	; 0x40
 8022180:	4b07      	ldr	r3, [pc, #28]	; (80221a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022182:	646b      	str	r3, [r5, #68]	; 0x44
 8022184:	bd38      	pop	{r3, r4, r5, pc}
 8022186:	bf00      	nop
 8022188:	2001390c 	.word	0x2001390c
 802218c:	20000000 	.word	0x20000000
 8022190:	0801eb3f 	.word	0x0801eb3f
 8022194:	200000c8 	.word	0x200000c8
 8022198:	20013910 	.word	0x20013910
 802219c:	0801eb3d 	.word	0x0801eb3d
 80221a0:	200000cc 	.word	0x200000cc

080221a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80221a4:	b538      	push	{r3, r4, r5, lr}
 80221a6:	4c15      	ldr	r4, [pc, #84]	; (80221fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80221a8:	7823      	ldrb	r3, [r4, #0]
 80221aa:	f3bf 8f5b 	dmb	ish
 80221ae:	07da      	lsls	r2, r3, #31
 80221b0:	4605      	mov	r5, r0
 80221b2:	d40b      	bmi.n	80221cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80221b4:	4620      	mov	r0, r4
 80221b6:	f00a fcee 	bl	802cb96 <__cxa_guard_acquire>
 80221ba:	b138      	cbz	r0, 80221cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80221bc:	4620      	mov	r0, r4
 80221be:	f00a fcf6 	bl	802cbae <__cxa_guard_release>
 80221c2:	4a0f      	ldr	r2, [pc, #60]	; (8022200 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80221c4:	490f      	ldr	r1, [pc, #60]	; (8022204 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80221c6:	4810      	ldr	r0, [pc, #64]	; (8022208 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80221c8:	f00a fcde 	bl	802cb88 <__aeabi_atexit>
 80221cc:	4c0f      	ldr	r4, [pc, #60]	; (802220c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80221ce:	7823      	ldrb	r3, [r4, #0]
 80221d0:	f3bf 8f5b 	dmb	ish
 80221d4:	07db      	lsls	r3, r3, #31
 80221d6:	d40b      	bmi.n	80221f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80221d8:	4620      	mov	r0, r4
 80221da:	f00a fcdc 	bl	802cb96 <__cxa_guard_acquire>
 80221de:	b138      	cbz	r0, 80221f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80221e0:	4620      	mov	r0, r4
 80221e2:	f00a fce4 	bl	802cbae <__cxa_guard_release>
 80221e6:	4a06      	ldr	r2, [pc, #24]	; (8022200 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80221e8:	4909      	ldr	r1, [pc, #36]	; (8022210 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80221ea:	480a      	ldr	r0, [pc, #40]	; (8022214 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80221ec:	f00a fccc 	bl	802cb88 <__aeabi_atexit>
 80221f0:	4b05      	ldr	r3, [pc, #20]	; (8022208 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80221f2:	63ab      	str	r3, [r5, #56]	; 0x38
 80221f4:	4b07      	ldr	r3, [pc, #28]	; (8022214 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80221f6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80221f8:	bd38      	pop	{r3, r4, r5, pc}
 80221fa:	bf00      	nop
 80221fc:	2001392c 	.word	0x2001392c
 8022200:	20000000 	.word	0x20000000
 8022204:	0801eb43 	.word	0x0801eb43
 8022208:	200000e8 	.word	0x200000e8
 802220c:	20013930 	.word	0x20013930
 8022210:	0801eb41 	.word	0x0801eb41
 8022214:	200000ec 	.word	0x200000ec

08022218 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8022218:	b510      	push	{r4, lr}
 802221a:	4604      	mov	r4, r0
 802221c:	f7ff ff14 	bl	8022048 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8022220:	4620      	mov	r0, r4
 8022222:	f7ff ff85 	bl	8022130 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8022226:	4620      	mov	r0, r4
 8022228:	f7ff ff48 	bl	80220bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802222c:	4620      	mov	r0, r4
 802222e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022232:	f7ff bfb7 	b.w	80221a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08022238 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8022238:	b538      	push	{r3, r4, r5, lr}
 802223a:	4c15      	ldr	r4, [pc, #84]	; (8022290 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802223c:	7823      	ldrb	r3, [r4, #0]
 802223e:	f3bf 8f5b 	dmb	ish
 8022242:	07da      	lsls	r2, r3, #31
 8022244:	4605      	mov	r5, r0
 8022246:	d40b      	bmi.n	8022260 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022248:	4620      	mov	r0, r4
 802224a:	f00a fca4 	bl	802cb96 <__cxa_guard_acquire>
 802224e:	b138      	cbz	r0, 8022260 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022250:	4620      	mov	r0, r4
 8022252:	f00a fcac 	bl	802cbae <__cxa_guard_release>
 8022256:	4a0f      	ldr	r2, [pc, #60]	; (8022294 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022258:	490f      	ldr	r1, [pc, #60]	; (8022298 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802225a:	4810      	ldr	r0, [pc, #64]	; (802229c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802225c:	f00a fc94 	bl	802cb88 <__aeabi_atexit>
 8022260:	4c0f      	ldr	r4, [pc, #60]	; (80222a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8022262:	7823      	ldrb	r3, [r4, #0]
 8022264:	f3bf 8f5b 	dmb	ish
 8022268:	07db      	lsls	r3, r3, #31
 802226a:	d40b      	bmi.n	8022284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802226c:	4620      	mov	r0, r4
 802226e:	f00a fc92 	bl	802cb96 <__cxa_guard_acquire>
 8022272:	b138      	cbz	r0, 8022284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022274:	4620      	mov	r0, r4
 8022276:	f00a fc9a 	bl	802cbae <__cxa_guard_release>
 802227a:	4a06      	ldr	r2, [pc, #24]	; (8022294 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802227c:	4909      	ldr	r1, [pc, #36]	; (80222a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802227e:	480a      	ldr	r0, [pc, #40]	; (80222a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022280:	f00a fc82 	bl	802cb88 <__aeabi_atexit>
 8022284:	4b05      	ldr	r3, [pc, #20]	; (802229c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022286:	662b      	str	r3, [r5, #96]	; 0x60
 8022288:	4b07      	ldr	r3, [pc, #28]	; (80222a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802228a:	666b      	str	r3, [r5, #100]	; 0x64
 802228c:	bd38      	pop	{r3, r4, r5, pc}
 802228e:	bf00      	nop
 8022290:	20013914 	.word	0x20013914
 8022294:	20000000 	.word	0x20000000
 8022298:	0801eb2f 	.word	0x0801eb2f
 802229c:	200000d0 	.word	0x200000d0
 80222a0:	20013918 	.word	0x20013918
 80222a4:	0801eb2d 	.word	0x0801eb2d
 80222a8:	200000d4 	.word	0x200000d4

080222ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80222ac:	b538      	push	{r3, r4, r5, lr}
 80222ae:	4c15      	ldr	r4, [pc, #84]	; (8022304 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80222b0:	7823      	ldrb	r3, [r4, #0]
 80222b2:	f3bf 8f5b 	dmb	ish
 80222b6:	07da      	lsls	r2, r3, #31
 80222b8:	4605      	mov	r5, r0
 80222ba:	d40b      	bmi.n	80222d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80222bc:	4620      	mov	r0, r4
 80222be:	f00a fc6a 	bl	802cb96 <__cxa_guard_acquire>
 80222c2:	b138      	cbz	r0, 80222d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80222c4:	4620      	mov	r0, r4
 80222c6:	f00a fc72 	bl	802cbae <__cxa_guard_release>
 80222ca:	4a0f      	ldr	r2, [pc, #60]	; (8022308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80222cc:	490f      	ldr	r1, [pc, #60]	; (802230c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80222ce:	4810      	ldr	r0, [pc, #64]	; (8022310 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80222d0:	f00a fc5a 	bl	802cb88 <__aeabi_atexit>
 80222d4:	4c0f      	ldr	r4, [pc, #60]	; (8022314 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80222d6:	7823      	ldrb	r3, [r4, #0]
 80222d8:	f3bf 8f5b 	dmb	ish
 80222dc:	07db      	lsls	r3, r3, #31
 80222de:	d40b      	bmi.n	80222f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80222e0:	4620      	mov	r0, r4
 80222e2:	f00a fc58 	bl	802cb96 <__cxa_guard_acquire>
 80222e6:	b138      	cbz	r0, 80222f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80222e8:	4620      	mov	r0, r4
 80222ea:	f00a fc60 	bl	802cbae <__cxa_guard_release>
 80222ee:	4a06      	ldr	r2, [pc, #24]	; (8022308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80222f0:	4909      	ldr	r1, [pc, #36]	; (8022318 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80222f2:	480a      	ldr	r0, [pc, #40]	; (802231c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80222f4:	f00a fc48 	bl	802cb88 <__aeabi_atexit>
 80222f8:	4b05      	ldr	r3, [pc, #20]	; (8022310 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80222fa:	65ab      	str	r3, [r5, #88]	; 0x58
 80222fc:	4b07      	ldr	r3, [pc, #28]	; (802231c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80222fe:	65eb      	str	r3, [r5, #92]	; 0x5c
 8022300:	bd38      	pop	{r3, r4, r5, pc}
 8022302:	bf00      	nop
 8022304:	200138ec 	.word	0x200138ec
 8022308:	20000000 	.word	0x20000000
 802230c:	0801eb33 	.word	0x0801eb33
 8022310:	200000a8 	.word	0x200000a8
 8022314:	200138f0 	.word	0x200138f0
 8022318:	0801eb31 	.word	0x0801eb31
 802231c:	200000ac 	.word	0x200000ac

08022320 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8022320:	b510      	push	{r4, lr}
 8022322:	4604      	mov	r4, r0
 8022324:	f7ff ff88 	bl	8022238 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8022328:	4620      	mov	r0, r4
 802232a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802232e:	f7ff bfbd 	b.w	80222ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08022334 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8022334:	b538      	push	{r3, r4, r5, lr}
 8022336:	4c15      	ldr	r4, [pc, #84]	; (802238c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8022338:	7823      	ldrb	r3, [r4, #0]
 802233a:	f3bf 8f5b 	dmb	ish
 802233e:	07da      	lsls	r2, r3, #31
 8022340:	4605      	mov	r5, r0
 8022342:	d40b      	bmi.n	802235c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022344:	4620      	mov	r0, r4
 8022346:	f00a fc26 	bl	802cb96 <__cxa_guard_acquire>
 802234a:	b138      	cbz	r0, 802235c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802234c:	4620      	mov	r0, r4
 802234e:	f00a fc2e 	bl	802cbae <__cxa_guard_release>
 8022352:	4a0f      	ldr	r2, [pc, #60]	; (8022390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022354:	490f      	ldr	r1, [pc, #60]	; (8022394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8022356:	4810      	ldr	r0, [pc, #64]	; (8022398 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022358:	f00a fc16 	bl	802cb88 <__aeabi_atexit>
 802235c:	4c0f      	ldr	r4, [pc, #60]	; (802239c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802235e:	7823      	ldrb	r3, [r4, #0]
 8022360:	f3bf 8f5b 	dmb	ish
 8022364:	07db      	lsls	r3, r3, #31
 8022366:	d40b      	bmi.n	8022380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022368:	4620      	mov	r0, r4
 802236a:	f00a fc14 	bl	802cb96 <__cxa_guard_acquire>
 802236e:	b138      	cbz	r0, 8022380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022370:	4620      	mov	r0, r4
 8022372:	f00a fc1c 	bl	802cbae <__cxa_guard_release>
 8022376:	4a06      	ldr	r2, [pc, #24]	; (8022390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022378:	4909      	ldr	r1, [pc, #36]	; (80223a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802237a:	480a      	ldr	r0, [pc, #40]	; (80223a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802237c:	f00a fc04 	bl	802cb88 <__aeabi_atexit>
 8022380:	4b05      	ldr	r3, [pc, #20]	; (8022398 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022382:	672b      	str	r3, [r5, #112]	; 0x70
 8022384:	4b07      	ldr	r3, [pc, #28]	; (80223a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022386:	676b      	str	r3, [r5, #116]	; 0x74
 8022388:	bd38      	pop	{r3, r4, r5, pc}
 802238a:	bf00      	nop
 802238c:	200138e4 	.word	0x200138e4
 8022390:	20000000 	.word	0x20000000
 8022394:	0801eb27 	.word	0x0801eb27
 8022398:	200000a0 	.word	0x200000a0
 802239c:	200138e8 	.word	0x200138e8
 80223a0:	0801eb25 	.word	0x0801eb25
 80223a4:	200000a4 	.word	0x200000a4

080223a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80223a8:	b538      	push	{r3, r4, r5, lr}
 80223aa:	4c15      	ldr	r4, [pc, #84]	; (8022400 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80223ac:	7823      	ldrb	r3, [r4, #0]
 80223ae:	f3bf 8f5b 	dmb	ish
 80223b2:	07da      	lsls	r2, r3, #31
 80223b4:	4605      	mov	r5, r0
 80223b6:	d40b      	bmi.n	80223d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80223b8:	4620      	mov	r0, r4
 80223ba:	f00a fbec 	bl	802cb96 <__cxa_guard_acquire>
 80223be:	b138      	cbz	r0, 80223d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80223c0:	4620      	mov	r0, r4
 80223c2:	f00a fbf4 	bl	802cbae <__cxa_guard_release>
 80223c6:	4a0f      	ldr	r2, [pc, #60]	; (8022404 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80223c8:	490f      	ldr	r1, [pc, #60]	; (8022408 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80223ca:	4810      	ldr	r0, [pc, #64]	; (802240c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80223cc:	f00a fbdc 	bl	802cb88 <__aeabi_atexit>
 80223d0:	4c0f      	ldr	r4, [pc, #60]	; (8022410 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80223d2:	7823      	ldrb	r3, [r4, #0]
 80223d4:	f3bf 8f5b 	dmb	ish
 80223d8:	07db      	lsls	r3, r3, #31
 80223da:	d40b      	bmi.n	80223f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80223dc:	4620      	mov	r0, r4
 80223de:	f00a fbda 	bl	802cb96 <__cxa_guard_acquire>
 80223e2:	b138      	cbz	r0, 80223f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80223e4:	4620      	mov	r0, r4
 80223e6:	f00a fbe2 	bl	802cbae <__cxa_guard_release>
 80223ea:	4a06      	ldr	r2, [pc, #24]	; (8022404 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80223ec:	4909      	ldr	r1, [pc, #36]	; (8022414 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80223ee:	480a      	ldr	r0, [pc, #40]	; (8022418 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80223f0:	f00a fbca 	bl	802cb88 <__aeabi_atexit>
 80223f4:	4b05      	ldr	r3, [pc, #20]	; (802240c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80223f6:	66ab      	str	r3, [r5, #104]	; 0x68
 80223f8:	4b07      	ldr	r3, [pc, #28]	; (8022418 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80223fa:	66eb      	str	r3, [r5, #108]	; 0x6c
 80223fc:	bd38      	pop	{r3, r4, r5, pc}
 80223fe:	bf00      	nop
 8022400:	200138dc 	.word	0x200138dc
 8022404:	20000000 	.word	0x20000000
 8022408:	0801eb2b 	.word	0x0801eb2b
 802240c:	20000098 	.word	0x20000098
 8022410:	200138e0 	.word	0x200138e0
 8022414:	0801eb29 	.word	0x0801eb29
 8022418:	2000009c 	.word	0x2000009c

0802241c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802241c:	b510      	push	{r4, lr}
 802241e:	4604      	mov	r4, r0
 8022420:	f7ff ff88 	bl	8022334 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8022424:	4620      	mov	r0, r4
 8022426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802242a:	f7ff bfbd 	b.w	80223a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802242e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802242e:	b510      	push	{r4, lr}
 8022430:	4604      	mov	r4, r0
 8022432:	f7ff fff3 	bl	802241c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8022436:	4620      	mov	r0, r4
 8022438:	f7ff ff72 	bl	8022320 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802243c:	4620      	mov	r0, r4
 802243e:	f7ff fdf9 	bl	8022034 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8022442:	4620      	mov	r0, r4
 8022444:	f7ff fcfa 	bl	8021e3c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8022448:	4620      	mov	r0, r4
 802244a:	f7ff fd75 	bl	8021f38 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802244e:	4620      	mov	r0, r4
 8022450:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022454:	f7ff bee0 	b.w	8022218 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08022458 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8022458:	b538      	push	{r3, r4, r5, lr}
 802245a:	4c0b      	ldr	r4, [pc, #44]	; (8022488 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802245c:	7823      	ldrb	r3, [r4, #0]
 802245e:	f3bf 8f5b 	dmb	ish
 8022462:	07db      	lsls	r3, r3, #31
 8022464:	4605      	mov	r5, r0
 8022466:	d40b      	bmi.n	8022480 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022468:	4620      	mov	r0, r4
 802246a:	f00a fb94 	bl	802cb96 <__cxa_guard_acquire>
 802246e:	b138      	cbz	r0, 8022480 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022470:	4620      	mov	r0, r4
 8022472:	f00a fb9c 	bl	802cbae <__cxa_guard_release>
 8022476:	4a05      	ldr	r2, [pc, #20]	; (802248c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8022478:	4905      	ldr	r1, [pc, #20]	; (8022490 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802247a:	4806      	ldr	r0, [pc, #24]	; (8022494 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802247c:	f00a fb84 	bl	802cb88 <__aeabi_atexit>
 8022480:	4b04      	ldr	r3, [pc, #16]	; (8022494 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022482:	67ab      	str	r3, [r5, #120]	; 0x78
 8022484:	bd38      	pop	{r3, r4, r5, pc}
 8022486:	bf00      	nop
 8022488:	200138d0 	.word	0x200138d0
 802248c:	20000000 	.word	0x20000000
 8022490:	0801eb23 	.word	0x0801eb23
 8022494:	20000090 	.word	0x20000090

08022498 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8022498:	b538      	push	{r3, r4, r5, lr}
 802249a:	4c0b      	ldr	r4, [pc, #44]	; (80224c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802249c:	7823      	ldrb	r3, [r4, #0]
 802249e:	f3bf 8f5b 	dmb	ish
 80224a2:	07db      	lsls	r3, r3, #31
 80224a4:	4605      	mov	r5, r0
 80224a6:	d40b      	bmi.n	80224c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80224a8:	4620      	mov	r0, r4
 80224aa:	f00a fb74 	bl	802cb96 <__cxa_guard_acquire>
 80224ae:	b138      	cbz	r0, 80224c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80224b0:	4620      	mov	r0, r4
 80224b2:	f00a fb7c 	bl	802cbae <__cxa_guard_release>
 80224b6:	4a05      	ldr	r2, [pc, #20]	; (80224cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80224b8:	4905      	ldr	r1, [pc, #20]	; (80224d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80224ba:	4806      	ldr	r0, [pc, #24]	; (80224d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80224bc:	f00a fb64 	bl	802cb88 <__aeabi_atexit>
 80224c0:	4b04      	ldr	r3, [pc, #16]	; (80224d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80224c2:	67eb      	str	r3, [r5, #124]	; 0x7c
 80224c4:	bd38      	pop	{r3, r4, r5, pc}
 80224c6:	bf00      	nop
 80224c8:	200138d4 	.word	0x200138d4
 80224cc:	20000000 	.word	0x20000000
 80224d0:	0801eb21 	.word	0x0801eb21
 80224d4:	20000094 	.word	0x20000094

080224d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80224d8:	b570      	push	{r4, r5, r6, lr}
 80224da:	4d0d      	ldr	r5, [pc, #52]	; (8022510 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80224dc:	4c0d      	ldr	r4, [pc, #52]	; (8022514 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80224de:	782b      	ldrb	r3, [r5, #0]
 80224e0:	f3bf 8f5b 	dmb	ish
 80224e4:	f013 0f01 	tst.w	r3, #1
 80224e8:	4606      	mov	r6, r0
 80224ea:	d10d      	bne.n	8022508 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80224ec:	4628      	mov	r0, r5
 80224ee:	f00a fb52 	bl	802cb96 <__cxa_guard_acquire>
 80224f2:	b148      	cbz	r0, 8022508 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80224f4:	4b08      	ldr	r3, [pc, #32]	; (8022518 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80224f6:	6023      	str	r3, [r4, #0]
 80224f8:	4628      	mov	r0, r5
 80224fa:	f00a fb58 	bl	802cbae <__cxa_guard_release>
 80224fe:	4a07      	ldr	r2, [pc, #28]	; (802251c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8022500:	4907      	ldr	r1, [pc, #28]	; (8022520 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8022502:	4620      	mov	r0, r4
 8022504:	f00a fb40 	bl	802cb88 <__aeabi_atexit>
 8022508:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 802250c:	bd70      	pop	{r4, r5, r6, pc}
 802250e:	bf00      	nop
 8022510:	200138d8 	.word	0x200138d8
 8022514:	2001394c 	.word	0x2001394c
 8022518:	08031f70 	.word	0x08031f70
 802251c:	20000000 	.word	0x20000000
 8022520:	0801eb1f 	.word	0x0801eb1f

08022524 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8022524:	b510      	push	{r4, lr}
 8022526:	4604      	mov	r4, r0
 8022528:	f7ff ff96 	bl	8022458 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802252c:	4620      	mov	r0, r4
 802252e:	f7ff ffb3 	bl	8022498 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8022532:	4620      	mov	r0, r4
 8022534:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022538:	f7ff bfce 	b.w	80224d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802253c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802253c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022540:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8022544:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8022548:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802254c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8022550:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8022554:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8022558:	8808      	ldrh	r0, [r1, #0]
 802255a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802255e:	2d00      	cmp	r5, #0
 8022560:	eb02 0a0c 	add.w	sl, r2, ip
 8022564:	f2c0 80b0 	blt.w	80226c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022568:	45ab      	cmp	fp, r5
 802256a:	f340 80ad 	ble.w	80226c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802256e:	2c00      	cmp	r4, #0
 8022570:	f2c0 80a8 	blt.w	80226c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022574:	45a6      	cmp	lr, r4
 8022576:	f340 80a5 	ble.w	80226c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802257a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802257e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8022582:	1c62      	adds	r2, r4, #1
 8022584:	f100 80a3 	bmi.w	80226ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022588:	4596      	cmp	lr, r2
 802258a:	f340 80a0 	ble.w	80226ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802258e:	f1b9 0f00 	cmp.w	r9, #0
 8022592:	f000 809c 	beq.w	80226ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022596:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802259a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802259e:	3501      	adds	r5, #1
 80225a0:	f100 8099 	bmi.w	80226d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80225a4:	45ab      	cmp	fp, r5
 80225a6:	f340 8096 	ble.w	80226d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80225aa:	2f00      	cmp	r7, #0
 80225ac:	f000 8093 	beq.w	80226d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80225b0:	2c00      	cmp	r4, #0
 80225b2:	f2c0 808e 	blt.w	80226d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80225b6:	45a6      	cmp	lr, r4
 80225b8:	f340 808b 	ble.w	80226d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80225bc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80225c0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80225c4:	3401      	adds	r4, #1
 80225c6:	f100 8089 	bmi.w	80226dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80225ca:	45a6      	cmp	lr, r4
 80225cc:	f340 8086 	ble.w	80226dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80225d0:	f1b9 0f00 	cmp.w	r9, #0
 80225d4:	f000 8082 	beq.w	80226dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80225d8:	44d6      	add	lr, sl
 80225da:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80225de:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80225e2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80225e6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80225ea:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80225ee:	fb19 fe07 	smulbb	lr, r9, r7
 80225f2:	ea44 0808 	orr.w	r8, r4, r8
 80225f6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80225fa:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80225fe:	f1c7 0210 	rsb	r2, r7, #16
 8022602:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022606:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802260a:	ea44 0c0c 	orr.w	ip, r4, ip
 802260e:	eba2 0209 	sub.w	r2, r2, r9
 8022612:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022616:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802261a:	fb04 f40c 	mul.w	r4, r4, ip
 802261e:	fb02 4808 	mla	r8, r2, r8, r4
 8022622:	041a      	lsls	r2, r3, #16
 8022624:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022628:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802262c:	4313      	orrs	r3, r2
 802262e:	042a      	lsls	r2, r5, #16
 8022630:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022634:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022638:	fb0e 8303 	mla	r3, lr, r3, r8
 802263c:	432a      	orrs	r2, r5
 802263e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022642:	fb07 3202 	mla	r2, r7, r2, r3
 8022646:	0d53      	lsrs	r3, r2, #21
 8022648:	0952      	lsrs	r2, r2, #5
 802264a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802264e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022652:	431a      	orrs	r2, r3
 8022654:	b293      	uxth	r3, r2
 8022656:	b2b4      	uxth	r4, r6
 8022658:	1202      	asrs	r2, r0, #8
 802265a:	43f6      	mvns	r6, r6
 802265c:	b2f6      	uxtb	r6, r6
 802265e:	121d      	asrs	r5, r3, #8
 8022660:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022664:	fb12 f206 	smulbb	r2, r2, r6
 8022668:	10c7      	asrs	r7, r0, #3
 802266a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802266e:	00c0      	lsls	r0, r0, #3
 8022670:	fb05 2504 	mla	r5, r5, r4, r2
 8022674:	b2c0      	uxtb	r0, r0
 8022676:	10da      	asrs	r2, r3, #3
 8022678:	00db      	lsls	r3, r3, #3
 802267a:	b2db      	uxtb	r3, r3
 802267c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022680:	fb10 f006 	smulbb	r0, r0, r6
 8022684:	b2ad      	uxth	r5, r5
 8022686:	fb03 0004 	mla	r0, r3, r4, r0
 802268a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802268e:	fb17 f706 	smulbb	r7, r7, r6
 8022692:	b280      	uxth	r0, r0
 8022694:	1c6b      	adds	r3, r5, #1
 8022696:	fb02 7204 	mla	r2, r2, r4, r7
 802269a:	b292      	uxth	r2, r2
 802269c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80226a0:	1c43      	adds	r3, r0, #1
 80226a2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80226a6:	1c50      	adds	r0, r2, #1
 80226a8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80226ac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80226b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80226b4:	0952      	lsrs	r2, r2, #5
 80226b6:	432b      	orrs	r3, r5
 80226b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80226bc:	4313      	orrs	r3, r2
 80226be:	800b      	strh	r3, [r1, #0]
 80226c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80226c4:	4680      	mov	r8, r0
 80226c6:	e75c      	b.n	8022582 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80226c8:	4684      	mov	ip, r0
 80226ca:	4680      	mov	r8, r0
 80226cc:	e767      	b.n	802259e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80226ce:	4684      	mov	ip, r0
 80226d0:	e765      	b.n	802259e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80226d2:	4605      	mov	r5, r0
 80226d4:	e776      	b.n	80225c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80226d6:	4603      	mov	r3, r0
 80226d8:	4605      	mov	r5, r0
 80226da:	e782      	b.n	80225e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80226dc:	4603      	mov	r3, r0
 80226de:	e780      	b.n	80225e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080226e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80226e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226e4:	b099      	sub	sp, #100	; 0x64
 80226e6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80226ea:	9215      	str	r2, [sp, #84]	; 0x54
 80226ec:	9309      	str	r3, [sp, #36]	; 0x24
 80226ee:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80226f0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80226f4:	930d      	str	r3, [sp, #52]	; 0x34
 80226f6:	910c      	str	r1, [sp, #48]	; 0x30
 80226f8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80226fc:	9016      	str	r0, [sp, #88]	; 0x58
 80226fe:	6850      	ldr	r0, [r2, #4]
 8022700:	6812      	ldr	r2, [r2, #0]
 8022702:	fb00 1303 	mla	r3, r0, r3, r1
 8022706:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 802270a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802270c:	681b      	ldr	r3, [r3, #0]
 802270e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022710:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022712:	685e      	ldr	r6, [r3, #4]
 8022714:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022716:	43db      	mvns	r3, r3
 8022718:	b2db      	uxtb	r3, r3
 802271a:	3604      	adds	r6, #4
 802271c:	930a      	str	r3, [sp, #40]	; 0x28
 802271e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022720:	2b00      	cmp	r3, #0
 8022722:	dc03      	bgt.n	802272c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022724:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022726:	2b00      	cmp	r3, #0
 8022728:	f340 8225 	ble.w	8022b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802272c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802272e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022732:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022736:	1e48      	subs	r0, r1, #1
 8022738:	1e57      	subs	r7, r2, #1
 802273a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802273c:	2b00      	cmp	r3, #0
 802273e:	f340 80e3 	ble.w	8022908 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8022742:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8022746:	ea4f 4325 	mov.w	r3, r5, asr #16
 802274a:	d406      	bmi.n	802275a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802274c:	4584      	cmp	ip, r0
 802274e:	da04      	bge.n	802275a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022750:	2b00      	cmp	r3, #0
 8022752:	db02      	blt.n	802275a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022754:	42bb      	cmp	r3, r7
 8022756:	f2c0 80d8 	blt.w	802290a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802275a:	f11c 0c01 	adds.w	ip, ip, #1
 802275e:	f100 80c9 	bmi.w	80228f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022762:	4561      	cmp	r1, ip
 8022764:	f2c0 80c6 	blt.w	80228f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022768:	3301      	adds	r3, #1
 802276a:	f100 80c3 	bmi.w	80228f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802276e:	429a      	cmp	r2, r3
 8022770:	f2c0 80c0 	blt.w	80228f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022774:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022778:	4647      	mov	r7, r8
 802277a:	f1bb 0f00 	cmp.w	fp, #0
 802277e:	f340 80e3 	ble.w	8022948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8022782:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8022784:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022786:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802278a:	689b      	ldr	r3, [r3, #8]
 802278c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8022790:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022794:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8022798:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802279c:	f100 8121 	bmi.w	80229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80227a0:	f103 39ff 	add.w	r9, r3, #4294967295
 80227a4:	454a      	cmp	r2, r9
 80227a6:	f280 811c 	bge.w	80229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80227aa:	f1bc 0f00 	cmp.w	ip, #0
 80227ae:	f2c0 8118 	blt.w	80229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80227b2:	f10e 39ff 	add.w	r9, lr, #4294967295
 80227b6:	45cc      	cmp	ip, r9
 80227b8:	f280 8113 	bge.w	80229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80227bc:	b21b      	sxth	r3, r3
 80227be:	fb0c 2203 	mla	r2, ip, r3, r2
 80227c2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227c4:	eb04 0902 	add.w	r9, r4, r2
 80227c8:	5ca2      	ldrb	r2, [r4, r2]
 80227ca:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80227ce:	2800      	cmp	r0, #0
 80227d0:	f000 80fe 	beq.w	80229d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80227d4:	f899 2001 	ldrb.w	r2, [r9, #1]
 80227d8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80227dc:	9211      	str	r2, [sp, #68]	; 0x44
 80227de:	b151      	cbz	r1, 80227f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80227e0:	eb09 0203 	add.w	r2, r9, r3
 80227e4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80227e8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80227ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80227ee:	7853      	ldrb	r3, [r2, #1]
 80227f0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80227f4:	9312      	str	r3, [sp, #72]	; 0x48
 80227f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80227f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80227fa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80227fe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022802:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022806:	ea4c 0c03 	orr.w	ip, ip, r3
 802280a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802280c:	041b      	lsls	r3, r3, #16
 802280e:	fb10 f201 	smulbb	r2, r0, r1
 8022812:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022816:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802281a:	10d2      	asrs	r2, r2, #3
 802281c:	4323      	orrs	r3, r4
 802281e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8022822:	4353      	muls	r3, r2
 8022824:	fb09 330c 	mla	r3, r9, ip, r3
 8022828:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802282c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022830:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022834:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022838:	f1c1 0c10 	rsb	ip, r1, #16
 802283c:	ebac 0c00 	sub.w	ip, ip, r0
 8022840:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022844:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022848:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802284a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802284c:	0418      	lsls	r0, r3, #16
 802284e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022852:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022856:	4318      	orrs	r0, r3
 8022858:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802285c:	fb02 c200 	mla	r2, r2, r0, ip
 8022860:	0d53      	lsrs	r3, r2, #21
 8022862:	0952      	lsrs	r2, r2, #5
 8022864:	8838      	ldrh	r0, [r7, #0]
 8022866:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802286a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802286e:	431a      	orrs	r2, r3
 8022870:	b292      	uxth	r2, r2
 8022872:	1201      	asrs	r1, r0, #8
 8022874:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8022878:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802287c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022880:	fb11 f104 	smulbb	r1, r1, r4
 8022884:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022888:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802288c:	00c0      	lsls	r0, r0, #3
 802288e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8022892:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022896:	10d1      	asrs	r1, r2, #3
 8022898:	b2c0      	uxtb	r0, r0
 802289a:	00d2      	lsls	r2, r2, #3
 802289c:	b2d2      	uxtb	r2, r2
 802289e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80228a2:	fb1e fe04 	smulbb	lr, lr, r4
 80228a6:	fb10 f004 	smulbb	r0, r0, r4
 80228aa:	fa1f fc8c 	uxth.w	ip, ip
 80228ae:	fb01 e103 	mla	r1, r1, r3, lr
 80228b2:	fb02 0303 	mla	r3, r2, r3, r0
 80228b6:	b29a      	uxth	r2, r3
 80228b8:	f10c 0301 	add.w	r3, ip, #1
 80228bc:	b289      	uxth	r1, r1
 80228be:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80228c2:	1c53      	adds	r3, r2, #1
 80228c4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80228c8:	1c4a      	adds	r2, r1, #1
 80228ca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80228ce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80228d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80228d6:	0949      	lsrs	r1, r1, #5
 80228d8:	ea43 030c 	orr.w	r3, r3, ip
 80228dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80228e0:	430b      	orrs	r3, r1
 80228e2:	803b      	strh	r3, [r7, #0]
 80228e4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80228e6:	449a      	add	sl, r3
 80228e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80228ea:	3702      	adds	r7, #2
 80228ec:	441d      	add	r5, r3
 80228ee:	f10b 3bff 	add.w	fp, fp, #4294967295
 80228f2:	e742      	b.n	802277a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80228f4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80228f6:	449a      	add	sl, r3
 80228f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80228fa:	441d      	add	r5, r3
 80228fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228fe:	3b01      	subs	r3, #1
 8022900:	9309      	str	r3, [sp, #36]	; 0x24
 8022902:	f108 0802 	add.w	r8, r8, #2
 8022906:	e718      	b.n	802273a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8022908:	d023      	beq.n	8022952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 802290a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802290c:	9825      	ldr	r0, [sp, #148]	; 0x94
 802290e:	3b01      	subs	r3, #1
 8022910:	fb00 a003 	mla	r0, r0, r3, sl
 8022914:	1400      	asrs	r0, r0, #16
 8022916:	f53f af2d 	bmi.w	8022774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802291a:	3901      	subs	r1, #1
 802291c:	4288      	cmp	r0, r1
 802291e:	f6bf af29 	bge.w	8022774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022922:	9926      	ldr	r1, [sp, #152]	; 0x98
 8022924:	fb01 5303 	mla	r3, r1, r3, r5
 8022928:	141b      	asrs	r3, r3, #16
 802292a:	f53f af23 	bmi.w	8022774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802292e:	3a01      	subs	r2, #1
 8022930:	4293      	cmp	r3, r2
 8022932:	f6bf af1f 	bge.w	8022774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022936:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 802293a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 802293e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8022942:	f1be 0f00 	cmp.w	lr, #0
 8022946:	dc6c      	bgt.n	8022a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022948:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802294a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802294e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022952:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022954:	2b00      	cmp	r3, #0
 8022956:	f340 810e 	ble.w	8022b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802295a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802295e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022962:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022966:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022968:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802296c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022970:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022974:	eef0 6a62 	vmov.f32	s13, s5
 8022978:	ee61 7a27 	vmul.f32	s15, s2, s15
 802297c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022980:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022984:	ee16 aa90 	vmov	sl, s13
 8022988:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802298c:	eef0 6a43 	vmov.f32	s13, s6
 8022990:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022994:	ee12 2a90 	vmov	r2, s5
 8022998:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802299c:	fb92 f3f3 	sdiv	r3, r2, r3
 80229a0:	ee13 2a10 	vmov	r2, s6
 80229a4:	9325      	str	r3, [sp, #148]	; 0x94
 80229a6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80229a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80229ac:	9326      	str	r3, [sp, #152]	; 0x98
 80229ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80229b0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80229b2:	3b01      	subs	r3, #1
 80229b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80229b8:	930c      	str	r3, [sp, #48]	; 0x30
 80229ba:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80229bc:	bf08      	it	eq
 80229be:	4613      	moveq	r3, r2
 80229c0:	ee16 5a90 	vmov	r5, s13
 80229c4:	9309      	str	r3, [sp, #36]	; 0x24
 80229c6:	eeb0 3a67 	vmov.f32	s6, s15
 80229ca:	eef0 2a47 	vmov.f32	s5, s14
 80229ce:	e6a6      	b.n	802271e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80229d0:	2900      	cmp	r1, #0
 80229d2:	f43f af10 	beq.w	80227f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80229d6:	f819 3003 	ldrb.w	r3, [r9, r3]
 80229da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80229de:	930f      	str	r3, [sp, #60]	; 0x3c
 80229e0:	e709      	b.n	80227f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80229e2:	f112 0901 	adds.w	r9, r2, #1
 80229e6:	f53f af7d 	bmi.w	80228e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229ea:	454b      	cmp	r3, r9
 80229ec:	f6ff af7a 	blt.w	80228e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229f0:	f11c 0901 	adds.w	r9, ip, #1
 80229f4:	f53f af76 	bmi.w	80228e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229f8:	45ce      	cmp	lr, r9
 80229fa:	f6ff af73 	blt.w	80228e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229fe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022a00:	9202      	str	r2, [sp, #8]
 8022a02:	b21b      	sxth	r3, r3
 8022a04:	fa0f f28e 	sxth.w	r2, lr
 8022a08:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022a0c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8022a10:	9201      	str	r2, [sp, #4]
 8022a12:	9300      	str	r3, [sp, #0]
 8022a14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022a16:	9816      	ldr	r0, [sp, #88]	; 0x58
 8022a18:	4633      	mov	r3, r6
 8022a1a:	4639      	mov	r1, r7
 8022a1c:	f7ff fd8e 	bl	802253c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8022a20:	e760      	b.n	80228e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022a22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022a24:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a26:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022a2a:	ea4f 422a 	mov.w	r2, sl, asr #16
 8022a2e:	1429      	asrs	r1, r5, #16
 8022a30:	fb03 2101 	mla	r1, r3, r1, r2
 8022a34:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022a36:	440a      	add	r2, r1
 8022a38:	5c61      	ldrb	r1, [r4, r1]
 8022a3a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8022a3e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022a42:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8022a46:	f1bc 0f00 	cmp.w	ip, #0
 8022a4a:	f000 808c 	beq.w	8022b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8022a4e:	7857      	ldrb	r7, [r2, #1]
 8022a50:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8022a54:	9413      	str	r4, [sp, #76]	; 0x4c
 8022a56:	b140      	cbz	r0, 8022a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022a58:	18d7      	adds	r7, r2, r3
 8022a5a:	5cd3      	ldrb	r3, [r2, r3]
 8022a5c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a60:	9310      	str	r3, [sp, #64]	; 0x40
 8022a62:	787b      	ldrb	r3, [r7, #1]
 8022a64:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a68:	9314      	str	r3, [sp, #80]	; 0x50
 8022a6a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022a6c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a6e:	fb1c f200 	smulbb	r2, ip, r0
 8022a72:	041f      	lsls	r7, r3, #16
 8022a74:	10d2      	asrs	r2, r2, #3
 8022a76:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022a7a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8022a7e:	431f      	orrs	r7, r3
 8022a80:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8022a84:	9317      	str	r3, [sp, #92]	; 0x5c
 8022a86:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022a88:	041b      	lsls	r3, r3, #16
 8022a8a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8022a8e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022a92:	ea43 030b 	orr.w	r3, r3, fp
 8022a96:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022a98:	4353      	muls	r3, r2
 8022a9a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022a9e:	fb04 3707 	mla	r7, r4, r7, r3
 8022aa2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022aa6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022aaa:	ea43 0b01 	orr.w	fp, r3, r1
 8022aae:	f1c0 0110 	rsb	r1, r0, #16
 8022ab2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022ab4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022ab6:	eba1 0c0c 	sub.w	ip, r1, ip
 8022aba:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022abe:	fb0c 770b 	mla	r7, ip, fp, r7
 8022ac2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022ac6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8022aca:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022ace:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022ad2:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022ad6:	fb02 770c 	mla	r7, r2, ip, r7
 8022ada:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022adc:	0d79      	lsrs	r1, r7, #21
 8022ade:	097f      	lsrs	r7, r7, #5
 8022ae0:	8812      	ldrh	r2, [r2, #0]
 8022ae2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022ae6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022aea:	430f      	orrs	r7, r1
 8022aec:	b2bb      	uxth	r3, r7
 8022aee:	1211      	asrs	r1, r2, #8
 8022af0:	1218      	asrs	r0, r3, #8
 8022af2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022af6:	fb11 f104 	smulbb	r1, r1, r4
 8022afa:	10d7      	asrs	r7, r2, #3
 8022afc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022b00:	00d2      	lsls	r2, r2, #3
 8022b02:	fb00 1009 	mla	r0, r0, r9, r1
 8022b06:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022b0a:	10d9      	asrs	r1, r3, #3
 8022b0c:	b2d2      	uxtb	r2, r2
 8022b0e:	00db      	lsls	r3, r3, #3
 8022b10:	fb17 f704 	smulbb	r7, r7, r4
 8022b14:	fb12 f204 	smulbb	r2, r2, r4
 8022b18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022b1c:	b2db      	uxtb	r3, r3
 8022b1e:	b280      	uxth	r0, r0
 8022b20:	fb01 7109 	mla	r1, r1, r9, r7
 8022b24:	fb03 2309 	mla	r3, r3, r9, r2
 8022b28:	b29b      	uxth	r3, r3
 8022b2a:	b289      	uxth	r1, r1
 8022b2c:	1c42      	adds	r2, r0, #1
 8022b2e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022b32:	1c4f      	adds	r7, r1, #1
 8022b34:	1c5a      	adds	r2, r3, #1
 8022b36:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022b3a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022b3e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022b42:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022b46:	0949      	lsrs	r1, r1, #5
 8022b48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022b4a:	4310      	orrs	r0, r2
 8022b4c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b50:	4308      	orrs	r0, r1
 8022b52:	f823 0b02 	strh.w	r0, [r3], #2
 8022b56:	930e      	str	r3, [sp, #56]	; 0x38
 8022b58:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022b5a:	449a      	add	sl, r3
 8022b5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022b5e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022b62:	441d      	add	r5, r3
 8022b64:	e6ed      	b.n	8022942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8022b66:	2800      	cmp	r0, #0
 8022b68:	f43f af7f 	beq.w	8022a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b6c:	5cd3      	ldrb	r3, [r2, r3]
 8022b6e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022b72:	9310      	str	r3, [sp, #64]	; 0x40
 8022b74:	e779      	b.n	8022a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b76:	b019      	add	sp, #100	; 0x64
 8022b78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022b7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022b80:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8022b84:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8022b88:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8022b8c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8022b90:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022b94:	8808      	ldrh	r0, [r1, #0]
 8022b96:	fb08 470e 	mla	r7, r8, lr, r4
 8022b9a:	f1b8 0f00 	cmp.w	r8, #0
 8022b9e:	eb02 0907 	add.w	r9, r2, r7
 8022ba2:	db67      	blt.n	8022c74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022ba4:	45c2      	cmp	sl, r8
 8022ba6:	dd65      	ble.n	8022c74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022ba8:	2c00      	cmp	r4, #0
 8022baa:	db61      	blt.n	8022c70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022bac:	45a6      	cmp	lr, r4
 8022bae:	dd5f      	ble.n	8022c70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022bb0:	5dd2      	ldrb	r2, [r2, r7]
 8022bb2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022bb6:	1c62      	adds	r2, r4, #1
 8022bb8:	d45f      	bmi.n	8022c7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022bba:	4596      	cmp	lr, r2
 8022bbc:	dd5d      	ble.n	8022c7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022bbe:	2d00      	cmp	r5, #0
 8022bc0:	d05b      	beq.n	8022c7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022bc2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022bc6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8022bca:	f118 0801 	adds.w	r8, r8, #1
 8022bce:	d458      	bmi.n	8022c82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022bd0:	45c2      	cmp	sl, r8
 8022bd2:	dd56      	ble.n	8022c82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022bd4:	2e00      	cmp	r6, #0
 8022bd6:	d054      	beq.n	8022c82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022bd8:	2c00      	cmp	r4, #0
 8022bda:	db50      	blt.n	8022c7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022bdc:	45a6      	cmp	lr, r4
 8022bde:	dd4e      	ble.n	8022c7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022be0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8022be4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8022be8:	3401      	adds	r4, #1
 8022bea:	d407      	bmi.n	8022bfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bec:	45a6      	cmp	lr, r4
 8022bee:	dd05      	ble.n	8022bfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bf0:	b125      	cbz	r5, 8022bfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bf2:	44ce      	add	lr, r9
 8022bf4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8022bf8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8022bfc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022c00:	fb15 f406 	smulbb	r4, r5, r6
 8022c04:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c08:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022c0c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022c10:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022c14:	ea43 0c0c 	orr.w	ip, r3, ip
 8022c18:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022c1c:	f1c6 0310 	rsb	r3, r6, #16
 8022c20:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022c24:	1b5b      	subs	r3, r3, r5
 8022c26:	ea4e 0707 	orr.w	r7, lr, r7
 8022c2a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022c2e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022c32:	437d      	muls	r5, r7
 8022c34:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022c38:	0403      	lsls	r3, r0, #16
 8022c3a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c3e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c42:	4318      	orrs	r0, r3
 8022c44:	0413      	lsls	r3, r2, #16
 8022c46:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c4a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c4e:	4313      	orrs	r3, r2
 8022c50:	fb04 c000 	mla	r0, r4, r0, ip
 8022c54:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022c58:	fb06 0003 	mla	r0, r6, r3, r0
 8022c5c:	0d43      	lsrs	r3, r0, #21
 8022c5e:	0940      	lsrs	r0, r0, #5
 8022c60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c64:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c68:	4318      	orrs	r0, r3
 8022c6a:	8008      	strh	r0, [r1, #0]
 8022c6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022c70:	4684      	mov	ip, r0
 8022c72:	e7a0      	b.n	8022bb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022c74:	4607      	mov	r7, r0
 8022c76:	4684      	mov	ip, r0
 8022c78:	e7a7      	b.n	8022bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022c7a:	4607      	mov	r7, r0
 8022c7c:	e7a5      	b.n	8022bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022c7e:	4602      	mov	r2, r0
 8022c80:	e7b2      	b.n	8022be8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022c82:	4602      	mov	r2, r0
 8022c84:	e7ba      	b.n	8022bfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022c86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c8a:	b093      	sub	sp, #76	; 0x4c
 8022c8c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022c90:	920f      	str	r2, [sp, #60]	; 0x3c
 8022c92:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022c94:	9108      	str	r1, [sp, #32]
 8022c96:	9306      	str	r3, [sp, #24]
 8022c98:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022c9c:	9010      	str	r0, [sp, #64]	; 0x40
 8022c9e:	6850      	ldr	r0, [r2, #4]
 8022ca0:	6812      	ldr	r2, [r2, #0]
 8022ca2:	fb00 1303 	mla	r3, r0, r3, r1
 8022ca6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022caa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022cac:	681b      	ldr	r3, [r3, #0]
 8022cae:	9307      	str	r3, [sp, #28]
 8022cb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022cb2:	685f      	ldr	r7, [r3, #4]
 8022cb4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022cb8:	3704      	adds	r7, #4
 8022cba:	9b08      	ldr	r3, [sp, #32]
 8022cbc:	2b00      	cmp	r3, #0
 8022cbe:	dc03      	bgt.n	8022cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022cc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022cc2:	2b00      	cmp	r3, #0
 8022cc4:	f340 81b2 	ble.w	802302c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022cc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022cca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022cce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022cd2:	1e48      	subs	r0, r1, #1
 8022cd4:	f102 3cff 	add.w	ip, r2, #4294967295
 8022cd8:	9b06      	ldr	r3, [sp, #24]
 8022cda:	2b00      	cmp	r3, #0
 8022cdc:	f340 80a9 	ble.w	8022e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8022ce0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022ce4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022ce8:	d406      	bmi.n	8022cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cea:	4586      	cmp	lr, r0
 8022cec:	da04      	bge.n	8022cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cee:	2b00      	cmp	r3, #0
 8022cf0:	db02      	blt.n	8022cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cf2:	4563      	cmp	r3, ip
 8022cf4:	f2c0 809e 	blt.w	8022e34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022cf8:	f11e 0e01 	adds.w	lr, lr, #1
 8022cfc:	f100 808f 	bmi.w	8022e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022d00:	4571      	cmp	r1, lr
 8022d02:	f2c0 808c 	blt.w	8022e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022d06:	3301      	adds	r3, #1
 8022d08:	f100 8089 	bmi.w	8022e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022d0c:	429a      	cmp	r2, r3
 8022d0e:	f2c0 8086 	blt.w	8022e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022d12:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022d16:	46c8      	mov	r8, r9
 8022d18:	f1bb 0f00 	cmp.w	fp, #0
 8022d1c:	f340 80a6 	ble.w	8022e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022d20:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8022d22:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d24:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022d28:	689b      	ldr	r3, [r3, #8]
 8022d2a:	1422      	asrs	r2, r4, #16
 8022d2c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022d30:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022d34:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022d38:	f100 80e3 	bmi.w	8022f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d3c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022d40:	4552      	cmp	r2, sl
 8022d42:	f280 80de 	bge.w	8022f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d46:	f1bc 0f00 	cmp.w	ip, #0
 8022d4a:	f2c0 80da 	blt.w	8022f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d4e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022d52:	45d4      	cmp	ip, sl
 8022d54:	f280 80d5 	bge.w	8022f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d58:	b21b      	sxth	r3, r3
 8022d5a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022d5e:	9d07      	ldr	r5, [sp, #28]
 8022d60:	eb05 0a02 	add.w	sl, r5, r2
 8022d64:	5caa      	ldrb	r2, [r5, r2]
 8022d66:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8022d6a:	2800      	cmp	r0, #0
 8022d6c:	f000 80c0 	beq.w	8022ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8022d70:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022d74:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8022d78:	920b      	str	r2, [sp, #44]	; 0x2c
 8022d7a:	b151      	cbz	r1, 8022d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022d7c:	eb0a 0203 	add.w	r2, sl, r3
 8022d80:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022d84:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022d88:	9309      	str	r3, [sp, #36]	; 0x24
 8022d8a:	7853      	ldrb	r3, [r2, #1]
 8022d8c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022d90:	930c      	str	r3, [sp, #48]	; 0x30
 8022d92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022d94:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022d96:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022d9a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022d9e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022da2:	ea4c 0c03 	orr.w	ip, ip, r3
 8022da6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022da8:	041b      	lsls	r3, r3, #16
 8022daa:	fb10 f201 	smulbb	r2, r0, r1
 8022dae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022db2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022db6:	10d2      	asrs	r2, r2, #3
 8022db8:	432b      	orrs	r3, r5
 8022dba:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8022dbe:	4353      	muls	r3, r2
 8022dc0:	fb0a 330c 	mla	r3, sl, ip, r3
 8022dc4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022dc8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022dcc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022dd0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022dd4:	f1c1 0c10 	rsb	ip, r1, #16
 8022dd8:	ebac 0c00 	sub.w	ip, ip, r0
 8022ddc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022de0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022de4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022de6:	0418      	lsls	r0, r3, #16
 8022de8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022dec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022df0:	4318      	orrs	r0, r3
 8022df2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022df6:	fb02 c200 	mla	r2, r2, r0, ip
 8022dfa:	0d53      	lsrs	r3, r2, #21
 8022dfc:	0952      	lsrs	r2, r2, #5
 8022dfe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e02:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e06:	431a      	orrs	r2, r3
 8022e08:	f8a8 2000 	strh.w	r2, [r8]
 8022e0c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022e0e:	441c      	add	r4, r3
 8022e10:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e12:	f108 0802 	add.w	r8, r8, #2
 8022e16:	441e      	add	r6, r3
 8022e18:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022e1c:	e77c      	b.n	8022d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022e1e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022e20:	441c      	add	r4, r3
 8022e22:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e24:	441e      	add	r6, r3
 8022e26:	9b06      	ldr	r3, [sp, #24]
 8022e28:	3b01      	subs	r3, #1
 8022e2a:	9306      	str	r3, [sp, #24]
 8022e2c:	f109 0902 	add.w	r9, r9, #2
 8022e30:	e752      	b.n	8022cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022e32:	d020      	beq.n	8022e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022e34:	9b06      	ldr	r3, [sp, #24]
 8022e36:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022e38:	3b01      	subs	r3, #1
 8022e3a:	fb00 4003 	mla	r0, r0, r3, r4
 8022e3e:	1400      	asrs	r0, r0, #16
 8022e40:	f53f af67 	bmi.w	8022d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e44:	3901      	subs	r1, #1
 8022e46:	4288      	cmp	r0, r1
 8022e48:	f6bf af63 	bge.w	8022d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e4c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022e4e:	fb01 6303 	mla	r3, r1, r3, r6
 8022e52:	141b      	asrs	r3, r3, #16
 8022e54:	f53f af5d 	bmi.w	8022d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e58:	3a01      	subs	r2, #1
 8022e5a:	4293      	cmp	r3, r2
 8022e5c:	f6bf af59 	bge.w	8022d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e60:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022e64:	46ca      	mov	sl, r9
 8022e66:	f1b8 0f00 	cmp.w	r8, #0
 8022e6a:	dc67      	bgt.n	8022f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8022e6c:	9b06      	ldr	r3, [sp, #24]
 8022e6e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022e72:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022e76:	9b08      	ldr	r3, [sp, #32]
 8022e78:	2b00      	cmp	r3, #0
 8022e7a:	f340 80d7 	ble.w	802302c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022e7e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022e82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022e86:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022e8a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e8c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022e90:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022e94:	eeb0 6a62 	vmov.f32	s12, s5
 8022e98:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022e9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022ea0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022ea4:	ee16 4a10 	vmov	r4, s12
 8022ea8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022eac:	eeb0 6a43 	vmov.f32	s12, s6
 8022eb0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022eb4:	ee12 2a90 	vmov	r2, s5
 8022eb8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022ebc:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ec0:	ee13 2a10 	vmov	r2, s6
 8022ec4:	931f      	str	r3, [sp, #124]	; 0x7c
 8022ec6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ec8:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ecc:	9320      	str	r3, [sp, #128]	; 0x80
 8022ece:	9b08      	ldr	r3, [sp, #32]
 8022ed0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022ed2:	3b01      	subs	r3, #1
 8022ed4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022ed8:	9308      	str	r3, [sp, #32]
 8022eda:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022edc:	bf08      	it	eq
 8022ede:	4613      	moveq	r3, r2
 8022ee0:	ee16 6a10 	vmov	r6, s12
 8022ee4:	9306      	str	r3, [sp, #24]
 8022ee6:	eeb0 3a67 	vmov.f32	s6, s15
 8022eea:	eef0 2a47 	vmov.f32	s5, s14
 8022eee:	e6e4      	b.n	8022cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022ef0:	2900      	cmp	r1, #0
 8022ef2:	f43f af4e 	beq.w	8022d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022ef6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022efa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022efe:	9309      	str	r3, [sp, #36]	; 0x24
 8022f00:	e747      	b.n	8022d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022f02:	f112 0a01 	adds.w	sl, r2, #1
 8022f06:	d481      	bmi.n	8022e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022f08:	4553      	cmp	r3, sl
 8022f0a:	f6ff af7f 	blt.w	8022e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022f0e:	f11c 0a01 	adds.w	sl, ip, #1
 8022f12:	f53f af7b 	bmi.w	8022e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022f16:	45d6      	cmp	lr, sl
 8022f18:	f6ff af78 	blt.w	8022e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022f1c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8022f20:	b21b      	sxth	r3, r3
 8022f22:	fa0f f28e 	sxth.w	r2, lr
 8022f26:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022f2a:	9201      	str	r2, [sp, #4]
 8022f2c:	9300      	str	r3, [sp, #0]
 8022f2e:	9a07      	ldr	r2, [sp, #28]
 8022f30:	9810      	ldr	r0, [sp, #64]	; 0x40
 8022f32:	463b      	mov	r3, r7
 8022f34:	4641      	mov	r1, r8
 8022f36:	f7ff fe21 	bl	8022b7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022f3a:	e767      	b.n	8022e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022f3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f3e:	9d07      	ldr	r5, [sp, #28]
 8022f40:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022f44:	1422      	asrs	r2, r4, #16
 8022f46:	1431      	asrs	r1, r6, #16
 8022f48:	fb03 2101 	mla	r1, r3, r1, r2
 8022f4c:	9a07      	ldr	r2, [sp, #28]
 8022f4e:	440a      	add	r2, r1
 8022f50:	5c69      	ldrb	r1, [r5, r1]
 8022f52:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8022f56:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022f5a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8022f5e:	f1be 0f00 	cmp.w	lr, #0
 8022f62:	d05c      	beq.n	802301e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022f64:	f892 c001 	ldrb.w	ip, [r2, #1]
 8022f68:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8022f6c:	950d      	str	r5, [sp, #52]	; 0x34
 8022f6e:	b150      	cbz	r0, 8022f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022f70:	eb02 0c03 	add.w	ip, r2, r3
 8022f74:	5cd3      	ldrb	r3, [r2, r3]
 8022f76:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022f7a:	930a      	str	r3, [sp, #40]	; 0x28
 8022f7c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8022f80:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022f84:	930e      	str	r3, [sp, #56]	; 0x38
 8022f86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022f88:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022f8a:	fb1e f200 	smulbb	r2, lr, r0
 8022f8e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022f92:	10d2      	asrs	r2, r2, #3
 8022f94:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022f98:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022f9c:	ea4c 0c03 	orr.w	ip, ip, r3
 8022fa0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8022fa4:	9311      	str	r3, [sp, #68]	; 0x44
 8022fa6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022fa8:	041b      	lsls	r3, r3, #16
 8022faa:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8022fae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022fb2:	ea43 030b 	orr.w	r3, r3, fp
 8022fb6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022fb8:	4353      	muls	r3, r2
 8022fba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022fbe:	fb05 3c0c 	mla	ip, r5, ip, r3
 8022fc2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022fc6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022fca:	ea43 0b01 	orr.w	fp, r3, r1
 8022fce:	f1c0 0110 	rsb	r1, r0, #16
 8022fd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022fd4:	eba1 0e0e 	sub.w	lr, r1, lr
 8022fd8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8022fdc:	fb0e cc0b 	mla	ip, lr, fp, ip
 8022fe0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8022fe4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8022fe8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022fec:	ea4b 0e0e 	orr.w	lr, fp, lr
 8022ff0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022ff4:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022ff8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8022ffc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023000:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023004:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023008:	ea43 0c0c 	orr.w	ip, r3, ip
 802300c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802300e:	f82a cb02 	strh.w	ip, [sl], #2
 8023012:	441c      	add	r4, r3
 8023014:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023016:	f108 38ff 	add.w	r8, r8, #4294967295
 802301a:	441e      	add	r6, r3
 802301c:	e723      	b.n	8022e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802301e:	2800      	cmp	r0, #0
 8023020:	d0b1      	beq.n	8022f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8023022:	5cd3      	ldrb	r3, [r2, r3]
 8023024:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023028:	930a      	str	r3, [sp, #40]	; 0x28
 802302a:	e7ac      	b.n	8022f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802302c:	b013      	add	sp, #76	; 0x4c
 802302e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023032 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8023032:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023036:	880d      	ldrh	r5, [r1, #0]
 8023038:	b087      	sub	sp, #28
 802303a:	10ef      	asrs	r7, r5, #3
 802303c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8023040:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023044:	00ed      	lsls	r5, r5, #3
 8023046:	9701      	str	r7, [sp, #4]
 8023048:	b2ed      	uxtb	r5, r5
 802304a:	9502      	str	r5, [sp, #8]
 802304c:	9d01      	ldr	r5, [sp, #4]
 802304e:	9103      	str	r1, [sp, #12]
 8023050:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8023054:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8023058:	9902      	ldr	r1, [sp, #8]
 802305a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802305e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8023062:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8023066:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802306a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802306e:	022d      	lsls	r5, r5, #8
 8023070:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8023074:	fb06 0709 	mla	r7, r6, r9, r0
 8023078:	430d      	orrs	r5, r1
 802307a:	2e00      	cmp	r6, #0
 802307c:	eb02 0c07 	add.w	ip, r2, r7
 8023080:	9505      	str	r5, [sp, #20]
 8023082:	f2c0 80b6 	blt.w	80231f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8023086:	45b3      	cmp	fp, r6
 8023088:	f340 80b3 	ble.w	80231f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802308c:	2800      	cmp	r0, #0
 802308e:	f2c0 80ae 	blt.w	80231ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023092:	4581      	cmp	r9, r0
 8023094:	f340 80ab 	ble.w	80231ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023098:	5dd7      	ldrb	r7, [r2, r7]
 802309a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802309e:	441f      	add	r7, r3
 80230a0:	1c42      	adds	r2, r0, #1
 80230a2:	f100 80a9 	bmi.w	80231f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80230a6:	4591      	cmp	r9, r2
 80230a8:	f340 80a6 	ble.w	80231f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80230ac:	2c00      	cmp	r4, #0
 80230ae:	f000 80a3 	beq.w	80231f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80230b2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80230b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80230ba:	441d      	add	r5, r3
 80230bc:	3601      	adds	r6, #1
 80230be:	f100 809f 	bmi.w	8023200 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80230c2:	45b3      	cmp	fp, r6
 80230c4:	f340 809c 	ble.w	8023200 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80230c8:	f1be 0f00 	cmp.w	lr, #0
 80230cc:	f000 8098 	beq.w	8023200 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80230d0:	2800      	cmp	r0, #0
 80230d2:	f2c0 8093 	blt.w	80231fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80230d6:	4581      	cmp	r9, r0
 80230d8:	f340 8090 	ble.w	80231fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80230dc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80230e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80230e4:	441e      	add	r6, r3
 80230e6:	3001      	adds	r0, #1
 80230e8:	f100 808d 	bmi.w	8023206 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230ec:	4581      	cmp	r9, r0
 80230ee:	f340 808a 	ble.w	8023206 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230f2:	2c00      	cmp	r4, #0
 80230f4:	f000 8087 	beq.w	8023206 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230f8:	44e1      	add	r9, ip
 80230fa:	f899 2001 	ldrb.w	r2, [r9, #1]
 80230fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023102:	4413      	add	r3, r2
 8023104:	b2a4      	uxth	r4, r4
 8023106:	fa1f fe8e 	uxth.w	lr, lr
 802310a:	fb04 fb0e 	mul.w	fp, r4, lr
 802310e:	0124      	lsls	r4, r4, #4
 8023110:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8023114:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8023118:	eba4 040b 	sub.w	r4, r4, fp
 802311c:	fa1f f08e 	uxth.w	r0, lr
 8023120:	b2a2      	uxth	r2, r4
 8023122:	78ac      	ldrb	r4, [r5, #2]
 8023124:	f897 c002 	ldrb.w	ip, [r7, #2]
 8023128:	9901      	ldr	r1, [sp, #4]
 802312a:	eba9 0900 	sub.w	r9, r9, r0
 802312e:	fa1f f989 	uxth.w	r9, r9
 8023132:	4354      	muls	r4, r2
 8023134:	fb09 440c 	mla	r4, r9, ip, r4
 8023138:	f896 c002 	ldrb.w	ip, [r6, #2]
 802313c:	fb00 440c 	mla	r4, r0, ip, r4
 8023140:	f893 c002 	ldrb.w	ip, [r3, #2]
 8023144:	fa1f fe88 	uxth.w	lr, r8
 8023148:	ea6f 0808 	mvn.w	r8, r8
 802314c:	fa5f f888 	uxtb.w	r8, r8
 8023150:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8023154:	fb1a fa08 	smulbb	sl, sl, r8
 8023158:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802315c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8023160:	f895 a001 	ldrb.w	sl, [r5, #1]
 8023164:	787c      	ldrb	r4, [r7, #1]
 8023166:	782d      	ldrb	r5, [r5, #0]
 8023168:	783f      	ldrb	r7, [r7, #0]
 802316a:	fb02 fa0a 	mul.w	sl, r2, sl
 802316e:	fb09 aa04 	mla	sl, r9, r4, sl
 8023172:	7874      	ldrb	r4, [r6, #1]
 8023174:	436a      	muls	r2, r5
 8023176:	7835      	ldrb	r5, [r6, #0]
 8023178:	fb00 aa04 	mla	sl, r0, r4, sl
 802317c:	fb09 2207 	mla	r2, r9, r7, r2
 8023180:	785c      	ldrb	r4, [r3, #1]
 8023182:	781b      	ldrb	r3, [r3, #0]
 8023184:	fb00 2005 	mla	r0, r0, r5, r2
 8023188:	fb0b a404 	mla	r4, fp, r4, sl
 802318c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8023190:	9b02      	ldr	r3, [sp, #8]
 8023192:	fb11 fa08 	smulbb	sl, r1, r8
 8023196:	fa1f fc8c 	uxth.w	ip, ip
 802319a:	fb13 f808 	smulbb	r8, r3, r8
 802319e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80231a2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80231a6:	fb04 a40e 	mla	r4, r4, lr, sl
 80231aa:	f10c 0301 	add.w	r3, ip, #1
 80231ae:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80231b2:	fa1f fe8e 	uxth.w	lr, lr
 80231b6:	b2a4      	uxth	r4, r4
 80231b8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80231bc:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80231c0:	f104 0a01 	add.w	sl, r4, #1
 80231c4:	f10e 0c01 	add.w	ip, lr, #1
 80231c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80231cc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80231d0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80231d4:	0964      	lsrs	r4, r4, #5
 80231d6:	ea4c 0c03 	orr.w	ip, ip, r3
 80231da:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80231de:	9b03      	ldr	r3, [sp, #12]
 80231e0:	ea4c 0c04 	orr.w	ip, ip, r4
 80231e4:	f8a3 c000 	strh.w	ip, [r3]
 80231e8:	b007      	add	sp, #28
 80231ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231ee:	af05      	add	r7, sp, #20
 80231f0:	e756      	b.n	80230a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80231f2:	ad05      	add	r5, sp, #20
 80231f4:	462f      	mov	r7, r5
 80231f6:	e761      	b.n	80230bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80231f8:	ad05      	add	r5, sp, #20
 80231fa:	e75f      	b.n	80230bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80231fc:	ae05      	add	r6, sp, #20
 80231fe:	e772      	b.n	80230e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8023200:	ab05      	add	r3, sp, #20
 8023202:	461e      	mov	r6, r3
 8023204:	e77e      	b.n	8023104 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8023206:	ab05      	add	r3, sp, #20
 8023208:	e77c      	b.n	8023104 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802320a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802320a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802320e:	b095      	sub	sp, #84	; 0x54
 8023210:	9212      	str	r2, [sp, #72]	; 0x48
 8023212:	9309      	str	r3, [sp, #36]	; 0x24
 8023214:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023216:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802321a:	930f      	str	r3, [sp, #60]	; 0x3c
 802321c:	910e      	str	r1, [sp, #56]	; 0x38
 802321e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8023222:	9013      	str	r0, [sp, #76]	; 0x4c
 8023224:	6850      	ldr	r0, [r2, #4]
 8023226:	6812      	ldr	r2, [r2, #0]
 8023228:	fb00 1303 	mla	r3, r0, r3, r1
 802322c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023230:	930a      	str	r3, [sp, #40]	; 0x28
 8023232:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023234:	681b      	ldr	r3, [r3, #0]
 8023236:	930d      	str	r3, [sp, #52]	; 0x34
 8023238:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802323a:	685c      	ldr	r4, [r3, #4]
 802323c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802323e:	43db      	mvns	r3, r3
 8023240:	b2db      	uxtb	r3, r3
 8023242:	3404      	adds	r4, #4
 8023244:	930b      	str	r3, [sp, #44]	; 0x2c
 8023246:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023248:	2b00      	cmp	r3, #0
 802324a:	dc03      	bgt.n	8023254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802324c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802324e:	2b00      	cmp	r3, #0
 8023250:	f340 8255 	ble.w	80236fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023254:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023256:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802325a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802325e:	1e48      	subs	r0, r1, #1
 8023260:	1e55      	subs	r5, r2, #1
 8023262:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023264:	2b00      	cmp	r3, #0
 8023266:	f340 80f9 	ble.w	802345c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802326a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802326c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802326e:	1436      	asrs	r6, r6, #16
 8023270:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023274:	d406      	bmi.n	8023284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023276:	4286      	cmp	r6, r0
 8023278:	da04      	bge.n	8023284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802327a:	2b00      	cmp	r3, #0
 802327c:	db02      	blt.n	8023284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802327e:	42ab      	cmp	r3, r5
 8023280:	f2c0 80ed 	blt.w	802345e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8023284:	3601      	adds	r6, #1
 8023286:	f100 80da 	bmi.w	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802328a:	42b1      	cmp	r1, r6
 802328c:	f2c0 80d7 	blt.w	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023290:	3301      	adds	r3, #1
 8023292:	f100 80d4 	bmi.w	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023296:	429a      	cmp	r2, r3
 8023298:	f2c0 80d1 	blt.w	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802329c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802329e:	9311      	str	r3, [sp, #68]	; 0x44
 80232a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80232a2:	930c      	str	r3, [sp, #48]	; 0x30
 80232a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80232a6:	2b00      	cmp	r3, #0
 80232a8:	f340 80fa 	ble.w	80234a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80232ac:	9826      	ldr	r0, [sp, #152]	; 0x98
 80232ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80232b0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80232b2:	68c6      	ldr	r6, [r0, #12]
 80232b4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80232b6:	141d      	asrs	r5, r3, #16
 80232b8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80232bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80232be:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80232c0:	1400      	asrs	r0, r0, #16
 80232c2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80232c6:	6892      	ldr	r2, [r2, #8]
 80232c8:	f100 813e 	bmi.w	8023548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232cc:	1e57      	subs	r7, r2, #1
 80232ce:	42b8      	cmp	r0, r7
 80232d0:	f280 813a 	bge.w	8023548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232d4:	2d00      	cmp	r5, #0
 80232d6:	f2c0 8137 	blt.w	8023548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232da:	1e77      	subs	r7, r6, #1
 80232dc:	42bd      	cmp	r5, r7
 80232de:	f280 8133 	bge.w	8023548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232e2:	b212      	sxth	r2, r2
 80232e4:	fb05 0002 	mla	r0, r5, r2, r0
 80232e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80232ea:	f815 a000 	ldrb.w	sl, [r5, r0]
 80232ee:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80232f2:	182e      	adds	r6, r5, r0
 80232f4:	eb04 050a 	add.w	r5, r4, sl
 80232f8:	2b00      	cmp	r3, #0
 80232fa:	f000 8117 	beq.w	802352c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80232fe:	f896 c001 	ldrb.w	ip, [r6, #1]
 8023302:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8023306:	44a4      	add	ip, r4
 8023308:	2900      	cmp	r1, #0
 802330a:	f000 8117 	beq.w	802353c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802330e:	18b0      	adds	r0, r6, r2
 8023310:	5cb2      	ldrb	r2, [r6, r2]
 8023312:	7840      	ldrb	r0, [r0, #1]
 8023314:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023318:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802331c:	4422      	add	r2, r4
 802331e:	4420      	add	r0, r4
 8023320:	b29b      	uxth	r3, r3
 8023322:	b289      	uxth	r1, r1
 8023324:	fb03 f901 	mul.w	r9, r3, r1
 8023328:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802332c:	011b      	lsls	r3, r3, #4
 802332e:	b289      	uxth	r1, r1
 8023330:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8023334:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023338:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802333a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802333e:	f8b6 e000 	ldrh.w	lr, [r6]
 8023342:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8023346:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802334a:	eba3 0309 	sub.w	r3, r3, r9
 802334e:	b29b      	uxth	r3, r3
 8023350:	eba8 0801 	sub.w	r8, r8, r1
 8023354:	fa1f f888 	uxth.w	r8, r8
 8023358:	435f      	muls	r7, r3
 802335a:	fb08 770b 	mla	r7, r8, fp, r7
 802335e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023362:	9310      	str	r3, [sp, #64]	; 0x40
 8023364:	fb01 770b 	mla	r7, r1, fp, r7
 8023368:	f890 b002 	ldrb.w	fp, [r0, #2]
 802336c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802336e:	fb09 770b 	mla	r7, r9, fp, r7
 8023372:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8023376:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802337a:	fb1b fb03 	smulbb	fp, fp, r3
 802337e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023382:	fb07 b706 	mla	r7, r7, r6, fp
 8023386:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023388:	f895 b001 	ldrb.w	fp, [r5, #1]
 802338c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023390:	f89c c000 	ldrb.w	ip, [ip]
 8023394:	435d      	muls	r5, r3
 8023396:	fb08 550b 	mla	r5, r8, fp, r5
 802339a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802339e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80233a0:	fb01 550b 	mla	r5, r1, fp, r5
 80233a4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80233a8:	fb09 550b 	mla	r5, r9, fp, r5
 80233ac:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80233b0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80233b4:	fb1b fb03 	smulbb	fp, fp, r3
 80233b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80233ba:	fb03 f30c 	mul.w	r3, r3, ip
 80233be:	f892 c000 	ldrb.w	ip, [r2]
 80233c2:	fb08 330a 	mla	r3, r8, sl, r3
 80233c6:	fb01 330c 	mla	r3, r1, ip, r3
 80233ca:	f890 c000 	ldrb.w	ip, [r0]
 80233ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80233d2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80233d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80233d8:	fa5f fe8e 	uxtb.w	lr, lr
 80233dc:	b2bf      	uxth	r7, r7
 80233de:	fb1e fe03 	smulbb	lr, lr, r3
 80233e2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80233e6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80233ea:	fb05 b506 	mla	r5, r5, r6, fp
 80233ee:	1c7b      	adds	r3, r7, #1
 80233f0:	fb0c e606 	mla	r6, ip, r6, lr
 80233f4:	b2ad      	uxth	r5, r5
 80233f6:	b2b6      	uxth	r6, r6
 80233f8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80233fc:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8023400:	f105 0b01 	add.w	fp, r5, #1
 8023404:	1c77      	adds	r7, r6, #1
 8023406:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802340a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802340e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023412:	096d      	lsrs	r5, r5, #5
 8023414:	431f      	orrs	r7, r3
 8023416:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802341a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802341c:	433d      	orrs	r5, r7
 802341e:	801d      	strh	r5, [r3, #0]
 8023420:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023422:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023424:	3302      	adds	r3, #2
 8023426:	930c      	str	r3, [sp, #48]	; 0x30
 8023428:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802342a:	4413      	add	r3, r2
 802342c:	931f      	str	r3, [sp, #124]	; 0x7c
 802342e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023430:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023432:	4413      	add	r3, r2
 8023434:	9320      	str	r3, [sp, #128]	; 0x80
 8023436:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023438:	3b01      	subs	r3, #1
 802343a:	9311      	str	r3, [sp, #68]	; 0x44
 802343c:	e732      	b.n	80232a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802343e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023440:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023442:	4433      	add	r3, r6
 8023444:	931f      	str	r3, [sp, #124]	; 0x7c
 8023446:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8023448:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802344a:	4433      	add	r3, r6
 802344c:	9320      	str	r3, [sp, #128]	; 0x80
 802344e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023450:	3b01      	subs	r3, #1
 8023452:	9309      	str	r3, [sp, #36]	; 0x24
 8023454:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023456:	3302      	adds	r3, #2
 8023458:	930a      	str	r3, [sp, #40]	; 0x28
 802345a:	e702      	b.n	8023262 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802345c:	d027      	beq.n	80234ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802345e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023460:	9821      	ldr	r0, [sp, #132]	; 0x84
 8023462:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023464:	3b01      	subs	r3, #1
 8023466:	fb00 5003 	mla	r0, r0, r3, r5
 802346a:	1400      	asrs	r0, r0, #16
 802346c:	f53f af16 	bmi.w	802329c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023470:	3901      	subs	r1, #1
 8023472:	4288      	cmp	r0, r1
 8023474:	f6bf af12 	bge.w	802329c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023478:	9922      	ldr	r1, [sp, #136]	; 0x88
 802347a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802347c:	fb01 0303 	mla	r3, r1, r3, r0
 8023480:	141b      	asrs	r3, r3, #16
 8023482:	f53f af0b 	bmi.w	802329c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023486:	3a01      	subs	r2, #1
 8023488:	4293      	cmp	r3, r2
 802348a:	f6bf af07 	bge.w	802329c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802348e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023490:	9311      	str	r3, [sp, #68]	; 0x44
 8023492:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8023496:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023498:	930c      	str	r3, [sp, #48]	; 0x30
 802349a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802349c:	2b00      	cmp	r3, #0
 802349e:	dc70      	bgt.n	8023582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80234a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80234a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80234a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80234a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80234ac:	930a      	str	r3, [sp, #40]	; 0x28
 80234ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80234b0:	2b00      	cmp	r3, #0
 80234b2:	f340 8124 	ble.w	80236fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80234b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80234ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80234be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80234c2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80234c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80234cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80234d0:	eef0 6a62 	vmov.f32	s13, s5
 80234d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80234d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80234dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80234e0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80234e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80234e8:	eef0 6a43 	vmov.f32	s13, s6
 80234ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80234f0:	ee12 2a90 	vmov	r2, s5
 80234f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80234f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80234fc:	ee13 2a10 	vmov	r2, s6
 8023500:	9321      	str	r3, [sp, #132]	; 0x84
 8023502:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023504:	fb92 f3f3 	sdiv	r3, r2, r3
 8023508:	9322      	str	r3, [sp, #136]	; 0x88
 802350a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802350c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802350e:	3b01      	subs	r3, #1
 8023510:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023514:	930e      	str	r3, [sp, #56]	; 0x38
 8023516:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023518:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802351c:	bf08      	it	eq
 802351e:	4613      	moveq	r3, r2
 8023520:	9309      	str	r3, [sp, #36]	; 0x24
 8023522:	eeb0 3a67 	vmov.f32	s6, s15
 8023526:	eef0 2a47 	vmov.f32	s5, s14
 802352a:	e68c      	b.n	8023246 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802352c:	b149      	cbz	r1, 8023542 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802352e:	5cb2      	ldrb	r2, [r6, r2]
 8023530:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023534:	4422      	add	r2, r4
 8023536:	4628      	mov	r0, r5
 8023538:	46ac      	mov	ip, r5
 802353a:	e6f1      	b.n	8023320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802353c:	4628      	mov	r0, r5
 802353e:	462a      	mov	r2, r5
 8023540:	e6ee      	b.n	8023320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023542:	4628      	mov	r0, r5
 8023544:	462a      	mov	r2, r5
 8023546:	e7f7      	b.n	8023538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8023548:	1c47      	adds	r7, r0, #1
 802354a:	f53f af69 	bmi.w	8023420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802354e:	42ba      	cmp	r2, r7
 8023550:	f6ff af66 	blt.w	8023420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023554:	1c6f      	adds	r7, r5, #1
 8023556:	f53f af63 	bmi.w	8023420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802355a:	42be      	cmp	r6, r7
 802355c:	f6ff af60 	blt.w	8023420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023560:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8023562:	9002      	str	r0, [sp, #8]
 8023564:	b236      	sxth	r6, r6
 8023566:	b212      	sxth	r2, r2
 8023568:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802356c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8023570:	9200      	str	r2, [sp, #0]
 8023572:	9601      	str	r6, [sp, #4]
 8023574:	4623      	mov	r3, r4
 8023576:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802357a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802357c:	f7ff fd59 	bl	8023032 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8023580:	e74e      	b.n	8023420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023582:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023584:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023586:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023588:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802358a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802358e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023590:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023594:	142d      	asrs	r5, r5, #16
 8023596:	1400      	asrs	r0, r0, #16
 8023598:	fb02 5000 	mla	r0, r2, r0, r5
 802359c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802359e:	f815 9000 	ldrb.w	r9, [r5, r0]
 80235a2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80235a6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80235aa:	182e      	adds	r6, r5, r0
 80235ac:	eb04 0509 	add.w	r5, r4, r9
 80235b0:	2b00      	cmp	r3, #0
 80235b2:	f000 8096 	beq.w	80236e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80235b6:	7877      	ldrb	r7, [r6, #1]
 80235b8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80235bc:	4427      	add	r7, r4
 80235be:	2900      	cmp	r1, #0
 80235c0:	f000 8097 	beq.w	80236f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80235c4:	18b0      	adds	r0, r6, r2
 80235c6:	5cb2      	ldrb	r2, [r6, r2]
 80235c8:	7840      	ldrb	r0, [r0, #1]
 80235ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80235ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80235d2:	4422      	add	r2, r4
 80235d4:	4420      	add	r0, r4
 80235d6:	b29b      	uxth	r3, r3
 80235d8:	b289      	uxth	r1, r1
 80235da:	fb03 f801 	mul.w	r8, r3, r1
 80235de:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80235e0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80235e4:	f8b6 c000 	ldrh.w	ip, [r6]
 80235e8:	78be      	ldrb	r6, [r7, #2]
 80235ea:	f814 9009 	ldrb.w	r9, [r4, r9]
 80235ee:	011b      	lsls	r3, r3, #4
 80235f0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80235f4:	b289      	uxth	r1, r1
 80235f6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80235fa:	eba3 0308 	sub.w	r3, r3, r8
 80235fe:	b29b      	uxth	r3, r3
 8023600:	ebae 0e01 	sub.w	lr, lr, r1
 8023604:	fa1f fe8e 	uxth.w	lr, lr
 8023608:	435e      	muls	r6, r3
 802360a:	fb0e 660b 	mla	r6, lr, fp, r6
 802360e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023612:	9310      	str	r3, [sp, #64]	; 0x40
 8023614:	fb01 660b 	mla	r6, r1, fp, r6
 8023618:	f890 b002 	ldrb.w	fp, [r0, #2]
 802361c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802361e:	fb08 660b 	mla	r6, r8, fp, r6
 8023622:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8023626:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802362a:	fb1b fb03 	smulbb	fp, fp, r3
 802362e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023632:	fb06 b60a 	mla	r6, r6, sl, fp
 8023636:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023638:	f895 b001 	ldrb.w	fp, [r5, #1]
 802363c:	787d      	ldrb	r5, [r7, #1]
 802363e:	783f      	ldrb	r7, [r7, #0]
 8023640:	435d      	muls	r5, r3
 8023642:	fb0e 550b 	mla	r5, lr, fp, r5
 8023646:	f892 b001 	ldrb.w	fp, [r2, #1]
 802364a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802364c:	fb01 550b 	mla	r5, r1, fp, r5
 8023650:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023654:	fb08 550b 	mla	r5, r8, fp, r5
 8023658:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802365c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023660:	fb1b fb03 	smulbb	fp, fp, r3
 8023664:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023666:	437b      	muls	r3, r7
 8023668:	7817      	ldrb	r7, [r2, #0]
 802366a:	fb0e 3309 	mla	r3, lr, r9, r3
 802366e:	fb01 3307 	mla	r3, r1, r7, r3
 8023672:	7807      	ldrb	r7, [r0, #0]
 8023674:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023678:	fb08 3707 	mla	r7, r8, r7, r3
 802367c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802367e:	fa5f fc8c 	uxtb.w	ip, ip
 8023682:	fb1c fc03 	smulbb	ip, ip, r3
 8023686:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802368a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802368e:	fb05 b50a 	mla	r5, r5, sl, fp
 8023692:	fb07 c70a 	mla	r7, r7, sl, ip
 8023696:	b2b6      	uxth	r6, r6
 8023698:	b2ad      	uxth	r5, r5
 802369a:	b2bf      	uxth	r7, r7
 802369c:	1c73      	adds	r3, r6, #1
 802369e:	1c7a      	adds	r2, r7, #1
 80236a0:	f105 0b01 	add.w	fp, r5, #1
 80236a4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80236a8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80236ac:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80236b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80236b4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80236b8:	096d      	lsrs	r5, r5, #5
 80236ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236bc:	4316      	orrs	r6, r2
 80236be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80236c2:	432e      	orrs	r6, r5
 80236c4:	f823 6b02 	strh.w	r6, [r3], #2
 80236c8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80236ca:	930c      	str	r3, [sp, #48]	; 0x30
 80236cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80236ce:	4413      	add	r3, r2
 80236d0:	931f      	str	r3, [sp, #124]	; 0x7c
 80236d2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80236d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236d6:	4413      	add	r3, r2
 80236d8:	9320      	str	r3, [sp, #128]	; 0x80
 80236da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80236dc:	3b01      	subs	r3, #1
 80236de:	9311      	str	r3, [sp, #68]	; 0x44
 80236e0:	e6db      	b.n	802349a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80236e2:	b149      	cbz	r1, 80236f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80236e4:	5cb2      	ldrb	r2, [r6, r2]
 80236e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80236ea:	4422      	add	r2, r4
 80236ec:	4628      	mov	r0, r5
 80236ee:	462f      	mov	r7, r5
 80236f0:	e771      	b.n	80235d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80236f2:	4628      	mov	r0, r5
 80236f4:	462a      	mov	r2, r5
 80236f6:	e76e      	b.n	80235d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80236f8:	4628      	mov	r0, r5
 80236fa:	462a      	mov	r2, r5
 80236fc:	e7f7      	b.n	80236ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80236fe:	b015      	add	sp, #84	; 0x54
 8023700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8023704:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023708:	880f      	ldrh	r7, [r1, #0]
 802370a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 802370e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8023712:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8023716:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802371a:	023c      	lsls	r4, r7, #8
 802371c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8023720:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8023724:	017c      	lsls	r4, r7, #5
 8023726:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802372a:	00ff      	lsls	r7, r7, #3
 802372c:	ea4b 0404 	orr.w	r4, fp, r4
 8023730:	b2ff      	uxtb	r7, r7
 8023732:	fb05 ca0e 	mla	sl, r5, lr, ip
 8023736:	4327      	orrs	r7, r4
 8023738:	2d00      	cmp	r5, #0
 802373a:	eb02 080a 	add.w	r8, r2, sl
 802373e:	9701      	str	r7, [sp, #4]
 8023740:	db7e      	blt.n	8023840 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023742:	45a9      	cmp	r9, r5
 8023744:	dd7c      	ble.n	8023840 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023746:	f1bc 0f00 	cmp.w	ip, #0
 802374a:	db77      	blt.n	802383c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802374c:	45e6      	cmp	lr, ip
 802374e:	dd75      	ble.n	802383c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023750:	f812 700a 	ldrb.w	r7, [r2, sl]
 8023754:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023758:	441f      	add	r7, r3
 802375a:	f11c 0201 	adds.w	r2, ip, #1
 802375e:	d472      	bmi.n	8023846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023760:	4596      	cmp	lr, r2
 8023762:	dd70      	ble.n	8023846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023764:	2800      	cmp	r0, #0
 8023766:	d06e      	beq.n	8023846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023768:	f898 4001 	ldrb.w	r4, [r8, #1]
 802376c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023770:	441c      	add	r4, r3
 8023772:	3501      	adds	r5, #1
 8023774:	d46b      	bmi.n	802384e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023776:	45a9      	cmp	r9, r5
 8023778:	dd69      	ble.n	802384e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802377a:	2e00      	cmp	r6, #0
 802377c:	d067      	beq.n	802384e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802377e:	f1bc 0f00 	cmp.w	ip, #0
 8023782:	db62      	blt.n	802384a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023784:	45e6      	cmp	lr, ip
 8023786:	dd60      	ble.n	802384a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023788:	f818 500e 	ldrb.w	r5, [r8, lr]
 802378c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023790:	441d      	add	r5, r3
 8023792:	f11c 0201 	adds.w	r2, ip, #1
 8023796:	d45d      	bmi.n	8023854 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023798:	4596      	cmp	lr, r2
 802379a:	dd5b      	ble.n	8023854 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802379c:	2800      	cmp	r0, #0
 802379e:	d059      	beq.n	8023854 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80237a0:	44c6      	add	lr, r8
 80237a2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80237a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80237aa:	4413      	add	r3, r2
 80237ac:	b280      	uxth	r0, r0
 80237ae:	b2b2      	uxth	r2, r6
 80237b0:	fb00 f602 	mul.w	r6, r0, r2
 80237b4:	0100      	lsls	r0, r0, #4
 80237b6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80237ba:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80237be:	1b80      	subs	r0, r0, r6
 80237c0:	fa1f fc82 	uxth.w	ip, r2
 80237c4:	b282      	uxth	r2, r0
 80237c6:	78a0      	ldrb	r0, [r4, #2]
 80237c8:	f897 e002 	ldrb.w	lr, [r7, #2]
 80237cc:	f897 9000 	ldrb.w	r9, [r7]
 80237d0:	787f      	ldrb	r7, [r7, #1]
 80237d2:	eba8 080c 	sub.w	r8, r8, ip
 80237d6:	fa1f f888 	uxth.w	r8, r8
 80237da:	4350      	muls	r0, r2
 80237dc:	fb08 0e0e 	mla	lr, r8, lr, r0
 80237e0:	78a8      	ldrb	r0, [r5, #2]
 80237e2:	fb0c e000 	mla	r0, ip, r0, lr
 80237e6:	f893 e002 	ldrb.w	lr, [r3, #2]
 80237ea:	fb06 0e0e 	mla	lr, r6, lr, r0
 80237ee:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80237f2:	f894 e000 	ldrb.w	lr, [r4]
 80237f6:	fb02 fe0e 	mul.w	lr, r2, lr
 80237fa:	fb08 e909 	mla	r9, r8, r9, lr
 80237fe:	f895 e000 	ldrb.w	lr, [r5]
 8023802:	fb0c 990e 	mla	r9, ip, lr, r9
 8023806:	f893 e000 	ldrb.w	lr, [r3]
 802380a:	785b      	ldrb	r3, [r3, #1]
 802380c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8023810:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023814:	ea4e 0e00 	orr.w	lr, lr, r0
 8023818:	7860      	ldrb	r0, [r4, #1]
 802381a:	4350      	muls	r0, r2
 802381c:	786a      	ldrb	r2, [r5, #1]
 802381e:	fb08 0007 	mla	r0, r8, r7, r0
 8023822:	fb0c 0202 	mla	r2, ip, r2, r0
 8023826:	fb06 2303 	mla	r3, r6, r3, r2
 802382a:	095b      	lsrs	r3, r3, #5
 802382c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023830:	ea4e 0303 	orr.w	r3, lr, r3
 8023834:	800b      	strh	r3, [r1, #0]
 8023836:	b003      	add	sp, #12
 8023838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802383c:	af01      	add	r7, sp, #4
 802383e:	e78c      	b.n	802375a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8023840:	ac01      	add	r4, sp, #4
 8023842:	4627      	mov	r7, r4
 8023844:	e795      	b.n	8023772 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023846:	ac01      	add	r4, sp, #4
 8023848:	e793      	b.n	8023772 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802384a:	ad01      	add	r5, sp, #4
 802384c:	e7a1      	b.n	8023792 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802384e:	ab01      	add	r3, sp, #4
 8023850:	461d      	mov	r5, r3
 8023852:	e7ab      	b.n	80237ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8023854:	ab01      	add	r3, sp, #4
 8023856:	e7a9      	b.n	80237ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802385c:	b08f      	sub	sp, #60	; 0x3c
 802385e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8023862:	920c      	str	r2, [sp, #48]	; 0x30
 8023864:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8023866:	910a      	str	r1, [sp, #40]	; 0x28
 8023868:	9306      	str	r3, [sp, #24]
 802386a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 802386e:	900d      	str	r0, [sp, #52]	; 0x34
 8023870:	6850      	ldr	r0, [r2, #4]
 8023872:	6812      	ldr	r2, [r2, #0]
 8023874:	fb00 1303 	mla	r3, r0, r3, r1
 8023878:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802387c:	9307      	str	r3, [sp, #28]
 802387e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023880:	681b      	ldr	r3, [r3, #0]
 8023882:	9308      	str	r3, [sp, #32]
 8023884:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023886:	685c      	ldr	r4, [r3, #4]
 8023888:	3404      	adds	r4, #4
 802388a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802388c:	2b00      	cmp	r3, #0
 802388e:	dc03      	bgt.n	8023898 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023890:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023892:	2b00      	cmp	r3, #0
 8023894:	f340 81d6 	ble.w	8023c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023898:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802389a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802389e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80238a2:	1e48      	subs	r0, r1, #1
 80238a4:	1e56      	subs	r6, r2, #1
 80238a6:	9b06      	ldr	r3, [sp, #24]
 80238a8:	2b00      	cmp	r3, #0
 80238aa:	f340 80b7 	ble.w	8023a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80238ae:	ea5f 472b 	movs.w	r7, fp, asr #16
 80238b2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80238b6:	d406      	bmi.n	80238c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80238b8:	4287      	cmp	r7, r0
 80238ba:	da04      	bge.n	80238c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80238bc:	2b00      	cmp	r3, #0
 80238be:	db02      	blt.n	80238c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80238c0:	42b3      	cmp	r3, r6
 80238c2:	f2c0 80ac 	blt.w	8023a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80238c6:	3701      	adds	r7, #1
 80238c8:	f100 809d 	bmi.w	8023a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238cc:	42b9      	cmp	r1, r7
 80238ce:	f2c0 809a 	blt.w	8023a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238d2:	3301      	adds	r3, #1
 80238d4:	f100 8097 	bmi.w	8023a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238d8:	429a      	cmp	r2, r3
 80238da:	f2c0 8094 	blt.w	8023a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238de:	9b06      	ldr	r3, [sp, #24]
 80238e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80238e2:	9b07      	ldr	r3, [sp, #28]
 80238e4:	9309      	str	r3, [sp, #36]	; 0x24
 80238e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80238e8:	2b00      	cmp	r3, #0
 80238ea:	f340 80b5 	ble.w	8023a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80238ee:	9820      	ldr	r0, [sp, #128]	; 0x80
 80238f0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80238f2:	68c7      	ldr	r7, [r0, #12]
 80238f4:	6892      	ldr	r2, [r2, #8]
 80238f6:	ea5f 402b 	movs.w	r0, fp, asr #16
 80238fa:	ea4f 4625 	mov.w	r6, r5, asr #16
 80238fe:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023902:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023906:	f100 80fb 	bmi.w	8023b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802390a:	f102 3cff 	add.w	ip, r2, #4294967295
 802390e:	4560      	cmp	r0, ip
 8023910:	f280 80f6 	bge.w	8023b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023914:	2e00      	cmp	r6, #0
 8023916:	f2c0 80f3 	blt.w	8023b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802391a:	f107 3cff 	add.w	ip, r7, #4294967295
 802391e:	4566      	cmp	r6, ip
 8023920:	f280 80ee 	bge.w	8023b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023924:	b212      	sxth	r2, r2
 8023926:	fb06 0002 	mla	r0, r6, r2, r0
 802392a:	9e08      	ldr	r6, [sp, #32]
 802392c:	1837      	adds	r7, r6, r0
 802392e:	5c30      	ldrb	r0, [r6, r0]
 8023930:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023934:	eb04 0c08 	add.w	ip, r4, r8
 8023938:	2b00      	cmp	r3, #0
 802393a:	f000 80d3 	beq.w	8023ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802393e:	787e      	ldrb	r6, [r7, #1]
 8023940:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023944:	4426      	add	r6, r4
 8023946:	2900      	cmp	r1, #0
 8023948:	f000 80d4 	beq.w	8023af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802394c:	18b8      	adds	r0, r7, r2
 802394e:	5cba      	ldrb	r2, [r7, r2]
 8023950:	7840      	ldrb	r0, [r0, #1]
 8023952:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023956:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802395a:	4422      	add	r2, r4
 802395c:	4420      	add	r0, r4
 802395e:	b29b      	uxth	r3, r3
 8023960:	b289      	uxth	r1, r1
 8023962:	fb03 f901 	mul.w	r9, r3, r1
 8023966:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802396a:	011b      	lsls	r3, r3, #4
 802396c:	b289      	uxth	r1, r1
 802396e:	78b7      	ldrb	r7, [r6, #2]
 8023970:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023974:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023978:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802397c:	eba3 0309 	sub.w	r3, r3, r9
 8023980:	b29b      	uxth	r3, r3
 8023982:	ebae 0e01 	sub.w	lr, lr, r1
 8023986:	fa1f fe8e 	uxth.w	lr, lr
 802398a:	435f      	muls	r7, r3
 802398c:	fb0e 770a 	mla	r7, lr, sl, r7
 8023990:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023994:	fb01 770a 	mla	r7, r1, sl, r7
 8023998:	f890 a002 	ldrb.w	sl, [r0, #2]
 802399c:	fb09 7a0a 	mla	sl, r9, sl, r7
 80239a0:	f814 7008 	ldrb.w	r7, [r4, r8]
 80239a4:	f896 8000 	ldrb.w	r8, [r6]
 80239a8:	7876      	ldrb	r6, [r6, #1]
 80239aa:	fb03 f808 	mul.w	r8, r3, r8
 80239ae:	fb0e 8807 	mla	r8, lr, r7, r8
 80239b2:	7817      	ldrb	r7, [r2, #0]
 80239b4:	fb01 8807 	mla	r8, r1, r7, r8
 80239b8:	7807      	ldrb	r7, [r0, #0]
 80239ba:	fb09 8707 	mla	r7, r9, r7, r8
 80239be:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80239c2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80239c6:	ea47 070a 	orr.w	r7, r7, sl
 80239ca:	4373      	muls	r3, r6
 80239cc:	f892 a001 	ldrb.w	sl, [r2, #1]
 80239d0:	fb0e 330c 	mla	r3, lr, ip, r3
 80239d4:	fb01 310a 	mla	r1, r1, sl, r3
 80239d8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80239dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239de:	fb09 1a0a 	mla	sl, r9, sl, r1
 80239e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80239e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80239ea:	ea47 070a 	orr.w	r7, r7, sl
 80239ee:	801f      	strh	r7, [r3, #0]
 80239f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239f2:	3302      	adds	r3, #2
 80239f4:	9309      	str	r3, [sp, #36]	; 0x24
 80239f6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80239f8:	449b      	add	fp, r3
 80239fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239fc:	441d      	add	r5, r3
 80239fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a00:	3b01      	subs	r3, #1
 8023a02:	930b      	str	r3, [sp, #44]	; 0x2c
 8023a04:	e76f      	b.n	80238e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a06:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023a08:	449b      	add	fp, r3
 8023a0a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023a0c:	441d      	add	r5, r3
 8023a0e:	9b06      	ldr	r3, [sp, #24]
 8023a10:	3b01      	subs	r3, #1
 8023a12:	9306      	str	r3, [sp, #24]
 8023a14:	9b07      	ldr	r3, [sp, #28]
 8023a16:	3302      	adds	r3, #2
 8023a18:	9307      	str	r3, [sp, #28]
 8023a1a:	e744      	b.n	80238a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8023a1c:	d023      	beq.n	8023a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023a1e:	9b06      	ldr	r3, [sp, #24]
 8023a20:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023a22:	3b01      	subs	r3, #1
 8023a24:	fb00 b003 	mla	r0, r0, r3, fp
 8023a28:	1400      	asrs	r0, r0, #16
 8023a2a:	f53f af58 	bmi.w	80238de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a2e:	3901      	subs	r1, #1
 8023a30:	4288      	cmp	r0, r1
 8023a32:	f6bf af54 	bge.w	80238de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a36:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023a38:	fb01 5303 	mla	r3, r1, r3, r5
 8023a3c:	141b      	asrs	r3, r3, #16
 8023a3e:	f53f af4e 	bmi.w	80238de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a42:	3a01      	subs	r2, #1
 8023a44:	4293      	cmp	r3, r2
 8023a46:	f6bf af4a 	bge.w	80238de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a4a:	9b06      	ldr	r3, [sp, #24]
 8023a4c:	9309      	str	r3, [sp, #36]	; 0x24
 8023a4e:	9b07      	ldr	r3, [sp, #28]
 8023a50:	930b      	str	r3, [sp, #44]	; 0x2c
 8023a52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023a54:	2b00      	cmp	r3, #0
 8023a56:	dc70      	bgt.n	8023b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023a58:	9b06      	ldr	r3, [sp, #24]
 8023a5a:	9a07      	ldr	r2, [sp, #28]
 8023a5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023a60:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023a64:	9307      	str	r3, [sp, #28]
 8023a66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a68:	2b00      	cmp	r3, #0
 8023a6a:	f340 80eb 	ble.w	8023c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023a6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023a72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a7a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023a7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a88:	eef0 6a62 	vmov.f32	s13, s5
 8023a8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a94:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a98:	ee16 ba90 	vmov	fp, s13
 8023a9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023aa0:	eef0 6a43 	vmov.f32	s13, s6
 8023aa4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023aa8:	ee12 2a90 	vmov	r2, s5
 8023aac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023ab0:	fb92 f3f3 	sdiv	r3, r2, r3
 8023ab4:	ee13 2a10 	vmov	r2, s6
 8023ab8:	931b      	str	r3, [sp, #108]	; 0x6c
 8023aba:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023abc:	fb92 f3f3 	sdiv	r3, r2, r3
 8023ac0:	931c      	str	r3, [sp, #112]	; 0x70
 8023ac2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023ac4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023ac6:	3b01      	subs	r3, #1
 8023ac8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023acc:	930a      	str	r3, [sp, #40]	; 0x28
 8023ace:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023ad0:	bf08      	it	eq
 8023ad2:	4613      	moveq	r3, r2
 8023ad4:	ee16 5a90 	vmov	r5, s13
 8023ad8:	9306      	str	r3, [sp, #24]
 8023ada:	eeb0 3a67 	vmov.f32	s6, s15
 8023ade:	eef0 2a47 	vmov.f32	s5, s14
 8023ae2:	e6d2      	b.n	802388a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8023ae4:	b149      	cbz	r1, 8023afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8023ae6:	5cba      	ldrb	r2, [r7, r2]
 8023ae8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023aec:	4422      	add	r2, r4
 8023aee:	4660      	mov	r0, ip
 8023af0:	4666      	mov	r6, ip
 8023af2:	e734      	b.n	802395e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023af4:	4660      	mov	r0, ip
 8023af6:	4662      	mov	r2, ip
 8023af8:	e731      	b.n	802395e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023afa:	4660      	mov	r0, ip
 8023afc:	4662      	mov	r2, ip
 8023afe:	e7f7      	b.n	8023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023b00:	f110 0c01 	adds.w	ip, r0, #1
 8023b04:	f53f af74 	bmi.w	80239f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b08:	4562      	cmp	r2, ip
 8023b0a:	f6ff af71 	blt.w	80239f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b0e:	f116 0c01 	adds.w	ip, r6, #1
 8023b12:	f53f af6d 	bmi.w	80239f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b16:	4567      	cmp	r7, ip
 8023b18:	f6ff af6a 	blt.w	80239f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b1c:	b23f      	sxth	r7, r7
 8023b1e:	b212      	sxth	r2, r2
 8023b20:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023b24:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023b28:	9200      	str	r2, [sp, #0]
 8023b2a:	9701      	str	r7, [sp, #4]
 8023b2c:	4623      	mov	r3, r4
 8023b2e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023b32:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023b34:	f7ff fde6 	bl	8023704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023b38:	e75a      	b.n	80239f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b3a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023b3c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023b40:	ea4f 462b 	mov.w	r6, fp, asr #16
 8023b44:	1428      	asrs	r0, r5, #16
 8023b46:	fb02 6000 	mla	r0, r2, r0, r6
 8023b4a:	9e08      	ldr	r6, [sp, #32]
 8023b4c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8023b50:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023b54:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023b58:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023b5c:	1837      	adds	r7, r6, r0
 8023b5e:	eb04 0c08 	add.w	ip, r4, r8
 8023b62:	2b00      	cmp	r3, #0
 8023b64:	d060      	beq.n	8023c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8023b66:	787e      	ldrb	r6, [r7, #1]
 8023b68:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023b6c:	4426      	add	r6, r4
 8023b6e:	2900      	cmp	r1, #0
 8023b70:	d062      	beq.n	8023c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8023b72:	18b8      	adds	r0, r7, r2
 8023b74:	5cba      	ldrb	r2, [r7, r2]
 8023b76:	7840      	ldrb	r0, [r0, #1]
 8023b78:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023b7c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023b80:	4422      	add	r2, r4
 8023b82:	4420      	add	r0, r4
 8023b84:	b29b      	uxth	r3, r3
 8023b86:	b289      	uxth	r1, r1
 8023b88:	fb03 f901 	mul.w	r9, r3, r1
 8023b8c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023b90:	011b      	lsls	r3, r3, #4
 8023b92:	b289      	uxth	r1, r1
 8023b94:	78b7      	ldrb	r7, [r6, #2]
 8023b96:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023b9a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023b9e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023ba2:	eba3 0309 	sub.w	r3, r3, r9
 8023ba6:	b29b      	uxth	r3, r3
 8023ba8:	ebae 0e01 	sub.w	lr, lr, r1
 8023bac:	fa1f fe8e 	uxth.w	lr, lr
 8023bb0:	435f      	muls	r7, r3
 8023bb2:	fb0e 770a 	mla	r7, lr, sl, r7
 8023bb6:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023bba:	fb01 770a 	mla	r7, r1, sl, r7
 8023bbe:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023bc2:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023bc6:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023bca:	f896 8000 	ldrb.w	r8, [r6]
 8023bce:	7876      	ldrb	r6, [r6, #1]
 8023bd0:	fb03 f808 	mul.w	r8, r3, r8
 8023bd4:	fb0e 8807 	mla	r8, lr, r7, r8
 8023bd8:	7817      	ldrb	r7, [r2, #0]
 8023bda:	fb01 8807 	mla	r8, r1, r7, r8
 8023bde:	7807      	ldrb	r7, [r0, #0]
 8023be0:	fb09 8707 	mla	r7, r9, r7, r8
 8023be4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023be8:	4373      	muls	r3, r6
 8023bea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023bee:	7856      	ldrb	r6, [r2, #1]
 8023bf0:	ea47 070a 	orr.w	r7, r7, sl
 8023bf4:	fb0e 330c 	mla	r3, lr, ip, r3
 8023bf8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023bfc:	fb01 3306 	mla	r3, r1, r6, r3
 8023c00:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023c04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023c08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023c0a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023c0e:	ea47 070a 	orr.w	r7, r7, sl
 8023c12:	f823 7b02 	strh.w	r7, [r3], #2
 8023c16:	930b      	str	r3, [sp, #44]	; 0x2c
 8023c18:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023c1a:	449b      	add	fp, r3
 8023c1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c1e:	441d      	add	r5, r3
 8023c20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c22:	3b01      	subs	r3, #1
 8023c24:	9309      	str	r3, [sp, #36]	; 0x24
 8023c26:	e714      	b.n	8023a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023c28:	b149      	cbz	r1, 8023c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023c2a:	5cba      	ldrb	r2, [r7, r2]
 8023c2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023c30:	4422      	add	r2, r4
 8023c32:	4660      	mov	r0, ip
 8023c34:	4666      	mov	r6, ip
 8023c36:	e7a5      	b.n	8023b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023c38:	4660      	mov	r0, ip
 8023c3a:	4662      	mov	r2, ip
 8023c3c:	e7a2      	b.n	8023b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023c3e:	4660      	mov	r0, ip
 8023c40:	4662      	mov	r2, ip
 8023c42:	e7f7      	b.n	8023c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023c44:	b00f      	add	sp, #60	; 0x3c
 8023c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023c4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8023c4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c4e:	b085      	sub	sp, #20
 8023c50:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8023c54:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023c58:	9102      	str	r1, [sp, #8]
 8023c5a:	2c00      	cmp	r4, #0
 8023c5c:	fb04 710c 	mla	r1, r4, ip, r7
 8023c60:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023c64:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023c68:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023c6c:	eb02 0e01 	add.w	lr, r2, r1
 8023c70:	f2c0 8122 	blt.w	8023eb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023c74:	45a0      	cmp	r8, r4
 8023c76:	f340 811f 	ble.w	8023eb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023c7a:	2f00      	cmp	r7, #0
 8023c7c:	f2c0 811a 	blt.w	8023eb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023c80:	45bc      	cmp	ip, r7
 8023c82:	f340 8117 	ble.w	8023eb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023c86:	5c52      	ldrb	r2, [r2, r1]
 8023c88:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8023c8c:	1c7a      	adds	r2, r7, #1
 8023c8e:	f100 8116 	bmi.w	8023ebe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023c92:	4594      	cmp	ip, r2
 8023c94:	f340 8113 	ble.w	8023ebe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023c98:	2e00      	cmp	r6, #0
 8023c9a:	f000 8112 	beq.w	8023ec2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8023c9e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023ca2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023ca6:	3401      	adds	r4, #1
 8023ca8:	f100 810f 	bmi.w	8023eca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023cac:	45a0      	cmp	r8, r4
 8023cae:	f340 810c 	ble.w	8023eca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023cb2:	2800      	cmp	r0, #0
 8023cb4:	f000 810c 	beq.w	8023ed0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8023cb8:	2f00      	cmp	r7, #0
 8023cba:	f2c0 8104 	blt.w	8023ec6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023cbe:	45bc      	cmp	ip, r7
 8023cc0:	f340 8101 	ble.w	8023ec6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023cc4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8023cc8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023ccc:	3701      	adds	r7, #1
 8023cce:	f100 8102 	bmi.w	8023ed6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023cd2:	45bc      	cmp	ip, r7
 8023cd4:	f340 80ff 	ble.w	8023ed6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023cd8:	2e00      	cmp	r6, #0
 8023cda:	f000 80fe 	beq.w	8023eda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8023cde:	44f4      	add	ip, lr
 8023ce0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023ce4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023ce8:	b2b6      	uxth	r6, r6
 8023cea:	b280      	uxth	r0, r0
 8023cec:	fb00 fe06 	mul.w	lr, r0, r6
 8023cf0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023cf4:	0136      	lsls	r6, r6, #4
 8023cf6:	eba6 070e 	sub.w	r7, r6, lr
 8023cfa:	b280      	uxth	r0, r0
 8023cfc:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023d00:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023d04:	b2bf      	uxth	r7, r7
 8023d06:	1a1b      	subs	r3, r3, r0
 8023d08:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023d0c:	b29b      	uxth	r3, r3
 8023d0e:	fb0a f607 	mul.w	r6, sl, r7
 8023d12:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023d16:	fb0b 6603 	mla	r6, fp, r3, r6
 8023d1a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023d1e:	fb00 6609 	mla	r6, r0, r9, r6
 8023d22:	fb0e 6608 	mla	r6, lr, r8, r6
 8023d26:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023d2a:	9600      	str	r6, [sp, #0]
 8023d2c:	2e00      	cmp	r6, #0
 8023d2e:	f000 80be 	beq.w	8023eae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023d32:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023d36:	fb0b fc0c 	mul.w	ip, fp, ip
 8023d3a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023d3e:	fb0b f505 	mul.w	r5, fp, r5
 8023d42:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023d46:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023d4a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023d4e:	44dc      	add	ip, fp
 8023d50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d54:	9501      	str	r5, [sp, #4]
 8023d56:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023d5a:	9503      	str	r5, [sp, #12]
 8023d5c:	9d01      	ldr	r5, [sp, #4]
 8023d5e:	9e02      	ldr	r6, [sp, #8]
 8023d60:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023d64:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023d68:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023d6c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023d70:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023d74:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023d78:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023d7c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023d80:	4465      	add	r5, ip
 8023d82:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023d86:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023d8a:	fb09 fc0c 	mul.w	ip, r9, ip
 8023d8e:	fb09 f904 	mul.w	r9, r9, r4
 8023d92:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023d96:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023d9a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023d9e:	fb08 f404 	mul.w	r4, r8, r4
 8023da2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023da6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023daa:	fb08 f802 	mul.w	r8, r8, r2
 8023dae:	fb0a fa01 	mul.w	sl, sl, r1
 8023db2:	0a22      	lsrs	r2, r4, #8
 8023db4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023db8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023dbc:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023dc0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023dc4:	4414      	add	r4, r2
 8023dc6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023dca:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023dce:	0a2d      	lsrs	r5, r5, #8
 8023dd0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023dd4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023dd8:	9a03      	ldr	r2, [sp, #12]
 8023dda:	8836      	ldrh	r6, [r6, #0]
 8023ddc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023de0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023de4:	437d      	muls	r5, r7
 8023de6:	4461      	add	r1, ip
 8023de8:	0a24      	lsrs	r4, r4, #8
 8023dea:	fb02 5503 	mla	r5, r2, r3, r5
 8023dee:	0a09      	lsrs	r1, r1, #8
 8023df0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023df4:	fb04 540e 	mla	r4, r4, lr, r5
 8023df8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023dfc:	fb01 4100 	mla	r1, r1, r0, r4
 8023e00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e04:	0a09      	lsrs	r1, r1, #8
 8023e06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e0a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023e0e:	fb07 f70a 	mul.w	r7, r7, sl
 8023e12:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023e16:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023e1a:	fb03 7101 	mla	r1, r3, r1, r7
 8023e1e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023e22:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023e26:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023e2a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023e2e:	fb00 e101 	mla	r1, r0, r1, lr
 8023e32:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8023e36:	9a00      	ldr	r2, [sp, #0]
 8023e38:	b287      	uxth	r7, r0
 8023e3a:	437a      	muls	r2, r7
 8023e3c:	0a09      	lsrs	r1, r1, #8
 8023e3e:	1c53      	adds	r3, r2, #1
 8023e40:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023e44:	4321      	orrs	r1, r4
 8023e46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e4a:	1235      	asrs	r5, r6, #8
 8023e4c:	0c0a      	lsrs	r2, r1, #16
 8023e4e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023e52:	b2db      	uxtb	r3, r3
 8023e54:	fb12 f207 	smulbb	r2, r2, r7
 8023e58:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023e5c:	fb05 2503 	mla	r5, r5, r3, r2
 8023e60:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023e64:	10f2      	asrs	r2, r6, #3
 8023e66:	b2c8      	uxtb	r0, r1
 8023e68:	00f6      	lsls	r6, r6, #3
 8023e6a:	fb14 f407 	smulbb	r4, r4, r7
 8023e6e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023e72:	b2f6      	uxtb	r6, r6
 8023e74:	fb10 f007 	smulbb	r0, r0, r7
 8023e78:	fb02 4203 	mla	r2, r2, r3, r4
 8023e7c:	b2ad      	uxth	r5, r5
 8023e7e:	fb06 0303 	mla	r3, r6, r3, r0
 8023e82:	b299      	uxth	r1, r3
 8023e84:	b294      	uxth	r4, r2
 8023e86:	1c6b      	adds	r3, r5, #1
 8023e88:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023e8c:	1c62      	adds	r2, r4, #1
 8023e8e:	1c4b      	adds	r3, r1, #1
 8023e90:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023e94:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023e98:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023e9c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023ea0:	0952      	lsrs	r2, r2, #5
 8023ea2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ea6:	432b      	orrs	r3, r5
 8023ea8:	4313      	orrs	r3, r2
 8023eaa:	9a02      	ldr	r2, [sp, #8]
 8023eac:	8013      	strh	r3, [r2, #0]
 8023eae:	b005      	add	sp, #20
 8023eb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023eb4:	2500      	movs	r5, #0
 8023eb6:	e6e9      	b.n	8023c8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8023eb8:	2100      	movs	r1, #0
 8023eba:	460d      	mov	r5, r1
 8023ebc:	e6f3      	b.n	8023ca6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023ebe:	2100      	movs	r1, #0
 8023ec0:	e6f1      	b.n	8023ca6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023ec2:	4631      	mov	r1, r6
 8023ec4:	e6ef      	b.n	8023ca6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023ec6:	2400      	movs	r4, #0
 8023ec8:	e700      	b.n	8023ccc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8023eca:	2200      	movs	r2, #0
 8023ecc:	4614      	mov	r4, r2
 8023ece:	e70b      	b.n	8023ce8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023ed0:	4602      	mov	r2, r0
 8023ed2:	4604      	mov	r4, r0
 8023ed4:	e708      	b.n	8023ce8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023ed6:	2200      	movs	r2, #0
 8023ed8:	e706      	b.n	8023ce8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023eda:	4632      	mov	r2, r6
 8023edc:	e704      	b.n	8023ce8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08023ede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023ede:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ee2:	b09f      	sub	sp, #124	; 0x7c
 8023ee4:	921b      	str	r2, [sp, #108]	; 0x6c
 8023ee6:	9309      	str	r3, [sp, #36]	; 0x24
 8023ee8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023eea:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8023eee:	931c      	str	r3, [sp, #112]	; 0x70
 8023ef0:	9119      	str	r1, [sp, #100]	; 0x64
 8023ef2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8023ef6:	901d      	str	r0, [sp, #116]	; 0x74
 8023ef8:	6850      	ldr	r0, [r2, #4]
 8023efa:	6812      	ldr	r2, [r2, #0]
 8023efc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8023efe:	fb00 1303 	mla	r3, r0, r3, r1
 8023f02:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023f06:	930c      	str	r3, [sp, #48]	; 0x30
 8023f08:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f0a:	681b      	ldr	r3, [r3, #0]
 8023f0c:	9312      	str	r3, [sp, #72]	; 0x48
 8023f0e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f10:	685e      	ldr	r6, [r3, #4]
 8023f12:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8023f16:	930d      	str	r3, [sp, #52]	; 0x34
 8023f18:	3604      	adds	r6, #4
 8023f1a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023f1c:	2b00      	cmp	r3, #0
 8023f1e:	dc03      	bgt.n	8023f28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023f20:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023f22:	2b00      	cmp	r3, #0
 8023f24:	f340 8388 	ble.w	8024638 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8023f28:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023f2e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023f32:	1e48      	subs	r0, r1, #1
 8023f34:	1e57      	subs	r7, r2, #1
 8023f36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023f38:	2b00      	cmp	r3, #0
 8023f3a:	f340 8195 	ble.w	8024268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8023f3e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8023f40:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023f44:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023f48:	d406      	bmi.n	8023f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f4a:	4584      	cmp	ip, r0
 8023f4c:	da04      	bge.n	8023f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f4e:	2b00      	cmp	r3, #0
 8023f50:	db02      	blt.n	8023f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f52:	42bb      	cmp	r3, r7
 8023f54:	f2c0 8189 	blt.w	802426a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8023f58:	f11c 0c01 	adds.w	ip, ip, #1
 8023f5c:	f100 8177 	bmi.w	802424e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f60:	4561      	cmp	r1, ip
 8023f62:	f2c0 8174 	blt.w	802424e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f66:	3301      	adds	r3, #1
 8023f68:	f100 8171 	bmi.w	802424e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f6c:	429a      	cmp	r2, r3
 8023f6e:	f2c0 816e 	blt.w	802424e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023f74:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8023f76:	931a      	str	r3, [sp, #104]	; 0x68
 8023f78:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023f7a:	2b00      	cmp	r3, #0
 8023f7c:	f340 8193 	ble.w	80242a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8023f80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023f82:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023f86:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f88:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8023f8c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023f8e:	141b      	asrs	r3, r3, #16
 8023f90:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023f94:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023f98:	f100 81d6 	bmi.w	8024348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f9c:	f100 38ff 	add.w	r8, r0, #4294967295
 8023fa0:	4543      	cmp	r3, r8
 8023fa2:	f280 81d1 	bge.w	8024348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023fa6:	f1bc 0f00 	cmp.w	ip, #0
 8023faa:	f2c0 81cd 	blt.w	8024348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023fae:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023fb2:	45c4      	cmp	ip, r8
 8023fb4:	f280 81c8 	bge.w	8024348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023fb8:	b200      	sxth	r0, r0
 8023fba:	fb0c 3300 	mla	r3, ip, r0, r3
 8023fbe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023fc0:	eb04 0803 	add.w	r8, r4, r3
 8023fc4:	5ce3      	ldrb	r3, [r4, r3]
 8023fc6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023fca:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8023fce:	2a00      	cmp	r2, #0
 8023fd0:	f000 81af 	beq.w	8024332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023fd4:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023fd8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023fdc:	940e      	str	r4, [sp, #56]	; 0x38
 8023fde:	0e24      	lsrs	r4, r4, #24
 8023fe0:	9415      	str	r4, [sp, #84]	; 0x54
 8023fe2:	b179      	cbz	r1, 8024004 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023fe4:	eb08 0c00 	add.w	ip, r8, r0
 8023fe8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8023fec:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023ff0:	900a      	str	r0, [sp, #40]	; 0x28
 8023ff2:	0e00      	lsrs	r0, r0, #24
 8023ff4:	9013      	str	r0, [sp, #76]	; 0x4c
 8023ff6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8023ffa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023ffe:	900f      	str	r0, [sp, #60]	; 0x3c
 8024000:	0e00      	lsrs	r0, r0, #24
 8024002:	9016      	str	r0, [sp, #88]	; 0x58
 8024004:	b292      	uxth	r2, r2
 8024006:	b289      	uxth	r1, r1
 8024008:	fb02 f901 	mul.w	r9, r2, r1
 802400c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024010:	0112      	lsls	r2, r2, #4
 8024012:	eba2 0809 	sub.w	r8, r2, r9
 8024016:	b289      	uxth	r1, r1
 8024018:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802401c:	9815      	ldr	r0, [sp, #84]	; 0x54
 802401e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024020:	fa1f f888 	uxth.w	r8, r8
 8024024:	1a52      	subs	r2, r2, r1
 8024026:	b292      	uxth	r2, r2
 8024028:	fb08 f000 	mul.w	r0, r8, r0
 802402c:	fb02 000e 	mla	r0, r2, lr, r0
 8024030:	fb01 0004 	mla	r0, r1, r4, r0
 8024034:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024036:	fb09 0004 	mla	r0, r9, r4, r0
 802403a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802403e:	2800      	cmp	r0, #0
 8024040:	f000 80fa 	beq.w	8024238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024044:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024048:	d01b      	beq.n	8024082 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802404a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802404e:	fb0e fa0a 	mul.w	sl, lr, sl
 8024052:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024056:	fb0e fe03 	mul.w	lr, lr, r3
 802405a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802405e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024062:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024066:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802406a:	4453      	add	r3, sl
 802406c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024070:	0a1b      	lsrs	r3, r3, #8
 8024072:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024076:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802407a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802407e:	ea43 030c 	orr.w	r3, r3, ip
 8024082:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024084:	2cff      	cmp	r4, #255	; 0xff
 8024086:	d021      	beq.n	80240cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024088:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802408a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802408e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024090:	fb04 fb0b 	mul.w	fp, r4, fp
 8024094:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024096:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802409a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802409c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80240a0:	fb04 fa0a 	mul.w	sl, r4, sl
 80240a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80240ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80240b0:	44de      	add	lr, fp
 80240b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80240b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80240ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240c6:	ea4e 040a 	orr.w	r4, lr, sl
 80240ca:	940e      	str	r4, [sp, #56]	; 0x38
 80240cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240ce:	2cff      	cmp	r4, #255	; 0xff
 80240d0:	d021      	beq.n	8024116 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80240d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80240d4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80240d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240da:	fb04 fb0b 	mul.w	fp, r4, fp
 80240de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80240e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80240e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80240ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80240ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240f2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80240f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80240fa:	44de      	add	lr, fp
 80240fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024100:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024104:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024108:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802410c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024110:	ea4e 040a 	orr.w	r4, lr, sl
 8024114:	940a      	str	r4, [sp, #40]	; 0x28
 8024116:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024118:	2cff      	cmp	r4, #255	; 0xff
 802411a:	d021      	beq.n	8024160 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802411c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802411e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024122:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024124:	fb04 fb0b 	mul.w	fp, r4, fp
 8024128:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802412a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802412e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024130:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024134:	fb04 fa0a 	mul.w	sl, r4, sl
 8024138:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802413c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024140:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024144:	44de      	add	lr, fp
 8024146:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802414a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802414e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024152:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024156:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802415a:	ea4e 040a 	orr.w	r4, lr, sl
 802415e:	940f      	str	r4, [sp, #60]	; 0x3c
 8024160:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024162:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024166:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024168:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802416c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024170:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024174:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024178:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802417a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802417e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024182:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024184:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024188:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802418c:	fb08 f80e 	mul.w	r8, r8, lr
 8024190:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024194:	fb02 8303 	mla	r3, r2, r3, r8
 8024198:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802419a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802419c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80241a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80241a2:	fb01 330a 	mla	r3, r1, sl, r3
 80241a6:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80241aa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80241ac:	fb09 3901 	mla	r9, r9, r1, r3
 80241b0:	4342      	muls	r2, r0
 80241b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80241ba:	883b      	ldrh	r3, [r7, #0]
 80241bc:	1c50      	adds	r0, r2, #1
 80241be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241c2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80241c6:	ea4c 0c09 	orr.w	ip, ip, r9
 80241ca:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80241ce:	1219      	asrs	r1, r3, #8
 80241d0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80241d4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80241d8:	b2c0      	uxtb	r0, r0
 80241da:	fb12 f204 	smulbb	r2, r2, r4
 80241de:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80241e2:	fb01 2100 	mla	r1, r1, r0, r2
 80241e6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80241ea:	10da      	asrs	r2, r3, #3
 80241ec:	fa5f fc8c 	uxtb.w	ip, ip
 80241f0:	00db      	lsls	r3, r3, #3
 80241f2:	fb1c fc04 	smulbb	ip, ip, r4
 80241f6:	b2db      	uxtb	r3, r3
 80241f8:	b289      	uxth	r1, r1
 80241fa:	fb03 c300 	mla	r3, r3, r0, ip
 80241fe:	fa1f fc83 	uxth.w	ip, r3
 8024202:	1c4b      	adds	r3, r1, #1
 8024204:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024208:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802420c:	fb1e fe04 	smulbb	lr, lr, r4
 8024210:	f10c 0301 	add.w	r3, ip, #1
 8024214:	fb02 e200 	mla	r2, r2, r0, lr
 8024218:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802421c:	b292      	uxth	r2, r2
 802421e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024222:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024226:	430b      	orrs	r3, r1
 8024228:	1c51      	adds	r1, r2, #1
 802422a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802422e:	0952      	lsrs	r2, r2, #5
 8024230:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024234:	4313      	orrs	r3, r2
 8024236:	803b      	strh	r3, [r7, #0]
 8024238:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802423a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802423c:	441a      	add	r2, r3
 802423e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024240:	9229      	str	r2, [sp, #164]	; 0xa4
 8024242:	441d      	add	r5, r3
 8024244:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024246:	3b01      	subs	r3, #1
 8024248:	3702      	adds	r7, #2
 802424a:	931a      	str	r3, [sp, #104]	; 0x68
 802424c:	e694      	b.n	8023f78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802424e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024250:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024252:	441c      	add	r4, r3
 8024254:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024256:	9429      	str	r4, [sp, #164]	; 0xa4
 8024258:	441d      	add	r5, r3
 802425a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802425c:	3b01      	subs	r3, #1
 802425e:	9309      	str	r3, [sp, #36]	; 0x24
 8024260:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024262:	3302      	adds	r3, #2
 8024264:	930c      	str	r3, [sp, #48]	; 0x30
 8024266:	e666      	b.n	8023f36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024268:	d024      	beq.n	80242b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802426a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802426c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802426e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024270:	3b01      	subs	r3, #1
 8024272:	fb00 4003 	mla	r0, r0, r3, r4
 8024276:	1400      	asrs	r0, r0, #16
 8024278:	f53f ae7b 	bmi.w	8023f72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802427c:	3901      	subs	r1, #1
 802427e:	4288      	cmp	r0, r1
 8024280:	f6bf ae77 	bge.w	8023f72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024284:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024286:	fb01 5303 	mla	r3, r1, r3, r5
 802428a:	141b      	asrs	r3, r3, #16
 802428c:	f53f ae71 	bmi.w	8023f72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024290:	3a01      	subs	r2, #1
 8024292:	4293      	cmp	r3, r2
 8024294:	f6bf ae6d 	bge.w	8023f72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024298:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802429c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80242a0:	f1bb 0f00 	cmp.w	fp, #0
 80242a4:	dc70      	bgt.n	8024388 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80242a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80242a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80242ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80242ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80242b2:	930c      	str	r3, [sp, #48]	; 0x30
 80242b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80242b6:	2b00      	cmp	r3, #0
 80242b8:	f340 81be 	ble.w	8024638 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80242bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80242c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80242c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80242c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80242ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80242d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80242d6:	eef0 6a62 	vmov.f32	s13, s5
 80242da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80242de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80242e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80242e6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80242ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80242ee:	eef0 6a43 	vmov.f32	s13, s6
 80242f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80242f6:	ee12 2a90 	vmov	r2, s5
 80242fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80242fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8024302:	ee13 2a10 	vmov	r2, s6
 8024306:	932b      	str	r3, [sp, #172]	; 0xac
 8024308:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802430a:	fb92 f3f3 	sdiv	r3, r2, r3
 802430e:	932c      	str	r3, [sp, #176]	; 0xb0
 8024310:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024312:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8024314:	3b01      	subs	r3, #1
 8024316:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802431a:	9319      	str	r3, [sp, #100]	; 0x64
 802431c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802431e:	bf08      	it	eq
 8024320:	4613      	moveq	r3, r2
 8024322:	ee16 5a90 	vmov	r5, s13
 8024326:	9309      	str	r3, [sp, #36]	; 0x24
 8024328:	eeb0 3a67 	vmov.f32	s6, s15
 802432c:	eef0 2a47 	vmov.f32	s5, s14
 8024330:	e5f3      	b.n	8023f1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024332:	2900      	cmp	r1, #0
 8024334:	f43f ae66 	beq.w	8024004 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024338:	f818 0000 	ldrb.w	r0, [r8, r0]
 802433c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024340:	900a      	str	r0, [sp, #40]	; 0x28
 8024342:	0e00      	lsrs	r0, r0, #24
 8024344:	9013      	str	r0, [sp, #76]	; 0x4c
 8024346:	e65d      	b.n	8024004 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024348:	f113 0801 	adds.w	r8, r3, #1
 802434c:	f53f af74 	bmi.w	8024238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024350:	4540      	cmp	r0, r8
 8024352:	f6ff af71 	blt.w	8024238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024356:	f11c 0801 	adds.w	r8, ip, #1
 802435a:	f53f af6d 	bmi.w	8024238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802435e:	45c6      	cmp	lr, r8
 8024360:	f6ff af6a 	blt.w	8024238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024364:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8024366:	9302      	str	r3, [sp, #8]
 8024368:	b200      	sxth	r0, r0
 802436a:	fa0f f38e 	sxth.w	r3, lr
 802436e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8024372:	e9cd c203 	strd	ip, r2, [sp, #12]
 8024376:	9301      	str	r3, [sp, #4]
 8024378:	9000      	str	r0, [sp, #0]
 802437a:	4633      	mov	r3, r6
 802437c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802437e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8024380:	4639      	mov	r1, r7
 8024382:	f7ff fc62 	bl	8023c4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8024386:	e757      	b.n	8024238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024388:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802438a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802438c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024390:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024392:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024396:	1427      	asrs	r7, r4, #16
 8024398:	142b      	asrs	r3, r5, #16
 802439a:	fb01 7303 	mla	r3, r1, r3, r7
 802439e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80243a0:	18e7      	adds	r7, r4, r3
 80243a2:	5ce3      	ldrb	r3, [r4, r3]
 80243a4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80243a8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80243ac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80243b0:	2a00      	cmp	r2, #0
 80243b2:	f000 8137 	beq.w	8024624 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80243b6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80243ba:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80243be:	9410      	str	r4, [sp, #64]	; 0x40
 80243c0:	0e24      	lsrs	r4, r4, #24
 80243c2:	9417      	str	r4, [sp, #92]	; 0x5c
 80243c4:	b170      	cbz	r0, 80243e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80243c6:	eb07 0e01 	add.w	lr, r7, r1
 80243ca:	5c79      	ldrb	r1, [r7, r1]
 80243cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80243d0:	910b      	str	r1, [sp, #44]	; 0x2c
 80243d2:	0e09      	lsrs	r1, r1, #24
 80243d4:	9114      	str	r1, [sp, #80]	; 0x50
 80243d6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80243da:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80243de:	9111      	str	r1, [sp, #68]	; 0x44
 80243e0:	0e09      	lsrs	r1, r1, #24
 80243e2:	9118      	str	r1, [sp, #96]	; 0x60
 80243e4:	b292      	uxth	r2, r2
 80243e6:	b280      	uxth	r0, r0
 80243e8:	fb02 f800 	mul.w	r8, r2, r0
 80243ec:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80243f0:	0112      	lsls	r2, r2, #4
 80243f2:	eba2 0e08 	sub.w	lr, r2, r8
 80243f6:	b280      	uxth	r0, r0
 80243f8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80243fc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80243fe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024400:	fa1f fe8e 	uxth.w	lr, lr
 8024404:	1a12      	subs	r2, r2, r0
 8024406:	b292      	uxth	r2, r2
 8024408:	fb0e f101 	mul.w	r1, lr, r1
 802440c:	fb02 110c 	mla	r1, r2, ip, r1
 8024410:	fb00 1104 	mla	r1, r0, r4, r1
 8024414:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024416:	fb08 1104 	mla	r1, r8, r4, r1
 802441a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802441e:	2900      	cmp	r1, #0
 8024420:	f000 80f5 	beq.w	802460e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024424:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024428:	d019      	beq.n	802445e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802442a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802442e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024432:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024436:	fb0c fc03 	mul.w	ip, ip, r3
 802443a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802443e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024442:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024446:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802444a:	4453      	add	r3, sl
 802444c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024450:	0a1b      	lsrs	r3, r3, #8
 8024452:	0a3f      	lsrs	r7, r7, #8
 8024454:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024458:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802445c:	433b      	orrs	r3, r7
 802445e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024460:	2cff      	cmp	r4, #255	; 0xff
 8024462:	d020      	beq.n	80244a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8024464:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024466:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802446a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802446c:	4367      	muls	r7, r4
 802446e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024470:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024474:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024476:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802447a:	fb04 fa0a 	mul.w	sl, r4, sl
 802447e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024482:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024486:	44bc      	add	ip, r7
 8024488:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802448c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024490:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024494:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024498:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802449c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244a0:	ea4c 040a 	orr.w	r4, ip, sl
 80244a4:	9410      	str	r4, [sp, #64]	; 0x40
 80244a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80244a8:	2cff      	cmp	r4, #255	; 0xff
 80244aa:	d020      	beq.n	80244ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80244ac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80244ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80244b2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80244b4:	4367      	muls	r7, r4
 80244b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80244b8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80244bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80244be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80244c2:	fb04 fa0a 	mul.w	sl, r4, sl
 80244c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80244ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244ce:	44bc      	add	ip, r7
 80244d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80244d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80244d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80244dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244e8:	ea4c 040a 	orr.w	r4, ip, sl
 80244ec:	940b      	str	r4, [sp, #44]	; 0x2c
 80244ee:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244f0:	2cff      	cmp	r4, #255	; 0xff
 80244f2:	d020      	beq.n	8024536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80244f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80244f6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80244fa:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244fc:	4367      	muls	r7, r4
 80244fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024500:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024504:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024506:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802450a:	fb04 fa0a 	mul.w	sl, r4, sl
 802450e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024512:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024516:	44bc      	add	ip, r7
 8024518:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802451c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024520:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024524:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024528:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802452c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024530:	ea4c 040a 	orr.w	r4, ip, sl
 8024534:	9411      	str	r4, [sp, #68]	; 0x44
 8024536:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024538:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802453c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802453e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024542:	fb0e f707 	mul.w	r7, lr, r7
 8024546:	fb02 770c 	mla	r7, r2, ip, r7
 802454a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802454e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024550:	fb00 770c 	mla	r7, r0, ip, r7
 8024554:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024558:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802455a:	fb08 770c 	mla	r7, r8, ip, r7
 802455e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024562:	fb0e fe0c 	mul.w	lr, lr, ip
 8024566:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802456a:	fb02 e303 	mla	r3, r2, r3, lr
 802456e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024570:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024572:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024576:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024578:	fb00 330a 	mla	r3, r0, sl, r3
 802457c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024580:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024584:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024586:	f8b9 0000 	ldrh.w	r0, [r9]
 802458a:	434b      	muls	r3, r1
 802458c:	0a3f      	lsrs	r7, r7, #8
 802458e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024592:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024596:	1c59      	adds	r1, r3, #1
 8024598:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802459c:	ea47 070c 	orr.w	r7, r7, ip
 80245a0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80245a4:	1202      	asrs	r2, r0, #8
 80245a6:	0c3b      	lsrs	r3, r7, #16
 80245a8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80245ac:	b2c9      	uxtb	r1, r1
 80245ae:	fb13 f304 	smulbb	r3, r3, r4
 80245b2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80245b6:	fb02 3201 	mla	r2, r2, r1, r3
 80245ba:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80245be:	10c3      	asrs	r3, r0, #3
 80245c0:	b2ff      	uxtb	r7, r7
 80245c2:	00c0      	lsls	r0, r0, #3
 80245c4:	b292      	uxth	r2, r2
 80245c6:	fb1c fc04 	smulbb	ip, ip, r4
 80245ca:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80245ce:	b2c0      	uxtb	r0, r0
 80245d0:	fb17 f704 	smulbb	r7, r7, r4
 80245d4:	fb03 c301 	mla	r3, r3, r1, ip
 80245d8:	fb00 7001 	mla	r0, r0, r1, r7
 80245dc:	f102 0c01 	add.w	ip, r2, #1
 80245e0:	b280      	uxth	r0, r0
 80245e2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80245e6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80245ea:	1c42      	adds	r2, r0, #1
 80245ec:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80245f0:	b29b      	uxth	r3, r3
 80245f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80245f6:	ea42 020c 	orr.w	r2, r2, ip
 80245fa:	f103 0c01 	add.w	ip, r3, #1
 80245fe:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024602:	095b      	lsrs	r3, r3, #5
 8024604:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024608:	431a      	orrs	r2, r3
 802460a:	f8a9 2000 	strh.w	r2, [r9]
 802460e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024610:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024612:	441a      	add	r2, r3
 8024614:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024616:	9229      	str	r2, [sp, #164]	; 0xa4
 8024618:	f109 0902 	add.w	r9, r9, #2
 802461c:	441d      	add	r5, r3
 802461e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024622:	e63d      	b.n	80242a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024624:	2800      	cmp	r0, #0
 8024626:	f43f aedd 	beq.w	80243e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802462a:	5c79      	ldrb	r1, [r7, r1]
 802462c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024630:	910b      	str	r1, [sp, #44]	; 0x2c
 8024632:	0e09      	lsrs	r1, r1, #24
 8024634:	9114      	str	r1, [sp, #80]	; 0x50
 8024636:	e6d5      	b.n	80243e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024638:	b01f      	add	sp, #124	; 0x7c
 802463a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802463e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802463e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024642:	b089      	sub	sp, #36	; 0x24
 8024644:	9101      	str	r1, [sp, #4]
 8024646:	9801      	ldr	r0, [sp, #4]
 8024648:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802464c:	8800      	ldrh	r0, [r0, #0]
 802464e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8024652:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8024656:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802465a:	1206      	asrs	r6, r0, #8
 802465c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8024660:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8024664:	9602      	str	r6, [sp, #8]
 8024666:	10c6      	asrs	r6, r0, #3
 8024668:	00c0      	lsls	r0, r0, #3
 802466a:	b2c0      	uxtb	r0, r0
 802466c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024670:	9004      	str	r0, [sp, #16]
 8024672:	2f00      	cmp	r7, #0
 8024674:	fb07 100c 	mla	r0, r7, ip, r1
 8024678:	9603      	str	r6, [sp, #12]
 802467a:	eb02 0e00 	add.w	lr, r2, r0
 802467e:	f2c0 810a 	blt.w	8024896 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024682:	45b8      	cmp	r8, r7
 8024684:	f340 8107 	ble.w	8024896 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024688:	2900      	cmp	r1, #0
 802468a:	f2c0 8102 	blt.w	8024892 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802468e:	458c      	cmp	ip, r1
 8024690:	f340 80ff 	ble.w	8024892 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024694:	5c12      	ldrb	r2, [r2, r0]
 8024696:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802469a:	1c4a      	adds	r2, r1, #1
 802469c:	f100 80fe 	bmi.w	802489c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80246a0:	4594      	cmp	ip, r2
 80246a2:	f340 80fb 	ble.w	802489c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80246a6:	2d00      	cmp	r5, #0
 80246a8:	f000 80fa 	beq.w	80248a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80246ac:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80246b0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80246b4:	3701      	adds	r7, #1
 80246b6:	f100 80f7 	bmi.w	80248a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80246ba:	45b8      	cmp	r8, r7
 80246bc:	f340 80f4 	ble.w	80248a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80246c0:	2c00      	cmp	r4, #0
 80246c2:	f000 80f4 	beq.w	80248ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80246c6:	2900      	cmp	r1, #0
 80246c8:	eb0e 020c 	add.w	r2, lr, ip
 80246cc:	f2c0 80ea 	blt.w	80248a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80246d0:	458c      	cmp	ip, r1
 80246d2:	f340 80e7 	ble.w	80248a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80246d6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80246da:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80246de:	3101      	adds	r1, #1
 80246e0:	f100 80e8 	bmi.w	80248b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80246e4:	458c      	cmp	ip, r1
 80246e6:	f340 80e5 	ble.w	80248b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80246ea:	2d00      	cmp	r5, #0
 80246ec:	f000 80e4 	beq.w	80248b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80246f0:	7852      	ldrb	r2, [r2, #1]
 80246f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80246f6:	0e0b      	lsrs	r3, r1, #24
 80246f8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80246fc:	9300      	str	r3, [sp, #0]
 80246fe:	b2a4      	uxth	r4, r4
 8024700:	b2ab      	uxth	r3, r5
 8024702:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8024706:	fb03 f904 	mul.w	r9, r3, r4
 802470a:	fb0a f505 	mul.w	r5, sl, r5
 802470e:	011b      	lsls	r3, r3, #4
 8024710:	eba3 0e09 	sub.w	lr, r3, r9
 8024714:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8024718:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 802471c:	0a28      	lsrs	r0, r5, #8
 802471e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024722:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8024726:	4405      	add	r5, r0
 8024728:	0a2d      	lsrs	r5, r5, #8
 802472a:	fb0a f303 	mul.w	r3, sl, r3
 802472e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8024732:	9005      	str	r0, [sp, #20]
 8024734:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8024738:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802473c:	0a1b      	lsrs	r3, r3, #8
 802473e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8024742:	9306      	str	r3, [sp, #24]
 8024744:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8024748:	fb0b f303 	mul.w	r3, fp, r3
 802474c:	0a1d      	lsrs	r5, r3, #8
 802474e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024752:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8024756:	fb0b f606 	mul.w	r6, fp, r6
 802475a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802475e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8024762:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024766:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802476a:	fb08 f707 	mul.w	r7, r8, r7
 802476e:	441d      	add	r5, r3
 8024770:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8024774:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8024778:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802477c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024780:	fb08 fc0c 	mul.w	ip, r8, ip
 8024784:	0a1b      	lsrs	r3, r3, #8
 8024786:	9307      	str	r3, [sp, #28]
 8024788:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802478c:	0e0b      	lsrs	r3, r1, #24
 802478e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8024792:	435f      	muls	r7, r3
 8024794:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024798:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802479c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80247a0:	4460      	add	r0, ip
 80247a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80247a6:	b2a4      	uxth	r4, r4
 80247a8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80247ac:	0a2d      	lsrs	r5, r5, #8
 80247ae:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80247b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247b6:	fa1f fe8e 	uxth.w	lr, lr
 80247ba:	4359      	muls	r1, r3
 80247bc:	1b12      	subs	r2, r2, r4
 80247be:	9b05      	ldr	r3, [sp, #20]
 80247c0:	44bc      	add	ip, r7
 80247c2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80247c6:	b292      	uxth	r2, r2
 80247c8:	fb05 f50e 	mul.w	r5, r5, lr
 80247cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247d0:	fb03 5502 	mla	r5, r3, r2, r5
 80247d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247d8:	9b06      	ldr	r3, [sp, #24]
 80247da:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80247de:	0a36      	lsrs	r6, r6, #8
 80247e0:	0a00      	lsrs	r0, r0, #8
 80247e2:	fb0c 5509 	mla	r5, ip, r9, r5
 80247e6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80247ea:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80247ee:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80247f2:	fb00 5504 	mla	r5, r0, r4, r5
 80247f6:	fb0e f606 	mul.w	r6, lr, r6
 80247fa:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80247fe:	0a09      	lsrs	r1, r1, #8
 8024800:	9b07      	ldr	r3, [sp, #28]
 8024802:	fb02 6000 	mla	r0, r2, r0, r6
 8024806:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802480a:	fb09 0001 	mla	r0, r9, r1, r0
 802480e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024812:	fb0e fe0b 	mul.w	lr, lr, fp
 8024816:	fb04 0003 	mla	r0, r4, r3, r0
 802481a:	fb02 e20a 	mla	r2, r2, sl, lr
 802481e:	9b00      	ldr	r3, [sp, #0]
 8024820:	fb04 2408 	mla	r4, r4, r8, r2
 8024824:	fb09 4903 	mla	r9, r9, r3, r4
 8024828:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802482c:	9b02      	ldr	r3, [sp, #8]
 802482e:	9a04      	ldr	r2, [sp, #16]
 8024830:	fa5f f989 	uxtb.w	r9, r9
 8024834:	fb03 f109 	mul.w	r1, r3, r9
 8024838:	9b03      	ldr	r3, [sp, #12]
 802483a:	0a2d      	lsrs	r5, r5, #8
 802483c:	0a00      	lsrs	r0, r0, #8
 802483e:	fb03 f309 	mul.w	r3, r3, r9
 8024842:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024846:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802484a:	4305      	orrs	r5, r0
 802484c:	fb02 f909 	mul.w	r9, r2, r9
 8024850:	1c58      	adds	r0, r3, #1
 8024852:	1c4a      	adds	r2, r1, #1
 8024854:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024858:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802485c:	0a2b      	lsrs	r3, r5, #8
 802485e:	0c2a      	lsrs	r2, r5, #16
 8024860:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024864:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8024868:	00db      	lsls	r3, r3, #3
 802486a:	0212      	lsls	r2, r2, #8
 802486c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024870:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024874:	4313      	orrs	r3, r2
 8024876:	f109 0201 	add.w	r2, r9, #1
 802487a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802487e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8024882:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024886:	431d      	orrs	r5, r3
 8024888:	9b01      	ldr	r3, [sp, #4]
 802488a:	801d      	strh	r5, [r3, #0]
 802488c:	b009      	add	sp, #36	; 0x24
 802488e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024892:	2000      	movs	r0, #0
 8024894:	e701      	b.n	802469a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8024896:	2600      	movs	r6, #0
 8024898:	4630      	mov	r0, r6
 802489a:	e70b      	b.n	80246b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802489c:	2600      	movs	r6, #0
 802489e:	e709      	b.n	80246b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80248a0:	462e      	mov	r6, r5
 80248a2:	e707      	b.n	80246b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80248a4:	2700      	movs	r7, #0
 80248a6:	e71a      	b.n	80246de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80248a8:	2100      	movs	r1, #0
 80248aa:	460f      	mov	r7, r1
 80248ac:	e723      	b.n	80246f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80248ae:	4621      	mov	r1, r4
 80248b0:	4627      	mov	r7, r4
 80248b2:	e720      	b.n	80246f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80248b4:	2100      	movs	r1, #0
 80248b6:	e71e      	b.n	80246f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80248b8:	4629      	mov	r1, r5
 80248ba:	e71c      	b.n	80246f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080248bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80248bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80248c0:	b09b      	sub	sp, #108	; 0x6c
 80248c2:	9218      	str	r2, [sp, #96]	; 0x60
 80248c4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80248c6:	9116      	str	r1, [sp, #88]	; 0x58
 80248c8:	9307      	str	r3, [sp, #28]
 80248ca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80248ce:	9019      	str	r0, [sp, #100]	; 0x64
 80248d0:	6850      	ldr	r0, [r2, #4]
 80248d2:	6812      	ldr	r2, [r2, #0]
 80248d4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80248d6:	fb00 1303 	mla	r3, r0, r3, r1
 80248da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80248de:	930a      	str	r3, [sp, #40]	; 0x28
 80248e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248e2:	681b      	ldr	r3, [r3, #0]
 80248e4:	930f      	str	r3, [sp, #60]	; 0x3c
 80248e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248e8:	685e      	ldr	r6, [r3, #4]
 80248ea:	3604      	adds	r6, #4
 80248ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80248ee:	2b00      	cmp	r3, #0
 80248f0:	dc03      	bgt.n	80248fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80248f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80248f4:	2b00      	cmp	r3, #0
 80248f6:	f340 8373 	ble.w	8024fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80248fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024900:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024904:	1e48      	subs	r0, r1, #1
 8024906:	1e57      	subs	r7, r2, #1
 8024908:	9b07      	ldr	r3, [sp, #28]
 802490a:	2b00      	cmp	r3, #0
 802490c:	f340 8190 	ble.w	8024c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8024910:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024912:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024916:	ea4f 4325 	mov.w	r3, r5, asr #16
 802491a:	d406      	bmi.n	802492a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802491c:	4584      	cmp	ip, r0
 802491e:	da04      	bge.n	802492a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024920:	2b00      	cmp	r3, #0
 8024922:	db02      	blt.n	802492a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024924:	42bb      	cmp	r3, r7
 8024926:	f2c0 8184 	blt.w	8024c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802492a:	f11c 0c01 	adds.w	ip, ip, #1
 802492e:	f100 8172 	bmi.w	8024c16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024932:	4561      	cmp	r1, ip
 8024934:	f2c0 816f 	blt.w	8024c16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024938:	3301      	adds	r3, #1
 802493a:	f100 816c 	bmi.w	8024c16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802493e:	429a      	cmp	r2, r3
 8024940:	f2c0 8169 	blt.w	8024c16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024944:	9b07      	ldr	r3, [sp, #28]
 8024946:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024948:	9317      	str	r3, [sp, #92]	; 0x5c
 802494a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802494c:	2b00      	cmp	r3, #0
 802494e:	f340 818e 	ble.w	8024c6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024952:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024954:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024958:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802495a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802495e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024960:	141b      	asrs	r3, r3, #16
 8024962:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024966:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802496a:	f100 81d1 	bmi.w	8024d10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802496e:	f101 38ff 	add.w	r8, r1, #4294967295
 8024972:	4543      	cmp	r3, r8
 8024974:	f280 81cc 	bge.w	8024d10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024978:	f1bc 0f00 	cmp.w	ip, #0
 802497c:	f2c0 81c8 	blt.w	8024d10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024980:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024984:	45c4      	cmp	ip, r8
 8024986:	f280 81c3 	bge.w	8024d10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802498a:	b209      	sxth	r1, r1
 802498c:	fb0c 3301 	mla	r3, ip, r1, r3
 8024990:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024992:	eb04 0803 	add.w	r8, r4, r3
 8024996:	5ce3      	ldrb	r3, [r4, r3]
 8024998:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802499c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80249a0:	2a00      	cmp	r2, #0
 80249a2:	f000 81aa 	beq.w	8024cfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80249a6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80249aa:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80249ae:	940b      	str	r4, [sp, #44]	; 0x2c
 80249b0:	0e24      	lsrs	r4, r4, #24
 80249b2:	9412      	str	r4, [sp, #72]	; 0x48
 80249b4:	b178      	cbz	r0, 80249d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80249b6:	eb08 0c01 	add.w	ip, r8, r1
 80249ba:	f818 1001 	ldrb.w	r1, [r8, r1]
 80249be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80249c2:	9108      	str	r1, [sp, #32]
 80249c4:	0e09      	lsrs	r1, r1, #24
 80249c6:	9110      	str	r1, [sp, #64]	; 0x40
 80249c8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80249cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80249d0:	910c      	str	r1, [sp, #48]	; 0x30
 80249d2:	0e09      	lsrs	r1, r1, #24
 80249d4:	9113      	str	r1, [sp, #76]	; 0x4c
 80249d6:	b292      	uxth	r2, r2
 80249d8:	b280      	uxth	r0, r0
 80249da:	fb02 f900 	mul.w	r9, r2, r0
 80249de:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80249e2:	0112      	lsls	r2, r2, #4
 80249e4:	eba2 0809 	sub.w	r8, r2, r9
 80249e8:	b280      	uxth	r0, r0
 80249ea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80249ee:	9912      	ldr	r1, [sp, #72]	; 0x48
 80249f0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80249f2:	fa1f f888 	uxth.w	r8, r8
 80249f6:	1a12      	subs	r2, r2, r0
 80249f8:	b292      	uxth	r2, r2
 80249fa:	fb08 f101 	mul.w	r1, r8, r1
 80249fe:	fb02 110e 	mla	r1, r2, lr, r1
 8024a02:	fb00 1104 	mla	r1, r0, r4, r1
 8024a06:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024a08:	fb09 1104 	mla	r1, r9, r4, r1
 8024a0c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024a10:	2900      	cmp	r1, #0
 8024a12:	f000 80f5 	beq.w	8024c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024a16:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024a1a:	d01b      	beq.n	8024a54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024a1c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024a20:	fb0e fa0a 	mul.w	sl, lr, sl
 8024a24:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a28:	fb0e fe03 	mul.w	lr, lr, r3
 8024a2c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024a30:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a34:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024a38:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024a3c:	4453      	add	r3, sl
 8024a3e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024a42:	0a1b      	lsrs	r3, r3, #8
 8024a44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a48:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a4c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024a50:	ea43 030c 	orr.w	r3, r3, ip
 8024a54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a56:	2cff      	cmp	r4, #255	; 0xff
 8024a58:	d021      	beq.n	8024a9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8024a5a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024a5c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024a60:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a62:	fb04 fb0b 	mul.w	fp, r4, fp
 8024a66:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024a68:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024a6c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a6e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024a72:	fb04 fa0a 	mul.w	sl, r4, sl
 8024a76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a7a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024a7e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024a82:	44de      	add	lr, fp
 8024a84:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024a88:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024a8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a98:	ea4e 040a 	orr.w	r4, lr, sl
 8024a9c:	940b      	str	r4, [sp, #44]	; 0x2c
 8024a9e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024aa0:	2cff      	cmp	r4, #255	; 0xff
 8024aa2:	d021      	beq.n	8024ae8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024aa4:	9c08      	ldr	r4, [sp, #32]
 8024aa6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024aaa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024aac:	fb04 fb0b 	mul.w	fp, r4, fp
 8024ab0:	9c08      	ldr	r4, [sp, #32]
 8024ab2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024ab6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024ab8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024abc:	fb04 fa0a 	mul.w	sl, r4, sl
 8024ac0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ac4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024ac8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024acc:	44de      	add	lr, fp
 8024ace:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024ad2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024ad6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ada:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ade:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ae2:	ea4e 040a 	orr.w	r4, lr, sl
 8024ae6:	9408      	str	r4, [sp, #32]
 8024ae8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024aea:	2cff      	cmp	r4, #255	; 0xff
 8024aec:	d021      	beq.n	8024b32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024aee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024af0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024af4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024af6:	fb04 fb0b 	mul.w	fp, r4, fp
 8024afa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024afc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024b00:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024b02:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024b06:	fb04 fa0a 	mul.w	sl, r4, sl
 8024b0a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b0e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024b12:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024b16:	44de      	add	lr, fp
 8024b18:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024b1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024b20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b2c:	ea4e 040a 	orr.w	r4, lr, sl
 8024b30:	940c      	str	r4, [sp, #48]	; 0x30
 8024b32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b34:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024b38:	9c08      	ldr	r4, [sp, #32]
 8024b3a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024b3e:	fb08 fc0c 	mul.w	ip, r8, ip
 8024b42:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024b46:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024b4a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024b4c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024b50:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024b54:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b56:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024b5a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024b5e:	fb08 f80e 	mul.w	r8, r8, lr
 8024b62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b66:	fb02 8303 	mla	r3, r2, r3, r8
 8024b6a:	9a08      	ldr	r2, [sp, #32]
 8024b6c:	f8b7 8000 	ldrh.w	r8, [r7]
 8024b70:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024b74:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024b76:	fb00 330a 	mla	r3, r0, sl, r3
 8024b7a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8024b7e:	fb09 3900 	mla	r9, r9, r0, r3
 8024b82:	43c9      	mvns	r1, r1
 8024b84:	ea4f 2228 	mov.w	r2, r8, asr #8
 8024b88:	fa5f fe81 	uxtb.w	lr, r1
 8024b8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b90:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024b94:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024b98:	fb02 f20e 	mul.w	r2, r2, lr
 8024b9c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ba0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024ba4:	ea4c 0c09 	orr.w	ip, ip, r9
 8024ba8:	1c53      	adds	r3, r2, #1
 8024baa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8024bae:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8024bb2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8024bb6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024bba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024bbe:	4a63      	ldr	r2, [pc, #396]	; (8024d4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8024bc0:	fb00 f00e 	mul.w	r0, r0, lr
 8024bc4:	b2db      	uxtb	r3, r3
 8024bc6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8024bca:	1c43      	adds	r3, r0, #1
 8024bcc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024bd0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8024bd4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8024bd8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024bdc:	b2c9      	uxtb	r1, r1
 8024bde:	00db      	lsls	r3, r3, #3
 8024be0:	fb01 f10e 	mul.w	r1, r1, lr
 8024be4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024be8:	4313      	orrs	r3, r2
 8024bea:	1c4a      	adds	r2, r1, #1
 8024bec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024bf0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024bf4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024bf8:	ea4c 0c03 	orr.w	ip, ip, r3
 8024bfc:	f8a7 c000 	strh.w	ip, [r7]
 8024c00:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024c02:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024c04:	441a      	add	r2, r3
 8024c06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024c08:	9225      	str	r2, [sp, #148]	; 0x94
 8024c0a:	441d      	add	r5, r3
 8024c0c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024c0e:	3b01      	subs	r3, #1
 8024c10:	3702      	adds	r7, #2
 8024c12:	9317      	str	r3, [sp, #92]	; 0x5c
 8024c14:	e699      	b.n	802494a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024c16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024c18:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024c1a:	441c      	add	r4, r3
 8024c1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024c1e:	9425      	str	r4, [sp, #148]	; 0x94
 8024c20:	441d      	add	r5, r3
 8024c22:	9b07      	ldr	r3, [sp, #28]
 8024c24:	3b01      	subs	r3, #1
 8024c26:	9307      	str	r3, [sp, #28]
 8024c28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c2a:	3302      	adds	r3, #2
 8024c2c:	930a      	str	r3, [sp, #40]	; 0x28
 8024c2e:	e66b      	b.n	8024908 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024c30:	d024      	beq.n	8024c7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024c32:	9b07      	ldr	r3, [sp, #28]
 8024c34:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024c36:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024c38:	3b01      	subs	r3, #1
 8024c3a:	fb00 4003 	mla	r0, r0, r3, r4
 8024c3e:	1400      	asrs	r0, r0, #16
 8024c40:	f53f ae80 	bmi.w	8024944 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c44:	3901      	subs	r1, #1
 8024c46:	4288      	cmp	r0, r1
 8024c48:	f6bf ae7c 	bge.w	8024944 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c4c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024c4e:	fb01 5303 	mla	r3, r1, r3, r5
 8024c52:	141b      	asrs	r3, r3, #16
 8024c54:	f53f ae76 	bmi.w	8024944 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c58:	3a01      	subs	r2, #1
 8024c5a:	4293      	cmp	r3, r2
 8024c5c:	f6bf ae72 	bge.w	8024944 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c60:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024c64:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024c68:	f1bb 0f00 	cmp.w	fp, #0
 8024c6c:	dc70      	bgt.n	8024d50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8024c6e:	9b07      	ldr	r3, [sp, #28]
 8024c70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024c74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c76:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024c7a:	930a      	str	r3, [sp, #40]	; 0x28
 8024c7c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024c7e:	2b00      	cmp	r3, #0
 8024c80:	f340 81ae 	ble.w	8024fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024c84:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024c88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024c8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c96:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c9e:	eef0 6a62 	vmov.f32	s13, s5
 8024ca2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024ca6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024caa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024cae:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8024cb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024cb6:	eef0 6a43 	vmov.f32	s13, s6
 8024cba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024cbe:	ee12 2a90 	vmov	r2, s5
 8024cc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024cc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8024cca:	ee13 2a10 	vmov	r2, s6
 8024cce:	9327      	str	r3, [sp, #156]	; 0x9c
 8024cd0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024cd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8024cd6:	9328      	str	r3, [sp, #160]	; 0xa0
 8024cd8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024cda:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024cdc:	3b01      	subs	r3, #1
 8024cde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ce2:	9316      	str	r3, [sp, #88]	; 0x58
 8024ce4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024ce6:	bf08      	it	eq
 8024ce8:	4613      	moveq	r3, r2
 8024cea:	ee16 5a90 	vmov	r5, s13
 8024cee:	9307      	str	r3, [sp, #28]
 8024cf0:	eeb0 3a67 	vmov.f32	s6, s15
 8024cf4:	eef0 2a47 	vmov.f32	s5, s14
 8024cf8:	e5f8      	b.n	80248ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8024cfa:	2800      	cmp	r0, #0
 8024cfc:	f43f ae6b 	beq.w	80249d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024d00:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024d04:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024d08:	9108      	str	r1, [sp, #32]
 8024d0a:	0e09      	lsrs	r1, r1, #24
 8024d0c:	9110      	str	r1, [sp, #64]	; 0x40
 8024d0e:	e662      	b.n	80249d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024d10:	f113 0801 	adds.w	r8, r3, #1
 8024d14:	f53f af74 	bmi.w	8024c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d18:	4541      	cmp	r1, r8
 8024d1a:	f6ff af71 	blt.w	8024c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d1e:	f11c 0801 	adds.w	r8, ip, #1
 8024d22:	f53f af6d 	bmi.w	8024c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d26:	45c6      	cmp	lr, r8
 8024d28:	f6ff af6a 	blt.w	8024c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d2c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024d30:	b209      	sxth	r1, r1
 8024d32:	fa0f f38e 	sxth.w	r3, lr
 8024d36:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024d3a:	9301      	str	r3, [sp, #4]
 8024d3c:	9100      	str	r1, [sp, #0]
 8024d3e:	4633      	mov	r3, r6
 8024d40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d42:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024d44:	4639      	mov	r1, r7
 8024d46:	f7ff fc7a 	bl	802463e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024d4a:	e759      	b.n	8024c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d4c:	fffff800 	.word	0xfffff800
 8024d50:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024d52:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024d54:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024d58:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d5e:	1427      	asrs	r7, r4, #16
 8024d60:	142b      	asrs	r3, r5, #16
 8024d62:	fb01 7303 	mla	r3, r1, r3, r7
 8024d66:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024d68:	18e7      	adds	r7, r4, r3
 8024d6a:	5ce3      	ldrb	r3, [r4, r3]
 8024d6c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024d70:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024d74:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024d78:	2a00      	cmp	r2, #0
 8024d7a:	f000 8127 	beq.w	8024fcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024d7e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024d82:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024d86:	940d      	str	r4, [sp, #52]	; 0x34
 8024d88:	0e24      	lsrs	r4, r4, #24
 8024d8a:	9414      	str	r4, [sp, #80]	; 0x50
 8024d8c:	b170      	cbz	r0, 8024dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024d8e:	eb07 0e01 	add.w	lr, r7, r1
 8024d92:	5c79      	ldrb	r1, [r7, r1]
 8024d94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024d98:	9109      	str	r1, [sp, #36]	; 0x24
 8024d9a:	0e09      	lsrs	r1, r1, #24
 8024d9c:	9111      	str	r1, [sp, #68]	; 0x44
 8024d9e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024da2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024da6:	910e      	str	r1, [sp, #56]	; 0x38
 8024da8:	0e09      	lsrs	r1, r1, #24
 8024daa:	9115      	str	r1, [sp, #84]	; 0x54
 8024dac:	b292      	uxth	r2, r2
 8024dae:	b280      	uxth	r0, r0
 8024db0:	fb02 f800 	mul.w	r8, r2, r0
 8024db4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024db8:	0112      	lsls	r2, r2, #4
 8024dba:	eba2 0e08 	sub.w	lr, r2, r8
 8024dbe:	b280      	uxth	r0, r0
 8024dc0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024dc4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024dc6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024dc8:	fa1f fe8e 	uxth.w	lr, lr
 8024dcc:	1a09      	subs	r1, r1, r0
 8024dce:	b289      	uxth	r1, r1
 8024dd0:	fb0e f202 	mul.w	r2, lr, r2
 8024dd4:	fb01 220c 	mla	r2, r1, ip, r2
 8024dd8:	fb00 2204 	mla	r2, r0, r4, r2
 8024ddc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024dde:	fb08 2204 	mla	r2, r8, r4, r2
 8024de2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024de6:	2a00      	cmp	r2, #0
 8024de8:	f000 80e5 	beq.w	8024fb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8024dec:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024df0:	d019      	beq.n	8024e26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8024df2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024df6:	fb0c fa0a 	mul.w	sl, ip, sl
 8024dfa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024dfe:	fb0c fc03 	mul.w	ip, ip, r3
 8024e02:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024e06:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024e0a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024e0e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024e12:	4453      	add	r3, sl
 8024e14:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024e18:	0a1b      	lsrs	r3, r3, #8
 8024e1a:	0a3f      	lsrs	r7, r7, #8
 8024e1c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024e20:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024e24:	433b      	orrs	r3, r7
 8024e26:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024e28:	2cff      	cmp	r4, #255	; 0xff
 8024e2a:	d020      	beq.n	8024e6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8024e2c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024e2e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024e32:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024e34:	4367      	muls	r7, r4
 8024e36:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024e38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024e3c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024e3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e42:	fb04 fa0a 	mul.w	sl, r4, sl
 8024e46:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e4a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e4e:	44bc      	add	ip, r7
 8024e50:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024e54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024e58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e68:	ea4c 040a 	orr.w	r4, ip, sl
 8024e6c:	940d      	str	r4, [sp, #52]	; 0x34
 8024e6e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e70:	2cff      	cmp	r4, #255	; 0xff
 8024e72:	d020      	beq.n	8024eb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8024e74:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024e76:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024e7a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e7c:	4367      	muls	r7, r4
 8024e7e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024e80:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024e84:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e86:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e8a:	fb04 fa0a 	mul.w	sl, r4, sl
 8024e8e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e92:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e96:	44bc      	add	ip, r7
 8024e98:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024e9c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024ea0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024ea4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ea8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024eac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024eb0:	ea4c 040a 	orr.w	r4, ip, sl
 8024eb4:	9409      	str	r4, [sp, #36]	; 0x24
 8024eb6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024eb8:	2cff      	cmp	r4, #255	; 0xff
 8024eba:	d020      	beq.n	8024efe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8024ebc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024ebe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024ec2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024ec4:	4367      	muls	r7, r4
 8024ec6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024ec8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024ecc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024ece:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024ed2:	fb04 fa0a 	mul.w	sl, r4, sl
 8024ed6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024eda:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ede:	44bc      	add	ip, r7
 8024ee0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024ee4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024ee8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024eec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ef0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ef4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ef8:	ea4c 040a 	orr.w	r4, ip, sl
 8024efc:	940e      	str	r4, [sp, #56]	; 0x38
 8024efe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024f00:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024f04:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024f06:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024f0a:	fb0e f707 	mul.w	r7, lr, r7
 8024f0e:	fb01 770c 	mla	r7, r1, ip, r7
 8024f12:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024f16:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024f18:	fb00 770c 	mla	r7, r0, ip, r7
 8024f1c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024f20:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024f22:	fb08 770c 	mla	r7, r8, ip, r7
 8024f26:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024f2a:	fb0e fe0c 	mul.w	lr, lr, ip
 8024f2e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024f32:	fb01 e303 	mla	r3, r1, r3, lr
 8024f36:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024f38:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024f3c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024f3e:	fb00 330a 	mla	r3, r0, sl, r3
 8024f42:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024f46:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024f4a:	f8b9 3000 	ldrh.w	r3, [r9]
 8024f4e:	43d2      	mvns	r2, r2
 8024f50:	1218      	asrs	r0, r3, #8
 8024f52:	b2d2      	uxtb	r2, r2
 8024f54:	10d9      	asrs	r1, r3, #3
 8024f56:	0a3f      	lsrs	r7, r7, #8
 8024f58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f5c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024f60:	00db      	lsls	r3, r3, #3
 8024f62:	4350      	muls	r0, r2
 8024f64:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024f68:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024f6c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024f70:	b2db      	uxtb	r3, r3
 8024f72:	ea47 070c 	orr.w	r7, r7, ip
 8024f76:	4351      	muls	r1, r2
 8024f78:	4353      	muls	r3, r2
 8024f7a:	1c42      	adds	r2, r0, #1
 8024f7c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f80:	0c3a      	lsrs	r2, r7, #16
 8024f82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f86:	4a18      	ldr	r2, [pc, #96]	; (8024fe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8024f88:	b2c0      	uxtb	r0, r0
 8024f8a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8024f8e:	1c4a      	adds	r2, r1, #1
 8024f90:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f94:	0a3a      	lsrs	r2, r7, #8
 8024f96:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f9a:	00c9      	lsls	r1, r1, #3
 8024f9c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024fa0:	4301      	orrs	r1, r0
 8024fa2:	1c58      	adds	r0, r3, #1
 8024fa4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024fa8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024fac:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8024fb0:	4308      	orrs	r0, r1
 8024fb2:	f8a9 0000 	strh.w	r0, [r9]
 8024fb6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024fb8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024fba:	441a      	add	r2, r3
 8024fbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024fbe:	9225      	str	r2, [sp, #148]	; 0x94
 8024fc0:	f109 0902 	add.w	r9, r9, #2
 8024fc4:	441d      	add	r5, r3
 8024fc6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024fca:	e64d      	b.n	8024c68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8024fcc:	2800      	cmp	r0, #0
 8024fce:	f43f aeed 	beq.w	8024dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024fd2:	5c79      	ldrb	r1, [r7, r1]
 8024fd4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024fd8:	9109      	str	r1, [sp, #36]	; 0x24
 8024fda:	0e09      	lsrs	r1, r1, #24
 8024fdc:	9111      	str	r1, [sp, #68]	; 0x44
 8024fde:	e6e5      	b.n	8024dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024fe0:	b01b      	add	sp, #108	; 0x6c
 8024fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024fe6:	bf00      	nop
 8024fe8:	fffff800 	.word	0xfffff800

08024fec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8024fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024ff0:	b085      	sub	sp, #20
 8024ff2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8024ff6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8024ffa:	9103      	str	r1, [sp, #12]
 8024ffc:	fb00 7406 	mla	r4, r0, r6, r7
 8025000:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8025004:	2800      	cmp	r0, #0
 8025006:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802500a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802500e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025012:	9501      	str	r5, [sp, #4]
 8025014:	eb03 0904 	add.w	r9, r3, r4
 8025018:	f2c0 8150 	blt.w	80252bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802501c:	4583      	cmp	fp, r0
 802501e:	f340 814d 	ble.w	80252bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8025022:	2f00      	cmp	r7, #0
 8025024:	f2c0 8146 	blt.w	80252b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8025028:	42be      	cmp	r6, r7
 802502a:	f340 8143 	ble.w	80252b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802502e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8025032:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8025036:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802503a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802503e:	4355      	muls	r5, r2
 8025040:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025044:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025048:	fb0c f203 	mul.w	r2, ip, r3
 802504c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025050:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025054:	441d      	add	r5, r3
 8025056:	f102 0320 	add.w	r3, r2, #32
 802505a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802505e:	0a1b      	lsrs	r3, r3, #8
 8025060:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025064:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025068:	431c      	orrs	r4, r3
 802506a:	1c7b      	adds	r3, r7, #1
 802506c:	f100 812b 	bmi.w	80252c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025070:	429e      	cmp	r6, r3
 8025072:	f340 8128 	ble.w	80252c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025076:	2900      	cmp	r1, #0
 8025078:	f000 8128 	beq.w	80252cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802507c:	9a01      	ldr	r2, [sp, #4]
 802507e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025082:	8855      	ldrh	r5, [r2, #2]
 8025084:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025088:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802508c:	fb08 f802 	mul.w	r8, r8, r2
 8025090:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025094:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025098:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802509c:	435d      	muls	r5, r3
 802509e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80250a2:	44d0      	add	r8, sl
 80250a4:	f105 0a20 	add.w	sl, r5, #32
 80250a8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80250ac:	0a2d      	lsrs	r5, r5, #8
 80250ae:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80250b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80250b6:	432a      	orrs	r2, r5
 80250b8:	3001      	adds	r0, #1
 80250ba:	f100 810d 	bmi.w	80252d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80250be:	4583      	cmp	fp, r0
 80250c0:	f340 810a 	ble.w	80252d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80250c4:	f1be 0f00 	cmp.w	lr, #0
 80250c8:	f000 810b 	beq.w	80252e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80250cc:	2f00      	cmp	r7, #0
 80250ce:	f2c0 8100 	blt.w	80252d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80250d2:	42be      	cmp	r6, r7
 80250d4:	f340 80fd 	ble.w	80252d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80250d8:	9801      	ldr	r0, [sp, #4]
 80250da:	f819 5006 	ldrb.w	r5, [r9, r6]
 80250de:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80250e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80250e6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80250ea:	fb0a fa00 	mul.w	sl, sl, r0
 80250ee:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80250f2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80250f6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80250fa:	fb05 f808 	mul.w	r8, r5, r8
 80250fe:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025102:	4482      	add	sl, r0
 8025104:	f108 0020 	add.w	r0, r8, #32
 8025108:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802510c:	0a00      	lsrs	r0, r0, #8
 802510e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025112:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025116:	ea4b 0b00 	orr.w	fp, fp, r0
 802511a:	3701      	adds	r7, #1
 802511c:	f100 80e6 	bmi.w	80252ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025120:	42be      	cmp	r6, r7
 8025122:	f340 80e3 	ble.w	80252ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025126:	2900      	cmp	r1, #0
 8025128:	f000 80e3 	beq.w	80252f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802512c:	3601      	adds	r6, #1
 802512e:	9801      	ldr	r0, [sp, #4]
 8025130:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025134:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025138:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802513c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025140:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025144:	fb09 f906 	mul.w	r9, r9, r6
 8025148:	fb07 f800 	mul.w	r8, r7, r0
 802514c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025150:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025154:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025158:	44d1      	add	r9, sl
 802515a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802515e:	f108 0020 	add.w	r0, r8, #32
 8025162:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025166:	0a00      	lsrs	r0, r0, #8
 8025168:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802516c:	4330      	orrs	r0, r6
 802516e:	b28e      	uxth	r6, r1
 8025170:	fa1f f98e 	uxth.w	r9, lr
 8025174:	fb06 f809 	mul.w	r8, r6, r9
 8025178:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802517c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025180:	0136      	lsls	r6, r6, #4
 8025182:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025186:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802518a:	9601      	str	r6, [sp, #4]
 802518c:	ea4a 0404 	orr.w	r4, sl, r4
 8025190:	fa1f f689 	uxth.w	r6, r9
 8025194:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025198:	fb11 f90e 	smulbb	r9, r1, lr
 802519c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80251a0:	9602      	str	r6, [sp, #8]
 80251a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80251a6:	4626      	mov	r6, r4
 80251a8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80251ac:	f1ce 0410 	rsb	r4, lr, #16
 80251b0:	1a64      	subs	r4, r4, r1
 80251b2:	ea4a 0202 	orr.w	r2, sl, r2
 80251b6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80251ba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80251be:	434a      	muls	r2, r1
 80251c0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80251c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80251c8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80251cc:	fb04 2406 	mla	r4, r4, r6, r2
 80251d0:	ea4a 0000 	orr.w	r0, sl, r0
 80251d4:	fb09 4200 	mla	r2, r9, r0, r4
 80251d8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80251dc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80251e0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80251e4:	ea44 0b0b 	orr.w	fp, r4, fp
 80251e8:	9c01      	ldr	r4, [sp, #4]
 80251ea:	9e02      	ldr	r6, [sp, #8]
 80251ec:	9903      	ldr	r1, [sp, #12]
 80251ee:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80251f2:	1ba4      	subs	r4, r4, r6
 80251f4:	9e01      	ldr	r6, [sp, #4]
 80251f6:	8808      	ldrh	r0, [r1, #0]
 80251f8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80251fc:	eba6 0608 	sub.w	r6, r6, r8
 8025200:	b2b6      	uxth	r6, r6
 8025202:	b2a4      	uxth	r4, r4
 8025204:	4373      	muls	r3, r6
 8025206:	fb0c 3304 	mla	r3, ip, r4, r3
 802520a:	9c02      	ldr	r4, [sp, #8]
 802520c:	fb04 3505 	mla	r5, r4, r5, r3
 8025210:	fb08 5707 	mla	r7, r8, r7, r5
 8025214:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025218:	b289      	uxth	r1, r1
 802521a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802521e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8025222:	434f      	muls	r7, r1
 8025224:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025228:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802522c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025230:	1c7b      	adds	r3, r7, #1
 8025232:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025236:	ea42 0e0e 	orr.w	lr, r2, lr
 802523a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802523e:	fa1f f28e 	uxth.w	r2, lr
 8025242:	1203      	asrs	r3, r0, #8
 8025244:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8025248:	b2ff      	uxtb	r7, r7
 802524a:	1215      	asrs	r5, r2, #8
 802524c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025250:	fb13 f307 	smulbb	r3, r3, r7
 8025254:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025258:	fb05 3501 	mla	r5, r5, r1, r3
 802525c:	10c3      	asrs	r3, r0, #3
 802525e:	10d4      	asrs	r4, r2, #3
 8025260:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025264:	fb13 f307 	smulbb	r3, r3, r7
 8025268:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802526c:	fb04 3401 	mla	r4, r4, r1, r3
 8025270:	00c3      	lsls	r3, r0, #3
 8025272:	00d2      	lsls	r2, r2, #3
 8025274:	b2db      	uxtb	r3, r3
 8025276:	fb13 f307 	smulbb	r3, r3, r7
 802527a:	b2d2      	uxtb	r2, r2
 802527c:	fb02 3101 	mla	r1, r2, r1, r3
 8025280:	b2ad      	uxth	r5, r5
 8025282:	b289      	uxth	r1, r1
 8025284:	b2a4      	uxth	r4, r4
 8025286:	1c6b      	adds	r3, r5, #1
 8025288:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802528c:	1c62      	adds	r2, r4, #1
 802528e:	1c4b      	adds	r3, r1, #1
 8025290:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025294:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025298:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802529c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80252a0:	0964      	lsrs	r4, r4, #5
 80252a2:	432b      	orrs	r3, r5
 80252a4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80252a8:	9a03      	ldr	r2, [sp, #12]
 80252aa:	4323      	orrs	r3, r4
 80252ac:	8013      	strh	r3, [r2, #0]
 80252ae:	b005      	add	sp, #20
 80252b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80252b4:	f04f 0c00 	mov.w	ip, #0
 80252b8:	4664      	mov	r4, ip
 80252ba:	e6d6      	b.n	802506a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80252bc:	2300      	movs	r3, #0
 80252be:	469c      	mov	ip, r3
 80252c0:	461a      	mov	r2, r3
 80252c2:	461c      	mov	r4, r3
 80252c4:	e6f8      	b.n	80250b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80252c6:	2300      	movs	r3, #0
 80252c8:	461a      	mov	r2, r3
 80252ca:	e6f5      	b.n	80250b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80252cc:	460b      	mov	r3, r1
 80252ce:	460a      	mov	r2, r1
 80252d0:	e6f2      	b.n	80250b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80252d2:	2500      	movs	r5, #0
 80252d4:	46ab      	mov	fp, r5
 80252d6:	e720      	b.n	802511a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80252d8:	2700      	movs	r7, #0
 80252da:	463d      	mov	r5, r7
 80252dc:	4638      	mov	r0, r7
 80252de:	46bb      	mov	fp, r7
 80252e0:	e745      	b.n	802516e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252e2:	4677      	mov	r7, lr
 80252e4:	4675      	mov	r5, lr
 80252e6:	4670      	mov	r0, lr
 80252e8:	46f3      	mov	fp, lr
 80252ea:	e740      	b.n	802516e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252ec:	2700      	movs	r7, #0
 80252ee:	4638      	mov	r0, r7
 80252f0:	e73d      	b.n	802516e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252f2:	460f      	mov	r7, r1
 80252f4:	4608      	mov	r0, r1
 80252f6:	e73a      	b.n	802516e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080252f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80252f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252fc:	b097      	sub	sp, #92	; 0x5c
 80252fe:	9214      	str	r2, [sp, #80]	; 0x50
 8025300:	9308      	str	r3, [sp, #32]
 8025302:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025304:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025308:	9312      	str	r3, [sp, #72]	; 0x48
 802530a:	9111      	str	r1, [sp, #68]	; 0x44
 802530c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025310:	9015      	str	r0, [sp, #84]	; 0x54
 8025312:	6850      	ldr	r0, [r2, #4]
 8025314:	6812      	ldr	r2, [r2, #0]
 8025316:	fb00 1303 	mla	r3, r0, r3, r1
 802531a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802531e:	9309      	str	r3, [sp, #36]	; 0x24
 8025320:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025322:	681b      	ldr	r3, [r3, #0]
 8025324:	930b      	str	r3, [sp, #44]	; 0x2c
 8025326:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025328:	685b      	ldr	r3, [r3, #4]
 802532a:	930c      	str	r3, [sp, #48]	; 0x30
 802532c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8025330:	930a      	str	r3, [sp, #40]	; 0x28
 8025332:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025334:	2b00      	cmp	r3, #0
 8025336:	dc03      	bgt.n	8025340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025338:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802533a:	2b00      	cmp	r3, #0
 802533c:	f340 83cb 	ble.w	8025ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025340:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025342:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025346:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802534a:	1e48      	subs	r0, r1, #1
 802534c:	1e55      	subs	r5, r2, #1
 802534e:	9b08      	ldr	r3, [sp, #32]
 8025350:	2b00      	cmp	r3, #0
 8025352:	f340 81a3 	ble.w	802569c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8025356:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8025358:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802535a:	1436      	asrs	r6, r6, #16
 802535c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025360:	d406      	bmi.n	8025370 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025362:	4286      	cmp	r6, r0
 8025364:	da04      	bge.n	8025370 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025366:	2b00      	cmp	r3, #0
 8025368:	db02      	blt.n	8025370 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802536a:	42ab      	cmp	r3, r5
 802536c:	f2c0 8197 	blt.w	802569e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025370:	3601      	adds	r6, #1
 8025372:	f100 8184 	bmi.w	802567e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025376:	42b1      	cmp	r1, r6
 8025378:	f2c0 8181 	blt.w	802567e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802537c:	3301      	adds	r3, #1
 802537e:	f100 817e 	bmi.w	802567e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025382:	429a      	cmp	r2, r3
 8025384:	f2c0 817b 	blt.w	802567e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025388:	9b08      	ldr	r3, [sp, #32]
 802538a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802538c:	9313      	str	r3, [sp, #76]	; 0x4c
 802538e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025392:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025394:	2b00      	cmp	r3, #0
 8025396:	f340 81a4 	ble.w	80256e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802539a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802539c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802539e:	1418      	asrs	r0, r3, #16
 80253a0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80253a2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80253a6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80253a8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80253ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80253ae:	142d      	asrs	r5, r5, #16
 80253b0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80253b4:	f100 81f8 	bmi.w	80257a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253b8:	f102 3eff 	add.w	lr, r2, #4294967295
 80253bc:	4575      	cmp	r5, lr
 80253be:	f280 81f3 	bge.w	80257a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253c2:	2800      	cmp	r0, #0
 80253c4:	f2c0 81f0 	blt.w	80257a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253c8:	f103 3eff 	add.w	lr, r3, #4294967295
 80253cc:	4570      	cmp	r0, lr
 80253ce:	f280 81eb 	bge.w	80257a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80253d4:	b212      	sxth	r2, r2
 80253d6:	fb00 5002 	mla	r0, r0, r2, r5
 80253da:	fa1f fe81 	uxth.w	lr, r1
 80253de:	eb03 0a00 	add.w	sl, r3, r0
 80253e2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80253e6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80253ea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80253ee:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80253f2:	b29b      	uxth	r3, r3
 80253f4:	f1bc 0f00 	cmp.w	ip, #0
 80253f8:	f000 81b9 	beq.w	802576e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80253fc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025400:	940d      	str	r4, [sp, #52]	; 0x34
 8025402:	eb0a 0b02 	add.w	fp, sl, r2
 8025406:	fa1f fa8c 	uxth.w	sl, ip
 802540a:	fb0a fe0e 	mul.w	lr, sl, lr
 802540e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025412:	fa1f fa8a 	uxth.w	sl, sl
 8025416:	eba5 050e 	sub.w	r5, r5, lr
 802541a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802541e:	940e      	str	r4, [sp, #56]	; 0x38
 8025420:	eba3 030a 	sub.w	r3, r3, sl
 8025424:	b2ad      	uxth	r5, r5
 8025426:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025428:	b29b      	uxth	r3, r3
 802542a:	fb08 f505 	mul.w	r5, r8, r5
 802542e:	fb09 5303 	mla	r3, r9, r3, r5
 8025432:	fb0a 3304 	mla	r3, sl, r4, r3
 8025436:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025438:	fb0e 3304 	mla	r3, lr, r4, r3
 802543c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025440:	2b00      	cmp	r3, #0
 8025442:	f000 810f 	beq.w	8025664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025446:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025448:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802544c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025450:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025454:	f000 8190 	beq.w	8025778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8025458:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802545c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025460:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025464:	fb09 f000 	mul.w	r0, r9, r0
 8025468:	fb0a fe0e 	mul.w	lr, sl, lr
 802546c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025470:	f100 0b20 	add.w	fp, r0, #32
 8025474:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025478:	44ce      	add	lr, r9
 802547a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802547e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025482:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025486:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802548a:	ea4e 0909 	orr.w	r9, lr, r9
 802548e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025492:	8868      	ldrh	r0, [r5, #2]
 8025494:	d019      	beq.n	80254ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8025496:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802549a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802549e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80254a2:	fb08 f800 	mul.w	r8, r8, r0
 80254a6:	fb0a fe0e 	mul.w	lr, sl, lr
 80254aa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80254ae:	f108 0b20 	add.w	fp, r8, #32
 80254b2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80254b6:	4486      	add	lr, r0
 80254b8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80254bc:	0a00      	lsrs	r0, r0, #8
 80254be:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80254c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80254c6:	ea4e 0000 	orr.w	r0, lr, r0
 80254ca:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80254ce:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80254d2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80254d6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80254da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80254de:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80254e2:	ea4e 0909 	orr.w	r9, lr, r9
 80254e6:	ea4a 0000 	orr.w	r0, sl, r0
 80254ea:	f1bc 0f00 	cmp.w	ip, #0
 80254ee:	f000 8145 	beq.w	802577c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80254f2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80254f6:	3a01      	subs	r2, #1
 80254f8:	0052      	lsls	r2, r2, #1
 80254fa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80254fc:	3202      	adds	r2, #2
 80254fe:	2cff      	cmp	r4, #255	; 0xff
 8025500:	eb05 0e02 	add.w	lr, r5, r2
 8025504:	5aaa      	ldrh	r2, [r5, r2]
 8025506:	d018      	beq.n	802553a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8025508:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802550c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025510:	fb04 fa02 	mul.w	sl, r4, r2
 8025514:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025518:	fb08 f805 	mul.w	r8, r8, r5
 802551c:	f10a 0520 	add.w	r5, sl, #32
 8025520:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025524:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025528:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802552c:	4442      	add	r2, r8
 802552e:	0a2d      	lsrs	r5, r5, #8
 8025530:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025534:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025538:	432a      	orrs	r2, r5
 802553a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802553c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025540:	2cff      	cmp	r4, #255	; 0xff
 8025542:	d01a      	beq.n	802557a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8025544:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025548:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802554c:	fb04 fa05 	mul.w	sl, r4, r5
 8025550:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025554:	fb08 f80e 	mul.w	r8, r8, lr
 8025558:	f10a 0e20 	add.w	lr, sl, #32
 802555c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025560:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025564:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025568:	4445      	add	r5, r8
 802556a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802556e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025572:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025576:	ea45 050e 	orr.w	r5, r5, lr
 802557a:	fb1c fe01 	smulbb	lr, ip, r1
 802557e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025582:	f1cc 0810 	rsb	r8, ip, #16
 8025586:	eba8 0801 	sub.w	r8, r8, r1
 802558a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802558e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025592:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025596:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802559a:	4341      	muls	r1, r0
 802559c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80255a0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80255a4:	ea4a 0202 	orr.w	r2, sl, r2
 80255a8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80255ac:	fb09 1108 	mla	r1, r9, r8, r1
 80255b0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80255b4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80255b8:	fb0c 1102 	mla	r1, ip, r2, r1
 80255bc:	ea4b 0505 	orr.w	r5, fp, r5
 80255c0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80255c4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80255c8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80255cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255d0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80255d4:	ea42 0e0e 	orr.w	lr, r2, lr
 80255d8:	fa1f f28e 	uxth.w	r2, lr
 80255dc:	2bff      	cmp	r3, #255	; 0xff
 80255de:	d103      	bne.n	80255e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80255e0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80255e2:	29ff      	cmp	r1, #255	; 0xff
 80255e4:	f000 80de 	beq.w	80257a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80255e8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80255ea:	8838      	ldrh	r0, [r7, #0]
 80255ec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80255ee:	434b      	muls	r3, r1
 80255f0:	f103 0c01 	add.w	ip, r3, #1
 80255f4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80255f8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80255fc:	fa5f fc83 	uxtb.w	ip, r3
 8025600:	1203      	asrs	r3, r0, #8
 8025602:	1215      	asrs	r5, r2, #8
 8025604:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025608:	fb13 f30c 	smulbb	r3, r3, ip
 802560c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025610:	fb05 3501 	mla	r5, r5, r1, r3
 8025614:	10c3      	asrs	r3, r0, #3
 8025616:	10d1      	asrs	r1, r2, #3
 8025618:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802561c:	fb13 f30c 	smulbb	r3, r3, ip
 8025620:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025624:	fb01 3104 	mla	r1, r1, r4, r3
 8025628:	00c3      	lsls	r3, r0, #3
 802562a:	00d2      	lsls	r2, r2, #3
 802562c:	b2db      	uxtb	r3, r3
 802562e:	b2d2      	uxtb	r2, r2
 8025630:	fb13 f30c 	smulbb	r3, r3, ip
 8025634:	b2ad      	uxth	r5, r5
 8025636:	fb02 3304 	mla	r3, r2, r4, r3
 802563a:	b29a      	uxth	r2, r3
 802563c:	1c6b      	adds	r3, r5, #1
 802563e:	b289      	uxth	r1, r1
 8025640:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025644:	1c53      	adds	r3, r2, #1
 8025646:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802564a:	1c4a      	adds	r2, r1, #1
 802564c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025650:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025654:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025658:	0949      	lsrs	r1, r1, #5
 802565a:	432b      	orrs	r3, r5
 802565c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025660:	430b      	orrs	r3, r1
 8025662:	803b      	strh	r3, [r7, #0]
 8025664:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025666:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025668:	4413      	add	r3, r2
 802566a:	9321      	str	r3, [sp, #132]	; 0x84
 802566c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802566e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025670:	441a      	add	r2, r3
 8025672:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025674:	9222      	str	r2, [sp, #136]	; 0x88
 8025676:	3b01      	subs	r3, #1
 8025678:	3702      	adds	r7, #2
 802567a:	9313      	str	r3, [sp, #76]	; 0x4c
 802567c:	e689      	b.n	8025392 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802567e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025680:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8025682:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8025684:	4433      	add	r3, r6
 8025686:	9321      	str	r3, [sp, #132]	; 0x84
 8025688:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802568a:	441c      	add	r4, r3
 802568c:	9b08      	ldr	r3, [sp, #32]
 802568e:	9422      	str	r4, [sp, #136]	; 0x88
 8025690:	3b01      	subs	r3, #1
 8025692:	9308      	str	r3, [sp, #32]
 8025694:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025696:	3302      	adds	r3, #2
 8025698:	9309      	str	r3, [sp, #36]	; 0x24
 802569a:	e658      	b.n	802534e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802569c:	d028      	beq.n	80256f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802569e:	9b08      	ldr	r3, [sp, #32]
 80256a0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80256a2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80256a4:	3b01      	subs	r3, #1
 80256a6:	fb00 5003 	mla	r0, r0, r3, r5
 80256aa:	1400      	asrs	r0, r0, #16
 80256ac:	f53f ae6c 	bmi.w	8025388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256b0:	3901      	subs	r1, #1
 80256b2:	4288      	cmp	r0, r1
 80256b4:	f6bf ae68 	bge.w	8025388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256b8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80256ba:	9822      	ldr	r0, [sp, #136]	; 0x88
 80256bc:	fb01 0303 	mla	r3, r1, r3, r0
 80256c0:	141b      	asrs	r3, r3, #16
 80256c2:	f53f ae61 	bmi.w	8025388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256c6:	3a01      	subs	r2, #1
 80256c8:	4293      	cmp	r3, r2
 80256ca:	f6bf ae5d 	bge.w	8025388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256ce:	9b08      	ldr	r3, [sp, #32]
 80256d0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80256d4:	9313      	str	r3, [sp, #76]	; 0x4c
 80256d6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80256da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80256dc:	2b00      	cmp	r3, #0
 80256de:	f300 8082 	bgt.w	80257e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80256e2:	9b08      	ldr	r3, [sp, #32]
 80256e4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80256e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80256ea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80256ee:	9309      	str	r3, [sp, #36]	; 0x24
 80256f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80256f2:	2b00      	cmp	r3, #0
 80256f4:	f340 81ef 	ble.w	8025ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80256f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80256fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025700:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025704:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025706:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802570a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802570e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025712:	eef0 6a62 	vmov.f32	s13, s5
 8025716:	ee61 7a27 	vmul.f32	s15, s2, s15
 802571a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802571e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025722:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8025726:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802572a:	eef0 6a43 	vmov.f32	s13, s6
 802572e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025732:	ee12 2a90 	vmov	r2, s5
 8025736:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802573a:	fb92 f3f3 	sdiv	r3, r2, r3
 802573e:	ee13 2a10 	vmov	r2, s6
 8025742:	9323      	str	r3, [sp, #140]	; 0x8c
 8025744:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025746:	fb92 f3f3 	sdiv	r3, r2, r3
 802574a:	9324      	str	r3, [sp, #144]	; 0x90
 802574c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802574e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025750:	3b01      	subs	r3, #1
 8025752:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025756:	9311      	str	r3, [sp, #68]	; 0x44
 8025758:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802575a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802575e:	bf08      	it	eq
 8025760:	4613      	moveq	r3, r2
 8025762:	9308      	str	r3, [sp, #32]
 8025764:	eeb0 3a67 	vmov.f32	s6, s15
 8025768:	eef0 2a47 	vmov.f32	s5, s14
 802576c:	e5e1      	b.n	8025332 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802576e:	fb08 f505 	mul.w	r5, r8, r5
 8025772:	fb09 5303 	mla	r3, r9, r3, r5
 8025776:	e661      	b.n	802543c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8025778:	4681      	mov	r9, r0
 802577a:	e688      	b.n	802548e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802577c:	f1c1 0210 	rsb	r2, r1, #16
 8025780:	4341      	muls	r1, r0
 8025782:	fb09 1902 	mla	r9, r9, r2, r1
 8025786:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802578a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802578e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025792:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025796:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802579a:	ea42 0909 	orr.w	r9, r2, r9
 802579e:	fa1f f289 	uxth.w	r2, r9
 80257a2:	e71b      	b.n	80255dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80257a4:	803a      	strh	r2, [r7, #0]
 80257a6:	e75d      	b.n	8025664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257a8:	f115 0e01 	adds.w	lr, r5, #1
 80257ac:	f53f af5a 	bmi.w	8025664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257b0:	4572      	cmp	r2, lr
 80257b2:	f6ff af57 	blt.w	8025664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257b6:	f110 0e01 	adds.w	lr, r0, #1
 80257ba:	f53f af53 	bmi.w	8025664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257be:	4573      	cmp	r3, lr
 80257c0:	f6ff af50 	blt.w	8025664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257c4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80257c6:	9502      	str	r5, [sp, #8]
 80257c8:	b21b      	sxth	r3, r3
 80257ca:	b212      	sxth	r2, r2
 80257cc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80257d0:	9301      	str	r3, [sp, #4]
 80257d2:	9200      	str	r2, [sp, #0]
 80257d4:	e9cd c405 	strd	ip, r4, [sp, #20]
 80257d8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80257dc:	4639      	mov	r1, r7
 80257de:	9815      	ldr	r0, [sp, #84]	; 0x54
 80257e0:	f7ff fc04 	bl	8024fec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80257e4:	e73e      	b.n	8025664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80257ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80257ee:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80257f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80257f8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80257fa:	141f      	asrs	r7, r3, #16
 80257fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257fe:	141b      	asrs	r3, r3, #16
 8025800:	fb01 3707 	mla	r7, r1, r7, r3
 8025804:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025806:	fa1f fc82 	uxth.w	ip, r2
 802580a:	eb03 0a07 	add.w	sl, r3, r7
 802580e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8025812:	f813 9007 	ldrb.w	r9, [r3, r7]
 8025816:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802581a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802581e:	b29b      	uxth	r3, r3
 8025820:	2d00      	cmp	r5, #0
 8025822:	f000 813d 	beq.w	8025aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8025826:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802582a:	940f      	str	r4, [sp, #60]	; 0x3c
 802582c:	eb0a 0b01 	add.w	fp, sl, r1
 8025830:	fa1f fa85 	uxth.w	sl, r5
 8025834:	fb0a fc0c 	mul.w	ip, sl, ip
 8025838:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802583c:	fa1f fa8a 	uxth.w	sl, sl
 8025840:	eba0 000c 	sub.w	r0, r0, ip
 8025844:	eba3 030a 	sub.w	r3, r3, sl
 8025848:	b280      	uxth	r0, r0
 802584a:	fb08 f000 	mul.w	r0, r8, r0
 802584e:	b29b      	uxth	r3, r3
 8025850:	fb09 0303 	mla	r3, r9, r3, r0
 8025854:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025856:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802585a:	9410      	str	r4, [sp, #64]	; 0x40
 802585c:	fb0a 3300 	mla	r3, sl, r0, r3
 8025860:	fb0c 3304 	mla	r3, ip, r4, r3
 8025864:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025868:	2b00      	cmp	r3, #0
 802586a:	f000 810b 	beq.w	8025a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802586e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8025870:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025872:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025876:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802587a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802587e:	f000 8114 	beq.w	8025aaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8025882:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025886:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802588a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802588e:	fb09 f707 	mul.w	r7, r9, r7
 8025892:	fb0a fc0c 	mul.w	ip, sl, ip
 8025896:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802589a:	f107 0b20 	add.w	fp, r7, #32
 802589e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80258a2:	44cc      	add	ip, r9
 80258a4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80258a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80258ac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80258b0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80258b4:	ea4c 0909 	orr.w	r9, ip, r9
 80258b8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80258bc:	8847      	ldrh	r7, [r0, #2]
 80258be:	d019      	beq.n	80258f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80258c0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80258c4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80258c8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80258cc:	fb08 f807 	mul.w	r8, r8, r7
 80258d0:	fb0a fc0c 	mul.w	ip, sl, ip
 80258d4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80258d8:	f108 0b20 	add.w	fp, r8, #32
 80258dc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80258e0:	44bc      	add	ip, r7
 80258e2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80258e6:	0a3f      	lsrs	r7, r7, #8
 80258e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80258ec:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80258f0:	ea4c 0707 	orr.w	r7, ip, r7
 80258f4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80258f8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80258fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8025900:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025904:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025908:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802590c:	ea4c 0909 	orr.w	r9, ip, r9
 8025910:	ea4a 0707 	orr.w	r7, sl, r7
 8025914:	2d00      	cmp	r5, #0
 8025916:	f000 80ca 	beq.w	8025aae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802591a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802591e:	3901      	subs	r1, #1
 8025920:	0049      	lsls	r1, r1, #1
 8025922:	3102      	adds	r1, #2
 8025924:	eb00 0c01 	add.w	ip, r0, r1
 8025928:	5a41      	ldrh	r1, [r0, r1]
 802592a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802592c:	28ff      	cmp	r0, #255	; 0xff
 802592e:	d019      	beq.n	8025964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025930:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025932:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025936:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802593a:	fb04 fa01 	mul.w	sl, r4, r1
 802593e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025942:	fb08 f800 	mul.w	r8, r8, r0
 8025946:	f10a 0020 	add.w	r0, sl, #32
 802594a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802594e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025952:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025956:	4441      	add	r1, r8
 8025958:	0a00      	lsrs	r0, r0, #8
 802595a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802595e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025962:	4301      	orrs	r1, r0
 8025964:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025966:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802596a:	2cff      	cmp	r4, #255	; 0xff
 802596c:	d01a      	beq.n	80259a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802596e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8025972:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025976:	fb04 fa00 	mul.w	sl, r4, r0
 802597a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802597e:	fb08 f80c 	mul.w	r8, r8, ip
 8025982:	f10a 0c20 	add.w	ip, sl, #32
 8025986:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802598a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802598e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025992:	4440      	add	r0, r8
 8025994:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025998:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802599c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80259a0:	ea40 000c 	orr.w	r0, r0, ip
 80259a4:	fb15 fc02 	smulbb	ip, r5, r2
 80259a8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80259ac:	f1c5 0810 	rsb	r8, r5, #16
 80259b0:	eba8 0802 	sub.w	r8, r8, r2
 80259b4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80259b8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80259bc:	437a      	muls	r2, r7
 80259be:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80259c2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80259c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80259ca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80259ce:	fb09 2208 	mla	r2, r9, r8, r2
 80259d2:	ea4a 0101 	orr.w	r1, sl, r1
 80259d6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80259da:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80259de:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80259e2:	fb05 2201 	mla	r2, r5, r1, r2
 80259e6:	ea4b 0000 	orr.w	r0, fp, r0
 80259ea:	fb0c 2200 	mla	r2, ip, r0, r2
 80259ee:	0d57      	lsrs	r7, r2, #21
 80259f0:	0952      	lsrs	r2, r2, #5
 80259f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80259f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80259fa:	433a      	orrs	r2, r7
 80259fc:	2bff      	cmp	r3, #255	; 0xff
 80259fe:	b292      	uxth	r2, r2
 8025a00:	d102      	bne.n	8025a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8025a02:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025a04:	29ff      	cmp	r1, #255	; 0xff
 8025a06:	d063      	beq.n	8025ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8025a08:	980a      	ldr	r0, [sp, #40]	; 0x28
 8025a0a:	f8be 1000 	ldrh.w	r1, [lr]
 8025a0e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025a10:	4343      	muls	r3, r0
 8025a12:	1c58      	adds	r0, r3, #1
 8025a14:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8025a18:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8025a1c:	1208      	asrs	r0, r1, #8
 8025a1e:	b2db      	uxtb	r3, r3
 8025a20:	1215      	asrs	r5, r2, #8
 8025a22:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025a26:	fb10 f003 	smulbb	r0, r0, r3
 8025a2a:	10cf      	asrs	r7, r1, #3
 8025a2c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025a30:	00c9      	lsls	r1, r1, #3
 8025a32:	fb05 0504 	mla	r5, r5, r4, r0
 8025a36:	b2c9      	uxtb	r1, r1
 8025a38:	10d0      	asrs	r0, r2, #3
 8025a3a:	00d2      	lsls	r2, r2, #3
 8025a3c:	fb11 f103 	smulbb	r1, r1, r3
 8025a40:	b2d2      	uxtb	r2, r2
 8025a42:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8025a46:	fb02 1204 	mla	r2, r2, r4, r1
 8025a4a:	fb17 f703 	smulbb	r7, r7, r3
 8025a4e:	b2ad      	uxth	r5, r5
 8025a50:	b292      	uxth	r2, r2
 8025a52:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a56:	fb00 7004 	mla	r0, r0, r4, r7
 8025a5a:	1c6b      	adds	r3, r5, #1
 8025a5c:	1c57      	adds	r7, r2, #1
 8025a5e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025a62:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025a66:	b280      	uxth	r0, r0
 8025a68:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025a6c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025a70:	433d      	orrs	r5, r7
 8025a72:	1c47      	adds	r7, r0, #1
 8025a74:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025a78:	097f      	lsrs	r7, r7, #5
 8025a7a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025a7e:	433d      	orrs	r5, r7
 8025a80:	f8ae 5000 	strh.w	r5, [lr]
 8025a84:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025a86:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025a88:	4413      	add	r3, r2
 8025a8a:	9321      	str	r3, [sp, #132]	; 0x84
 8025a8c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025a8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a90:	441a      	add	r2, r3
 8025a92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025a94:	9222      	str	r2, [sp, #136]	; 0x88
 8025a96:	3b01      	subs	r3, #1
 8025a98:	f10e 0e02 	add.w	lr, lr, #2
 8025a9c:	9313      	str	r3, [sp, #76]	; 0x4c
 8025a9e:	e61c      	b.n	80256da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8025aa0:	fb08 f000 	mul.w	r0, r8, r0
 8025aa4:	fb09 0303 	mla	r3, r9, r3, r0
 8025aa8:	e6dc      	b.n	8025864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8025aaa:	46b9      	mov	r9, r7
 8025aac:	e704      	b.n	80258b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8025aae:	f1c2 0110 	rsb	r1, r2, #16
 8025ab2:	437a      	muls	r2, r7
 8025ab4:	fb09 2901 	mla	r9, r9, r1, r2
 8025ab8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025abc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025ac0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025ac4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ac8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025acc:	4302      	orrs	r2, r0
 8025ace:	e795      	b.n	80259fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8025ad0:	f8ae 2000 	strh.w	r2, [lr]
 8025ad4:	e7d6      	b.n	8025a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025ad6:	b017      	add	sp, #92	; 0x5c
 8025ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ae0:	b085      	sub	sp, #20
 8025ae2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025ae6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025aea:	9103      	str	r1, [sp, #12]
 8025aec:	fb00 7406 	mla	r4, r0, r6, r7
 8025af0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8025af4:	2800      	cmp	r0, #0
 8025af6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8025afa:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8025afe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025b02:	9501      	str	r5, [sp, #4]
 8025b04:	eb02 0904 	add.w	r9, r2, r4
 8025b08:	f2c0 8141 	blt.w	8025d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025b0c:	4583      	cmp	fp, r0
 8025b0e:	f340 813e 	ble.w	8025d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025b12:	2f00      	cmp	r7, #0
 8025b14:	f2c0 8137 	blt.w	8025d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025b18:	42be      	cmp	r6, r7
 8025b1a:	f340 8134 	ble.w	8025d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025b1e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025b22:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025b26:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025b2a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8025b2e:	4355      	muls	r5, r2
 8025b30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025b34:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025b38:	fb0c f203 	mul.w	r2, ip, r3
 8025b3c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025b40:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025b44:	441d      	add	r5, r3
 8025b46:	f102 0320 	add.w	r3, r2, #32
 8025b4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025b4e:	0a1b      	lsrs	r3, r3, #8
 8025b50:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025b54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025b58:	431c      	orrs	r4, r3
 8025b5a:	1c7b      	adds	r3, r7, #1
 8025b5c:	f100 811c 	bmi.w	8025d98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025b60:	429e      	cmp	r6, r3
 8025b62:	f340 8119 	ble.w	8025d98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025b66:	2900      	cmp	r1, #0
 8025b68:	f000 8119 	beq.w	8025d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8025b6c:	9a01      	ldr	r2, [sp, #4]
 8025b6e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025b72:	8855      	ldrh	r5, [r2, #2]
 8025b74:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025b78:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025b7c:	fb08 f802 	mul.w	r8, r8, r2
 8025b80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b84:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025b88:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025b8c:	435d      	muls	r5, r3
 8025b8e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025b92:	44d0      	add	r8, sl
 8025b94:	f105 0a20 	add.w	sl, r5, #32
 8025b98:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025b9c:	0a2d      	lsrs	r5, r5, #8
 8025b9e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025ba2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025ba6:	432a      	orrs	r2, r5
 8025ba8:	3001      	adds	r0, #1
 8025baa:	f100 80fe 	bmi.w	8025daa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025bae:	4583      	cmp	fp, r0
 8025bb0:	f340 80fb 	ble.w	8025daa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025bb4:	f1be 0f00 	cmp.w	lr, #0
 8025bb8:	f000 80fc 	beq.w	8025db4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8025bbc:	2f00      	cmp	r7, #0
 8025bbe:	f2c0 80f1 	blt.w	8025da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025bc2:	42be      	cmp	r6, r7
 8025bc4:	f340 80ee 	ble.w	8025da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025bc8:	9801      	ldr	r0, [sp, #4]
 8025bca:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025bce:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025bd2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025bd6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025bda:	fb0a fa00 	mul.w	sl, sl, r0
 8025bde:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025be2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025be6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025bea:	fb05 f808 	mul.w	r8, r5, r8
 8025bee:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025bf2:	4482      	add	sl, r0
 8025bf4:	f108 0020 	add.w	r0, r8, #32
 8025bf8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025bfc:	0a00      	lsrs	r0, r0, #8
 8025bfe:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025c02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c06:	ea4b 0b00 	orr.w	fp, fp, r0
 8025c0a:	3701      	adds	r7, #1
 8025c0c:	f100 80d7 	bmi.w	8025dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025c10:	42be      	cmp	r6, r7
 8025c12:	f340 80d4 	ble.w	8025dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025c16:	2900      	cmp	r1, #0
 8025c18:	f000 80d4 	beq.w	8025dc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8025c1c:	3601      	adds	r6, #1
 8025c1e:	9801      	ldr	r0, [sp, #4]
 8025c20:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025c24:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025c28:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025c2c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025c30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c34:	fb09 f906 	mul.w	r9, r9, r6
 8025c38:	fb07 f800 	mul.w	r8, r7, r0
 8025c3c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025c40:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025c44:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025c48:	44d1      	add	r9, sl
 8025c4a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025c4e:	f108 0020 	add.w	r0, r8, #32
 8025c52:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025c56:	0a00      	lsrs	r0, r0, #8
 8025c58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c5c:	4330      	orrs	r0, r6
 8025c5e:	b28e      	uxth	r6, r1
 8025c60:	fa1f f98e 	uxth.w	r9, lr
 8025c64:	fb06 f809 	mul.w	r8, r6, r9
 8025c68:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025c6c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025c70:	0136      	lsls	r6, r6, #4
 8025c72:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c76:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025c7a:	9601      	str	r6, [sp, #4]
 8025c7c:	ea4a 0404 	orr.w	r4, sl, r4
 8025c80:	fa1f f689 	uxth.w	r6, r9
 8025c84:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025c88:	fb11 f90e 	smulbb	r9, r1, lr
 8025c8c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025c90:	9602      	str	r6, [sp, #8]
 8025c92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c96:	4626      	mov	r6, r4
 8025c98:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025c9c:	f1ce 0410 	rsb	r4, lr, #16
 8025ca0:	1a64      	subs	r4, r4, r1
 8025ca2:	ea4a 0202 	orr.w	r2, sl, r2
 8025ca6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025caa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025cae:	434a      	muls	r2, r1
 8025cb0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025cb4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025cb8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025cbc:	fb04 2406 	mla	r4, r4, r6, r2
 8025cc0:	ea4a 0000 	orr.w	r0, sl, r0
 8025cc4:	fb09 4200 	mla	r2, r9, r0, r4
 8025cc8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025ccc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025cd0:	9801      	ldr	r0, [sp, #4]
 8025cd2:	9903      	ldr	r1, [sp, #12]
 8025cd4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025cd8:	ea44 0b0b 	orr.w	fp, r4, fp
 8025cdc:	9c02      	ldr	r4, [sp, #8]
 8025cde:	8809      	ldrh	r1, [r1, #0]
 8025ce0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025ce4:	1b00      	subs	r0, r0, r4
 8025ce6:	9c01      	ldr	r4, [sp, #4]
 8025ce8:	eba4 0608 	sub.w	r6, r4, r8
 8025cec:	b2b6      	uxth	r6, r6
 8025cee:	b280      	uxth	r0, r0
 8025cf0:	4373      	muls	r3, r6
 8025cf2:	fb0c 3300 	mla	r3, ip, r0, r3
 8025cf6:	9802      	ldr	r0, [sp, #8]
 8025cf8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025cfc:	fb00 3505 	mla	r5, r0, r5, r3
 8025d00:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025d04:	fb08 5707 	mla	r7, r8, r7, r5
 8025d08:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025d0c:	120b      	asrs	r3, r1, #8
 8025d0e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025d12:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025d16:	b2ff      	uxtb	r7, r7
 8025d18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025d1c:	10c8      	asrs	r0, r1, #3
 8025d1e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025d22:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025d26:	00c9      	lsls	r1, r1, #3
 8025d28:	437b      	muls	r3, r7
 8025d2a:	ea42 0e0e 	orr.w	lr, r2, lr
 8025d2e:	b2c9      	uxtb	r1, r1
 8025d30:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025d34:	fa1f f28e 	uxth.w	r2, lr
 8025d38:	4378      	muls	r0, r7
 8025d3a:	434f      	muls	r7, r1
 8025d3c:	1c59      	adds	r1, r3, #1
 8025d3e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025d42:	1213      	asrs	r3, r2, #8
 8025d44:	f023 0307 	bic.w	r3, r3, #7
 8025d48:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025d4c:	1c41      	adds	r1, r0, #1
 8025d4e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025d52:	10d1      	asrs	r1, r2, #3
 8025d54:	f021 0103 	bic.w	r1, r1, #3
 8025d58:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025d5c:	021b      	lsls	r3, r3, #8
 8025d5e:	00c9      	lsls	r1, r1, #3
 8025d60:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025d64:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025d68:	430b      	orrs	r3, r1
 8025d6a:	1c79      	adds	r1, r7, #1
 8025d6c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8025d70:	00d2      	lsls	r2, r2, #3
 8025d72:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8025d76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025d7a:	431a      	orrs	r2, r3
 8025d7c:	9b03      	ldr	r3, [sp, #12]
 8025d7e:	801a      	strh	r2, [r3, #0]
 8025d80:	b005      	add	sp, #20
 8025d82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d86:	f04f 0c00 	mov.w	ip, #0
 8025d8a:	4664      	mov	r4, ip
 8025d8c:	e6e5      	b.n	8025b5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8025d8e:	2300      	movs	r3, #0
 8025d90:	469c      	mov	ip, r3
 8025d92:	461a      	mov	r2, r3
 8025d94:	461c      	mov	r4, r3
 8025d96:	e707      	b.n	8025ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d98:	2300      	movs	r3, #0
 8025d9a:	461a      	mov	r2, r3
 8025d9c:	e704      	b.n	8025ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d9e:	460b      	mov	r3, r1
 8025da0:	460a      	mov	r2, r1
 8025da2:	e701      	b.n	8025ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025da4:	2500      	movs	r5, #0
 8025da6:	46ab      	mov	fp, r5
 8025da8:	e72f      	b.n	8025c0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8025daa:	2700      	movs	r7, #0
 8025dac:	463d      	mov	r5, r7
 8025dae:	4638      	mov	r0, r7
 8025db0:	46bb      	mov	fp, r7
 8025db2:	e754      	b.n	8025c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025db4:	4677      	mov	r7, lr
 8025db6:	4675      	mov	r5, lr
 8025db8:	4670      	mov	r0, lr
 8025dba:	46f3      	mov	fp, lr
 8025dbc:	e74f      	b.n	8025c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025dbe:	2700      	movs	r7, #0
 8025dc0:	4638      	mov	r0, r7
 8025dc2:	e74c      	b.n	8025c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025dc4:	460f      	mov	r7, r1
 8025dc6:	4608      	mov	r0, r1
 8025dc8:	e749      	b.n	8025c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08025dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025dd0:	b093      	sub	sp, #76	; 0x4c
 8025dd2:	9210      	str	r2, [sp, #64]	; 0x40
 8025dd4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025dd6:	910e      	str	r1, [sp, #56]	; 0x38
 8025dd8:	9306      	str	r3, [sp, #24]
 8025dda:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025dde:	9011      	str	r0, [sp, #68]	; 0x44
 8025de0:	6850      	ldr	r0, [r2, #4]
 8025de2:	6812      	ldr	r2, [r2, #0]
 8025de4:	fb00 1303 	mla	r3, r0, r3, r1
 8025de8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025dec:	9307      	str	r3, [sp, #28]
 8025dee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025df0:	681b      	ldr	r3, [r3, #0]
 8025df2:	9308      	str	r3, [sp, #32]
 8025df4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025df6:	685b      	ldr	r3, [r3, #4]
 8025df8:	9309      	str	r3, [sp, #36]	; 0x24
 8025dfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025dfc:	2b00      	cmp	r3, #0
 8025dfe:	dc03      	bgt.n	8025e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8025e00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025e02:	2b00      	cmp	r3, #0
 8025e04:	f340 83b4 	ble.w	8026570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025e08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025e0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025e12:	1e48      	subs	r0, r1, #1
 8025e14:	1e55      	subs	r5, r2, #1
 8025e16:	9b06      	ldr	r3, [sp, #24]
 8025e18:	2b00      	cmp	r3, #0
 8025e1a:	f340 8163 	ble.w	80260e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8025e1e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025e20:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e22:	1436      	asrs	r6, r6, #16
 8025e24:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025e28:	d406      	bmi.n	8025e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025e2a:	4286      	cmp	r6, r0
 8025e2c:	da04      	bge.n	8025e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025e2e:	2b00      	cmp	r3, #0
 8025e30:	db02      	blt.n	8025e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025e32:	42ab      	cmp	r3, r5
 8025e34:	f2c0 8157 	blt.w	80260e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8025e38:	3601      	adds	r6, #1
 8025e3a:	f100 8144 	bmi.w	80260c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e3e:	42b1      	cmp	r1, r6
 8025e40:	f2c0 8141 	blt.w	80260c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e44:	3301      	adds	r3, #1
 8025e46:	f100 813e 	bmi.w	80260c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e4a:	429a      	cmp	r2, r3
 8025e4c:	f2c0 813b 	blt.w	80260c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e50:	9b06      	ldr	r3, [sp, #24]
 8025e52:	9f07      	ldr	r7, [sp, #28]
 8025e54:	930f      	str	r3, [sp, #60]	; 0x3c
 8025e56:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025e5a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025e5c:	2b00      	cmp	r3, #0
 8025e5e:	f340 8164 	ble.w	802612a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8025e62:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e64:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8025e66:	1418      	asrs	r0, r3, #16
 8025e68:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025e6a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025e6e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e70:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025e74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e76:	142d      	asrs	r5, r5, #16
 8025e78:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025e7c:	f100 81ee 	bmi.w	802625c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e80:	f102 3eff 	add.w	lr, r2, #4294967295
 8025e84:	4575      	cmp	r5, lr
 8025e86:	f280 81e9 	bge.w	802625c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e8a:	2800      	cmp	r0, #0
 8025e8c:	f2c0 81e6 	blt.w	802625c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e90:	f103 3eff 	add.w	lr, r3, #4294967295
 8025e94:	4570      	cmp	r0, lr
 8025e96:	f280 81e1 	bge.w	802625c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e9c:	b212      	sxth	r2, r2
 8025e9e:	fb00 5002 	mla	r0, r0, r2, r5
 8025ea2:	fa1f fe81 	uxth.w	lr, r1
 8025ea6:	eb03 0a00 	add.w	sl, r3, r0
 8025eaa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025eae:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025eb2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025eb6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025eba:	b29b      	uxth	r3, r3
 8025ebc:	f1bc 0f00 	cmp.w	ip, #0
 8025ec0:	f000 8179 	beq.w	80261b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025ec4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025ec8:	940a      	str	r4, [sp, #40]	; 0x28
 8025eca:	eb0a 0b02 	add.w	fp, sl, r2
 8025ece:	fa1f fa8c 	uxth.w	sl, ip
 8025ed2:	fb0a fe0e 	mul.w	lr, sl, lr
 8025ed6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025eda:	fa1f fa8a 	uxth.w	sl, sl
 8025ede:	eba5 050e 	sub.w	r5, r5, lr
 8025ee2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025ee6:	940b      	str	r4, [sp, #44]	; 0x2c
 8025ee8:	eba3 030a 	sub.w	r3, r3, sl
 8025eec:	b2ad      	uxth	r5, r5
 8025eee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025ef0:	b29b      	uxth	r3, r3
 8025ef2:	fb08 f505 	mul.w	r5, r8, r5
 8025ef6:	fb09 5303 	mla	r3, r9, r3, r5
 8025efa:	fb0a 3304 	mla	r3, sl, r4, r3
 8025efe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025f00:	fb0e 3304 	mla	r3, lr, r4, r3
 8025f04:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025f08:	2b00      	cmp	r3, #0
 8025f0a:	f000 80cf 	beq.w	80260ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025f0e:	9c08      	ldr	r4, [sp, #32]
 8025f10:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025f14:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025f18:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025f1c:	f000 8150 	beq.w	80261c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8025f20:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025f24:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025f28:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f2c:	fb09 f000 	mul.w	r0, r9, r0
 8025f30:	fb0a fe0e 	mul.w	lr, sl, lr
 8025f34:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025f38:	f100 0b20 	add.w	fp, r0, #32
 8025f3c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025f40:	44ce      	add	lr, r9
 8025f42:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025f46:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025f4a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025f4e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025f52:	ea4e 0909 	orr.w	r9, lr, r9
 8025f56:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025f5a:	8868      	ldrh	r0, [r5, #2]
 8025f5c:	d019      	beq.n	8025f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8025f5e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025f62:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025f66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f6a:	fb08 f800 	mul.w	r8, r8, r0
 8025f6e:	fb0a fe0e 	mul.w	lr, sl, lr
 8025f72:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025f76:	f108 0b20 	add.w	fp, r8, #32
 8025f7a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025f7e:	4486      	add	lr, r0
 8025f80:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025f84:	0a00      	lsrs	r0, r0, #8
 8025f86:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025f8a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f8e:	ea4e 0000 	orr.w	r0, lr, r0
 8025f92:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8025f96:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025f9a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025f9e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025fa2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025fa6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025faa:	ea4e 0909 	orr.w	r9, lr, r9
 8025fae:	ea4a 0000 	orr.w	r0, sl, r0
 8025fb2:	f1bc 0f00 	cmp.w	ip, #0
 8025fb6:	f000 8105 	beq.w	80261c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025fba:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025fbe:	3a01      	subs	r2, #1
 8025fc0:	0052      	lsls	r2, r2, #1
 8025fc2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025fc4:	3202      	adds	r2, #2
 8025fc6:	2cff      	cmp	r4, #255	; 0xff
 8025fc8:	eb05 0e02 	add.w	lr, r5, r2
 8025fcc:	5aaa      	ldrh	r2, [r5, r2]
 8025fce:	d018      	beq.n	8026002 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8025fd0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8025fd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025fd8:	fb04 fa02 	mul.w	sl, r4, r2
 8025fdc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025fe0:	fb08 f805 	mul.w	r8, r8, r5
 8025fe4:	f10a 0520 	add.w	r5, sl, #32
 8025fe8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025fec:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025ff0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025ff4:	4442      	add	r2, r8
 8025ff6:	0a2d      	lsrs	r5, r5, #8
 8025ff8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025ffc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026000:	432a      	orrs	r2, r5
 8026002:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8026004:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8026008:	2cff      	cmp	r4, #255	; 0xff
 802600a:	d01a      	beq.n	8026042 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802600c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8026010:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026014:	fb04 fa05 	mul.w	sl, r4, r5
 8026018:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802601c:	fb08 f80e 	mul.w	r8, r8, lr
 8026020:	f10a 0e20 	add.w	lr, sl, #32
 8026024:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8026028:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802602c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026030:	4445      	add	r5, r8
 8026032:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026036:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802603a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802603e:	ea45 050e 	orr.w	r5, r5, lr
 8026042:	fb1c fe01 	smulbb	lr, ip, r1
 8026046:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802604a:	f1cc 0810 	rsb	r8, ip, #16
 802604e:	eba8 0801 	sub.w	r8, r8, r1
 8026052:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026056:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802605a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802605e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8026062:	4341      	muls	r1, r0
 8026064:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026068:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802606c:	ea4a 0202 	orr.w	r2, sl, r2
 8026070:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8026074:	fb09 1108 	mla	r1, r9, r8, r1
 8026078:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802607c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026080:	fb0c 1102 	mla	r1, ip, r2, r1
 8026084:	ea4b 0505 	orr.w	r5, fp, r5
 8026088:	fb0e 1e05 	mla	lr, lr, r5, r1
 802608c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026090:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8026094:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026098:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802609c:	ea42 0e0e 	orr.w	lr, r2, lr
 80260a0:	fa1f f28e 	uxth.w	r2, lr
 80260a4:	2bff      	cmp	r3, #255	; 0xff
 80260a6:	f040 80a1 	bne.w	80261ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80260aa:	803a      	strh	r2, [r7, #0]
 80260ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80260ae:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80260b0:	4413      	add	r3, r2
 80260b2:	931d      	str	r3, [sp, #116]	; 0x74
 80260b4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80260b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80260b8:	441a      	add	r2, r3
 80260ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80260bc:	921e      	str	r2, [sp, #120]	; 0x78
 80260be:	3b01      	subs	r3, #1
 80260c0:	3702      	adds	r7, #2
 80260c2:	930f      	str	r3, [sp, #60]	; 0x3c
 80260c4:	e6c9      	b.n	8025e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80260c6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80260c8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80260ca:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80260cc:	4433      	add	r3, r6
 80260ce:	931d      	str	r3, [sp, #116]	; 0x74
 80260d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80260d2:	441c      	add	r4, r3
 80260d4:	9b06      	ldr	r3, [sp, #24]
 80260d6:	941e      	str	r4, [sp, #120]	; 0x78
 80260d8:	3b01      	subs	r3, #1
 80260da:	9306      	str	r3, [sp, #24]
 80260dc:	9b07      	ldr	r3, [sp, #28]
 80260de:	3302      	adds	r3, #2
 80260e0:	9307      	str	r3, [sp, #28]
 80260e2:	e698      	b.n	8025e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80260e4:	d028      	beq.n	8026138 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80260e6:	9b06      	ldr	r3, [sp, #24]
 80260e8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80260ea:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80260ec:	3b01      	subs	r3, #1
 80260ee:	fb00 5003 	mla	r0, r0, r3, r5
 80260f2:	1400      	asrs	r0, r0, #16
 80260f4:	f53f aeac 	bmi.w	8025e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260f8:	3901      	subs	r1, #1
 80260fa:	4288      	cmp	r0, r1
 80260fc:	f6bf aea8 	bge.w	8025e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8026100:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026102:	981e      	ldr	r0, [sp, #120]	; 0x78
 8026104:	fb01 0303 	mla	r3, r1, r3, r0
 8026108:	141b      	asrs	r3, r3, #16
 802610a:	f53f aea1 	bmi.w	8025e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802610e:	3a01      	subs	r2, #1
 8026110:	4293      	cmp	r3, r2
 8026112:	f6bf ae9d 	bge.w	8025e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8026116:	9b06      	ldr	r3, [sp, #24]
 8026118:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802611c:	930f      	str	r3, [sp, #60]	; 0x3c
 802611e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8026122:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026124:	2b00      	cmp	r3, #0
 8026126:	f300 80b6 	bgt.w	8026296 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802612a:	9b06      	ldr	r3, [sp, #24]
 802612c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8026130:	9b07      	ldr	r3, [sp, #28]
 8026132:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8026136:	9307      	str	r3, [sp, #28]
 8026138:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802613a:	2b00      	cmp	r3, #0
 802613c:	f340 8218 	ble.w	8026570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8026140:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026144:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026148:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802614c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802614e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026152:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026156:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802615a:	eef0 6a62 	vmov.f32	s13, s5
 802615e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026162:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026166:	ee77 2a62 	vsub.f32	s5, s14, s5
 802616a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802616e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026172:	eef0 6a43 	vmov.f32	s13, s6
 8026176:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802617a:	ee12 2a90 	vmov	r2, s5
 802617e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026182:	fb92 f3f3 	sdiv	r3, r2, r3
 8026186:	ee13 2a10 	vmov	r2, s6
 802618a:	931f      	str	r3, [sp, #124]	; 0x7c
 802618c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802618e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026192:	9320      	str	r3, [sp, #128]	; 0x80
 8026194:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026196:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026198:	3b01      	subs	r3, #1
 802619a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802619e:	930e      	str	r3, [sp, #56]	; 0x38
 80261a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80261a2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80261a6:	bf08      	it	eq
 80261a8:	4613      	moveq	r3, r2
 80261aa:	9306      	str	r3, [sp, #24]
 80261ac:	eeb0 3a67 	vmov.f32	s6, s15
 80261b0:	eef0 2a47 	vmov.f32	s5, s14
 80261b4:	e621      	b.n	8025dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80261b6:	fb08 f505 	mul.w	r5, r8, r5
 80261ba:	fb09 5303 	mla	r3, r9, r3, r5
 80261be:	e6a1      	b.n	8025f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80261c0:	4681      	mov	r9, r0
 80261c2:	e6c8      	b.n	8025f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80261c4:	f1c1 0210 	rsb	r2, r1, #16
 80261c8:	4341      	muls	r1, r0
 80261ca:	fb09 1902 	mla	r9, r9, r2, r1
 80261ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80261d2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80261d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80261da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80261de:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80261e2:	ea42 0909 	orr.w	r9, r2, r9
 80261e6:	fa1f f289 	uxth.w	r2, r9
 80261ea:	e75b      	b.n	80260a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80261ec:	f8b7 c000 	ldrh.w	ip, [r7]
 80261f0:	43db      	mvns	r3, r3
 80261f2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80261f6:	fa5f fe83 	uxtb.w	lr, r3
 80261fa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80261fe:	fb00 f00e 	mul.w	r0, r0, lr
 8026202:	1c41      	adds	r1, r0, #1
 8026204:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8026208:	1211      	asrs	r1, r2, #8
 802620a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802620e:	f021 0107 	bic.w	r1, r1, #7
 8026212:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026216:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802621a:	48d7      	ldr	r0, [pc, #860]	; (8026578 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802621c:	fb05 f50e 	mul.w	r5, r5, lr
 8026220:	b2c9      	uxtb	r1, r1
 8026222:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8026226:	1c69      	adds	r1, r5, #1
 8026228:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802622c:	10d1      	asrs	r1, r2, #3
 802622e:	f021 0103 	bic.w	r1, r1, #3
 8026232:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8026236:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802623a:	b2db      	uxtb	r3, r3
 802623c:	00c9      	lsls	r1, r1, #3
 802623e:	fb03 f30e 	mul.w	r3, r3, lr
 8026242:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026246:	4301      	orrs	r1, r0
 8026248:	1c58      	adds	r0, r3, #1
 802624a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802624e:	00d2      	lsls	r2, r2, #3
 8026250:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026254:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026258:	430a      	orrs	r2, r1
 802625a:	e726      	b.n	80260aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802625c:	f115 0e01 	adds.w	lr, r5, #1
 8026260:	f53f af24 	bmi.w	80260ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026264:	4572      	cmp	r2, lr
 8026266:	f6ff af21 	blt.w	80260ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802626a:	f110 0e01 	adds.w	lr, r0, #1
 802626e:	f53f af1d 	bmi.w	80260ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026272:	4573      	cmp	r3, lr
 8026274:	f6ff af1a 	blt.w	80260ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026278:	b21b      	sxth	r3, r3
 802627a:	b212      	sxth	r2, r2
 802627c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8026280:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8026284:	9301      	str	r3, [sp, #4]
 8026286:	9200      	str	r2, [sp, #0]
 8026288:	4639      	mov	r1, r7
 802628a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802628e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026290:	f7ff fc24 	bl	8025adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8026294:	e70a      	b.n	80260ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026296:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026298:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802629c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802629e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80262a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80262a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80262a8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80262aa:	141f      	asrs	r7, r3, #16
 80262ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80262ae:	141b      	asrs	r3, r3, #16
 80262b0:	fb01 3707 	mla	r7, r1, r7, r3
 80262b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80262b6:	fa1f fc82 	uxth.w	ip, r2
 80262ba:	eb03 0a07 	add.w	sl, r3, r7
 80262be:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80262c2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80262c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80262ca:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80262ce:	b29b      	uxth	r3, r3
 80262d0:	2d00      	cmp	r5, #0
 80262d2:	f000 80fe 	beq.w	80264d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80262d6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80262da:	940c      	str	r4, [sp, #48]	; 0x30
 80262dc:	eb0a 0b01 	add.w	fp, sl, r1
 80262e0:	fa1f fa85 	uxth.w	sl, r5
 80262e4:	fb0a fc0c 	mul.w	ip, sl, ip
 80262e8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80262ec:	fa1f fa8a 	uxth.w	sl, sl
 80262f0:	eba0 000c 	sub.w	r0, r0, ip
 80262f4:	eba3 030a 	sub.w	r3, r3, sl
 80262f8:	b280      	uxth	r0, r0
 80262fa:	fb08 f000 	mul.w	r0, r8, r0
 80262fe:	b29b      	uxth	r3, r3
 8026300:	fb09 0303 	mla	r3, r9, r3, r0
 8026304:	980c      	ldr	r0, [sp, #48]	; 0x30
 8026306:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802630a:	940d      	str	r4, [sp, #52]	; 0x34
 802630c:	fb0a 3300 	mla	r3, sl, r0, r3
 8026310:	fb0c 3304 	mla	r3, ip, r4, r3
 8026314:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026318:	2b00      	cmp	r3, #0
 802631a:	f000 80cc 	beq.w	80264b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802631e:	9808      	ldr	r0, [sp, #32]
 8026320:	9c08      	ldr	r4, [sp, #32]
 8026322:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026326:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802632a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802632e:	f000 80d5 	beq.w	80264dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8026332:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026336:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802633a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802633e:	fb09 f707 	mul.w	r7, r9, r7
 8026342:	fb0a fc0c 	mul.w	ip, sl, ip
 8026346:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802634a:	f107 0b20 	add.w	fp, r7, #32
 802634e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026352:	44cc      	add	ip, r9
 8026354:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026358:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802635c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026360:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026364:	ea4c 0909 	orr.w	r9, ip, r9
 8026368:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802636c:	8847      	ldrh	r7, [r0, #2]
 802636e:	d019      	beq.n	80263a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8026370:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026374:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026378:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802637c:	fb08 f807 	mul.w	r8, r8, r7
 8026380:	fb0a fc0c 	mul.w	ip, sl, ip
 8026384:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8026388:	f108 0b20 	add.w	fp, r8, #32
 802638c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026390:	44bc      	add	ip, r7
 8026392:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8026396:	0a3f      	lsrs	r7, r7, #8
 8026398:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802639c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80263a0:	ea4c 0707 	orr.w	r7, ip, r7
 80263a4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80263a8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80263ac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80263b0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80263b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80263b8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80263bc:	ea4c 0909 	orr.w	r9, ip, r9
 80263c0:	ea4a 0707 	orr.w	r7, sl, r7
 80263c4:	2d00      	cmp	r5, #0
 80263c6:	f000 808b 	beq.w	80264e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80263ca:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80263ce:	3901      	subs	r1, #1
 80263d0:	0049      	lsls	r1, r1, #1
 80263d2:	3102      	adds	r1, #2
 80263d4:	eb00 0c01 	add.w	ip, r0, r1
 80263d8:	5a41      	ldrh	r1, [r0, r1]
 80263da:	980c      	ldr	r0, [sp, #48]	; 0x30
 80263dc:	28ff      	cmp	r0, #255	; 0xff
 80263de:	d019      	beq.n	8026414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80263e0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80263e2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80263e6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80263ea:	fb04 fa01 	mul.w	sl, r4, r1
 80263ee:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80263f2:	fb08 f800 	mul.w	r8, r8, r0
 80263f6:	f10a 0020 	add.w	r0, sl, #32
 80263fa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80263fe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8026402:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026406:	4441      	add	r1, r8
 8026408:	0a00      	lsrs	r0, r0, #8
 802640a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802640e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026412:	4301      	orrs	r1, r0
 8026414:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8026416:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802641a:	2cff      	cmp	r4, #255	; 0xff
 802641c:	d01a      	beq.n	8026454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802641e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8026422:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026426:	fb04 fa00 	mul.w	sl, r4, r0
 802642a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802642e:	fb08 f80c 	mul.w	r8, r8, ip
 8026432:	f10a 0c20 	add.w	ip, sl, #32
 8026436:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802643a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802643e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026442:	4440      	add	r0, r8
 8026444:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026448:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802644c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026450:	ea40 000c 	orr.w	r0, r0, ip
 8026454:	fb15 fc02 	smulbb	ip, r5, r2
 8026458:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802645c:	f1c5 0810 	rsb	r8, r5, #16
 8026460:	eba8 0802 	sub.w	r8, r8, r2
 8026464:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026468:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802646c:	437a      	muls	r2, r7
 802646e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026472:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026476:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802647a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802647e:	fb09 2208 	mla	r2, r9, r8, r2
 8026482:	ea4a 0101 	orr.w	r1, sl, r1
 8026486:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802648a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802648e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026492:	fb05 2201 	mla	r2, r5, r1, r2
 8026496:	ea4b 0000 	orr.w	r0, fp, r0
 802649a:	fb0c 2200 	mla	r2, ip, r0, r2
 802649e:	0d57      	lsrs	r7, r2, #21
 80264a0:	0952      	lsrs	r2, r2, #5
 80264a2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80264a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80264aa:	433a      	orrs	r2, r7
 80264ac:	2bff      	cmp	r3, #255	; 0xff
 80264ae:	b292      	uxth	r2, r2
 80264b0:	d127      	bne.n	8026502 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80264b2:	f8ae 2000 	strh.w	r2, [lr]
 80264b6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80264b8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80264ba:	4413      	add	r3, r2
 80264bc:	931d      	str	r3, [sp, #116]	; 0x74
 80264be:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80264c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80264c2:	441a      	add	r2, r3
 80264c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80264c6:	921e      	str	r2, [sp, #120]	; 0x78
 80264c8:	3b01      	subs	r3, #1
 80264ca:	f10e 0e02 	add.w	lr, lr, #2
 80264ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80264d0:	e627      	b.n	8026122 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80264d2:	fb08 f000 	mul.w	r0, r8, r0
 80264d6:	fb09 0303 	mla	r3, r9, r3, r0
 80264da:	e71b      	b.n	8026314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80264dc:	46b9      	mov	r9, r7
 80264de:	e743      	b.n	8026368 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80264e0:	f1c2 0110 	rsb	r1, r2, #16
 80264e4:	437a      	muls	r2, r7
 80264e6:	fb09 2901 	mla	r9, r9, r1, r2
 80264ea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80264ee:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80264f2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80264f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80264fa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80264fe:	4302      	orrs	r2, r0
 8026500:	e7d4      	b.n	80264ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8026502:	f8be 7000 	ldrh.w	r7, [lr]
 8026506:	4c1c      	ldr	r4, [pc, #112]	; (8026578 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8026508:	43db      	mvns	r3, r3
 802650a:	1238      	asrs	r0, r7, #8
 802650c:	fa5f fc83 	uxtb.w	ip, r3
 8026510:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026514:	10fd      	asrs	r5, r7, #3
 8026516:	fb00 f00c 	mul.w	r0, r0, ip
 802651a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802651e:	fb05 f10c 	mul.w	r1, r5, ip
 8026522:	1c45      	adds	r5, r0, #1
 8026524:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026528:	1215      	asrs	r5, r2, #8
 802652a:	f025 0507 	bic.w	r5, r5, #7
 802652e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026532:	1c4d      	adds	r5, r1, #1
 8026534:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026538:	10d1      	asrs	r1, r2, #3
 802653a:	f021 0103 	bic.w	r1, r1, #3
 802653e:	00fb      	lsls	r3, r7, #3
 8026540:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026544:	b2db      	uxtb	r3, r3
 8026546:	b2c0      	uxtb	r0, r0
 8026548:	00c9      	lsls	r1, r1, #3
 802654a:	fb03 f30c 	mul.w	r3, r3, ip
 802654e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026552:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8026556:	4308      	orrs	r0, r1
 8026558:	1c59      	adds	r1, r3, #1
 802655a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802655e:	00d2      	lsls	r2, r2, #3
 8026560:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026564:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026568:	4318      	orrs	r0, r3
 802656a:	f8ae 0000 	strh.w	r0, [lr]
 802656e:	e7a2      	b.n	80264b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8026570:	b013      	add	sp, #76	; 0x4c
 8026572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026576:	bf00      	nop
 8026578:	fffff800 	.word	0xfffff800

0802657c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802657c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026580:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8026584:	fb05 4c03 	mla	ip, r5, r3, r4
 8026588:	2d00      	cmp	r5, #0
 802658a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802658e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8026592:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026596:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802659a:	8808      	ldrh	r0, [r1, #0]
 802659c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80265a0:	f2c0 80a7 	blt.w	80266f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80265a4:	45aa      	cmp	sl, r5
 80265a6:	f340 80a4 	ble.w	80266f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80265aa:	2c00      	cmp	r4, #0
 80265ac:	f2c0 809f 	blt.w	80266ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80265b0:	42a3      	cmp	r3, r4
 80265b2:	f340 809c 	ble.w	80266ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80265b6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80265ba:	1c62      	adds	r2, r4, #1
 80265bc:	f100 809c 	bmi.w	80266f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80265c0:	4293      	cmp	r3, r2
 80265c2:	f340 8099 	ble.w	80266f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80265c6:	f1b9 0f00 	cmp.w	r9, #0
 80265ca:	f000 8095 	beq.w	80266f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80265ce:	f8be c002 	ldrh.w	ip, [lr, #2]
 80265d2:	3501      	adds	r5, #1
 80265d4:	f100 8094 	bmi.w	8026700 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265d8:	45aa      	cmp	sl, r5
 80265da:	f340 8091 	ble.w	8026700 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265de:	2f00      	cmp	r7, #0
 80265e0:	f000 808e 	beq.w	8026700 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265e4:	2c00      	cmp	r4, #0
 80265e6:	f2c0 8089 	blt.w	80266fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80265ea:	42a3      	cmp	r3, r4
 80265ec:	f340 8086 	ble.w	80266fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80265f0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80265f4:	3401      	adds	r4, #1
 80265f6:	f100 8086 	bmi.w	8026706 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265fa:	42a3      	cmp	r3, r4
 80265fc:	f340 8083 	ble.w	8026706 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026600:	f1b9 0f00 	cmp.w	r9, #0
 8026604:	d07f      	beq.n	8026706 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026606:	3301      	adds	r3, #1
 8026608:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802660c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8026610:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026614:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8026618:	fb19 fe07 	smulbb	lr, r9, r7
 802661c:	ea44 0808 	orr.w	r8, r4, r8
 8026620:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8026624:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8026628:	f1c7 0210 	rsb	r2, r7, #16
 802662c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026630:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026634:	ea44 0c0c 	orr.w	ip, r4, ip
 8026638:	eba2 0209 	sub.w	r2, r2, r9
 802663c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8026640:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8026644:	fb04 f40c 	mul.w	r4, r4, ip
 8026648:	fb02 4808 	mla	r8, r2, r8, r4
 802664c:	041a      	lsls	r2, r3, #16
 802664e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026652:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026656:	4313      	orrs	r3, r2
 8026658:	042a      	lsls	r2, r5, #16
 802665a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802665e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026662:	fb0e 8303 	mla	r3, lr, r3, r8
 8026666:	432a      	orrs	r2, r5
 8026668:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802666c:	fb07 3202 	mla	r2, r7, r2, r3
 8026670:	0d53      	lsrs	r3, r2, #21
 8026672:	0952      	lsrs	r2, r2, #5
 8026674:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026678:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802667c:	431a      	orrs	r2, r3
 802667e:	b293      	uxth	r3, r2
 8026680:	b2b4      	uxth	r4, r6
 8026682:	1202      	asrs	r2, r0, #8
 8026684:	43f6      	mvns	r6, r6
 8026686:	b2f6      	uxtb	r6, r6
 8026688:	121d      	asrs	r5, r3, #8
 802668a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802668e:	fb12 f206 	smulbb	r2, r2, r6
 8026692:	10c7      	asrs	r7, r0, #3
 8026694:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026698:	00c0      	lsls	r0, r0, #3
 802669a:	fb05 2504 	mla	r5, r5, r4, r2
 802669e:	b2c0      	uxtb	r0, r0
 80266a0:	10da      	asrs	r2, r3, #3
 80266a2:	00db      	lsls	r3, r3, #3
 80266a4:	b2db      	uxtb	r3, r3
 80266a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80266aa:	fb10 f006 	smulbb	r0, r0, r6
 80266ae:	b2ad      	uxth	r5, r5
 80266b0:	fb03 0004 	mla	r0, r3, r4, r0
 80266b4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80266b8:	fb17 f706 	smulbb	r7, r7, r6
 80266bc:	b280      	uxth	r0, r0
 80266be:	1c6b      	adds	r3, r5, #1
 80266c0:	fb02 7204 	mla	r2, r2, r4, r7
 80266c4:	b292      	uxth	r2, r2
 80266c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80266ca:	1c43      	adds	r3, r0, #1
 80266cc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80266d0:	1c50      	adds	r0, r2, #1
 80266d2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80266d6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80266da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80266de:	0952      	lsrs	r2, r2, #5
 80266e0:	432b      	orrs	r3, r5
 80266e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80266e6:	4313      	orrs	r3, r2
 80266e8:	800b      	strh	r3, [r1, #0]
 80266ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80266ee:	4680      	mov	r8, r0
 80266f0:	e763      	b.n	80265ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80266f2:	4684      	mov	ip, r0
 80266f4:	4680      	mov	r8, r0
 80266f6:	e76c      	b.n	80265d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80266f8:	4684      	mov	ip, r0
 80266fa:	e76a      	b.n	80265d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80266fc:	4605      	mov	r5, r0
 80266fe:	e779      	b.n	80265f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8026700:	4603      	mov	r3, r0
 8026702:	4605      	mov	r5, r0
 8026704:	e782      	b.n	802660c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8026706:	4603      	mov	r3, r0
 8026708:	e780      	b.n	802660c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802670a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802670a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802670e:	b093      	sub	sp, #76	; 0x4c
 8026710:	461d      	mov	r5, r3
 8026712:	9210      	str	r2, [sp, #64]	; 0x40
 8026714:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026716:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802671a:	920b      	str	r2, [sp, #44]	; 0x2c
 802671c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8026720:	910a      	str	r1, [sp, #40]	; 0x28
 8026722:	6859      	ldr	r1, [r3, #4]
 8026724:	681b      	ldr	r3, [r3, #0]
 8026726:	9011      	str	r0, [sp, #68]	; 0x44
 8026728:	fb01 2707 	mla	r7, r1, r7, r2
 802672c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8026730:	9307      	str	r3, [sp, #28]
 8026732:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026734:	681b      	ldr	r3, [r3, #0]
 8026736:	9309      	str	r3, [sp, #36]	; 0x24
 8026738:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802673a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802673e:	43db      	mvns	r3, r3
 8026740:	b2db      	uxtb	r3, r3
 8026742:	9308      	str	r3, [sp, #32]
 8026744:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026746:	2b00      	cmp	r3, #0
 8026748:	dc03      	bgt.n	8026752 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802674a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802674c:	2b00      	cmp	r3, #0
 802674e:	f340 8203 	ble.w	8026b58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026752:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026754:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026758:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802675c:	1e48      	subs	r0, r1, #1
 802675e:	f102 3cff 	add.w	ip, r2, #4294967295
 8026762:	2d00      	cmp	r5, #0
 8026764:	f340 80da 	ble.w	802691c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8026768:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802676c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026770:	d406      	bmi.n	8026780 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026772:	4586      	cmp	lr, r0
 8026774:	da04      	bge.n	8026780 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026776:	2b00      	cmp	r3, #0
 8026778:	db02      	blt.n	8026780 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802677a:	4563      	cmp	r3, ip
 802677c:	f2c0 80cf 	blt.w	802691e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026780:	f11e 0e01 	adds.w	lr, lr, #1
 8026784:	f100 80c1 	bmi.w	802690a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026788:	4571      	cmp	r1, lr
 802678a:	f2c0 80be 	blt.w	802690a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802678e:	3301      	adds	r3, #1
 8026790:	f100 80bb 	bmi.w	802690a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026794:	429a      	cmp	r2, r3
 8026796:	f2c0 80b8 	blt.w	802690a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802679a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802679e:	46a9      	mov	r9, r5
 80267a0:	f1b9 0f00 	cmp.w	r9, #0
 80267a4:	f340 80d8 	ble.w	8026958 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80267a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80267aa:	1421      	asrs	r1, r4, #16
 80267ac:	ea4f 4026 	mov.w	r0, r6, asr #16
 80267b0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80267b4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80267b8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80267bc:	f100 8111 	bmi.w	80269e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267c0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80267c4:	4551      	cmp	r1, sl
 80267c6:	f280 810c 	bge.w	80269e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267ca:	2800      	cmp	r0, #0
 80267cc:	f2c0 8109 	blt.w	80269e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267d0:	f103 3aff 	add.w	sl, r3, #4294967295
 80267d4:	4550      	cmp	r0, sl
 80267d6:	f280 8104 	bge.w	80269e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267da:	fa0f f38e 	sxth.w	r3, lr
 80267de:	fb00 1103 	mla	r1, r0, r3, r1
 80267e2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80267e4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80267e8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80267ec:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80267f0:	f1bc 0f00 	cmp.w	ip, #0
 80267f4:	d007      	beq.n	8026806 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80267f6:	005b      	lsls	r3, r3, #1
 80267f8:	eb0a 0003 	add.w	r0, sl, r3
 80267fc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8026800:	930c      	str	r3, [sp, #48]	; 0x30
 8026802:	8843      	ldrh	r3, [r0, #2]
 8026804:	930d      	str	r3, [sp, #52]	; 0x34
 8026806:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802680a:	fb12 f30c 	smulbb	r3, r2, ip
 802680e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026812:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026816:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802681a:	10db      	asrs	r3, r3, #3
 802681c:	ea40 000e 	orr.w	r0, r0, lr
 8026820:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026824:	f1cc 0e10 	rsb	lr, ip, #16
 8026828:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802682c:	ebae 0e02 	sub.w	lr, lr, r2
 8026830:	ea4a 0101 	orr.w	r1, sl, r1
 8026834:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026838:	4351      	muls	r1, r2
 802683a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802683c:	9f08      	ldr	r7, [sp, #32]
 802683e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026842:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026846:	0410      	lsls	r0, r2, #16
 8026848:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802684c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026850:	4310      	orrs	r0, r2
 8026852:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026854:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026856:	0412      	lsls	r2, r2, #16
 8026858:	fb03 e000 	mla	r0, r3, r0, lr
 802685c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026860:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026864:	ea42 020e 	orr.w	r2, r2, lr
 8026868:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802686c:	fb03 0302 	mla	r3, r3, r2, r0
 8026870:	0d5a      	lsrs	r2, r3, #21
 8026872:	095b      	lsrs	r3, r3, #5
 8026874:	f8b8 0000 	ldrh.w	r0, [r8]
 8026878:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802687c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026880:	4313      	orrs	r3, r2
 8026882:	b29b      	uxth	r3, r3
 8026884:	1201      	asrs	r1, r0, #8
 8026886:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802688a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802688e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026892:	fb11 f107 	smulbb	r1, r1, r7
 8026896:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802689a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802689e:	00c0      	lsls	r0, r0, #3
 80268a0:	fb0c 1c02 	mla	ip, ip, r2, r1
 80268a4:	b2c0      	uxtb	r0, r0
 80268a6:	10d9      	asrs	r1, r3, #3
 80268a8:	00db      	lsls	r3, r3, #3
 80268aa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80268ae:	b2db      	uxtb	r3, r3
 80268b0:	fb10 f007 	smulbb	r0, r0, r7
 80268b4:	fa1f fc8c 	uxth.w	ip, ip
 80268b8:	fb03 0302 	mla	r3, r3, r2, r0
 80268bc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80268c0:	fb1e fe07 	smulbb	lr, lr, r7
 80268c4:	fb01 e102 	mla	r1, r1, r2, lr
 80268c8:	b29a      	uxth	r2, r3
 80268ca:	f10c 0301 	add.w	r3, ip, #1
 80268ce:	b289      	uxth	r1, r1
 80268d0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80268d4:	1c53      	adds	r3, r2, #1
 80268d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80268da:	1c4a      	adds	r2, r1, #1
 80268dc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80268e0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80268e4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80268e8:	0949      	lsrs	r1, r1, #5
 80268ea:	ea43 030c 	orr.w	r3, r3, ip
 80268ee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80268f2:	430b      	orrs	r3, r1
 80268f4:	f8a8 3000 	strh.w	r3, [r8]
 80268f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80268fa:	441c      	add	r4, r3
 80268fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80268fe:	f108 0802 	add.w	r8, r8, #2
 8026902:	441e      	add	r6, r3
 8026904:	f109 39ff 	add.w	r9, r9, #4294967295
 8026908:	e74a      	b.n	80267a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802690a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802690c:	441c      	add	r4, r3
 802690e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026910:	441e      	add	r6, r3
 8026912:	9b07      	ldr	r3, [sp, #28]
 8026914:	3302      	adds	r3, #2
 8026916:	3d01      	subs	r5, #1
 8026918:	9307      	str	r3, [sp, #28]
 802691a:	e722      	b.n	8026762 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802691c:	d022      	beq.n	8026964 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802691e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026920:	1e6b      	subs	r3, r5, #1
 8026922:	fb00 4003 	mla	r0, r0, r3, r4
 8026926:	1400      	asrs	r0, r0, #16
 8026928:	f53f af37 	bmi.w	802679a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802692c:	3901      	subs	r1, #1
 802692e:	4288      	cmp	r0, r1
 8026930:	f6bf af33 	bge.w	802679a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026934:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026936:	fb01 6303 	mla	r3, r1, r3, r6
 802693a:	141b      	asrs	r3, r3, #16
 802693c:	f53f af2d 	bmi.w	802679a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026940:	3a01      	subs	r2, #1
 8026942:	4293      	cmp	r3, r2
 8026944:	f6bf af29 	bge.w	802679a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026948:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802694c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8026950:	46a8      	mov	r8, r5
 8026952:	f1b8 0f00 	cmp.w	r8, #0
 8026956:	dc5e      	bgt.n	8026a16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026958:	9b07      	ldr	r3, [sp, #28]
 802695a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802695e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026962:	9307      	str	r3, [sp, #28]
 8026964:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026966:	2b00      	cmp	r3, #0
 8026968:	f340 80f6 	ble.w	8026b58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802696c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026970:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026974:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026978:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802697a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802697e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026982:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026986:	eef0 6a62 	vmov.f32	s13, s5
 802698a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802698e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026992:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026996:	ee16 4a90 	vmov	r4, s13
 802699a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802699e:	eef0 6a43 	vmov.f32	s13, s6
 80269a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80269a6:	ee12 2a90 	vmov	r2, s5
 80269aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80269ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80269b2:	ee13 2a10 	vmov	r2, s6
 80269b6:	931f      	str	r3, [sp, #124]	; 0x7c
 80269b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80269ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80269be:	9320      	str	r3, [sp, #128]	; 0x80
 80269c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80269c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80269c4:	3b01      	subs	r3, #1
 80269c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80269ca:	930a      	str	r3, [sp, #40]	; 0x28
 80269cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80269ce:	ee16 6a90 	vmov	r6, s13
 80269d2:	bf14      	ite	ne
 80269d4:	461d      	movne	r5, r3
 80269d6:	4615      	moveq	r5, r2
 80269d8:	eeb0 3a67 	vmov.f32	s6, s15
 80269dc:	eef0 2a47 	vmov.f32	s5, s14
 80269e0:	e6b0      	b.n	8026744 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80269e2:	f111 0a01 	adds.w	sl, r1, #1
 80269e6:	d487      	bmi.n	80268f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269e8:	45d6      	cmp	lr, sl
 80269ea:	db85      	blt.n	80268f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269ec:	f110 0a01 	adds.w	sl, r0, #1
 80269f0:	d482      	bmi.n	80268f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269f2:	4553      	cmp	r3, sl
 80269f4:	db80      	blt.n	80268f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269f6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80269f8:	9101      	str	r1, [sp, #4]
 80269fa:	b21b      	sxth	r3, r3
 80269fc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8026a00:	9300      	str	r3, [sp, #0]
 8026a02:	e9cd c704 	strd	ip, r7, [sp, #16]
 8026a06:	fa0f f38e 	sxth.w	r3, lr
 8026a0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026a0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026a0e:	4641      	mov	r1, r8
 8026a10:	f7ff fdb4 	bl	802657c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8026a14:	e770      	b.n	80268f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026a16:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026a18:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8026a1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026a1e:	1430      	asrs	r0, r6, #16
 8026a20:	1423      	asrs	r3, r4, #16
 8026a22:	fb01 3000 	mla	r0, r1, r0, r3
 8026a26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a28:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8026a2c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8026a30:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026a34:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026a38:	8858      	ldrh	r0, [r3, #2]
 8026a3a:	f1be 0f00 	cmp.w	lr, #0
 8026a3e:	d00b      	beq.n	8026a58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8026a40:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026a44:	3901      	subs	r1, #1
 8026a46:	0049      	lsls	r1, r1, #1
 8026a48:	3102      	adds	r1, #2
 8026a4a:	eb03 0b01 	add.w	fp, r3, r1
 8026a4e:	5a5b      	ldrh	r3, [r3, r1]
 8026a50:	930e      	str	r3, [sp, #56]	; 0x38
 8026a52:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026a56:	930f      	str	r3, [sp, #60]	; 0x3c
 8026a58:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8026a5c:	fb12 f30e 	smulbb	r3, r2, lr
 8026a60:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026a64:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026a68:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8026a6c:	10db      	asrs	r3, r3, #3
 8026a6e:	ea41 010c 	orr.w	r1, r1, ip
 8026a72:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026a76:	f1ce 0c10 	rsb	ip, lr, #16
 8026a7a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026a7e:	ebac 0c02 	sub.w	ip, ip, r2
 8026a82:	ea4b 0000 	orr.w	r0, fp, r0
 8026a86:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026a8a:	4350      	muls	r0, r2
 8026a8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026a8e:	9f08      	ldr	r7, [sp, #32]
 8026a90:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026a94:	fb0c 0c01 	mla	ip, ip, r1, r0
 8026a98:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026a9c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8026aa0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026aa2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8026aa4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026aa8:	0412      	lsls	r2, r2, #16
 8026aaa:	ea4b 0101 	orr.w	r1, fp, r1
 8026aae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026ab2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026ab6:	fb03 c101 	mla	r1, r3, r1, ip
 8026aba:	4302      	orrs	r2, r0
 8026abc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026ac0:	fb03 1202 	mla	r2, r3, r2, r1
 8026ac4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8026ac8:	0952      	lsrs	r2, r2, #5
 8026aca:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8026ace:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026ad2:	f8b9 2000 	ldrh.w	r2, [r9]
 8026ad6:	ea4b 0303 	orr.w	r3, fp, r3
 8026ada:	b29b      	uxth	r3, r3
 8026adc:	1211      	asrs	r1, r2, #8
 8026ade:	1218      	asrs	r0, r3, #8
 8026ae0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026ae4:	fb11 f107 	smulbb	r1, r1, r7
 8026ae8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8026aec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026af0:	00d2      	lsls	r2, r2, #3
 8026af2:	fb00 100a 	mla	r0, r0, sl, r1
 8026af6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8026afa:	10d9      	asrs	r1, r3, #3
 8026afc:	b2d2      	uxtb	r2, r2
 8026afe:	00db      	lsls	r3, r3, #3
 8026b00:	fb1c fc07 	smulbb	ip, ip, r7
 8026b04:	fb12 f207 	smulbb	r2, r2, r7
 8026b08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026b0c:	b2db      	uxtb	r3, r3
 8026b0e:	b280      	uxth	r0, r0
 8026b10:	fb01 c10a 	mla	r1, r1, sl, ip
 8026b14:	fb03 230a 	mla	r3, r3, sl, r2
 8026b18:	b29b      	uxth	r3, r3
 8026b1a:	b289      	uxth	r1, r1
 8026b1c:	1c42      	adds	r2, r0, #1
 8026b1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026b22:	f101 0c01 	add.w	ip, r1, #1
 8026b26:	1c5a      	adds	r2, r3, #1
 8026b28:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026b2c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026b30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026b32:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026b36:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026b3a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026b3e:	4310      	orrs	r0, r2
 8026b40:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026b44:	441c      	add	r4, r3
 8026b46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026b48:	ea40 000c 	orr.w	r0, r0, ip
 8026b4c:	f829 0b02 	strh.w	r0, [r9], #2
 8026b50:	441e      	add	r6, r3
 8026b52:	f108 38ff 	add.w	r8, r8, #4294967295
 8026b56:	e6fc      	b.n	8026952 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8026b58:	b013      	add	sp, #76	; 0x4c
 8026b5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026b5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8026b5e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8026b62:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8026b66:	fb0e 4703 	mla	r7, lr, r3, r4
 8026b6a:	f1be 0f00 	cmp.w	lr, #0
 8026b6e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8026b72:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8026b76:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8026b7a:	8808      	ldrh	r0, [r1, #0]
 8026b7c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8026b80:	db60      	blt.n	8026c44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026b82:	45f1      	cmp	r9, lr
 8026b84:	dd5e      	ble.n	8026c44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026b86:	2c00      	cmp	r4, #0
 8026b88:	db5a      	blt.n	8026c40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026b8a:	42a3      	cmp	r3, r4
 8026b8c:	dd58      	ble.n	8026c40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026b8e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8026b92:	1c62      	adds	r2, r4, #1
 8026b94:	d459      	bmi.n	8026c4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b96:	4293      	cmp	r3, r2
 8026b98:	dd57      	ble.n	8026c4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b9a:	2d00      	cmp	r5, #0
 8026b9c:	d055      	beq.n	8026c4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b9e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8026ba2:	f11e 0e01 	adds.w	lr, lr, #1
 8026ba6:	d454      	bmi.n	8026c52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026ba8:	45f1      	cmp	r9, lr
 8026baa:	dd52      	ble.n	8026c52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026bac:	2e00      	cmp	r6, #0
 8026bae:	d050      	beq.n	8026c52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026bb0:	2c00      	cmp	r4, #0
 8026bb2:	db4c      	blt.n	8026c4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026bb4:	42a3      	cmp	r3, r4
 8026bb6:	dd4a      	ble.n	8026c4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026bb8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8026bbc:	3401      	adds	r4, #1
 8026bbe:	d405      	bmi.n	8026bcc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026bc0:	42a3      	cmp	r3, r4
 8026bc2:	dd03      	ble.n	8026bcc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026bc4:	b115      	cbz	r5, 8026bcc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026bc6:	3301      	adds	r3, #1
 8026bc8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8026bcc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026bd0:	fb15 f406 	smulbb	r4, r5, r6
 8026bd4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026bd8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8026bdc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026be0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8026be4:	ea43 0c0c 	orr.w	ip, r3, ip
 8026be8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026bec:	f1c6 0310 	rsb	r3, r6, #16
 8026bf0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026bf4:	1b5b      	subs	r3, r3, r5
 8026bf6:	ea4e 0707 	orr.w	r7, lr, r7
 8026bfa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8026bfe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026c02:	437d      	muls	r5, r7
 8026c04:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026c08:	0403      	lsls	r3, r0, #16
 8026c0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026c0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026c12:	4318      	orrs	r0, r3
 8026c14:	0413      	lsls	r3, r2, #16
 8026c16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026c1a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026c1e:	4313      	orrs	r3, r2
 8026c20:	fb04 c000 	mla	r0, r4, r0, ip
 8026c24:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026c28:	fb06 0003 	mla	r0, r6, r3, r0
 8026c2c:	0d43      	lsrs	r3, r0, #21
 8026c2e:	0940      	lsrs	r0, r0, #5
 8026c30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026c34:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026c38:	4318      	orrs	r0, r3
 8026c3a:	8008      	strh	r0, [r1, #0]
 8026c3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026c40:	4684      	mov	ip, r0
 8026c42:	e7a6      	b.n	8026b92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026c44:	4607      	mov	r7, r0
 8026c46:	4684      	mov	ip, r0
 8026c48:	e7ab      	b.n	8026ba2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026c4a:	4607      	mov	r7, r0
 8026c4c:	e7a9      	b.n	8026ba2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026c4e:	4602      	mov	r2, r0
 8026c50:	e7b4      	b.n	8026bbc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026c52:	4602      	mov	r2, r0
 8026c54:	e7ba      	b.n	8026bcc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026c56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026c56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026c5a:	b08f      	sub	sp, #60	; 0x3c
 8026c5c:	461d      	mov	r5, r3
 8026c5e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026c60:	920c      	str	r2, [sp, #48]	; 0x30
 8026c62:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8026c66:	9107      	str	r1, [sp, #28]
 8026c68:	6859      	ldr	r1, [r3, #4]
 8026c6a:	681b      	ldr	r3, [r3, #0]
 8026c6c:	900d      	str	r0, [sp, #52]	; 0x34
 8026c6e:	fb01 2707 	mla	r7, r1, r7, r2
 8026c72:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026c76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c78:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8026c7c:	f8d3 8000 	ldr.w	r8, [r3]
 8026c80:	9b07      	ldr	r3, [sp, #28]
 8026c82:	2b00      	cmp	r3, #0
 8026c84:	dc03      	bgt.n	8026c8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026c86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026c88:	2b00      	cmp	r3, #0
 8026c8a:	f340 8181 	ble.w	8026f90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026c8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026c94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026c98:	1e48      	subs	r0, r1, #1
 8026c9a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026c9e:	2d00      	cmp	r5, #0
 8026ca0:	f340 809b 	ble.w	8026dda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8026ca4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026ca8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026cac:	d406      	bmi.n	8026cbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026cae:	4586      	cmp	lr, r0
 8026cb0:	da04      	bge.n	8026cbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026cb2:	2b00      	cmp	r3, #0
 8026cb4:	db02      	blt.n	8026cbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026cb6:	4563      	cmp	r3, ip
 8026cb8:	f2c0 8090 	blt.w	8026ddc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026cbc:	f11e 0e01 	adds.w	lr, lr, #1
 8026cc0:	f100 8084 	bmi.w	8026dcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cc4:	4571      	cmp	r1, lr
 8026cc6:	f2c0 8081 	blt.w	8026dcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cca:	3301      	adds	r3, #1
 8026ccc:	d47e      	bmi.n	8026dcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cce:	429a      	cmp	r2, r3
 8026cd0:	db7c      	blt.n	8026dcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cd2:	46aa      	mov	sl, r5
 8026cd4:	46b9      	mov	r9, r7
 8026cd6:	f1ba 0f00 	cmp.w	sl, #0
 8026cda:	f340 8099 	ble.w	8026e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8026cde:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026ce0:	1421      	asrs	r1, r4, #16
 8026ce2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026ce6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026cea:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026cee:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026cf2:	f100 80d0 	bmi.w	8026e96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026cf6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026cfa:	4559      	cmp	r1, fp
 8026cfc:	f280 80cb 	bge.w	8026e96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026d00:	2800      	cmp	r0, #0
 8026d02:	f2c0 80c8 	blt.w	8026e96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026d06:	f103 3bff 	add.w	fp, r3, #4294967295
 8026d0a:	4558      	cmp	r0, fp
 8026d0c:	f280 80c3 	bge.w	8026e96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026d10:	fa0f fe8e 	sxth.w	lr, lr
 8026d14:	fb00 110e 	mla	r1, r0, lr, r1
 8026d18:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026d1c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026d20:	8841      	ldrh	r1, [r0, #2]
 8026d22:	f1bc 0f00 	cmp.w	ip, #0
 8026d26:	d00b      	beq.n	8026d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026d28:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8026d2c:	3b01      	subs	r3, #1
 8026d2e:	005b      	lsls	r3, r3, #1
 8026d30:	3302      	adds	r3, #2
 8026d32:	eb00 0e03 	add.w	lr, r0, r3
 8026d36:	5ac3      	ldrh	r3, [r0, r3]
 8026d38:	9308      	str	r3, [sp, #32]
 8026d3a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8026d3e:	9309      	str	r3, [sp, #36]	; 0x24
 8026d40:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026d44:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026d48:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026d4c:	ea40 000b 	orr.w	r0, r0, fp
 8026d50:	fb12 f30c 	smulbb	r3, r2, ip
 8026d54:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026d58:	10db      	asrs	r3, r3, #3
 8026d5a:	f1cc 0e10 	rsb	lr, ip, #16
 8026d5e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026d62:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026d66:	ebae 0e02 	sub.w	lr, lr, r2
 8026d6a:	ea4b 0101 	orr.w	r1, fp, r1
 8026d6e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026d72:	4351      	muls	r1, r2
 8026d74:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026d76:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026d7a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026d7e:	0410      	lsls	r0, r2, #16
 8026d80:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026d84:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026d88:	4310      	orrs	r0, r2
 8026d8a:	9a08      	ldr	r2, [sp, #32]
 8026d8c:	9908      	ldr	r1, [sp, #32]
 8026d8e:	0412      	lsls	r2, r2, #16
 8026d90:	fb03 e000 	mla	r0, r3, r0, lr
 8026d94:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026d98:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026d9c:	ea42 020e 	orr.w	r2, r2, lr
 8026da0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026da4:	fb03 0302 	mla	r3, r3, r2, r0
 8026da8:	0d5a      	lsrs	r2, r3, #21
 8026daa:	095b      	lsrs	r3, r3, #5
 8026dac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026db0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026db4:	4313      	orrs	r3, r2
 8026db6:	f8a9 3000 	strh.w	r3, [r9]
 8026dba:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026dbc:	441c      	add	r4, r3
 8026dbe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026dc0:	f109 0902 	add.w	r9, r9, #2
 8026dc4:	441e      	add	r6, r3
 8026dc6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026dca:	e784      	b.n	8026cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8026dcc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026dce:	441c      	add	r4, r3
 8026dd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026dd2:	3d01      	subs	r5, #1
 8026dd4:	441e      	add	r6, r3
 8026dd6:	3702      	adds	r7, #2
 8026dd8:	e761      	b.n	8026c9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026dda:	d01d      	beq.n	8026e18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8026ddc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026dde:	1e6b      	subs	r3, r5, #1
 8026de0:	fb00 4003 	mla	r0, r0, r3, r4
 8026de4:	1400      	asrs	r0, r0, #16
 8026de6:	f53f af74 	bmi.w	8026cd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026dea:	3901      	subs	r1, #1
 8026dec:	4288      	cmp	r0, r1
 8026dee:	f6bf af70 	bge.w	8026cd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026df2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8026df4:	fb01 6303 	mla	r3, r1, r3, r6
 8026df8:	141b      	asrs	r3, r3, #16
 8026dfa:	f53f af6a 	bmi.w	8026cd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026dfe:	3a01      	subs	r2, #1
 8026e00:	4293      	cmp	r3, r2
 8026e02:	f6bf af66 	bge.w	8026cd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026e06:	46a9      	mov	r9, r5
 8026e08:	46ba      	mov	sl, r7
 8026e0a:	f1b9 0f00 	cmp.w	r9, #0
 8026e0e:	dc5a      	bgt.n	8026ec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8026e10:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026e14:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8026e18:	9b07      	ldr	r3, [sp, #28]
 8026e1a:	2b00      	cmp	r3, #0
 8026e1c:	f340 80b8 	ble.w	8026f90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026e20:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026e24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026e28:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026e2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026e32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026e36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026e3a:	eef0 6a62 	vmov.f32	s13, s5
 8026e3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026e42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e46:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026e4a:	ee16 4a90 	vmov	r4, s13
 8026e4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026e52:	eef0 6a43 	vmov.f32	s13, s6
 8026e56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026e5a:	ee12 2a90 	vmov	r2, s5
 8026e5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026e62:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e66:	ee13 2a10 	vmov	r2, s6
 8026e6a:	931b      	str	r3, [sp, #108]	; 0x6c
 8026e6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e72:	931c      	str	r3, [sp, #112]	; 0x70
 8026e74:	9b07      	ldr	r3, [sp, #28]
 8026e76:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026e78:	3b01      	subs	r3, #1
 8026e7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e7e:	9307      	str	r3, [sp, #28]
 8026e80:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e82:	ee16 6a90 	vmov	r6, s13
 8026e86:	bf14      	ite	ne
 8026e88:	461d      	movne	r5, r3
 8026e8a:	4615      	moveq	r5, r2
 8026e8c:	eeb0 3a67 	vmov.f32	s6, s15
 8026e90:	eef0 2a47 	vmov.f32	s5, s14
 8026e94:	e6f4      	b.n	8026c80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8026e96:	f111 0b01 	adds.w	fp, r1, #1
 8026e9a:	d48e      	bmi.n	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e9c:	45de      	cmp	lr, fp
 8026e9e:	db8c      	blt.n	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026ea0:	f110 0b01 	adds.w	fp, r0, #1
 8026ea4:	d489      	bmi.n	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026ea6:	455b      	cmp	r3, fp
 8026ea8:	db87      	blt.n	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026eaa:	b21b      	sxth	r3, r3
 8026eac:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026eb0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026eb4:	9300      	str	r3, [sp, #0]
 8026eb6:	4642      	mov	r2, r8
 8026eb8:	fa0f f38e 	sxth.w	r3, lr
 8026ebc:	4649      	mov	r1, r9
 8026ebe:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026ec0:	f7ff fe4d 	bl	8026b5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8026ec4:	e779      	b.n	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026ec6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026ec8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8026ecc:	1420      	asrs	r0, r4, #16
 8026ece:	1431      	asrs	r1, r6, #16
 8026ed0:	fb03 0101 	mla	r1, r3, r1, r0
 8026ed4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026ed8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026edc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8026ee0:	8841      	ldrh	r1, [r0, #2]
 8026ee2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026ee6:	f1be 0f00 	cmp.w	lr, #0
 8026eea:	d00b      	beq.n	8026f04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026eec:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8026ef0:	3b01      	subs	r3, #1
 8026ef2:	005b      	lsls	r3, r3, #1
 8026ef4:	3302      	adds	r3, #2
 8026ef6:	eb00 0b03 	add.w	fp, r0, r3
 8026efa:	5ac3      	ldrh	r3, [r0, r3]
 8026efc:	930a      	str	r3, [sp, #40]	; 0x28
 8026efe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026f02:	930b      	str	r3, [sp, #44]	; 0x2c
 8026f04:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8026f08:	fb12 f30e 	smulbb	r3, r2, lr
 8026f0c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026f10:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026f14:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026f18:	10db      	asrs	r3, r3, #3
 8026f1a:	ea40 000c 	orr.w	r0, r0, ip
 8026f1e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026f22:	f1ce 0c10 	rsb	ip, lr, #16
 8026f26:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026f2a:	ebac 0c02 	sub.w	ip, ip, r2
 8026f2e:	ea4b 0101 	orr.w	r1, fp, r1
 8026f32:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026f36:	4351      	muls	r1, r2
 8026f38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026f3a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026f3e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8026f42:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026f46:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8026f4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026f4c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8026f4e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026f52:	0412      	lsls	r2, r2, #16
 8026f54:	ea4b 0000 	orr.w	r0, fp, r0
 8026f58:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026f5c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8026f60:	fb03 c000 	mla	r0, r3, r0, ip
 8026f64:	ea42 0b0b 	orr.w	fp, r2, fp
 8026f68:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026f6c:	fb03 000b 	mla	r0, r3, fp, r0
 8026f70:	0d43      	lsrs	r3, r0, #21
 8026f72:	0940      	lsrs	r0, r0, #5
 8026f74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026f78:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026f7c:	4318      	orrs	r0, r3
 8026f7e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026f80:	f82a 0b02 	strh.w	r0, [sl], #2
 8026f84:	441c      	add	r4, r3
 8026f86:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026f88:	f109 39ff 	add.w	r9, r9, #4294967295
 8026f8c:	441e      	add	r6, r3
 8026f8e:	e73c      	b.n	8026e0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8026f90:	b00f      	add	sp, #60	; 0x3c
 8026f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026f96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8026f96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f9a:	b085      	sub	sp, #20
 8026f9c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8026fa0:	9102      	str	r1, [sp, #8]
 8026fa2:	2c00      	cmp	r4, #0
 8026fa4:	fb04 7103 	mla	r1, r4, r3, r7
 8026fa8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8026fac:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8026fb0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8026fb4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8026fb8:	f2c0 811b 	blt.w	80271f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026fbc:	45a6      	cmp	lr, r4
 8026fbe:	f340 8118 	ble.w	80271f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026fc2:	2f00      	cmp	r7, #0
 8026fc4:	f2c0 8113 	blt.w	80271ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026fc8:	42bb      	cmp	r3, r7
 8026fca:	f340 8110 	ble.w	80271ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026fce:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8026fd2:	1c7a      	adds	r2, r7, #1
 8026fd4:	f100 8110 	bmi.w	80271f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026fd8:	4293      	cmp	r3, r2
 8026fda:	f340 810d 	ble.w	80271f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026fde:	2e00      	cmp	r6, #0
 8026fe0:	f000 810c 	beq.w	80271fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8026fe4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8026fe8:	3401      	adds	r4, #1
 8026fea:	f100 810b 	bmi.w	8027204 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026fee:	45a6      	cmp	lr, r4
 8026ff0:	f340 8108 	ble.w	8027204 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026ff4:	2800      	cmp	r0, #0
 8026ff6:	f000 8108 	beq.w	802720a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8026ffa:	2f00      	cmp	r7, #0
 8026ffc:	f2c0 8100 	blt.w	8027200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8027000:	42bb      	cmp	r3, r7
 8027002:	f340 80fd 	ble.w	8027200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8027006:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802700a:	3701      	adds	r7, #1
 802700c:	f100 8100 	bmi.w	8027210 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8027010:	42bb      	cmp	r3, r7
 8027012:	f340 80fd 	ble.w	8027210 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8027016:	2e00      	cmp	r6, #0
 8027018:	f000 80fc 	beq.w	8027214 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802701c:	3301      	adds	r3, #1
 802701e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8027022:	b2b6      	uxth	r6, r6
 8027024:	b280      	uxth	r0, r0
 8027026:	fb00 fe06 	mul.w	lr, r0, r6
 802702a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802702e:	0136      	lsls	r6, r6, #4
 8027030:	eba6 070e 	sub.w	r7, r6, lr
 8027034:	b280      	uxth	r0, r0
 8027036:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802703a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802703e:	b2bf      	uxth	r7, r7
 8027040:	1a1b      	subs	r3, r3, r0
 8027042:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027046:	b29b      	uxth	r3, r3
 8027048:	fb0a f607 	mul.w	r6, sl, r7
 802704c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027050:	fb0b 6603 	mla	r6, fp, r3, r6
 8027054:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027058:	fb00 6609 	mla	r6, r0, r9, r6
 802705c:	fb0e 6608 	mla	r6, lr, r8, r6
 8027060:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027064:	9600      	str	r6, [sp, #0]
 8027066:	2e00      	cmp	r6, #0
 8027068:	f000 80be 	beq.w	80271e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802706c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027070:	fb0b fc0c 	mul.w	ip, fp, ip
 8027074:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027078:	fb0b f505 	mul.w	r5, fp, r5
 802707c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027080:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027084:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027088:	44dc      	add	ip, fp
 802708a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802708e:	9501      	str	r5, [sp, #4]
 8027090:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027094:	9503      	str	r5, [sp, #12]
 8027096:	9d01      	ldr	r5, [sp, #4]
 8027098:	9e02      	ldr	r6, [sp, #8]
 802709a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802709e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80270a2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80270a6:	fb0a fc0c 	mul.w	ip, sl, ip
 80270aa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80270ae:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80270b2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80270b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80270ba:	4465      	add	r5, ip
 80270bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80270c0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80270c4:	fb09 fc0c 	mul.w	ip, r9, ip
 80270c8:	fb09 f904 	mul.w	r9, r9, r4
 80270cc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80270d0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80270d4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80270d8:	fb08 f404 	mul.w	r4, r8, r4
 80270dc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80270e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80270e4:	fb08 f802 	mul.w	r8, r8, r2
 80270e8:	fb0a fa01 	mul.w	sl, sl, r1
 80270ec:	0a22      	lsrs	r2, r4, #8
 80270ee:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80270f2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80270f6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80270fa:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80270fe:	4414      	add	r4, r2
 8027100:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027104:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027108:	0a2d      	lsrs	r5, r5, #8
 802710a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802710e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027112:	9a03      	ldr	r2, [sp, #12]
 8027114:	8836      	ldrh	r6, [r6, #0]
 8027116:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802711a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802711e:	437d      	muls	r5, r7
 8027120:	4461      	add	r1, ip
 8027122:	0a24      	lsrs	r4, r4, #8
 8027124:	fb02 5503 	mla	r5, r2, r3, r5
 8027128:	0a09      	lsrs	r1, r1, #8
 802712a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802712e:	fb04 540e 	mla	r4, r4, lr, r5
 8027132:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027136:	fb01 4100 	mla	r1, r1, r0, r4
 802713a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802713e:	0a09      	lsrs	r1, r1, #8
 8027140:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027144:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027148:	fb07 f70a 	mul.w	r7, r7, sl
 802714c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027150:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027154:	fb03 7101 	mla	r1, r3, r1, r7
 8027158:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802715c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027160:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027164:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027168:	fb00 e101 	mla	r1, r0, r1, lr
 802716c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8027170:	9a00      	ldr	r2, [sp, #0]
 8027172:	b287      	uxth	r7, r0
 8027174:	437a      	muls	r2, r7
 8027176:	0a09      	lsrs	r1, r1, #8
 8027178:	1c53      	adds	r3, r2, #1
 802717a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802717e:	4321      	orrs	r1, r4
 8027180:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027184:	1235      	asrs	r5, r6, #8
 8027186:	0c0a      	lsrs	r2, r1, #16
 8027188:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802718c:	b2db      	uxtb	r3, r3
 802718e:	fb12 f207 	smulbb	r2, r2, r7
 8027192:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8027196:	fb05 2503 	mla	r5, r5, r3, r2
 802719a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802719e:	10f2      	asrs	r2, r6, #3
 80271a0:	b2c8      	uxtb	r0, r1
 80271a2:	00f6      	lsls	r6, r6, #3
 80271a4:	fb14 f407 	smulbb	r4, r4, r7
 80271a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80271ac:	b2f6      	uxtb	r6, r6
 80271ae:	fb10 f007 	smulbb	r0, r0, r7
 80271b2:	fb02 4203 	mla	r2, r2, r3, r4
 80271b6:	b2ad      	uxth	r5, r5
 80271b8:	fb06 0303 	mla	r3, r6, r3, r0
 80271bc:	b299      	uxth	r1, r3
 80271be:	b294      	uxth	r4, r2
 80271c0:	1c6b      	adds	r3, r5, #1
 80271c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80271c6:	1c62      	adds	r2, r4, #1
 80271c8:	1c4b      	adds	r3, r1, #1
 80271ca:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80271ce:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80271d2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80271d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80271da:	0952      	lsrs	r2, r2, #5
 80271dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80271e0:	432b      	orrs	r3, r5
 80271e2:	4313      	orrs	r3, r2
 80271e4:	9a02      	ldr	r2, [sp, #8]
 80271e6:	8013      	strh	r3, [r2, #0]
 80271e8:	b005      	add	sp, #20
 80271ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80271ee:	2500      	movs	r5, #0
 80271f0:	e6ef      	b.n	8026fd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80271f2:	2100      	movs	r1, #0
 80271f4:	460d      	mov	r5, r1
 80271f6:	e6f7      	b.n	8026fe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271f8:	2100      	movs	r1, #0
 80271fa:	e6f5      	b.n	8026fe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271fc:	4631      	mov	r1, r6
 80271fe:	e6f3      	b.n	8026fe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8027200:	2400      	movs	r4, #0
 8027202:	e702      	b.n	802700a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8027204:	2200      	movs	r2, #0
 8027206:	4614      	mov	r4, r2
 8027208:	e70b      	b.n	8027022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802720a:	4602      	mov	r2, r0
 802720c:	4604      	mov	r4, r0
 802720e:	e708      	b.n	8027022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027210:	2200      	movs	r2, #0
 8027212:	e706      	b.n	8027022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027214:	4632      	mov	r2, r6
 8027216:	e704      	b.n	8027022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08027218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802721c:	b09d      	sub	sp, #116	; 0x74
 802721e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8027222:	9219      	str	r2, [sp, #100]	; 0x64
 8027224:	9307      	str	r3, [sp, #28]
 8027226:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8027228:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802722c:	931a      	str	r3, [sp, #104]	; 0x68
 802722e:	9117      	str	r1, [sp, #92]	; 0x5c
 8027230:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8027234:	901b      	str	r0, [sp, #108]	; 0x6c
 8027236:	6850      	ldr	r0, [r2, #4]
 8027238:	6812      	ldr	r2, [r2, #0]
 802723a:	fb00 1303 	mla	r3, r0, r3, r1
 802723e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027242:	930a      	str	r3, [sp, #40]	; 0x28
 8027244:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027246:	681b      	ldr	r3, [r3, #0]
 8027248:	9310      	str	r3, [sp, #64]	; 0x40
 802724a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802724e:	930b      	str	r3, [sp, #44]	; 0x2c
 8027250:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027252:	2b00      	cmp	r3, #0
 8027254:	dc03      	bgt.n	802725e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8027256:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8027258:	2b00      	cmp	r3, #0
 802725a:	f340 8375 	ble.w	8027948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802725e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027260:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027264:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027268:	1e48      	subs	r0, r1, #1
 802726a:	1e57      	subs	r7, r2, #1
 802726c:	9b07      	ldr	r3, [sp, #28]
 802726e:	2b00      	cmp	r3, #0
 8027270:	f340 818e 	ble.w	8027590 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8027274:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027278:	ea4f 4326 	mov.w	r3, r6, asr #16
 802727c:	d406      	bmi.n	802728c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802727e:	4584      	cmp	ip, r0
 8027280:	da04      	bge.n	802728c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027282:	2b00      	cmp	r3, #0
 8027284:	db02      	blt.n	802728c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027286:	42bb      	cmp	r3, r7
 8027288:	f2c0 8183 	blt.w	8027592 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802728c:	f11c 0c01 	adds.w	ip, ip, #1
 8027290:	f100 8173 	bmi.w	802757a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027294:	4561      	cmp	r1, ip
 8027296:	f2c0 8170 	blt.w	802757a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802729a:	3301      	adds	r3, #1
 802729c:	f100 816d 	bmi.w	802757a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80272a0:	429a      	cmp	r2, r3
 80272a2:	f2c0 816a 	blt.w	802757a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80272a6:	9b07      	ldr	r3, [sp, #28]
 80272a8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80272aa:	9318      	str	r3, [sp, #96]	; 0x60
 80272ac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80272ae:	2b00      	cmp	r3, #0
 80272b0:	f340 818c 	ble.w	80275cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80272b4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80272b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80272b8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80272bc:	689b      	ldr	r3, [r3, #8]
 80272be:	1422      	asrs	r2, r4, #16
 80272c0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80272c4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80272c8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80272cc:	f100 81cd 	bmi.w	802766a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272d0:	f103 38ff 	add.w	r8, r3, #4294967295
 80272d4:	4542      	cmp	r2, r8
 80272d6:	f280 81c8 	bge.w	802766a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272da:	f1bc 0f00 	cmp.w	ip, #0
 80272de:	f2c0 81c4 	blt.w	802766a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272e2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80272e6:	45c4      	cmp	ip, r8
 80272e8:	f280 81bf 	bge.w	802766a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272ec:	b21b      	sxth	r3, r3
 80272ee:	fb0c 2203 	mla	r2, ip, r3, r2
 80272f2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80272f4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80272f8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80272fc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027300:	2800      	cmp	r0, #0
 8027302:	f000 81a9 	beq.w	8027658 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8027306:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802730a:	950c      	str	r5, [sp, #48]	; 0x30
 802730c:	0e2d      	lsrs	r5, r5, #24
 802730e:	9513      	str	r5, [sp, #76]	; 0x4c
 8027310:	b181      	cbz	r1, 8027334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027312:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027316:	3b01      	subs	r3, #1
 8027318:	009b      	lsls	r3, r3, #2
 802731a:	3304      	adds	r3, #4
 802731c:	eb08 0c03 	add.w	ip, r8, r3
 8027320:	f858 3003 	ldr.w	r3, [r8, r3]
 8027324:	9308      	str	r3, [sp, #32]
 8027326:	0e1b      	lsrs	r3, r3, #24
 8027328:	9311      	str	r3, [sp, #68]	; 0x44
 802732a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802732e:	930d      	str	r3, [sp, #52]	; 0x34
 8027330:	0e1b      	lsrs	r3, r3, #24
 8027332:	9314      	str	r3, [sp, #80]	; 0x50
 8027334:	b280      	uxth	r0, r0
 8027336:	b289      	uxth	r1, r1
 8027338:	fb00 f901 	mul.w	r9, r0, r1
 802733c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027340:	0100      	lsls	r0, r0, #4
 8027342:	eba0 0809 	sub.w	r8, r0, r9
 8027346:	b289      	uxth	r1, r1
 8027348:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802734c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802734e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027350:	fa1f f888 	uxth.w	r8, r8
 8027354:	1a5b      	subs	r3, r3, r1
 8027356:	b29b      	uxth	r3, r3
 8027358:	fb08 f000 	mul.w	r0, r8, r0
 802735c:	fb03 000e 	mla	r0, r3, lr, r0
 8027360:	fb01 0005 	mla	r0, r1, r5, r0
 8027364:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027366:	fb09 0005 	mla	r0, r9, r5, r0
 802736a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802736e:	2800      	cmp	r0, #0
 8027370:	f000 80fa 	beq.w	8027568 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027374:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027378:	d01b      	beq.n	80273b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802737a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802737e:	fb0e fa0a 	mul.w	sl, lr, sl
 8027382:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027386:	fb0e fe02 	mul.w	lr, lr, r2
 802738a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802738e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027392:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027396:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802739a:	4452      	add	r2, sl
 802739c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80273a0:	0a12      	lsrs	r2, r2, #8
 80273a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80273a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80273aa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80273ae:	ea42 020c 	orr.w	r2, r2, ip
 80273b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80273b4:	2dff      	cmp	r5, #255	; 0xff
 80273b6:	d021      	beq.n	80273fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80273b8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80273ba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80273be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80273c0:	fb05 fb0b 	mul.w	fp, r5, fp
 80273c4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80273c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80273ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80273cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80273d0:	fb05 fa0a 	mul.w	sl, r5, sl
 80273d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80273d8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80273dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80273e0:	44de      	add	lr, fp
 80273e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80273e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80273ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80273ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80273f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80273f6:	ea4e 050a 	orr.w	r5, lr, sl
 80273fa:	950c      	str	r5, [sp, #48]	; 0x30
 80273fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273fe:	2dff      	cmp	r5, #255	; 0xff
 8027400:	d021      	beq.n	8027446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8027402:	9d08      	ldr	r5, [sp, #32]
 8027404:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027408:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802740a:	fb05 fb0b 	mul.w	fp, r5, fp
 802740e:	9d08      	ldr	r5, [sp, #32]
 8027410:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027414:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027416:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802741a:	fb05 fa0a 	mul.w	sl, r5, sl
 802741e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027422:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027426:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802742a:	44de      	add	lr, fp
 802742c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027430:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027434:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027438:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802743c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027440:	ea4e 050a 	orr.w	r5, lr, sl
 8027444:	9508      	str	r5, [sp, #32]
 8027446:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027448:	2dff      	cmp	r5, #255	; 0xff
 802744a:	d021      	beq.n	8027490 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802744c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802744e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027452:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027454:	fb05 fb0b 	mul.w	fp, r5, fp
 8027458:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802745a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802745e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027460:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027464:	fb05 fa0a 	mul.w	sl, r5, sl
 8027468:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802746c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027470:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027474:	44de      	add	lr, fp
 8027476:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802747a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802747e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027482:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027486:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802748a:	ea4e 050a 	orr.w	r5, lr, sl
 802748e:	950d      	str	r5, [sp, #52]	; 0x34
 8027490:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027492:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027496:	9d08      	ldr	r5, [sp, #32]
 8027498:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802749c:	fb08 fc0c 	mul.w	ip, r8, ip
 80274a0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80274a4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80274a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80274aa:	fb01 cc0e 	mla	ip, r1, lr, ip
 80274ae:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80274b2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80274b4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80274b8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80274bc:	fb08 f80e 	mul.w	r8, r8, lr
 80274c0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80274c4:	fb03 8202 	mla	r2, r3, r2, r8
 80274c8:	9b08      	ldr	r3, [sp, #32]
 80274ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80274cc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80274d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80274d2:	fb01 220a 	mla	r2, r1, sl, r2
 80274d6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80274da:	fb09 2901 	mla	r9, r9, r1, r2
 80274de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80274e0:	883b      	ldrh	r3, [r7, #0]
 80274e2:	4342      	muls	r2, r0
 80274e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80274e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80274ec:	1c50      	adds	r0, r2, #1
 80274ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80274f2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80274f6:	ea4c 0c09 	orr.w	ip, ip, r9
 80274fa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80274fe:	1219      	asrs	r1, r3, #8
 8027500:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8027504:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8027508:	b2c0      	uxtb	r0, r0
 802750a:	fb12 f205 	smulbb	r2, r2, r5
 802750e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027512:	fb01 2100 	mla	r1, r1, r0, r2
 8027516:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802751a:	10da      	asrs	r2, r3, #3
 802751c:	fa5f fc8c 	uxtb.w	ip, ip
 8027520:	00db      	lsls	r3, r3, #3
 8027522:	fb1c fc05 	smulbb	ip, ip, r5
 8027526:	b2db      	uxtb	r3, r3
 8027528:	b289      	uxth	r1, r1
 802752a:	fb03 c300 	mla	r3, r3, r0, ip
 802752e:	fa1f fc83 	uxth.w	ip, r3
 8027532:	1c4b      	adds	r3, r1, #1
 8027534:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027538:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802753c:	fb1e fe05 	smulbb	lr, lr, r5
 8027540:	f10c 0301 	add.w	r3, ip, #1
 8027544:	fb02 e200 	mla	r2, r2, r0, lr
 8027548:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802754c:	b292      	uxth	r2, r2
 802754e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8027552:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027556:	430b      	orrs	r3, r1
 8027558:	1c51      	adds	r1, r2, #1
 802755a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802755e:	0952      	lsrs	r2, r2, #5
 8027560:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027564:	4313      	orrs	r3, r2
 8027566:	803b      	strh	r3, [r7, #0]
 8027568:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802756a:	441c      	add	r4, r3
 802756c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802756e:	441e      	add	r6, r3
 8027570:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027572:	3b01      	subs	r3, #1
 8027574:	3702      	adds	r7, #2
 8027576:	9318      	str	r3, [sp, #96]	; 0x60
 8027578:	e698      	b.n	80272ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802757a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802757c:	441c      	add	r4, r3
 802757e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027580:	441e      	add	r6, r3
 8027582:	9b07      	ldr	r3, [sp, #28]
 8027584:	3b01      	subs	r3, #1
 8027586:	9307      	str	r3, [sp, #28]
 8027588:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802758a:	3302      	adds	r3, #2
 802758c:	930a      	str	r3, [sp, #40]	; 0x28
 802758e:	e66d      	b.n	802726c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8027590:	d023      	beq.n	80275da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8027592:	9b07      	ldr	r3, [sp, #28]
 8027594:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8027596:	3b01      	subs	r3, #1
 8027598:	fb00 4003 	mla	r0, r0, r3, r4
 802759c:	1400      	asrs	r0, r0, #16
 802759e:	f53f ae82 	bmi.w	80272a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80275a2:	3901      	subs	r1, #1
 80275a4:	4288      	cmp	r0, r1
 80275a6:	f6bf ae7e 	bge.w	80272a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80275aa:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80275ac:	fb01 6303 	mla	r3, r1, r3, r6
 80275b0:	141b      	asrs	r3, r3, #16
 80275b2:	f53f ae78 	bmi.w	80272a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80275b6:	3a01      	subs	r2, #1
 80275b8:	4293      	cmp	r3, r2
 80275ba:	f6bf ae74 	bge.w	80272a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80275be:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80275c2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80275c6:	f1bb 0f00 	cmp.w	fp, #0
 80275ca:	dc6c      	bgt.n	80276a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80275cc:	9b07      	ldr	r3, [sp, #28]
 80275ce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80275d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80275d4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80275d8:	930a      	str	r3, [sp, #40]	; 0x28
 80275da:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80275dc:	2b00      	cmp	r3, #0
 80275de:	f340 81b3 	ble.w	8027948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80275e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80275e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80275ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80275ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80275f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80275f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80275f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80275fc:	eef0 6a62 	vmov.f32	s13, s5
 8027600:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027604:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027608:	ee77 2a62 	vsub.f32	s5, s14, s5
 802760c:	ee16 4a90 	vmov	r4, s13
 8027610:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027614:	eef0 6a43 	vmov.f32	s13, s6
 8027618:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802761c:	ee12 2a90 	vmov	r2, s5
 8027620:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027624:	fb92 f3f3 	sdiv	r3, r2, r3
 8027628:	ee13 2a10 	vmov	r2, s6
 802762c:	9329      	str	r3, [sp, #164]	; 0xa4
 802762e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027630:	fb92 f3f3 	sdiv	r3, r2, r3
 8027634:	932a      	str	r3, [sp, #168]	; 0xa8
 8027636:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027638:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802763a:	3b01      	subs	r3, #1
 802763c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027640:	9317      	str	r3, [sp, #92]	; 0x5c
 8027642:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027644:	bf08      	it	eq
 8027646:	4613      	moveq	r3, r2
 8027648:	ee16 6a90 	vmov	r6, s13
 802764c:	9307      	str	r3, [sp, #28]
 802764e:	eeb0 3a67 	vmov.f32	s6, s15
 8027652:	eef0 2a47 	vmov.f32	s5, s14
 8027656:	e5fb      	b.n	8027250 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8027658:	2900      	cmp	r1, #0
 802765a:	f43f ae6b 	beq.w	8027334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802765e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027662:	9308      	str	r3, [sp, #32]
 8027664:	0e1b      	lsrs	r3, r3, #24
 8027666:	9311      	str	r3, [sp, #68]	; 0x44
 8027668:	e664      	b.n	8027334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802766a:	f112 0801 	adds.w	r8, r2, #1
 802766e:	f53f af7b 	bmi.w	8027568 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027672:	4543      	cmp	r3, r8
 8027674:	f6ff af78 	blt.w	8027568 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027678:	f11c 0801 	adds.w	r8, ip, #1
 802767c:	f53f af74 	bmi.w	8027568 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027680:	45c6      	cmp	lr, r8
 8027682:	f6ff af71 	blt.w	8027568 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027686:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8027688:	9201      	str	r2, [sp, #4]
 802768a:	fa0f f28e 	sxth.w	r2, lr
 802768e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8027692:	e9cd c002 	strd	ip, r0, [sp, #8]
 8027696:	9200      	str	r2, [sp, #0]
 8027698:	b21b      	sxth	r3, r3
 802769a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802769c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802769e:	4639      	mov	r1, r7
 80276a0:	f7ff fc79 	bl	8026f96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80276a4:	e760      	b.n	8027568 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80276a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80276a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80276aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80276ae:	1427      	asrs	r7, r4, #16
 80276b0:	1433      	asrs	r3, r6, #16
 80276b2:	fb01 7303 	mla	r3, r1, r3, r7
 80276b6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80276ba:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80276be:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80276c2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80276c6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80276ca:	2a00      	cmp	r2, #0
 80276cc:	f000 8133 	beq.w	8027936 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80276d0:	687d      	ldr	r5, [r7, #4]
 80276d2:	950e      	str	r5, [sp, #56]	; 0x38
 80276d4:	0e2d      	lsrs	r5, r5, #24
 80276d6:	9515      	str	r5, [sp, #84]	; 0x54
 80276d8:	b178      	cbz	r0, 80276fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80276da:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80276de:	3901      	subs	r1, #1
 80276e0:	0089      	lsls	r1, r1, #2
 80276e2:	3104      	adds	r1, #4
 80276e4:	eb07 0e01 	add.w	lr, r7, r1
 80276e8:	5879      	ldr	r1, [r7, r1]
 80276ea:	9109      	str	r1, [sp, #36]	; 0x24
 80276ec:	0e09      	lsrs	r1, r1, #24
 80276ee:	9112      	str	r1, [sp, #72]	; 0x48
 80276f0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80276f4:	910f      	str	r1, [sp, #60]	; 0x3c
 80276f6:	0e09      	lsrs	r1, r1, #24
 80276f8:	9116      	str	r1, [sp, #88]	; 0x58
 80276fa:	b292      	uxth	r2, r2
 80276fc:	b280      	uxth	r0, r0
 80276fe:	fb02 f800 	mul.w	r8, r2, r0
 8027702:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8027706:	0112      	lsls	r2, r2, #4
 8027708:	eba2 0e08 	sub.w	lr, r2, r8
 802770c:	b280      	uxth	r0, r0
 802770e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8027712:	9915      	ldr	r1, [sp, #84]	; 0x54
 8027714:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027716:	fa1f fe8e 	uxth.w	lr, lr
 802771a:	1a12      	subs	r2, r2, r0
 802771c:	b292      	uxth	r2, r2
 802771e:	fb0e f101 	mul.w	r1, lr, r1
 8027722:	fb02 110c 	mla	r1, r2, ip, r1
 8027726:	fb00 1105 	mla	r1, r0, r5, r1
 802772a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802772c:	fb08 1105 	mla	r1, r8, r5, r1
 8027730:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027734:	2900      	cmp	r1, #0
 8027736:	f000 80f5 	beq.w	8027924 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802773a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802773e:	d019      	beq.n	8027774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8027740:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027744:	fb0c fa0a 	mul.w	sl, ip, sl
 8027748:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802774c:	fb0c fc03 	mul.w	ip, ip, r3
 8027750:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027754:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027758:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802775c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027760:	4453      	add	r3, sl
 8027762:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027766:	0a1b      	lsrs	r3, r3, #8
 8027768:	0a3f      	lsrs	r7, r7, #8
 802776a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802776e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027772:	433b      	orrs	r3, r7
 8027774:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027776:	2dff      	cmp	r5, #255	; 0xff
 8027778:	d020      	beq.n	80277bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802777a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802777c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027780:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027782:	436f      	muls	r7, r5
 8027784:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027786:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802778a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802778c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027790:	fb05 fa0a 	mul.w	sl, r5, sl
 8027794:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027798:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802779c:	44bc      	add	ip, r7
 802779e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80277a2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80277a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80277aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80277ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80277b6:	ea4c 050a 	orr.w	r5, ip, sl
 80277ba:	950e      	str	r5, [sp, #56]	; 0x38
 80277bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277be:	2dff      	cmp	r5, #255	; 0xff
 80277c0:	d020      	beq.n	8027804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80277c2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80277c4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80277c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277ca:	436f      	muls	r7, r5
 80277cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80277ce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80277d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277d4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80277d8:	fb05 fa0a 	mul.w	sl, r5, sl
 80277dc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80277e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277e4:	44bc      	add	ip, r7
 80277e6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80277ea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80277ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80277f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80277f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80277fe:	ea4c 050a 	orr.w	r5, ip, sl
 8027802:	9509      	str	r5, [sp, #36]	; 0x24
 8027804:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027806:	2dff      	cmp	r5, #255	; 0xff
 8027808:	d020      	beq.n	802784c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802780a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802780c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027810:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027812:	436f      	muls	r7, r5
 8027814:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027816:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802781a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802781c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027820:	fb05 fa0a 	mul.w	sl, r5, sl
 8027824:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027828:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802782c:	44bc      	add	ip, r7
 802782e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027832:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027836:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802783a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802783e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027842:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027846:	ea4c 050a 	orr.w	r5, ip, sl
 802784a:	950f      	str	r5, [sp, #60]	; 0x3c
 802784c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802784e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027852:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027854:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027858:	fb0e f707 	mul.w	r7, lr, r7
 802785c:	fb02 770c 	mla	r7, r2, ip, r7
 8027860:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027864:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027866:	fb00 770c 	mla	r7, r0, ip, r7
 802786a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802786e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027870:	fb08 770c 	mla	r7, r8, ip, r7
 8027874:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027878:	fb0e fe0c 	mul.w	lr, lr, ip
 802787c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027880:	fb02 e303 	mla	r3, r2, r3, lr
 8027884:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027886:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027888:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802788c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802788e:	fb00 330a 	mla	r3, r0, sl, r3
 8027892:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8027896:	fb08 3c0c 	mla	ip, r8, ip, r3
 802789a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802789c:	f8b9 0000 	ldrh.w	r0, [r9]
 80278a0:	4359      	muls	r1, r3
 80278a2:	0a3f      	lsrs	r7, r7, #8
 80278a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80278a8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80278ac:	1c4b      	adds	r3, r1, #1
 80278ae:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80278b2:	ea47 070c 	orr.w	r7, r7, ip
 80278b6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80278ba:	1202      	asrs	r2, r0, #8
 80278bc:	0c3b      	lsrs	r3, r7, #16
 80278be:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80278c2:	b2c9      	uxtb	r1, r1
 80278c4:	fb13 f305 	smulbb	r3, r3, r5
 80278c8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80278cc:	fb02 3201 	mla	r2, r2, r1, r3
 80278d0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80278d4:	10c3      	asrs	r3, r0, #3
 80278d6:	b2ff      	uxtb	r7, r7
 80278d8:	00c0      	lsls	r0, r0, #3
 80278da:	b2c0      	uxtb	r0, r0
 80278dc:	fb17 f705 	smulbb	r7, r7, r5
 80278e0:	fb00 7001 	mla	r0, r0, r1, r7
 80278e4:	b292      	uxth	r2, r2
 80278e6:	fb1c fc05 	smulbb	ip, ip, r5
 80278ea:	b280      	uxth	r0, r0
 80278ec:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80278f0:	fb03 c301 	mla	r3, r3, r1, ip
 80278f4:	1c51      	adds	r1, r2, #1
 80278f6:	f100 0c01 	add.w	ip, r0, #1
 80278fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80278fe:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8027902:	b29b      	uxth	r3, r3
 8027904:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8027908:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802790c:	ea4c 0202 	orr.w	r2, ip, r2
 8027910:	f103 0c01 	add.w	ip, r3, #1
 8027914:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027918:	095b      	lsrs	r3, r3, #5
 802791a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802791e:	431a      	orrs	r2, r3
 8027920:	f8a9 2000 	strh.w	r2, [r9]
 8027924:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027926:	441c      	add	r4, r3
 8027928:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802792a:	f109 0902 	add.w	r9, r9, #2
 802792e:	441e      	add	r6, r3
 8027930:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027934:	e647      	b.n	80275c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027936:	2800      	cmp	r0, #0
 8027938:	f43f aedf 	beq.w	80276fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802793c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027940:	9109      	str	r1, [sp, #36]	; 0x24
 8027942:	0e09      	lsrs	r1, r1, #24
 8027944:	9112      	str	r1, [sp, #72]	; 0x48
 8027946:	e6d8      	b.n	80276fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027948:	b01d      	add	sp, #116	; 0x74
 802794a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802794e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802794e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027952:	b085      	sub	sp, #20
 8027954:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027958:	9102      	str	r1, [sp, #8]
 802795a:	2c00      	cmp	r4, #0
 802795c:	fb04 7103 	mla	r1, r4, r3, r7
 8027960:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027964:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027968:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802796c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027970:	f2c0 810c 	blt.w	8027b8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027974:	45a6      	cmp	lr, r4
 8027976:	f340 8109 	ble.w	8027b8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802797a:	2f00      	cmp	r7, #0
 802797c:	f2c0 8104 	blt.w	8027b88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027980:	42bb      	cmp	r3, r7
 8027982:	f340 8101 	ble.w	8027b88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027986:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802798a:	1c7a      	adds	r2, r7, #1
 802798c:	f100 8101 	bmi.w	8027b92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027990:	4293      	cmp	r3, r2
 8027992:	f340 80fe 	ble.w	8027b92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027996:	2e00      	cmp	r6, #0
 8027998:	f000 80fd 	beq.w	8027b96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802799c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80279a0:	3401      	adds	r4, #1
 80279a2:	f100 80fc 	bmi.w	8027b9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80279a6:	45a6      	cmp	lr, r4
 80279a8:	f340 80f9 	ble.w	8027b9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80279ac:	2800      	cmp	r0, #0
 80279ae:	f000 80f9 	beq.w	8027ba4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80279b2:	2f00      	cmp	r7, #0
 80279b4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80279b8:	f2c0 80ef 	blt.w	8027b9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80279bc:	42bb      	cmp	r3, r7
 80279be:	f340 80ec 	ble.w	8027b9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80279c2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80279c6:	3701      	adds	r7, #1
 80279c8:	f100 80ef 	bmi.w	8027baa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80279cc:	42bb      	cmp	r3, r7
 80279ce:	f340 80ec 	ble.w	8027baa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80279d2:	2e00      	cmp	r6, #0
 80279d4:	f000 80eb 	beq.w	8027bae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80279d8:	6852      	ldr	r2, [r2, #4]
 80279da:	b2b6      	uxth	r6, r6
 80279dc:	b280      	uxth	r0, r0
 80279de:	fb00 fe06 	mul.w	lr, r0, r6
 80279e2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80279e6:	0136      	lsls	r6, r6, #4
 80279e8:	eba6 070e 	sub.w	r7, r6, lr
 80279ec:	b280      	uxth	r0, r0
 80279ee:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80279f2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80279f6:	b2bf      	uxth	r7, r7
 80279f8:	1a1b      	subs	r3, r3, r0
 80279fa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80279fe:	b29b      	uxth	r3, r3
 8027a00:	fb07 f60a 	mul.w	r6, r7, sl
 8027a04:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027a08:	fb0b 6603 	mla	r6, fp, r3, r6
 8027a0c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027a10:	fb00 6609 	mla	r6, r0, r9, r6
 8027a14:	fb0e 6608 	mla	r6, lr, r8, r6
 8027a18:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027a1c:	9600      	str	r6, [sp, #0]
 8027a1e:	2e00      	cmp	r6, #0
 8027a20:	f000 80af 	beq.w	8027b82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8027a24:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027a28:	fb0b fc0c 	mul.w	ip, fp, ip
 8027a2c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027a30:	fb0b f505 	mul.w	r5, fp, r5
 8027a34:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027a38:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027a3c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027a40:	44dc      	add	ip, fp
 8027a42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027a46:	9501      	str	r5, [sp, #4]
 8027a48:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027a4c:	9503      	str	r5, [sp, #12]
 8027a4e:	9d01      	ldr	r5, [sp, #4]
 8027a50:	9e02      	ldr	r6, [sp, #8]
 8027a52:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027a56:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027a5a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027a5e:	fb0a fc0c 	mul.w	ip, sl, ip
 8027a62:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027a66:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027a6a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027a6e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027a72:	4465      	add	r5, ip
 8027a74:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027a78:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027a7c:	fb09 fc0c 	mul.w	ip, r9, ip
 8027a80:	fb09 f904 	mul.w	r9, r9, r4
 8027a84:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027a88:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027a8c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027a90:	fb08 f404 	mul.w	r4, r8, r4
 8027a94:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027a98:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027a9c:	fb08 f802 	mul.w	r8, r8, r2
 8027aa0:	fb0a fa01 	mul.w	sl, sl, r1
 8027aa4:	0a22      	lsrs	r2, r4, #8
 8027aa6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8027aaa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027aae:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027ab2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027ab6:	4414      	add	r4, r2
 8027ab8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027abc:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027ac0:	0a2d      	lsrs	r5, r5, #8
 8027ac2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027ac6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027aca:	9a03      	ldr	r2, [sp, #12]
 8027acc:	8836      	ldrh	r6, [r6, #0]
 8027ace:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027ad2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027ad6:	437d      	muls	r5, r7
 8027ad8:	4461      	add	r1, ip
 8027ada:	0a24      	lsrs	r4, r4, #8
 8027adc:	fb02 5503 	mla	r5, r2, r3, r5
 8027ae0:	0a09      	lsrs	r1, r1, #8
 8027ae2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027ae6:	fb04 540e 	mla	r4, r4, lr, r5
 8027aea:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027aee:	fb01 4100 	mla	r1, r1, r0, r4
 8027af2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027af6:	0a09      	lsrs	r1, r1, #8
 8027af8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027afc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027b00:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027b04:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027b08:	fb07 f70a 	mul.w	r7, r7, sl
 8027b0c:	fb03 7101 	mla	r1, r3, r1, r7
 8027b10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027b14:	9b00      	ldr	r3, [sp, #0]
 8027b16:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027b1a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027b1e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027b22:	fb00 e101 	mla	r1, r0, r1, lr
 8027b26:	43da      	mvns	r2, r3
 8027b28:	1233      	asrs	r3, r6, #8
 8027b2a:	b2d2      	uxtb	r2, r2
 8027b2c:	10f0      	asrs	r0, r6, #3
 8027b2e:	0a09      	lsrs	r1, r1, #8
 8027b30:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027b34:	00f6      	lsls	r6, r6, #3
 8027b36:	4353      	muls	r3, r2
 8027b38:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027b3c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027b40:	b2f6      	uxtb	r6, r6
 8027b42:	4321      	orrs	r1, r4
 8027b44:	4350      	muls	r0, r2
 8027b46:	4356      	muls	r6, r2
 8027b48:	1c5a      	adds	r2, r3, #1
 8027b4a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027b4e:	0c0b      	lsrs	r3, r1, #16
 8027b50:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027b54:	1c42      	adds	r2, r0, #1
 8027b56:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027b5a:	0a0a      	lsrs	r2, r1, #8
 8027b5c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027b60:	021b      	lsls	r3, r3, #8
 8027b62:	00d2      	lsls	r2, r2, #3
 8027b64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027b68:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8027b6c:	4313      	orrs	r3, r2
 8027b6e:	1c72      	adds	r2, r6, #1
 8027b70:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8027b74:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027b78:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027b7c:	4319      	orrs	r1, r3
 8027b7e:	9b02      	ldr	r3, [sp, #8]
 8027b80:	8019      	strh	r1, [r3, #0]
 8027b82:	b005      	add	sp, #20
 8027b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027b88:	2500      	movs	r5, #0
 8027b8a:	e6fe      	b.n	802798a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8027b8c:	2100      	movs	r1, #0
 8027b8e:	460d      	mov	r5, r1
 8027b90:	e706      	b.n	80279a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b92:	2100      	movs	r1, #0
 8027b94:	e704      	b.n	80279a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b96:	4631      	mov	r1, r6
 8027b98:	e702      	b.n	80279a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b9a:	2400      	movs	r4, #0
 8027b9c:	e713      	b.n	80279c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8027b9e:	2200      	movs	r2, #0
 8027ba0:	4614      	mov	r4, r2
 8027ba2:	e71a      	b.n	80279da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027ba4:	4602      	mov	r2, r0
 8027ba6:	4604      	mov	r4, r0
 8027ba8:	e717      	b.n	80279da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027baa:	2200      	movs	r2, #0
 8027bac:	e715      	b.n	80279da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027bae:	4632      	mov	r2, r6
 8027bb0:	e713      	b.n	80279da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08027bb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027bb8:	b09b      	sub	sp, #108	; 0x6c
 8027bba:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027bbe:	9218      	str	r2, [sp, #96]	; 0x60
 8027bc0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8027bc2:	9116      	str	r1, [sp, #88]	; 0x58
 8027bc4:	9307      	str	r3, [sp, #28]
 8027bc6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8027bca:	9019      	str	r0, [sp, #100]	; 0x64
 8027bcc:	6850      	ldr	r0, [r2, #4]
 8027bce:	6812      	ldr	r2, [r2, #0]
 8027bd0:	fb00 1303 	mla	r3, r0, r3, r1
 8027bd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027bd8:	930a      	str	r3, [sp, #40]	; 0x28
 8027bda:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027bdc:	681b      	ldr	r3, [r3, #0]
 8027bde:	930f      	str	r3, [sp, #60]	; 0x3c
 8027be0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027be2:	2b00      	cmp	r3, #0
 8027be4:	dc03      	bgt.n	8027bee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027be6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027be8:	2b00      	cmp	r3, #0
 8027bea:	f340 8386 	ble.w	80282fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027bee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027bf0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027bf4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027bf8:	1e48      	subs	r0, r1, #1
 8027bfa:	1e57      	subs	r7, r2, #1
 8027bfc:	9b07      	ldr	r3, [sp, #28]
 8027bfe:	2b00      	cmp	r3, #0
 8027c00:	f340 8166 	ble.w	8027ed0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027c04:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027c08:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027c0c:	d406      	bmi.n	8027c1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027c0e:	4584      	cmp	ip, r0
 8027c10:	da04      	bge.n	8027c1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027c12:	2b00      	cmp	r3, #0
 8027c14:	db02      	blt.n	8027c1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027c16:	42bb      	cmp	r3, r7
 8027c18:	f2c0 815b 	blt.w	8027ed2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8027c1c:	f11c 0c01 	adds.w	ip, ip, #1
 8027c20:	f100 814b 	bmi.w	8027eba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c24:	4561      	cmp	r1, ip
 8027c26:	f2c0 8148 	blt.w	8027eba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c2a:	3301      	adds	r3, #1
 8027c2c:	f100 8145 	bmi.w	8027eba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c30:	429a      	cmp	r2, r3
 8027c32:	f2c0 8142 	blt.w	8027eba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c36:	9b07      	ldr	r3, [sp, #28]
 8027c38:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027c3a:	9317      	str	r3, [sp, #92]	; 0x5c
 8027c3c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027c3e:	2b00      	cmp	r3, #0
 8027c40:	f340 8165 	ble.w	8027f0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027c44:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8027c46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027c48:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027c4c:	689b      	ldr	r3, [r3, #8]
 8027c4e:	1422      	asrs	r2, r4, #16
 8027c50:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027c54:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027c58:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027c5c:	f100 81d5 	bmi.w	802800a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c60:	f103 38ff 	add.w	r8, r3, #4294967295
 8027c64:	4542      	cmp	r2, r8
 8027c66:	f280 81d0 	bge.w	802800a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c6a:	f1bc 0f00 	cmp.w	ip, #0
 8027c6e:	f2c0 81cc 	blt.w	802800a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c72:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027c76:	45c4      	cmp	ip, r8
 8027c78:	f280 81c7 	bge.w	802800a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c7c:	b21b      	sxth	r3, r3
 8027c7e:	fb0c 2203 	mla	r2, ip, r3, r2
 8027c82:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027c84:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027c88:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027c8c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027c90:	2900      	cmp	r1, #0
 8027c92:	f000 8182 	beq.w	8027f9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027c96:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027c9a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027c9c:	0e2d      	lsrs	r5, r5, #24
 8027c9e:	9512      	str	r5, [sp, #72]	; 0x48
 8027ca0:	b180      	cbz	r0, 8027cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027ca2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027ca6:	3b01      	subs	r3, #1
 8027ca8:	009b      	lsls	r3, r3, #2
 8027caa:	3304      	adds	r3, #4
 8027cac:	eb08 0c03 	add.w	ip, r8, r3
 8027cb0:	f858 3003 	ldr.w	r3, [r8, r3]
 8027cb4:	9308      	str	r3, [sp, #32]
 8027cb6:	0e1b      	lsrs	r3, r3, #24
 8027cb8:	9310      	str	r3, [sp, #64]	; 0x40
 8027cba:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027cbe:	930c      	str	r3, [sp, #48]	; 0x30
 8027cc0:	0e1b      	lsrs	r3, r3, #24
 8027cc2:	9313      	str	r3, [sp, #76]	; 0x4c
 8027cc4:	b289      	uxth	r1, r1
 8027cc6:	b280      	uxth	r0, r0
 8027cc8:	fb01 f900 	mul.w	r9, r1, r0
 8027ccc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027cd0:	0109      	lsls	r1, r1, #4
 8027cd2:	eba1 0809 	sub.w	r8, r1, r9
 8027cd6:	b280      	uxth	r0, r0
 8027cd8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027cdc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027cde:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027ce0:	fa1f f888 	uxth.w	r8, r8
 8027ce4:	1a09      	subs	r1, r1, r0
 8027ce6:	b289      	uxth	r1, r1
 8027ce8:	fb08 f303 	mul.w	r3, r8, r3
 8027cec:	fb01 330e 	mla	r3, r1, lr, r3
 8027cf0:	fb00 3305 	mla	r3, r0, r5, r3
 8027cf4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027cf6:	fb09 3305 	mla	r3, r9, r5, r3
 8027cfa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027cfe:	2b00      	cmp	r3, #0
 8027d00:	f000 80d2 	beq.w	8027ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027d04:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027d08:	d01b      	beq.n	8027d42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8027d0a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027d0e:	fb0e fa0a 	mul.w	sl, lr, sl
 8027d12:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027d16:	fb0e fe02 	mul.w	lr, lr, r2
 8027d1a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027d1e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027d22:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027d26:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027d2a:	4452      	add	r2, sl
 8027d2c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027d30:	0a12      	lsrs	r2, r2, #8
 8027d32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027d36:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027d3a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027d3e:	ea42 020c 	orr.w	r2, r2, ip
 8027d42:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d44:	2dff      	cmp	r5, #255	; 0xff
 8027d46:	d021      	beq.n	8027d8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027d48:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027d4a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027d4e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d50:	fb05 fb0b 	mul.w	fp, r5, fp
 8027d54:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027d56:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027d5a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027d60:	fb05 fa0a 	mul.w	sl, r5, sl
 8027d64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d68:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027d6c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027d70:	44de      	add	lr, fp
 8027d72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027d76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027d7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027d7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027d86:	ea4e 050a 	orr.w	r5, lr, sl
 8027d8a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027d8c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d8e:	2dff      	cmp	r5, #255	; 0xff
 8027d90:	d021      	beq.n	8027dd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027d92:	9d08      	ldr	r5, [sp, #32]
 8027d94:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027d98:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d9a:	fb05 fb0b 	mul.w	fp, r5, fp
 8027d9e:	9d08      	ldr	r5, [sp, #32]
 8027da0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027da4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027da6:	fb05 fa0e 	mul.w	sl, r5, lr
 8027daa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027dae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027db2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027db6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027dba:	44de      	add	lr, fp
 8027dbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027dc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027dc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027dc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027dcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027dd0:	ea4e 050a 	orr.w	r5, lr, sl
 8027dd4:	9508      	str	r5, [sp, #32]
 8027dd6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027dd8:	2dff      	cmp	r5, #255	; 0xff
 8027dda:	d021      	beq.n	8027e20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8027ddc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027dde:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027de2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027de4:	fb05 fb0b 	mul.w	fp, r5, fp
 8027de8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027dea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027dee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027df0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027df4:	fb05 fa0a 	mul.w	sl, r5, sl
 8027df8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027dfc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027e00:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027e04:	44de      	add	lr, fp
 8027e06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027e0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027e0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027e16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027e1a:	ea4e 050a 	orr.w	r5, lr, sl
 8027e1e:	950c      	str	r5, [sp, #48]	; 0x30
 8027e20:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e22:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027e26:	9d08      	ldr	r5, [sp, #32]
 8027e28:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027e2c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027e30:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027e34:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027e38:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027e3a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027e3e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027e42:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e44:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027e48:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027e4c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027e50:	fb08 f80e 	mul.w	r8, r8, lr
 8027e54:	fb01 8202 	mla	r2, r1, r2, r8
 8027e58:	9908      	ldr	r1, [sp, #32]
 8027e5a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8027e5e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027e60:	fb00 220a 	mla	r2, r0, sl, r2
 8027e64:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8027e68:	fb09 2900 	mla	r9, r9, r0, r2
 8027e6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e70:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027e74:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e78:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027e7c:	ea4c 0c09 	orr.w	ip, ip, r9
 8027e80:	2bff      	cmp	r3, #255	; 0xff
 8027e82:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8027e86:	f040 8091 	bne.w	8027fac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027e8a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8027e8e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8027e92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027e96:	f022 0207 	bic.w	r2, r2, #7
 8027e9a:	431a      	orrs	r2, r3
 8027e9c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027ea0:	ea4c 0c02 	orr.w	ip, ip, r2
 8027ea4:	f8a7 c000 	strh.w	ip, [r7]
 8027ea8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027eaa:	441c      	add	r4, r3
 8027eac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027eae:	441e      	add	r6, r3
 8027eb0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027eb2:	3b01      	subs	r3, #1
 8027eb4:	3702      	adds	r7, #2
 8027eb6:	9317      	str	r3, [sp, #92]	; 0x5c
 8027eb8:	e6c0      	b.n	8027c3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027eba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027ebc:	441c      	add	r4, r3
 8027ebe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027ec0:	441e      	add	r6, r3
 8027ec2:	9b07      	ldr	r3, [sp, #28]
 8027ec4:	3b01      	subs	r3, #1
 8027ec6:	9307      	str	r3, [sp, #28]
 8027ec8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027eca:	3302      	adds	r3, #2
 8027ecc:	930a      	str	r3, [sp, #40]	; 0x28
 8027ece:	e695      	b.n	8027bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027ed0:	d024      	beq.n	8027f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8027ed2:	9b07      	ldr	r3, [sp, #28]
 8027ed4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8027ed6:	3b01      	subs	r3, #1
 8027ed8:	fb00 4003 	mla	r0, r0, r3, r4
 8027edc:	1400      	asrs	r0, r0, #16
 8027ede:	f53f aeaa 	bmi.w	8027c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027ee2:	3901      	subs	r1, #1
 8027ee4:	4288      	cmp	r0, r1
 8027ee6:	f6bf aea6 	bge.w	8027c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027eea:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8027eec:	fb01 6303 	mla	r3, r1, r3, r6
 8027ef0:	141b      	asrs	r3, r3, #16
 8027ef2:	f53f aea0 	bmi.w	8027c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027ef6:	3a01      	subs	r2, #1
 8027ef8:	4293      	cmp	r3, r2
 8027efa:	f6bf ae9c 	bge.w	8027c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027efe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027f02:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8027f06:	f1bb 0f00 	cmp.w	fp, #0
 8027f0a:	f300 809a 	bgt.w	8028042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027f0e:	9b07      	ldr	r3, [sp, #28]
 8027f10:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027f14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027f16:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027f1a:	930a      	str	r3, [sp, #40]	; 0x28
 8027f1c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027f1e:	2b00      	cmp	r3, #0
 8027f20:	f340 81eb 	ble.w	80282fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027f24:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027f28:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027f2c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027f30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027f36:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027f3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027f3e:	eef0 6a62 	vmov.f32	s13, s5
 8027f42:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027f46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027f4e:	ee16 4a90 	vmov	r4, s13
 8027f52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027f56:	eef0 6a43 	vmov.f32	s13, s6
 8027f5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027f5e:	ee12 2a90 	vmov	r2, s5
 8027f62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027f66:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f6a:	ee13 2a10 	vmov	r2, s6
 8027f6e:	9327      	str	r3, [sp, #156]	; 0x9c
 8027f70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f72:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f76:	9328      	str	r3, [sp, #160]	; 0xa0
 8027f78:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027f7a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8027f7c:	3b01      	subs	r3, #1
 8027f7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f82:	9316      	str	r3, [sp, #88]	; 0x58
 8027f84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f86:	bf08      	it	eq
 8027f88:	4613      	moveq	r3, r2
 8027f8a:	ee16 6a90 	vmov	r6, s13
 8027f8e:	9307      	str	r3, [sp, #28]
 8027f90:	eeb0 3a67 	vmov.f32	s6, s15
 8027f94:	eef0 2a47 	vmov.f32	s5, s14
 8027f98:	e622      	b.n	8027be0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8027f9a:	2800      	cmp	r0, #0
 8027f9c:	f43f ae92 	beq.w	8027cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027fa0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027fa4:	9308      	str	r3, [sp, #32]
 8027fa6:	0e1b      	lsrs	r3, r3, #24
 8027fa8:	9310      	str	r3, [sp, #64]	; 0x40
 8027faa:	e68b      	b.n	8027cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027fac:	8839      	ldrh	r1, [r7, #0]
 8027fae:	4dd4      	ldr	r5, [pc, #848]	; (8028300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8027fb0:	43db      	mvns	r3, r3
 8027fb2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8027fb6:	fa5f f883 	uxtb.w	r8, r3
 8027fba:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8027fbe:	fb0e fe08 	mul.w	lr, lr, r8
 8027fc2:	10c8      	asrs	r0, r1, #3
 8027fc4:	00cb      	lsls	r3, r1, #3
 8027fc6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027fca:	f10e 0101 	add.w	r1, lr, #1
 8027fce:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8027fd2:	fb00 f008 	mul.w	r0, r0, r8
 8027fd6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8027fda:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8027fde:	f100 0e01 	add.w	lr, r0, #1
 8027fe2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8027fe6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027fea:	b2db      	uxtb	r3, r3
 8027fec:	b2c9      	uxtb	r1, r1
 8027fee:	00d2      	lsls	r2, r2, #3
 8027ff0:	fb03 f308 	mul.w	r3, r3, r8
 8027ff4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8027ff8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027ffc:	430a      	orrs	r2, r1
 8027ffe:	1c59      	adds	r1, r3, #1
 8028000:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028004:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8028008:	e748      	b.n	8027e9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802800a:	f112 0801 	adds.w	r8, r2, #1
 802800e:	f53f af4b 	bmi.w	8027ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028012:	4543      	cmp	r3, r8
 8028014:	f6ff af48 	blt.w	8027ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028018:	f11c 0801 	adds.w	r8, ip, #1
 802801c:	f53f af44 	bmi.w	8027ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028020:	45c6      	cmp	lr, r8
 8028022:	f6ff af41 	blt.w	8027ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028026:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802802a:	fa0f f28e 	sxth.w	r2, lr
 802802e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8028032:	9200      	str	r2, [sp, #0]
 8028034:	b21b      	sxth	r3, r3
 8028036:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028038:	9819      	ldr	r0, [sp, #100]	; 0x64
 802803a:	4639      	mov	r1, r7
 802803c:	f7ff fc87 	bl	802794e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8028040:	e732      	b.n	8027ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028042:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028044:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028046:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802804a:	1421      	asrs	r1, r4, #16
 802804c:	1433      	asrs	r3, r6, #16
 802804e:	fb07 1303 	mla	r3, r7, r3, r1
 8028052:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028054:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028058:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802805c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028060:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028064:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028068:	2a00      	cmp	r2, #0
 802806a:	f000 8107 	beq.w	802827c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802806e:	684d      	ldr	r5, [r1, #4]
 8028070:	950d      	str	r5, [sp, #52]	; 0x34
 8028072:	0e2d      	lsrs	r5, r5, #24
 8028074:	9514      	str	r5, [sp, #80]	; 0x50
 8028076:	b178      	cbz	r0, 8028098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028078:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802807c:	3f01      	subs	r7, #1
 802807e:	00bf      	lsls	r7, r7, #2
 8028080:	3704      	adds	r7, #4
 8028082:	eb01 0e07 	add.w	lr, r1, r7
 8028086:	59c9      	ldr	r1, [r1, r7]
 8028088:	9109      	str	r1, [sp, #36]	; 0x24
 802808a:	0e09      	lsrs	r1, r1, #24
 802808c:	9111      	str	r1, [sp, #68]	; 0x44
 802808e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8028092:	910e      	str	r1, [sp, #56]	; 0x38
 8028094:	0e09      	lsrs	r1, r1, #24
 8028096:	9115      	str	r1, [sp, #84]	; 0x54
 8028098:	b292      	uxth	r2, r2
 802809a:	b280      	uxth	r0, r0
 802809c:	fb02 f900 	mul.w	r9, r2, r0
 80280a0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80280a4:	0112      	lsls	r2, r2, #4
 80280a6:	eba2 0e09 	sub.w	lr, r2, r9
 80280aa:	b280      	uxth	r0, r0
 80280ac:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80280b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80280b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80280b4:	fa1f fe8e 	uxth.w	lr, lr
 80280b8:	1a09      	subs	r1, r1, r0
 80280ba:	b289      	uxth	r1, r1
 80280bc:	fb0e f202 	mul.w	r2, lr, r2
 80280c0:	fb01 220c 	mla	r2, r1, ip, r2
 80280c4:	fb00 2205 	mla	r2, r0, r5, r2
 80280c8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80280ca:	fb09 2205 	mla	r2, r9, r5, r2
 80280ce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80280d2:	2a00      	cmp	r2, #0
 80280d4:	f000 80c9 	beq.w	802826a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80280d8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80280dc:	d019      	beq.n	8028112 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80280de:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80280e2:	fb0c fa0a 	mul.w	sl, ip, sl
 80280e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80280ea:	fb0c fc03 	mul.w	ip, ip, r3
 80280ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80280f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80280f6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80280fa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80280fe:	4453      	add	r3, sl
 8028100:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8028104:	0a1b      	lsrs	r3, r3, #8
 8028106:	0a3f      	lsrs	r7, r7, #8
 8028108:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802810c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8028110:	433b      	orrs	r3, r7
 8028112:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028114:	2dff      	cmp	r5, #255	; 0xff
 8028116:	d020      	beq.n	802815a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8028118:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802811a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802811e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028120:	436f      	muls	r7, r5
 8028122:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8028124:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028128:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802812a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802812e:	fb05 fa0a 	mul.w	sl, r5, sl
 8028132:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028136:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802813a:	44bc      	add	ip, r7
 802813c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028140:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028144:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028148:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802814c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028150:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028154:	ea4c 050a 	orr.w	r5, ip, sl
 8028158:	950d      	str	r5, [sp, #52]	; 0x34
 802815a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802815c:	2dff      	cmp	r5, #255	; 0xff
 802815e:	d020      	beq.n	80281a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8028160:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028162:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028166:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028168:	436f      	muls	r7, r5
 802816a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802816c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028170:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028172:	fb05 fa0c 	mul.w	sl, r5, ip
 8028176:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802817a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802817e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028182:	44bc      	add	ip, r7
 8028184:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028188:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802818c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028190:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028194:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028198:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802819c:	ea4c 050a 	orr.w	r5, ip, sl
 80281a0:	9509      	str	r5, [sp, #36]	; 0x24
 80281a2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80281a4:	2dff      	cmp	r5, #255	; 0xff
 80281a6:	d020      	beq.n	80281ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80281a8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80281aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80281ae:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80281b0:	436f      	muls	r7, r5
 80281b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80281b4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80281b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80281ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80281be:	fb05 fa0a 	mul.w	sl, r5, sl
 80281c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80281c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80281ca:	44bc      	add	ip, r7
 80281cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80281d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80281d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80281d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80281dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80281e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80281e4:	ea4c 050a 	orr.w	r5, ip, sl
 80281e8:	950e      	str	r5, [sp, #56]	; 0x38
 80281ea:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80281ec:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80281f0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80281f2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80281f6:	fb0e f707 	mul.w	r7, lr, r7
 80281fa:	fb01 770c 	mla	r7, r1, ip, r7
 80281fe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8028202:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028204:	fb00 770c 	mla	r7, r0, ip, r7
 8028208:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802820c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802820e:	fb09 770c 	mla	r7, r9, ip, r7
 8028212:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028216:	fb0e fe0c 	mul.w	lr, lr, ip
 802821a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802821e:	fb01 e303 	mla	r3, r1, r3, lr
 8028222:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028224:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8028228:	990e      	ldr	r1, [sp, #56]	; 0x38
 802822a:	fb00 330a 	mla	r3, r0, sl, r3
 802822e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8028232:	fb09 3c0c 	mla	ip, r9, ip, r3
 8028236:	0a3f      	lsrs	r7, r7, #8
 8028238:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802823c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8028240:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028244:	ea47 070c 	orr.w	r7, r7, ip
 8028248:	2aff      	cmp	r2, #255	; 0xff
 802824a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802824e:	d11e      	bne.n	802828e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8028250:	097a      	lsrs	r2, r7, #5
 8028252:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8028256:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802825a:	f023 0307 	bic.w	r3, r3, #7
 802825e:	4313      	orrs	r3, r2
 8028260:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8028264:	431f      	orrs	r7, r3
 8028266:	f8a8 7000 	strh.w	r7, [r8]
 802826a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802826c:	441c      	add	r4, r3
 802826e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028270:	f108 0802 	add.w	r8, r8, #2
 8028274:	441e      	add	r6, r3
 8028276:	f10b 3bff 	add.w	fp, fp, #4294967295
 802827a:	e644      	b.n	8027f06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802827c:	2800      	cmp	r0, #0
 802827e:	f43f af0b 	beq.w	8028098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028282:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8028286:	9109      	str	r1, [sp, #36]	; 0x24
 8028288:	0e09      	lsrs	r1, r1, #24
 802828a:	9111      	str	r1, [sp, #68]	; 0x44
 802828c:	e704      	b.n	8028098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802828e:	f8b8 1000 	ldrh.w	r1, [r8]
 8028292:	43d2      	mvns	r2, r2
 8028294:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8028298:	fa5f fe82 	uxtb.w	lr, r2
 802829c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80282a0:	fb0c fc0e 	mul.w	ip, ip, lr
 80282a4:	10c8      	asrs	r0, r1, #3
 80282a6:	00ca      	lsls	r2, r1, #3
 80282a8:	f10c 0101 	add.w	r1, ip, #1
 80282ac:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80282b0:	0c39      	lsrs	r1, r7, #16
 80282b2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80282b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80282ba:	4911      	ldr	r1, [pc, #68]	; (8028300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80282bc:	fb00 f00e 	mul.w	r0, r0, lr
 80282c0:	fa5f fc8c 	uxtb.w	ip, ip
 80282c4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80282c8:	b2d2      	uxtb	r2, r2
 80282ca:	1c41      	adds	r1, r0, #1
 80282cc:	fb02 f20e 	mul.w	r2, r2, lr
 80282d0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80282d4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80282d8:	1c51      	adds	r1, r2, #1
 80282da:	00c0      	lsls	r0, r0, #3
 80282dc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80282e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80282e4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80282e8:	ea4c 0c00 	orr.w	ip, ip, r0
 80282ec:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80282f0:	ea47 0c0c 	orr.w	ip, r7, ip
 80282f4:	f8a8 c000 	strh.w	ip, [r8]
 80282f8:	e7b7      	b.n	802826a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80282fa:	b01b      	add	sp, #108	; 0x6c
 80282fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028300:	fffff800 	.word	0xfffff800

08028304 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8028304:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028308:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802830c:	2d00      	cmp	r5, #0
 802830e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028312:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028316:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802831a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802831e:	fb05 0e03 	mla	lr, r5, r3, r0
 8028322:	f2c0 808c 	blt.w	802843e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8028326:	45a9      	cmp	r9, r5
 8028328:	f340 8089 	ble.w	802843e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802832c:	2800      	cmp	r0, #0
 802832e:	f2c0 8084 	blt.w	802843a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028332:	4580      	cmp	r8, r0
 8028334:	f340 8081 	ble.w	802843a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028338:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802833c:	f01e 0f01 	tst.w	lr, #1
 8028340:	5d16      	ldrb	r6, [r2, r4]
 8028342:	bf0c      	ite	eq
 8028344:	f006 060f 	andeq.w	r6, r6, #15
 8028348:	1136      	asrne	r6, r6, #4
 802834a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802834e:	b2f6      	uxtb	r6, r6
 8028350:	1c44      	adds	r4, r0, #1
 8028352:	d477      	bmi.n	8028444 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028354:	45a0      	cmp	r8, r4
 8028356:	dd75      	ble.n	8028444 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028358:	2f00      	cmp	r7, #0
 802835a:	d075      	beq.n	8028448 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802835c:	f10e 0a01 	add.w	sl, lr, #1
 8028360:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028364:	f01a 0f01 	tst.w	sl, #1
 8028368:	5d14      	ldrb	r4, [r2, r4]
 802836a:	bf0c      	ite	eq
 802836c:	f004 040f 	andeq.w	r4, r4, #15
 8028370:	1124      	asrne	r4, r4, #4
 8028372:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028376:	b2e4      	uxtb	r4, r4
 8028378:	3501      	adds	r5, #1
 802837a:	d469      	bmi.n	8028450 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802837c:	45a9      	cmp	r9, r5
 802837e:	dd67      	ble.n	8028450 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028380:	f1bc 0f00 	cmp.w	ip, #0
 8028384:	d067      	beq.n	8028456 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8028386:	2800      	cmp	r0, #0
 8028388:	db60      	blt.n	802844c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802838a:	4580      	cmp	r8, r0
 802838c:	dd5e      	ble.n	802844c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802838e:	eb03 090e 	add.w	r9, r3, lr
 8028392:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028396:	f019 0f01 	tst.w	r9, #1
 802839a:	5d55      	ldrb	r5, [r2, r5]
 802839c:	bf0c      	ite	eq
 802839e:	f005 050f 	andeq.w	r5, r5, #15
 80283a2:	112d      	asrne	r5, r5, #4
 80283a4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80283a8:	b2ed      	uxtb	r5, r5
 80283aa:	3001      	adds	r0, #1
 80283ac:	d456      	bmi.n	802845c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80283ae:	4580      	cmp	r8, r0
 80283b0:	dd54      	ble.n	802845c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80283b2:	2f00      	cmp	r7, #0
 80283b4:	d054      	beq.n	8028460 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80283b6:	3301      	adds	r3, #1
 80283b8:	449e      	add	lr, r3
 80283ba:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80283be:	f01e 0f01 	tst.w	lr, #1
 80283c2:	5cd0      	ldrb	r0, [r2, r3]
 80283c4:	bf0c      	ite	eq
 80283c6:	f000 000f 	andeq.w	r0, r0, #15
 80283ca:	1100      	asrne	r0, r0, #4
 80283cc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80283d0:	b2c3      	uxtb	r3, r0
 80283d2:	b2ba      	uxth	r2, r7
 80283d4:	fa1f fc8c 	uxth.w	ip, ip
 80283d8:	fb02 f00c 	mul.w	r0, r2, ip
 80283dc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80283e0:	0112      	lsls	r2, r2, #4
 80283e2:	fa1f fc8c 	uxth.w	ip, ip
 80283e6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80283ea:	1a12      	subs	r2, r2, r0
 80283ec:	eba7 070c 	sub.w	r7, r7, ip
 80283f0:	b292      	uxth	r2, r2
 80283f2:	b2bf      	uxth	r7, r7
 80283f4:	4362      	muls	r2, r4
 80283f6:	fb06 2207 	mla	r2, r6, r7, r2
 80283fa:	fb0c 2505 	mla	r5, ip, r5, r2
 80283fe:	fb00 5303 	mla	r3, r0, r3, r5
 8028402:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028406:	b1b3      	cbz	r3, 8028436 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8028408:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802840c:	435a      	muls	r2, r3
 802840e:	1c53      	adds	r3, r2, #1
 8028410:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028414:	4a2d      	ldr	r2, [pc, #180]	; (80284cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8028416:	121b      	asrs	r3, r3, #8
 8028418:	6812      	ldr	r2, [r2, #0]
 802841a:	2bff      	cmp	r3, #255	; 0xff
 802841c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8028420:	d120      	bne.n	8028464 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8028422:	4b2b      	ldr	r3, [pc, #172]	; (80284d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8028424:	0950      	lsrs	r0, r2, #5
 8028426:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802842a:	4033      	ands	r3, r6
 802842c:	4318      	orrs	r0, r3
 802842e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028432:	4302      	orrs	r2, r0
 8028434:	800a      	strh	r2, [r1, #0]
 8028436:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802843a:	2600      	movs	r6, #0
 802843c:	e788      	b.n	8028350 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802843e:	2400      	movs	r4, #0
 8028440:	4626      	mov	r6, r4
 8028442:	e799      	b.n	8028378 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028444:	2400      	movs	r4, #0
 8028446:	e797      	b.n	8028378 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028448:	463c      	mov	r4, r7
 802844a:	e795      	b.n	8028378 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802844c:	2500      	movs	r5, #0
 802844e:	e7ac      	b.n	80283aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8028450:	2300      	movs	r3, #0
 8028452:	461d      	mov	r5, r3
 8028454:	e7bd      	b.n	80283d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028456:	4663      	mov	r3, ip
 8028458:	4665      	mov	r5, ip
 802845a:	e7ba      	b.n	80283d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802845c:	2300      	movs	r3, #0
 802845e:	e7b8      	b.n	80283d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028460:	463b      	mov	r3, r7
 8028462:	e7b6      	b.n	80283d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028464:	880d      	ldrh	r5, [r1, #0]
 8028466:	b29f      	uxth	r7, r3
 8028468:	122c      	asrs	r4, r5, #8
 802846a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802846e:	43db      	mvns	r3, r3
 8028470:	b2db      	uxtb	r3, r3
 8028472:	fb10 f007 	smulbb	r0, r0, r7
 8028476:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802847a:	fb04 0403 	mla	r4, r4, r3, r0
 802847e:	b2f6      	uxtb	r6, r6
 8028480:	10e8      	asrs	r0, r5, #3
 8028482:	b2d2      	uxtb	r2, r2
 8028484:	00ed      	lsls	r5, r5, #3
 8028486:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802848a:	fb12 f207 	smulbb	r2, r2, r7
 802848e:	fb16 f607 	smulbb	r6, r6, r7
 8028492:	b2ed      	uxtb	r5, r5
 8028494:	b2a4      	uxth	r4, r4
 8028496:	fb00 6603 	mla	r6, r0, r3, r6
 802849a:	fb05 2303 	mla	r3, r5, r3, r2
 802849e:	b29a      	uxth	r2, r3
 80284a0:	1c63      	adds	r3, r4, #1
 80284a2:	b2b0      	uxth	r0, r6
 80284a4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80284a8:	1c53      	adds	r3, r2, #1
 80284aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80284ae:	1c42      	adds	r2, r0, #1
 80284b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80284b4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80284b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80284bc:	0940      	lsrs	r0, r0, #5
 80284be:	4323      	orrs	r3, r4
 80284c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80284c4:	4303      	orrs	r3, r0
 80284c6:	800b      	strh	r3, [r1, #0]
 80284c8:	e7b5      	b.n	8028436 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80284ca:	bf00      	nop
 80284cc:	2001384c 	.word	0x2001384c
 80284d0:	00fff800 	.word	0x00fff800

080284d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80284d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284d8:	b097      	sub	sp, #92	; 0x5c
 80284da:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80284de:	9214      	str	r2, [sp, #80]	; 0x50
 80284e0:	9309      	str	r3, [sp, #36]	; 0x24
 80284e2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80284e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80284e8:	910d      	str	r1, [sp, #52]	; 0x34
 80284ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80284ec:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80284f0:	9015      	str	r0, [sp, #84]	; 0x54
 80284f2:	6850      	ldr	r0, [r2, #4]
 80284f4:	6812      	ldr	r2, [r2, #0]
 80284f6:	fb00 1303 	mla	r3, r0, r3, r1
 80284fa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80284fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028500:	689b      	ldr	r3, [r3, #8]
 8028502:	3301      	adds	r3, #1
 8028504:	f023 0301 	bic.w	r3, r3, #1
 8028508:	930a      	str	r3, [sp, #40]	; 0x28
 802850a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802850c:	681f      	ldr	r7, [r3, #0]
 802850e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028510:	2b00      	cmp	r3, #0
 8028512:	dc03      	bgt.n	802851c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8028514:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8028516:	2b00      	cmp	r3, #0
 8028518:	f340 8287 	ble.w	8028a2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802851c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802851e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028522:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028526:	1e48      	subs	r0, r1, #1
 8028528:	f102 3cff 	add.w	ip, r2, #4294967295
 802852c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802852e:	2b00      	cmp	r3, #0
 8028530:	f340 80c4 	ble.w	80286bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8028534:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028538:	ea4f 4326 	mov.w	r3, r6, asr #16
 802853c:	d406      	bmi.n	802854c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802853e:	4586      	cmp	lr, r0
 8028540:	da04      	bge.n	802854c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028542:	2b00      	cmp	r3, #0
 8028544:	db02      	blt.n	802854c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028546:	4563      	cmp	r3, ip
 8028548:	f2c0 80b9 	blt.w	80286be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802854c:	f11e 0e01 	adds.w	lr, lr, #1
 8028550:	f100 80aa 	bmi.w	80286a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028554:	4571      	cmp	r1, lr
 8028556:	f2c0 80a7 	blt.w	80286a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802855a:	3301      	adds	r3, #1
 802855c:	f100 80a4 	bmi.w	80286a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028560:	429a      	cmp	r2, r3
 8028562:	f2c0 80a1 	blt.w	80286a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028566:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028568:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802856c:	930e      	str	r3, [sp, #56]	; 0x38
 802856e:	46c8      	mov	r8, r9
 8028570:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028572:	2b00      	cmp	r3, #0
 8028574:	f340 80c3 	ble.w	80286fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8028578:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802857a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802857e:	1423      	asrs	r3, r4, #16
 8028580:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028584:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028588:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802858c:	f100 814d 	bmi.w	802882a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028590:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028594:	455b      	cmp	r3, fp
 8028596:	f280 8148 	bge.w	802882a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802859a:	2800      	cmp	r0, #0
 802859c:	f2c0 8145 	blt.w	802882a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80285a0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80285a4:	4558      	cmp	r0, fp
 80285a6:	f280 8140 	bge.w	802882a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80285aa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80285ac:	fb00 3305 	mla	r3, r0, r5, r3
 80285b0:	0858      	lsrs	r0, r3, #1
 80285b2:	07dd      	lsls	r5, r3, #31
 80285b4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80285b8:	bf54      	ite	pl
 80285ba:	f00c 0c0f 	andpl.w	ip, ip, #15
 80285be:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80285c2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80285c6:	fa5f fc8c 	uxtb.w	ip, ip
 80285ca:	2a00      	cmp	r2, #0
 80285cc:	f000 80db 	beq.w	8028786 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80285d0:	1c58      	adds	r0, r3, #1
 80285d2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80285d6:	07c0      	lsls	r0, r0, #31
 80285d8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80285dc:	bf54      	ite	pl
 80285de:	f00e 0e0f 	andpl.w	lr, lr, #15
 80285e2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80285e6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80285ea:	fa5f f08e 	uxtb.w	r0, lr
 80285ee:	9010      	str	r0, [sp, #64]	; 0x40
 80285f0:	b1c9      	cbz	r1, 8028626 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80285f2:	4453      	add	r3, sl
 80285f4:	0858      	lsrs	r0, r3, #1
 80285f6:	07dd      	lsls	r5, r3, #31
 80285f8:	5c38      	ldrb	r0, [r7, r0]
 80285fa:	bf54      	ite	pl
 80285fc:	f000 000f 	andpl.w	r0, r0, #15
 8028600:	1100      	asrmi	r0, r0, #4
 8028602:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028606:	3301      	adds	r3, #1
 8028608:	b2c0      	uxtb	r0, r0
 802860a:	900b      	str	r0, [sp, #44]	; 0x2c
 802860c:	0858      	lsrs	r0, r3, #1
 802860e:	07dd      	lsls	r5, r3, #31
 8028610:	f817 e000 	ldrb.w	lr, [r7, r0]
 8028614:	bf54      	ite	pl
 8028616:	f00e 030f 	andpl.w	r3, lr, #15
 802861a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802861e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028622:	b2db      	uxtb	r3, r3
 8028624:	9311      	str	r3, [sp, #68]	; 0x44
 8028626:	b292      	uxth	r2, r2
 8028628:	b289      	uxth	r1, r1
 802862a:	fb02 f301 	mul.w	r3, r2, r1
 802862e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028632:	0112      	lsls	r2, r2, #4
 8028634:	b289      	uxth	r1, r1
 8028636:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802863a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802863c:	1ad2      	subs	r2, r2, r3
 802863e:	1a40      	subs	r0, r0, r1
 8028640:	b292      	uxth	r2, r2
 8028642:	436a      	muls	r2, r5
 8028644:	b280      	uxth	r0, r0
 8028646:	fb0c 2c00 	mla	ip, ip, r0, r2
 802864a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802864c:	fb01 c102 	mla	r1, r1, r2, ip
 8028650:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028652:	fb03 1302 	mla	r3, r3, r2, r1
 8028656:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802865a:	b1db      	cbz	r3, 8028694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802865c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802865e:	4353      	muls	r3, r2
 8028660:	1c5a      	adds	r2, r3, #1
 8028662:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028666:	4ac6      	ldr	r2, [pc, #792]	; (8028980 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028668:	121b      	asrs	r3, r3, #8
 802866a:	6812      	ldr	r2, [r2, #0]
 802866c:	2bff      	cmp	r3, #255	; 0xff
 802866e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028672:	f040 8099 	bne.w	80287a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8028676:	0953      	lsrs	r3, r2, #5
 8028678:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802867c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028680:	f02c 0c07 	bic.w	ip, ip, #7
 8028684:	ea43 0c0c 	orr.w	ip, r3, ip
 8028688:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802868c:	ea4c 0202 	orr.w	r2, ip, r2
 8028690:	f8a8 2000 	strh.w	r2, [r8]
 8028694:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028696:	441c      	add	r4, r3
 8028698:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802869a:	441e      	add	r6, r3
 802869c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802869e:	3b01      	subs	r3, #1
 80286a0:	f108 0802 	add.w	r8, r8, #2
 80286a4:	930e      	str	r3, [sp, #56]	; 0x38
 80286a6:	e763      	b.n	8028570 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80286a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80286aa:	441c      	add	r4, r3
 80286ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80286ae:	441e      	add	r6, r3
 80286b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286b2:	3b01      	subs	r3, #1
 80286b4:	9309      	str	r3, [sp, #36]	; 0x24
 80286b6:	f109 0902 	add.w	r9, r9, #2
 80286ba:	e737      	b.n	802852c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80286bc:	d024      	beq.n	8028708 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80286be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286c0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80286c2:	3b01      	subs	r3, #1
 80286c4:	fb00 4003 	mla	r0, r0, r3, r4
 80286c8:	1400      	asrs	r0, r0, #16
 80286ca:	f53f af4c 	bmi.w	8028566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286ce:	3901      	subs	r1, #1
 80286d0:	4288      	cmp	r0, r1
 80286d2:	f6bf af48 	bge.w	8028566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286d6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80286d8:	fb01 6303 	mla	r3, r1, r3, r6
 80286dc:	141b      	asrs	r3, r3, #16
 80286de:	f53f af42 	bmi.w	8028566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286e2:	3a01      	subs	r2, #1
 80286e4:	4293      	cmp	r3, r2
 80286e6:	f6bf af3e 	bge.w	8028566 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286ea:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80286ee:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80286f2:	930e      	str	r3, [sp, #56]	; 0x38
 80286f4:	46c8      	mov	r8, r9
 80286f6:	f1bb 0f00 	cmp.w	fp, #0
 80286fa:	f300 80b7 	bgt.w	802886c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80286fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028700:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8028704:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028708:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802870a:	2b00      	cmp	r3, #0
 802870c:	f340 818d 	ble.w	8028a2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8028710:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028714:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028718:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802871c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802871e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028722:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028726:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802872a:	eef0 6a62 	vmov.f32	s13, s5
 802872e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028732:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028736:	ee77 2a62 	vsub.f32	s5, s14, s5
 802873a:	ee16 4a90 	vmov	r4, s13
 802873e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028742:	eef0 6a43 	vmov.f32	s13, s6
 8028746:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802874a:	ee12 2a90 	vmov	r2, s5
 802874e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028752:	fb92 f3f3 	sdiv	r3, r2, r3
 8028756:	ee13 2a10 	vmov	r2, s6
 802875a:	9323      	str	r3, [sp, #140]	; 0x8c
 802875c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802875e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028762:	9324      	str	r3, [sp, #144]	; 0x90
 8028764:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028766:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028768:	3b01      	subs	r3, #1
 802876a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802876e:	930d      	str	r3, [sp, #52]	; 0x34
 8028770:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028772:	bf08      	it	eq
 8028774:	4613      	moveq	r3, r2
 8028776:	ee16 6a90 	vmov	r6, s13
 802877a:	9309      	str	r3, [sp, #36]	; 0x24
 802877c:	eeb0 3a67 	vmov.f32	s6, s15
 8028780:	eef0 2a47 	vmov.f32	s5, s14
 8028784:	e6c3      	b.n	802850e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028786:	2900      	cmp	r1, #0
 8028788:	f43f af4d 	beq.w	8028626 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802878c:	eb0a 0003 	add.w	r0, sl, r3
 8028790:	0843      	lsrs	r3, r0, #1
 8028792:	07c0      	lsls	r0, r0, #31
 8028794:	5cfb      	ldrb	r3, [r7, r3]
 8028796:	bf54      	ite	pl
 8028798:	f003 030f 	andpl.w	r3, r3, #15
 802879c:	111b      	asrmi	r3, r3, #4
 802879e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80287a2:	b2db      	uxtb	r3, r3
 80287a4:	930b      	str	r3, [sp, #44]	; 0x2c
 80287a6:	e73e      	b.n	8028626 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80287a8:	f8b8 e000 	ldrh.w	lr, [r8]
 80287ac:	fa1f fb83 	uxth.w	fp, r3
 80287b0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80287b4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80287b8:	43db      	mvns	r3, r3
 80287ba:	b2db      	uxtb	r3, r3
 80287bc:	fb11 f10b 	smulbb	r1, r1, fp
 80287c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80287c4:	fb00 1003 	mla	r0, r0, r3, r1
 80287c8:	fa5f fc8c 	uxtb.w	ip, ip
 80287cc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80287d0:	b2d2      	uxtb	r2, r2
 80287d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80287d6:	b280      	uxth	r0, r0
 80287d8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80287dc:	fb1c fc0b 	smulbb	ip, ip, fp
 80287e0:	fa5f fe8e 	uxtb.w	lr, lr
 80287e4:	fb12 fb0b 	smulbb	fp, r2, fp
 80287e8:	fb01 cc03 	mla	ip, r1, r3, ip
 80287ec:	fb0e bb03 	mla	fp, lr, r3, fp
 80287f0:	1c43      	adds	r3, r0, #1
 80287f2:	fa1f fc8c 	uxth.w	ip, ip
 80287f6:	fa1f fb8b 	uxth.w	fp, fp
 80287fa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80287fe:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8028802:	f10c 0101 	add.w	r1, ip, #1
 8028806:	f10b 0001 	add.w	r0, fp, #1
 802880a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802880e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028812:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028816:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802881a:	4318      	orrs	r0, r3
 802881c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028820:	ea40 000c 	orr.w	r0, r0, ip
 8028824:	f8a8 0000 	strh.w	r0, [r8]
 8028828:	e734      	b.n	8028694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802882a:	f113 0b01 	adds.w	fp, r3, #1
 802882e:	f53f af31 	bmi.w	8028694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028832:	45dc      	cmp	ip, fp
 8028834:	f6ff af2e 	blt.w	8028694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028838:	f110 0b01 	adds.w	fp, r0, #1
 802883c:	f53f af2a 	bmi.w	8028694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028840:	45de      	cmp	lr, fp
 8028842:	f6ff af27 	blt.w	8028694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028846:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028848:	9302      	str	r3, [sp, #8]
 802884a:	fa0f f38e 	sxth.w	r3, lr
 802884e:	9301      	str	r3, [sp, #4]
 8028850:	fa0f f38c 	sxth.w	r3, ip
 8028854:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028858:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802885c:	9300      	str	r3, [sp, #0]
 802885e:	463a      	mov	r2, r7
 8028860:	4653      	mov	r3, sl
 8028862:	4641      	mov	r1, r8
 8028864:	9815      	ldr	r0, [sp, #84]	; 0x54
 8028866:	f7ff fd4d 	bl	8028304 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802886a:	e713      	b.n	8028694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802886c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802886e:	1422      	asrs	r2, r4, #16
 8028870:	1433      	asrs	r3, r6, #16
 8028872:	fb05 2303 	mla	r3, r5, r3, r2
 8028876:	085a      	lsrs	r2, r3, #1
 8028878:	07dd      	lsls	r5, r3, #31
 802887a:	5cba      	ldrb	r2, [r7, r2]
 802887c:	bf54      	ite	pl
 802887e:	f002 020f 	andpl.w	r2, r2, #15
 8028882:	1112      	asrmi	r2, r2, #4
 8028884:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028888:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802888c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028890:	b2d2      	uxtb	r2, r2
 8028892:	2900      	cmp	r1, #0
 8028894:	d076      	beq.n	8028984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028896:	f103 0e01 	add.w	lr, r3, #1
 802889a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802889e:	f01e 0f01 	tst.w	lr, #1
 80288a2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80288a6:	bf0c      	ite	eq
 80288a8:	f00c 0c0f 	andeq.w	ip, ip, #15
 80288ac:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80288b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80288b4:	fa5f f58c 	uxtb.w	r5, ip
 80288b8:	9512      	str	r5, [sp, #72]	; 0x48
 80288ba:	b300      	cbz	r0, 80288fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80288bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80288be:	442b      	add	r3, r5
 80288c0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80288c4:	07dd      	lsls	r5, r3, #31
 80288c6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80288ca:	bf54      	ite	pl
 80288cc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80288d0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80288d4:	3301      	adds	r3, #1
 80288d6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80288da:	fa5f f58c 	uxtb.w	r5, ip
 80288de:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80288e2:	950c      	str	r5, [sp, #48]	; 0x30
 80288e4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80288e8:	07dd      	lsls	r5, r3, #31
 80288ea:	bf54      	ite	pl
 80288ec:	f00c 0c0f 	andpl.w	ip, ip, #15
 80288f0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80288f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80288f8:	fa5f f38c 	uxtb.w	r3, ip
 80288fc:	9313      	str	r3, [sp, #76]	; 0x4c
 80288fe:	b289      	uxth	r1, r1
 8028900:	b280      	uxth	r0, r0
 8028902:	fb01 f300 	mul.w	r3, r1, r0
 8028906:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802890a:	0109      	lsls	r1, r1, #4
 802890c:	b280      	uxth	r0, r0
 802890e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8028912:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028914:	1ac9      	subs	r1, r1, r3
 8028916:	ebac 0c00 	sub.w	ip, ip, r0
 802891a:	b289      	uxth	r1, r1
 802891c:	4369      	muls	r1, r5
 802891e:	fa1f fc8c 	uxth.w	ip, ip
 8028922:	fb02 120c 	mla	r2, r2, ip, r1
 8028926:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028928:	fb00 2001 	mla	r0, r0, r1, r2
 802892c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802892e:	fb03 0302 	mla	r3, r3, r2, r0
 8028932:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028936:	b1d3      	cbz	r3, 802896e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028938:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802893a:	4353      	muls	r3, r2
 802893c:	1c5a      	adds	r2, r3, #1
 802893e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028942:	4a0f      	ldr	r2, [pc, #60]	; (8028980 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028944:	121b      	asrs	r3, r3, #8
 8028946:	6812      	ldr	r2, [r2, #0]
 8028948:	2bff      	cmp	r3, #255	; 0xff
 802894a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802894e:	d12d      	bne.n	80289ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028950:	0953      	lsrs	r3, r2, #5
 8028952:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028956:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802895a:	f02c 0c07 	bic.w	ip, ip, #7
 802895e:	ea43 0c0c 	orr.w	ip, r3, ip
 8028962:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028966:	ea4c 0202 	orr.w	r2, ip, r2
 802896a:	f8a8 2000 	strh.w	r2, [r8]
 802896e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028970:	441c      	add	r4, r3
 8028972:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028974:	f108 0802 	add.w	r8, r8, #2
 8028978:	441e      	add	r6, r3
 802897a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802897e:	e6ba      	b.n	80286f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028980:	2001384c 	.word	0x2001384c
 8028984:	2800      	cmp	r0, #0
 8028986:	d0ba      	beq.n	80288fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028988:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802898a:	442b      	add	r3, r5
 802898c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028990:	07db      	lsls	r3, r3, #31
 8028992:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028996:	bf54      	ite	pl
 8028998:	f00c 0c0f 	andpl.w	ip, ip, #15
 802899c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80289a0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80289a4:	fa5f f38c 	uxtb.w	r3, ip
 80289a8:	930c      	str	r3, [sp, #48]	; 0x30
 80289aa:	e7a8      	b.n	80288fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80289ac:	f8b8 e000 	ldrh.w	lr, [r8]
 80289b0:	fa1f fa83 	uxth.w	sl, r3
 80289b4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80289b8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80289bc:	43db      	mvns	r3, r3
 80289be:	b2db      	uxtb	r3, r3
 80289c0:	fb11 f10a 	smulbb	r1, r1, sl
 80289c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80289c8:	fb00 1003 	mla	r0, r0, r3, r1
 80289cc:	b2d2      	uxtb	r2, r2
 80289ce:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80289d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80289d6:	fa5f fe8e 	uxtb.w	lr, lr
 80289da:	fb12 f20a 	smulbb	r2, r2, sl
 80289de:	fb0e 2203 	mla	r2, lr, r3, r2
 80289e2:	fa5f fc8c 	uxtb.w	ip, ip
 80289e6:	b280      	uxth	r0, r0
 80289e8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80289ec:	b292      	uxth	r2, r2
 80289ee:	fb1c fc0a 	smulbb	ip, ip, sl
 80289f2:	fb01 cc03 	mla	ip, r1, r3, ip
 80289f6:	1c43      	adds	r3, r0, #1
 80289f8:	1c51      	adds	r1, r2, #1
 80289fa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80289fe:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8028a02:	fa1f fc8c 	uxth.w	ip, ip
 8028a06:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028a0a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8028a0e:	4308      	orrs	r0, r1
 8028a10:	f10c 0101 	add.w	r1, ip, #1
 8028a14:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028a18:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028a1c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028a20:	ea40 000c 	orr.w	r0, r0, ip
 8028a24:	f8a8 0000 	strh.w	r0, [r8]
 8028a28:	e7a1      	b.n	802896e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028a2a:	b017      	add	sp, #92	; 0x5c
 8028a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028a30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028a30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028a34:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8028a38:	2d00      	cmp	r5, #0
 8028a3a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028a3e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028a42:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028a46:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8028a4a:	fb05 0e03 	mla	lr, r5, r3, r0
 8028a4e:	f2c0 80b0 	blt.w	8028bb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028a52:	45a9      	cmp	r9, r5
 8028a54:	f340 80ad 	ble.w	8028bb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028a58:	2800      	cmp	r0, #0
 8028a5a:	f2c0 80a8 	blt.w	8028bae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028a5e:	4580      	cmp	r8, r0
 8028a60:	f340 80a5 	ble.w	8028bae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028a64:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028a68:	f01e 0f01 	tst.w	lr, #1
 8028a6c:	5d16      	ldrb	r6, [r2, r4]
 8028a6e:	bf0c      	ite	eq
 8028a70:	f006 060f 	andeq.w	r6, r6, #15
 8028a74:	1136      	asrne	r6, r6, #4
 8028a76:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028a7a:	b2f6      	uxtb	r6, r6
 8028a7c:	1c44      	adds	r4, r0, #1
 8028a7e:	f100 809b 	bmi.w	8028bb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028a82:	45a0      	cmp	r8, r4
 8028a84:	f340 8098 	ble.w	8028bb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028a88:	2f00      	cmp	r7, #0
 8028a8a:	f000 8097 	beq.w	8028bbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8028a8e:	f10e 0a01 	add.w	sl, lr, #1
 8028a92:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028a96:	f01a 0f01 	tst.w	sl, #1
 8028a9a:	5d14      	ldrb	r4, [r2, r4]
 8028a9c:	bf0c      	ite	eq
 8028a9e:	f004 040f 	andeq.w	r4, r4, #15
 8028aa2:	1124      	asrne	r4, r4, #4
 8028aa4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028aa8:	b2e4      	uxtb	r4, r4
 8028aaa:	3501      	adds	r5, #1
 8028aac:	f100 808a 	bmi.w	8028bc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028ab0:	45a9      	cmp	r9, r5
 8028ab2:	f340 8087 	ble.w	8028bc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028ab6:	f1bc 0f00 	cmp.w	ip, #0
 8028aba:	f000 8086 	beq.w	8028bca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8028abe:	2800      	cmp	r0, #0
 8028ac0:	db7e      	blt.n	8028bc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028ac2:	4580      	cmp	r8, r0
 8028ac4:	dd7c      	ble.n	8028bc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028ac6:	eb03 090e 	add.w	r9, r3, lr
 8028aca:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028ace:	f019 0f01 	tst.w	r9, #1
 8028ad2:	5d55      	ldrb	r5, [r2, r5]
 8028ad4:	bf0c      	ite	eq
 8028ad6:	f005 050f 	andeq.w	r5, r5, #15
 8028ada:	112d      	asrne	r5, r5, #4
 8028adc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028ae0:	b2ed      	uxtb	r5, r5
 8028ae2:	3001      	adds	r0, #1
 8028ae4:	d474      	bmi.n	8028bd0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028ae6:	4580      	cmp	r8, r0
 8028ae8:	dd72      	ble.n	8028bd0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028aea:	2f00      	cmp	r7, #0
 8028aec:	d072      	beq.n	8028bd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8028aee:	3301      	adds	r3, #1
 8028af0:	449e      	add	lr, r3
 8028af2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028af6:	f01e 0f01 	tst.w	lr, #1
 8028afa:	5cd0      	ldrb	r0, [r2, r3]
 8028afc:	bf0c      	ite	eq
 8028afe:	f000 000f 	andeq.w	r0, r0, #15
 8028b02:	1100      	asrne	r0, r0, #4
 8028b04:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028b08:	b2c3      	uxtb	r3, r0
 8028b0a:	b2ba      	uxth	r2, r7
 8028b0c:	fa1f fc8c 	uxth.w	ip, ip
 8028b10:	fb02 f00c 	mul.w	r0, r2, ip
 8028b14:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028b18:	0112      	lsls	r2, r2, #4
 8028b1a:	fa1f fc8c 	uxth.w	ip, ip
 8028b1e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028b22:	1a12      	subs	r2, r2, r0
 8028b24:	eba7 070c 	sub.w	r7, r7, ip
 8028b28:	b292      	uxth	r2, r2
 8028b2a:	b2bf      	uxth	r7, r7
 8028b2c:	4362      	muls	r2, r4
 8028b2e:	fb06 2207 	mla	r2, r6, r7, r2
 8028b32:	fb0c 2505 	mla	r5, ip, r5, r2
 8028b36:	fb00 5303 	mla	r3, r0, r3, r5
 8028b3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028b3e:	b3a3      	cbz	r3, 8028baa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8028b40:	4a25      	ldr	r2, [pc, #148]	; (8028bd8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8028b42:	880e      	ldrh	r6, [r1, #0]
 8028b44:	6815      	ldr	r5, [r2, #0]
 8028b46:	1234      	asrs	r4, r6, #8
 8028b48:	b29a      	uxth	r2, r3
 8028b4a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028b4e:	43db      	mvns	r3, r3
 8028b50:	b2db      	uxtb	r3, r3
 8028b52:	fb10 f002 	smulbb	r0, r0, r2
 8028b56:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028b5a:	fb04 0403 	mla	r4, r4, r3, r0
 8028b5e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028b62:	10f0      	asrs	r0, r6, #3
 8028b64:	b2ed      	uxtb	r5, r5
 8028b66:	00f6      	lsls	r6, r6, #3
 8028b68:	fb17 f702 	smulbb	r7, r7, r2
 8028b6c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028b70:	fb15 f202 	smulbb	r2, r5, r2
 8028b74:	b2f6      	uxtb	r6, r6
 8028b76:	b2a4      	uxth	r4, r4
 8028b78:	fb00 7003 	mla	r0, r0, r3, r7
 8028b7c:	fb06 2303 	mla	r3, r6, r3, r2
 8028b80:	b29a      	uxth	r2, r3
 8028b82:	1c63      	adds	r3, r4, #1
 8028b84:	b280      	uxth	r0, r0
 8028b86:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028b8a:	1c53      	adds	r3, r2, #1
 8028b8c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028b90:	1c42      	adds	r2, r0, #1
 8028b92:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028b96:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028b9a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028b9e:	0940      	lsrs	r0, r0, #5
 8028ba0:	4323      	orrs	r3, r4
 8028ba2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028ba6:	4303      	orrs	r3, r0
 8028ba8:	800b      	strh	r3, [r1, #0]
 8028baa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028bae:	2600      	movs	r6, #0
 8028bb0:	e764      	b.n	8028a7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8028bb2:	2400      	movs	r4, #0
 8028bb4:	4626      	mov	r6, r4
 8028bb6:	e778      	b.n	8028aaa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028bb8:	2400      	movs	r4, #0
 8028bba:	e776      	b.n	8028aaa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028bbc:	463c      	mov	r4, r7
 8028bbe:	e774      	b.n	8028aaa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028bc0:	2500      	movs	r5, #0
 8028bc2:	e78e      	b.n	8028ae2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8028bc4:	2300      	movs	r3, #0
 8028bc6:	461d      	mov	r5, r3
 8028bc8:	e79f      	b.n	8028b0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bca:	4663      	mov	r3, ip
 8028bcc:	4665      	mov	r5, ip
 8028bce:	e79c      	b.n	8028b0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bd0:	2300      	movs	r3, #0
 8028bd2:	e79a      	b.n	8028b0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bd4:	463b      	mov	r3, r7
 8028bd6:	e798      	b.n	8028b0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bd8:	2001384c 	.word	0x2001384c

08028bdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028be0:	b093      	sub	sp, #76	; 0x4c
 8028be2:	461d      	mov	r5, r3
 8028be4:	920c      	str	r2, [sp, #48]	; 0x30
 8028be6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8028be8:	9107      	str	r1, [sp, #28]
 8028bea:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8028bee:	9011      	str	r0, [sp, #68]	; 0x44
 8028bf0:	6850      	ldr	r0, [r2, #4]
 8028bf2:	6812      	ldr	r2, [r2, #0]
 8028bf4:	fb00 1303 	mla	r3, r0, r3, r1
 8028bf8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028bfc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028bfe:	689b      	ldr	r3, [r3, #8]
 8028c00:	3301      	adds	r3, #1
 8028c02:	f023 0301 	bic.w	r3, r3, #1
 8028c06:	9306      	str	r3, [sp, #24]
 8028c08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028c0a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8028c0e:	681f      	ldr	r7, [r3, #0]
 8028c10:	9b07      	ldr	r3, [sp, #28]
 8028c12:	2b00      	cmp	r3, #0
 8028c14:	dc03      	bgt.n	8028c1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028c16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028c18:	2b00      	cmp	r3, #0
 8028c1a:	f340 8267 	ble.w	80290ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028c1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028c20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028c24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028c28:	1e48      	subs	r0, r1, #1
 8028c2a:	f102 3cff 	add.w	ip, r2, #4294967295
 8028c2e:	2d00      	cmp	r5, #0
 8028c30:	f340 80b8 	ble.w	8028da4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028c34:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028c38:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028c3c:	d406      	bmi.n	8028c4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c3e:	4586      	cmp	lr, r0
 8028c40:	da04      	bge.n	8028c4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c42:	2b00      	cmp	r3, #0
 8028c44:	db02      	blt.n	8028c4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c46:	4563      	cmp	r3, ip
 8028c48:	f2c0 80ad 	blt.w	8028da6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8028c4c:	f11e 0e01 	adds.w	lr, lr, #1
 8028c50:	f100 80a0 	bmi.w	8028d94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c54:	4571      	cmp	r1, lr
 8028c56:	f2c0 809d 	blt.w	8028d94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c5a:	3301      	adds	r3, #1
 8028c5c:	f100 809a 	bmi.w	8028d94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c60:	429a      	cmp	r2, r3
 8028c62:	f2c0 8097 	blt.w	8028d94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c66:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028c6a:	9509      	str	r5, [sp, #36]	; 0x24
 8028c6c:	46c8      	mov	r8, r9
 8028c6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028c70:	2b00      	cmp	r3, #0
 8028c72:	f340 80b6 	ble.w	8028de2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028c76:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028c7a:	9308      	str	r3, [sp, #32]
 8028c7c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028c7e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028c82:	1423      	asrs	r3, r4, #16
 8028c84:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028c88:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028c8c:	f100 813e 	bmi.w	8028f0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c90:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028c94:	455b      	cmp	r3, fp
 8028c96:	f280 8139 	bge.w	8028f0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c9a:	2800      	cmp	r0, #0
 8028c9c:	f2c0 8136 	blt.w	8028f0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028ca0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028ca4:	4558      	cmp	r0, fp
 8028ca6:	f280 8131 	bge.w	8028f0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028caa:	9a06      	ldr	r2, [sp, #24]
 8028cac:	fb00 3302 	mla	r3, r0, r2, r3
 8028cb0:	0858      	lsrs	r0, r3, #1
 8028cb2:	07da      	lsls	r2, r3, #31
 8028cb4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028cb8:	9a08      	ldr	r2, [sp, #32]
 8028cba:	bf54      	ite	pl
 8028cbc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028cc0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028cc4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028cc8:	fa5f fc8c 	uxtb.w	ip, ip
 8028ccc:	2a00      	cmp	r2, #0
 8028cce:	f000 80cb 	beq.w	8028e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8028cd2:	1c58      	adds	r0, r3, #1
 8028cd4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028cd8:	07c0      	lsls	r0, r0, #31
 8028cda:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028cde:	bf54      	ite	pl
 8028ce0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028ce4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028ce8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028cec:	fa5f fe8e 	uxtb.w	lr, lr
 8028cf0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8028cf4:	b1b9      	cbz	r1, 8028d26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028cf6:	4453      	add	r3, sl
 8028cf8:	0858      	lsrs	r0, r3, #1
 8028cfa:	07da      	lsls	r2, r3, #31
 8028cfc:	5c38      	ldrb	r0, [r7, r0]
 8028cfe:	bf54      	ite	pl
 8028d00:	f000 000f 	andpl.w	r0, r0, #15
 8028d04:	1100      	asrmi	r0, r0, #4
 8028d06:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028d0a:	b2c0      	uxtb	r0, r0
 8028d0c:	900a      	str	r0, [sp, #40]	; 0x28
 8028d0e:	1c58      	adds	r0, r3, #1
 8028d10:	0843      	lsrs	r3, r0, #1
 8028d12:	07c2      	lsls	r2, r0, #31
 8028d14:	5cfb      	ldrb	r3, [r7, r3]
 8028d16:	bf54      	ite	pl
 8028d18:	f003 030f 	andpl.w	r3, r3, #15
 8028d1c:	111b      	asrmi	r3, r3, #4
 8028d1e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028d22:	b2db      	uxtb	r3, r3
 8028d24:	930e      	str	r3, [sp, #56]	; 0x38
 8028d26:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028d2a:	b289      	uxth	r1, r1
 8028d2c:	fb02 f301 	mul.w	r3, r2, r1
 8028d30:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028d34:	0112      	lsls	r2, r2, #4
 8028d36:	b289      	uxth	r1, r1
 8028d38:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028d3c:	1a40      	subs	r0, r0, r1
 8028d3e:	fa1f fe80 	uxth.w	lr, r0
 8028d42:	1ad2      	subs	r2, r2, r3
 8028d44:	980d      	ldr	r0, [sp, #52]	; 0x34
 8028d46:	b292      	uxth	r2, r2
 8028d48:	4342      	muls	r2, r0
 8028d4a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028d4e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028d50:	fb01 c102 	mla	r1, r1, r2, ip
 8028d54:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028d56:	fb03 1302 	mla	r3, r3, r2, r1
 8028d5a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028d5e:	2bff      	cmp	r3, #255	; 0xff
 8028d60:	f040 8093 	bne.w	8028e8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8028d64:	4bbe      	ldr	r3, [pc, #760]	; (8029060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028d66:	681a      	ldr	r2, [r3, #0]
 8028d68:	4bbe      	ldr	r3, [pc, #760]	; (8029064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028d6a:	0951      	lsrs	r1, r2, #5
 8028d6c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028d70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028d74:	430b      	orrs	r3, r1
 8028d76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028d7a:	4313      	orrs	r3, r2
 8028d7c:	f8a8 3000 	strh.w	r3, [r8]
 8028d80:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028d82:	441c      	add	r4, r3
 8028d84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d86:	441e      	add	r6, r3
 8028d88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028d8a:	3b01      	subs	r3, #1
 8028d8c:	f108 0802 	add.w	r8, r8, #2
 8028d90:	9309      	str	r3, [sp, #36]	; 0x24
 8028d92:	e76c      	b.n	8028c6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d94:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028d96:	441c      	add	r4, r3
 8028d98:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d9a:	3d01      	subs	r5, #1
 8028d9c:	441e      	add	r6, r3
 8028d9e:	f109 0902 	add.w	r9, r9, #2
 8028da2:	e744      	b.n	8028c2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8028da4:	d021      	beq.n	8028dea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8028da6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8028da8:	1e6b      	subs	r3, r5, #1
 8028daa:	fb00 4003 	mla	r0, r0, r3, r4
 8028dae:	1400      	asrs	r0, r0, #16
 8028db0:	f53f af59 	bmi.w	8028c66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028db4:	3901      	subs	r1, #1
 8028db6:	4288      	cmp	r0, r1
 8028db8:	f6bf af55 	bge.w	8028c66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028dbc:	9920      	ldr	r1, [sp, #128]	; 0x80
 8028dbe:	fb01 6303 	mla	r3, r1, r3, r6
 8028dc2:	141b      	asrs	r3, r3, #16
 8028dc4:	f53f af4f 	bmi.w	8028c66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028dc8:	3a01      	subs	r2, #1
 8028dca:	4293      	cmp	r3, r2
 8028dcc:	f6bf af4b 	bge.w	8028c66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028dd0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8028dd4:	9308      	str	r3, [sp, #32]
 8028dd6:	46a8      	mov	r8, r5
 8028dd8:	46ce      	mov	lr, r9
 8028dda:	f1b8 0f00 	cmp.w	r8, #0
 8028dde:	f300 80b5 	bgt.w	8028f4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028de2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028de6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028dea:	9b07      	ldr	r3, [sp, #28]
 8028dec:	2b00      	cmp	r3, #0
 8028dee:	f340 817d 	ble.w	80290ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028df2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028df6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028dfa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028dfe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028e00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028e04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028e08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028e0c:	eef0 6a62 	vmov.f32	s13, s5
 8028e10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028e14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028e18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028e1c:	ee16 4a90 	vmov	r4, s13
 8028e20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028e24:	eef0 6a43 	vmov.f32	s13, s6
 8028e28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028e2c:	ee12 2a90 	vmov	r2, s5
 8028e30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028e34:	fb92 f3f3 	sdiv	r3, r2, r3
 8028e38:	ee13 2a10 	vmov	r2, s6
 8028e3c:	931f      	str	r3, [sp, #124]	; 0x7c
 8028e3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028e40:	fb92 f3f3 	sdiv	r3, r2, r3
 8028e44:	9320      	str	r3, [sp, #128]	; 0x80
 8028e46:	9b07      	ldr	r3, [sp, #28]
 8028e48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028e4a:	3b01      	subs	r3, #1
 8028e4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028e50:	9307      	str	r3, [sp, #28]
 8028e52:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028e54:	ee16 6a90 	vmov	r6, s13
 8028e58:	bf14      	ite	ne
 8028e5a:	461d      	movne	r5, r3
 8028e5c:	4615      	moveq	r5, r2
 8028e5e:	eeb0 3a67 	vmov.f32	s6, s15
 8028e62:	eef0 2a47 	vmov.f32	s5, s14
 8028e66:	e6d3      	b.n	8028c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8028e68:	2900      	cmp	r1, #0
 8028e6a:	f43f af5c 	beq.w	8028d26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028e6e:	eb0a 0003 	add.w	r0, sl, r3
 8028e72:	0843      	lsrs	r3, r0, #1
 8028e74:	07c0      	lsls	r0, r0, #31
 8028e76:	5cfb      	ldrb	r3, [r7, r3]
 8028e78:	bf54      	ite	pl
 8028e7a:	f003 030f 	andpl.w	r3, r3, #15
 8028e7e:	111b      	asrmi	r3, r3, #4
 8028e80:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028e84:	b2db      	uxtb	r3, r3
 8028e86:	930a      	str	r3, [sp, #40]	; 0x28
 8028e88:	e74d      	b.n	8028d26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028e8a:	2b00      	cmp	r3, #0
 8028e8c:	f43f af78 	beq.w	8028d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028e90:	4a73      	ldr	r2, [pc, #460]	; (8029060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028e92:	f8b8 c000 	ldrh.w	ip, [r8]
 8028e96:	6810      	ldr	r0, [r2, #0]
 8028e98:	fa1f fe83 	uxth.w	lr, r3
 8028e9c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028ea0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028ea4:	43db      	mvns	r3, r3
 8028ea6:	b2db      	uxtb	r3, r3
 8028ea8:	fb12 f20e 	smulbb	r2, r2, lr
 8028eac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028eb0:	fb01 2103 	mla	r1, r1, r3, r2
 8028eb4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028eb8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028ebc:	b2c0      	uxtb	r0, r0
 8028ebe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8028ec2:	fb1b fb0e 	smulbb	fp, fp, lr
 8028ec6:	b289      	uxth	r1, r1
 8028ec8:	fb10 fe0e 	smulbb	lr, r0, lr
 8028ecc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028ed0:	fa5f fc8c 	uxtb.w	ip, ip
 8028ed4:	fb02 b203 	mla	r2, r2, r3, fp
 8028ed8:	1c48      	adds	r0, r1, #1
 8028eda:	fb0c e303 	mla	r3, ip, r3, lr
 8028ede:	b292      	uxth	r2, r2
 8028ee0:	b29b      	uxth	r3, r3
 8028ee2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8028ee6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8028eea:	f102 0b01 	add.w	fp, r2, #1
 8028eee:	1c59      	adds	r1, r3, #1
 8028ef0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8028ef4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028ef8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028efc:	0952      	lsrs	r2, r2, #5
 8028efe:	4301      	orrs	r1, r0
 8028f00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028f04:	4311      	orrs	r1, r2
 8028f06:	f8a8 1000 	strh.w	r1, [r8]
 8028f0a:	e739      	b.n	8028d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f0c:	f113 0b01 	adds.w	fp, r3, #1
 8028f10:	f53f af36 	bmi.w	8028d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f14:	45dc      	cmp	ip, fp
 8028f16:	f6ff af33 	blt.w	8028d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f1a:	f110 0b01 	adds.w	fp, r0, #1
 8028f1e:	f53f af2f 	bmi.w	8028d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f22:	45de      	cmp	lr, fp
 8028f24:	f6ff af2c 	blt.w	8028d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f28:	9a08      	ldr	r2, [sp, #32]
 8028f2a:	9302      	str	r3, [sp, #8]
 8028f2c:	fa0f f38e 	sxth.w	r3, lr
 8028f30:	9301      	str	r3, [sp, #4]
 8028f32:	fa0f f38c 	sxth.w	r3, ip
 8028f36:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028f3a:	9105      	str	r1, [sp, #20]
 8028f3c:	9300      	str	r3, [sp, #0]
 8028f3e:	463a      	mov	r2, r7
 8028f40:	4653      	mov	r3, sl
 8028f42:	4641      	mov	r1, r8
 8028f44:	9811      	ldr	r0, [sp, #68]	; 0x44
 8028f46:	f7ff fd73 	bl	8028a30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8028f4a:	e719      	b.n	8028d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f4c:	9906      	ldr	r1, [sp, #24]
 8028f4e:	1422      	asrs	r2, r4, #16
 8028f50:	1433      	asrs	r3, r6, #16
 8028f52:	fb01 2303 	mla	r3, r1, r3, r2
 8028f56:	085a      	lsrs	r2, r3, #1
 8028f58:	07d9      	lsls	r1, r3, #31
 8028f5a:	5cba      	ldrb	r2, [r7, r2]
 8028f5c:	bf54      	ite	pl
 8028f5e:	f002 020f 	andpl.w	r2, r2, #15
 8028f62:	1112      	asrmi	r2, r2, #4
 8028f64:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028f68:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8028f6c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8028f70:	b2d2      	uxtb	r2, r2
 8028f72:	2800      	cmp	r0, #0
 8028f74:	d062      	beq.n	802903c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8028f76:	f103 0a01 	add.w	sl, r3, #1
 8028f7a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8028f7e:	f01a 0f01 	tst.w	sl, #1
 8028f82:	5c79      	ldrb	r1, [r7, r1]
 8028f84:	bf0c      	ite	eq
 8028f86:	f001 010f 	andeq.w	r1, r1, #15
 8028f8a:	1109      	asrne	r1, r1, #4
 8028f8c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028f90:	b2c9      	uxtb	r1, r1
 8028f92:	910f      	str	r1, [sp, #60]	; 0x3c
 8028f94:	f1bc 0f00 	cmp.w	ip, #0
 8028f98:	d019      	beq.n	8028fce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8028f9a:	9908      	ldr	r1, [sp, #32]
 8028f9c:	440b      	add	r3, r1
 8028f9e:	0859      	lsrs	r1, r3, #1
 8028fa0:	f013 0f01 	tst.w	r3, #1
 8028fa4:	5c79      	ldrb	r1, [r7, r1]
 8028fa6:	bf0c      	ite	eq
 8028fa8:	f001 010f 	andeq.w	r1, r1, #15
 8028fac:	1109      	asrne	r1, r1, #4
 8028fae:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028fb2:	b2c9      	uxtb	r1, r1
 8028fb4:	3301      	adds	r3, #1
 8028fb6:	910b      	str	r1, [sp, #44]	; 0x2c
 8028fb8:	0859      	lsrs	r1, r3, #1
 8028fba:	07db      	lsls	r3, r3, #31
 8028fbc:	5c79      	ldrb	r1, [r7, r1]
 8028fbe:	bf54      	ite	pl
 8028fc0:	f001 010f 	andpl.w	r1, r1, #15
 8028fc4:	1109      	asrmi	r1, r1, #4
 8028fc6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028fca:	b2c9      	uxtb	r1, r1
 8028fcc:	9110      	str	r1, [sp, #64]	; 0x40
 8028fce:	b280      	uxth	r0, r0
 8028fd0:	fa1f fc8c 	uxth.w	ip, ip
 8028fd4:	fb00 f30c 	mul.w	r3, r0, ip
 8028fd8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8028fdc:	0100      	lsls	r0, r0, #4
 8028fde:	fa1f fc8c 	uxth.w	ip, ip
 8028fe2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8028fe6:	eba1 010c 	sub.w	r1, r1, ip
 8028fea:	fa1f fa81 	uxth.w	sl, r1
 8028fee:	1ac0      	subs	r0, r0, r3
 8028ff0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028ff2:	b280      	uxth	r0, r0
 8028ff4:	4348      	muls	r0, r1
 8028ff6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8028ff8:	fb02 020a 	mla	r2, r2, sl, r0
 8028ffc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8029000:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029002:	fb03 c302 	mla	r3, r3, r2, ip
 8029006:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802900a:	2bff      	cmp	r3, #255	; 0xff
 802900c:	d12c      	bne.n	8029068 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802900e:	4b14      	ldr	r3, [pc, #80]	; (8029060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8029010:	681a      	ldr	r2, [r3, #0]
 8029012:	4b14      	ldr	r3, [pc, #80]	; (8029064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8029014:	0951      	lsrs	r1, r2, #5
 8029016:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802901a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802901e:	430b      	orrs	r3, r1
 8029020:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8029024:	4313      	orrs	r3, r2
 8029026:	f8ae 3000 	strh.w	r3, [lr]
 802902a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802902c:	441c      	add	r4, r3
 802902e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029030:	f10e 0e02 	add.w	lr, lr, #2
 8029034:	441e      	add	r6, r3
 8029036:	f108 38ff 	add.w	r8, r8, #4294967295
 802903a:	e6ce      	b.n	8028dda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802903c:	f1bc 0f00 	cmp.w	ip, #0
 8029040:	d0c5      	beq.n	8028fce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029042:	9908      	ldr	r1, [sp, #32]
 8029044:	440b      	add	r3, r1
 8029046:	0859      	lsrs	r1, r3, #1
 8029048:	07db      	lsls	r3, r3, #31
 802904a:	5c79      	ldrb	r1, [r7, r1]
 802904c:	bf54      	ite	pl
 802904e:	f001 010f 	andpl.w	r1, r1, #15
 8029052:	1109      	asrmi	r1, r1, #4
 8029054:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029058:	b2c9      	uxtb	r1, r1
 802905a:	910b      	str	r1, [sp, #44]	; 0x2c
 802905c:	e7b7      	b.n	8028fce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802905e:	bf00      	nop
 8029060:	2001384c 	.word	0x2001384c
 8029064:	fffff800 	.word	0xfffff800
 8029068:	2b00      	cmp	r3, #0
 802906a:	d0de      	beq.n	802902a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802906c:	4a21      	ldr	r2, [pc, #132]	; (80290f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802906e:	f8be c000 	ldrh.w	ip, [lr]
 8029072:	6810      	ldr	r0, [r2, #0]
 8029074:	fa1f fa83 	uxth.w	sl, r3
 8029078:	ea4f 212c 	mov.w	r1, ip, asr #8
 802907c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8029080:	43db      	mvns	r3, r3
 8029082:	b2db      	uxtb	r3, r3
 8029084:	fb12 f20a 	smulbb	r2, r2, sl
 8029088:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802908c:	fb01 2103 	mla	r1, r1, r3, r2
 8029090:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8029094:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029098:	b2c0      	uxtb	r0, r0
 802909a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802909e:	fa5f fc8c 	uxtb.w	ip, ip
 80290a2:	fb10 f00a 	smulbb	r0, r0, sl
 80290a6:	fb0c 0003 	mla	r0, ip, r3, r0
 80290aa:	b289      	uxth	r1, r1
 80290ac:	fb1b fb0a 	smulbb	fp, fp, sl
 80290b0:	b280      	uxth	r0, r0
 80290b2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80290b6:	fb02 b203 	mla	r2, r2, r3, fp
 80290ba:	1c4b      	adds	r3, r1, #1
 80290bc:	f100 0b01 	add.w	fp, r0, #1
 80290c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80290c4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80290c8:	b292      	uxth	r2, r2
 80290ca:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80290ce:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80290d2:	ea4b 0101 	orr.w	r1, fp, r1
 80290d6:	f102 0b01 	add.w	fp, r2, #1
 80290da:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80290de:	0952      	lsrs	r2, r2, #5
 80290e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80290e4:	4311      	orrs	r1, r2
 80290e6:	f8ae 1000 	strh.w	r1, [lr]
 80290ea:	e79e      	b.n	802902a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80290ec:	b013      	add	sp, #76	; 0x4c
 80290ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80290f2:	bf00      	nop
 80290f4:	2001384c 	.word	0x2001384c

080290f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80290f8:	b570      	push	{r4, r5, r6, lr}
 80290fa:	1208      	asrs	r0, r1, #8
 80290fc:	b29e      	uxth	r6, r3
 80290fe:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8029102:	1213      	asrs	r3, r2, #8
 8029104:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8029108:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802910c:	fb13 f305 	smulbb	r3, r3, r5
 8029110:	fb10 f006 	smulbb	r0, r0, r6
 8029114:	4418      	add	r0, r3
 8029116:	10cc      	asrs	r4, r1, #3
 8029118:	10d3      	asrs	r3, r2, #3
 802911a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802911e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8029122:	fb13 f305 	smulbb	r3, r3, r5
 8029126:	fb14 f406 	smulbb	r4, r4, r6
 802912a:	00c9      	lsls	r1, r1, #3
 802912c:	00d2      	lsls	r2, r2, #3
 802912e:	441c      	add	r4, r3
 8029130:	b2d2      	uxtb	r2, r2
 8029132:	b2cb      	uxtb	r3, r1
 8029134:	fb12 f205 	smulbb	r2, r2, r5
 8029138:	b280      	uxth	r0, r0
 802913a:	fb13 f306 	smulbb	r3, r3, r6
 802913e:	4413      	add	r3, r2
 8029140:	1c42      	adds	r2, r0, #1
 8029142:	b29b      	uxth	r3, r3
 8029144:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029148:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802914c:	1c58      	adds	r0, r3, #1
 802914e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029152:	b2a4      	uxth	r4, r4
 8029154:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029158:	4310      	orrs	r0, r2
 802915a:	1c62      	adds	r2, r4, #1
 802915c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029160:	0964      	lsrs	r4, r4, #5
 8029162:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029166:	4320      	orrs	r0, r4
 8029168:	bd70      	pop	{r4, r5, r6, pc}
	...

0802916c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802916c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029170:	b08f      	sub	sp, #60	; 0x3c
 8029172:	461c      	mov	r4, r3
 8029174:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029178:	9004      	str	r0, [sp, #16]
 802917a:	460d      	mov	r5, r1
 802917c:	4616      	mov	r6, r2
 802917e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029180:	2f00      	cmp	r7, #0
 8029182:	f000 80f6 	beq.w	8029372 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8029186:	6820      	ldr	r0, [r4, #0]
 8029188:	6861      	ldr	r1, [r4, #4]
 802918a:	aa0a      	add	r2, sp, #40	; 0x28
 802918c:	c203      	stmia	r2!, {r0, r1}
 802918e:	6818      	ldr	r0, [r3, #0]
 8029190:	6859      	ldr	r1, [r3, #4]
 8029192:	aa0c      	add	r2, sp, #48	; 0x30
 8029194:	c203      	stmia	r2!, {r0, r1}
 8029196:	a80a      	add	r0, sp, #40	; 0x28
 8029198:	f7ef fa5e 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802919c:	4621      	mov	r1, r4
 802919e:	a80c      	add	r0, sp, #48	; 0x30
 80291a0:	f7ef fa9e 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80291a4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80291a8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80291ac:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80291b0:	f002 0301 	and.w	r3, r2, #1
 80291b4:	9306      	str	r3, [sp, #24]
 80291b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80291ba:	f003 0101 	and.w	r1, r3, #1
 80291be:	9105      	str	r1, [sp, #20]
 80291c0:	9805      	ldr	r0, [sp, #20]
 80291c2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80291c6:	4403      	add	r3, r0
 80291c8:	fb01 2303 	mla	r3, r1, r3, r2
 80291cc:	f04f 0802 	mov.w	r8, #2
 80291d0:	fb93 f3f8 	sdiv	r3, r3, r8
 80291d4:	441d      	add	r5, r3
 80291d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80291da:	441a      	add	r2, r3
 80291dc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80291e0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80291e4:	4419      	add	r1, r3
 80291e6:	4b64      	ldr	r3, [pc, #400]	; (8029378 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80291e8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80291ec:	6818      	ldr	r0, [r3, #0]
 80291ee:	6803      	ldr	r3, [r0, #0]
 80291f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80291f2:	4798      	blx	r3
 80291f4:	4a61      	ldr	r2, [pc, #388]	; (802937c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80291f6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80291fa:	8813      	ldrh	r3, [r2, #0]
 80291fc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8029200:	2fff      	cmp	r7, #255	; 0xff
 8029202:	fb03 a404 	mla	r4, r3, r4, sl
 8029206:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802920a:	f106 0604 	add.w	r6, r6, #4
 802920e:	4611      	mov	r1, r2
 8029210:	fb03 fb0b 	mul.w	fp, r3, fp
 8029214:	d06b      	beq.n	80292ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8029216:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802921a:	9303      	str	r3, [sp, #12]
 802921c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8029220:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029224:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8029228:	9b07      	ldr	r3, [sp, #28]
 802922a:	42a3      	cmp	r3, r4
 802922c:	f240 809c 	bls.w	8029368 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029230:	9b06      	ldr	r3, [sp, #24]
 8029232:	2b00      	cmp	r3, #0
 8029234:	d039      	beq.n	80292aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8029236:	782b      	ldrb	r3, [r5, #0]
 8029238:	8822      	ldrh	r2, [r4, #0]
 802923a:	9804      	ldr	r0, [sp, #16]
 802923c:	f003 030f 	and.w	r3, r3, #15
 8029240:	f105 0801 	add.w	r8, r5, #1
 8029244:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029248:	9b03      	ldr	r3, [sp, #12]
 802924a:	9300      	str	r3, [sp, #0]
 802924c:	463b      	mov	r3, r7
 802924e:	f7ff ff53 	bl	80290f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029252:	f824 0b02 	strh.w	r0, [r4], #2
 8029256:	f109 3bff 	add.w	fp, r9, #4294967295
 802925a:	f1bb 0f01 	cmp.w	fp, #1
 802925e:	46a2      	mov	sl, r4
 8029260:	f104 0404 	add.w	r4, r4, #4
 8029264:	dd24      	ble.n	80292b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8029266:	f898 3000 	ldrb.w	r3, [r8]
 802926a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802926e:	9804      	ldr	r0, [sp, #16]
 8029270:	091b      	lsrs	r3, r3, #4
 8029272:	f1ab 0b02 	sub.w	fp, fp, #2
 8029276:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802927a:	9b03      	ldr	r3, [sp, #12]
 802927c:	9300      	str	r3, [sp, #0]
 802927e:	463b      	mov	r3, r7
 8029280:	f7ff ff3a 	bl	80290f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029284:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029288:	f818 3b01 	ldrb.w	r3, [r8], #1
 802928c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029290:	9804      	ldr	r0, [sp, #16]
 8029292:	f003 030f 	and.w	r3, r3, #15
 8029296:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802929a:	9b03      	ldr	r3, [sp, #12]
 802929c:	9300      	str	r3, [sp, #0]
 802929e:	463b      	mov	r3, r7
 80292a0:	f7ff ff2a 	bl	80290f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80292a4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80292a8:	e7d7      	b.n	802925a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80292aa:	46a8      	mov	r8, r5
 80292ac:	46cb      	mov	fp, r9
 80292ae:	e7d4      	b.n	802925a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80292b0:	d10e      	bne.n	80292d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80292b2:	f898 3000 	ldrb.w	r3, [r8]
 80292b6:	f8ba 2000 	ldrh.w	r2, [sl]
 80292ba:	9804      	ldr	r0, [sp, #16]
 80292bc:	091b      	lsrs	r3, r3, #4
 80292be:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80292c2:	9b03      	ldr	r3, [sp, #12]
 80292c4:	9300      	str	r3, [sp, #0]
 80292c6:	463b      	mov	r3, r7
 80292c8:	f7ff ff16 	bl	80290f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80292cc:	f82a 0b02 	strh.w	r0, [sl], #2
 80292d0:	9b08      	ldr	r3, [sp, #32]
 80292d2:	9a05      	ldr	r2, [sp, #20]
 80292d4:	881c      	ldrh	r4, [r3, #0]
 80292d6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80292da:	eba4 0409 	sub.w	r4, r4, r9
 80292de:	4413      	add	r3, r2
 80292e0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80292e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80292e6:	fb93 f3f2 	sdiv	r3, r3, r2
 80292ea:	441d      	add	r5, r3
 80292ec:	e79c      	b.n	8029228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80292ee:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80292f2:	45a3      	cmp	fp, r4
 80292f4:	d938      	bls.n	8029368 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80292f6:	9b06      	ldr	r3, [sp, #24]
 80292f8:	b1f3      	cbz	r3, 8029338 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80292fa:	782b      	ldrb	r3, [r5, #0]
 80292fc:	f003 030f 	and.w	r3, r3, #15
 8029300:	1c6a      	adds	r2, r5, #1
 8029302:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029306:	8023      	strh	r3, [r4, #0]
 8029308:	f109 30ff 	add.w	r0, r9, #4294967295
 802930c:	3402      	adds	r4, #2
 802930e:	2801      	cmp	r0, #1
 8029310:	4623      	mov	r3, r4
 8029312:	f104 0404 	add.w	r4, r4, #4
 8029316:	dd12      	ble.n	802933e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8029318:	7813      	ldrb	r3, [r2, #0]
 802931a:	091b      	lsrs	r3, r3, #4
 802931c:	3802      	subs	r0, #2
 802931e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029322:	f824 3c04 	strh.w	r3, [r4, #-4]
 8029326:	f812 3b01 	ldrb.w	r3, [r2], #1
 802932a:	f003 030f 	and.w	r3, r3, #15
 802932e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029332:	f824 3c02 	strh.w	r3, [r4, #-2]
 8029336:	e7ea      	b.n	802930e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8029338:	462a      	mov	r2, r5
 802933a:	4648      	mov	r0, r9
 802933c:	e7e7      	b.n	802930e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802933e:	d106      	bne.n	802934e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8029340:	7812      	ldrb	r2, [r2, #0]
 8029342:	0912      	lsrs	r2, r2, #4
 8029344:	3302      	adds	r3, #2
 8029346:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802934a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802934e:	880c      	ldrh	r4, [r1, #0]
 8029350:	9a05      	ldr	r2, [sp, #20]
 8029352:	eba4 0409 	sub.w	r4, r4, r9
 8029356:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802935a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802935e:	4413      	add	r3, r2
 8029360:	fb93 f3f8 	sdiv	r3, r3, r8
 8029364:	441d      	add	r5, r3
 8029366:	e7c4      	b.n	80292f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8029368:	4b03      	ldr	r3, [pc, #12]	; (8029378 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802936a:	6818      	ldr	r0, [r3, #0]
 802936c:	6803      	ldr	r3, [r0, #0]
 802936e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029370:	4798      	blx	r3
 8029372:	b00f      	add	sp, #60	; 0x3c
 8029374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029378:	2001383c 	.word	0x2001383c
 802937c:	20013836 	.word	0x20013836

08029380 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8029380:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029382:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8029386:	2dff      	cmp	r5, #255	; 0xff
 8029388:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802938c:	d10c      	bne.n	80293a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802938e:	2bff      	cmp	r3, #255	; 0xff
 8029390:	d10a      	bne.n	80293a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8029392:	4b25      	ldr	r3, [pc, #148]	; (8029428 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8029394:	0948      	lsrs	r0, r1, #5
 8029396:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802939a:	403b      	ands	r3, r7
 802939c:	4318      	orrs	r0, r3
 802939e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80293a2:	4308      	orrs	r0, r1
 80293a4:	b280      	uxth	r0, r0
 80293a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80293a8:	fb15 f503 	smulbb	r5, r5, r3
 80293ac:	b2ab      	uxth	r3, r5
 80293ae:	1c5d      	adds	r5, r3, #1
 80293b0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80293b4:	1214      	asrs	r4, r2, #8
 80293b6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80293ba:	fa1f fc85 	uxth.w	ip, r5
 80293be:	10d6      	asrs	r6, r2, #3
 80293c0:	00d0      	lsls	r0, r2, #3
 80293c2:	43ed      	mvns	r5, r5
 80293c4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80293c8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80293cc:	b2eb      	uxtb	r3, r5
 80293ce:	b2c0      	uxtb	r0, r0
 80293d0:	fb12 f20c 	smulbb	r2, r2, ip
 80293d4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80293d8:	fb04 2403 	mla	r4, r4, r3, r2
 80293dc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80293e0:	b2c8      	uxtb	r0, r1
 80293e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80293e6:	b2fd      	uxtb	r5, r7
 80293e8:	fb10 f00c 	smulbb	r0, r0, ip
 80293ec:	b2a4      	uxth	r4, r4
 80293ee:	fb02 0003 	mla	r0, r2, r3, r0
 80293f2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80293f6:	fb15 f50c 	smulbb	r5, r5, ip
 80293fa:	fb06 5503 	mla	r5, r6, r3, r5
 80293fe:	b283      	uxth	r3, r0
 8029400:	1c60      	adds	r0, r4, #1
 8029402:	b2ad      	uxth	r5, r5
 8029404:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8029408:	1c58      	adds	r0, r3, #1
 802940a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802940e:	1c6b      	adds	r3, r5, #1
 8029410:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029414:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8029418:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802941c:	096d      	lsrs	r5, r5, #5
 802941e:	4320      	orrs	r0, r4
 8029420:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029424:	4328      	orrs	r0, r5
 8029426:	e7be      	b.n	80293a6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8029428:	00fff800 	.word	0x00fff800

0802942c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802942c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029430:	461c      	mov	r4, r3
 8029432:	b08d      	sub	sp, #52	; 0x34
 8029434:	460d      	mov	r5, r1
 8029436:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8029438:	6861      	ldr	r1, [r4, #4]
 802943a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802943e:	4680      	mov	r8, r0
 8029440:	6820      	ldr	r0, [r4, #0]
 8029442:	4616      	mov	r6, r2
 8029444:	aa08      	add	r2, sp, #32
 8029446:	c203      	stmia	r2!, {r0, r1}
 8029448:	6818      	ldr	r0, [r3, #0]
 802944a:	6859      	ldr	r1, [r3, #4]
 802944c:	aa0a      	add	r2, sp, #40	; 0x28
 802944e:	c203      	stmia	r2!, {r0, r1}
 8029450:	a808      	add	r0, sp, #32
 8029452:	f7ef f901 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029456:	4621      	mov	r1, r4
 8029458:	a80a      	add	r0, sp, #40	; 0x28
 802945a:	f7ef f941 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802945e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8029462:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8029466:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802946a:	f002 0301 	and.w	r3, r2, #1
 802946e:	9303      	str	r3, [sp, #12]
 8029470:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029474:	f003 0101 	and.w	r1, r3, #1
 8029478:	9102      	str	r1, [sp, #8]
 802947a:	9802      	ldr	r0, [sp, #8]
 802947c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8029480:	4403      	add	r3, r0
 8029482:	fb01 2303 	mla	r3, r1, r3, r2
 8029486:	f04f 0a02 	mov.w	sl, #2
 802948a:	fb93 f3fa 	sdiv	r3, r3, sl
 802948e:	441d      	add	r5, r3
 8029490:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029494:	441a      	add	r2, r3
 8029496:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802949a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802949e:	4a3f      	ldr	r2, [pc, #252]	; (802959c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80294a0:	9205      	str	r2, [sp, #20]
 80294a2:	4419      	add	r1, r3
 80294a4:	6810      	ldr	r0, [r2, #0]
 80294a6:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80294aa:	6803      	ldr	r3, [r0, #0]
 80294ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80294ae:	4798      	blx	r3
 80294b0:	4b3b      	ldr	r3, [pc, #236]	; (80295a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80294b2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80294b6:	8819      	ldrh	r1, [r3, #0]
 80294b8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80294bc:	fb01 c404 	mla	r4, r1, r4, ip
 80294c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80294c4:	434f      	muls	r7, r1
 80294c6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80294ca:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80294ce:	3604      	adds	r6, #4
 80294d0:	9204      	str	r2, [sp, #16]
 80294d2:	9b04      	ldr	r3, [sp, #16]
 80294d4:	429c      	cmp	r4, r3
 80294d6:	d258      	bcs.n	802958a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80294d8:	9b03      	ldr	r3, [sp, #12]
 80294da:	2b00      	cmp	r3, #0
 80294dc:	d034      	beq.n	8029548 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80294de:	782b      	ldrb	r3, [r5, #0]
 80294e0:	f003 030f 	and.w	r3, r3, #15
 80294e4:	1c6f      	adds	r7, r5, #1
 80294e6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80294ea:	0e0b      	lsrs	r3, r1, #24
 80294ec:	d006      	beq.n	80294fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80294ee:	8822      	ldrh	r2, [r4, #0]
 80294f0:	9300      	str	r3, [sp, #0]
 80294f2:	4640      	mov	r0, r8
 80294f4:	464b      	mov	r3, r9
 80294f6:	f7ff ff43 	bl	8029380 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80294fa:	8020      	strh	r0, [r4, #0]
 80294fc:	3402      	adds	r4, #2
 80294fe:	f10b 3aff 	add.w	sl, fp, #4294967295
 8029502:	f1ba 0f01 	cmp.w	sl, #1
 8029506:	dd22      	ble.n	802954e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8029508:	783b      	ldrb	r3, [r7, #0]
 802950a:	091b      	lsrs	r3, r3, #4
 802950c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029510:	0e0b      	lsrs	r3, r1, #24
 8029512:	d006      	beq.n	8029522 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8029514:	8822      	ldrh	r2, [r4, #0]
 8029516:	9300      	str	r3, [sp, #0]
 8029518:	4640      	mov	r0, r8
 802951a:	464b      	mov	r3, r9
 802951c:	f7ff ff30 	bl	8029380 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029520:	8020      	strh	r0, [r4, #0]
 8029522:	f817 3b01 	ldrb.w	r3, [r7], #1
 8029526:	f003 030f 	and.w	r3, r3, #15
 802952a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802952e:	0e0b      	lsrs	r3, r1, #24
 8029530:	d006      	beq.n	8029540 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8029532:	8862      	ldrh	r2, [r4, #2]
 8029534:	9300      	str	r3, [sp, #0]
 8029536:	4640      	mov	r0, r8
 8029538:	464b      	mov	r3, r9
 802953a:	f7ff ff21 	bl	8029380 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802953e:	8060      	strh	r0, [r4, #2]
 8029540:	3404      	adds	r4, #4
 8029542:	f1aa 0a02 	sub.w	sl, sl, #2
 8029546:	e7dc      	b.n	8029502 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029548:	462f      	mov	r7, r5
 802954a:	46da      	mov	sl, fp
 802954c:	e7d9      	b.n	8029502 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802954e:	d10d      	bne.n	802956c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8029550:	783b      	ldrb	r3, [r7, #0]
 8029552:	091b      	lsrs	r3, r3, #4
 8029554:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029558:	0e0b      	lsrs	r3, r1, #24
 802955a:	d006      	beq.n	802956a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802955c:	8822      	ldrh	r2, [r4, #0]
 802955e:	9300      	str	r3, [sp, #0]
 8029560:	4640      	mov	r0, r8
 8029562:	464b      	mov	r3, r9
 8029564:	f7ff ff0c 	bl	8029380 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029568:	8020      	strh	r0, [r4, #0]
 802956a:	3402      	adds	r4, #2
 802956c:	9b06      	ldr	r3, [sp, #24]
 802956e:	9a02      	ldr	r2, [sp, #8]
 8029570:	881b      	ldrh	r3, [r3, #0]
 8029572:	eba3 030b 	sub.w	r3, r3, fp
 8029576:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802957a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802957e:	4413      	add	r3, r2
 8029580:	9a07      	ldr	r2, [sp, #28]
 8029582:	fb93 f3f2 	sdiv	r3, r3, r2
 8029586:	441d      	add	r5, r3
 8029588:	e7a3      	b.n	80294d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802958a:	9b05      	ldr	r3, [sp, #20]
 802958c:	6818      	ldr	r0, [r3, #0]
 802958e:	6803      	ldr	r3, [r0, #0]
 8029590:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029592:	4798      	blx	r3
 8029594:	b00d      	add	sp, #52	; 0x34
 8029596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802959a:	bf00      	nop
 802959c:	2001383c 	.word	0x2001383c
 80295a0:	20013836 	.word	0x20013836

080295a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80295a4:	b570      	push	{r4, r5, r6, lr}
 80295a6:	1214      	asrs	r4, r2, #8
 80295a8:	788d      	ldrb	r5, [r1, #2]
 80295aa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80295ae:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80295b2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80295b6:	fb15 f503 	smulbb	r5, r5, r3
 80295ba:	fb04 5506 	mla	r5, r4, r6, r5
 80295be:	10d0      	asrs	r0, r2, #3
 80295c0:	784c      	ldrb	r4, [r1, #1]
 80295c2:	7809      	ldrb	r1, [r1, #0]
 80295c4:	00d2      	lsls	r2, r2, #3
 80295c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80295ca:	b2d2      	uxtb	r2, r2
 80295cc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80295d0:	fb14 f403 	smulbb	r4, r4, r3
 80295d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80295d8:	fb11 f303 	smulbb	r3, r1, r3
 80295dc:	fb00 4406 	mla	r4, r0, r6, r4
 80295e0:	fb02 3306 	mla	r3, r2, r6, r3
 80295e4:	b2ad      	uxth	r5, r5
 80295e6:	b29b      	uxth	r3, r3
 80295e8:	b2a4      	uxth	r4, r4
 80295ea:	1c68      	adds	r0, r5, #1
 80295ec:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80295f0:	1c62      	adds	r2, r4, #1
 80295f2:	1c58      	adds	r0, r3, #1
 80295f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80295f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80295fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8029600:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029604:	0964      	lsrs	r4, r4, #5
 8029606:	4328      	orrs	r0, r5
 8029608:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802960c:	4320      	orrs	r0, r4
 802960e:	bd70      	pop	{r4, r5, r6, pc}

08029610 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8029610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029614:	b08f      	sub	sp, #60	; 0x3c
 8029616:	461c      	mov	r4, r3
 8029618:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802961c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802961e:	4682      	mov	sl, r0
 8029620:	460e      	mov	r6, r1
 8029622:	4615      	mov	r5, r2
 8029624:	2f00      	cmp	r7, #0
 8029626:	f000 8142 	beq.w	80298ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802962a:	6820      	ldr	r0, [r4, #0]
 802962c:	6861      	ldr	r1, [r4, #4]
 802962e:	aa0a      	add	r2, sp, #40	; 0x28
 8029630:	c203      	stmia	r2!, {r0, r1}
 8029632:	6818      	ldr	r0, [r3, #0]
 8029634:	6859      	ldr	r1, [r3, #4]
 8029636:	aa0c      	add	r2, sp, #48	; 0x30
 8029638:	c203      	stmia	r2!, {r0, r1}
 802963a:	a80a      	add	r0, sp, #40	; 0x28
 802963c:	f7ef f80c 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029640:	4621      	mov	r1, r4
 8029642:	a80c      	add	r0, sp, #48	; 0x30
 8029644:	f7ef f84c 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029648:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802964c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029650:	f002 0301 	and.w	r3, r2, #1
 8029654:	9306      	str	r3, [sp, #24]
 8029656:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802965a:	f003 0101 	and.w	r1, r3, #1
 802965e:	9105      	str	r1, [sp, #20]
 8029660:	9805      	ldr	r0, [sp, #20]
 8029662:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029666:	4403      	add	r3, r0
 8029668:	fb01 2303 	mla	r3, r1, r3, r2
 802966c:	f04f 0802 	mov.w	r8, #2
 8029670:	fb93 f3f8 	sdiv	r3, r3, r8
 8029674:	441e      	add	r6, r3
 8029676:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802967a:	441a      	add	r2, r3
 802967c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029680:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029684:	4419      	add	r1, r3
 8029686:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802968a:	9303      	str	r3, [sp, #12]
 802968c:	4b89      	ldr	r3, [pc, #548]	; (80298b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802968e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8029692:	6818      	ldr	r0, [r3, #0]
 8029694:	6803      	ldr	r3, [r0, #0]
 8029696:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029698:	4798      	blx	r3
 802969a:	4a87      	ldr	r2, [pc, #540]	; (80298b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802969c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80296a0:	8813      	ldrh	r3, [r2, #0]
 80296a2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80296a6:	2fff      	cmp	r7, #255	; 0xff
 80296a8:	fb03 9404 	mla	r4, r3, r4, r9
 80296ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80296b0:	f105 0504 	add.w	r5, r5, #4
 80296b4:	4694      	mov	ip, r2
 80296b6:	fb03 f30b 	mul.w	r3, r3, fp
 80296ba:	d071      	beq.n	80297a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80296bc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80296c0:	43f9      	mvns	r1, r7
 80296c2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80296c6:	b2c9      	uxtb	r1, r1
 80296c8:	9104      	str	r1, [sp, #16]
 80296ca:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80296ce:	9b07      	ldr	r3, [sp, #28]
 80296d0:	42a3      	cmp	r3, r4
 80296d2:	f240 80e7 	bls.w	80298a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80296d6:	9b06      	ldr	r3, [sp, #24]
 80296d8:	2b00      	cmp	r3, #0
 80296da:	d03d      	beq.n	8029758 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80296dc:	7831      	ldrb	r1, [r6, #0]
 80296de:	9b04      	ldr	r3, [sp, #16]
 80296e0:	8822      	ldrh	r2, [r4, #0]
 80296e2:	9300      	str	r3, [sp, #0]
 80296e4:	f001 010f 	and.w	r1, r1, #15
 80296e8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80296ec:	463b      	mov	r3, r7
 80296ee:	4429      	add	r1, r5
 80296f0:	4650      	mov	r0, sl
 80296f2:	f7ff ff57 	bl	80295a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80296f6:	9b03      	ldr	r3, [sp, #12]
 80296f8:	f824 0b02 	strh.w	r0, [r4], #2
 80296fc:	f106 0801 	add.w	r8, r6, #1
 8029700:	f103 3bff 	add.w	fp, r3, #4294967295
 8029704:	f1bb 0f01 	cmp.w	fp, #1
 8029708:	46a1      	mov	r9, r4
 802970a:	f104 0404 	add.w	r4, r4, #4
 802970e:	dd27      	ble.n	8029760 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8029710:	f898 1000 	ldrb.w	r1, [r8]
 8029714:	9b04      	ldr	r3, [sp, #16]
 8029716:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802971a:	9300      	str	r3, [sp, #0]
 802971c:	0909      	lsrs	r1, r1, #4
 802971e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029722:	463b      	mov	r3, r7
 8029724:	4429      	add	r1, r5
 8029726:	4650      	mov	r0, sl
 8029728:	f7ff ff3c 	bl	80295a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802972c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029730:	f818 1b01 	ldrb.w	r1, [r8], #1
 8029734:	9b04      	ldr	r3, [sp, #16]
 8029736:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802973a:	9300      	str	r3, [sp, #0]
 802973c:	f001 010f 	and.w	r1, r1, #15
 8029740:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029744:	463b      	mov	r3, r7
 8029746:	4429      	add	r1, r5
 8029748:	4650      	mov	r0, sl
 802974a:	f7ff ff2b 	bl	80295a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802974e:	f1ab 0b02 	sub.w	fp, fp, #2
 8029752:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029756:	e7d5      	b.n	8029704 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029758:	46b0      	mov	r8, r6
 802975a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802975e:	e7d1      	b.n	8029704 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029760:	d10f      	bne.n	8029782 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8029762:	f898 1000 	ldrb.w	r1, [r8]
 8029766:	9b04      	ldr	r3, [sp, #16]
 8029768:	f8b9 2000 	ldrh.w	r2, [r9]
 802976c:	9300      	str	r3, [sp, #0]
 802976e:	0909      	lsrs	r1, r1, #4
 8029770:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029774:	463b      	mov	r3, r7
 8029776:	4429      	add	r1, r5
 8029778:	4650      	mov	r0, sl
 802977a:	f7ff ff13 	bl	80295a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802977e:	f829 0b02 	strh.w	r0, [r9], #2
 8029782:	9b08      	ldr	r3, [sp, #32]
 8029784:	9a05      	ldr	r2, [sp, #20]
 8029786:	881c      	ldrh	r4, [r3, #0]
 8029788:	9b03      	ldr	r3, [sp, #12]
 802978a:	1ae4      	subs	r4, r4, r3
 802978c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029790:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8029794:	4413      	add	r3, r2
 8029796:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029798:	fb93 f3f2 	sdiv	r3, r3, r2
 802979c:	441e      	add	r6, r3
 802979e:	e796      	b.n	80296ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80297a0:	4f46      	ldr	r7, [pc, #280]	; (80298bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80297a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80297a6:	42a3      	cmp	r3, r4
 80297a8:	d97c      	bls.n	80298a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80297aa:	9a06      	ldr	r2, [sp, #24]
 80297ac:	2a00      	cmp	r2, #0
 80297ae:	d054      	beq.n	802985a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80297b0:	7830      	ldrb	r0, [r6, #0]
 80297b2:	f000 000f 	and.w	r0, r0, #15
 80297b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80297ba:	eb05 0e00 	add.w	lr, r5, r0
 80297be:	5c28      	ldrb	r0, [r5, r0]
 80297c0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80297c4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80297c8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80297cc:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80297d0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80297d4:	ea42 020e 	orr.w	r2, r2, lr
 80297d8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80297dc:	f824 2b02 	strh.w	r2, [r4], #2
 80297e0:	9a03      	ldr	r2, [sp, #12]
 80297e2:	1c71      	adds	r1, r6, #1
 80297e4:	f102 3eff 	add.w	lr, r2, #4294967295
 80297e8:	f1be 0f01 	cmp.w	lr, #1
 80297ec:	4620      	mov	r0, r4
 80297ee:	f104 0404 	add.w	r4, r4, #4
 80297f2:	dd36      	ble.n	8029862 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80297f4:	7808      	ldrb	r0, [r1, #0]
 80297f6:	0900      	lsrs	r0, r0, #4
 80297f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80297fc:	eb05 0a00 	add.w	sl, r5, r0
 8029800:	f1ae 0e02 	sub.w	lr, lr, #2
 8029804:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029808:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802980c:	00d2      	lsls	r2, r2, #3
 802980e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029812:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029816:	ea49 0202 	orr.w	r2, r9, r2
 802981a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802981e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029822:	f824 2c04 	strh.w	r2, [r4, #-4]
 8029826:	f811 0b01 	ldrb.w	r0, [r1], #1
 802982a:	f000 000f 	and.w	r0, r0, #15
 802982e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029832:	eb05 0a00 	add.w	sl, r5, r0
 8029836:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802983a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802983e:	00d2      	lsls	r2, r2, #3
 8029840:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029844:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029848:	ea49 0202 	orr.w	r2, r9, r2
 802984c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029850:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029854:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029858:	e7c6      	b.n	80297e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802985a:	4631      	mov	r1, r6
 802985c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8029860:	e7c2      	b.n	80297e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029862:	d111      	bne.n	8029888 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8029864:	7809      	ldrb	r1, [r1, #0]
 8029866:	0909      	lsrs	r1, r1, #4
 8029868:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802986c:	186c      	adds	r4, r5, r1
 802986e:	5c69      	ldrb	r1, [r5, r1]
 8029870:	78a2      	ldrb	r2, [r4, #2]
 8029872:	7864      	ldrb	r4, [r4, #1]
 8029874:	00e4      	lsls	r4, r4, #3
 8029876:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802987a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802987e:	4322      	orrs	r2, r4
 8029880:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8029884:	f820 2b02 	strh.w	r2, [r0], #2
 8029888:	9a03      	ldr	r2, [sp, #12]
 802988a:	f8bc 4000 	ldrh.w	r4, [ip]
 802988e:	9905      	ldr	r1, [sp, #20]
 8029890:	1aa4      	subs	r4, r4, r2
 8029892:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8029896:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802989a:	440a      	add	r2, r1
 802989c:	fb92 f2f8 	sdiv	r2, r2, r8
 80298a0:	4416      	add	r6, r2
 80298a2:	e780      	b.n	80297a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80298a4:	4b03      	ldr	r3, [pc, #12]	; (80298b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80298a6:	6818      	ldr	r0, [r3, #0]
 80298a8:	6803      	ldr	r3, [r0, #0]
 80298aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80298ac:	4798      	blx	r3
 80298ae:	b00f      	add	sp, #60	; 0x3c
 80298b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80298b4:	2001383c 	.word	0x2001383c
 80298b8:	20013836 	.word	0x20013836
 80298bc:	fffff800 	.word	0xfffff800

080298c0 <CRC_Lock>:
 80298c0:	b530      	push	{r4, r5, lr}
 80298c2:	4a20      	ldr	r2, [pc, #128]	; (8029944 <CRC_Lock+0x84>)
 80298c4:	6813      	ldr	r3, [r2, #0]
 80298c6:	f023 0301 	bic.w	r3, r3, #1
 80298ca:	6013      	str	r3, [r2, #0]
 80298cc:	4b1e      	ldr	r3, [pc, #120]	; (8029948 <CRC_Lock+0x88>)
 80298ce:	681a      	ldr	r2, [r3, #0]
 80298d0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80298d4:	4022      	ands	r2, r4
 80298d6:	f24c 2540 	movw	r5, #49728	; 0xc240
 80298da:	42aa      	cmp	r2, r5
 80298dc:	d005      	beq.n	80298ea <CRC_Lock+0x2a>
 80298de:	681b      	ldr	r3, [r3, #0]
 80298e0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80298e4:	4023      	ands	r3, r4
 80298e6:	4293      	cmp	r3, r2
 80298e8:	d124      	bne.n	8029934 <CRC_Lock+0x74>
 80298ea:	4b18      	ldr	r3, [pc, #96]	; (802994c <CRC_Lock+0x8c>)
 80298ec:	681b      	ldr	r3, [r3, #0]
 80298ee:	bb0b      	cbnz	r3, 8029934 <CRC_Lock+0x74>
 80298f0:	4b17      	ldr	r3, [pc, #92]	; (8029950 <CRC_Lock+0x90>)
 80298f2:	681a      	ldr	r2, [r3, #0]
 80298f4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80298f8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80298fc:	d00d      	beq.n	802991a <CRC_Lock+0x5a>
 80298fe:	681a      	ldr	r2, [r3, #0]
 8029900:	f240 4483 	movw	r4, #1155	; 0x483
 8029904:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029908:	42a2      	cmp	r2, r4
 802990a:	d006      	beq.n	802991a <CRC_Lock+0x5a>
 802990c:	681b      	ldr	r3, [r3, #0]
 802990e:	f240 4285 	movw	r2, #1157	; 0x485
 8029912:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8029916:	4293      	cmp	r3, r2
 8029918:	d10c      	bne.n	8029934 <CRC_Lock+0x74>
 802991a:	4b0e      	ldr	r3, [pc, #56]	; (8029954 <CRC_Lock+0x94>)
 802991c:	2201      	movs	r2, #1
 802991e:	601a      	str	r2, [r3, #0]
 8029920:	681a      	ldr	r2, [r3, #0]
 8029922:	2a00      	cmp	r2, #0
 8029924:	d1fc      	bne.n	8029920 <CRC_Lock+0x60>
 8029926:	4b0c      	ldr	r3, [pc, #48]	; (8029958 <CRC_Lock+0x98>)
 8029928:	6018      	str	r0, [r3, #0]
 802992a:	6818      	ldr	r0, [r3, #0]
 802992c:	1a43      	subs	r3, r0, r1
 802992e:	4258      	negs	r0, r3
 8029930:	4158      	adcs	r0, r3
 8029932:	bd30      	pop	{r4, r5, pc}
 8029934:	4b09      	ldr	r3, [pc, #36]	; (802995c <CRC_Lock+0x9c>)
 8029936:	2201      	movs	r2, #1
 8029938:	601a      	str	r2, [r3, #0]
 802993a:	681a      	ldr	r2, [r3, #0]
 802993c:	2a00      	cmp	r2, #0
 802993e:	d1fc      	bne.n	802993a <CRC_Lock+0x7a>
 8029940:	4b07      	ldr	r3, [pc, #28]	; (8029960 <CRC_Lock+0xa0>)
 8029942:	e7f1      	b.n	8029928 <CRC_Lock+0x68>
 8029944:	e0002000 	.word	0xe0002000
 8029948:	e000ed00 	.word	0xe000ed00
 802994c:	e0042000 	.word	0xe0042000
 8029950:	5c001000 	.word	0x5c001000
 8029954:	58024c08 	.word	0x58024c08
 8029958:	58024c00 	.word	0x58024c00
 802995c:	40023008 	.word	0x40023008
 8029960:	40023000 	.word	0x40023000

08029964 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8029964:	6101      	str	r1, [r0, #16]
 8029966:	4770      	bx	lr

08029968 <_ZN8touchgfx8Gestures4tickEv>:
 8029968:	7b83      	ldrb	r3, [r0, #14]
 802996a:	b14b      	cbz	r3, 8029980 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802996c:	8903      	ldrh	r3, [r0, #8]
 802996e:	3301      	adds	r3, #1
 8029970:	b29b      	uxth	r3, r3
 8029972:	2b07      	cmp	r3, #7
 8029974:	8103      	strh	r3, [r0, #8]
 8029976:	bf81      	itttt	hi
 8029978:	2300      	movhi	r3, #0
 802997a:	8143      	strhhi	r3, [r0, #10]
 802997c:	8183      	strhhi	r3, [r0, #12]
 802997e:	7383      	strbhi	r3, [r0, #14]
 8029980:	4770      	bx	lr
	...

08029984 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8029984:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8029988:	4698      	mov	r8, r3
 802998a:	8883      	ldrh	r3, [r0, #4]
 802998c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029990:	eba8 0303 	sub.w	r3, r8, r3
 8029994:	b21b      	sxth	r3, r3
 8029996:	4604      	mov	r4, r0
 8029998:	2b00      	cmp	r3, #0
 802999a:	4617      	mov	r7, r2
 802999c:	4a18      	ldr	r2, [pc, #96]	; (8029a00 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802999e:	9200      	str	r2, [sp, #0]
 80299a0:	bfb8      	it	lt
 80299a2:	425b      	neglt	r3, r3
 80299a4:	8aa2      	ldrh	r2, [r4, #20]
 80299a6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80299aa:	f8ad 800a 	strh.w	r8, [sp, #10]
 80299ae:	b21b      	sxth	r3, r3
 80299b0:	460e      	mov	r6, r1
 80299b2:	4293      	cmp	r3, r2
 80299b4:	88c1      	ldrh	r1, [r0, #6]
 80299b6:	f8ad 1008 	strh.w	r1, [sp, #8]
 80299ba:	f04f 0000 	mov.w	r0, #0
 80299be:	f88d 0004 	strb.w	r0, [sp, #4]
 80299c2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80299c6:	dc07      	bgt.n	80299d8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80299c8:	1a69      	subs	r1, r5, r1
 80299ca:	b209      	sxth	r1, r1
 80299cc:	2900      	cmp	r1, #0
 80299ce:	bfb8      	it	lt
 80299d0:	4249      	neglt	r1, r1
 80299d2:	b209      	sxth	r1, r1
 80299d4:	428a      	cmp	r2, r1
 80299d6:	da10      	bge.n	80299fa <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80299d8:	6920      	ldr	r0, [r4, #16]
 80299da:	6803      	ldr	r3, [r0, #0]
 80299dc:	4669      	mov	r1, sp
 80299de:	685b      	ldr	r3, [r3, #4]
 80299e0:	4798      	blx	r3
 80299e2:	eba8 0606 	sub.w	r6, r8, r6
 80299e6:	2300      	movs	r3, #0
 80299e8:	1bef      	subs	r7, r5, r7
 80299ea:	2001      	movs	r0, #1
 80299ec:	8123      	strh	r3, [r4, #8]
 80299ee:	8166      	strh	r6, [r4, #10]
 80299f0:	81a7      	strh	r7, [r4, #12]
 80299f2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80299f6:	80e5      	strh	r5, [r4, #6]
 80299f8:	73a0      	strb	r0, [r4, #14]
 80299fa:	b004      	add	sp, #16
 80299fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029a00:	08031edc 	.word	0x08031edc

08029a04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8029a04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029a06:	461e      	mov	r6, r3
 8029a08:	1e4b      	subs	r3, r1, #1
 8029a0a:	2b01      	cmp	r3, #1
 8029a0c:	b085      	sub	sp, #20
 8029a0e:	4604      	mov	r4, r0
 8029a10:	460d      	mov	r5, r1
 8029a12:	4617      	mov	r7, r2
 8029a14:	d84b      	bhi.n	8029aae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8029a16:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8029a1a:	1cd3      	adds	r3, r2, #3
 8029a1c:	b29b      	uxth	r3, r3
 8029a1e:	2b06      	cmp	r3, #6
 8029a20:	d916      	bls.n	8029a50 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8029a22:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8029ac4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029a26:	f8cd c004 	str.w	ip, [sp, #4]
 8029a2a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029a2e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029a32:	6900      	ldr	r0, [r0, #16]
 8029a34:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029a38:	f04f 0c00 	mov.w	ip, #0
 8029a3c:	f88d c008 	strb.w	ip, [sp, #8]
 8029a40:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029a44:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a48:	6803      	ldr	r3, [r0, #0]
 8029a4a:	a901      	add	r1, sp, #4
 8029a4c:	689b      	ldr	r3, [r3, #8]
 8029a4e:	4798      	blx	r3
 8029a50:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029a54:	1cd3      	adds	r3, r2, #3
 8029a56:	b29b      	uxth	r3, r3
 8029a58:	2b06      	cmp	r3, #6
 8029a5a:	d916      	bls.n	8029a8a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029a5c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8029ac4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029a60:	f8cd c004 	str.w	ip, [sp, #4]
 8029a64:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029a68:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029a6c:	6920      	ldr	r0, [r4, #16]
 8029a6e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029a72:	f04f 0c01 	mov.w	ip, #1
 8029a76:	f88d c008 	strb.w	ip, [sp, #8]
 8029a7a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029a7e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a82:	6803      	ldr	r3, [r0, #0]
 8029a84:	a901      	add	r1, sp, #4
 8029a86:	689b      	ldr	r3, [r3, #8]
 8029a88:	4798      	blx	r3
 8029a8a:	4b0d      	ldr	r3, [pc, #52]	; (8029ac0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8029a8c:	9301      	str	r3, [sp, #4]
 8029a8e:	6920      	ldr	r0, [r4, #16]
 8029a90:	f88d 5008 	strb.w	r5, [sp, #8]
 8029a94:	2300      	movs	r3, #0
 8029a96:	f8ad 700a 	strh.w	r7, [sp, #10]
 8029a9a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8029a9e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029aa2:	6803      	ldr	r3, [r0, #0]
 8029aa4:	a901      	add	r1, sp, #4
 8029aa6:	681b      	ldr	r3, [r3, #0]
 8029aa8:	4798      	blx	r3
 8029aaa:	b005      	add	sp, #20
 8029aac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029aae:	2900      	cmp	r1, #0
 8029ab0:	d1eb      	bne.n	8029a8a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029ab2:	80a2      	strh	r2, [r4, #4]
 8029ab4:	80c6      	strh	r6, [r0, #6]
 8029ab6:	60a1      	str	r1, [r4, #8]
 8029ab8:	81a1      	strh	r1, [r4, #12]
 8029aba:	73a1      	strb	r1, [r4, #14]
 8029abc:	e7e5      	b.n	8029a8a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029abe:	bf00      	nop
 8029ac0:	08031ec8 	.word	0x08031ec8
 8029ac4:	08031ef0 	.word	0x08031ef0

08029ac8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8029ac8:	10c9      	asrs	r1, r1, #3
 8029aca:	2900      	cmp	r1, #0
 8029acc:	bfb8      	it	lt
 8029ace:	4249      	neglt	r1, r1
 8029ad0:	2801      	cmp	r0, #1
 8029ad2:	d108      	bne.n	8029ae6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029ad4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029ad8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8029adc:	4601      	mov	r1, r0
 8029ade:	dd02      	ble.n	8029ae6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029ae0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8029ae4:	4770      	bx	lr
 8029ae6:	29ff      	cmp	r1, #255	; 0xff
 8029ae8:	bfa8      	it	ge
 8029aea:	21ff      	movge	r1, #255	; 0xff
 8029aec:	4608      	mov	r0, r1
 8029aee:	4770      	bx	lr

08029af0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029af0:	b410      	push	{r4}
 8029af2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029af6:	429c      	cmp	r4, r3
 8029af8:	d803      	bhi.n	8029b02 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8029afa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029afe:	f7ed b8b1 	b.w	8016c64 <_ZN8touchgfx7Outline6lineToEii>
 8029b02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029b06:	4770      	bx	lr

08029b08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029b0c:	b08b      	sub	sp, #44	; 0x2c
 8029b0e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029b12:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8029b16:	9308      	str	r3, [sp, #32]
 8029b18:	4606      	mov	r6, r0
 8029b1a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8029b1e:	9309      	str	r3, [sp, #36]	; 0x24
 8029b20:	468a      	mov	sl, r1
 8029b22:	f7ed fa0c 	bl	8016f3e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029b26:	68b5      	ldr	r5, [r6, #8]
 8029b28:	4604      	mov	r4, r0
 8029b2a:	2d00      	cmp	r5, #0
 8029b2c:	d044      	beq.n	8029bb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029b2e:	6873      	ldr	r3, [r6, #4]
 8029b30:	42ab      	cmp	r3, r5
 8029b32:	d33d      	bcc.n	8029bb0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029b34:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029b38:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8029b3c:	eb02 0b03 	add.w	fp, r2, r3
 8029b40:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8029b44:	fb02 1203 	mla	r2, r2, r3, r1
 8029b48:	9205      	str	r2, [sp, #20]
 8029b4a:	1e6a      	subs	r2, r5, #1
 8029b4c:	9204      	str	r2, [sp, #16]
 8029b4e:	f04f 0800 	mov.w	r8, #0
 8029b52:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8029b56:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029b5a:	454b      	cmp	r3, r9
 8029b5c:	463a      	mov	r2, r7
 8029b5e:	d008      	beq.n	8029b72 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8029b60:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8029b64:	eb03 0b09 	add.w	fp, r3, r9
 8029b68:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8029b6c:	fb03 1309 	mla	r3, r3, r9, r1
 8029b70:	9305      	str	r3, [sp, #20]
 8029b72:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8029b76:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8029b7a:	4498      	add	r8, r3
 8029b7c:	9b04      	ldr	r3, [sp, #16]
 8029b7e:	3b01      	subs	r3, #1
 8029b80:	9304      	str	r3, [sp, #16]
 8029b82:	9b04      	ldr	r3, [sp, #16]
 8029b84:	3301      	adds	r3, #1
 8029b86:	d015      	beq.n	8029bb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8029b88:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8029b8c:	42bb      	cmp	r3, r7
 8029b8e:	d117      	bne.n	8029bc0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8029b90:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8029b94:	9b04      	ldr	r3, [sp, #16]
 8029b96:	4548      	cmp	r0, r9
 8029b98:	f103 33ff 	add.w	r3, r3, #4294967295
 8029b9c:	d17f      	bne.n	8029c9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8029b9e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8029ba2:	4401      	add	r1, r0
 8029ba4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8029ba8:	4480      	add	r8, r0
 8029baa:	e7e9      	b.n	8029b80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8029bac:	461f      	mov	r7, r3
 8029bae:	e044      	b.n	8029c3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8029bb0:	2000      	movs	r0, #0
 8029bb2:	e002      	b.n	8029bba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8029bb4:	2900      	cmp	r1, #0
 8029bb6:	d16f      	bne.n	8029c98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8029bb8:	2001      	movs	r0, #1
 8029bba:	b00b      	add	sp, #44	; 0x2c
 8029bbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029bc0:	2900      	cmp	r1, #0
 8029bc2:	d030      	beq.n	8029c26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029bc4:	2f00      	cmp	r7, #0
 8029bc6:	db29      	blt.n	8029c1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029bc8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029bcc:	42bb      	cmp	r3, r7
 8029bce:	dd25      	ble.n	8029c1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029bd0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029bd4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029bd8:	f7ff ff76 	bl	8029ac8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029bdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029bde:	fb10 f003 	smulbb	r0, r0, r3
 8029be2:	b280      	uxth	r0, r0
 8029be4:	1c41      	adds	r1, r0, #1
 8029be6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029bea:	1209      	asrs	r1, r1, #8
 8029bec:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029bf0:	d014      	beq.n	8029c1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029bf2:	9808      	ldr	r0, [sp, #32]
 8029bf4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029bf6:	b2c9      	uxtb	r1, r1
 8029bf8:	b2ba      	uxth	r2, r7
 8029bfa:	9102      	str	r1, [sp, #8]
 8029bfc:	2101      	movs	r1, #1
 8029bfe:	4413      	add	r3, r2
 8029c00:	9101      	str	r1, [sp, #4]
 8029c02:	4402      	add	r2, r0
 8029c04:	fa0f f18b 	sxth.w	r1, fp
 8029c08:	f8da 0000 	ldr.w	r0, [sl]
 8029c0c:	9100      	str	r1, [sp, #0]
 8029c0e:	6941      	ldr	r1, [r0, #20]
 8029c10:	b21b      	sxth	r3, r3
 8029c12:	460d      	mov	r5, r1
 8029c14:	b212      	sxth	r2, r2
 8029c16:	9905      	ldr	r1, [sp, #20]
 8029c18:	4650      	mov	r0, sl
 8029c1a:	47a8      	blx	r5
 8029c1c:	9b04      	ldr	r3, [sp, #16]
 8029c1e:	3301      	adds	r3, #1
 8029c20:	f107 0201 	add.w	r2, r7, #1
 8029c24:	d0c8      	beq.n	8029bb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029c26:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029c2a:	1abb      	subs	r3, r7, r2
 8029c2c:	2b00      	cmp	r3, #0
 8029c2e:	dd31      	ble.n	8029c94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c30:	2a00      	cmp	r2, #0
 8029c32:	dabb      	bge.n	8029bac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029c34:	2f00      	cmp	r7, #0
 8029c36:	dd2d      	ble.n	8029c94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c38:	2200      	movs	r2, #0
 8029c3a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029c3e:	19d1      	adds	r1, r2, r7
 8029c40:	4299      	cmp	r1, r3
 8029c42:	db02      	blt.n	8029c4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029c44:	1a9f      	subs	r7, r3, r2
 8029c46:	2f00      	cmp	r7, #0
 8029c48:	dd24      	ble.n	8029c94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c4a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8029c4e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029c52:	f7ff ff39 	bl	8029ac8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029c56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029c58:	fb10 f003 	smulbb	r0, r0, r3
 8029c5c:	b280      	uxth	r0, r0
 8029c5e:	1c41      	adds	r1, r0, #1
 8029c60:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029c64:	1209      	asrs	r1, r1, #8
 8029c66:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029c6a:	d013      	beq.n	8029c94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c6c:	9808      	ldr	r0, [sp, #32]
 8029c6e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029c70:	b292      	uxth	r2, r2
 8029c72:	b2c9      	uxtb	r1, r1
 8029c74:	4413      	add	r3, r2
 8029c76:	9102      	str	r1, [sp, #8]
 8029c78:	4402      	add	r2, r0
 8029c7a:	b23f      	sxth	r7, r7
 8029c7c:	f8da 0000 	ldr.w	r0, [sl]
 8029c80:	9701      	str	r7, [sp, #4]
 8029c82:	fa0f f18b 	sxth.w	r1, fp
 8029c86:	9100      	str	r1, [sp, #0]
 8029c88:	6947      	ldr	r7, [r0, #20]
 8029c8a:	9905      	ldr	r1, [sp, #20]
 8029c8c:	b21b      	sxth	r3, r3
 8029c8e:	b212      	sxth	r2, r2
 8029c90:	4650      	mov	r0, sl
 8029c92:	47b8      	blx	r7
 8029c94:	464b      	mov	r3, r9
 8029c96:	e75c      	b.n	8029b52 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8029c98:	2f00      	cmp	r7, #0
 8029c9a:	da95      	bge.n	8029bc8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8029c9c:	e78c      	b.n	8029bb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029c9e:	2900      	cmp	r1, #0
 8029ca0:	d0f8      	beq.n	8029c94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029ca2:	e78f      	b.n	8029bc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08029ca4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8029ca4:	4b4b      	ldr	r3, [pc, #300]	; (8029dd4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8029ca6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8029caa:	2500      	movs	r5, #0
 8029cac:	f100 0620 	add.w	r6, r0, #32
 8029cb0:	4604      	mov	r4, r0
 8029cb2:	e9c0 3100 	strd	r3, r1, [r0]
 8029cb6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8029cba:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8029cbe:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8029cc2:	f100 0718 	add.w	r7, r0, #24
 8029cc6:	4630      	mov	r0, r6
 8029cc8:	4690      	mov	r8, r2
 8029cca:	f7ec fb03 	bl	80162d4 <_ZN8touchgfx7OutlineC1Ev>
 8029cce:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8029cd2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8029cd6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8029cda:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8029cde:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8029ce2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8029ce6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8029cea:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8029cee:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8029cf2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8029cf6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8029cfa:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8029cfe:	9500      	str	r5, [sp, #0]
 8029d00:	4410      	add	r0, r2
 8029d02:	b280      	uxth	r0, r0
 8029d04:	fa0f fa80 	sxth.w	sl, r0
 8029d08:	45aa      	cmp	sl, r5
 8029d0a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8029d0e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8029d12:	dd5c      	ble.n	8029dce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d14:	4591      	cmp	r9, r2
 8029d16:	dd5a      	ble.n	8029dce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d18:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8029d1c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8029d20:	440b      	add	r3, r1
 8029d22:	b29b      	uxth	r3, r3
 8029d24:	b21d      	sxth	r5, r3
 8029d26:	2d00      	cmp	r5, #0
 8029d28:	dd51      	ble.n	8029dce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d2a:	458e      	cmp	lr, r1
 8029d2c:	dd4f      	ble.n	8029dce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d2e:	45d1      	cmp	r9, sl
 8029d30:	bfb8      	it	lt
 8029d32:	fa1f f089 	uxthlt.w	r0, r9
 8029d36:	45ae      	cmp	lr, r5
 8029d38:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8029d3c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8029d40:	bfb8      	it	lt
 8029d42:	fa1f f38e 	uxthlt.w	r3, lr
 8029d46:	1a80      	subs	r0, r0, r2
 8029d48:	1a5b      	subs	r3, r3, r1
 8029d4a:	f8ad 0004 	strh.w	r0, [sp, #4]
 8029d4e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029d52:	f8ad 2000 	strh.w	r2, [sp]
 8029d56:	f8ad 1002 	strh.w	r1, [sp, #2]
 8029d5a:	466d      	mov	r5, sp
 8029d5c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8029d60:	e887 0003 	stmia.w	r7, {r0, r1}
 8029d64:	f8dc 3000 	ldr.w	r3, [ip]
 8029d68:	4660      	mov	r0, ip
 8029d6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029d6c:	4639      	mov	r1, r7
 8029d6e:	4798      	blx	r3
 8029d70:	6861      	ldr	r1, [r4, #4]
 8029d72:	4628      	mov	r0, r5
 8029d74:	3104      	adds	r1, #4
 8029d76:	f7ee fcb3 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029d7a:	4638      	mov	r0, r7
 8029d7c:	f7ee fc6c 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029d80:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029d84:	f8bd 2000 	ldrh.w	r2, [sp]
 8029d88:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8029d8c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8029d90:	4630      	mov	r0, r6
 8029d92:	f7ec fa83 	bl	801629c <_ZN8touchgfx7Outline5resetEv>
 8029d96:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029d9a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8029d9e:	015b      	lsls	r3, r3, #5
 8029da0:	60a3      	str	r3, [r4, #8]
 8029da2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029da6:	015b      	lsls	r3, r3, #5
 8029da8:	60e3      	str	r3, [r4, #12]
 8029daa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8029dae:	015b      	lsls	r3, r3, #5
 8029db0:	6123      	str	r3, [r4, #16]
 8029db2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8029db6:	015b      	lsls	r3, r3, #5
 8029db8:	6163      	str	r3, [r4, #20]
 8029dba:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8029dbe:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8029dc2:	4620      	mov	r0, r4
 8029dc4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8029dc8:	b002      	add	sp, #8
 8029dca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029dce:	2300      	movs	r3, #0
 8029dd0:	9301      	str	r3, [sp, #4]
 8029dd2:	e7c2      	b.n	8029d5a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8029dd4:	08032214 	.word	0x08032214

08029dd8 <_ZN8touchgfx6Canvas5closeEv>:
 8029dd8:	b538      	push	{r3, r4, r5, lr}
 8029dda:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029dde:	4604      	mov	r4, r0
 8029de0:	b193      	cbz	r3, 8029e08 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029de2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8029de6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8029dea:	4213      	tst	r3, r2
 8029dec:	d10c      	bne.n	8029e08 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029dee:	f100 0520 	add.w	r5, r0, #32
 8029df2:	b123      	cbz	r3, 8029dfe <_ZN8touchgfx6Canvas5closeEv+0x26>
 8029df4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8029df8:	4628      	mov	r0, r5
 8029dfa:	f7ff fe79 	bl	8029af0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029dfe:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8029e02:	4628      	mov	r0, r5
 8029e04:	f7ff fe74 	bl	8029af0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029e08:	2300      	movs	r3, #0
 8029e0a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029e0e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8029e12:	4298      	cmp	r0, r3
 8029e14:	bf34      	ite	cc
 8029e16:	2000      	movcc	r0, #0
 8029e18:	2001      	movcs	r0, #1
 8029e1a:	bd38      	pop	{r3, r4, r5, pc}

08029e1c <_ZN8touchgfx6Canvas6renderEh>:
 8029e1c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029e20:	4604      	mov	r4, r0
 8029e22:	6840      	ldr	r0, [r0, #4]
 8029e24:	6803      	ldr	r3, [r0, #0]
 8029e26:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8029e28:	460d      	mov	r5, r1
 8029e2a:	4798      	blx	r3
 8029e2c:	fb10 f105 	smulbb	r1, r0, r5
 8029e30:	b289      	uxth	r1, r1
 8029e32:	1c4d      	adds	r5, r1, #1
 8029e34:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8029e38:	122d      	asrs	r5, r5, #8
 8029e3a:	f000 809d 	beq.w	8029f78 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029e3e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8029e42:	2b00      	cmp	r3, #0
 8029e44:	f000 8098 	beq.w	8029f78 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029e48:	4620      	mov	r0, r4
 8029e4a:	f7ff ffc5 	bl	8029dd8 <_ZN8touchgfx6Canvas5closeEv>
 8029e4e:	4607      	mov	r7, r0
 8029e50:	2800      	cmp	r0, #0
 8029e52:	d048      	beq.n	8029ee6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029e54:	6863      	ldr	r3, [r4, #4]
 8029e56:	4e49      	ldr	r6, [pc, #292]	; (8029f7c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8029e58:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029e5a:	6837      	ldr	r7, [r6, #0]
 8029e5c:	6803      	ldr	r3, [r0, #0]
 8029e5e:	689b      	ldr	r3, [r3, #8]
 8029e60:	4798      	blx	r3
 8029e62:	4601      	mov	r1, r0
 8029e64:	4638      	mov	r0, r7
 8029e66:	f7ea f9bb 	bl	80141e0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8029e6a:	4607      	mov	r7, r0
 8029e6c:	f7db fb40 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8029e70:	6803      	ldr	r3, [r0, #0]
 8029e72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8029e74:	4798      	blx	r3
 8029e76:	4680      	mov	r8, r0
 8029e78:	f7db fb3a 	bl	80054f0 <_ZN8touchgfx3HAL3lcdEv>
 8029e7c:	6803      	ldr	r3, [r0, #0]
 8029e7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029e80:	4798      	blx	r3
 8029e82:	280b      	cmp	r0, #11
 8029e84:	d85d      	bhi.n	8029f42 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8029e86:	e8df f000 	tbb	[pc, r0]
 8029e8a:	5e53      	.short	0x5e53
 8029e8c:	325c066e 	.word	0x325c066e
 8029e90:	67676742 	.word	0x67676742
 8029e94:	6767      	.short	0x6767
 8029e96:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029e9a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029e9e:	2208      	movs	r2, #8
 8029ea0:	fb91 f2f2 	sdiv	r2, r1, r2
 8029ea4:	fb08 2303 	mla	r3, r8, r3, r2
 8029ea8:	441f      	add	r7, r3
 8029eaa:	424b      	negs	r3, r1
 8029eac:	f003 0307 	and.w	r3, r3, #7
 8029eb0:	f001 0107 	and.w	r1, r1, #7
 8029eb4:	bf58      	it	pl
 8029eb6:	4259      	negpl	r1, r3
 8029eb8:	b2c9      	uxtb	r1, r1
 8029eba:	b2ed      	uxtb	r5, r5
 8029ebc:	e9cd 1500 	strd	r1, r5, [sp]
 8029ec0:	6860      	ldr	r0, [r4, #4]
 8029ec2:	463a      	mov	r2, r7
 8029ec4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8029ec6:	fa0f f388 	sxth.w	r3, r8
 8029eca:	f104 0020 	add.w	r0, r4, #32
 8029ece:	f7ff fe1b 	bl	8029b08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8029ed2:	6863      	ldr	r3, [r4, #4]
 8029ed4:	4607      	mov	r7, r0
 8029ed6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029ed8:	6803      	ldr	r3, [r0, #0]
 8029eda:	691b      	ldr	r3, [r3, #16]
 8029edc:	4798      	blx	r3
 8029ede:	6830      	ldr	r0, [r6, #0]
 8029ee0:	6803      	ldr	r3, [r0, #0]
 8029ee2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029ee4:	4798      	blx	r3
 8029ee6:	4638      	mov	r0, r7
 8029ee8:	b002      	add	sp, #8
 8029eea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029eee:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029ef2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029ef6:	2204      	movs	r2, #4
 8029ef8:	fb91 f2f2 	sdiv	r2, r1, r2
 8029efc:	fb08 2303 	mla	r3, r8, r3, r2
 8029f00:	441f      	add	r7, r3
 8029f02:	424b      	negs	r3, r1
 8029f04:	f003 0303 	and.w	r3, r3, #3
 8029f08:	f001 0103 	and.w	r1, r1, #3
 8029f0c:	e7d2      	b.n	8029eb4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8029f0e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029f12:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f16:	2900      	cmp	r1, #0
 8029f18:	f04f 0202 	mov.w	r2, #2
 8029f1c:	fb91 f2f2 	sdiv	r2, r1, r2
 8029f20:	f001 0101 	and.w	r1, r1, #1
 8029f24:	fb08 2303 	mla	r3, r8, r3, r2
 8029f28:	441f      	add	r7, r3
 8029f2a:	bfb8      	it	lt
 8029f2c:	4249      	neglt	r1, r1
 8029f2e:	e7c3      	b.n	8029eb8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8029f30:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f34:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f38:	fb08 f303 	mul.w	r3, r8, r3
 8029f3c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8029f40:	441f      	add	r7, r3
 8029f42:	2100      	movs	r1, #0
 8029f44:	e7b9      	b.n	8029eba <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8029f46:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f4a:	fb08 f203 	mul.w	r2, r8, r3
 8029f4e:	8b23      	ldrh	r3, [r4, #24]
 8029f50:	2103      	movs	r1, #3
 8029f52:	fb13 2301 	smlabb	r3, r3, r1, r2
 8029f56:	e7f3      	b.n	8029f40 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f58:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f5c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f60:	fb08 2303 	mla	r3, r8, r3, r2
 8029f64:	e7ec      	b.n	8029f40 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f66:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f6a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f6e:	fb08 f303 	mul.w	r3, r8, r3
 8029f72:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8029f76:	e7e3      	b.n	8029f40 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f78:	2701      	movs	r7, #1
 8029f7a:	e7b4      	b.n	8029ee6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029f7c:	2001383c 	.word	0x2001383c

08029f80 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8029f80:	b510      	push	{r4, lr}
 8029f82:	4b07      	ldr	r3, [pc, #28]	; (8029fa0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8029f84:	781b      	ldrb	r3, [r3, #0]
 8029f86:	2b01      	cmp	r3, #1
 8029f88:	d108      	bne.n	8029f9c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8029f8a:	6843      	ldr	r3, [r0, #4]
 8029f8c:	6814      	ldr	r4, [r2, #0]
 8029f8e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8029f92:	680b      	ldr	r3, [r1, #0]
 8029f94:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8029f98:	6013      	str	r3, [r2, #0]
 8029f9a:	600c      	str	r4, [r1, #0]
 8029f9c:	bd10      	pop	{r4, pc}
 8029f9e:	bf00      	nop
 8029fa0:	20013834 	.word	0x20013834

08029fa4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8029fa4:	b513      	push	{r0, r1, r4, lr}
 8029fa6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029faa:	4604      	mov	r4, r0
 8029fac:	e9cd 2100 	strd	r2, r1, [sp]
 8029fb0:	b9a3      	cbnz	r3, 8029fdc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8029fb2:	466a      	mov	r2, sp
 8029fb4:	a901      	add	r1, sp, #4
 8029fb6:	4620      	mov	r0, r4
 8029fb8:	f7ff ffe2 	bl	8029f80 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8029fbc:	68a3      	ldr	r3, [r4, #8]
 8029fbe:	9901      	ldr	r1, [sp, #4]
 8029fc0:	9a00      	ldr	r2, [sp, #0]
 8029fc2:	1ac9      	subs	r1, r1, r3
 8029fc4:	68e3      	ldr	r3, [r4, #12]
 8029fc6:	9101      	str	r1, [sp, #4]
 8029fc8:	1ad2      	subs	r2, r2, r3
 8029fca:	2a00      	cmp	r2, #0
 8029fcc:	9200      	str	r2, [sp, #0]
 8029fce:	da0b      	bge.n	8029fe8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8029fd0:	2301      	movs	r3, #1
 8029fd2:	2900      	cmp	r1, #0
 8029fd4:	da0e      	bge.n	8029ff4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8029fd6:	f043 0304 	orr.w	r3, r3, #4
 8029fda:	e013      	b.n	802a004 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8029fdc:	f7ff fefc 	bl	8029dd8 <_ZN8touchgfx6Canvas5closeEv>
 8029fe0:	2800      	cmp	r0, #0
 8029fe2:	d1e6      	bne.n	8029fb2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8029fe4:	b002      	add	sp, #8
 8029fe6:	bd10      	pop	{r4, pc}
 8029fe8:	6963      	ldr	r3, [r4, #20]
 8029fea:	429a      	cmp	r2, r3
 8029fec:	bfac      	ite	ge
 8029fee:	2302      	movge	r3, #2
 8029ff0:	2300      	movlt	r3, #0
 8029ff2:	e7ee      	b.n	8029fd2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8029ff4:	6920      	ldr	r0, [r4, #16]
 8029ff6:	4281      	cmp	r1, r0
 8029ff8:	bfac      	ite	ge
 8029ffa:	2008      	movge	r0, #8
 8029ffc:	2000      	movlt	r0, #0
 8029ffe:	4318      	orrs	r0, r3
 802a000:	b2c3      	uxtb	r3, r0
 802a002:	b158      	cbz	r0, 802a01c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802a004:	2200      	movs	r2, #0
 802a006:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802a00a:	9901      	ldr	r1, [sp, #4]
 802a00c:	9a00      	ldr	r2, [sp, #0]
 802a00e:	66a1      	str	r1, [r4, #104]	; 0x68
 802a010:	66e2      	str	r2, [r4, #108]	; 0x6c
 802a012:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802a016:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802a01a:	e7e3      	b.n	8029fe4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802a01c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a020:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a024:	4298      	cmp	r0, r3
 802a026:	d803      	bhi.n	802a030 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802a028:	f104 0020 	add.w	r0, r4, #32
 802a02c:	f7ec fe34 	bl	8016c98 <_ZN8touchgfx7Outline6moveToEii>
 802a030:	2301      	movs	r3, #1
 802a032:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a036:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a03a:	2300      	movs	r3, #0
 802a03c:	e7e5      	b.n	802a00a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a03e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a040:	ab02      	add	r3, sp, #8
 802a042:	4604      	mov	r4, r0
 802a044:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a048:	9101      	str	r1, [sp, #4]
 802a04a:	461a      	mov	r2, r3
 802a04c:	a901      	add	r1, sp, #4
 802a04e:	f7ff ff97 	bl	8029f80 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a052:	68a3      	ldr	r3, [r4, #8]
 802a054:	9901      	ldr	r1, [sp, #4]
 802a056:	9a00      	ldr	r2, [sp, #0]
 802a058:	1ac9      	subs	r1, r1, r3
 802a05a:	68e3      	ldr	r3, [r4, #12]
 802a05c:	9101      	str	r1, [sp, #4]
 802a05e:	1ad2      	subs	r2, r2, r3
 802a060:	2a00      	cmp	r2, #0
 802a062:	9200      	str	r2, [sp, #0]
 802a064:	db1c      	blt.n	802a0a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a066:	6963      	ldr	r3, [r4, #20]
 802a068:	429a      	cmp	r2, r3
 802a06a:	bfac      	ite	ge
 802a06c:	2002      	movge	r0, #2
 802a06e:	2000      	movlt	r0, #0
 802a070:	2900      	cmp	r1, #0
 802a072:	db17      	blt.n	802a0a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a074:	6923      	ldr	r3, [r4, #16]
 802a076:	4299      	cmp	r1, r3
 802a078:	bfac      	ite	ge
 802a07a:	2308      	movge	r3, #8
 802a07c:	2300      	movlt	r3, #0
 802a07e:	4303      	orrs	r3, r0
 802a080:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802a084:	b2dd      	uxtb	r5, r3
 802a086:	b978      	cbnz	r0, 802a0a8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a088:	f104 0020 	add.w	r0, r4, #32
 802a08c:	f7ff fd30 	bl	8029af0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a090:	9b01      	ldr	r3, [sp, #4]
 802a092:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a094:	9b00      	ldr	r3, [sp, #0]
 802a096:	6623      	str	r3, [r4, #96]	; 0x60
 802a098:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802a09c:	b002      	add	sp, #8
 802a09e:	bd70      	pop	{r4, r5, r6, pc}
 802a0a0:	2001      	movs	r0, #1
 802a0a2:	e7e5      	b.n	802a070 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a0a4:	2304      	movs	r3, #4
 802a0a6:	e7ea      	b.n	802a07e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a0a8:	b113      	cbz	r3, 802a0b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a0aa:	ea10 0305 	ands.w	r3, r0, r5
 802a0ae:	d11c      	bne.n	802a0ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a0b0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802a0b4:	f104 0620 	add.w	r6, r4, #32
 802a0b8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802a0bc:	b98b      	cbnz	r3, 802a0e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a0be:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a0c2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a0c6:	4298      	cmp	r0, r3
 802a0c8:	d802      	bhi.n	802a0d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a0ca:	4630      	mov	r0, r6
 802a0cc:	f7ec fde4 	bl	8016c98 <_ZN8touchgfx7Outline6moveToEii>
 802a0d0:	2301      	movs	r3, #1
 802a0d2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a0d6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a0da:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a0de:	4630      	mov	r0, r6
 802a0e0:	e7d4      	b.n	802a08c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a0e2:	4630      	mov	r0, r6
 802a0e4:	f7ff fd04 	bl	8029af0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a0e8:	e7f7      	b.n	802a0da <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a0ea:	461d      	mov	r5, r3
 802a0ec:	e7d0      	b.n	802a090 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a0f0 <_ZN8touchgfx6CanvasD1Ev>:
 802a0f0:	b510      	push	{r4, lr}
 802a0f2:	4b04      	ldr	r3, [pc, #16]	; (802a104 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a0f4:	4604      	mov	r4, r0
 802a0f6:	f840 3b20 	str.w	r3, [r0], #32
 802a0fa:	f7ec f8c7 	bl	801628c <_ZN8touchgfx7OutlineD1Ev>
 802a0fe:	4620      	mov	r0, r4
 802a100:	bd10      	pop	{r4, pc}
 802a102:	bf00      	nop
 802a104:	08032214 	.word	0x08032214

0802a108 <_ZN8touchgfx6CanvasD0Ev>:
 802a108:	b510      	push	{r4, lr}
 802a10a:	4604      	mov	r4, r0
 802a10c:	f7ff fff0 	bl	802a0f0 <_ZN8touchgfx6CanvasD1Ev>
 802a110:	4620      	mov	r0, r4
 802a112:	2170      	movs	r1, #112	; 0x70
 802a114:	f002 fd3d 	bl	802cb92 <_ZdlPvj>
 802a118:	4620      	mov	r0, r4
 802a11a:	bd10      	pop	{r4, pc}

0802a11c <_ZN8touchgfx6CircleD1Ev>:
 802a11c:	4770      	bx	lr

0802a11e <_ZN8touchgfx6CircleD0Ev>:
 802a11e:	b510      	push	{r4, lr}
 802a120:	2148      	movs	r1, #72	; 0x48
 802a122:	4604      	mov	r4, r0
 802a124:	f002 fd35 	bl	802cb92 <_ZdlPvj>
 802a128:	4620      	mov	r0, r4
 802a12a:	bd10      	pop	{r4, pc}

0802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802a12c:	b508      	push	{r3, lr}
 802a12e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802a132:	f7ea fbab 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a136:	bd08      	pop	{r3, pc}

0802a138 <_ZN8touchgfx6CircleC1Ev>:
 802a138:	b510      	push	{r4, lr}
 802a13a:	4604      	mov	r4, r0
 802a13c:	f7ea fa42 	bl	80145c4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 802a140:	4b08      	ldr	r3, [pc, #32]	; (802a164 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802a142:	6023      	str	r3, [r4, #0]
 802a144:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802a148:	2300      	movs	r3, #0
 802a14a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802a14e:	f24b 4205 	movw	r2, #46085	; 0xb405
 802a152:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802a156:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802a15a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802a15e:	60a3      	str	r3, [r4, #8]
 802a160:	4620      	mov	r0, r4
 802a162:	bd10      	pop	{r4, pc}
 802a164:	08032228 	.word	0x08032228

0802a168 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802a168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a16c:	428a      	cmp	r2, r1
 802a16e:	4680      	mov	r8, r0
 802a170:	4610      	mov	r0, r2
 802a172:	4699      	mov	r9, r3
 802a174:	bfa6      	itte	ge
 802a176:	460a      	movge	r2, r1
 802a178:	4603      	movge	r3, r0
 802a17a:	460b      	movlt	r3, r1
 802a17c:	1a99      	subs	r1, r3, r2
 802a17e:	b085      	sub	sp, #20
 802a180:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 802a184:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802a188:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802a18a:	bfa4      	itt	ge
 802a18c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 802a190:	2200      	movge	r2, #0
 802a192:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802a196:	9300      	str	r3, [sp, #0]
 802a198:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802a19c:	f102 0b01 	add.w	fp, r2, #1
 802a1a0:	2c00      	cmp	r4, #0
 802a1a2:	f040 80af 	bne.w	802a304 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802a1a6:	4610      	mov	r0, r2
 802a1a8:	9201      	str	r2, [sp, #4]
 802a1aa:	f7ea fb6f 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a1ae:	a903      	add	r1, sp, #12
 802a1b0:	9003      	str	r0, [sp, #12]
 802a1b2:	4650      	mov	r0, sl
 802a1b4:	f7ea fa32 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a1b8:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a1bc:	9a01      	ldr	r2, [sp, #4]
 802a1be:	4408      	add	r0, r1
 802a1c0:	f8d9 1000 	ldr.w	r1, [r9]
 802a1c4:	4281      	cmp	r1, r0
 802a1c6:	bfc8      	it	gt
 802a1c8:	f8c9 0000 	strgt.w	r0, [r9]
 802a1cc:	6839      	ldr	r1, [r7, #0]
 802a1ce:	4288      	cmp	r0, r1
 802a1d0:	bfc8      	it	gt
 802a1d2:	6038      	strgt	r0, [r7, #0]
 802a1d4:	4610      	mov	r0, r2
 802a1d6:	f7ff ffa9 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a1da:	a903      	add	r1, sp, #12
 802a1dc:	9003      	str	r0, [sp, #12]
 802a1de:	4650      	mov	r0, sl
 802a1e0:	f7ea fa1c 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a1e4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a1e8:	1a10      	subs	r0, r2, r0
 802a1ea:	6832      	ldr	r2, [r6, #0]
 802a1ec:	4282      	cmp	r2, r0
 802a1ee:	bfc8      	it	gt
 802a1f0:	6030      	strgt	r0, [r6, #0]
 802a1f2:	682a      	ldr	r2, [r5, #0]
 802a1f4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a1f8:	4290      	cmp	r0, r2
 802a1fa:	fb9b f2f1 	sdiv	r2, fp, r1
 802a1fe:	fb01 b212 	mls	r2, r1, r2, fp
 802a202:	eba1 0202 	sub.w	r2, r1, r2
 802a206:	bfc8      	it	gt
 802a208:	6028      	strgt	r0, [r5, #0]
 802a20a:	fb92 f0f1 	sdiv	r0, r2, r1
 802a20e:	fb01 2210 	mls	r2, r1, r0, r2
 802a212:	4493      	add	fp, r2
 802a214:	9b00      	ldr	r3, [sp, #0]
 802a216:	455b      	cmp	r3, fp
 802a218:	db2a      	blt.n	802a270 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802a21a:	4658      	mov	r0, fp
 802a21c:	f7ea fb36 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a220:	a903      	add	r1, sp, #12
 802a222:	9003      	str	r0, [sp, #12]
 802a224:	4650      	mov	r0, sl
 802a226:	f7ea f9f9 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a22a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a22e:	4410      	add	r0, r2
 802a230:	f8d9 2000 	ldr.w	r2, [r9]
 802a234:	4282      	cmp	r2, r0
 802a236:	bfc8      	it	gt
 802a238:	f8c9 0000 	strgt.w	r0, [r9]
 802a23c:	683a      	ldr	r2, [r7, #0]
 802a23e:	4290      	cmp	r0, r2
 802a240:	bfc8      	it	gt
 802a242:	6038      	strgt	r0, [r7, #0]
 802a244:	4658      	mov	r0, fp
 802a246:	f7ff ff71 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a24a:	a903      	add	r1, sp, #12
 802a24c:	9003      	str	r0, [sp, #12]
 802a24e:	4650      	mov	r0, sl
 802a250:	f7ea f9e4 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a254:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a258:	1a10      	subs	r0, r2, r0
 802a25a:	6832      	ldr	r2, [r6, #0]
 802a25c:	4282      	cmp	r2, r0
 802a25e:	bfc8      	it	gt
 802a260:	6030      	strgt	r0, [r6, #0]
 802a262:	682a      	ldr	r2, [r5, #0]
 802a264:	4290      	cmp	r0, r2
 802a266:	bfc8      	it	gt
 802a268:	6028      	strgt	r0, [r5, #0]
 802a26a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a26e:	e7d1      	b.n	802a214 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802a270:	9b00      	ldr	r3, [sp, #0]
 802a272:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a276:	455b      	cmp	r3, fp
 802a278:	dd27      	ble.n	802a2ca <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802a27a:	4618      	mov	r0, r3
 802a27c:	f7ea fb06 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a280:	a903      	add	r1, sp, #12
 802a282:	9003      	str	r0, [sp, #12]
 802a284:	4650      	mov	r0, sl
 802a286:	f7ea f9c9 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a28a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a28e:	4410      	add	r0, r2
 802a290:	f8d9 2000 	ldr.w	r2, [r9]
 802a294:	4282      	cmp	r2, r0
 802a296:	bfc8      	it	gt
 802a298:	f8c9 0000 	strgt.w	r0, [r9]
 802a29c:	683a      	ldr	r2, [r7, #0]
 802a29e:	4290      	cmp	r0, r2
 802a2a0:	bfc8      	it	gt
 802a2a2:	6038      	strgt	r0, [r7, #0]
 802a2a4:	9800      	ldr	r0, [sp, #0]
 802a2a6:	f7ff ff41 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a2aa:	a903      	add	r1, sp, #12
 802a2ac:	9003      	str	r0, [sp, #12]
 802a2ae:	4650      	mov	r0, sl
 802a2b0:	f7ea f9b4 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a2b4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a2b8:	1a10      	subs	r0, r2, r0
 802a2ba:	6832      	ldr	r2, [r6, #0]
 802a2bc:	4282      	cmp	r2, r0
 802a2be:	bfc8      	it	gt
 802a2c0:	6030      	strgt	r0, [r6, #0]
 802a2c2:	682a      	ldr	r2, [r5, #0]
 802a2c4:	4290      	cmp	r0, r2
 802a2c6:	bfc8      	it	gt
 802a2c8:	6028      	strgt	r0, [r5, #0]
 802a2ca:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a2ce:	f8d9 1000 	ldr.w	r1, [r9]
 802a2d2:	4291      	cmp	r1, r2
 802a2d4:	bfc8      	it	gt
 802a2d6:	f8c9 2000 	strgt.w	r2, [r9]
 802a2da:	683a      	ldr	r2, [r7, #0]
 802a2dc:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802a2e0:	429a      	cmp	r2, r3
 802a2e2:	bfb8      	it	lt
 802a2e4:	603b      	strlt	r3, [r7, #0]
 802a2e6:	6832      	ldr	r2, [r6, #0]
 802a2e8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a2ec:	429a      	cmp	r2, r3
 802a2ee:	bfc8      	it	gt
 802a2f0:	6033      	strgt	r3, [r6, #0]
 802a2f2:	682a      	ldr	r2, [r5, #0]
 802a2f4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a2f8:	429a      	cmp	r2, r3
 802a2fa:	da00      	bge.n	802a2fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a2fc:	602b      	str	r3, [r5, #0]
 802a2fe:	b005      	add	sp, #20
 802a300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a304:	2002      	movs	r0, #2
 802a306:	3401      	adds	r4, #1
 802a308:	fb94 f4f0 	sdiv	r4, r4, r0
 802a30c:	4610      	mov	r0, r2
 802a30e:	9201      	str	r2, [sp, #4]
 802a310:	f7ea fabc 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a314:	a903      	add	r1, sp, #12
 802a316:	9003      	str	r0, [sp, #12]
 802a318:	4650      	mov	r0, sl
 802a31a:	f7ea f97f 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a31e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a322:	9a01      	ldr	r2, [sp, #4]
 802a324:	4408      	add	r0, r1
 802a326:	f8d9 1000 	ldr.w	r1, [r9]
 802a32a:	1b03      	subs	r3, r0, r4
 802a32c:	4299      	cmp	r1, r3
 802a32e:	bfc8      	it	gt
 802a330:	f8c9 3000 	strgt.w	r3, [r9]
 802a334:	6839      	ldr	r1, [r7, #0]
 802a336:	428b      	cmp	r3, r1
 802a338:	bfc8      	it	gt
 802a33a:	603b      	strgt	r3, [r7, #0]
 802a33c:	f8d9 1000 	ldr.w	r1, [r9]
 802a340:	4420      	add	r0, r4
 802a342:	4281      	cmp	r1, r0
 802a344:	bfc8      	it	gt
 802a346:	f8c9 0000 	strgt.w	r0, [r9]
 802a34a:	6839      	ldr	r1, [r7, #0]
 802a34c:	4288      	cmp	r0, r1
 802a34e:	bfc8      	it	gt
 802a350:	6038      	strgt	r0, [r7, #0]
 802a352:	4610      	mov	r0, r2
 802a354:	f7ff feea 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a358:	a903      	add	r1, sp, #12
 802a35a:	9003      	str	r0, [sp, #12]
 802a35c:	4650      	mov	r0, sl
 802a35e:	f7ea f95d 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a362:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a366:	1a10      	subs	r0, r2, r0
 802a368:	6832      	ldr	r2, [r6, #0]
 802a36a:	1b01      	subs	r1, r0, r4
 802a36c:	428a      	cmp	r2, r1
 802a36e:	bfc8      	it	gt
 802a370:	6031      	strgt	r1, [r6, #0]
 802a372:	682a      	ldr	r2, [r5, #0]
 802a374:	4291      	cmp	r1, r2
 802a376:	bfc8      	it	gt
 802a378:	6029      	strgt	r1, [r5, #0]
 802a37a:	6832      	ldr	r2, [r6, #0]
 802a37c:	4420      	add	r0, r4
 802a37e:	4282      	cmp	r2, r0
 802a380:	bfc8      	it	gt
 802a382:	6030      	strgt	r0, [r6, #0]
 802a384:	682a      	ldr	r2, [r5, #0]
 802a386:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a38a:	4290      	cmp	r0, r2
 802a38c:	fb9b f2f1 	sdiv	r2, fp, r1
 802a390:	fb01 b212 	mls	r2, r1, r2, fp
 802a394:	eba1 0202 	sub.w	r2, r1, r2
 802a398:	bfc8      	it	gt
 802a39a:	6028      	strgt	r0, [r5, #0]
 802a39c:	fb92 f0f1 	sdiv	r0, r2, r1
 802a3a0:	fb01 2210 	mls	r2, r1, r0, r2
 802a3a4:	4493      	add	fp, r2
 802a3a6:	9b00      	ldr	r3, [sp, #0]
 802a3a8:	455b      	cmp	r3, fp
 802a3aa:	db40      	blt.n	802a42e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802a3ac:	4658      	mov	r0, fp
 802a3ae:	f7ea fa6d 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a3b2:	a903      	add	r1, sp, #12
 802a3b4:	9003      	str	r0, [sp, #12]
 802a3b6:	4650      	mov	r0, sl
 802a3b8:	f7ea f930 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a3bc:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a3c0:	4410      	add	r0, r2
 802a3c2:	f8d9 2000 	ldr.w	r2, [r9]
 802a3c6:	1b01      	subs	r1, r0, r4
 802a3c8:	428a      	cmp	r2, r1
 802a3ca:	bfc8      	it	gt
 802a3cc:	f8c9 1000 	strgt.w	r1, [r9]
 802a3d0:	683a      	ldr	r2, [r7, #0]
 802a3d2:	4291      	cmp	r1, r2
 802a3d4:	bfc8      	it	gt
 802a3d6:	6039      	strgt	r1, [r7, #0]
 802a3d8:	f8d9 2000 	ldr.w	r2, [r9]
 802a3dc:	4420      	add	r0, r4
 802a3de:	4282      	cmp	r2, r0
 802a3e0:	bfc8      	it	gt
 802a3e2:	f8c9 0000 	strgt.w	r0, [r9]
 802a3e6:	683a      	ldr	r2, [r7, #0]
 802a3e8:	4290      	cmp	r0, r2
 802a3ea:	bfc8      	it	gt
 802a3ec:	6038      	strgt	r0, [r7, #0]
 802a3ee:	4658      	mov	r0, fp
 802a3f0:	f7ff fe9c 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a3f4:	a903      	add	r1, sp, #12
 802a3f6:	9003      	str	r0, [sp, #12]
 802a3f8:	4650      	mov	r0, sl
 802a3fa:	f7ea f90f 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a3fe:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a402:	1a10      	subs	r0, r2, r0
 802a404:	6832      	ldr	r2, [r6, #0]
 802a406:	1b01      	subs	r1, r0, r4
 802a408:	428a      	cmp	r2, r1
 802a40a:	bfc8      	it	gt
 802a40c:	6031      	strgt	r1, [r6, #0]
 802a40e:	682a      	ldr	r2, [r5, #0]
 802a410:	4291      	cmp	r1, r2
 802a412:	bfc8      	it	gt
 802a414:	6029      	strgt	r1, [r5, #0]
 802a416:	6832      	ldr	r2, [r6, #0]
 802a418:	4420      	add	r0, r4
 802a41a:	4282      	cmp	r2, r0
 802a41c:	bfc8      	it	gt
 802a41e:	6030      	strgt	r0, [r6, #0]
 802a420:	682a      	ldr	r2, [r5, #0]
 802a422:	4290      	cmp	r0, r2
 802a424:	bfc8      	it	gt
 802a426:	6028      	strgt	r0, [r5, #0]
 802a428:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a42c:	e7bb      	b.n	802a3a6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802a42e:	9b00      	ldr	r3, [sp, #0]
 802a430:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a434:	455b      	cmp	r3, fp
 802a436:	f77f af62 	ble.w	802a2fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a43a:	4618      	mov	r0, r3
 802a43c:	f7ea fa26 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a440:	a903      	add	r1, sp, #12
 802a442:	9003      	str	r0, [sp, #12]
 802a444:	4650      	mov	r0, sl
 802a446:	f7ea f8e9 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a44a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a44e:	4410      	add	r0, r2
 802a450:	f8d9 2000 	ldr.w	r2, [r9]
 802a454:	1b01      	subs	r1, r0, r4
 802a456:	428a      	cmp	r2, r1
 802a458:	bfc8      	it	gt
 802a45a:	f8c9 1000 	strgt.w	r1, [r9]
 802a45e:	683a      	ldr	r2, [r7, #0]
 802a460:	4291      	cmp	r1, r2
 802a462:	bfc8      	it	gt
 802a464:	6039      	strgt	r1, [r7, #0]
 802a466:	f8d9 2000 	ldr.w	r2, [r9]
 802a46a:	4420      	add	r0, r4
 802a46c:	4282      	cmp	r2, r0
 802a46e:	bfc8      	it	gt
 802a470:	f8c9 0000 	strgt.w	r0, [r9]
 802a474:	683b      	ldr	r3, [r7, #0]
 802a476:	4298      	cmp	r0, r3
 802a478:	bfc8      	it	gt
 802a47a:	6038      	strgt	r0, [r7, #0]
 802a47c:	9800      	ldr	r0, [sp, #0]
 802a47e:	f7ff fe55 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a482:	a903      	add	r1, sp, #12
 802a484:	9003      	str	r0, [sp, #12]
 802a486:	4650      	mov	r0, sl
 802a488:	f7ea f8c8 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a48c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a490:	6832      	ldr	r2, [r6, #0]
 802a492:	1a18      	subs	r0, r3, r0
 802a494:	1b03      	subs	r3, r0, r4
 802a496:	429a      	cmp	r2, r3
 802a498:	bfc8      	it	gt
 802a49a:	6033      	strgt	r3, [r6, #0]
 802a49c:	682a      	ldr	r2, [r5, #0]
 802a49e:	4293      	cmp	r3, r2
 802a4a0:	bfc8      	it	gt
 802a4a2:	602b      	strgt	r3, [r5, #0]
 802a4a4:	6833      	ldr	r3, [r6, #0]
 802a4a6:	4404      	add	r4, r0
 802a4a8:	42a3      	cmp	r3, r4
 802a4aa:	bfc8      	it	gt
 802a4ac:	6034      	strgt	r4, [r6, #0]
 802a4ae:	682b      	ldr	r3, [r5, #0]
 802a4b0:	429c      	cmp	r4, r3
 802a4b2:	bfc8      	it	gt
 802a4b4:	602c      	strgt	r4, [r5, #0]
 802a4b6:	e722      	b.n	802a2fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802a4b8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802a4b8:	b530      	push	{r4, r5, lr}
 802a4ba:	4604      	mov	r4, r0
 802a4bc:	4608      	mov	r0, r1
 802a4be:	4611      	mov	r1, r2
 802a4c0:	461a      	mov	r2, r3
 802a4c2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802a4c6:	b089      	sub	sp, #36	; 0x24
 802a4c8:	015b      	lsls	r3, r3, #5
 802a4ca:	9304      	str	r3, [sp, #16]
 802a4cc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802a4d0:	2500      	movs	r5, #0
 802a4d2:	015b      	lsls	r3, r3, #5
 802a4d4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802a4d8:	ab07      	add	r3, sp, #28
 802a4da:	9302      	str	r3, [sp, #8]
 802a4dc:	ab06      	add	r3, sp, #24
 802a4de:	9301      	str	r3, [sp, #4]
 802a4e0:	ab05      	add	r3, sp, #20
 802a4e2:	9300      	str	r3, [sp, #0]
 802a4e4:	ab04      	add	r3, sp, #16
 802a4e6:	9505      	str	r5, [sp, #20]
 802a4e8:	f7ff fe3e 	bl	802a168 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802a4ec:	2520      	movs	r5, #32
 802a4ee:	9a04      	ldr	r2, [sp, #16]
 802a4f0:	9805      	ldr	r0, [sp, #20]
 802a4f2:	fb92 f2f5 	sdiv	r2, r2, r5
 802a4f6:	fb90 f0f5 	sdiv	r0, r0, r5
 802a4fa:	b292      	uxth	r2, r2
 802a4fc:	3002      	adds	r0, #2
 802a4fe:	1a80      	subs	r0, r0, r2
 802a500:	9b06      	ldr	r3, [sp, #24]
 802a502:	9907      	ldr	r1, [sp, #28]
 802a504:	fb93 f3f5 	sdiv	r3, r3, r5
 802a508:	fb91 f1f5 	sdiv	r1, r1, r5
 802a50c:	b29b      	uxth	r3, r3
 802a50e:	3102      	adds	r1, #2
 802a510:	1ac9      	subs	r1, r1, r3
 802a512:	3a01      	subs	r2, #1
 802a514:	3b01      	subs	r3, #1
 802a516:	80a0      	strh	r0, [r4, #4]
 802a518:	4620      	mov	r0, r4
 802a51a:	8022      	strh	r2, [r4, #0]
 802a51c:	8063      	strh	r3, [r4, #2]
 802a51e:	80e1      	strh	r1, [r4, #6]
 802a520:	b009      	add	sp, #36	; 0x24
 802a522:	bd30      	pop	{r4, r5, pc}

0802a524 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 802a524:	b510      	push	{r4, lr}
 802a526:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802a52a:	4604      	mov	r4, r0
 802a52c:	f7ff ffc4 	bl	802a4b8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a530:	4620      	mov	r0, r4
 802a532:	bd10      	pop	{r4, pc}

0802a534 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 802a534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a536:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802a53a:	4606      	mov	r6, r0
 802a53c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802a540:	6813      	ldr	r3, [r2, #0]
 802a542:	42a5      	cmp	r5, r4
 802a544:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802a548:	da2b      	bge.n	802a5a2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802a54a:	42a3      	cmp	r3, r4
 802a54c:	dd14      	ble.n	802a578 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802a54e:	b168      	cbz	r0, 802a56c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a550:	4267      	negs	r7, r4
 802a552:	fb97 f2f0 	sdiv	r2, r7, r0
 802a556:	fb00 7212 	mls	r2, r0, r2, r7
 802a55a:	1a82      	subs	r2, r0, r2
 802a55c:	fb92 f7f0 	sdiv	r7, r2, r0
 802a560:	fb00 2017 	mls	r0, r0, r7, r2
 802a564:	1a24      	subs	r4, r4, r0
 802a566:	42ac      	cmp	r4, r5
 802a568:	bfb8      	it	lt
 802a56a:	462c      	movlt	r4, r5
 802a56c:	4630      	mov	r0, r6
 802a56e:	4622      	mov	r2, r4
 802a570:	f7ff ffa2 	bl	802a4b8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a574:	4630      	mov	r0, r6
 802a576:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a578:	42ab      	cmp	r3, r5
 802a57a:	dd0e      	ble.n	802a59a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a57c:	b168      	cbz	r0, 802a59a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a57e:	425f      	negs	r7, r3
 802a580:	fb97 f2f0 	sdiv	r2, r7, r0
 802a584:	fb00 7212 	mls	r2, r0, r2, r7
 802a588:	1a82      	subs	r2, r0, r2
 802a58a:	fb92 f7f0 	sdiv	r7, r2, r0
 802a58e:	fb00 2017 	mls	r0, r0, r7, r2
 802a592:	1a1b      	subs	r3, r3, r0
 802a594:	42ab      	cmp	r3, r5
 802a596:	bfb8      	it	lt
 802a598:	462b      	movlt	r3, r5
 802a59a:	4622      	mov	r2, r4
 802a59c:	461c      	mov	r4, r3
 802a59e:	4613      	mov	r3, r2
 802a5a0:	e7e4      	b.n	802a56c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5a2:	42a3      	cmp	r3, r4
 802a5a4:	da10      	bge.n	802a5c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802a5a6:	b148      	cbz	r0, 802a5bc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802a5a8:	fb94 f2f0 	sdiv	r2, r4, r0
 802a5ac:	fb00 4212 	mls	r2, r0, r2, r4
 802a5b0:	1a82      	subs	r2, r0, r2
 802a5b2:	fb92 f7f0 	sdiv	r7, r2, r0
 802a5b6:	fb00 2017 	mls	r0, r0, r7, r2
 802a5ba:	4404      	add	r4, r0
 802a5bc:	42a5      	cmp	r5, r4
 802a5be:	bfa8      	it	ge
 802a5c0:	4625      	movge	r5, r4
 802a5c2:	461c      	mov	r4, r3
 802a5c4:	462b      	mov	r3, r5
 802a5c6:	e7d1      	b.n	802a56c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5c8:	42ab      	cmp	r3, r5
 802a5ca:	dacf      	bge.n	802a56c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5cc:	2800      	cmp	r0, #0
 802a5ce:	d0cd      	beq.n	802a56c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5d0:	fb93 f2f0 	sdiv	r2, r3, r0
 802a5d4:	fb00 3212 	mls	r2, r0, r2, r3
 802a5d8:	1a82      	subs	r2, r0, r2
 802a5da:	fb92 f7f0 	sdiv	r7, r2, r0
 802a5de:	fb00 2017 	mls	r0, r0, r7, r2
 802a5e2:	4403      	add	r3, r0
 802a5e4:	42ab      	cmp	r3, r5
 802a5e6:	bfa8      	it	ge
 802a5e8:	462b      	movge	r3, r5
 802a5ea:	e7bf      	b.n	802a56c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802a5ec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802a5ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a5f0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 802a5f4:	42ae      	cmp	r6, r5
 802a5f6:	bfa2      	ittt	ge
 802a5f8:	4633      	movge	r3, r6
 802a5fa:	462e      	movge	r6, r5
 802a5fc:	461d      	movge	r5, r3
 802a5fe:	1bab      	subs	r3, r5, r6
 802a600:	468b      	mov	fp, r1
 802a602:	6c01      	ldr	r1, [r0, #64]	; 0x40
 802a604:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802a608:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802a60c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a610:	f04f 0220 	mov.w	r2, #32
 802a614:	b0ab      	sub	sp, #172	; 0xac
 802a616:	4604      	mov	r4, r0
 802a618:	bfa4      	itt	ge
 802a61a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802a61e:	2600      	movge	r6, #0
 802a620:	fb99 f9f2 	sdiv	r9, r9, r2
 802a624:	fb9a faf2 	sdiv	sl, sl, r2
 802a628:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802a62a:	2900      	cmp	r1, #0
 802a62c:	f000 80f5 	beq.w	802a81a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802a630:	f9bb 0000 	ldrsh.w	r0, [fp]
 802a634:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802a638:	eba9 0700 	sub.w	r7, r9, r0
 802a63c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802a640:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 802a644:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802a648:	ebaa 0802 	sub.w	r8, sl, r2
 802a64c:	4407      	add	r7, r0
 802a64e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802a652:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802a656:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802a65a:	b23f      	sxth	r7, r7
 802a65c:	4490      	add	r8, r2
 802a65e:	eba9 0707 	sub.w	r7, r9, r7
 802a662:	fa0f f888 	sxth.w	r8, r8
 802a666:	ebaa 0808 	sub.w	r8, sl, r8
 802a66a:	2f00      	cmp	r7, #0
 802a66c:	bfb8      	it	lt
 802a66e:	427f      	neglt	r7, r7
 802a670:	f1b8 0f00 	cmp.w	r8, #0
 802a674:	bfb8      	it	lt
 802a676:	f1c8 0800 	rsblt	r8, r8, #0
 802a67a:	45bc      	cmp	ip, r7
 802a67c:	bfcc      	ite	gt
 802a67e:	f10c 0701 	addgt.w	r7, ip, #1
 802a682:	3701      	addle	r7, #1
 802a684:	4540      	cmp	r0, r8
 802a686:	bfc8      	it	gt
 802a688:	f100 0801 	addgt.w	r8, r0, #1
 802a68c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802a690:	f100 0001 	add.w	r0, r0, #1
 802a694:	ea4f 0060 	mov.w	r0, r0, asr #1
 802a698:	f04f 0202 	mov.w	r2, #2
 802a69c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802a6a0:	fb91 f1f2 	sdiv	r1, r1, r2
 802a6a4:	eba3 0301 	sub.w	r3, r3, r1
 802a6a8:	bfd8      	it	le
 802a6aa:	f108 0801 	addle.w	r8, r8, #1
 802a6ae:	9201      	str	r2, [sp, #4]
 802a6b0:	930d      	str	r3, [sp, #52]	; 0x34
 802a6b2:	f7ea f8cb 	bl	801484c <_ZN8touchgfx7CWRUtil4sineEi>
 802a6b6:	a92a      	add	r1, sp, #168	; 0xa8
 802a6b8:	fb08 f808 	mul.w	r8, r8, r8
 802a6bc:	f841 0d70 	str.w	r0, [r1, #-112]!
 802a6c0:	a80d      	add	r0, sp, #52	; 0x34
 802a6c2:	f7e9 ffab 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a6c6:	fb07 8707 	mla	r7, r7, r7, r8
 802a6ca:	f04f 0c20 	mov.w	ip, #32
 802a6ce:	fb90 f0fc 	sdiv	r0, r0, ip
 802a6d2:	4340      	muls	r0, r0
 802a6d4:	4287      	cmp	r7, r0
 802a6d6:	9a01      	ldr	r2, [sp, #4]
 802a6d8:	da04      	bge.n	802a6e4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802a6da:	2401      	movs	r4, #1
 802a6dc:	4620      	mov	r0, r4
 802a6de:	b02b      	add	sp, #172	; 0xac
 802a6e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a6e4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802a6e6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802a6e8:	fb91 f3f2 	sdiv	r3, r1, r2
 802a6ec:	4403      	add	r3, r0
 802a6ee:	fb93 f3fc 	sdiv	r3, r3, ip
 802a6f2:	f9bb 1000 	ldrsh.w	r1, [fp]
 802a6f6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802a6fa:	440a      	add	r2, r1
 802a6fc:	b212      	sxth	r2, r2
 802a6fe:	454a      	cmp	r2, r9
 802a700:	bfa8      	it	ge
 802a702:	464a      	movge	r2, r9
 802a704:	428a      	cmp	r2, r1
 802a706:	bfac      	ite	ge
 802a708:	eba9 0902 	subge.w	r9, r9, r2
 802a70c:	eba9 0901 	sublt.w	r9, r9, r1
 802a710:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 802a714:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802a718:	440a      	add	r2, r1
 802a71a:	b212      	sxth	r2, r2
 802a71c:	4552      	cmp	r2, sl
 802a71e:	bfa8      	it	ge
 802a720:	4652      	movge	r2, sl
 802a722:	428a      	cmp	r2, r1
 802a724:	bfac      	ite	ge
 802a726:	ebaa 0a02 	subge.w	sl, sl, r2
 802a72a:	ebaa 0a01 	sublt.w	sl, sl, r1
 802a72e:	3301      	adds	r3, #1
 802a730:	fb0a fa0a 	mul.w	sl, sl, sl
 802a734:	fb09 a909 	mla	r9, r9, r9, sl
 802a738:	435b      	muls	r3, r3
 802a73a:	4599      	cmp	r9, r3
 802a73c:	dccd      	bgt.n	802a6da <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802a73e:	465a      	mov	r2, fp
 802a740:	4621      	mov	r1, r4
 802a742:	a80e      	add	r0, sp, #56	; 0x38
 802a744:	f7ff faae 	bl	8029ca4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802a748:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802a74a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a74c:	9209      	str	r2, [sp, #36]	; 0x24
 802a74e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802a752:	930a      	str	r3, [sp, #40]	; 0x28
 802a754:	dd07      	ble.n	802a766 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802a756:	2102      	movs	r1, #2
 802a758:	fb93 f3f1 	sdiv	r3, r3, r1
 802a75c:	4413      	add	r3, r2
 802a75e:	930a      	str	r3, [sp, #40]	; 0x28
 802a760:	fb93 f3f1 	sdiv	r3, r3, r1
 802a764:	9309      	str	r3, [sp, #36]	; 0x24
 802a766:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a76a:	4630      	mov	r0, r6
 802a76c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a770:	930b      	str	r3, [sp, #44]	; 0x2c
 802a772:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802a776:	f7ea f889 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a77a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802a77e:	f04f 0a02 	mov.w	sl, #2
 802a782:	f849 0d74 	str.w	r0, [r9, #-116]!
 802a786:	a80b      	add	r0, sp, #44	; 0x2c
 802a788:	4649      	mov	r1, r9
 802a78a:	f7e9 ff47 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a78e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a790:	fb90 f0fa 	sdiv	r0, r0, sl
 802a794:	eb00 0b03 	add.w	fp, r0, r3
 802a798:	4630      	mov	r0, r6
 802a79a:	f7ff fcc7 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a79e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802a7a2:	017f      	lsls	r7, r7, #5
 802a7a4:	f848 0d78 	str.w	r0, [r8, #-120]!
 802a7a8:	a80b      	add	r0, sp, #44	; 0x2c
 802a7aa:	4641      	mov	r1, r8
 802a7ac:	f7e9 ff36 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a7b2:	fb90 f0fa 	sdiv	r0, r0, sl
 802a7b6:	4659      	mov	r1, fp
 802a7b8:	1a12      	subs	r2, r2, r0
 802a7ba:	a80e      	add	r0, sp, #56	; 0x38
 802a7bc:	f7ff fbf2 	bl	8029fa4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802a7c0:	f106 0a20 	add.w	sl, r6, #32
 802a7c4:	bb67      	cbnz	r7, 802a820 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802a7c6:	46b3      	mov	fp, r6
 802a7c8:	45aa      	cmp	sl, r5
 802a7ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a7cc:	dc33      	bgt.n	802a836 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802a7ce:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a7d0:	4650      	mov	r0, sl
 802a7d2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802a7d6:	920b      	str	r2, [sp, #44]	; 0x2c
 802a7d8:	f7ea f858 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a7dc:	4641      	mov	r1, r8
 802a7de:	900c      	str	r0, [sp, #48]	; 0x30
 802a7e0:	a80b      	add	r0, sp, #44	; 0x2c
 802a7e2:	f7e9 ff1b 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7e6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802a7e8:	2302      	movs	r3, #2
 802a7ea:	fb90 f0f3 	sdiv	r0, r0, r3
 802a7ee:	eb00 0b02 	add.w	fp, r0, r2
 802a7f2:	4650      	mov	r0, sl
 802a7f4:	f7ff fc9a 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a7f8:	4649      	mov	r1, r9
 802a7fa:	900d      	str	r0, [sp, #52]	; 0x34
 802a7fc:	a80b      	add	r0, sp, #44	; 0x2c
 802a7fe:	f7e9 ff0d 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a802:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a804:	2302      	movs	r3, #2
 802a806:	4659      	mov	r1, fp
 802a808:	fb90 f0f3 	sdiv	r0, r0, r3
 802a80c:	1a12      	subs	r2, r2, r0
 802a80e:	a80e      	add	r0, sp, #56	; 0x38
 802a810:	46d3      	mov	fp, sl
 802a812:	f7ff fc14 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a816:	44ba      	add	sl, r7
 802a818:	e7d6      	b.n	802a7c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802a81a:	fb93 f3f2 	sdiv	r3, r3, r2
 802a81e:	e768      	b.n	802a6f2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802a820:	fb9a f2f7 	sdiv	r2, sl, r7
 802a824:	fb07 a212 	mls	r2, r7, r2, sl
 802a828:	1aba      	subs	r2, r7, r2
 802a82a:	fb92 f1f7 	sdiv	r1, r2, r7
 802a82e:	fb07 2211 	mls	r2, r7, r1, r2
 802a832:	4492      	add	sl, r2
 802a834:	e7c7      	b.n	802a7c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802a836:	45ab      	cmp	fp, r5
 802a838:	da23      	bge.n	802a882 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802a83a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a83c:	4628      	mov	r0, r5
 802a83e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802a842:	920b      	str	r2, [sp, #44]	; 0x2c
 802a844:	f7ea f822 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a848:	4641      	mov	r1, r8
 802a84a:	900c      	str	r0, [sp, #48]	; 0x30
 802a84c:	a80b      	add	r0, sp, #44	; 0x2c
 802a84e:	f7e9 fee5 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a852:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a854:	f04f 0a02 	mov.w	sl, #2
 802a858:	fb90 f0fa 	sdiv	r0, r0, sl
 802a85c:	4403      	add	r3, r0
 802a85e:	4628      	mov	r0, r5
 802a860:	9301      	str	r3, [sp, #4]
 802a862:	f7ff fc63 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a866:	4649      	mov	r1, r9
 802a868:	900d      	str	r0, [sp, #52]	; 0x34
 802a86a:	a80b      	add	r0, sp, #44	; 0x2c
 802a86c:	f7e9 fed6 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a870:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a872:	9b01      	ldr	r3, [sp, #4]
 802a874:	fb90 f0fa 	sdiv	r0, r0, sl
 802a878:	4619      	mov	r1, r3
 802a87a:	1a12      	subs	r2, r2, r0
 802a87c:	a80e      	add	r0, sp, #56	; 0x38
 802a87e:	f7ff fbde 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a882:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a884:	b99b      	cbnz	r3, 802a8ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802a886:	1bad      	subs	r5, r5, r6
 802a888:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802a88c:	da04      	bge.n	802a898 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802a88e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802a892:	a80e      	add	r0, sp, #56	; 0x38
 802a894:	f7ff fbd3 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a898:	21ff      	movs	r1, #255	; 0xff
 802a89a:	a80e      	add	r0, sp, #56	; 0x38
 802a89c:	f7ff fabe 	bl	8029e1c <_ZN8touchgfx6Canvas6renderEh>
 802a8a0:	4604      	mov	r4, r0
 802a8a2:	4b8a      	ldr	r3, [pc, #552]	; (802aacc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 802a8a4:	930e      	str	r3, [sp, #56]	; 0x38
 802a8a6:	a816      	add	r0, sp, #88	; 0x58
 802a8a8:	f7eb fcf0 	bl	801628c <_ZN8touchgfx7OutlineD1Ev>
 802a8ac:	e716      	b.n	802a6dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802a8ae:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802a8b2:	429a      	cmp	r2, r3
 802a8b4:	f0c0 8107 	bcc.w	802aac6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 802a8b8:	1bab      	subs	r3, r5, r6
 802a8ba:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802a8be:	9301      	str	r3, [sp, #4]
 802a8c0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a8c4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 802a8c8:	da43      	bge.n	802a952 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a8ca:	4628      	mov	r0, r5
 802a8cc:	f7e9 ffde 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8d0:	4649      	mov	r1, r9
 802a8d2:	900d      	str	r0, [sp, #52]	; 0x34
 802a8d4:	a809      	add	r0, sp, #36	; 0x24
 802a8d6:	f7e9 fea1 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8da:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a8dc:	18c3      	adds	r3, r0, r3
 802a8de:	4628      	mov	r0, r5
 802a8e0:	9303      	str	r3, [sp, #12]
 802a8e2:	f7ff fc23 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a8e6:	4649      	mov	r1, r9
 802a8e8:	900d      	str	r0, [sp, #52]	; 0x34
 802a8ea:	a809      	add	r0, sp, #36	; 0x24
 802a8ec:	f7e9 fe96 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8f0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a8f2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802a8f6:	1a1b      	subs	r3, r3, r0
 802a8f8:	9302      	str	r3, [sp, #8]
 802a8fa:	9204      	str	r2, [sp, #16]
 802a8fc:	eb0a 0305 	add.w	r3, sl, r5
 802a900:	9a04      	ldr	r2, [sp, #16]
 802a902:	4293      	cmp	r3, r2
 802a904:	da25      	bge.n	802a952 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a906:	4618      	mov	r0, r3
 802a908:	9306      	str	r3, [sp, #24]
 802a90a:	f7e9 ffbf 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a90e:	4649      	mov	r1, r9
 802a910:	900d      	str	r0, [sp, #52]	; 0x34
 802a912:	a80a      	add	r0, sp, #40	; 0x28
 802a914:	f7e9 fe82 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a918:	9b03      	ldr	r3, [sp, #12]
 802a91a:	2202      	movs	r2, #2
 802a91c:	fb90 f0f2 	sdiv	r0, r0, r2
 802a920:	18c3      	adds	r3, r0, r3
 802a922:	9305      	str	r3, [sp, #20]
 802a924:	9b06      	ldr	r3, [sp, #24]
 802a926:	9207      	str	r2, [sp, #28]
 802a928:	4618      	mov	r0, r3
 802a92a:	f7ff fbff 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a92e:	a92a      	add	r1, sp, #168	; 0xa8
 802a930:	f841 0d78 	str.w	r0, [r1, #-120]!
 802a934:	a80a      	add	r0, sp, #40	; 0x28
 802a936:	f7e9 fe71 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a93a:	9b02      	ldr	r3, [sp, #8]
 802a93c:	9a07      	ldr	r2, [sp, #28]
 802a93e:	9905      	ldr	r1, [sp, #20]
 802a940:	fb90 f2f2 	sdiv	r2, r0, r2
 802a944:	a80e      	add	r0, sp, #56	; 0x38
 802a946:	1a9a      	subs	r2, r3, r2
 802a948:	f7ff fb79 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a94c:	9b06      	ldr	r3, [sp, #24]
 802a94e:	4453      	add	r3, sl
 802a950:	e7d6      	b.n	802a900 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802a952:	45ab      	cmp	fp, r5
 802a954:	da25      	bge.n	802a9a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802a956:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a95a:	4628      	mov	r0, r5
 802a95c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a960:	930b      	str	r3, [sp, #44]	; 0x2c
 802a962:	f7e9 ff93 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a966:	4641      	mov	r1, r8
 802a968:	900c      	str	r0, [sp, #48]	; 0x30
 802a96a:	a80b      	add	r0, sp, #44	; 0x2c
 802a96c:	f7e9 fe56 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a970:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a972:	2202      	movs	r2, #2
 802a974:	fb90 f0f2 	sdiv	r0, r0, r2
 802a978:	eb00 0903 	add.w	r9, r0, r3
 802a97c:	4628      	mov	r0, r5
 802a97e:	9202      	str	r2, [sp, #8]
 802a980:	f7ff fbd4 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a984:	a92a      	add	r1, sp, #168	; 0xa8
 802a986:	f841 0d74 	str.w	r0, [r1, #-116]!
 802a98a:	a80b      	add	r0, sp, #44	; 0x2c
 802a98c:	f7e9 fe46 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a990:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a992:	9a02      	ldr	r2, [sp, #8]
 802a994:	fb90 f2f2 	sdiv	r2, r0, r2
 802a998:	4649      	mov	r1, r9
 802a99a:	1a9a      	subs	r2, r3, r2
 802a99c:	a80e      	add	r0, sp, #56	; 0x38
 802a99e:	f7ff fb4e 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a9a2:	46d9      	mov	r9, fp
 802a9a4:	2502      	movs	r5, #2
 802a9a6:	45b1      	cmp	r9, r6
 802a9a8:	db25      	blt.n	802a9f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802a9aa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a9ae:	4648      	mov	r0, r9
 802a9b0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a9b4:	930b      	str	r3, [sp, #44]	; 0x2c
 802a9b6:	f7e9 ff69 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a9ba:	4641      	mov	r1, r8
 802a9bc:	900c      	str	r0, [sp, #48]	; 0x30
 802a9be:	a80b      	add	r0, sp, #44	; 0x2c
 802a9c0:	f7e9 fe2c 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9c4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a9c6:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9ca:	eb00 0b03 	add.w	fp, r0, r3
 802a9ce:	4648      	mov	r0, r9
 802a9d0:	f7ff fbac 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a9d4:	a90d      	add	r1, sp, #52	; 0x34
 802a9d6:	900d      	str	r0, [sp, #52]	; 0x34
 802a9d8:	a80b      	add	r0, sp, #44	; 0x2c
 802a9da:	f7e9 fe1f 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9de:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a9e0:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9e4:	4659      	mov	r1, fp
 802a9e6:	1a12      	subs	r2, r2, r0
 802a9e8:	a80e      	add	r0, sp, #56	; 0x38
 802a9ea:	46cb      	mov	fp, r9
 802a9ec:	f7ff fb27 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a9f0:	eba9 0907 	sub.w	r9, r9, r7
 802a9f4:	e7d7      	b.n	802a9a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802a9f6:	455e      	cmp	r6, fp
 802a9f8:	da22      	bge.n	802aa40 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802a9fa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a9fe:	4630      	mov	r0, r6
 802aa00:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802aa04:	930b      	str	r3, [sp, #44]	; 0x2c
 802aa06:	f7e9 ff41 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa0a:	4641      	mov	r1, r8
 802aa0c:	900c      	str	r0, [sp, #48]	; 0x30
 802aa0e:	a80b      	add	r0, sp, #44	; 0x2c
 802aa10:	f7e9 fe04 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa14:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802aa16:	2502      	movs	r5, #2
 802aa18:	fb90 f0f5 	sdiv	r0, r0, r5
 802aa1c:	4407      	add	r7, r0
 802aa1e:	4630      	mov	r0, r6
 802aa20:	f7ff fb84 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa24:	a92a      	add	r1, sp, #168	; 0xa8
 802aa26:	f841 0d74 	str.w	r0, [r1, #-116]!
 802aa2a:	a80b      	add	r0, sp, #44	; 0x2c
 802aa2c:	f7e9 fdf6 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa30:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802aa32:	fb90 f0f5 	sdiv	r0, r0, r5
 802aa36:	4639      	mov	r1, r7
 802aa38:	1a12      	subs	r2, r2, r0
 802aa3a:	a80e      	add	r0, sp, #56	; 0x38
 802aa3c:	f7ff faff 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aa40:	9b01      	ldr	r3, [sp, #4]
 802aa42:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802aa46:	f6bf af27 	bge.w	802a898 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802aa4a:	4630      	mov	r0, r6
 802aa4c:	f7e9 ff1e 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa50:	ad2a      	add	r5, sp, #168	; 0xa8
 802aa52:	f04f 0b02 	mov.w	fp, #2
 802aa56:	f845 0d74 	str.w	r0, [r5, #-116]!
 802aa5a:	a809      	add	r0, sp, #36	; 0x24
 802aa5c:	4629      	mov	r1, r5
 802aa5e:	f7e9 fddd 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa62:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802aa64:	eb00 0903 	add.w	r9, r0, r3
 802aa68:	4630      	mov	r0, r6
 802aa6a:	f7ff fb5f 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa6e:	4629      	mov	r1, r5
 802aa70:	900d      	str	r0, [sp, #52]	; 0x34
 802aa72:	a809      	add	r0, sp, #36	; 0x24
 802aa74:	f7e9 fdd2 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa78:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802aa7a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802aa7e:	eba3 0800 	sub.w	r8, r3, r0
 802aa82:	4454      	add	r4, sl
 802aa84:	42a6      	cmp	r6, r4
 802aa86:	f77f af07 	ble.w	802a898 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802aa8a:	4620      	mov	r0, r4
 802aa8c:	f7e9 fefe 	bl	801488c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa90:	4629      	mov	r1, r5
 802aa92:	900d      	str	r0, [sp, #52]	; 0x34
 802aa94:	a80a      	add	r0, sp, #40	; 0x28
 802aa96:	f7e9 fdc1 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa9a:	fb90 f0fb 	sdiv	r0, r0, fp
 802aa9e:	eb00 0709 	add.w	r7, r0, r9
 802aaa2:	4620      	mov	r0, r4
 802aaa4:	f7ff fb42 	bl	802a12c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aaa8:	a90c      	add	r1, sp, #48	; 0x30
 802aaaa:	900c      	str	r0, [sp, #48]	; 0x30
 802aaac:	a80a      	add	r0, sp, #40	; 0x28
 802aaae:	f7e9 fdb5 	bl	801461c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aab2:	4639      	mov	r1, r7
 802aab4:	fb90 f2fb 	sdiv	r2, r0, fp
 802aab8:	a80e      	add	r0, sp, #56	; 0x38
 802aaba:	eba8 0202 	sub.w	r2, r8, r2
 802aabe:	f7ff fabe 	bl	802a03e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aac2:	4454      	add	r4, sl
 802aac4:	e7de      	b.n	802aa84 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802aac6:	2400      	movs	r4, #0
 802aac8:	e6eb      	b.n	802a8a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802aaca:	bf00      	nop
 802aacc:	08032214 	.word	0x08032214

0802aad0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802aad0:	b570      	push	{r4, r5, r6, lr}
 802aad2:	790b      	ldrb	r3, [r1, #4]
 802aad4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802aad8:	2b00      	cmp	r3, #0
 802aada:	bf0c      	ite	eq
 802aadc:	2301      	moveq	r3, #1
 802aade:	2300      	movne	r3, #0
 802aae0:	4604      	mov	r4, r0
 802aae2:	460e      	mov	r6, r1
 802aae4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802aae8:	d109      	bne.n	802aafe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802aaea:	b14d      	cbz	r5, 802ab00 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 802aaec:	7933      	ldrb	r3, [r6, #4]
 802aaee:	2b01      	cmp	r3, #1
 802aaf0:	d10c      	bne.n	802ab0c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802aaf2:	6823      	ldr	r3, [r4, #0]
 802aaf4:	4620      	mov	r0, r4
 802aaf6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802aaf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802aafc:	4718      	bx	r3
 802aafe:	b12d      	cbz	r5, 802ab0c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802ab00:	6823      	ldr	r3, [r4, #0]
 802ab02:	4620      	mov	r0, r4
 802ab04:	695b      	ldr	r3, [r3, #20]
 802ab06:	4798      	blx	r3
 802ab08:	2d00      	cmp	r5, #0
 802ab0a:	d1ef      	bne.n	802aaec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802ab0c:	bd70      	pop	{r4, r5, r6, pc}

0802ab0e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802ab0e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802ab12:	4770      	bx	lr

0802ab14 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 802ab14:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802ab18:	4770      	bx	lr

0802ab1a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802ab1a:	6802      	ldr	r2, [r0, #0]
 802ab1c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab20:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab22:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab26:	4710      	bx	r2

0802ab28 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802ab28:	6802      	ldr	r2, [r0, #0]
 802ab2a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab2e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab30:	eef0 0a40 	vmov.f32	s1, s0
 802ab34:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab38:	4710      	bx	r2

0802ab3a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802ab3a:	6802      	ldr	r2, [r0, #0]
 802ab3c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab40:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab42:	eeb0 1a40 	vmov.f32	s2, s0
 802ab46:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab4a:	4710      	bx	r2

0802ab4c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 802ab4c:	6802      	ldr	r2, [r0, #0]
 802ab4e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab52:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab54:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab58:	4710      	bx	r2

0802ab5a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802ab5a:	6802      	ldr	r2, [r0, #0]
 802ab5c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab60:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab62:	eef0 0a40 	vmov.f32	s1, s0
 802ab66:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab6a:	4710      	bx	r2

0802ab6c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802ab6c:	6802      	ldr	r2, [r0, #0]
 802ab6e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab72:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab74:	eeb0 1a40 	vmov.f32	s2, s0
 802ab78:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab7c:	4710      	bx	r2

0802ab7e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802ab7e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab82:	4770      	bx	lr

0802ab84 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 802ab84:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802ab88:	4770      	bx	lr

0802ab8a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802ab8a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802ab8e:	4770      	bx	lr

0802ab90 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802ab90:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 802ab94:	4770      	bx	lr

0802ab96 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802ab96:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802ab9a:	4770      	bx	lr

0802ab9c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 802ab9c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802aba0:	4770      	bx	lr

0802aba2 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802aba2:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802aba6:	4770      	bx	lr

0802aba8 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802aba8:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 802abac:	4770      	bx	lr

0802abae <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802abae:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802abb2:	4770      	bx	lr

0802abb4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802abb4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 802abb8:	4770      	bx	lr

0802abba <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802abba:	ee07 2a90 	vmov	s15, r2
 802abbe:	6803      	ldr	r3, [r0, #0]
 802abc0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802abc4:	ee07 1a90 	vmov	s15, r1
 802abc8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 802abcc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802abd0:	4718      	bx	r3

0802abd2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802abd2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802abd6:	4770      	bx	lr

0802abd8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802abd8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 802abdc:	4770      	bx	lr

0802abde <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802abde:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802abe2:	4770      	bx	lr

0802abe4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802abe4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802abe8:	4770      	bx	lr

0802abea <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802abea:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802abee:	4770      	bx	lr

0802abf0 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802abf0:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 802abf4:	4770      	bx	lr

0802abf6 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802abf6:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802abfa:	4770      	bx	lr

0802abfc <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802abfc:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802ac00:	4770      	bx	lr

0802ac02 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802ac02:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802ac06:	4770      	bx	lr

0802ac08 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802ac08:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 802ac0c:	4770      	bx	lr

0802ac0e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802ac0e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802ac12:	4770      	bx	lr

0802ac14 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 802ac14:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802ac18:	4770      	bx	lr

0802ac1a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802ac1a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802ac1e:	4770      	bx	lr

0802ac20 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802ac20:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 802ac24:	4770      	bx	lr

0802ac26 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802ac26:	b510      	push	{r4, lr}
 802ac28:	ed2d 8b04 	vpush	{d8-d9}
 802ac2c:	6803      	ldr	r3, [r0, #0]
 802ac2e:	4604      	mov	r4, r0
 802ac30:	699b      	ldr	r3, [r3, #24]
 802ac32:	eeb0 8a40 	vmov.f32	s16, s0
 802ac36:	eef0 8a60 	vmov.f32	s17, s1
 802ac3a:	eeb0 9a41 	vmov.f32	s18, s2
 802ac3e:	4798      	blx	r3
 802ac40:	6823      	ldr	r3, [r4, #0]
 802ac42:	4620      	mov	r0, r4
 802ac44:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802ac46:	eeb0 1a49 	vmov.f32	s2, s18
 802ac4a:	eef0 0a68 	vmov.f32	s1, s17
 802ac4e:	eeb0 0a48 	vmov.f32	s0, s16
 802ac52:	4798      	blx	r3
 802ac54:	ecbd 8b04 	vpop	{d8-d9}
 802ac58:	6823      	ldr	r3, [r4, #0]
 802ac5a:	4620      	mov	r0, r4
 802ac5c:	699b      	ldr	r3, [r3, #24]
 802ac5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac62:	4718      	bx	r3

0802ac64 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 802ac64:	b510      	push	{r4, lr}
 802ac66:	ed2d 8b02 	vpush	{d8}
 802ac6a:	6803      	ldr	r3, [r0, #0]
 802ac6c:	4604      	mov	r4, r0
 802ac6e:	699b      	ldr	r3, [r3, #24]
 802ac70:	eeb0 8a40 	vmov.f32	s16, s0
 802ac74:	4798      	blx	r3
 802ac76:	6823      	ldr	r3, [r4, #0]
 802ac78:	4620      	mov	r0, r4
 802ac7a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802ac7e:	eeb0 0a48 	vmov.f32	s0, s16
 802ac82:	4798      	blx	r3
 802ac84:	ecbd 8b02 	vpop	{d8}
 802ac88:	6823      	ldr	r3, [r4, #0]
 802ac8a:	4620      	mov	r0, r4
 802ac8c:	699b      	ldr	r3, [r3, #24]
 802ac8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac92:	4718      	bx	r3

0802ac94 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 802ac94:	2200      	movs	r2, #0
 802ac96:	8002      	strh	r2, [r0, #0]
 802ac98:	8042      	strh	r2, [r0, #2]
 802ac9a:	8082      	strh	r2, [r0, #4]
 802ac9c:	80c2      	strh	r2, [r0, #6]
 802ac9e:	4770      	bx	lr

0802aca0 <_ZN8touchgfx13TextureMapperD1Ev>:
 802aca0:	4770      	bx	lr

0802aca2 <_ZN8touchgfx13TextureMapperD0Ev>:
 802aca2:	b510      	push	{r4, lr}
 802aca4:	2190      	movs	r1, #144	; 0x90
 802aca6:	4604      	mov	r4, r0
 802aca8:	f001 ff73 	bl	802cb92 <_ZdlPvj>
 802acac:	4620      	mov	r0, r4
 802acae:	bd10      	pop	{r4, pc}

0802acb0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802acb0:	b538      	push	{r3, r4, r5, lr}
 802acb2:	2500      	movs	r5, #0
 802acb4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 802acb8:	2301      	movs	r3, #1
 802acba:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802acbe:	4b1f      	ldr	r3, [pc, #124]	; (802ad3c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802acc0:	8085      	strh	r5, [r0, #4]
 802acc2:	80c5      	strh	r5, [r0, #6]
 802acc4:	8105      	strh	r5, [r0, #8]
 802acc6:	8145      	strh	r5, [r0, #10]
 802acc8:	8185      	strh	r5, [r0, #12]
 802acca:	81c5      	strh	r5, [r0, #14]
 802accc:	8205      	strh	r5, [r0, #16]
 802acce:	8245      	strh	r5, [r0, #18]
 802acd0:	61c5      	str	r5, [r0, #28]
 802acd2:	8405      	strh	r5, [r0, #32]
 802acd4:	8445      	strh	r5, [r0, #34]	; 0x22
 802acd6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802acda:	6003      	str	r3, [r0, #0]
 802acdc:	880b      	ldrh	r3, [r1, #0]
 802acde:	84c3      	strh	r3, [r0, #38]	; 0x26
 802ace0:	23ff      	movs	r3, #255	; 0xff
 802ace2:	4604      	mov	r4, r0
 802ace4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802ace8:	f7eb f96b 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802acec:	4b14      	ldr	r3, [pc, #80]	; (802ad40 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802acee:	6023      	str	r3, [r4, #0]
 802acf0:	2300      	movs	r3, #0
 802acf2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802acf6:	4913      	ldr	r1, [pc, #76]	; (802ad44 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802acf8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802acfa:	6323      	str	r3, [r4, #48]	; 0x30
 802acfc:	6363      	str	r3, [r4, #52]	; 0x34
 802acfe:	63a3      	str	r3, [r4, #56]	; 0x38
 802ad00:	63e3      	str	r3, [r4, #60]	; 0x3c
 802ad02:	6463      	str	r3, [r4, #68]	; 0x44
 802ad04:	64a3      	str	r3, [r4, #72]	; 0x48
 802ad06:	6523      	str	r3, [r4, #80]	; 0x50
 802ad08:	6563      	str	r3, [r4, #84]	; 0x54
 802ad0a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802ad0c:	6623      	str	r3, [r4, #96]	; 0x60
 802ad0e:	66a3      	str	r3, [r4, #104]	; 0x68
 802ad10:	66e3      	str	r3, [r4, #108]	; 0x6c
 802ad12:	6763      	str	r3, [r4, #116]	; 0x74
 802ad14:	67a3      	str	r3, [r4, #120]	; 0x78
 802ad16:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802ad1a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802ad1e:	230c      	movs	r3, #12
 802ad20:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 802ad24:	6422      	str	r2, [r4, #64]	; 0x40
 802ad26:	64e1      	str	r1, [r4, #76]	; 0x4c
 802ad28:	65a1      	str	r1, [r4, #88]	; 0x58
 802ad2a:	6662      	str	r2, [r4, #100]	; 0x64
 802ad2c:	6722      	str	r2, [r4, #112]	; 0x70
 802ad2e:	67e2      	str	r2, [r4, #124]	; 0x7c
 802ad30:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 802ad34:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802ad38:	4620      	mov	r0, r4
 802ad3a:	bd38      	pop	{r3, r4, r5, pc}
 802ad3c:	08031cbc 	.word	0x08031cbc
 802ad40:	080322a0 	.word	0x080322a0
 802ad44:	447a0000 	.word	0x447a0000

0802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802ad48:	b570      	push	{r4, r5, r6, lr}
 802ad4a:	ed2d 8b04 	vpush	{d8-d9}
 802ad4e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802ad52:	add0      	add	r5, sp, #832	; 0x340
 802ad54:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802ad56:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802ad5a:	4604      	mov	r4, r0
 802ad5c:	4628      	mov	r0, r5
 802ad5e:	f7f1 fa7f 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802ad62:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 802ad64:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802ad68:	4606      	mov	r6, r0
 802ad6a:	4628      	mov	r0, r5
 802ad6c:	f7f1 faac 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802ad70:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 802ad74:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802ad78:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802ad7a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802ad7e:	9312      	str	r3, [sp, #72]	; 0x48
 802ad80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802ad84:	1c72      	adds	r2, r6, #1
 802ad86:	3001      	adds	r0, #1
 802ad88:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802ad8c:	ee07 2a90 	vmov	s15, r2
 802ad90:	ee06 0a90 	vmov	s13, r0
 802ad94:	ee36 6a47 	vsub.f32	s12, s12, s14
 802ad98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ad9c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 802ada0:	ee77 7a86 	vadd.f32	s15, s15, s12
 802ada4:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802ada8:	9316      	str	r3, [sp, #88]	; 0x58
 802adaa:	931a      	str	r3, [sp, #104]	; 0x68
 802adac:	931e      	str	r3, [sp, #120]	; 0x78
 802adae:	2300      	movs	r3, #0
 802adb0:	9320      	str	r3, [sp, #128]	; 0x80
 802adb2:	9321      	str	r3, [sp, #132]	; 0x84
 802adb4:	9322      	str	r3, [sp, #136]	; 0x88
 802adb6:	9324      	str	r3, [sp, #144]	; 0x90
 802adb8:	9325      	str	r3, [sp, #148]	; 0x94
 802adba:	9326      	str	r3, [sp, #152]	; 0x98
 802adbc:	9328      	str	r3, [sp, #160]	; 0xa0
 802adbe:	9329      	str	r3, [sp, #164]	; 0xa4
 802adc0:	932a      	str	r3, [sp, #168]	; 0xa8
 802adc2:	932c      	str	r3, [sp, #176]	; 0xb0
 802adc4:	932d      	str	r3, [sp, #180]	; 0xb4
 802adc6:	932e      	str	r3, [sp, #184]	; 0xb8
 802adc8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802adcc:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 802add0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802add4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802add8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802addc:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802ade0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802ade4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802ade8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802adec:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802adf0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802adf4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802adf8:	a830      	add	r0, sp, #192	; 0xc0
 802adfa:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802adfe:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802ae02:	f000 fc43 	bl	802b68c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae06:	eeb1 0a49 	vneg.f32	s0, s18
 802ae0a:	a830      	add	r0, sp, #192	; 0xc0
 802ae0c:	f000 fd12 	bl	802b834 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ae10:	eeb1 0a68 	vneg.f32	s0, s17
 802ae14:	f000 fd1c 	bl	802b850 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ae18:	eeb1 0a48 	vneg.f32	s0, s16
 802ae1c:	f000 fd27 	bl	802b86e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ae20:	a840      	add	r0, sp, #256	; 0x100
 802ae22:	f000 fc33 	bl	802b68c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae26:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802ae2a:	a840      	add	r0, sp, #256	; 0x100
 802ae2c:	f000 fc86 	bl	802b73c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 802ae30:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 802ae34:	f000 fcac 	bl	802b790 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802ae38:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802ae3c:	f000 fcd1 	bl	802b7e2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 802ae40:	a850      	add	r0, sp, #320	; 0x140
 802ae42:	f000 fc23 	bl	802b68c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae46:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae4a:	a850      	add	r0, sp, #320	; 0x140
 802ae4c:	f000 fd1e 	bl	802b88c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 802ae50:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae54:	f000 fd26 	bl	802b8a4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802ae58:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae5c:	f000 fd2f 	bl	802b8be <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 802ae60:	a860      	add	r0, sp, #384	; 0x180
 802ae62:	f000 fc13 	bl	802b68c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae66:	eeb0 0a49 	vmov.f32	s0, s18
 802ae6a:	a860      	add	r0, sp, #384	; 0x180
 802ae6c:	f000 fce2 	bl	802b834 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ae70:	eeb0 0a68 	vmov.f32	s0, s17
 802ae74:	f000 fcec 	bl	802b850 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ae78:	eeb0 0a48 	vmov.f32	s0, s16
 802ae7c:	f000 fcf7 	bl	802b86e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ae80:	aa50      	add	r2, sp, #320	; 0x140
 802ae82:	a960      	add	r1, sp, #384	; 0x180
 802ae84:	a8b0      	add	r0, sp, #704	; 0x2c0
 802ae86:	f000 fc1b 	bl	802b6c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae8a:	4628      	mov	r0, r5
 802ae8c:	aa40      	add	r2, sp, #256	; 0x100
 802ae8e:	a9b0      	add	r1, sp, #704	; 0x2c0
 802ae90:	f000 fc16 	bl	802b6c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae94:	4629      	mov	r1, r5
 802ae96:	aa30      	add	r2, sp, #192	; 0xc0
 802ae98:	a870      	add	r0, sp, #448	; 0x1c0
 802ae9a:	f000 fc11 	bl	802b6c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae9e:	a880      	add	r0, sp, #512	; 0x200
 802aea0:	f000 fbf4 	bl	802b68c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aea4:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802aea8:	a880      	add	r0, sp, #512	; 0x200
 802aeaa:	eeb1 0a40 	vneg.f32	s0, s0
 802aeae:	f000 fcc1 	bl	802b834 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802aeb2:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802aeb6:	a880      	add	r0, sp, #512	; 0x200
 802aeb8:	eeb1 0a40 	vneg.f32	s0, s0
 802aebc:	f000 fcc8 	bl	802b850 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802aec0:	a890      	add	r0, sp, #576	; 0x240
 802aec2:	f000 fbe3 	bl	802b68c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aec6:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802aeca:	a890      	add	r0, sp, #576	; 0x240
 802aecc:	f000 fc26 	bl	802b71c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 802aed0:	a8a0      	add	r0, sp, #640	; 0x280
 802aed2:	f000 fbdb 	bl	802b68c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aed6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802aeda:	a8a0      	add	r0, sp, #640	; 0x280
 802aedc:	f000 fcaa 	bl	802b834 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802aee0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802aee4:	f000 fcb4 	bl	802b850 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802aee8:	aa90      	add	r2, sp, #576	; 0x240
 802aeea:	a9a0      	add	r1, sp, #640	; 0x280
 802aeec:	a8b0      	add	r0, sp, #704	; 0x2c0
 802aeee:	f000 fbe7 	bl	802b6c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aef2:	4628      	mov	r0, r5
 802aef4:	aa80      	add	r2, sp, #512	; 0x200
 802aef6:	a9b0      	add	r1, sp, #704	; 0x2c0
 802aef8:	f000 fbe2 	bl	802b6c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aefc:	4629      	mov	r1, r5
 802aefe:	aa70      	add	r2, sp, #448	; 0x1c0
 802af00:	4668      	mov	r0, sp
 802af02:	466d      	mov	r5, sp
 802af04:	f000 fbdc 	bl	802b6c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802af08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802af0a:	ae70      	add	r6, sp, #448	; 0x1c0
 802af0c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802af0e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802af10:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802af12:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802af14:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802af16:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802af1a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802af1e:	2500      	movs	r5, #0
 802af20:	0129      	lsls	r1, r5, #4
 802af22:	ab20      	add	r3, sp, #128	; 0x80
 802af24:	185e      	adds	r6, r3, r1
 802af26:	ab10      	add	r3, sp, #64	; 0x40
 802af28:	4419      	add	r1, r3
 802af2a:	a870      	add	r0, sp, #448	; 0x1c0
 802af2c:	f000 fb7e 	bl	802b62c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802af30:	3501      	adds	r5, #1
 802af32:	2d04      	cmp	r5, #4
 802af34:	ed86 0a00 	vstr	s0, [r6]
 802af38:	edc6 0a01 	vstr	s1, [r6, #4]
 802af3c:	ed86 1a02 	vstr	s2, [r6, #8]
 802af40:	edc6 1a03 	vstr	s3, [r6, #12]
 802af44:	d1ec      	bne.n	802af20 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802af46:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802af4a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802af4e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802af52:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af56:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802af5a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af5e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802af62:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802af66:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af6a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af6e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802af72:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802af76:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802af7a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af7e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802af82:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af86:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802af8a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802af8e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af92:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af96:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802af9a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802af9e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802afa2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802afa6:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802afaa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802afae:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802afb2:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802afb6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802afba:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802afbe:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802afc2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802afc6:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802afca:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802afce:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802afd2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802afd6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802afda:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802afde:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802afe2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802afe6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802afea:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802afee:	ecbd 8b04 	vpop	{d8-d9}
 802aff2:	bd70      	pop	{r4, r5, r6, pc}

0802aff4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 802aff4:	b510      	push	{r4, lr}
 802aff6:	4604      	mov	r4, r0
 802aff8:	f7ea ffe3 	bl	8015fc2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802affc:	4620      	mov	r0, r4
 802affe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b002:	f7ff bea1 	b.w	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b006 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802b006:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802b00a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802b00e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802b012:	f7ff be99 	b.w	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b016 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802b016:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802b01a:	f7ff be95 	b.w	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b01e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802b01e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802b022:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802b026:	f7ff be8f 	b.w	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b02a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802b02a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b02e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b036:	bfd8      	it	le
 802b038:	eeb0 0a67 	vmovle.f32	s0, s15
 802b03c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802b040:	f7ff be82 	b.w	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b044 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 802b044:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802b048:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802b04c:	f7ff be7c 	b.w	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b050 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802b050:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b054:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b058:	f7ff be76 	b.w	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b05c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802b05c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b060:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b064:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802b068:	f7ff be6e 	b.w	802ad48 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b06c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802b06c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b070:	ed2d 8b04 	vpush	{d8-d9}
 802b074:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802b078:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802b07c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802b080:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802b084:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b08c:	bf54      	ite	pl
 802b08e:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b092:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b096:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b09a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b09e:	bfd8      	it	le
 802b0a0:	eeb0 0a49 	vmovle.f32	s0, s18
 802b0a4:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b0a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0ac:	bfd8      	it	le
 802b0ae:	eeb0 0a68 	vmovle.f32	s0, s17
 802b0b2:	460c      	mov	r4, r1
 802b0b4:	4607      	mov	r7, r0
 802b0b6:	f001 ff5f 	bl	802cf78 <floorf>
 802b0ba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b0be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0c2:	bf58      	it	pl
 802b0c4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b0c8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b0cc:	bf56      	itet	pl
 802b0ce:	ee10 3a10 	vmovpl	r3, s0
 802b0d2:	2600      	movmi	r6, #0
 802b0d4:	b21e      	sxthpl	r6, r3
 802b0d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0da:	bfd8      	it	le
 802b0dc:	eeb0 8a69 	vmovle.f32	s16, s19
 802b0e0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b0e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0e8:	bf58      	it	pl
 802b0ea:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b0ee:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b0f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0f6:	bf54      	ite	pl
 802b0f8:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b0fc:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b100:	f001 fef8 	bl	802cef4 <ceilf>
 802b104:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802b108:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802b10c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802b110:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 802b114:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802b118:	ee07 8a90 	vmov	s15, r8
 802b11c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b120:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b124:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b128:	bfd8      	it	le
 802b12a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b12e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b132:	bfdc      	itt	le
 802b134:	ee10 3a10 	vmovle	r3, s0
 802b138:	fa0f f883 	sxthle.w	r8, r3
 802b13c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b140:	bf54      	ite	pl
 802b142:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b146:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b14a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b14e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b152:	bfd8      	it	le
 802b154:	eeb0 0a49 	vmovle.f32	s0, s18
 802b158:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b15c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b160:	bfd8      	it	le
 802b162:	eeb0 0a68 	vmovle.f32	s0, s17
 802b166:	f001 ff07 	bl	802cf78 <floorf>
 802b16a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b16e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b172:	bf58      	it	pl
 802b174:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b178:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b17c:	bf56      	itet	pl
 802b17e:	ee10 3a10 	vmovpl	r3, s0
 802b182:	2500      	movmi	r5, #0
 802b184:	b21d      	sxthpl	r5, r3
 802b186:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b18a:	bfd8      	it	le
 802b18c:	eeb0 8a69 	vmovle.f32	s16, s19
 802b190:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b194:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b198:	bf58      	it	pl
 802b19a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b19e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b1a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1a6:	bf54      	ite	pl
 802b1a8:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b1ac:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b1b0:	f001 fea0 	bl	802cef4 <ceilf>
 802b1b4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802b1b8:	803e      	strh	r6, [r7, #0]
 802b1ba:	ee07 3a90 	vmov	s15, r3
 802b1be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b1c2:	807d      	strh	r5, [r7, #2]
 802b1c4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b1c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1cc:	bfd8      	it	le
 802b1ce:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b1d2:	eba8 0606 	sub.w	r6, r8, r6
 802b1d6:	bfdc      	itt	le
 802b1d8:	ee10 3a10 	vmovle	r3, s0
 802b1dc:	b21b      	sxthle	r3, r3
 802b1de:	1b5d      	subs	r5, r3, r5
 802b1e0:	80be      	strh	r6, [r7, #4]
 802b1e2:	80fd      	strh	r5, [r7, #6]
 802b1e4:	ecbd 8b04 	vpop	{d8-d9}
 802b1e8:	4638      	mov	r0, r7
 802b1ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802b1ee <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802b1ee:	b513      	push	{r0, r1, r4, lr}
 802b1f0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b1f4:	4604      	mov	r4, r0
 802b1f6:	b143      	cbz	r3, 802b20a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802b1f8:	4601      	mov	r1, r0
 802b1fa:	4668      	mov	r0, sp
 802b1fc:	f7ff ff36 	bl	802b06c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802b200:	6823      	ldr	r3, [r4, #0]
 802b202:	4669      	mov	r1, sp
 802b204:	691b      	ldr	r3, [r3, #16]
 802b206:	4620      	mov	r0, r4
 802b208:	4798      	blx	r3
 802b20a:	b002      	add	sp, #8
 802b20c:	bd10      	pop	{r4, pc}

0802b20e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802b20e:	4603      	mov	r3, r0
 802b210:	3026      	adds	r0, #38	; 0x26
 802b212:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802b216:	b90b      	cbnz	r3, 802b21c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802b218:	f7ee bdfa 	b.w	8019e10 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802b21c:	f7ee be08 	b.w	8019e30 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802b220 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802b220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b224:	ed2d 8b04 	vpush	{d8-d9}
 802b228:	4604      	mov	r4, r0
 802b22a:	469b      	mov	fp, r3
 802b22c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802b230:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802b234:	f9b1 6000 	ldrsh.w	r6, [r1]
 802b238:	8888      	ldrh	r0, [r1, #4]
 802b23a:	b0b3      	sub	sp, #204	; 0xcc
 802b23c:	4430      	add	r0, r6
 802b23e:	b280      	uxth	r0, r0
 802b240:	9206      	str	r2, [sp, #24]
 802b242:	fa0f fe80 	sxth.w	lr, r0
 802b246:	2200      	movs	r2, #0
 802b248:	4596      	cmp	lr, r2
 802b24a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802b24e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802b252:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802b256:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802b258:	9211      	str	r2, [sp, #68]	; 0x44
 802b25a:	f340 8129 	ble.w	802b4b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b25e:	45b4      	cmp	ip, r6
 802b260:	f340 8126 	ble.w	802b4b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b264:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802b268:	88ca      	ldrh	r2, [r1, #6]
 802b26a:	442a      	add	r2, r5
 802b26c:	b292      	uxth	r2, r2
 802b26e:	b211      	sxth	r1, r2
 802b270:	2900      	cmp	r1, #0
 802b272:	f340 811d 	ble.w	802b4b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b276:	42ab      	cmp	r3, r5
 802b278:	f340 811a 	ble.w	802b4b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b27c:	45f4      	cmp	ip, lr
 802b27e:	bfb8      	it	lt
 802b280:	fa1f f08c 	uxthlt.w	r0, ip
 802b284:	428b      	cmp	r3, r1
 802b286:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802b28a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802b28e:	bfb8      	it	lt
 802b290:	b29a      	uxthlt	r2, r3
 802b292:	1b80      	subs	r0, r0, r6
 802b294:	1b52      	subs	r2, r2, r5
 802b296:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802b29a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802b29e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802b2a2:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802b2a6:	ab11      	add	r3, sp, #68	; 0x44
 802b2a8:	e893 0003 	ldmia.w	r3, {r0, r1}
 802b2ac:	6822      	ldr	r2, [r4, #0]
 802b2ae:	9307      	str	r3, [sp, #28]
 802b2b0:	ad13      	add	r5, sp, #76	; 0x4c
 802b2b2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802b2b4:	e885 0003 	stmia.w	r5, {r0, r1}
 802b2b8:	4629      	mov	r1, r5
 802b2ba:	4620      	mov	r0, r4
 802b2bc:	4790      	blx	r2
 802b2be:	4621      	mov	r1, r4
 802b2c0:	a815      	add	r0, sp, #84	; 0x54
 802b2c2:	f7ee fd01 	bl	8019cc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802b2c6:	a815      	add	r0, sp, #84	; 0x54
 802b2c8:	f7ed f9c6 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b2cc:	9b07      	ldr	r3, [sp, #28]
 802b2ce:	1d26      	adds	r6, r4, #4
 802b2d0:	4618      	mov	r0, r3
 802b2d2:	4631      	mov	r1, r6
 802b2d4:	f7ed fa04 	bl	80186e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802b2d8:	4628      	mov	r0, r5
 802b2da:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802b2de:	f7ed f9bb 	bl	8018658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b2e2:	4628      	mov	r0, r5
 802b2e4:	f7f1 f8a8 	bl	801c438 <_ZNK8touchgfx6Bitmap7getDataEv>
 802b2e8:	9007      	str	r0, [sp, #28]
 802b2ea:	2800      	cmp	r0, #0
 802b2ec:	f000 80db 	beq.w	802b4a6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802b2f0:	f8db 2000 	ldr.w	r2, [fp]
 802b2f4:	9209      	str	r2, [sp, #36]	; 0x24
 802b2f6:	f8db 2004 	ldr.w	r2, [fp, #4]
 802b2fa:	920a      	str	r2, [sp, #40]	; 0x28
 802b2fc:	f8db 2008 	ldr.w	r2, [fp, #8]
 802b300:	920b      	str	r2, [sp, #44]	; 0x2c
 802b302:	f8db 200c 	ldr.w	r2, [fp, #12]
 802b306:	920c      	str	r2, [sp, #48]	; 0x30
 802b308:	f8da 2000 	ldr.w	r2, [sl]
 802b30c:	920d      	str	r2, [sp, #52]	; 0x34
 802b30e:	f8da 2004 	ldr.w	r2, [sl, #4]
 802b312:	920e      	str	r2, [sp, #56]	; 0x38
 802b314:	f8da 2008 	ldr.w	r2, [sl, #8]
 802b318:	920f      	str	r2, [sp, #60]	; 0x3c
 802b31a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802b31e:	9210      	str	r2, [sp, #64]	; 0x40
 802b320:	a90d      	add	r1, sp, #52	; 0x34
 802b322:	4632      	mov	r2, r6
 802b324:	a809      	add	r0, sp, #36	; 0x24
 802b326:	f7ed f9bf 	bl	80186a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b32a:	4632      	mov	r2, r6
 802b32c:	a90e      	add	r1, sp, #56	; 0x38
 802b32e:	a80a      	add	r0, sp, #40	; 0x28
 802b330:	f7ed f9ba 	bl	80186a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b334:	4632      	mov	r2, r6
 802b336:	a90f      	add	r1, sp, #60	; 0x3c
 802b338:	a80b      	add	r0, sp, #44	; 0x2c
 802b33a:	f7ed f9b5 	bl	80186a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b33e:	4632      	mov	r2, r6
 802b340:	a910      	add	r1, sp, #64	; 0x40
 802b342:	a80c      	add	r0, sp, #48	; 0x30
 802b344:	f7ed f9b0 	bl	80186a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b348:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802b34c:	edd7 4a00 	vldr	s9, [r7]
 802b350:	edd7 5a01 	vldr	s11, [r7, #4]
 802b354:	ed98 4a00 	vldr	s8, [r8]
 802b358:	ed98 5a01 	vldr	s10, [r8, #4]
 802b35c:	ed99 9a00 	vldr	s18, [r9]
 802b360:	ed99 8a01 	vldr	s16, [r9, #4]
 802b364:	edd9 8a02 	vldr	s17, [r9, #8]
 802b368:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802b36c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802b370:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 802b374:	eef0 6a67 	vmov.f32	s13, s15
 802b378:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802b37c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802b380:	eeb0 7a67 	vmov.f32	s14, s15
 802b384:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802b388:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802b38c:	eeb0 6a67 	vmov.f32	s12, s15
 802b390:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b394:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802b398:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802b39c:	ee16 6a10 	vmov	r6, s12
 802b3a0:	eeb0 6a67 	vmov.f32	s12, s15
 802b3a4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3a8:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802b3ac:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802b3b0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802b3b4:	68ff      	ldr	r7, [r7, #12]
 802b3b6:	9624      	str	r6, [sp, #144]	; 0x90
 802b3b8:	ee16 0a10 	vmov	r0, s12
 802b3bc:	eeb0 6a67 	vmov.f32	s12, s15
 802b3c0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3c4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802b3c8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802b3cc:	ee16 1a10 	vmov	r1, s12
 802b3d0:	eeb0 6a67 	vmov.f32	s12, s15
 802b3d4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3d8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802b3dc:	ee16 2a10 	vmov	r2, s12
 802b3e0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802b3e4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802b3e8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802b3ec:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802b3f0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3f4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802b3f8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802b3fc:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802b400:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802b404:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802b408:	922d      	str	r2, [sp, #180]	; 0xb4
 802b40a:	4a2b      	ldr	r2, [pc, #172]	; (802b4b8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802b40c:	9b06      	ldr	r3, [sp, #24]
 802b40e:	8812      	ldrh	r2, [r2, #0]
 802b410:	9317      	str	r3, [sp, #92]	; 0x5c
 802b412:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802b416:	9b07      	ldr	r3, [sp, #28]
 802b418:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802b41c:	4628      	mov	r0, r5
 802b41e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802b422:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802b426:	9218      	str	r2, [sp, #96]	; 0x60
 802b428:	9319      	str	r3, [sp, #100]	; 0x64
 802b42a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802b42e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802b432:	9731      	str	r7, [sp, #196]	; 0xc4
 802b434:	f7f1 f830 	bl	801c498 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802b438:	901a      	str	r0, [sp, #104]	; 0x68
 802b43a:	4628      	mov	r0, r5
 802b43c:	f7f0 ff10 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b440:	901b      	str	r0, [sp, #108]	; 0x6c
 802b442:	4628      	mov	r0, r5
 802b444:	f7f0 ff40 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b448:	901c      	str	r0, [sp, #112]	; 0x70
 802b44a:	4628      	mov	r0, r5
 802b44c:	f7f0 ff08 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b450:	eeb4 9a48 	vcmp.f32	s18, s16
 802b454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b458:	901d      	str	r0, [sp, #116]	; 0x74
 802b45a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802b45e:	d107      	bne.n	802b470 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802b460:	eeb4 8a68 	vcmp.f32	s16, s17
 802b464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b468:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802b46c:	bf08      	it	eq
 802b46e:	461e      	moveq	r6, r3
 802b470:	4b12      	ldr	r3, [pc, #72]	; (802b4bc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802b472:	681b      	ldr	r3, [r3, #0]
 802b474:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802b478:	b10a      	cbz	r2, 802b47e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802b47a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802b47c:	b905      	cbnz	r5, 802b480 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802b47e:	689d      	ldr	r5, [r3, #8]
 802b480:	682b      	ldr	r3, [r5, #0]
 802b482:	4620      	mov	r0, r4
 802b484:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802b486:	f7ff fec2 	bl	802b20e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802b48a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802b48e:	9604      	str	r6, [sp, #16]
 802b490:	e9cd 0302 	strd	r0, r3, [sp, #8]
 802b494:	ab13      	add	r3, sp, #76	; 0x4c
 802b496:	9301      	str	r3, [sp, #4]
 802b498:	ab15      	add	r3, sp, #84	; 0x54
 802b49a:	9300      	str	r3, [sp, #0]
 802b49c:	aa1e      	add	r2, sp, #120	; 0x78
 802b49e:	ab19      	add	r3, sp, #100	; 0x64
 802b4a0:	a917      	add	r1, sp, #92	; 0x5c
 802b4a2:	4628      	mov	r0, r5
 802b4a4:	47b8      	blx	r7
 802b4a6:	b033      	add	sp, #204	; 0xcc
 802b4a8:	ecbd 8b04 	vpop	{d8-d9}
 802b4ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b4b0:	2300      	movs	r3, #0
 802b4b2:	9312      	str	r3, [sp, #72]	; 0x48
 802b4b4:	e6f7      	b.n	802b2a6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802b4b6:	bf00      	nop
 802b4b8:	20013836 	.word	0x20013836
 802b4bc:	2001383c 	.word	0x2001383c

0802b4c0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802b4c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b4c4:	ed2d 8b02 	vpush	{d8}
 802b4c8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b4cc:	b098      	sub	sp, #96	; 0x60
 802b4ce:	4604      	mov	r4, r0
 802b4d0:	4688      	mov	r8, r1
 802b4d2:	2b00      	cmp	r3, #0
 802b4d4:	d077      	beq.n	802b5c6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802b4d6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802b4da:	4628      	mov	r0, r5
 802b4dc:	f7f0 fec0 	bl	801c260 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b4e0:	ee07 0a90 	vmov	s15, r0
 802b4e4:	4628      	mov	r0, r5
 802b4e6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802b4ea:	f7f0 feed 	bl	801c2c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b4ee:	4b4e      	ldr	r3, [pc, #312]	; (802b628 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802b4f0:	781b      	ldrb	r3, [r3, #0]
 802b4f2:	ee07 0a90 	vmov	s15, r0
 802b4f6:	2b01      	cmp	r3, #1
 802b4f8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b4fc:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802b500:	d066      	beq.n	802b5d0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802b502:	eeb0 6a47 	vmov.f32	s12, s14
 802b506:	ee17 3a10 	vmov	r3, s14
 802b50a:	eeb0 4a48 	vmov.f32	s8, s16
 802b50e:	eeb0 7a48 	vmov.f32	s14, s16
 802b512:	eef0 4a67 	vmov.f32	s9, s15
 802b516:	eeb0 8a67 	vmov.f32	s16, s15
 802b51a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802b51e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802b522:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802b526:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802b52a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802b52e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802b532:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802b534:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802b536:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802b538:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802b53c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802b540:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b544:	ee73 1a65 	vsub.f32	s3, s6, s11
 802b548:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802b54c:	ee32 1a45 	vsub.f32	s2, s4, s10
 802b550:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 802b554:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802b558:	eee1 6a21 	vfma.f32	s13, s2, s3
 802b55c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802b560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b564:	dd3d      	ble.n	802b5e2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802b566:	ed8d 5a04 	vstr	s10, [sp, #16]
 802b56a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802b56e:	edcd 2a06 	vstr	s5, [sp, #24]
 802b572:	f8cd c01c 	str.w	ip, [sp, #28]
 802b576:	edcd 5a08 	vstr	s11, [sp, #32]
 802b57a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802b57e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802b582:	970b      	str	r7, [sp, #44]	; 0x2c
 802b584:	960c      	str	r6, [sp, #48]	; 0x30
 802b586:	950d      	str	r5, [sp, #52]	; 0x34
 802b588:	920e      	str	r2, [sp, #56]	; 0x38
 802b58a:	900f      	str	r0, [sp, #60]	; 0x3c
 802b58c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802b590:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 802b594:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802b598:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802b59c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802b5a0:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 802b5a4:	9316      	str	r3, [sp, #88]	; 0x58
 802b5a6:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802b5aa:	ab14      	add	r3, sp, #80	; 0x50
 802b5ac:	9303      	str	r3, [sp, #12]
 802b5ae:	ab10      	add	r3, sp, #64	; 0x40
 802b5b0:	9302      	str	r3, [sp, #8]
 802b5b2:	ab0c      	add	r3, sp, #48	; 0x30
 802b5b4:	9301      	str	r3, [sp, #4]
 802b5b6:	ab08      	add	r3, sp, #32
 802b5b8:	9300      	str	r3, [sp, #0]
 802b5ba:	2200      	movs	r2, #0
 802b5bc:	ab04      	add	r3, sp, #16
 802b5be:	4641      	mov	r1, r8
 802b5c0:	4620      	mov	r0, r4
 802b5c2:	f7ff fe2d 	bl	802b220 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802b5c6:	b018      	add	sp, #96	; 0x60
 802b5c8:	ecbd 8b02 	vpop	{d8}
 802b5cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b5d0:	eeb0 6a48 	vmov.f32	s12, s16
 802b5d4:	eef0 4a47 	vmov.f32	s9, s14
 802b5d8:	ee17 3a90 	vmov	r3, s15
 802b5dc:	eeb0 4a67 	vmov.f32	s8, s15
 802b5e0:	e79b      	b.n	802b51a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802b5e2:	ed8d 5a05 	vstr	s10, [sp, #20]
 802b5e6:	ed8d 2a04 	vstr	s4, [sp, #16]
 802b5ea:	f8cd c018 	str.w	ip, [sp, #24]
 802b5ee:	edcd 2a07 	vstr	s5, [sp, #28]
 802b5f2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802b5f6:	ed8d 3a08 	vstr	s6, [sp, #32]
 802b5fa:	970a      	str	r7, [sp, #40]	; 0x28
 802b5fc:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802b600:	960d      	str	r6, [sp, #52]	; 0x34
 802b602:	950c      	str	r5, [sp, #48]	; 0x30
 802b604:	900e      	str	r0, [sp, #56]	; 0x38
 802b606:	920f      	str	r2, [sp, #60]	; 0x3c
 802b608:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802b60c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802b610:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 802b614:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802b618:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802b61c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802b620:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 802b624:	9317      	str	r3, [sp, #92]	; 0x5c
 802b626:	e7c0      	b.n	802b5aa <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802b628:	20013834 	.word	0x20013834

0802b62c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802b62c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b62e:	b08d      	sub	sp, #52	; 0x34
 802b630:	2300      	movs	r3, #0
 802b632:	9304      	str	r3, [sp, #16]
 802b634:	9305      	str	r3, [sp, #20]
 802b636:	9306      	str	r3, [sp, #24]
 802b638:	aa04      	add	r2, sp, #16
 802b63a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802b63e:	9307      	str	r3, [sp, #28]
 802b640:	f100 0640 	add.w	r6, r0, #64	; 0x40
 802b644:	4613      	mov	r3, r2
 802b646:	f101 0710 	add.w	r7, r1, #16
 802b64a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b688 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802b64e:	460c      	mov	r4, r1
 802b650:	4605      	mov	r5, r0
 802b652:	ecb4 7a01 	vldmia	r4!, {s14}
 802b656:	ecf5 6a01 	vldmia	r5!, {s13}
 802b65a:	42bc      	cmp	r4, r7
 802b65c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b660:	d1f7      	bne.n	802b652 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802b662:	3010      	adds	r0, #16
 802b664:	42b0      	cmp	r0, r6
 802b666:	ece2 7a01 	vstmia	r2!, {s15}
 802b66a:	d1ee      	bne.n	802b64a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802b66c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b66e:	ac0c      	add	r4, sp, #48	; 0x30
 802b670:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 802b674:	ed9d 0a08 	vldr	s0, [sp, #32]
 802b678:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802b67c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802b680:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 802b684:	b00d      	add	sp, #52	; 0x34
 802b686:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b688:	00000000 	.word	0x00000000

0802b68c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802b68c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802b6bc <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802b690:	2300      	movs	r3, #0
 802b692:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b696:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802b69a:	2200      	movs	r2, #0
 802b69c:	4293      	cmp	r3, r2
 802b69e:	f102 0201 	add.w	r2, r2, #1
 802b6a2:	bf14      	ite	ne
 802b6a4:	eef0 6a47 	vmovne.f32	s13, s14
 802b6a8:	eef0 6a67 	vmoveq.f32	s13, s15
 802b6ac:	2a04      	cmp	r2, #4
 802b6ae:	ece1 6a01 	vstmia	r1!, {s13}
 802b6b2:	d1f3      	bne.n	802b69c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 802b6b4:	3301      	adds	r3, #1
 802b6b6:	2b04      	cmp	r3, #4
 802b6b8:	d1ed      	bne.n	802b696 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802b6ba:	4770      	bx	lr
 802b6bc:	00000000 	.word	0x00000000

0802b6c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802b6c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b6c4:	460c      	mov	r4, r1
 802b6c6:	4605      	mov	r5, r0
 802b6c8:	4690      	mov	r8, r2
 802b6ca:	f7ff ffdf 	bl	802b68c <_ZN8touchgfx9Matrix4x4C1Ev>
 802b6ce:	4628      	mov	r0, r5
 802b6d0:	4621      	mov	r1, r4
 802b6d2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802b6d6:	2300      	movs	r3, #0
 802b6d8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b718 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 802b6dc:	eb08 0603 	add.w	r6, r8, r3
 802b6e0:	460f      	mov	r7, r1
 802b6e2:	2400      	movs	r4, #0
 802b6e4:	4632      	mov	r2, r6
 802b6e6:	ecf7 6a01 	vldmia	r7!, {s13}
 802b6ea:	ed92 7a00 	vldr	s14, [r2]
 802b6ee:	3401      	adds	r4, #1
 802b6f0:	2c04      	cmp	r4, #4
 802b6f2:	f106 0610 	add.w	r6, r6, #16
 802b6f6:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b6fa:	d1f3      	bne.n	802b6e4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802b6fc:	18c2      	adds	r2, r0, r3
 802b6fe:	3304      	adds	r3, #4
 802b700:	2b10      	cmp	r3, #16
 802b702:	edc2 7a00 	vstr	s15, [r2]
 802b706:	d1e7      	bne.n	802b6d8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802b708:	3110      	adds	r1, #16
 802b70a:	4561      	cmp	r1, ip
 802b70c:	f100 0010 	add.w	r0, r0, #16
 802b710:	d1e1      	bne.n	802b6d6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802b712:	4628      	mov	r0, r5
 802b714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b718:	00000000 	.word	0x00000000

0802b71c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802b71c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b720:	ee87 0a80 	vdiv.f32	s0, s15, s0
 802b724:	f100 0320 	add.w	r3, r0, #32
 802b728:	3030      	adds	r0, #48	; 0x30
 802b72a:	ecf3 7a01 	vldmia	r3!, {s15}
 802b72e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b732:	4283      	cmp	r3, r0
 802b734:	edc3 7a03 	vstr	s15, [r3, #12]
 802b738:	d1f7      	bne.n	802b72a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802b73a:	4770      	bx	lr

0802b73c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802b73c:	b510      	push	{r4, lr}
 802b73e:	ed2d 8b02 	vpush	{d8}
 802b742:	4604      	mov	r4, r0
 802b744:	eef0 8a40 	vmov.f32	s17, s0
 802b748:	f001 fb8a 	bl	802ce60 <sinf>
 802b74c:	eeb0 8a40 	vmov.f32	s16, s0
 802b750:	eeb0 0a68 	vmov.f32	s0, s17
 802b754:	f001 fb38 	bl	802cdc8 <cosf>
 802b758:	f104 0310 	add.w	r3, r4, #16
 802b75c:	f104 0220 	add.w	r2, r4, #32
 802b760:	eeb1 6a48 	vneg.f32	s12, s16
 802b764:	edd3 7a04 	vldr	s15, [r3, #16]
 802b768:	edd3 6a00 	vldr	s13, [r3]
 802b76c:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b770:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b774:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b778:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b77c:	eca3 7a01 	vstmia	r3!, {s14}
 802b780:	429a      	cmp	r2, r3
 802b782:	edc3 7a03 	vstr	s15, [r3, #12]
 802b786:	d1ed      	bne.n	802b764 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802b788:	ecbd 8b02 	vpop	{d8}
 802b78c:	4620      	mov	r0, r4
 802b78e:	bd10      	pop	{r4, pc}

0802b790 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802b790:	b510      	push	{r4, lr}
 802b792:	ed2d 8b02 	vpush	{d8}
 802b796:	4604      	mov	r4, r0
 802b798:	eef0 8a40 	vmov.f32	s17, s0
 802b79c:	f001 fb60 	bl	802ce60 <sinf>
 802b7a0:	eeb0 8a40 	vmov.f32	s16, s0
 802b7a4:	eeb0 0a68 	vmov.f32	s0, s17
 802b7a8:	f001 fb0e 	bl	802cdc8 <cosf>
 802b7ac:	4623      	mov	r3, r4
 802b7ae:	f104 0210 	add.w	r2, r4, #16
 802b7b2:	eeb1 6a48 	vneg.f32	s12, s16
 802b7b6:	edd3 7a08 	vldr	s15, [r3, #32]
 802b7ba:	edd3 6a00 	vldr	s13, [r3]
 802b7be:	ee27 7a88 	vmul.f32	s14, s15, s16
 802b7c2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b7c6:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b7ca:	eee6 7a26 	vfma.f32	s15, s12, s13
 802b7ce:	eca3 7a01 	vstmia	r3!, {s14}
 802b7d2:	429a      	cmp	r2, r3
 802b7d4:	edc3 7a07 	vstr	s15, [r3, #28]
 802b7d8:	d1ed      	bne.n	802b7b6 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802b7da:	ecbd 8b02 	vpop	{d8}
 802b7de:	4620      	mov	r0, r4
 802b7e0:	bd10      	pop	{r4, pc}

0802b7e2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802b7e2:	b510      	push	{r4, lr}
 802b7e4:	ed2d 8b02 	vpush	{d8}
 802b7e8:	4604      	mov	r4, r0
 802b7ea:	eef0 8a40 	vmov.f32	s17, s0
 802b7ee:	f001 fb37 	bl	802ce60 <sinf>
 802b7f2:	eeb0 8a40 	vmov.f32	s16, s0
 802b7f6:	eeb0 0a68 	vmov.f32	s0, s17
 802b7fa:	f001 fae5 	bl	802cdc8 <cosf>
 802b7fe:	4623      	mov	r3, r4
 802b800:	f104 0210 	add.w	r2, r4, #16
 802b804:	eeb1 6a48 	vneg.f32	s12, s16
 802b808:	edd3 7a04 	vldr	s15, [r3, #16]
 802b80c:	edd3 6a00 	vldr	s13, [r3]
 802b810:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b814:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b818:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b81c:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b820:	eca3 7a01 	vstmia	r3!, {s14}
 802b824:	429a      	cmp	r2, r3
 802b826:	edc3 7a03 	vstr	s15, [r3, #12]
 802b82a:	d1ed      	bne.n	802b808 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802b82c:	ecbd 8b02 	vpop	{d8}
 802b830:	4620      	mov	r0, r4
 802b832:	bd10      	pop	{r4, pc}

0802b834 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 802b834:	4603      	mov	r3, r0
 802b836:	f100 0210 	add.w	r2, r0, #16
 802b83a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802b83e:	edd3 7a00 	vldr	s15, [r3]
 802b842:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b846:	ece3 7a01 	vstmia	r3!, {s15}
 802b84a:	4293      	cmp	r3, r2
 802b84c:	d1f5      	bne.n	802b83a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802b84e:	4770      	bx	lr

0802b850 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802b850:	f100 0310 	add.w	r3, r0, #16
 802b854:	f100 0220 	add.w	r2, r0, #32
 802b858:	ed93 7a08 	vldr	s14, [r3, #32]
 802b85c:	edd3 7a00 	vldr	s15, [r3]
 802b860:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b864:	ece3 7a01 	vstmia	r3!, {s15}
 802b868:	4293      	cmp	r3, r2
 802b86a:	d1f5      	bne.n	802b858 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802b86c:	4770      	bx	lr

0802b86e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802b86e:	f100 0320 	add.w	r3, r0, #32
 802b872:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b876:	ed93 7a04 	vldr	s14, [r3, #16]
 802b87a:	edd3 7a00 	vldr	s15, [r3]
 802b87e:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b882:	ece3 7a01 	vstmia	r3!, {s15}
 802b886:	4293      	cmp	r3, r2
 802b888:	d1f5      	bne.n	802b876 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802b88a:	4770      	bx	lr

0802b88c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802b88c:	4603      	mov	r3, r0
 802b88e:	f100 0210 	add.w	r2, r0, #16
 802b892:	edd3 7a00 	vldr	s15, [r3]
 802b896:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b89a:	ece3 7a01 	vstmia	r3!, {s15}
 802b89e:	4293      	cmp	r3, r2
 802b8a0:	d1f7      	bne.n	802b892 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802b8a2:	4770      	bx	lr

0802b8a4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 802b8a4:	f100 0310 	add.w	r3, r0, #16
 802b8a8:	f100 0220 	add.w	r2, r0, #32
 802b8ac:	edd3 7a00 	vldr	s15, [r3]
 802b8b0:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8b4:	ece3 7a01 	vstmia	r3!, {s15}
 802b8b8:	4293      	cmp	r3, r2
 802b8ba:	d1f7      	bne.n	802b8ac <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 802b8bc:	4770      	bx	lr

0802b8be <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802b8be:	f100 0320 	add.w	r3, r0, #32
 802b8c2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b8c6:	edd3 7a00 	vldr	s15, [r3]
 802b8ca:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8ce:	ece3 7a01 	vstmia	r3!, {s15}
 802b8d2:	4293      	cmp	r3, r2
 802b8d4:	d1f7      	bne.n	802b8c6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802b8d6:	4770      	bx	lr

0802b8d8 <arm_mean_f32>:
 802b8d8:	b430      	push	{r4, r5}
 802b8da:	088d      	lsrs	r5, r1, #2
 802b8dc:	eddf 7a17 	vldr	s15, [pc, #92]	; 802b93c <arm_mean_f32+0x64>
 802b8e0:	d018      	beq.n	802b914 <arm_mean_f32+0x3c>
 802b8e2:	f100 0310 	add.w	r3, r0, #16
 802b8e6:	462c      	mov	r4, r5
 802b8e8:	ed13 7a04 	vldr	s14, [r3, #-16]
 802b8ec:	ed53 5a03 	vldr	s11, [r3, #-12]
 802b8f0:	ed13 6a02 	vldr	s12, [r3, #-8]
 802b8f4:	ed53 6a01 	vldr	s13, [r3, #-4]
 802b8f8:	ee37 7a87 	vadd.f32	s14, s15, s14
 802b8fc:	3c01      	subs	r4, #1
 802b8fe:	ee77 7a25 	vadd.f32	s15, s14, s11
 802b902:	f103 0310 	add.w	r3, r3, #16
 802b906:	ee77 7a86 	vadd.f32	s15, s15, s12
 802b90a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b90e:	d1eb      	bne.n	802b8e8 <arm_mean_f32+0x10>
 802b910:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 802b914:	f011 0303 	ands.w	r3, r1, #3
 802b918:	d005      	beq.n	802b926 <arm_mean_f32+0x4e>
 802b91a:	ecb0 7a01 	vldmia	r0!, {s14}
 802b91e:	3b01      	subs	r3, #1
 802b920:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b924:	d1f9      	bne.n	802b91a <arm_mean_f32+0x42>
 802b926:	ee07 1a10 	vmov	s14, r1
 802b92a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 802b92e:	bc30      	pop	{r4, r5}
 802b930:	eec7 7a87 	vdiv.f32	s15, s15, s14
 802b934:	edc2 7a00 	vstr	s15, [r2]
 802b938:	4770      	bx	lr
 802b93a:	bf00      	nop
 802b93c:	00000000 	.word	0x00000000

0802b940 <arm_max_f32>:
 802b940:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b944:	1e4f      	subs	r7, r1, #1
 802b946:	ea5f 0897 	movs.w	r8, r7, lsr #2
 802b94a:	f100 0e04 	add.w	lr, r0, #4
 802b94e:	edd0 7a00 	vldr	s15, [r0]
 802b952:	d058      	beq.n	802ba06 <arm_max_f32+0xc6>
 802b954:	3014      	adds	r0, #20
 802b956:	46c4      	mov	ip, r8
 802b958:	2604      	movs	r6, #4
 802b95a:	2400      	movs	r4, #0
 802b95c:	ed10 6a04 	vldr	s12, [r0, #-16]
 802b960:	ed50 6a03 	vldr	s13, [r0, #-12]
 802b964:	ed10 7a02 	vldr	s14, [r0, #-8]
 802b968:	ed50 5a01 	vldr	s11, [r0, #-4]
 802b96c:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802b970:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b974:	bfc8      	it	gt
 802b976:	eef0 7a46 	vmovgt.f32	s15, s12
 802b97a:	f1a6 0503 	sub.w	r5, r6, #3
 802b97e:	eef4 7ae6 	vcmpe.f32	s15, s13
 802b982:	bfc8      	it	gt
 802b984:	462c      	movgt	r4, r5
 802b986:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b98a:	bf48      	it	mi
 802b98c:	eef0 7a66 	vmovmi.f32	s15, s13
 802b990:	f1a6 0502 	sub.w	r5, r6, #2
 802b994:	eef4 7ac7 	vcmpe.f32	s15, s14
 802b998:	bf48      	it	mi
 802b99a:	462c      	movmi	r4, r5
 802b99c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b9a0:	bf48      	it	mi
 802b9a2:	eef0 7a47 	vmovmi.f32	s15, s14
 802b9a6:	f106 35ff 	add.w	r5, r6, #4294967295
 802b9aa:	eef4 7ae5 	vcmpe.f32	s15, s11
 802b9ae:	bf48      	it	mi
 802b9b0:	462c      	movmi	r4, r5
 802b9b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b9b6:	bf48      	it	mi
 802b9b8:	4634      	movmi	r4, r6
 802b9ba:	bf48      	it	mi
 802b9bc:	eef0 7a65 	vmovmi.f32	s15, s11
 802b9c0:	f1bc 0c01 	subs.w	ip, ip, #1
 802b9c4:	f106 0604 	add.w	r6, r6, #4
 802b9c8:	f100 0010 	add.w	r0, r0, #16
 802b9cc:	d1c6      	bne.n	802b95c <arm_max_f32+0x1c>
 802b9ce:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802b9d2:	f017 0003 	ands.w	r0, r7, #3
 802b9d6:	d018      	beq.n	802ba0a <arm_max_f32+0xca>
 802b9d8:	1a08      	subs	r0, r1, r0
 802b9da:	ecbe 7a01 	vldmia	lr!, {s14}
 802b9de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802b9e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b9e6:	bfc8      	it	gt
 802b9e8:	4604      	movgt	r4, r0
 802b9ea:	f100 0001 	add.w	r0, r0, #1
 802b9ee:	bfd8      	it	le
 802b9f0:	eeb0 7a67 	vmovle.f32	s14, s15
 802b9f4:	4288      	cmp	r0, r1
 802b9f6:	eef0 7a47 	vmov.f32	s15, s14
 802b9fa:	d1ee      	bne.n	802b9da <arm_max_f32+0x9a>
 802b9fc:	ed82 7a00 	vstr	s14, [r2]
 802ba00:	601c      	str	r4, [r3, #0]
 802ba02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ba06:	4644      	mov	r4, r8
 802ba08:	e7e3      	b.n	802b9d2 <arm_max_f32+0x92>
 802ba0a:	eeb0 7a67 	vmov.f32	s14, s15
 802ba0e:	e7f5      	b.n	802b9fc <arm_max_f32+0xbc>

0802ba10 <arm_rfft_fast_init_f32>:
 802ba10:	084b      	lsrs	r3, r1, #1
 802ba12:	2b80      	cmp	r3, #128	; 0x80
 802ba14:	b410      	push	{r4}
 802ba16:	8201      	strh	r1, [r0, #16]
 802ba18:	8003      	strh	r3, [r0, #0]
 802ba1a:	d047      	beq.n	802baac <arm_rfft_fast_init_f32+0x9c>
 802ba1c:	d917      	bls.n	802ba4e <arm_rfft_fast_init_f32+0x3e>
 802ba1e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ba22:	d03d      	beq.n	802baa0 <arm_rfft_fast_init_f32+0x90>
 802ba24:	d929      	bls.n	802ba7a <arm_rfft_fast_init_f32+0x6a>
 802ba26:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802ba2a:	d020      	beq.n	802ba6e <arm_rfft_fast_init_f32+0x5e>
 802ba2c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802ba30:	d113      	bne.n	802ba5a <arm_rfft_fast_init_f32+0x4a>
 802ba32:	4921      	ldr	r1, [pc, #132]	; (802bab8 <arm_rfft_fast_init_f32+0xa8>)
 802ba34:	4a21      	ldr	r2, [pc, #132]	; (802babc <arm_rfft_fast_init_f32+0xac>)
 802ba36:	4b22      	ldr	r3, [pc, #136]	; (802bac0 <arm_rfft_fast_init_f32+0xb0>)
 802ba38:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802ba3c:	8184      	strh	r4, [r0, #12]
 802ba3e:	6081      	str	r1, [r0, #8]
 802ba40:	6042      	str	r2, [r0, #4]
 802ba42:	6143      	str	r3, [r0, #20]
 802ba44:	2000      	movs	r0, #0
 802ba46:	b240      	sxtb	r0, r0
 802ba48:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ba4c:	4770      	bx	lr
 802ba4e:	2b20      	cmp	r3, #32
 802ba50:	d01c      	beq.n	802ba8c <arm_rfft_fast_init_f32+0x7c>
 802ba52:	2b40      	cmp	r3, #64	; 0x40
 802ba54:	d006      	beq.n	802ba64 <arm_rfft_fast_init_f32+0x54>
 802ba56:	2b10      	cmp	r3, #16
 802ba58:	d01d      	beq.n	802ba96 <arm_rfft_fast_init_f32+0x86>
 802ba5a:	20ff      	movs	r0, #255	; 0xff
 802ba5c:	b240      	sxtb	r0, r0
 802ba5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ba62:	4770      	bx	lr
 802ba64:	2438      	movs	r4, #56	; 0x38
 802ba66:	4917      	ldr	r1, [pc, #92]	; (802bac4 <arm_rfft_fast_init_f32+0xb4>)
 802ba68:	4a17      	ldr	r2, [pc, #92]	; (802bac8 <arm_rfft_fast_init_f32+0xb8>)
 802ba6a:	4b18      	ldr	r3, [pc, #96]	; (802bacc <arm_rfft_fast_init_f32+0xbc>)
 802ba6c:	e7e6      	b.n	802ba3c <arm_rfft_fast_init_f32+0x2c>
 802ba6e:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802ba72:	4917      	ldr	r1, [pc, #92]	; (802bad0 <arm_rfft_fast_init_f32+0xc0>)
 802ba74:	4a17      	ldr	r2, [pc, #92]	; (802bad4 <arm_rfft_fast_init_f32+0xc4>)
 802ba76:	4b18      	ldr	r3, [pc, #96]	; (802bad8 <arm_rfft_fast_init_f32+0xc8>)
 802ba78:	e7e0      	b.n	802ba3c <arm_rfft_fast_init_f32+0x2c>
 802ba7a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802ba7e:	d1ec      	bne.n	802ba5a <arm_rfft_fast_init_f32+0x4a>
 802ba80:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802ba84:	4915      	ldr	r1, [pc, #84]	; (802badc <arm_rfft_fast_init_f32+0xcc>)
 802ba86:	4a16      	ldr	r2, [pc, #88]	; (802bae0 <arm_rfft_fast_init_f32+0xd0>)
 802ba88:	4b16      	ldr	r3, [pc, #88]	; (802bae4 <arm_rfft_fast_init_f32+0xd4>)
 802ba8a:	e7d7      	b.n	802ba3c <arm_rfft_fast_init_f32+0x2c>
 802ba8c:	2430      	movs	r4, #48	; 0x30
 802ba8e:	4916      	ldr	r1, [pc, #88]	; (802bae8 <arm_rfft_fast_init_f32+0xd8>)
 802ba90:	4a16      	ldr	r2, [pc, #88]	; (802baec <arm_rfft_fast_init_f32+0xdc>)
 802ba92:	4b17      	ldr	r3, [pc, #92]	; (802baf0 <arm_rfft_fast_init_f32+0xe0>)
 802ba94:	e7d2      	b.n	802ba3c <arm_rfft_fast_init_f32+0x2c>
 802ba96:	2414      	movs	r4, #20
 802ba98:	4916      	ldr	r1, [pc, #88]	; (802baf4 <arm_rfft_fast_init_f32+0xe4>)
 802ba9a:	4a17      	ldr	r2, [pc, #92]	; (802baf8 <arm_rfft_fast_init_f32+0xe8>)
 802ba9c:	4b17      	ldr	r3, [pc, #92]	; (802bafc <arm_rfft_fast_init_f32+0xec>)
 802ba9e:	e7cd      	b.n	802ba3c <arm_rfft_fast_init_f32+0x2c>
 802baa0:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802baa4:	4916      	ldr	r1, [pc, #88]	; (802bb00 <arm_rfft_fast_init_f32+0xf0>)
 802baa6:	4a17      	ldr	r2, [pc, #92]	; (802bb04 <arm_rfft_fast_init_f32+0xf4>)
 802baa8:	4b17      	ldr	r3, [pc, #92]	; (802bb08 <arm_rfft_fast_init_f32+0xf8>)
 802baaa:	e7c7      	b.n	802ba3c <arm_rfft_fast_init_f32+0x2c>
 802baac:	24d0      	movs	r4, #208	; 0xd0
 802baae:	4917      	ldr	r1, [pc, #92]	; (802bb0c <arm_rfft_fast_init_f32+0xfc>)
 802bab0:	4a17      	ldr	r2, [pc, #92]	; (802bb10 <arm_rfft_fast_init_f32+0x100>)
 802bab2:	4b18      	ldr	r3, [pc, #96]	; (802bb14 <arm_rfft_fast_init_f32+0x104>)
 802bab4:	e7c2      	b.n	802ba3c <arm_rfft_fast_init_f32+0x2c>
 802bab6:	bf00      	nop
 802bab8:	080411b4 	.word	0x080411b4
 802babc:	080323ac 	.word	0x080323ac
 802bac0:	0803851c 	.word	0x0803851c
 802bac4:	080364ac 	.word	0x080364ac
 802bac8:	08042f74 	.word	0x08042f74
 802bacc:	08045464 	.word	0x08045464
 802bad0:	0803ee9c 	.word	0x0803ee9c
 802bad4:	0803cd9c 	.word	0x0803cd9c
 802bad8:	0803651c 	.word	0x0803651c
 802badc:	080450f4 	.word	0x080450f4
 802bae0:	0803c51c 	.word	0x0803c51c
 802bae4:	08043174 	.word	0x08043174
 802bae8:	0803fd54 	.word	0x0803fd54
 802baec:	0803ed9c 	.word	0x0803ed9c
 802baf0:	080363ac 	.word	0x080363ac
 802baf4:	0803fcac 	.word	0x0803fcac
 802baf8:	0803cd1c 	.word	0x0803cd1c
 802bafc:	0803fcd4 	.word	0x0803fcd4
 802bb00:	08043974 	.word	0x08043974
 802bb04:	080401b4 	.word	0x080401b4
 802bb08:	08043cf4 	.word	0x08043cf4
 802bb0c:	08045664 	.word	0x08045664
 802bb10:	0803fdb4 	.word	0x0803fdb4
 802bb14:	08044cf4 	.word	0x08044cf4

0802bb18 <arm_rfft_fast_f32>:
 802bb18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bb1c:	8a06      	ldrh	r6, [r0, #16]
 802bb1e:	0876      	lsrs	r6, r6, #1
 802bb20:	4607      	mov	r7, r0
 802bb22:	4615      	mov	r5, r2
 802bb24:	8006      	strh	r6, [r0, #0]
 802bb26:	460c      	mov	r4, r1
 802bb28:	2b00      	cmp	r3, #0
 802bb2a:	d15c      	bne.n	802bbe6 <arm_rfft_fast_f32+0xce>
 802bb2c:	461a      	mov	r2, r3
 802bb2e:	2301      	movs	r3, #1
 802bb30:	f000 fbe6 	bl	802c300 <arm_cfft_f32>
 802bb34:	edd4 7a00 	vldr	s15, [r4]
 802bb38:	ed94 7a01 	vldr	s14, [r4, #4]
 802bb3c:	883e      	ldrh	r6, [r7, #0]
 802bb3e:	6978      	ldr	r0, [r7, #20]
 802bb40:	ee37 7a07 	vadd.f32	s14, s14, s14
 802bb44:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802bb48:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bb4c:	ee77 6a87 	vadd.f32	s13, s15, s14
 802bb50:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bb54:	3e01      	subs	r6, #1
 802bb56:	ee26 7aa3 	vmul.f32	s14, s13, s7
 802bb5a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bb5e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802bb62:	ed85 7a00 	vstr	s14, [r5]
 802bb66:	edc5 7a01 	vstr	s15, [r5, #4]
 802bb6a:	3010      	adds	r0, #16
 802bb6c:	f105 0210 	add.w	r2, r5, #16
 802bb70:	3b08      	subs	r3, #8
 802bb72:	f104 0110 	add.w	r1, r4, #16
 802bb76:	ed51 4a02 	vldr	s9, [r1, #-8]
 802bb7a:	ed93 5a02 	vldr	s10, [r3, #8]
 802bb7e:	ed11 7a01 	vldr	s14, [r1, #-4]
 802bb82:	ed10 6a02 	vldr	s12, [r0, #-8]
 802bb86:	edd3 5a03 	vldr	s11, [r3, #12]
 802bb8a:	ed50 6a01 	vldr	s13, [r0, #-4]
 802bb8e:	ee75 7a64 	vsub.f32	s15, s10, s9
 802bb92:	ee35 4a87 	vadd.f32	s8, s11, s14
 802bb96:	ee35 5a24 	vadd.f32	s10, s10, s9
 802bb9a:	ee77 5a65 	vsub.f32	s11, s14, s11
 802bb9e:	ee66 4a27 	vmul.f32	s9, s12, s15
 802bba2:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802bba6:	ee34 5a85 	vadd.f32	s10, s9, s10
 802bbaa:	ee26 6a04 	vmul.f32	s12, s12, s8
 802bbae:	ee66 6a84 	vmul.f32	s13, s13, s8
 802bbb2:	ee77 7a25 	vadd.f32	s15, s14, s11
 802bbb6:	ee76 6a85 	vadd.f32	s13, s13, s10
 802bbba:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bbbe:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802bbc2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bbc6:	3e01      	subs	r6, #1
 802bbc8:	ed42 6a02 	vstr	s13, [r2, #-8]
 802bbcc:	ed42 7a01 	vstr	s15, [r2, #-4]
 802bbd0:	f1a3 0308 	sub.w	r3, r3, #8
 802bbd4:	f101 0108 	add.w	r1, r1, #8
 802bbd8:	f100 0008 	add.w	r0, r0, #8
 802bbdc:	f102 0208 	add.w	r2, r2, #8
 802bbe0:	d1c9      	bne.n	802bb76 <arm_rfft_fast_f32+0x5e>
 802bbe2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bbe6:	edd1 7a00 	vldr	s15, [r1]
 802bbea:	edd1 6a01 	vldr	s13, [r1, #4]
 802bbee:	6941      	ldr	r1, [r0, #20]
 802bbf0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802bbf4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802bbf8:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bbfc:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bc00:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bc04:	3e01      	subs	r6, #1
 802bc06:	ed82 7a00 	vstr	s14, [r2]
 802bc0a:	edc2 7a01 	vstr	s15, [r2, #4]
 802bc0e:	00f0      	lsls	r0, r6, #3
 802bc10:	b3ee      	cbz	r6, 802bc8e <arm_rfft_fast_f32+0x176>
 802bc12:	3808      	subs	r0, #8
 802bc14:	f101 0e10 	add.w	lr, r1, #16
 802bc18:	4420      	add	r0, r4
 802bc1a:	f104 0110 	add.w	r1, r4, #16
 802bc1e:	f102 0c10 	add.w	ip, r2, #16
 802bc22:	ed90 7a02 	vldr	s14, [r0, #8]
 802bc26:	ed51 6a02 	vldr	s13, [r1, #-8]
 802bc2a:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802bc2e:	ed90 4a03 	vldr	s8, [r0, #12]
 802bc32:	ed11 5a01 	vldr	s10, [r1, #-4]
 802bc36:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802bc3a:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802bc3e:	ee74 4a05 	vadd.f32	s9, s8, s10
 802bc42:	ee26 3a27 	vmul.f32	s6, s12, s15
 802bc46:	ee77 6a26 	vadd.f32	s13, s14, s13
 802bc4a:	ee35 5a44 	vsub.f32	s10, s10, s8
 802bc4e:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802bc52:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bc56:	ee77 7a05 	vadd.f32	s15, s14, s10
 802bc5a:	ee26 6a24 	vmul.f32	s12, s12, s9
 802bc5e:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802bc62:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bc66:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802bc6a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bc6e:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bc72:	3e01      	subs	r6, #1
 802bc74:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802bc78:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802bc7c:	f1a0 0008 	sub.w	r0, r0, #8
 802bc80:	f101 0108 	add.w	r1, r1, #8
 802bc84:	f10e 0e08 	add.w	lr, lr, #8
 802bc88:	f10c 0c08 	add.w	ip, ip, #8
 802bc8c:	d1c9      	bne.n	802bc22 <arm_rfft_fast_f32+0x10a>
 802bc8e:	4638      	mov	r0, r7
 802bc90:	4629      	mov	r1, r5
 802bc92:	461a      	mov	r2, r3
 802bc94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bc98:	2301      	movs	r3, #1
 802bc9a:	f000 bb31 	b.w	802c300 <arm_cfft_f32>
 802bc9e:	bf00      	nop

0802bca0 <arm_cfft_radix8by2_f32>:
 802bca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bca4:	ed2d 8b08 	vpush	{d8-d11}
 802bca8:	f8b0 e000 	ldrh.w	lr, [r0]
 802bcac:	6842      	ldr	r2, [r0, #4]
 802bcae:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802bcb2:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802bcb6:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802bcba:	4607      	mov	r7, r0
 802bcbc:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802bcc0:	f000 80af 	beq.w	802be22 <arm_cfft_radix8by2_f32+0x182>
 802bcc4:	3310      	adds	r3, #16
 802bcc6:	18ce      	adds	r6, r1, r3
 802bcc8:	3210      	adds	r2, #16
 802bcca:	4443      	add	r3, r8
 802bccc:	f101 0510 	add.w	r5, r1, #16
 802bcd0:	f108 0410 	add.w	r4, r8, #16
 802bcd4:	ed54 1a04 	vldr	s3, [r4, #-16]
 802bcd8:	ed13 4a04 	vldr	s8, [r3, #-16]
 802bcdc:	ed53 3a03 	vldr	s7, [r3, #-12]
 802bce0:	ed53 5a02 	vldr	s11, [r3, #-8]
 802bce4:	ed13 5a01 	vldr	s10, [r3, #-4]
 802bce8:	ed54 6a03 	vldr	s13, [r4, #-12]
 802bcec:	ed14 0a02 	vldr	s0, [r4, #-8]
 802bcf0:	ed16 2a04 	vldr	s4, [r6, #-16]
 802bcf4:	ed56 2a03 	vldr	s5, [r6, #-12]
 802bcf8:	ed15 6a03 	vldr	s12, [r5, #-12]
 802bcfc:	ed15 7a01 	vldr	s14, [r5, #-4]
 802bd00:	ed15 3a04 	vldr	s6, [r5, #-16]
 802bd04:	ed54 7a01 	vldr	s15, [r4, #-4]
 802bd08:	ed56 0a02 	vldr	s1, [r6, #-8]
 802bd0c:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bd10:	ed55 4a02 	vldr	s9, [r5, #-8]
 802bd14:	ee73 ba21 	vadd.f32	s23, s6, s3
 802bd18:	ee36 ba26 	vadd.f32	s22, s12, s13
 802bd1c:	ee37 aa27 	vadd.f32	s20, s14, s15
 802bd20:	ee72 9a04 	vadd.f32	s19, s4, s8
 802bd24:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802bd28:	ee31 8a05 	vadd.f32	s16, s2, s10
 802bd2c:	ee74 aa80 	vadd.f32	s21, s9, s0
 802bd30:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802bd34:	ed45 ba04 	vstr	s23, [r5, #-16]
 802bd38:	ed05 ba03 	vstr	s22, [r5, #-12]
 802bd3c:	ed45 aa02 	vstr	s21, [r5, #-8]
 802bd40:	ed05 aa01 	vstr	s20, [r5, #-4]
 802bd44:	ed06 8a01 	vstr	s16, [r6, #-4]
 802bd48:	ed46 9a04 	vstr	s19, [r6, #-16]
 802bd4c:	ed06 9a03 	vstr	s18, [r6, #-12]
 802bd50:	ed46 8a02 	vstr	s17, [r6, #-8]
 802bd54:	ee76 6a66 	vsub.f32	s13, s12, s13
 802bd58:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802bd5c:	ed12 6a03 	vldr	s12, [r2, #-12]
 802bd60:	ed52 2a04 	vldr	s5, [r2, #-16]
 802bd64:	ee33 3a61 	vsub.f32	s6, s6, s3
 802bd68:	ee34 4a42 	vsub.f32	s8, s8, s4
 802bd6c:	ee26 8a86 	vmul.f32	s16, s13, s12
 802bd70:	ee24 2a06 	vmul.f32	s4, s8, s12
 802bd74:	ee63 1a22 	vmul.f32	s3, s6, s5
 802bd78:	ee24 4a22 	vmul.f32	s8, s8, s5
 802bd7c:	ee23 3a06 	vmul.f32	s6, s6, s12
 802bd80:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802bd84:	ee23 6a86 	vmul.f32	s12, s7, s12
 802bd88:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802bd8c:	ee36 6a04 	vadd.f32	s12, s12, s8
 802bd90:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bd94:	ee72 3a63 	vsub.f32	s7, s4, s7
 802bd98:	ee71 2a88 	vadd.f32	s5, s3, s16
 802bd9c:	ed44 6a03 	vstr	s13, [r4, #-12]
 802bda0:	ed44 2a04 	vstr	s5, [r4, #-16]
 802bda4:	ed43 3a04 	vstr	s7, [r3, #-16]
 802bda8:	ed03 6a03 	vstr	s12, [r3, #-12]
 802bdac:	ee77 7a67 	vsub.f32	s15, s14, s15
 802bdb0:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802bdb4:	ed12 7a01 	vldr	s14, [r2, #-4]
 802bdb8:	ed52 5a02 	vldr	s11, [r2, #-8]
 802bdbc:	ee35 6a41 	vsub.f32	s12, s10, s2
 802bdc0:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802bdc4:	ee67 3a87 	vmul.f32	s7, s15, s14
 802bdc8:	ee26 5a87 	vmul.f32	s10, s13, s14
 802bdcc:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802bdd0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802bdd4:	ee64 4a87 	vmul.f32	s9, s9, s14
 802bdd8:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802bddc:	ee26 7a07 	vmul.f32	s14, s12, s14
 802bde0:	ee26 6a25 	vmul.f32	s12, s12, s11
 802bde4:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802bde8:	ee74 5a23 	vadd.f32	s11, s8, s7
 802bdec:	ee35 6a46 	vsub.f32	s12, s10, s12
 802bdf0:	ee37 7a26 	vadd.f32	s14, s14, s13
 802bdf4:	f1be 0e01 	subs.w	lr, lr, #1
 802bdf8:	ed44 5a02 	vstr	s11, [r4, #-8]
 802bdfc:	f105 0510 	add.w	r5, r5, #16
 802be00:	ed44 7a01 	vstr	s15, [r4, #-4]
 802be04:	f106 0610 	add.w	r6, r6, #16
 802be08:	ed03 6a02 	vstr	s12, [r3, #-8]
 802be0c:	ed03 7a01 	vstr	s14, [r3, #-4]
 802be10:	f102 0210 	add.w	r2, r2, #16
 802be14:	f104 0410 	add.w	r4, r4, #16
 802be18:	f103 0310 	add.w	r3, r3, #16
 802be1c:	f47f af5a 	bne.w	802bcd4 <arm_cfft_radix8by2_f32+0x34>
 802be20:	687a      	ldr	r2, [r7, #4]
 802be22:	fa1f f48c 	uxth.w	r4, ip
 802be26:	4608      	mov	r0, r1
 802be28:	2302      	movs	r3, #2
 802be2a:	4621      	mov	r1, r4
 802be2c:	f000 fbca 	bl	802c5c4 <arm_radix8_butterfly_f32>
 802be30:	ecbd 8b08 	vpop	{d8-d11}
 802be34:	4640      	mov	r0, r8
 802be36:	4621      	mov	r1, r4
 802be38:	687a      	ldr	r2, [r7, #4]
 802be3a:	2302      	movs	r3, #2
 802be3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802be40:	f000 bbc0 	b.w	802c5c4 <arm_radix8_butterfly_f32>

0802be44 <arm_cfft_radix8by4_f32>:
 802be44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802be48:	ed2d 8b0a 	vpush	{d8-d12}
 802be4c:	8802      	ldrh	r2, [r0, #0]
 802be4e:	ed91 6a00 	vldr	s12, [r1]
 802be52:	b08f      	sub	sp, #60	; 0x3c
 802be54:	460f      	mov	r7, r1
 802be56:	0852      	lsrs	r2, r2, #1
 802be58:	0093      	lsls	r3, r2, #2
 802be5a:	900c      	str	r0, [sp, #48]	; 0x30
 802be5c:	9103      	str	r1, [sp, #12]
 802be5e:	6841      	ldr	r1, [r0, #4]
 802be60:	ed97 7a01 	vldr	s14, [r7, #4]
 802be64:	4638      	mov	r0, r7
 802be66:	4418      	add	r0, r3
 802be68:	4606      	mov	r6, r0
 802be6a:	9009      	str	r0, [sp, #36]	; 0x24
 802be6c:	4418      	add	r0, r3
 802be6e:	edd0 6a00 	vldr	s13, [r0]
 802be72:	edd6 3a00 	vldr	s7, [r6]
 802be76:	edd6 2a01 	vldr	s5, [r6, #4]
 802be7a:	edd0 7a01 	vldr	s15, [r0, #4]
 802be7e:	900a      	str	r0, [sp, #40]	; 0x28
 802be80:	ee76 5a26 	vadd.f32	s11, s12, s13
 802be84:	4604      	mov	r4, r0
 802be86:	4625      	mov	r5, r4
 802be88:	441c      	add	r4, r3
 802be8a:	ed94 4a00 	vldr	s8, [r4]
 802be8e:	ed94 5a01 	vldr	s10, [r4, #4]
 802be92:	9401      	str	r4, [sp, #4]
 802be94:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802be98:	4630      	mov	r0, r6
 802be9a:	ee74 4a24 	vadd.f32	s9, s8, s9
 802be9e:	463e      	mov	r6, r7
 802bea0:	ee14 ea90 	vmov	lr, s9
 802bea4:	ee76 6a66 	vsub.f32	s13, s12, s13
 802bea8:	f846 eb08 	str.w	lr, [r6], #8
 802beac:	ee37 6a27 	vadd.f32	s12, s14, s15
 802beb0:	edd0 4a01 	vldr	s9, [r0, #4]
 802beb4:	9604      	str	r6, [sp, #16]
 802beb6:	ee77 7a67 	vsub.f32	s15, s14, s15
 802beba:	9e01      	ldr	r6, [sp, #4]
 802bebc:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802bec0:	ed96 2a01 	vldr	s4, [r6, #4]
 802bec4:	ee36 7a24 	vadd.f32	s14, s12, s9
 802bec8:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802becc:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802bed0:	ee36 6a62 	vsub.f32	s12, s12, s5
 802bed4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802bed8:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802bedc:	ee73 3a45 	vsub.f32	s7, s6, s10
 802bee0:	4604      	mov	r4, r0
 802bee2:	ee36 6a45 	vsub.f32	s12, s12, s10
 802bee6:	ee75 6a26 	vadd.f32	s13, s10, s13
 802beea:	46a3      	mov	fp, r4
 802beec:	ee37 7a02 	vadd.f32	s14, s14, s4
 802bef0:	ee34 5a84 	vadd.f32	s10, s9, s8
 802bef4:	ee13 8a90 	vmov	r8, s7
 802bef8:	46a4      	mov	ip, r4
 802befa:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802befe:	ed87 7a01 	vstr	s14, [r7, #4]
 802bf02:	f84b 8b08 	str.w	r8, [fp], #8
 802bf06:	f1ac 0704 	sub.w	r7, ip, #4
 802bf0a:	ed8c 5a01 	vstr	s10, [ip, #4]
 802bf0e:	f101 0c08 	add.w	ip, r1, #8
 802bf12:	462c      	mov	r4, r5
 802bf14:	f8cd c014 	str.w	ip, [sp, #20]
 802bf18:	ee15 ca90 	vmov	ip, s11
 802bf1c:	f844 cb08 	str.w	ip, [r4], #8
 802bf20:	9407      	str	r4, [sp, #28]
 802bf22:	f101 0410 	add.w	r4, r1, #16
 802bf26:	ed85 6a01 	vstr	s12, [r5, #4]
 802bf2a:	0852      	lsrs	r2, r2, #1
 802bf2c:	9402      	str	r4, [sp, #8]
 802bf2e:	462c      	mov	r4, r5
 802bf30:	f101 0518 	add.w	r5, r1, #24
 802bf34:	920b      	str	r2, [sp, #44]	; 0x2c
 802bf36:	46b2      	mov	sl, r6
 802bf38:	9506      	str	r5, [sp, #24]
 802bf3a:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802bf3e:	3a02      	subs	r2, #2
 802bf40:	ee16 5a90 	vmov	r5, s13
 802bf44:	46b6      	mov	lr, r6
 802bf46:	4630      	mov	r0, r6
 802bf48:	0852      	lsrs	r2, r2, #1
 802bf4a:	f84a 5b08 	str.w	r5, [sl], #8
 802bf4e:	f1a0 0604 	sub.w	r6, r0, #4
 802bf52:	edce 7a01 	vstr	s15, [lr, #4]
 802bf56:	9208      	str	r2, [sp, #32]
 802bf58:	f000 8130 	beq.w	802c1bc <arm_cfft_radix8by4_f32+0x378>
 802bf5c:	4691      	mov	r9, r2
 802bf5e:	9a03      	ldr	r2, [sp, #12]
 802bf60:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802bf64:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802bf68:	3b08      	subs	r3, #8
 802bf6a:	f102 0510 	add.w	r5, r2, #16
 802bf6e:	f101 0c20 	add.w	ip, r1, #32
 802bf72:	f1a4 020c 	sub.w	r2, r4, #12
 802bf76:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802bf7a:	4433      	add	r3, r6
 802bf7c:	3410      	adds	r4, #16
 802bf7e:	4650      	mov	r0, sl
 802bf80:	4659      	mov	r1, fp
 802bf82:	ed55 3a02 	vldr	s7, [r5, #-8]
 802bf86:	ed14 5a02 	vldr	s10, [r4, #-8]
 802bf8a:	ed91 7a00 	vldr	s14, [r1]
 802bf8e:	edd0 7a00 	vldr	s15, [r0]
 802bf92:	ed15 4a01 	vldr	s8, [r5, #-4]
 802bf96:	ed54 5a01 	vldr	s11, [r4, #-4]
 802bf9a:	edd0 6a01 	vldr	s13, [r0, #4]
 802bf9e:	ed91 6a01 	vldr	s12, [r1, #4]
 802bfa2:	ee33 8a85 	vadd.f32	s16, s7, s10
 802bfa6:	ee34 0a25 	vadd.f32	s0, s8, s11
 802bfaa:	ee78 4a07 	vadd.f32	s9, s16, s14
 802bfae:	ee74 5a65 	vsub.f32	s11, s8, s11
 802bfb2:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802bfb6:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802bfba:	ed45 4a02 	vstr	s9, [r5, #-8]
 802bfbe:	edd1 4a01 	vldr	s9, [r1, #4]
 802bfc2:	ed90 4a01 	vldr	s8, [r0, #4]
 802bfc6:	ee70 4a24 	vadd.f32	s9, s0, s9
 802bfca:	ee76 aa05 	vadd.f32	s21, s12, s10
 802bfce:	ee74 4a84 	vadd.f32	s9, s9, s8
 802bfd2:	ee35 aac7 	vsub.f32	s20, s11, s14
 802bfd6:	ed45 4a01 	vstr	s9, [r5, #-4]
 802bfda:	edd6 1a00 	vldr	s3, [r6]
 802bfde:	edd7 0a00 	vldr	s1, [r7]
 802bfe2:	ed92 4a02 	vldr	s8, [r2, #8]
 802bfe6:	edd3 3a02 	vldr	s7, [r3, #8]
 802bfea:	ed93 2a01 	vldr	s4, [r3, #4]
 802bfee:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bff2:	edd2 2a01 	vldr	s5, [r2, #4]
 802bff6:	ed57 9a01 	vldr	s19, [r7, #-4]
 802bffa:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802bffe:	ee39 3a81 	vadd.f32	s6, s19, s2
 802c002:	ee74 8a84 	vadd.f32	s17, s9, s8
 802c006:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802c00a:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802c00e:	ee7a aae6 	vsub.f32	s21, s21, s13
 802c012:	ee18 aa90 	vmov	sl, s17
 802c016:	f847 a908 	str.w	sl, [r7], #-8
 802c01a:	edd2 8a01 	vldr	s17, [r2, #4]
 802c01e:	ed93 9a01 	vldr	s18, [r3, #4]
 802c022:	ee73 8a28 	vadd.f32	s17, s6, s17
 802c026:	ee3a aa27 	vadd.f32	s20, s20, s15
 802c02a:	ee78 8a89 	vadd.f32	s17, s17, s18
 802c02e:	ee74 0a63 	vsub.f32	s1, s8, s7
 802c032:	edc7 8a01 	vstr	s17, [r7, #4]
 802c036:	ed18 ba02 	vldr	s22, [r8, #-8]
 802c03a:	ed58 8a01 	vldr	s17, [r8, #-4]
 802c03e:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802c042:	ee6a ba28 	vmul.f32	s23, s20, s17
 802c046:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802c04a:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802c04e:	ee30 9a81 	vadd.f32	s18, s1, s2
 802c052:	ee79 9a82 	vadd.f32	s19, s19, s4
 802c056:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802c05a:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802c05e:	ee69 baa8 	vmul.f32	s23, s19, s17
 802c062:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802c066:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802c06a:	ee69 8a28 	vmul.f32	s17, s18, s17
 802c06e:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802c072:	ee1c aa10 	vmov	sl, s24
 802c076:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802c07a:	f841 ab08 	str.w	sl, [r1], #8
 802c07e:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802c082:	ee3b bacb 	vsub.f32	s22, s23, s22
 802c086:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802c08a:	ee33 3a62 	vsub.f32	s6, s6, s5
 802c08e:	ed01 aa01 	vstr	s20, [r1, #-4]
 802c092:	edc2 8a01 	vstr	s17, [r2, #4]
 802c096:	ed82 ba02 	vstr	s22, [r2, #8]
 802c09a:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802c09e:	ee74 3a63 	vsub.f32	s7, s8, s7
 802c0a2:	ee38 8a47 	vsub.f32	s16, s16, s14
 802c0a6:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802c0aa:	ee30 0a46 	vsub.f32	s0, s0, s12
 802c0ae:	ee33 3a42 	vsub.f32	s6, s6, s4
 802c0b2:	ee38 8a67 	vsub.f32	s16, s16, s15
 802c0b6:	ee30 0a66 	vsub.f32	s0, s0, s13
 802c0ba:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802c0be:	ee63 8a04 	vmul.f32	s17, s6, s8
 802c0c2:	ee28 aa24 	vmul.f32	s20, s16, s9
 802c0c6:	ee60 9a04 	vmul.f32	s19, s0, s8
 802c0ca:	ee28 8a04 	vmul.f32	s16, s16, s8
 802c0ce:	ee20 0a24 	vmul.f32	s0, s0, s9
 802c0d2:	ee63 3a84 	vmul.f32	s7, s7, s8
 802c0d6:	ee39 4a68 	vsub.f32	s8, s18, s17
 802c0da:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802c0de:	ee14 aa10 	vmov	sl, s8
 802c0e2:	ee30 0a48 	vsub.f32	s0, s0, s16
 802c0e6:	ee63 4a24 	vmul.f32	s9, s6, s9
 802c0ea:	ed44 9a02 	vstr	s19, [r4, #-8]
 802c0ee:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802c0f2:	ed04 0a01 	vstr	s0, [r4, #-4]
 802c0f6:	f846 a908 	str.w	sl, [r6], #-8
 802c0fa:	ee35 6a46 	vsub.f32	s12, s10, s12
 802c0fe:	ee35 7a87 	vadd.f32	s14, s11, s14
 802c102:	edc6 3a01 	vstr	s7, [r6, #4]
 802c106:	ee76 6a86 	vadd.f32	s13, s13, s12
 802c10a:	ee77 7a67 	vsub.f32	s15, s14, s15
 802c10e:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802c112:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802c116:	ee67 5a86 	vmul.f32	s11, s15, s12
 802c11a:	ee26 5a87 	vmul.f32	s10, s13, s14
 802c11e:	ee72 2a62 	vsub.f32	s5, s4, s5
 802c122:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c126:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802c12a:	ee75 5a25 	vadd.f32	s11, s10, s11
 802c12e:	ee62 0a86 	vmul.f32	s1, s5, s12
 802c132:	ee66 6a86 	vmul.f32	s13, s13, s12
 802c136:	ee67 7a87 	vmul.f32	s15, s15, s14
 802c13a:	ee21 6a06 	vmul.f32	s12, s2, s12
 802c13e:	ee62 2a87 	vmul.f32	s5, s5, s14
 802c142:	ee21 1a07 	vmul.f32	s2, s2, s14
 802c146:	ee15 aa90 	vmov	sl, s11
 802c14a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802c14e:	f840 ab08 	str.w	sl, [r0], #8
 802c152:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c156:	ee76 2a22 	vadd.f32	s5, s12, s5
 802c15a:	f1b9 0901 	subs.w	r9, r9, #1
 802c15e:	ed40 7a01 	vstr	s15, [r0, #-4]
 802c162:	f105 0508 	add.w	r5, r5, #8
 802c166:	ed83 1a02 	vstr	s2, [r3, #8]
 802c16a:	edc3 2a01 	vstr	s5, [r3, #4]
 802c16e:	f108 0808 	add.w	r8, r8, #8
 802c172:	f1a2 0208 	sub.w	r2, r2, #8
 802c176:	f10c 0c10 	add.w	ip, ip, #16
 802c17a:	f104 0408 	add.w	r4, r4, #8
 802c17e:	f10e 0e18 	add.w	lr, lr, #24
 802c182:	f1a3 0308 	sub.w	r3, r3, #8
 802c186:	f47f aefc 	bne.w	802bf82 <arm_cfft_radix8by4_f32+0x13e>
 802c18a:	9908      	ldr	r1, [sp, #32]
 802c18c:	9802      	ldr	r0, [sp, #8]
 802c18e:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802c192:	00cb      	lsls	r3, r1, #3
 802c194:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802c198:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802c19c:	9102      	str	r1, [sp, #8]
 802c19e:	9904      	ldr	r1, [sp, #16]
 802c1a0:	4419      	add	r1, r3
 802c1a2:	9104      	str	r1, [sp, #16]
 802c1a4:	9905      	ldr	r1, [sp, #20]
 802c1a6:	4419      	add	r1, r3
 802c1a8:	9105      	str	r1, [sp, #20]
 802c1aa:	9907      	ldr	r1, [sp, #28]
 802c1ac:	449b      	add	fp, r3
 802c1ae:	4419      	add	r1, r3
 802c1b0:	449a      	add	sl, r3
 802c1b2:	9b06      	ldr	r3, [sp, #24]
 802c1b4:	9107      	str	r1, [sp, #28]
 802c1b6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802c1ba:	9306      	str	r3, [sp, #24]
 802c1bc:	9a04      	ldr	r2, [sp, #16]
 802c1be:	9807      	ldr	r0, [sp, #28]
 802c1c0:	edd2 3a00 	vldr	s7, [r2]
 802c1c4:	ed90 4a00 	vldr	s8, [r0]
 802c1c8:	eddb 7a00 	vldr	s15, [fp]
 802c1cc:	ed9a 3a00 	vldr	s6, [sl]
 802c1d0:	edd2 4a01 	vldr	s9, [r2, #4]
 802c1d4:	ed90 7a01 	vldr	s14, [r0, #4]
 802c1d8:	ed9b 2a01 	vldr	s4, [fp, #4]
 802c1dc:	edda 5a01 	vldr	s11, [sl, #4]
 802c1e0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802c1e4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802c1e6:	ee73 6a84 	vadd.f32	s13, s7, s8
 802c1ea:	ee34 6a87 	vadd.f32	s12, s9, s14
 802c1ee:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802c1f2:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802c1f6:	ee33 5a05 	vadd.f32	s10, s6, s10
 802c1fa:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802c1fe:	ed82 5a00 	vstr	s10, [r2]
 802c202:	ed9b 5a01 	vldr	s10, [fp, #4]
 802c206:	edda 4a01 	vldr	s9, [sl, #4]
 802c20a:	ee36 5a05 	vadd.f32	s10, s12, s10
 802c20e:	ee72 3a04 	vadd.f32	s7, s4, s8
 802c212:	ee35 5a24 	vadd.f32	s10, s10, s9
 802c216:	ee77 4a67 	vsub.f32	s9, s14, s15
 802c21a:	ed82 5a01 	vstr	s10, [r2, #4]
 802c21e:	9a05      	ldr	r2, [sp, #20]
 802c220:	ee34 5a83 	vadd.f32	s10, s9, s6
 802c224:	edd2 1a00 	vldr	s3, [r2]
 802c228:	edd2 2a01 	vldr	s5, [r2, #4]
 802c22c:	9a02      	ldr	r2, [sp, #8]
 802c22e:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802c232:	ee36 6a42 	vsub.f32	s12, s12, s4
 802c236:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802c23a:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802c23e:	ee65 2a22 	vmul.f32	s5, s10, s5
 802c242:	ee25 5a21 	vmul.f32	s10, s10, s3
 802c246:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802c24a:	ee35 5a63 	vsub.f32	s10, s10, s7
 802c24e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802c252:	edcb 2a00 	vstr	s5, [fp]
 802c256:	ed8b 5a01 	vstr	s10, [fp, #4]
 802c25a:	edd2 3a01 	vldr	s7, [r2, #4]
 802c25e:	ed92 5a00 	vldr	s10, [r2]
 802c262:	9a06      	ldr	r2, [sp, #24]
 802c264:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802c268:	ee36 6a65 	vsub.f32	s12, s12, s11
 802c26c:	ee66 4a85 	vmul.f32	s9, s13, s10
 802c270:	ee26 5a05 	vmul.f32	s10, s12, s10
 802c274:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802c278:	ee26 6a23 	vmul.f32	s12, s12, s7
 802c27c:	ee75 6a66 	vsub.f32	s13, s10, s13
 802c280:	ee34 6a86 	vadd.f32	s12, s9, s12
 802c284:	ee34 4a42 	vsub.f32	s8, s8, s4
 802c288:	ee37 7a27 	vadd.f32	s14, s14, s15
 802c28c:	edc0 6a01 	vstr	s13, [r0, #4]
 802c290:	ed80 6a00 	vstr	s12, [r0]
 802c294:	ed92 6a01 	vldr	s12, [r2, #4]
 802c298:	9803      	ldr	r0, [sp, #12]
 802c29a:	ee77 7a43 	vsub.f32	s15, s14, s6
 802c29e:	ee75 5a84 	vadd.f32	s11, s11, s8
 802c2a2:	ed92 7a00 	vldr	s14, [r2]
 802c2a6:	ee65 6a87 	vmul.f32	s13, s11, s14
 802c2aa:	ee27 7a87 	vmul.f32	s14, s15, s14
 802c2ae:	ee65 5a86 	vmul.f32	s11, s11, s12
 802c2b2:	ee67 7a86 	vmul.f32	s15, s15, s12
 802c2b6:	ee77 5a65 	vsub.f32	s11, s14, s11
 802c2ba:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802c2be:	edca 5a01 	vstr	s11, [sl, #4]
 802c2c2:	edca 7a00 	vstr	s15, [sl]
 802c2c6:	6872      	ldr	r2, [r6, #4]
 802c2c8:	4621      	mov	r1, r4
 802c2ca:	2304      	movs	r3, #4
 802c2cc:	f000 f97a 	bl	802c5c4 <arm_radix8_butterfly_f32>
 802c2d0:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c2d2:	6872      	ldr	r2, [r6, #4]
 802c2d4:	4621      	mov	r1, r4
 802c2d6:	2304      	movs	r3, #4
 802c2d8:	f000 f974 	bl	802c5c4 <arm_radix8_butterfly_f32>
 802c2dc:	980a      	ldr	r0, [sp, #40]	; 0x28
 802c2de:	6872      	ldr	r2, [r6, #4]
 802c2e0:	4621      	mov	r1, r4
 802c2e2:	2304      	movs	r3, #4
 802c2e4:	f000 f96e 	bl	802c5c4 <arm_radix8_butterfly_f32>
 802c2e8:	9801      	ldr	r0, [sp, #4]
 802c2ea:	6872      	ldr	r2, [r6, #4]
 802c2ec:	4621      	mov	r1, r4
 802c2ee:	2304      	movs	r3, #4
 802c2f0:	b00f      	add	sp, #60	; 0x3c
 802c2f2:	ecbd 8b0a 	vpop	{d8-d12}
 802c2f6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c2fa:	f000 b963 	b.w	802c5c4 <arm_radix8_butterfly_f32>
 802c2fe:	bf00      	nop

0802c300 <arm_cfft_f32>:
 802c300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c304:	2a01      	cmp	r2, #1
 802c306:	4606      	mov	r6, r0
 802c308:	4617      	mov	r7, r2
 802c30a:	460c      	mov	r4, r1
 802c30c:	4698      	mov	r8, r3
 802c30e:	8805      	ldrh	r5, [r0, #0]
 802c310:	d054      	beq.n	802c3bc <arm_cfft_f32+0xbc>
 802c312:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c316:	d04c      	beq.n	802c3b2 <arm_cfft_f32+0xb2>
 802c318:	d916      	bls.n	802c348 <arm_cfft_f32+0x48>
 802c31a:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802c31e:	d01a      	beq.n	802c356 <arm_cfft_f32+0x56>
 802c320:	d95c      	bls.n	802c3dc <arm_cfft_f32+0xdc>
 802c322:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802c326:	d044      	beq.n	802c3b2 <arm_cfft_f32+0xb2>
 802c328:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802c32c:	d105      	bne.n	802c33a <arm_cfft_f32+0x3a>
 802c32e:	4620      	mov	r0, r4
 802c330:	4629      	mov	r1, r5
 802c332:	6872      	ldr	r2, [r6, #4]
 802c334:	2301      	movs	r3, #1
 802c336:	f000 f945 	bl	802c5c4 <arm_radix8_butterfly_f32>
 802c33a:	f1b8 0f00 	cmp.w	r8, #0
 802c33e:	d111      	bne.n	802c364 <arm_cfft_f32+0x64>
 802c340:	2f01      	cmp	r7, #1
 802c342:	d016      	beq.n	802c372 <arm_cfft_f32+0x72>
 802c344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c348:	2d20      	cmp	r5, #32
 802c34a:	d032      	beq.n	802c3b2 <arm_cfft_f32+0xb2>
 802c34c:	d94a      	bls.n	802c3e4 <arm_cfft_f32+0xe4>
 802c34e:	2d40      	cmp	r5, #64	; 0x40
 802c350:	d0ed      	beq.n	802c32e <arm_cfft_f32+0x2e>
 802c352:	2d80      	cmp	r5, #128	; 0x80
 802c354:	d1f1      	bne.n	802c33a <arm_cfft_f32+0x3a>
 802c356:	4630      	mov	r0, r6
 802c358:	4621      	mov	r1, r4
 802c35a:	f7ff fca1 	bl	802bca0 <arm_cfft_radix8by2_f32>
 802c35e:	f1b8 0f00 	cmp.w	r8, #0
 802c362:	d0ed      	beq.n	802c340 <arm_cfft_f32+0x40>
 802c364:	4620      	mov	r0, r4
 802c366:	89b1      	ldrh	r1, [r6, #12]
 802c368:	68b2      	ldr	r2, [r6, #8]
 802c36a:	f7d3 ff41 	bl	80001f0 <arm_bitreversal_32>
 802c36e:	2f01      	cmp	r7, #1
 802c370:	d1e8      	bne.n	802c344 <arm_cfft_f32+0x44>
 802c372:	ee07 5a90 	vmov	s15, r5
 802c376:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802c37a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802c37e:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802c382:	2d00      	cmp	r5, #0
 802c384:	d0de      	beq.n	802c344 <arm_cfft_f32+0x44>
 802c386:	f104 0108 	add.w	r1, r4, #8
 802c38a:	2300      	movs	r3, #0
 802c38c:	3301      	adds	r3, #1
 802c38e:	429d      	cmp	r5, r3
 802c390:	f101 0108 	add.w	r1, r1, #8
 802c394:	ed11 7a04 	vldr	s14, [r1, #-16]
 802c398:	ed51 7a03 	vldr	s15, [r1, #-12]
 802c39c:	ee27 7a26 	vmul.f32	s14, s14, s13
 802c3a0:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802c3a4:	ed01 7a04 	vstr	s14, [r1, #-16]
 802c3a8:	ed41 7a03 	vstr	s15, [r1, #-12]
 802c3ac:	d1ee      	bne.n	802c38c <arm_cfft_f32+0x8c>
 802c3ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c3b2:	4630      	mov	r0, r6
 802c3b4:	4621      	mov	r1, r4
 802c3b6:	f7ff fd45 	bl	802be44 <arm_cfft_radix8by4_f32>
 802c3ba:	e7be      	b.n	802c33a <arm_cfft_f32+0x3a>
 802c3bc:	b1ad      	cbz	r5, 802c3ea <arm_cfft_f32+0xea>
 802c3be:	f101 030c 	add.w	r3, r1, #12
 802c3c2:	2200      	movs	r2, #0
 802c3c4:	ed53 7a02 	vldr	s15, [r3, #-8]
 802c3c8:	3201      	adds	r2, #1
 802c3ca:	eef1 7a67 	vneg.f32	s15, s15
 802c3ce:	4295      	cmp	r5, r2
 802c3d0:	ed43 7a02 	vstr	s15, [r3, #-8]
 802c3d4:	f103 0308 	add.w	r3, r3, #8
 802c3d8:	d1f4      	bne.n	802c3c4 <arm_cfft_f32+0xc4>
 802c3da:	e79a      	b.n	802c312 <arm_cfft_f32+0x12>
 802c3dc:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802c3e0:	d0a5      	beq.n	802c32e <arm_cfft_f32+0x2e>
 802c3e2:	e7aa      	b.n	802c33a <arm_cfft_f32+0x3a>
 802c3e4:	2d10      	cmp	r5, #16
 802c3e6:	d0b6      	beq.n	802c356 <arm_cfft_f32+0x56>
 802c3e8:	e7a7      	b.n	802c33a <arm_cfft_f32+0x3a>
 802c3ea:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c3ee:	d894      	bhi.n	802c31a <arm_cfft_f32+0x1a>
 802c3f0:	e7aa      	b.n	802c348 <arm_cfft_f32+0x48>
 802c3f2:	bf00      	nop

0802c3f4 <arm_cmplx_mag_f32>:
 802c3f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c3f8:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802c3fc:	b084      	sub	sp, #16
 802c3fe:	d07f      	beq.n	802c500 <arm_cmplx_mag_f32+0x10c>
 802c400:	2700      	movs	r7, #0
 802c402:	f100 0420 	add.w	r4, r0, #32
 802c406:	f101 0510 	add.w	r5, r1, #16
 802c40a:	4646      	mov	r6, r8
 802c40c:	e05a      	b.n	802c4c4 <arm_cmplx_mag_f32+0xd0>
 802c40e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c412:	eeb4 0a40 	vcmp.f32	s0, s0
 802c416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c41a:	f040 80a4 	bne.w	802c566 <arm_cmplx_mag_f32+0x172>
 802c41e:	ed05 0a04 	vstr	s0, [r5, #-16]
 802c422:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802c426:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802c42a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c42e:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c432:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c436:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c43a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c43e:	f2c0 808f 	blt.w	802c560 <arm_cmplx_mag_f32+0x16c>
 802c442:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c446:	eeb4 0a40 	vcmp.f32	s0, s0
 802c44a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c44e:	f040 80af 	bne.w	802c5b0 <arm_cmplx_mag_f32+0x1bc>
 802c452:	ed05 0a03 	vstr	s0, [r5, #-12]
 802c456:	ed54 7a04 	vldr	s15, [r4, #-16]
 802c45a:	ed14 0a03 	vldr	s0, [r4, #-12]
 802c45e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c462:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c466:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c46a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c46e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c472:	db72      	blt.n	802c55a <arm_cmplx_mag_f32+0x166>
 802c474:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c478:	eeb4 0a40 	vcmp.f32	s0, s0
 802c47c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c480:	f040 808c 	bne.w	802c59c <arm_cmplx_mag_f32+0x1a8>
 802c484:	ed05 0a02 	vstr	s0, [r5, #-8]
 802c488:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c48c:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c490:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c494:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c498:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c49c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c4a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c4a4:	db20      	blt.n	802c4e8 <arm_cmplx_mag_f32+0xf4>
 802c4a6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c4aa:	eeb4 0a40 	vcmp.f32	s0, s0
 802c4ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c4b2:	d169      	bne.n	802c588 <arm_cmplx_mag_f32+0x194>
 802c4b4:	3e01      	subs	r6, #1
 802c4b6:	ed05 0a01 	vstr	s0, [r5, #-4]
 802c4ba:	f104 0420 	add.w	r4, r4, #32
 802c4be:	f105 0510 	add.w	r5, r5, #16
 802c4c2:	d019      	beq.n	802c4f8 <arm_cmplx_mag_f32+0x104>
 802c4c4:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802c4c8:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802c4cc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c4d0:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c4d4:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c4d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c4dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c4e0:	da95      	bge.n	802c40e <arm_cmplx_mag_f32+0x1a>
 802c4e2:	f845 7c10 	str.w	r7, [r5, #-16]
 802c4e6:	e79c      	b.n	802c422 <arm_cmplx_mag_f32+0x2e>
 802c4e8:	3e01      	subs	r6, #1
 802c4ea:	f845 7c04 	str.w	r7, [r5, #-4]
 802c4ee:	f104 0420 	add.w	r4, r4, #32
 802c4f2:	f105 0510 	add.w	r5, r5, #16
 802c4f6:	d1e5      	bne.n	802c4c4 <arm_cmplx_mag_f32+0xd0>
 802c4f8:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802c4fc:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802c500:	f012 0503 	ands.w	r5, r2, #3
 802c504:	d026      	beq.n	802c554 <arm_cmplx_mag_f32+0x160>
 802c506:	2600      	movs	r6, #0
 802c508:	f100 0408 	add.w	r4, r0, #8
 802c50c:	e00c      	b.n	802c528 <arm_cmplx_mag_f32+0x134>
 802c50e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c512:	eeb4 0a40 	vcmp.f32	s0, s0
 802c516:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c51a:	d12e      	bne.n	802c57a <arm_cmplx_mag_f32+0x186>
 802c51c:	3d01      	subs	r5, #1
 802c51e:	ed01 0a01 	vstr	s0, [r1, #-4]
 802c522:	f104 0408 	add.w	r4, r4, #8
 802c526:	d015      	beq.n	802c554 <arm_cmplx_mag_f32+0x160>
 802c528:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c52c:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c530:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c534:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c538:	3104      	adds	r1, #4
 802c53a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c53e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c546:	dae2      	bge.n	802c50e <arm_cmplx_mag_f32+0x11a>
 802c548:	3d01      	subs	r5, #1
 802c54a:	f841 6c04 	str.w	r6, [r1, #-4]
 802c54e:	f104 0408 	add.w	r4, r4, #8
 802c552:	d1e9      	bne.n	802c528 <arm_cmplx_mag_f32+0x134>
 802c554:	b004      	add	sp, #16
 802c556:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c55a:	f845 7c08 	str.w	r7, [r5, #-8]
 802c55e:	e793      	b.n	802c488 <arm_cmplx_mag_f32+0x94>
 802c560:	f845 7c0c 	str.w	r7, [r5, #-12]
 802c564:	e777      	b.n	802c456 <arm_cmplx_mag_f32+0x62>
 802c566:	eeb0 0a67 	vmov.f32	s0, s15
 802c56a:	9203      	str	r2, [sp, #12]
 802c56c:	9102      	str	r1, [sp, #8]
 802c56e:	9001      	str	r0, [sp, #4]
 802c570:	f000 fb38 	bl	802cbe4 <sqrtf>
 802c574:	a801      	add	r0, sp, #4
 802c576:	c807      	ldmia	r0, {r0, r1, r2}
 802c578:	e751      	b.n	802c41e <arm_cmplx_mag_f32+0x2a>
 802c57a:	eeb0 0a67 	vmov.f32	s0, s15
 802c57e:	9101      	str	r1, [sp, #4]
 802c580:	f000 fb30 	bl	802cbe4 <sqrtf>
 802c584:	9901      	ldr	r1, [sp, #4]
 802c586:	e7c9      	b.n	802c51c <arm_cmplx_mag_f32+0x128>
 802c588:	eeb0 0a67 	vmov.f32	s0, s15
 802c58c:	9203      	str	r2, [sp, #12]
 802c58e:	9102      	str	r1, [sp, #8]
 802c590:	9001      	str	r0, [sp, #4]
 802c592:	f000 fb27 	bl	802cbe4 <sqrtf>
 802c596:	a801      	add	r0, sp, #4
 802c598:	c807      	ldmia	r0, {r0, r1, r2}
 802c59a:	e78b      	b.n	802c4b4 <arm_cmplx_mag_f32+0xc0>
 802c59c:	eeb0 0a67 	vmov.f32	s0, s15
 802c5a0:	9203      	str	r2, [sp, #12]
 802c5a2:	9102      	str	r1, [sp, #8]
 802c5a4:	9001      	str	r0, [sp, #4]
 802c5a6:	f000 fb1d 	bl	802cbe4 <sqrtf>
 802c5aa:	a801      	add	r0, sp, #4
 802c5ac:	c807      	ldmia	r0, {r0, r1, r2}
 802c5ae:	e769      	b.n	802c484 <arm_cmplx_mag_f32+0x90>
 802c5b0:	eeb0 0a67 	vmov.f32	s0, s15
 802c5b4:	9203      	str	r2, [sp, #12]
 802c5b6:	9102      	str	r1, [sp, #8]
 802c5b8:	9001      	str	r0, [sp, #4]
 802c5ba:	f000 fb13 	bl	802cbe4 <sqrtf>
 802c5be:	a801      	add	r0, sp, #4
 802c5c0:	c807      	ldmia	r0, {r0, r1, r2}
 802c5c2:	e746      	b.n	802c452 <arm_cmplx_mag_f32+0x5e>

0802c5c4 <arm_radix8_butterfly_f32>:
 802c5c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c5c8:	ed2d 8b10 	vpush	{d8-d15}
 802c5cc:	b09d      	sub	sp, #116	; 0x74
 802c5ce:	461c      	mov	r4, r3
 802c5d0:	ed9f bac8 	vldr	s22, [pc, #800]	; 802c8f4 <arm_radix8_butterfly_f32+0x330>
 802c5d4:	921a      	str	r2, [sp, #104]	; 0x68
 802c5d6:	1d03      	adds	r3, r0, #4
 802c5d8:	4682      	mov	sl, r0
 802c5da:	4689      	mov	r9, r1
 802c5dc:	468b      	mov	fp, r1
 802c5de:	931b      	str	r3, [sp, #108]	; 0x6c
 802c5e0:	9400      	str	r4, [sp, #0]
 802c5e2:	469e      	mov	lr, r3
 802c5e4:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802c5e8:	005a      	lsls	r2, r3, #1
 802c5ea:	18d6      	adds	r6, r2, r3
 802c5ec:	18f5      	adds	r5, r6, r3
 802c5ee:	9203      	str	r2, [sp, #12]
 802c5f0:	195a      	adds	r2, r3, r5
 802c5f2:	18d0      	adds	r0, r2, r3
 802c5f4:	00df      	lsls	r7, r3, #3
 802c5f6:	1819      	adds	r1, r3, r0
 802c5f8:	463c      	mov	r4, r7
 802c5fa:	9701      	str	r7, [sp, #4]
 802c5fc:	4457      	add	r7, sl
 802c5fe:	930c      	str	r3, [sp, #48]	; 0x30
 802c600:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802c604:	011b      	lsls	r3, r3, #4
 802c606:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802c60a:	eb07 0c04 	add.w	ip, r7, r4
 802c60e:	9c00      	ldr	r4, [sp, #0]
 802c610:	9302      	str	r3, [sp, #8]
 802c612:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802c616:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802c61a:	3204      	adds	r2, #4
 802c61c:	3104      	adds	r1, #4
 802c61e:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802c622:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802c626:	f04f 0800 	mov.w	r8, #0
 802c62a:	eddc 7a00 	vldr	s15, [ip]
 802c62e:	edd7 6a00 	vldr	s13, [r7]
 802c632:	edd6 3a00 	vldr	s7, [r6]
 802c636:	ed5e aa01 	vldr	s21, [lr, #-4]
 802c63a:	edd5 4a00 	vldr	s9, [r5]
 802c63e:	ed90 2a00 	vldr	s4, [r0]
 802c642:	ed12 7a01 	vldr	s14, [r2, #-4]
 802c646:	ed51 0a01 	vldr	s1, [r1, #-4]
 802c64a:	ee77 8a82 	vadd.f32	s17, s15, s4
 802c64e:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802c652:	ee76 1a87 	vadd.f32	s3, s13, s14
 802c656:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802c65a:	ee31 6a84 	vadd.f32	s12, s3, s8
 802c65e:	ee33 5a28 	vadd.f32	s10, s6, s17
 802c662:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802c666:	ee75 6a06 	vadd.f32	s13, s10, s12
 802c66a:	ee35 5a46 	vsub.f32	s10, s10, s12
 802c66e:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802c672:	ed85 5a00 	vstr	s10, [r5]
 802c676:	ed96 1a01 	vldr	s2, [r6, #4]
 802c67a:	edd7 5a01 	vldr	s11, [r7, #4]
 802c67e:	ed92 aa00 	vldr	s20, [r2]
 802c682:	ed91 6a00 	vldr	s12, [r1]
 802c686:	ed9e 9a00 	vldr	s18, [lr]
 802c68a:	ed95 5a01 	vldr	s10, [r5, #4]
 802c68e:	eddc 6a01 	vldr	s13, [ip, #4]
 802c692:	edd0 9a01 	vldr	s19, [r0, #4]
 802c696:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802c69a:	ee71 2a46 	vsub.f32	s5, s2, s12
 802c69e:	ee75 3aca 	vsub.f32	s7, s11, s20
 802c6a2:	ee37 0a60 	vsub.f32	s0, s14, s1
 802c6a6:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802c6aa:	ee37 7a20 	vadd.f32	s14, s14, s1
 802c6ae:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802c6b2:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802c6b6:	ee79 3a05 	vadd.f32	s7, s18, s10
 802c6ba:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802c6be:	ee39 5a45 	vsub.f32	s10, s18, s10
 802c6c2:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802c6c6:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802c6ca:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802c6ce:	ee31 6a06 	vadd.f32	s12, s2, s12
 802c6d2:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802c6d6:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802c6da:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802c6de:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802c6e2:	ee33 3a68 	vsub.f32	s6, s6, s17
 802c6e6:	ee36 0a88 	vadd.f32	s0, s13, s16
 802c6ea:	ee75 8a86 	vadd.f32	s17, s11, s12
 802c6ee:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802c6f2:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802c6f6:	ee75 6a62 	vsub.f32	s13, s10, s5
 802c6fa:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802c6fe:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802c702:	ee33 1a89 	vadd.f32	s2, s7, s18
 802c706:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802c70a:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802c70e:	ee75 4a22 	vadd.f32	s9, s10, s5
 802c712:	ee32 5a27 	vadd.f32	s10, s4, s15
 802c716:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c71a:	ee33 8a06 	vadd.f32	s16, s6, s12
 802c71e:	ee75 2a87 	vadd.f32	s5, s11, s14
 802c722:	ee31 9a28 	vadd.f32	s18, s2, s17
 802c726:	ee33 6a46 	vsub.f32	s12, s6, s12
 802c72a:	ee74 0a61 	vsub.f32	s1, s8, s3
 802c72e:	ee33 2a80 	vadd.f32	s4, s7, s0
 802c732:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802c736:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802c73a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802c73e:	ee31 1a68 	vsub.f32	s2, s2, s17
 802c742:	ee34 4a21 	vadd.f32	s8, s8, s3
 802c746:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802c74a:	ee74 4a85 	vadd.f32	s9, s9, s10
 802c74e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802c752:	44d8      	add	r8, fp
 802c754:	45c1      	cmp	r9, r8
 802c756:	ed8e 9a00 	vstr	s18, [lr]
 802c75a:	ed85 1a01 	vstr	s2, [r5, #4]
 802c75e:	449e      	add	lr, r3
 802c760:	ed8c 8a00 	vstr	s16, [ip]
 802c764:	441d      	add	r5, r3
 802c766:	ed80 6a00 	vstr	s12, [r0]
 802c76a:	edcc 0a01 	vstr	s1, [ip, #4]
 802c76e:	ed80 4a01 	vstr	s8, [r0, #4]
 802c772:	449c      	add	ip, r3
 802c774:	ed87 2a00 	vstr	s4, [r7]
 802c778:	4418      	add	r0, r3
 802c77a:	ed41 3a01 	vstr	s7, [r1, #-4]
 802c77e:	ed42 2a01 	vstr	s5, [r2, #-4]
 802c782:	ed86 7a00 	vstr	s14, [r6]
 802c786:	ed87 3a01 	vstr	s6, [r7, #4]
 802c78a:	edc1 4a00 	vstr	s9, [r1]
 802c78e:	441f      	add	r7, r3
 802c790:	edc2 5a00 	vstr	s11, [r2]
 802c794:	4419      	add	r1, r3
 802c796:	edc6 6a01 	vstr	s13, [r6, #4]
 802c79a:	441a      	add	r2, r3
 802c79c:	441e      	add	r6, r3
 802c79e:	f63f af44 	bhi.w	802c62a <arm_radix8_butterfly_f32+0x66>
 802c7a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c7a4:	2907      	cmp	r1, #7
 802c7a6:	4620      	mov	r0, r4
 802c7a8:	f240 81e9 	bls.w	802cb7e <arm_radix8_butterfly_f32+0x5ba>
 802c7ac:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802c7b0:	193e      	adds	r6, r7, r4
 802c7b2:	1935      	adds	r5, r6, r4
 802c7b4:	9c03      	ldr	r4, [sp, #12]
 802c7b6:	9000      	str	r0, [sp, #0]
 802c7b8:	4622      	mov	r2, r4
 802c7ba:	3201      	adds	r2, #1
 802c7bc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802c7c0:	9900      	ldr	r1, [sp, #0]
 802c7c2:	1828      	adds	r0, r5, r0
 802c7c4:	eb00 0e01 	add.w	lr, r0, r1
 802c7c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c7ca:	440a      	add	r2, r1
 802c7cc:	eb04 0c01 	add.w	ip, r4, r1
 802c7d0:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802c7d4:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802c7d8:	9a00      	ldr	r2, [sp, #0]
 802c7da:	940f      	str	r4, [sp, #60]	; 0x3c
 802c7dc:	00ed      	lsls	r5, r5, #3
 802c7de:	9511      	str	r5, [sp, #68]	; 0x44
 802c7e0:	00d5      	lsls	r5, r2, #3
 802c7e2:	950d      	str	r5, [sp, #52]	; 0x34
 802c7e4:	9d01      	ldr	r5, [sp, #4]
 802c7e6:	3508      	adds	r5, #8
 802c7e8:	9516      	str	r5, [sp, #88]	; 0x58
 802c7ea:	9d02      	ldr	r5, [sp, #8]
 802c7ec:	3508      	adds	r5, #8
 802c7ee:	0114      	lsls	r4, r2, #4
 802c7f0:	9517      	str	r5, [sp, #92]	; 0x5c
 802c7f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802c7f4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802c7f6:	940e      	str	r4, [sp, #56]	; 0x38
 802c7f8:	00c0      	lsls	r0, r0, #3
 802c7fa:	9010      	str	r0, [sp, #64]	; 0x40
 802c7fc:	18aa      	adds	r2, r5, r2
 802c7fe:	9207      	str	r2, [sp, #28]
 802c800:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802c802:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802c804:	18aa      	adds	r2, r5, r2
 802c806:	9208      	str	r2, [sp, #32]
 802c808:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802c80a:	18aa      	adds	r2, r5, r2
 802c80c:	9209      	str	r2, [sp, #36]	; 0x24
 802c80e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802c812:	f10e 0204 	add.w	r2, lr, #4
 802c816:	920a      	str	r2, [sp, #40]	; 0x28
 802c818:	00c9      	lsls	r1, r1, #3
 802c81a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802c81c:	310c      	adds	r1, #12
 802c81e:	00f6      	lsls	r6, r6, #3
 802c820:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802c824:	9114      	str	r1, [sp, #80]	; 0x50
 802c826:	18a9      	adds	r1, r5, r2
 802c828:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802c82a:	9612      	str	r6, [sp, #72]	; 0x48
 802c82c:	00ff      	lsls	r7, r7, #3
 802c82e:	19ae      	adds	r6, r5, r6
 802c830:	3008      	adds	r0, #8
 802c832:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802c836:	9606      	str	r6, [sp, #24]
 802c838:	9019      	str	r0, [sp, #100]	; 0x64
 802c83a:	18aa      	adds	r2, r5, r2
 802c83c:	0164      	lsls	r4, r4, #5
 802c83e:	19ee      	adds	r6, r5, r7
 802c840:	f10c 000c 	add.w	r0, ip, #12
 802c844:	9713      	str	r7, [sp, #76]	; 0x4c
 802c846:	9604      	str	r6, [sp, #16]
 802c848:	9015      	str	r0, [sp, #84]	; 0x54
 802c84a:	9103      	str	r1, [sp, #12]
 802c84c:	9205      	str	r2, [sp, #20]
 802c84e:	f104 0208 	add.w	r2, r4, #8
 802c852:	9218      	str	r2, [sp, #96]	; 0x60
 802c854:	f04f 0801 	mov.w	r8, #1
 802c858:	2200      	movs	r2, #0
 802c85a:	f102 0108 	add.w	r1, r2, #8
 802c85e:	460f      	mov	r7, r1
 802c860:	910b      	str	r1, [sp, #44]	; 0x2c
 802c862:	9918      	ldr	r1, [sp, #96]	; 0x60
 802c864:	188e      	adds	r6, r1, r2
 802c866:	9916      	ldr	r1, [sp, #88]	; 0x58
 802c868:	188d      	adds	r5, r1, r2
 802c86a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802c86c:	188c      	adds	r4, r1, r2
 802c86e:	9919      	ldr	r1, [sp, #100]	; 0x64
 802c870:	1888      	adds	r0, r1, r2
 802c872:	9914      	ldr	r1, [sp, #80]	; 0x50
 802c874:	eb01 0c02 	add.w	ip, r1, r2
 802c878:	9915      	ldr	r1, [sp, #84]	; 0x54
 802c87a:	440a      	add	r2, r1
 802c87c:	9903      	ldr	r1, [sp, #12]
 802c87e:	edd1 fa00 	vldr	s31, [r1]
 802c882:	9905      	ldr	r1, [sp, #20]
 802c884:	ed91 fa00 	vldr	s30, [r1]
 802c888:	9904      	ldr	r1, [sp, #16]
 802c88a:	edd1 ea00 	vldr	s29, [r1]
 802c88e:	9906      	ldr	r1, [sp, #24]
 802c890:	ed91 ea00 	vldr	s28, [r1]
 802c894:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c896:	edd1 da00 	vldr	s27, [r1]
 802c89a:	9908      	ldr	r1, [sp, #32]
 802c89c:	ed91 da00 	vldr	s26, [r1]
 802c8a0:	9907      	ldr	r1, [sp, #28]
 802c8a2:	edd1 ca00 	vldr	s25, [r1]
 802c8a6:	9903      	ldr	r1, [sp, #12]
 802c8a8:	ed91 ca01 	vldr	s24, [r1, #4]
 802c8ac:	9905      	ldr	r1, [sp, #20]
 802c8ae:	edd1 ba01 	vldr	s23, [r1, #4]
 802c8b2:	9904      	ldr	r1, [sp, #16]
 802c8b4:	edd1 aa01 	vldr	s21, [r1, #4]
 802c8b8:	9906      	ldr	r1, [sp, #24]
 802c8ba:	ed91 aa01 	vldr	s20, [r1, #4]
 802c8be:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c8c0:	edd1 7a01 	vldr	s15, [r1, #4]
 802c8c4:	9908      	ldr	r1, [sp, #32]
 802c8c6:	edcd 7a00 	vstr	s15, [sp]
 802c8ca:	edd1 7a01 	vldr	s15, [r1, #4]
 802c8ce:	9907      	ldr	r1, [sp, #28]
 802c8d0:	edcd 7a01 	vstr	s15, [sp, #4]
 802c8d4:	edd1 7a01 	vldr	s15, [r1, #4]
 802c8d8:	eb0a 0e07 	add.w	lr, sl, r7
 802c8dc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802c8de:	edcd 7a02 	vstr	s15, [sp, #8]
 802c8e2:	eb0c 010a 	add.w	r1, ip, sl
 802c8e6:	4456      	add	r6, sl
 802c8e8:	4455      	add	r5, sl
 802c8ea:	4454      	add	r4, sl
 802c8ec:	4450      	add	r0, sl
 802c8ee:	4452      	add	r2, sl
 802c8f0:	46c4      	mov	ip, r8
 802c8f2:	e001      	b.n	802c8f8 <arm_radix8_butterfly_f32+0x334>
 802c8f4:	3f3504f3 	.word	0x3f3504f3
 802c8f8:	ed96 5a00 	vldr	s10, [r6]
 802c8fc:	ed52 9a01 	vldr	s19, [r2, #-4]
 802c900:	ed11 6a01 	vldr	s12, [r1, #-4]
 802c904:	edd0 7a00 	vldr	s15, [r0]
 802c908:	ed17 7a01 	vldr	s14, [r7, #-4]
 802c90c:	edde 3a00 	vldr	s7, [lr]
 802c910:	ed94 3a00 	vldr	s6, [r4]
 802c914:	ed95 2a00 	vldr	s4, [r5]
 802c918:	ed9e 0a01 	vldr	s0, [lr, #4]
 802c91c:	ee33 8a85 	vadd.f32	s16, s7, s10
 802c920:	ee32 1a06 	vadd.f32	s2, s4, s12
 802c924:	ee33 4a29 	vadd.f32	s8, s6, s19
 802c928:	ee77 4a87 	vadd.f32	s9, s15, s14
 802c92c:	ee78 1a04 	vadd.f32	s3, s16, s8
 802c930:	ee71 6a24 	vadd.f32	s13, s2, s9
 802c934:	ee32 2a46 	vsub.f32	s4, s4, s12
 802c938:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802c93c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c940:	ed8e 6a00 	vstr	s12, [lr]
 802c944:	edd0 8a01 	vldr	s17, [r0, #4]
 802c948:	ed95 9a01 	vldr	s18, [r5, #4]
 802c94c:	edd1 2a00 	vldr	s5, [r1]
 802c950:	ed97 7a00 	vldr	s14, [r7]
 802c954:	edd4 0a01 	vldr	s1, [r4, #4]
 802c958:	ed96 6a01 	vldr	s12, [r6, #4]
 802c95c:	edd2 5a00 	vldr	s11, [r2]
 802c960:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802c964:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c968:	ee39 5a62 	vsub.f32	s10, s18, s5
 802c96c:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802c970:	ee38 4a44 	vsub.f32	s8, s16, s8
 802c974:	ee38 7a87 	vadd.f32	s14, s17, s14
 802c978:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802c97c:	ee79 2a22 	vadd.f32	s5, s18, s5
 802c980:	ee75 8a69 	vsub.f32	s17, s10, s19
 802c984:	ee32 9a27 	vadd.f32	s18, s4, s15
 802c988:	ee35 5a29 	vadd.f32	s10, s10, s19
 802c98c:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c990:	ee30 2a06 	vadd.f32	s4, s0, s12
 802c994:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802c998:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802c99c:	ee32 9a08 	vadd.f32	s18, s4, s16
 802c9a0:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802c9a4:	ee32 2a48 	vsub.f32	s4, s4, s16
 802c9a8:	ee71 4a64 	vsub.f32	s9, s2, s9
 802c9ac:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802c9b0:	ee32 1a87 	vadd.f32	s2, s5, s14
 802c9b4:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802c9b8:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802c9bc:	ee30 6a46 	vsub.f32	s12, s0, s12
 802c9c0:	ee73 0a29 	vadd.f32	s1, s6, s19
 802c9c4:	ee36 0a28 	vadd.f32	s0, s12, s17
 802c9c8:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c9cc:	ee32 7a64 	vsub.f32	s14, s4, s9
 802c9d0:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802c9d4:	ee36 6a68 	vsub.f32	s12, s12, s17
 802c9d8:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802c9dc:	ee75 8a85 	vadd.f32	s17, s11, s10
 802c9e0:	ee74 3a22 	vadd.f32	s7, s8, s5
 802c9e4:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802c9e8:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802c9ec:	ee79 1a41 	vsub.f32	s3, s18, s2
 802c9f0:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802c9f4:	ee76 5a43 	vsub.f32	s11, s12, s6
 802c9f8:	ee74 2a62 	vsub.f32	s5, s8, s5
 802c9fc:	ee72 4a24 	vadd.f32	s9, s4, s9
 802ca00:	ee30 4a60 	vsub.f32	s8, s0, s1
 802ca04:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802ca08:	ee30 0a20 	vadd.f32	s0, s0, s1
 802ca0c:	ee77 9a85 	vadd.f32	s19, s15, s10
 802ca10:	ee36 6a03 	vadd.f32	s12, s12, s6
 802ca14:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802ca18:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802ca1c:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802ca20:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802ca24:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802ca28:	ee39 1a01 	vadd.f32	s2, s18, s2
 802ca2c:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802ca30:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802ca34:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802ca38:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802ca3c:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802ca40:	ee35 3a03 	vadd.f32	s6, s10, s6
 802ca44:	ee72 6a66 	vsub.f32	s13, s4, s13
 802ca48:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802ca4c:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802ca50:	ed9d 4a02 	vldr	s8, [sp, #8]
 802ca54:	ed8e 1a01 	vstr	s2, [lr, #4]
 802ca58:	ee77 3a63 	vsub.f32	s7, s14, s7
 802ca5c:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802ca60:	ed9d 7a01 	vldr	s14, [sp, #4]
 802ca64:	ed86 3a00 	vstr	s6, [r6]
 802ca68:	ee30 9a89 	vadd.f32	s18, s1, s18
 802ca6c:	ee32 2a05 	vadd.f32	s4, s4, s10
 802ca70:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802ca74:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802ca78:	ee67 2a22 	vmul.f32	s5, s14, s5
 802ca7c:	ee64 1a00 	vmul.f32	s3, s8, s0
 802ca80:	ee27 7a24 	vmul.f32	s14, s14, s9
 802ca84:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802ca88:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802ca8c:	ee64 8a28 	vmul.f32	s17, s8, s17
 802ca90:	ed9d 4a00 	vldr	s8, [sp]
 802ca94:	edc6 6a01 	vstr	s13, [r6, #4]
 802ca98:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802ca9c:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802caa0:	ee64 9a29 	vmul.f32	s19, s8, s19
 802caa4:	ee24 4a25 	vmul.f32	s8, s8, s11
 802caa8:	ee30 7a87 	vadd.f32	s14, s1, s14
 802caac:	ee74 4a84 	vadd.f32	s9, s9, s8
 802cab0:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802cab4:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802cab8:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802cabc:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802cac0:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802cac4:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802cac8:	ee75 1a21 	vadd.f32	s3, s10, s3
 802cacc:	ee30 0a68 	vsub.f32	s0, s0, s17
 802cad0:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802cad4:	ee70 0a84 	vadd.f32	s1, s1, s8
 802cad8:	ee36 6a67 	vsub.f32	s12, s12, s15
 802cadc:	44dc      	add	ip, fp
 802cade:	45e1      	cmp	r9, ip
 802cae0:	ed84 9a00 	vstr	s18, [r4]
 802cae4:	edc4 3a01 	vstr	s7, [r4, #4]
 802cae8:	449e      	add	lr, r3
 802caea:	ed02 7a01 	vstr	s14, [r2, #-4]
 802caee:	edc2 2a00 	vstr	s5, [r2]
 802caf2:	441e      	add	r6, r3
 802caf4:	ed85 2a00 	vstr	s4, [r5]
 802caf8:	ed85 8a01 	vstr	s16, [r5, #4]
 802cafc:	441c      	add	r4, r3
 802cafe:	ed47 1a01 	vstr	s3, [r7, #-4]
 802cb02:	ed87 0a00 	vstr	s0, [r7]
 802cb06:	441a      	add	r2, r3
 802cb08:	ed41 4a01 	vstr	s9, [r1, #-4]
 802cb0c:	edc1 9a00 	vstr	s19, [r1]
 802cb10:	441d      	add	r5, r3
 802cb12:	edc0 0a00 	vstr	s1, [r0]
 802cb16:	441f      	add	r7, r3
 802cb18:	ed80 6a01 	vstr	s12, [r0, #4]
 802cb1c:	4419      	add	r1, r3
 802cb1e:	4418      	add	r0, r3
 802cb20:	f63f aeea 	bhi.w	802c8f8 <arm_radix8_butterfly_f32+0x334>
 802cb24:	9a03      	ldr	r2, [sp, #12]
 802cb26:	990d      	ldr	r1, [sp, #52]	; 0x34
 802cb28:	440a      	add	r2, r1
 802cb2a:	9203      	str	r2, [sp, #12]
 802cb2c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802cb2e:	9a05      	ldr	r2, [sp, #20]
 802cb30:	440a      	add	r2, r1
 802cb32:	9205      	str	r2, [sp, #20]
 802cb34:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802cb36:	9a04      	ldr	r2, [sp, #16]
 802cb38:	440a      	add	r2, r1
 802cb3a:	9204      	str	r2, [sp, #16]
 802cb3c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802cb3e:	9a06      	ldr	r2, [sp, #24]
 802cb40:	440a      	add	r2, r1
 802cb42:	9206      	str	r2, [sp, #24]
 802cb44:	9911      	ldr	r1, [sp, #68]	; 0x44
 802cb46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802cb48:	440a      	add	r2, r1
 802cb4a:	9209      	str	r2, [sp, #36]	; 0x24
 802cb4c:	9910      	ldr	r1, [sp, #64]	; 0x40
 802cb4e:	9a08      	ldr	r2, [sp, #32]
 802cb50:	440a      	add	r2, r1
 802cb52:	9208      	str	r2, [sp, #32]
 802cb54:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802cb56:	9a07      	ldr	r2, [sp, #28]
 802cb58:	440a      	add	r2, r1
 802cb5a:	9207      	str	r2, [sp, #28]
 802cb5c:	990c      	ldr	r1, [sp, #48]	; 0x30
 802cb5e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802cb60:	f108 0801 	add.w	r8, r8, #1
 802cb64:	3208      	adds	r2, #8
 802cb66:	4588      	cmp	r8, r1
 802cb68:	920a      	str	r2, [sp, #40]	; 0x28
 802cb6a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802cb6c:	f47f ae75 	bne.w	802c85a <arm_radix8_butterfly_f32+0x296>
 802cb70:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802cb74:	9300      	str	r3, [sp, #0]
 802cb76:	46c3      	mov	fp, r8
 802cb78:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802cb7c:	e532      	b.n	802c5e4 <arm_radix8_butterfly_f32+0x20>
 802cb7e:	b01d      	add	sp, #116	; 0x74
 802cb80:	ecbd 8b10 	vpop	{d8-d15}
 802cb84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802cb88 <__aeabi_atexit>:
 802cb88:	460b      	mov	r3, r1
 802cb8a:	4601      	mov	r1, r0
 802cb8c:	4618      	mov	r0, r3
 802cb8e:	f000 bfc7 	b.w	802db20 <__cxa_atexit>

0802cb92 <_ZdlPvj>:
 802cb92:	f000 b812 	b.w	802cbba <_ZdlPv>

0802cb96 <__cxa_guard_acquire>:
 802cb96:	6803      	ldr	r3, [r0, #0]
 802cb98:	07db      	lsls	r3, r3, #31
 802cb9a:	d406      	bmi.n	802cbaa <__cxa_guard_acquire+0x14>
 802cb9c:	7843      	ldrb	r3, [r0, #1]
 802cb9e:	b103      	cbz	r3, 802cba2 <__cxa_guard_acquire+0xc>
 802cba0:	deff      	udf	#255	; 0xff
 802cba2:	2301      	movs	r3, #1
 802cba4:	7043      	strb	r3, [r0, #1]
 802cba6:	4618      	mov	r0, r3
 802cba8:	4770      	bx	lr
 802cbaa:	2000      	movs	r0, #0
 802cbac:	4770      	bx	lr

0802cbae <__cxa_guard_release>:
 802cbae:	2301      	movs	r3, #1
 802cbb0:	6003      	str	r3, [r0, #0]
 802cbb2:	4770      	bx	lr

0802cbb4 <__cxa_pure_virtual>:
 802cbb4:	b508      	push	{r3, lr}
 802cbb6:	f000 f80f 	bl	802cbd8 <_ZSt9terminatev>

0802cbba <_ZdlPv>:
 802cbba:	f000 befd 	b.w	802d9b8 <free>

0802cbbe <_ZN10__cxxabiv111__terminateEPFvvE>:
 802cbbe:	b508      	push	{r3, lr}
 802cbc0:	4780      	blx	r0
 802cbc2:	f000 fec5 	bl	802d950 <abort>
	...

0802cbc8 <_ZSt13get_terminatev>:
 802cbc8:	4b02      	ldr	r3, [pc, #8]	; (802cbd4 <_ZSt13get_terminatev+0xc>)
 802cbca:	6818      	ldr	r0, [r3, #0]
 802cbcc:	f3bf 8f5b 	dmb	ish
 802cbd0:	4770      	bx	lr
 802cbd2:	bf00      	nop
 802cbd4:	20000108 	.word	0x20000108

0802cbd8 <_ZSt9terminatev>:
 802cbd8:	b508      	push	{r3, lr}
 802cbda:	f7ff fff5 	bl	802cbc8 <_ZSt13get_terminatev>
 802cbde:	f7ff ffee 	bl	802cbbe <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802cbe4 <sqrtf>:
 802cbe4:	b508      	push	{r3, lr}
 802cbe6:	ed2d 8b02 	vpush	{d8}
 802cbea:	eeb0 8a40 	vmov.f32	s16, s0
 802cbee:	f000 f97d 	bl	802ceec <__ieee754_sqrtf>
 802cbf2:	eeb4 8a48 	vcmp.f32	s16, s16
 802cbf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cbfa:	d60c      	bvs.n	802cc16 <sqrtf+0x32>
 802cbfc:	eddf 8a07 	vldr	s17, [pc, #28]	; 802cc1c <sqrtf+0x38>
 802cc00:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802cc04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cc08:	d505      	bpl.n	802cc16 <sqrtf+0x32>
 802cc0a:	f001 f9a7 	bl	802df5c <__errno>
 802cc0e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802cc12:	2321      	movs	r3, #33	; 0x21
 802cc14:	6003      	str	r3, [r0, #0]
 802cc16:	ecbd 8b02 	vpop	{d8}
 802cc1a:	bd08      	pop	{r3, pc}
 802cc1c:	00000000 	.word	0x00000000

0802cc20 <atanf>:
 802cc20:	b538      	push	{r3, r4, r5, lr}
 802cc22:	ee10 5a10 	vmov	r5, s0
 802cc26:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 802cc2a:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 802cc2e:	eef0 7a40 	vmov.f32	s15, s0
 802cc32:	db10      	blt.n	802cc56 <atanf+0x36>
 802cc34:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 802cc38:	dd04      	ble.n	802cc44 <atanf+0x24>
 802cc3a:	ee70 7a00 	vadd.f32	s15, s0, s0
 802cc3e:	eeb0 0a67 	vmov.f32	s0, s15
 802cc42:	bd38      	pop	{r3, r4, r5, pc}
 802cc44:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802cd7c <atanf+0x15c>
 802cc48:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802cd80 <atanf+0x160>
 802cc4c:	2d00      	cmp	r5, #0
 802cc4e:	bfd8      	it	le
 802cc50:	eef0 7a47 	vmovle.f32	s15, s14
 802cc54:	e7f3      	b.n	802cc3e <atanf+0x1e>
 802cc56:	4b4b      	ldr	r3, [pc, #300]	; (802cd84 <atanf+0x164>)
 802cc58:	429c      	cmp	r4, r3
 802cc5a:	dc10      	bgt.n	802cc7e <atanf+0x5e>
 802cc5c:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 802cc60:	da0a      	bge.n	802cc78 <atanf+0x58>
 802cc62:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802cd88 <atanf+0x168>
 802cc66:	ee30 7a07 	vadd.f32	s14, s0, s14
 802cc6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802cc6e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802cc72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cc76:	dce2      	bgt.n	802cc3e <atanf+0x1e>
 802cc78:	f04f 33ff 	mov.w	r3, #4294967295
 802cc7c:	e013      	b.n	802cca6 <atanf+0x86>
 802cc7e:	f000 f8e7 	bl	802ce50 <fabsf>
 802cc82:	4b42      	ldr	r3, [pc, #264]	; (802cd8c <atanf+0x16c>)
 802cc84:	429c      	cmp	r4, r3
 802cc86:	dc4f      	bgt.n	802cd28 <atanf+0x108>
 802cc88:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 802cc8c:	429c      	cmp	r4, r3
 802cc8e:	dc41      	bgt.n	802cd14 <atanf+0xf4>
 802cc90:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 802cc94:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cc98:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cc9c:	2300      	movs	r3, #0
 802cc9e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cca2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cca6:	1c5a      	adds	r2, r3, #1
 802cca8:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802ccac:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802cd90 <atanf+0x170>
 802ccb0:	eddf 5a38 	vldr	s11, [pc, #224]	; 802cd94 <atanf+0x174>
 802ccb4:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802cd98 <atanf+0x178>
 802ccb8:	ee66 6a06 	vmul.f32	s13, s12, s12
 802ccbc:	eee6 5a87 	vfma.f32	s11, s13, s14
 802ccc0:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802cd9c <atanf+0x17c>
 802ccc4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802ccc8:	eddf 5a35 	vldr	s11, [pc, #212]	; 802cda0 <atanf+0x180>
 802cccc:	eee7 5a26 	vfma.f32	s11, s14, s13
 802ccd0:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802cda4 <atanf+0x184>
 802ccd4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802ccd8:	eddf 5a33 	vldr	s11, [pc, #204]	; 802cda8 <atanf+0x188>
 802ccdc:	eee7 5a26 	vfma.f32	s11, s14, s13
 802cce0:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802cdac <atanf+0x18c>
 802cce4:	eea6 5a87 	vfma.f32	s10, s13, s14
 802cce8:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802cdb0 <atanf+0x190>
 802ccec:	eea5 7a26 	vfma.f32	s14, s10, s13
 802ccf0:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802cdb4 <atanf+0x194>
 802ccf4:	eea7 5a26 	vfma.f32	s10, s14, s13
 802ccf8:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802cdb8 <atanf+0x198>
 802ccfc:	eea5 7a26 	vfma.f32	s14, s10, s13
 802cd00:	ee27 7a26 	vmul.f32	s14, s14, s13
 802cd04:	eea5 7a86 	vfma.f32	s14, s11, s12
 802cd08:	ee27 7a87 	vmul.f32	s14, s15, s14
 802cd0c:	d121      	bne.n	802cd52 <atanf+0x132>
 802cd0e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cd12:	e794      	b.n	802cc3e <atanf+0x1e>
 802cd14:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802cd18:	ee30 7a67 	vsub.f32	s14, s0, s15
 802cd1c:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cd20:	2301      	movs	r3, #1
 802cd22:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cd26:	e7be      	b.n	802cca6 <atanf+0x86>
 802cd28:	4b24      	ldr	r3, [pc, #144]	; (802cdbc <atanf+0x19c>)
 802cd2a:	429c      	cmp	r4, r3
 802cd2c:	dc0b      	bgt.n	802cd46 <atanf+0x126>
 802cd2e:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802cd32:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802cd36:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cd3a:	2302      	movs	r3, #2
 802cd3c:	ee70 6a67 	vsub.f32	s13, s0, s15
 802cd40:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802cd44:	e7af      	b.n	802cca6 <atanf+0x86>
 802cd46:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cd4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cd4e:	2303      	movs	r3, #3
 802cd50:	e7a9      	b.n	802cca6 <atanf+0x86>
 802cd52:	4a1b      	ldr	r2, [pc, #108]	; (802cdc0 <atanf+0x1a0>)
 802cd54:	491b      	ldr	r1, [pc, #108]	; (802cdc4 <atanf+0x1a4>)
 802cd56:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802cd5a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802cd5e:	edd3 6a00 	vldr	s13, [r3]
 802cd62:	ee37 7a66 	vsub.f32	s14, s14, s13
 802cd66:	2d00      	cmp	r5, #0
 802cd68:	ee37 7a67 	vsub.f32	s14, s14, s15
 802cd6c:	edd2 7a00 	vldr	s15, [r2]
 802cd70:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cd74:	bfb8      	it	lt
 802cd76:	eef1 7a67 	vneglt.f32	s15, s15
 802cd7a:	e760      	b.n	802cc3e <atanf+0x1e>
 802cd7c:	3fc90fdb 	.word	0x3fc90fdb
 802cd80:	bfc90fdb 	.word	0xbfc90fdb
 802cd84:	3edfffff 	.word	0x3edfffff
 802cd88:	7149f2ca 	.word	0x7149f2ca
 802cd8c:	3f97ffff 	.word	0x3f97ffff
 802cd90:	3c8569d7 	.word	0x3c8569d7
 802cd94:	3d4bda59 	.word	0x3d4bda59
 802cd98:	bd6ef16b 	.word	0xbd6ef16b
 802cd9c:	3d886b35 	.word	0x3d886b35
 802cda0:	3dba2e6e 	.word	0x3dba2e6e
 802cda4:	3e124925 	.word	0x3e124925
 802cda8:	3eaaaaab 	.word	0x3eaaaaab
 802cdac:	bd15a221 	.word	0xbd15a221
 802cdb0:	bd9d8795 	.word	0xbd9d8795
 802cdb4:	bde38e38 	.word	0xbde38e38
 802cdb8:	be4ccccd 	.word	0xbe4ccccd
 802cdbc:	401bffff 	.word	0x401bffff
 802cdc0:	08045804 	.word	0x08045804
 802cdc4:	08045814 	.word	0x08045814

0802cdc8 <cosf>:
 802cdc8:	ee10 3a10 	vmov	r3, s0
 802cdcc:	b507      	push	{r0, r1, r2, lr}
 802cdce:	4a1e      	ldr	r2, [pc, #120]	; (802ce48 <cosf+0x80>)
 802cdd0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cdd4:	4293      	cmp	r3, r2
 802cdd6:	dc06      	bgt.n	802cde6 <cosf+0x1e>
 802cdd8:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802ce4c <cosf+0x84>
 802cddc:	b003      	add	sp, #12
 802cdde:	f85d eb04 	ldr.w	lr, [sp], #4
 802cde2:	f000 b90b 	b.w	802cffc <__kernel_cosf>
 802cde6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802cdea:	db04      	blt.n	802cdf6 <cosf+0x2e>
 802cdec:	ee30 0a40 	vsub.f32	s0, s0, s0
 802cdf0:	b003      	add	sp, #12
 802cdf2:	f85d fb04 	ldr.w	pc, [sp], #4
 802cdf6:	4668      	mov	r0, sp
 802cdf8:	f000 f9a6 	bl	802d148 <__ieee754_rem_pio2f>
 802cdfc:	f000 0003 	and.w	r0, r0, #3
 802ce00:	2801      	cmp	r0, #1
 802ce02:	d009      	beq.n	802ce18 <cosf+0x50>
 802ce04:	2802      	cmp	r0, #2
 802ce06:	d010      	beq.n	802ce2a <cosf+0x62>
 802ce08:	b9b0      	cbnz	r0, 802ce38 <cosf+0x70>
 802ce0a:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce0e:	ed9d 0a00 	vldr	s0, [sp]
 802ce12:	f000 f8f3 	bl	802cffc <__kernel_cosf>
 802ce16:	e7eb      	b.n	802cdf0 <cosf+0x28>
 802ce18:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce1c:	ed9d 0a00 	vldr	s0, [sp]
 802ce20:	f000 f94a 	bl	802d0b8 <__kernel_sinf>
 802ce24:	eeb1 0a40 	vneg.f32	s0, s0
 802ce28:	e7e2      	b.n	802cdf0 <cosf+0x28>
 802ce2a:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce2e:	ed9d 0a00 	vldr	s0, [sp]
 802ce32:	f000 f8e3 	bl	802cffc <__kernel_cosf>
 802ce36:	e7f5      	b.n	802ce24 <cosf+0x5c>
 802ce38:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce3c:	ed9d 0a00 	vldr	s0, [sp]
 802ce40:	2001      	movs	r0, #1
 802ce42:	f000 f939 	bl	802d0b8 <__kernel_sinf>
 802ce46:	e7d3      	b.n	802cdf0 <cosf+0x28>
 802ce48:	3f490fd8 	.word	0x3f490fd8
 802ce4c:	00000000 	.word	0x00000000

0802ce50 <fabsf>:
 802ce50:	ee10 3a10 	vmov	r3, s0
 802ce54:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ce58:	ee00 3a10 	vmov	s0, r3
 802ce5c:	4770      	bx	lr
	...

0802ce60 <sinf>:
 802ce60:	ee10 3a10 	vmov	r3, s0
 802ce64:	b507      	push	{r0, r1, r2, lr}
 802ce66:	4a1f      	ldr	r2, [pc, #124]	; (802cee4 <sinf+0x84>)
 802ce68:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ce6c:	4293      	cmp	r3, r2
 802ce6e:	dc07      	bgt.n	802ce80 <sinf+0x20>
 802ce70:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802cee8 <sinf+0x88>
 802ce74:	2000      	movs	r0, #0
 802ce76:	b003      	add	sp, #12
 802ce78:	f85d eb04 	ldr.w	lr, [sp], #4
 802ce7c:	f000 b91c 	b.w	802d0b8 <__kernel_sinf>
 802ce80:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802ce84:	db04      	blt.n	802ce90 <sinf+0x30>
 802ce86:	ee30 0a40 	vsub.f32	s0, s0, s0
 802ce8a:	b003      	add	sp, #12
 802ce8c:	f85d fb04 	ldr.w	pc, [sp], #4
 802ce90:	4668      	mov	r0, sp
 802ce92:	f000 f959 	bl	802d148 <__ieee754_rem_pio2f>
 802ce96:	f000 0003 	and.w	r0, r0, #3
 802ce9a:	2801      	cmp	r0, #1
 802ce9c:	d00a      	beq.n	802ceb4 <sinf+0x54>
 802ce9e:	2802      	cmp	r0, #2
 802cea0:	d00f      	beq.n	802cec2 <sinf+0x62>
 802cea2:	b9c0      	cbnz	r0, 802ced6 <sinf+0x76>
 802cea4:	eddd 0a01 	vldr	s1, [sp, #4]
 802cea8:	ed9d 0a00 	vldr	s0, [sp]
 802ceac:	2001      	movs	r0, #1
 802ceae:	f000 f903 	bl	802d0b8 <__kernel_sinf>
 802ceb2:	e7ea      	b.n	802ce8a <sinf+0x2a>
 802ceb4:	eddd 0a01 	vldr	s1, [sp, #4]
 802ceb8:	ed9d 0a00 	vldr	s0, [sp]
 802cebc:	f000 f89e 	bl	802cffc <__kernel_cosf>
 802cec0:	e7e3      	b.n	802ce8a <sinf+0x2a>
 802cec2:	eddd 0a01 	vldr	s1, [sp, #4]
 802cec6:	ed9d 0a00 	vldr	s0, [sp]
 802ceca:	2001      	movs	r0, #1
 802cecc:	f000 f8f4 	bl	802d0b8 <__kernel_sinf>
 802ced0:	eeb1 0a40 	vneg.f32	s0, s0
 802ced4:	e7d9      	b.n	802ce8a <sinf+0x2a>
 802ced6:	eddd 0a01 	vldr	s1, [sp, #4]
 802ceda:	ed9d 0a00 	vldr	s0, [sp]
 802cede:	f000 f88d 	bl	802cffc <__kernel_cosf>
 802cee2:	e7f5      	b.n	802ced0 <sinf+0x70>
 802cee4:	3f490fd8 	.word	0x3f490fd8
 802cee8:	00000000 	.word	0x00000000

0802ceec <__ieee754_sqrtf>:
 802ceec:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802cef0:	4770      	bx	lr
	...

0802cef4 <ceilf>:
 802cef4:	ee10 3a10 	vmov	r3, s0
 802cef8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802cefc:	3a7f      	subs	r2, #127	; 0x7f
 802cefe:	2a16      	cmp	r2, #22
 802cf00:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802cf04:	dc2a      	bgt.n	802cf5c <ceilf+0x68>
 802cf06:	2a00      	cmp	r2, #0
 802cf08:	da11      	bge.n	802cf2e <ceilf+0x3a>
 802cf0a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802cf70 <ceilf+0x7c>
 802cf0e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf12:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cf16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf1a:	dd05      	ble.n	802cf28 <ceilf+0x34>
 802cf1c:	2b00      	cmp	r3, #0
 802cf1e:	db23      	blt.n	802cf68 <ceilf+0x74>
 802cf20:	2900      	cmp	r1, #0
 802cf22:	bf18      	it	ne
 802cf24:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802cf28:	ee00 3a10 	vmov	s0, r3
 802cf2c:	4770      	bx	lr
 802cf2e:	4911      	ldr	r1, [pc, #68]	; (802cf74 <ceilf+0x80>)
 802cf30:	4111      	asrs	r1, r2
 802cf32:	420b      	tst	r3, r1
 802cf34:	d0fa      	beq.n	802cf2c <ceilf+0x38>
 802cf36:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802cf70 <ceilf+0x7c>
 802cf3a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf3e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cf42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf46:	ddef      	ble.n	802cf28 <ceilf+0x34>
 802cf48:	2b00      	cmp	r3, #0
 802cf4a:	bfc2      	ittt	gt
 802cf4c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802cf50:	fa40 f202 	asrgt.w	r2, r0, r2
 802cf54:	189b      	addgt	r3, r3, r2
 802cf56:	ea23 0301 	bic.w	r3, r3, r1
 802cf5a:	e7e5      	b.n	802cf28 <ceilf+0x34>
 802cf5c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802cf60:	d3e4      	bcc.n	802cf2c <ceilf+0x38>
 802cf62:	ee30 0a00 	vadd.f32	s0, s0, s0
 802cf66:	4770      	bx	lr
 802cf68:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802cf6c:	e7dc      	b.n	802cf28 <ceilf+0x34>
 802cf6e:	bf00      	nop
 802cf70:	7149f2ca 	.word	0x7149f2ca
 802cf74:	007fffff 	.word	0x007fffff

0802cf78 <floorf>:
 802cf78:	ee10 3a10 	vmov	r3, s0
 802cf7c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802cf80:	3a7f      	subs	r2, #127	; 0x7f
 802cf82:	2a16      	cmp	r2, #22
 802cf84:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802cf88:	dc2a      	bgt.n	802cfe0 <floorf+0x68>
 802cf8a:	2a00      	cmp	r2, #0
 802cf8c:	da11      	bge.n	802cfb2 <floorf+0x3a>
 802cf8e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802cff0 <floorf+0x78>
 802cf92:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf96:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cf9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf9e:	dd05      	ble.n	802cfac <floorf+0x34>
 802cfa0:	2b00      	cmp	r3, #0
 802cfa2:	da23      	bge.n	802cfec <floorf+0x74>
 802cfa4:	4a13      	ldr	r2, [pc, #76]	; (802cff4 <floorf+0x7c>)
 802cfa6:	2900      	cmp	r1, #0
 802cfa8:	bf18      	it	ne
 802cfaa:	4613      	movne	r3, r2
 802cfac:	ee00 3a10 	vmov	s0, r3
 802cfb0:	4770      	bx	lr
 802cfb2:	4911      	ldr	r1, [pc, #68]	; (802cff8 <floorf+0x80>)
 802cfb4:	4111      	asrs	r1, r2
 802cfb6:	420b      	tst	r3, r1
 802cfb8:	d0fa      	beq.n	802cfb0 <floorf+0x38>
 802cfba:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802cff0 <floorf+0x78>
 802cfbe:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cfc2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cfc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cfca:	ddef      	ble.n	802cfac <floorf+0x34>
 802cfcc:	2b00      	cmp	r3, #0
 802cfce:	bfbe      	ittt	lt
 802cfd0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802cfd4:	fa40 f202 	asrlt.w	r2, r0, r2
 802cfd8:	189b      	addlt	r3, r3, r2
 802cfda:	ea23 0301 	bic.w	r3, r3, r1
 802cfde:	e7e5      	b.n	802cfac <floorf+0x34>
 802cfe0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802cfe4:	d3e4      	bcc.n	802cfb0 <floorf+0x38>
 802cfe6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802cfea:	4770      	bx	lr
 802cfec:	2300      	movs	r3, #0
 802cfee:	e7dd      	b.n	802cfac <floorf+0x34>
 802cff0:	7149f2ca 	.word	0x7149f2ca
 802cff4:	bf800000 	.word	0xbf800000
 802cff8:	007fffff 	.word	0x007fffff

0802cffc <__kernel_cosf>:
 802cffc:	ee10 3a10 	vmov	r3, s0
 802d000:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d004:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802d008:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802d00c:	da05      	bge.n	802d01a <__kernel_cosf+0x1e>
 802d00e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d012:	ee17 2a90 	vmov	r2, s15
 802d016:	2a00      	cmp	r2, #0
 802d018:	d03b      	beq.n	802d092 <__kernel_cosf+0x96>
 802d01a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d01e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d098 <__kernel_cosf+0x9c>
 802d022:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802d09c <__kernel_cosf+0xa0>
 802d026:	4a1e      	ldr	r2, [pc, #120]	; (802d0a0 <__kernel_cosf+0xa4>)
 802d028:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d02c:	4293      	cmp	r3, r2
 802d02e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802d0a4 <__kernel_cosf+0xa8>
 802d032:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d036:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802d0a8 <__kernel_cosf+0xac>
 802d03a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d03e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802d0ac <__kernel_cosf+0xb0>
 802d042:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d046:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802d0b0 <__kernel_cosf+0xb4>
 802d04a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d04e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802d052:	ee26 6a07 	vmul.f32	s12, s12, s14
 802d056:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d05a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802d05e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d062:	dc04      	bgt.n	802d06e <__kernel_cosf+0x72>
 802d064:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d068:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802d06c:	4770      	bx	lr
 802d06e:	4a11      	ldr	r2, [pc, #68]	; (802d0b4 <__kernel_cosf+0xb8>)
 802d070:	4293      	cmp	r3, r2
 802d072:	bfda      	itte	le
 802d074:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802d078:	ee07 3a10 	vmovle	s14, r3
 802d07c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802d080:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d084:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802d088:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d08c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d090:	4770      	bx	lr
 802d092:	eeb0 0a66 	vmov.f32	s0, s13
 802d096:	4770      	bx	lr
 802d098:	ad47d74e 	.word	0xad47d74e
 802d09c:	310f74f6 	.word	0x310f74f6
 802d0a0:	3e999999 	.word	0x3e999999
 802d0a4:	b493f27c 	.word	0xb493f27c
 802d0a8:	37d00d01 	.word	0x37d00d01
 802d0ac:	bab60b61 	.word	0xbab60b61
 802d0b0:	3d2aaaab 	.word	0x3d2aaaab
 802d0b4:	3f480000 	.word	0x3f480000

0802d0b8 <__kernel_sinf>:
 802d0b8:	ee10 3a10 	vmov	r3, s0
 802d0bc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d0c0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802d0c4:	da04      	bge.n	802d0d0 <__kernel_sinf+0x18>
 802d0c6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d0ca:	ee17 3a90 	vmov	r3, s15
 802d0ce:	b35b      	cbz	r3, 802d128 <__kernel_sinf+0x70>
 802d0d0:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d0d4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802d12c <__kernel_sinf+0x74>
 802d0d8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802d130 <__kernel_sinf+0x78>
 802d0dc:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d0e0:	eddf 7a14 	vldr	s15, [pc, #80]	; 802d134 <__kernel_sinf+0x7c>
 802d0e4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d0e8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802d138 <__kernel_sinf+0x80>
 802d0ec:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d0f0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802d13c <__kernel_sinf+0x84>
 802d0f4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802d0f8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d0fc:	b930      	cbnz	r0, 802d10c <__kernel_sinf+0x54>
 802d0fe:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802d140 <__kernel_sinf+0x88>
 802d102:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d106:	eea6 0a26 	vfma.f32	s0, s12, s13
 802d10a:	4770      	bx	lr
 802d10c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802d110:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802d114:	eee0 7a86 	vfma.f32	s15, s1, s12
 802d118:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802d11c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802d144 <__kernel_sinf+0x8c>
 802d120:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802d124:	ee30 0a60 	vsub.f32	s0, s0, s1
 802d128:	4770      	bx	lr
 802d12a:	bf00      	nop
 802d12c:	2f2ec9d3 	.word	0x2f2ec9d3
 802d130:	b2d72f34 	.word	0xb2d72f34
 802d134:	3638ef1b 	.word	0x3638ef1b
 802d138:	b9500d01 	.word	0xb9500d01
 802d13c:	3c088889 	.word	0x3c088889
 802d140:	be2aaaab 	.word	0xbe2aaaab
 802d144:	3e2aaaab 	.word	0x3e2aaaab

0802d148 <__ieee754_rem_pio2f>:
 802d148:	b5f0      	push	{r4, r5, r6, r7, lr}
 802d14a:	ee10 6a10 	vmov	r6, s0
 802d14e:	4b86      	ldr	r3, [pc, #536]	; (802d368 <__ieee754_rem_pio2f+0x220>)
 802d150:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802d154:	429d      	cmp	r5, r3
 802d156:	b087      	sub	sp, #28
 802d158:	4604      	mov	r4, r0
 802d15a:	dc05      	bgt.n	802d168 <__ieee754_rem_pio2f+0x20>
 802d15c:	2300      	movs	r3, #0
 802d15e:	ed80 0a00 	vstr	s0, [r0]
 802d162:	6043      	str	r3, [r0, #4]
 802d164:	2000      	movs	r0, #0
 802d166:	e020      	b.n	802d1aa <__ieee754_rem_pio2f+0x62>
 802d168:	4b80      	ldr	r3, [pc, #512]	; (802d36c <__ieee754_rem_pio2f+0x224>)
 802d16a:	429d      	cmp	r5, r3
 802d16c:	dc38      	bgt.n	802d1e0 <__ieee754_rem_pio2f+0x98>
 802d16e:	2e00      	cmp	r6, #0
 802d170:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802d370 <__ieee754_rem_pio2f+0x228>
 802d174:	4b7f      	ldr	r3, [pc, #508]	; (802d374 <__ieee754_rem_pio2f+0x22c>)
 802d176:	f025 050f 	bic.w	r5, r5, #15
 802d17a:	dd18      	ble.n	802d1ae <__ieee754_rem_pio2f+0x66>
 802d17c:	429d      	cmp	r5, r3
 802d17e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802d182:	bf09      	itett	eq
 802d184:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802d378 <__ieee754_rem_pio2f+0x230>
 802d188:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802d37c <__ieee754_rem_pio2f+0x234>
 802d18c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802d190:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802d380 <__ieee754_rem_pio2f+0x238>
 802d194:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802d198:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d19c:	edc0 6a00 	vstr	s13, [r0]
 802d1a0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d1a4:	edc0 7a01 	vstr	s15, [r0, #4]
 802d1a8:	2001      	movs	r0, #1
 802d1aa:	b007      	add	sp, #28
 802d1ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d1ae:	429d      	cmp	r5, r3
 802d1b0:	ee70 7a07 	vadd.f32	s15, s0, s14
 802d1b4:	bf09      	itett	eq
 802d1b6:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802d378 <__ieee754_rem_pio2f+0x230>
 802d1ba:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802d37c <__ieee754_rem_pio2f+0x234>
 802d1be:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802d1c2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802d380 <__ieee754_rem_pio2f+0x238>
 802d1c6:	ee77 6a87 	vadd.f32	s13, s15, s14
 802d1ca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d1ce:	edc0 6a00 	vstr	s13, [r0]
 802d1d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d1d6:	edc0 7a01 	vstr	s15, [r0, #4]
 802d1da:	f04f 30ff 	mov.w	r0, #4294967295
 802d1de:	e7e4      	b.n	802d1aa <__ieee754_rem_pio2f+0x62>
 802d1e0:	4b68      	ldr	r3, [pc, #416]	; (802d384 <__ieee754_rem_pio2f+0x23c>)
 802d1e2:	429d      	cmp	r5, r3
 802d1e4:	dc71      	bgt.n	802d2ca <__ieee754_rem_pio2f+0x182>
 802d1e6:	f7ff fe33 	bl	802ce50 <fabsf>
 802d1ea:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802d388 <__ieee754_rem_pio2f+0x240>
 802d1ee:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d1f2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802d1f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d1fa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802d1fe:	ee17 0a90 	vmov	r0, s15
 802d202:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d370 <__ieee754_rem_pio2f+0x228>
 802d206:	eea7 0a67 	vfms.f32	s0, s14, s15
 802d20a:	281f      	cmp	r0, #31
 802d20c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d37c <__ieee754_rem_pio2f+0x234>
 802d210:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d214:	eeb1 6a47 	vneg.f32	s12, s14
 802d218:	ee70 6a67 	vsub.f32	s13, s0, s15
 802d21c:	ee16 2a90 	vmov	r2, s13
 802d220:	dc1c      	bgt.n	802d25c <__ieee754_rem_pio2f+0x114>
 802d222:	495a      	ldr	r1, [pc, #360]	; (802d38c <__ieee754_rem_pio2f+0x244>)
 802d224:	1e47      	subs	r7, r0, #1
 802d226:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802d22a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802d22e:	428b      	cmp	r3, r1
 802d230:	d014      	beq.n	802d25c <__ieee754_rem_pio2f+0x114>
 802d232:	6022      	str	r2, [r4, #0]
 802d234:	ed94 7a00 	vldr	s14, [r4]
 802d238:	ee30 0a47 	vsub.f32	s0, s0, s14
 802d23c:	2e00      	cmp	r6, #0
 802d23e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d242:	ed84 0a01 	vstr	s0, [r4, #4]
 802d246:	dab0      	bge.n	802d1aa <__ieee754_rem_pio2f+0x62>
 802d248:	eeb1 7a47 	vneg.f32	s14, s14
 802d24c:	eeb1 0a40 	vneg.f32	s0, s0
 802d250:	ed84 7a00 	vstr	s14, [r4]
 802d254:	ed84 0a01 	vstr	s0, [r4, #4]
 802d258:	4240      	negs	r0, r0
 802d25a:	e7a6      	b.n	802d1aa <__ieee754_rem_pio2f+0x62>
 802d25c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d260:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802d264:	2908      	cmp	r1, #8
 802d266:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802d26a:	dde2      	ble.n	802d232 <__ieee754_rem_pio2f+0xea>
 802d26c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802d378 <__ieee754_rem_pio2f+0x230>
 802d270:	eef0 6a40 	vmov.f32	s13, s0
 802d274:	eee6 6a25 	vfma.f32	s13, s12, s11
 802d278:	ee70 7a66 	vsub.f32	s15, s0, s13
 802d27c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d280:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802d380 <__ieee754_rem_pio2f+0x238>
 802d284:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802d288:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802d28c:	ee15 2a90 	vmov	r2, s11
 802d290:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d294:	1a5b      	subs	r3, r3, r1
 802d296:	2b19      	cmp	r3, #25
 802d298:	dc04      	bgt.n	802d2a4 <__ieee754_rem_pio2f+0x15c>
 802d29a:	edc4 5a00 	vstr	s11, [r4]
 802d29e:	eeb0 0a66 	vmov.f32	s0, s13
 802d2a2:	e7c7      	b.n	802d234 <__ieee754_rem_pio2f+0xec>
 802d2a4:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802d390 <__ieee754_rem_pio2f+0x248>
 802d2a8:	eeb0 0a66 	vmov.f32	s0, s13
 802d2ac:	eea6 0a25 	vfma.f32	s0, s12, s11
 802d2b0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802d2b4:	eddf 6a37 	vldr	s13, [pc, #220]	; 802d394 <__ieee754_rem_pio2f+0x24c>
 802d2b8:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d2bc:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802d2c0:	ee30 7a67 	vsub.f32	s14, s0, s15
 802d2c4:	ed84 7a00 	vstr	s14, [r4]
 802d2c8:	e7b4      	b.n	802d234 <__ieee754_rem_pio2f+0xec>
 802d2ca:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802d2ce:	db06      	blt.n	802d2de <__ieee754_rem_pio2f+0x196>
 802d2d0:	ee70 7a40 	vsub.f32	s15, s0, s0
 802d2d4:	edc0 7a01 	vstr	s15, [r0, #4]
 802d2d8:	edc0 7a00 	vstr	s15, [r0]
 802d2dc:	e742      	b.n	802d164 <__ieee754_rem_pio2f+0x1c>
 802d2de:	15ea      	asrs	r2, r5, #23
 802d2e0:	3a86      	subs	r2, #134	; 0x86
 802d2e2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802d2e6:	ee07 3a90 	vmov	s15, r3
 802d2ea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d2ee:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802d398 <__ieee754_rem_pio2f+0x250>
 802d2f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d2f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d2fa:	ed8d 7a03 	vstr	s14, [sp, #12]
 802d2fe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d302:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d306:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d30a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d30e:	ed8d 7a04 	vstr	s14, [sp, #16]
 802d312:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d316:	eef5 7a40 	vcmp.f32	s15, #0.0
 802d31a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d31e:	edcd 7a05 	vstr	s15, [sp, #20]
 802d322:	d11e      	bne.n	802d362 <__ieee754_rem_pio2f+0x21a>
 802d324:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802d328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d32c:	bf14      	ite	ne
 802d32e:	2302      	movne	r3, #2
 802d330:	2301      	moveq	r3, #1
 802d332:	491a      	ldr	r1, [pc, #104]	; (802d39c <__ieee754_rem_pio2f+0x254>)
 802d334:	9101      	str	r1, [sp, #4]
 802d336:	2102      	movs	r1, #2
 802d338:	9100      	str	r1, [sp, #0]
 802d33a:	a803      	add	r0, sp, #12
 802d33c:	4621      	mov	r1, r4
 802d33e:	f000 f895 	bl	802d46c <__kernel_rem_pio2f>
 802d342:	2e00      	cmp	r6, #0
 802d344:	f6bf af31 	bge.w	802d1aa <__ieee754_rem_pio2f+0x62>
 802d348:	edd4 7a00 	vldr	s15, [r4]
 802d34c:	eef1 7a67 	vneg.f32	s15, s15
 802d350:	edc4 7a00 	vstr	s15, [r4]
 802d354:	edd4 7a01 	vldr	s15, [r4, #4]
 802d358:	eef1 7a67 	vneg.f32	s15, s15
 802d35c:	edc4 7a01 	vstr	s15, [r4, #4]
 802d360:	e77a      	b.n	802d258 <__ieee754_rem_pio2f+0x110>
 802d362:	2303      	movs	r3, #3
 802d364:	e7e5      	b.n	802d332 <__ieee754_rem_pio2f+0x1ea>
 802d366:	bf00      	nop
 802d368:	3f490fd8 	.word	0x3f490fd8
 802d36c:	4016cbe3 	.word	0x4016cbe3
 802d370:	3fc90f80 	.word	0x3fc90f80
 802d374:	3fc90fd0 	.word	0x3fc90fd0
 802d378:	37354400 	.word	0x37354400
 802d37c:	37354443 	.word	0x37354443
 802d380:	2e85a308 	.word	0x2e85a308
 802d384:	43490f80 	.word	0x43490f80
 802d388:	3f22f984 	.word	0x3f22f984
 802d38c:	08045824 	.word	0x08045824
 802d390:	2e85a300 	.word	0x2e85a300
 802d394:	248d3132 	.word	0x248d3132
 802d398:	43800000 	.word	0x43800000
 802d39c:	080458a4 	.word	0x080458a4

0802d3a0 <scalbnf>:
 802d3a0:	ee10 3a10 	vmov	r3, s0
 802d3a4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802d3a8:	d02b      	beq.n	802d402 <scalbnf+0x62>
 802d3aa:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802d3ae:	d302      	bcc.n	802d3b6 <scalbnf+0x16>
 802d3b0:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d3b4:	4770      	bx	lr
 802d3b6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802d3ba:	d123      	bne.n	802d404 <scalbnf+0x64>
 802d3bc:	4b24      	ldr	r3, [pc, #144]	; (802d450 <scalbnf+0xb0>)
 802d3be:	eddf 7a25 	vldr	s15, [pc, #148]	; 802d454 <scalbnf+0xb4>
 802d3c2:	4298      	cmp	r0, r3
 802d3c4:	ee20 0a27 	vmul.f32	s0, s0, s15
 802d3c8:	db17      	blt.n	802d3fa <scalbnf+0x5a>
 802d3ca:	ee10 3a10 	vmov	r3, s0
 802d3ce:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d3d2:	3a19      	subs	r2, #25
 802d3d4:	f24c 3150 	movw	r1, #50000	; 0xc350
 802d3d8:	4288      	cmp	r0, r1
 802d3da:	dd15      	ble.n	802d408 <scalbnf+0x68>
 802d3dc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d458 <scalbnf+0xb8>
 802d3e0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802d45c <scalbnf+0xbc>
 802d3e4:	ee10 3a10 	vmov	r3, s0
 802d3e8:	eeb0 7a67 	vmov.f32	s14, s15
 802d3ec:	2b00      	cmp	r3, #0
 802d3ee:	bfb8      	it	lt
 802d3f0:	eef0 7a66 	vmovlt.f32	s15, s13
 802d3f4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802d3f8:	4770      	bx	lr
 802d3fa:	eddf 7a19 	vldr	s15, [pc, #100]	; 802d460 <scalbnf+0xc0>
 802d3fe:	ee27 0a80 	vmul.f32	s0, s15, s0
 802d402:	4770      	bx	lr
 802d404:	0dd2      	lsrs	r2, r2, #23
 802d406:	e7e5      	b.n	802d3d4 <scalbnf+0x34>
 802d408:	4410      	add	r0, r2
 802d40a:	28fe      	cmp	r0, #254	; 0xfe
 802d40c:	dce6      	bgt.n	802d3dc <scalbnf+0x3c>
 802d40e:	2800      	cmp	r0, #0
 802d410:	dd06      	ble.n	802d420 <scalbnf+0x80>
 802d412:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d416:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d41a:	ee00 3a10 	vmov	s0, r3
 802d41e:	4770      	bx	lr
 802d420:	f110 0f16 	cmn.w	r0, #22
 802d424:	da09      	bge.n	802d43a <scalbnf+0x9a>
 802d426:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d460 <scalbnf+0xc0>
 802d42a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802d464 <scalbnf+0xc4>
 802d42e:	ee10 3a10 	vmov	r3, s0
 802d432:	eeb0 7a67 	vmov.f32	s14, s15
 802d436:	2b00      	cmp	r3, #0
 802d438:	e7d9      	b.n	802d3ee <scalbnf+0x4e>
 802d43a:	3019      	adds	r0, #25
 802d43c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d440:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d444:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802d468 <scalbnf+0xc8>
 802d448:	ee07 3a90 	vmov	s15, r3
 802d44c:	e7d7      	b.n	802d3fe <scalbnf+0x5e>
 802d44e:	bf00      	nop
 802d450:	ffff3cb0 	.word	0xffff3cb0
 802d454:	4c000000 	.word	0x4c000000
 802d458:	7149f2ca 	.word	0x7149f2ca
 802d45c:	f149f2ca 	.word	0xf149f2ca
 802d460:	0da24260 	.word	0x0da24260
 802d464:	8da24260 	.word	0x8da24260
 802d468:	33000000 	.word	0x33000000

0802d46c <__kernel_rem_pio2f>:
 802d46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d470:	ed2d 8b04 	vpush	{d8-d9}
 802d474:	b0d9      	sub	sp, #356	; 0x164
 802d476:	4688      	mov	r8, r1
 802d478:	9002      	str	r0, [sp, #8]
 802d47a:	49b8      	ldr	r1, [pc, #736]	; (802d75c <__kernel_rem_pio2f+0x2f0>)
 802d47c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802d47e:	9301      	str	r3, [sp, #4]
 802d480:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802d484:	9901      	ldr	r1, [sp, #4]
 802d486:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802d488:	f101 3bff 	add.w	fp, r1, #4294967295
 802d48c:	1d11      	adds	r1, r2, #4
 802d48e:	db25      	blt.n	802d4dc <__kernel_rem_pio2f+0x70>
 802d490:	1ed0      	subs	r0, r2, #3
 802d492:	bf48      	it	mi
 802d494:	1d10      	addmi	r0, r2, #4
 802d496:	10c0      	asrs	r0, r0, #3
 802d498:	1c45      	adds	r5, r0, #1
 802d49a:	00e9      	lsls	r1, r5, #3
 802d49c:	eba0 070b 	sub.w	r7, r0, fp
 802d4a0:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802d76c <__kernel_rem_pio2f+0x300>
 802d4a4:	9103      	str	r1, [sp, #12]
 802d4a6:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802d4aa:	eb0a 0c0b 	add.w	ip, sl, fp
 802d4ae:	ae1c      	add	r6, sp, #112	; 0x70
 802d4b0:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802d4b4:	2400      	movs	r4, #0
 802d4b6:	4564      	cmp	r4, ip
 802d4b8:	dd12      	ble.n	802d4e0 <__kernel_rem_pio2f+0x74>
 802d4ba:	9901      	ldr	r1, [sp, #4]
 802d4bc:	ac1c      	add	r4, sp, #112	; 0x70
 802d4be:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802d4c2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802d4c6:	f04f 0c00 	mov.w	ip, #0
 802d4ca:	45d4      	cmp	ip, sl
 802d4cc:	dc27      	bgt.n	802d51e <__kernel_rem_pio2f+0xb2>
 802d4ce:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d4d2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802d76c <__kernel_rem_pio2f+0x300>
 802d4d6:	4627      	mov	r7, r4
 802d4d8:	2600      	movs	r6, #0
 802d4da:	e016      	b.n	802d50a <__kernel_rem_pio2f+0x9e>
 802d4dc:	2000      	movs	r0, #0
 802d4de:	e7db      	b.n	802d498 <__kernel_rem_pio2f+0x2c>
 802d4e0:	42e7      	cmn	r7, r4
 802d4e2:	bf5d      	ittte	pl
 802d4e4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802d4e8:	ee07 1a90 	vmovpl	s15, r1
 802d4ec:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802d4f0:	eef0 7a47 	vmovmi.f32	s15, s14
 802d4f4:	ece6 7a01 	vstmia	r6!, {s15}
 802d4f8:	3401      	adds	r4, #1
 802d4fa:	e7dc      	b.n	802d4b6 <__kernel_rem_pio2f+0x4a>
 802d4fc:	ecfe 6a01 	vldmia	lr!, {s13}
 802d500:	ed97 7a00 	vldr	s14, [r7]
 802d504:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d508:	3601      	adds	r6, #1
 802d50a:	455e      	cmp	r6, fp
 802d50c:	f1a7 0704 	sub.w	r7, r7, #4
 802d510:	ddf4      	ble.n	802d4fc <__kernel_rem_pio2f+0x90>
 802d512:	ece9 7a01 	vstmia	r9!, {s15}
 802d516:	f10c 0c01 	add.w	ip, ip, #1
 802d51a:	3404      	adds	r4, #4
 802d51c:	e7d5      	b.n	802d4ca <__kernel_rem_pio2f+0x5e>
 802d51e:	a908      	add	r1, sp, #32
 802d520:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802d524:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802d528:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802d768 <__kernel_rem_pio2f+0x2fc>
 802d52c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802d764 <__kernel_rem_pio2f+0x2f8>
 802d530:	9105      	str	r1, [sp, #20]
 802d532:	9304      	str	r3, [sp, #16]
 802d534:	4656      	mov	r6, sl
 802d536:	00b3      	lsls	r3, r6, #2
 802d538:	9306      	str	r3, [sp, #24]
 802d53a:	ab58      	add	r3, sp, #352	; 0x160
 802d53c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d540:	ac08      	add	r4, sp, #32
 802d542:	ab44      	add	r3, sp, #272	; 0x110
 802d544:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802d548:	46a4      	mov	ip, r4
 802d54a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d54e:	4637      	mov	r7, r6
 802d550:	2f00      	cmp	r7, #0
 802d552:	f1a0 0004 	sub.w	r0, r0, #4
 802d556:	dc4a      	bgt.n	802d5ee <__kernel_rem_pio2f+0x182>
 802d558:	4628      	mov	r0, r5
 802d55a:	9207      	str	r2, [sp, #28]
 802d55c:	f7ff ff20 	bl	802d3a0 <scalbnf>
 802d560:	eeb0 8a40 	vmov.f32	s16, s0
 802d564:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802d568:	ee28 0a00 	vmul.f32	s0, s16, s0
 802d56c:	f7ff fd04 	bl	802cf78 <floorf>
 802d570:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802d574:	eea0 8a67 	vfms.f32	s16, s0, s15
 802d578:	2d00      	cmp	r5, #0
 802d57a:	9a07      	ldr	r2, [sp, #28]
 802d57c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802d580:	ee17 9a90 	vmov	r9, s15
 802d584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d588:	ee38 8a67 	vsub.f32	s16, s16, s15
 802d58c:	dd41      	ble.n	802d612 <__kernel_rem_pio2f+0x1a6>
 802d58e:	f106 3cff 	add.w	ip, r6, #4294967295
 802d592:	ab08      	add	r3, sp, #32
 802d594:	f1c5 0e08 	rsb	lr, r5, #8
 802d598:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802d59c:	fa47 f00e 	asr.w	r0, r7, lr
 802d5a0:	4481      	add	r9, r0
 802d5a2:	fa00 f00e 	lsl.w	r0, r0, lr
 802d5a6:	1a3f      	subs	r7, r7, r0
 802d5a8:	f1c5 0007 	rsb	r0, r5, #7
 802d5ac:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802d5b0:	4107      	asrs	r7, r0
 802d5b2:	2f00      	cmp	r7, #0
 802d5b4:	dd3c      	ble.n	802d630 <__kernel_rem_pio2f+0x1c4>
 802d5b6:	f04f 0e00 	mov.w	lr, #0
 802d5ba:	f109 0901 	add.w	r9, r9, #1
 802d5be:	4671      	mov	r1, lr
 802d5c0:	4576      	cmp	r6, lr
 802d5c2:	dc67      	bgt.n	802d694 <__kernel_rem_pio2f+0x228>
 802d5c4:	2d00      	cmp	r5, #0
 802d5c6:	dd03      	ble.n	802d5d0 <__kernel_rem_pio2f+0x164>
 802d5c8:	2d01      	cmp	r5, #1
 802d5ca:	d074      	beq.n	802d6b6 <__kernel_rem_pio2f+0x24a>
 802d5cc:	2d02      	cmp	r5, #2
 802d5ce:	d07b      	beq.n	802d6c8 <__kernel_rem_pio2f+0x25c>
 802d5d0:	2f02      	cmp	r7, #2
 802d5d2:	d12d      	bne.n	802d630 <__kernel_rem_pio2f+0x1c4>
 802d5d4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d5d8:	ee30 8a48 	vsub.f32	s16, s0, s16
 802d5dc:	b341      	cbz	r1, 802d630 <__kernel_rem_pio2f+0x1c4>
 802d5de:	4628      	mov	r0, r5
 802d5e0:	9207      	str	r2, [sp, #28]
 802d5e2:	f7ff fedd 	bl	802d3a0 <scalbnf>
 802d5e6:	9a07      	ldr	r2, [sp, #28]
 802d5e8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802d5ec:	e020      	b.n	802d630 <__kernel_rem_pio2f+0x1c4>
 802d5ee:	ee60 7a28 	vmul.f32	s15, s0, s17
 802d5f2:	3f01      	subs	r7, #1
 802d5f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d5f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d5fc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802d600:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d604:	ecac 0a01 	vstmia	ip!, {s0}
 802d608:	ed90 0a00 	vldr	s0, [r0]
 802d60c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802d610:	e79e      	b.n	802d550 <__kernel_rem_pio2f+0xe4>
 802d612:	d105      	bne.n	802d620 <__kernel_rem_pio2f+0x1b4>
 802d614:	1e70      	subs	r0, r6, #1
 802d616:	ab08      	add	r3, sp, #32
 802d618:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802d61c:	11ff      	asrs	r7, r7, #7
 802d61e:	e7c8      	b.n	802d5b2 <__kernel_rem_pio2f+0x146>
 802d620:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d624:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802d628:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d62c:	da30      	bge.n	802d690 <__kernel_rem_pio2f+0x224>
 802d62e:	2700      	movs	r7, #0
 802d630:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802d634:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d638:	f040 809a 	bne.w	802d770 <__kernel_rem_pio2f+0x304>
 802d63c:	1e74      	subs	r4, r6, #1
 802d63e:	46a4      	mov	ip, r4
 802d640:	2100      	movs	r1, #0
 802d642:	45d4      	cmp	ip, sl
 802d644:	da47      	bge.n	802d6d6 <__kernel_rem_pio2f+0x26a>
 802d646:	2900      	cmp	r1, #0
 802d648:	d063      	beq.n	802d712 <__kernel_rem_pio2f+0x2a6>
 802d64a:	ab08      	add	r3, sp, #32
 802d64c:	3d08      	subs	r5, #8
 802d64e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802d652:	2b00      	cmp	r3, #0
 802d654:	d07f      	beq.n	802d756 <__kernel_rem_pio2f+0x2ea>
 802d656:	4628      	mov	r0, r5
 802d658:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d65c:	f7ff fea0 	bl	802d3a0 <scalbnf>
 802d660:	1c63      	adds	r3, r4, #1
 802d662:	aa44      	add	r2, sp, #272	; 0x110
 802d664:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802d768 <__kernel_rem_pio2f+0x2fc>
 802d668:	0099      	lsls	r1, r3, #2
 802d66a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802d66e:	4623      	mov	r3, r4
 802d670:	2b00      	cmp	r3, #0
 802d672:	f280 80ad 	bge.w	802d7d0 <__kernel_rem_pio2f+0x364>
 802d676:	4623      	mov	r3, r4
 802d678:	2b00      	cmp	r3, #0
 802d67a:	f2c0 80cb 	blt.w	802d814 <__kernel_rem_pio2f+0x3a8>
 802d67e:	aa44      	add	r2, sp, #272	; 0x110
 802d680:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802d684:	4e36      	ldr	r6, [pc, #216]	; (802d760 <__kernel_rem_pio2f+0x2f4>)
 802d686:	eddf 7a39 	vldr	s15, [pc, #228]	; 802d76c <__kernel_rem_pio2f+0x300>
 802d68a:	2000      	movs	r0, #0
 802d68c:	1ae2      	subs	r2, r4, r3
 802d68e:	e0b6      	b.n	802d7fe <__kernel_rem_pio2f+0x392>
 802d690:	2702      	movs	r7, #2
 802d692:	e790      	b.n	802d5b6 <__kernel_rem_pio2f+0x14a>
 802d694:	6820      	ldr	r0, [r4, #0]
 802d696:	b949      	cbnz	r1, 802d6ac <__kernel_rem_pio2f+0x240>
 802d698:	b118      	cbz	r0, 802d6a2 <__kernel_rem_pio2f+0x236>
 802d69a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802d69e:	6020      	str	r0, [r4, #0]
 802d6a0:	2001      	movs	r0, #1
 802d6a2:	f10e 0e01 	add.w	lr, lr, #1
 802d6a6:	3404      	adds	r4, #4
 802d6a8:	4601      	mov	r1, r0
 802d6aa:	e789      	b.n	802d5c0 <__kernel_rem_pio2f+0x154>
 802d6ac:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802d6b0:	6020      	str	r0, [r4, #0]
 802d6b2:	4608      	mov	r0, r1
 802d6b4:	e7f5      	b.n	802d6a2 <__kernel_rem_pio2f+0x236>
 802d6b6:	1e74      	subs	r4, r6, #1
 802d6b8:	ab08      	add	r3, sp, #32
 802d6ba:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d6be:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802d6c2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802d6c6:	e783      	b.n	802d5d0 <__kernel_rem_pio2f+0x164>
 802d6c8:	1e74      	subs	r4, r6, #1
 802d6ca:	ab08      	add	r3, sp, #32
 802d6cc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d6d0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802d6d4:	e7f5      	b.n	802d6c2 <__kernel_rem_pio2f+0x256>
 802d6d6:	ab08      	add	r3, sp, #32
 802d6d8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802d6dc:	f10c 3cff 	add.w	ip, ip, #4294967295
 802d6e0:	4301      	orrs	r1, r0
 802d6e2:	e7ae      	b.n	802d642 <__kernel_rem_pio2f+0x1d6>
 802d6e4:	3001      	adds	r0, #1
 802d6e6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802d6ea:	2f00      	cmp	r7, #0
 802d6ec:	d0fa      	beq.n	802d6e4 <__kernel_rem_pio2f+0x278>
 802d6ee:	9b06      	ldr	r3, [sp, #24]
 802d6f0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802d6f4:	eb0d 0403 	add.w	r4, sp, r3
 802d6f8:	9b01      	ldr	r3, [sp, #4]
 802d6fa:	18f7      	adds	r7, r6, r3
 802d6fc:	ab1c      	add	r3, sp, #112	; 0x70
 802d6fe:	f106 0c01 	add.w	ip, r6, #1
 802d702:	3c4c      	subs	r4, #76	; 0x4c
 802d704:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802d708:	4430      	add	r0, r6
 802d70a:	4560      	cmp	r0, ip
 802d70c:	da04      	bge.n	802d718 <__kernel_rem_pio2f+0x2ac>
 802d70e:	4606      	mov	r6, r0
 802d710:	e711      	b.n	802d536 <__kernel_rem_pio2f+0xca>
 802d712:	9c05      	ldr	r4, [sp, #20]
 802d714:	2001      	movs	r0, #1
 802d716:	e7e6      	b.n	802d6e6 <__kernel_rem_pio2f+0x27a>
 802d718:	9b04      	ldr	r3, [sp, #16]
 802d71a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d71e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802d722:	9306      	str	r3, [sp, #24]
 802d724:	ee07 3a90 	vmov	s15, r3
 802d728:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d72c:	2600      	movs	r6, #0
 802d72e:	ece7 7a01 	vstmia	r7!, {s15}
 802d732:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d76c <__kernel_rem_pio2f+0x300>
 802d736:	46b9      	mov	r9, r7
 802d738:	455e      	cmp	r6, fp
 802d73a:	dd04      	ble.n	802d746 <__kernel_rem_pio2f+0x2da>
 802d73c:	ece4 7a01 	vstmia	r4!, {s15}
 802d740:	f10c 0c01 	add.w	ip, ip, #1
 802d744:	e7e1      	b.n	802d70a <__kernel_rem_pio2f+0x29e>
 802d746:	ecfe 6a01 	vldmia	lr!, {s13}
 802d74a:	ed39 7a01 	vldmdb	r9!, {s14}
 802d74e:	3601      	adds	r6, #1
 802d750:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d754:	e7f0      	b.n	802d738 <__kernel_rem_pio2f+0x2cc>
 802d756:	3c01      	subs	r4, #1
 802d758:	e777      	b.n	802d64a <__kernel_rem_pio2f+0x1de>
 802d75a:	bf00      	nop
 802d75c:	08045be8 	.word	0x08045be8
 802d760:	08045bbc 	.word	0x08045bbc
 802d764:	43800000 	.word	0x43800000
 802d768:	3b800000 	.word	0x3b800000
 802d76c:	00000000 	.word	0x00000000
 802d770:	9b03      	ldr	r3, [sp, #12]
 802d772:	eeb0 0a48 	vmov.f32	s0, s16
 802d776:	1a98      	subs	r0, r3, r2
 802d778:	f7ff fe12 	bl	802d3a0 <scalbnf>
 802d77c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802d764 <__kernel_rem_pio2f+0x2f8>
 802d780:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802d784:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d788:	db19      	blt.n	802d7be <__kernel_rem_pio2f+0x352>
 802d78a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802d768 <__kernel_rem_pio2f+0x2fc>
 802d78e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802d792:	aa08      	add	r2, sp, #32
 802d794:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d798:	1c74      	adds	r4, r6, #1
 802d79a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d79e:	3508      	adds	r5, #8
 802d7a0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802d7a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d7a8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d7ac:	ee10 3a10 	vmov	r3, s0
 802d7b0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d7b4:	ee17 3a90 	vmov	r3, s15
 802d7b8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802d7bc:	e74b      	b.n	802d656 <__kernel_rem_pio2f+0x1ea>
 802d7be:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d7c2:	aa08      	add	r2, sp, #32
 802d7c4:	ee10 3a10 	vmov	r3, s0
 802d7c8:	4634      	mov	r4, r6
 802d7ca:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d7ce:	e742      	b.n	802d656 <__kernel_rem_pio2f+0x1ea>
 802d7d0:	a808      	add	r0, sp, #32
 802d7d2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802d7d6:	9001      	str	r0, [sp, #4]
 802d7d8:	ee07 0a90 	vmov	s15, r0
 802d7dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d7e0:	3b01      	subs	r3, #1
 802d7e2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802d7e6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802d7ea:	ed62 7a01 	vstmdb	r2!, {s15}
 802d7ee:	e73f      	b.n	802d670 <__kernel_rem_pio2f+0x204>
 802d7f0:	ecf6 6a01 	vldmia	r6!, {s13}
 802d7f4:	ecb5 7a01 	vldmia	r5!, {s14}
 802d7f8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d7fc:	3001      	adds	r0, #1
 802d7fe:	4550      	cmp	r0, sl
 802d800:	dc01      	bgt.n	802d806 <__kernel_rem_pio2f+0x39a>
 802d802:	4290      	cmp	r0, r2
 802d804:	ddf4      	ble.n	802d7f0 <__kernel_rem_pio2f+0x384>
 802d806:	a858      	add	r0, sp, #352	; 0x160
 802d808:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802d80c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802d810:	3b01      	subs	r3, #1
 802d812:	e731      	b.n	802d678 <__kernel_rem_pio2f+0x20c>
 802d814:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d816:	2b02      	cmp	r3, #2
 802d818:	dc09      	bgt.n	802d82e <__kernel_rem_pio2f+0x3c2>
 802d81a:	2b00      	cmp	r3, #0
 802d81c:	dc2b      	bgt.n	802d876 <__kernel_rem_pio2f+0x40a>
 802d81e:	d044      	beq.n	802d8aa <__kernel_rem_pio2f+0x43e>
 802d820:	f009 0007 	and.w	r0, r9, #7
 802d824:	b059      	add	sp, #356	; 0x164
 802d826:	ecbd 8b04 	vpop	{d8-d9}
 802d82a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d82e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d830:	2b03      	cmp	r3, #3
 802d832:	d1f5      	bne.n	802d820 <__kernel_rem_pio2f+0x3b4>
 802d834:	aa30      	add	r2, sp, #192	; 0xc0
 802d836:	1f0b      	subs	r3, r1, #4
 802d838:	4413      	add	r3, r2
 802d83a:	461a      	mov	r2, r3
 802d83c:	4620      	mov	r0, r4
 802d83e:	2800      	cmp	r0, #0
 802d840:	f1a2 0204 	sub.w	r2, r2, #4
 802d844:	dc52      	bgt.n	802d8ec <__kernel_rem_pio2f+0x480>
 802d846:	4622      	mov	r2, r4
 802d848:	2a01      	cmp	r2, #1
 802d84a:	f1a3 0304 	sub.w	r3, r3, #4
 802d84e:	dc5d      	bgt.n	802d90c <__kernel_rem_pio2f+0x4a0>
 802d850:	ab30      	add	r3, sp, #192	; 0xc0
 802d852:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802d76c <__kernel_rem_pio2f+0x300>
 802d856:	440b      	add	r3, r1
 802d858:	2c01      	cmp	r4, #1
 802d85a:	dc67      	bgt.n	802d92c <__kernel_rem_pio2f+0x4c0>
 802d85c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802d860:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802d864:	2f00      	cmp	r7, #0
 802d866:	d167      	bne.n	802d938 <__kernel_rem_pio2f+0x4cc>
 802d868:	edc8 6a00 	vstr	s13, [r8]
 802d86c:	ed88 7a01 	vstr	s14, [r8, #4]
 802d870:	edc8 7a02 	vstr	s15, [r8, #8]
 802d874:	e7d4      	b.n	802d820 <__kernel_rem_pio2f+0x3b4>
 802d876:	ab30      	add	r3, sp, #192	; 0xc0
 802d878:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802d76c <__kernel_rem_pio2f+0x300>
 802d87c:	440b      	add	r3, r1
 802d87e:	4622      	mov	r2, r4
 802d880:	2a00      	cmp	r2, #0
 802d882:	da24      	bge.n	802d8ce <__kernel_rem_pio2f+0x462>
 802d884:	b34f      	cbz	r7, 802d8da <__kernel_rem_pio2f+0x46e>
 802d886:	eef1 7a47 	vneg.f32	s15, s14
 802d88a:	edc8 7a00 	vstr	s15, [r8]
 802d88e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802d892:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d896:	aa31      	add	r2, sp, #196	; 0xc4
 802d898:	2301      	movs	r3, #1
 802d89a:	429c      	cmp	r4, r3
 802d89c:	da20      	bge.n	802d8e0 <__kernel_rem_pio2f+0x474>
 802d89e:	b10f      	cbz	r7, 802d8a4 <__kernel_rem_pio2f+0x438>
 802d8a0:	eef1 7a67 	vneg.f32	s15, s15
 802d8a4:	edc8 7a01 	vstr	s15, [r8, #4]
 802d8a8:	e7ba      	b.n	802d820 <__kernel_rem_pio2f+0x3b4>
 802d8aa:	ab30      	add	r3, sp, #192	; 0xc0
 802d8ac:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802d76c <__kernel_rem_pio2f+0x300>
 802d8b0:	440b      	add	r3, r1
 802d8b2:	2c00      	cmp	r4, #0
 802d8b4:	da05      	bge.n	802d8c2 <__kernel_rem_pio2f+0x456>
 802d8b6:	b10f      	cbz	r7, 802d8bc <__kernel_rem_pio2f+0x450>
 802d8b8:	eef1 7a67 	vneg.f32	s15, s15
 802d8bc:	edc8 7a00 	vstr	s15, [r8]
 802d8c0:	e7ae      	b.n	802d820 <__kernel_rem_pio2f+0x3b4>
 802d8c2:	ed33 7a01 	vldmdb	r3!, {s14}
 802d8c6:	3c01      	subs	r4, #1
 802d8c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d8cc:	e7f1      	b.n	802d8b2 <__kernel_rem_pio2f+0x446>
 802d8ce:	ed73 7a01 	vldmdb	r3!, {s15}
 802d8d2:	3a01      	subs	r2, #1
 802d8d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 802d8d8:	e7d2      	b.n	802d880 <__kernel_rem_pio2f+0x414>
 802d8da:	eef0 7a47 	vmov.f32	s15, s14
 802d8de:	e7d4      	b.n	802d88a <__kernel_rem_pio2f+0x41e>
 802d8e0:	ecb2 7a01 	vldmia	r2!, {s14}
 802d8e4:	3301      	adds	r3, #1
 802d8e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d8ea:	e7d6      	b.n	802d89a <__kernel_rem_pio2f+0x42e>
 802d8ec:	edd2 7a00 	vldr	s15, [r2]
 802d8f0:	edd2 6a01 	vldr	s13, [r2, #4]
 802d8f4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d8f8:	3801      	subs	r0, #1
 802d8fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d8fe:	ed82 7a00 	vstr	s14, [r2]
 802d902:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d906:	edc2 7a01 	vstr	s15, [r2, #4]
 802d90a:	e798      	b.n	802d83e <__kernel_rem_pio2f+0x3d2>
 802d90c:	edd3 7a00 	vldr	s15, [r3]
 802d910:	edd3 6a01 	vldr	s13, [r3, #4]
 802d914:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d918:	3a01      	subs	r2, #1
 802d91a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d91e:	ed83 7a00 	vstr	s14, [r3]
 802d922:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d926:	edc3 7a01 	vstr	s15, [r3, #4]
 802d92a:	e78d      	b.n	802d848 <__kernel_rem_pio2f+0x3dc>
 802d92c:	ed33 7a01 	vldmdb	r3!, {s14}
 802d930:	3c01      	subs	r4, #1
 802d932:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d936:	e78f      	b.n	802d858 <__kernel_rem_pio2f+0x3ec>
 802d938:	eef1 6a66 	vneg.f32	s13, s13
 802d93c:	eeb1 7a47 	vneg.f32	s14, s14
 802d940:	edc8 6a00 	vstr	s13, [r8]
 802d944:	ed88 7a01 	vstr	s14, [r8, #4]
 802d948:	eef1 7a67 	vneg.f32	s15, s15
 802d94c:	e790      	b.n	802d870 <__kernel_rem_pio2f+0x404>
 802d94e:	bf00      	nop

0802d950 <abort>:
 802d950:	b508      	push	{r3, lr}
 802d952:	2006      	movs	r0, #6
 802d954:	f000 fa3a 	bl	802ddcc <raise>
 802d958:	2001      	movs	r0, #1
 802d95a:	f7d4 ffa1 	bl	80028a0 <_exit>
	...

0802d960 <__assert_func>:
 802d960:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802d962:	4614      	mov	r4, r2
 802d964:	461a      	mov	r2, r3
 802d966:	4b09      	ldr	r3, [pc, #36]	; (802d98c <__assert_func+0x2c>)
 802d968:	681b      	ldr	r3, [r3, #0]
 802d96a:	4605      	mov	r5, r0
 802d96c:	68d8      	ldr	r0, [r3, #12]
 802d96e:	b14c      	cbz	r4, 802d984 <__assert_func+0x24>
 802d970:	4b07      	ldr	r3, [pc, #28]	; (802d990 <__assert_func+0x30>)
 802d972:	9100      	str	r1, [sp, #0]
 802d974:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802d978:	4906      	ldr	r1, [pc, #24]	; (802d994 <__assert_func+0x34>)
 802d97a:	462b      	mov	r3, r5
 802d97c:	f000 f982 	bl	802dc84 <fiprintf>
 802d980:	f7ff ffe6 	bl	802d950 <abort>
 802d984:	4b04      	ldr	r3, [pc, #16]	; (802d998 <__assert_func+0x38>)
 802d986:	461c      	mov	r4, r3
 802d988:	e7f3      	b.n	802d972 <__assert_func+0x12>
 802d98a:	bf00      	nop
 802d98c:	20000164 	.word	0x20000164
 802d990:	08045bf4 	.word	0x08045bf4
 802d994:	08045c01 	.word	0x08045c01
 802d998:	08045c2f 	.word	0x08045c2f

0802d99c <atexit>:
 802d99c:	2300      	movs	r3, #0
 802d99e:	4601      	mov	r1, r0
 802d9a0:	461a      	mov	r2, r3
 802d9a2:	4618      	mov	r0, r3
 802d9a4:	f000 bb16 	b.w	802dfd4 <__register_exitproc>

0802d9a8 <malloc>:
 802d9a8:	4b02      	ldr	r3, [pc, #8]	; (802d9b4 <malloc+0xc>)
 802d9aa:	4601      	mov	r1, r0
 802d9ac:	6818      	ldr	r0, [r3, #0]
 802d9ae:	f000 b82b 	b.w	802da08 <_malloc_r>
 802d9b2:	bf00      	nop
 802d9b4:	20000164 	.word	0x20000164

0802d9b8 <free>:
 802d9b8:	4b02      	ldr	r3, [pc, #8]	; (802d9c4 <free+0xc>)
 802d9ba:	4601      	mov	r1, r0
 802d9bc:	6818      	ldr	r0, [r3, #0]
 802d9be:	f000 bb67 	b.w	802e090 <_free_r>
 802d9c2:	bf00      	nop
 802d9c4:	20000164 	.word	0x20000164

0802d9c8 <sbrk_aligned>:
 802d9c8:	b570      	push	{r4, r5, r6, lr}
 802d9ca:	4e0e      	ldr	r6, [pc, #56]	; (802da04 <sbrk_aligned+0x3c>)
 802d9cc:	460c      	mov	r4, r1
 802d9ce:	6831      	ldr	r1, [r6, #0]
 802d9d0:	4605      	mov	r5, r0
 802d9d2:	b911      	cbnz	r1, 802d9da <sbrk_aligned+0x12>
 802d9d4:	f000 faa0 	bl	802df18 <_sbrk_r>
 802d9d8:	6030      	str	r0, [r6, #0]
 802d9da:	4621      	mov	r1, r4
 802d9dc:	4628      	mov	r0, r5
 802d9de:	f000 fa9b 	bl	802df18 <_sbrk_r>
 802d9e2:	1c43      	adds	r3, r0, #1
 802d9e4:	d00a      	beq.n	802d9fc <sbrk_aligned+0x34>
 802d9e6:	1cc4      	adds	r4, r0, #3
 802d9e8:	f024 0403 	bic.w	r4, r4, #3
 802d9ec:	42a0      	cmp	r0, r4
 802d9ee:	d007      	beq.n	802da00 <sbrk_aligned+0x38>
 802d9f0:	1a21      	subs	r1, r4, r0
 802d9f2:	4628      	mov	r0, r5
 802d9f4:	f000 fa90 	bl	802df18 <_sbrk_r>
 802d9f8:	3001      	adds	r0, #1
 802d9fa:	d101      	bne.n	802da00 <sbrk_aligned+0x38>
 802d9fc:	f04f 34ff 	mov.w	r4, #4294967295
 802da00:	4620      	mov	r0, r4
 802da02:	bd70      	pop	{r4, r5, r6, pc}
 802da04:	20014194 	.word	0x20014194

0802da08 <_malloc_r>:
 802da08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802da0c:	1ccd      	adds	r5, r1, #3
 802da0e:	f025 0503 	bic.w	r5, r5, #3
 802da12:	3508      	adds	r5, #8
 802da14:	2d0c      	cmp	r5, #12
 802da16:	bf38      	it	cc
 802da18:	250c      	movcc	r5, #12
 802da1a:	2d00      	cmp	r5, #0
 802da1c:	4607      	mov	r7, r0
 802da1e:	db01      	blt.n	802da24 <_malloc_r+0x1c>
 802da20:	42a9      	cmp	r1, r5
 802da22:	d905      	bls.n	802da30 <_malloc_r+0x28>
 802da24:	230c      	movs	r3, #12
 802da26:	603b      	str	r3, [r7, #0]
 802da28:	2600      	movs	r6, #0
 802da2a:	4630      	mov	r0, r6
 802da2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802da30:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802db04 <_malloc_r+0xfc>
 802da34:	f000 f868 	bl	802db08 <__malloc_lock>
 802da38:	f8d8 3000 	ldr.w	r3, [r8]
 802da3c:	461c      	mov	r4, r3
 802da3e:	bb5c      	cbnz	r4, 802da98 <_malloc_r+0x90>
 802da40:	4629      	mov	r1, r5
 802da42:	4638      	mov	r0, r7
 802da44:	f7ff ffc0 	bl	802d9c8 <sbrk_aligned>
 802da48:	1c43      	adds	r3, r0, #1
 802da4a:	4604      	mov	r4, r0
 802da4c:	d155      	bne.n	802dafa <_malloc_r+0xf2>
 802da4e:	f8d8 4000 	ldr.w	r4, [r8]
 802da52:	4626      	mov	r6, r4
 802da54:	2e00      	cmp	r6, #0
 802da56:	d145      	bne.n	802dae4 <_malloc_r+0xdc>
 802da58:	2c00      	cmp	r4, #0
 802da5a:	d048      	beq.n	802daee <_malloc_r+0xe6>
 802da5c:	6823      	ldr	r3, [r4, #0]
 802da5e:	4631      	mov	r1, r6
 802da60:	4638      	mov	r0, r7
 802da62:	eb04 0903 	add.w	r9, r4, r3
 802da66:	f000 fa57 	bl	802df18 <_sbrk_r>
 802da6a:	4581      	cmp	r9, r0
 802da6c:	d13f      	bne.n	802daee <_malloc_r+0xe6>
 802da6e:	6821      	ldr	r1, [r4, #0]
 802da70:	1a6d      	subs	r5, r5, r1
 802da72:	4629      	mov	r1, r5
 802da74:	4638      	mov	r0, r7
 802da76:	f7ff ffa7 	bl	802d9c8 <sbrk_aligned>
 802da7a:	3001      	adds	r0, #1
 802da7c:	d037      	beq.n	802daee <_malloc_r+0xe6>
 802da7e:	6823      	ldr	r3, [r4, #0]
 802da80:	442b      	add	r3, r5
 802da82:	6023      	str	r3, [r4, #0]
 802da84:	f8d8 3000 	ldr.w	r3, [r8]
 802da88:	2b00      	cmp	r3, #0
 802da8a:	d038      	beq.n	802dafe <_malloc_r+0xf6>
 802da8c:	685a      	ldr	r2, [r3, #4]
 802da8e:	42a2      	cmp	r2, r4
 802da90:	d12b      	bne.n	802daea <_malloc_r+0xe2>
 802da92:	2200      	movs	r2, #0
 802da94:	605a      	str	r2, [r3, #4]
 802da96:	e00f      	b.n	802dab8 <_malloc_r+0xb0>
 802da98:	6822      	ldr	r2, [r4, #0]
 802da9a:	1b52      	subs	r2, r2, r5
 802da9c:	d41f      	bmi.n	802dade <_malloc_r+0xd6>
 802da9e:	2a0b      	cmp	r2, #11
 802daa0:	d917      	bls.n	802dad2 <_malloc_r+0xca>
 802daa2:	1961      	adds	r1, r4, r5
 802daa4:	42a3      	cmp	r3, r4
 802daa6:	6025      	str	r5, [r4, #0]
 802daa8:	bf18      	it	ne
 802daaa:	6059      	strne	r1, [r3, #4]
 802daac:	6863      	ldr	r3, [r4, #4]
 802daae:	bf08      	it	eq
 802dab0:	f8c8 1000 	streq.w	r1, [r8]
 802dab4:	5162      	str	r2, [r4, r5]
 802dab6:	604b      	str	r3, [r1, #4]
 802dab8:	4638      	mov	r0, r7
 802daba:	f104 060b 	add.w	r6, r4, #11
 802dabe:	f000 f829 	bl	802db14 <__malloc_unlock>
 802dac2:	f026 0607 	bic.w	r6, r6, #7
 802dac6:	1d23      	adds	r3, r4, #4
 802dac8:	1af2      	subs	r2, r6, r3
 802daca:	d0ae      	beq.n	802da2a <_malloc_r+0x22>
 802dacc:	1b9b      	subs	r3, r3, r6
 802dace:	50a3      	str	r3, [r4, r2]
 802dad0:	e7ab      	b.n	802da2a <_malloc_r+0x22>
 802dad2:	42a3      	cmp	r3, r4
 802dad4:	6862      	ldr	r2, [r4, #4]
 802dad6:	d1dd      	bne.n	802da94 <_malloc_r+0x8c>
 802dad8:	f8c8 2000 	str.w	r2, [r8]
 802dadc:	e7ec      	b.n	802dab8 <_malloc_r+0xb0>
 802dade:	4623      	mov	r3, r4
 802dae0:	6864      	ldr	r4, [r4, #4]
 802dae2:	e7ac      	b.n	802da3e <_malloc_r+0x36>
 802dae4:	4634      	mov	r4, r6
 802dae6:	6876      	ldr	r6, [r6, #4]
 802dae8:	e7b4      	b.n	802da54 <_malloc_r+0x4c>
 802daea:	4613      	mov	r3, r2
 802daec:	e7cc      	b.n	802da88 <_malloc_r+0x80>
 802daee:	230c      	movs	r3, #12
 802daf0:	603b      	str	r3, [r7, #0]
 802daf2:	4638      	mov	r0, r7
 802daf4:	f000 f80e 	bl	802db14 <__malloc_unlock>
 802daf8:	e797      	b.n	802da2a <_malloc_r+0x22>
 802dafa:	6025      	str	r5, [r4, #0]
 802dafc:	e7dc      	b.n	802dab8 <_malloc_r+0xb0>
 802dafe:	605b      	str	r3, [r3, #4]
 802db00:	deff      	udf	#255	; 0xff
 802db02:	bf00      	nop
 802db04:	20014190 	.word	0x20014190

0802db08 <__malloc_lock>:
 802db08:	4801      	ldr	r0, [pc, #4]	; (802db10 <__malloc_lock+0x8>)
 802db0a:	f000 ba52 	b.w	802dfb2 <__retarget_lock_acquire_recursive>
 802db0e:	bf00      	nop
 802db10:	200142d9 	.word	0x200142d9

0802db14 <__malloc_unlock>:
 802db14:	4801      	ldr	r0, [pc, #4]	; (802db1c <__malloc_unlock+0x8>)
 802db16:	f000 ba4d 	b.w	802dfb4 <__retarget_lock_release_recursive>
 802db1a:	bf00      	nop
 802db1c:	200142d9 	.word	0x200142d9

0802db20 <__cxa_atexit>:
 802db20:	b510      	push	{r4, lr}
 802db22:	4c05      	ldr	r4, [pc, #20]	; (802db38 <__cxa_atexit+0x18>)
 802db24:	4613      	mov	r3, r2
 802db26:	b12c      	cbz	r4, 802db34 <__cxa_atexit+0x14>
 802db28:	460a      	mov	r2, r1
 802db2a:	4601      	mov	r1, r0
 802db2c:	2002      	movs	r0, #2
 802db2e:	f000 fa51 	bl	802dfd4 <__register_exitproc>
 802db32:	bd10      	pop	{r4, pc}
 802db34:	4620      	mov	r0, r4
 802db36:	e7fc      	b.n	802db32 <__cxa_atexit+0x12>
 802db38:	0802dfd5 	.word	0x0802dfd5

0802db3c <std>:
 802db3c:	2300      	movs	r3, #0
 802db3e:	b510      	push	{r4, lr}
 802db40:	4604      	mov	r4, r0
 802db42:	e9c0 3300 	strd	r3, r3, [r0]
 802db46:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802db4a:	6083      	str	r3, [r0, #8]
 802db4c:	8181      	strh	r1, [r0, #12]
 802db4e:	6643      	str	r3, [r0, #100]	; 0x64
 802db50:	81c2      	strh	r2, [r0, #14]
 802db52:	6183      	str	r3, [r0, #24]
 802db54:	4619      	mov	r1, r3
 802db56:	2208      	movs	r2, #8
 802db58:	305c      	adds	r0, #92	; 0x5c
 802db5a:	f000 f906 	bl	802dd6a <memset>
 802db5e:	4b0d      	ldr	r3, [pc, #52]	; (802db94 <std+0x58>)
 802db60:	6263      	str	r3, [r4, #36]	; 0x24
 802db62:	4b0d      	ldr	r3, [pc, #52]	; (802db98 <std+0x5c>)
 802db64:	62a3      	str	r3, [r4, #40]	; 0x28
 802db66:	4b0d      	ldr	r3, [pc, #52]	; (802db9c <std+0x60>)
 802db68:	62e3      	str	r3, [r4, #44]	; 0x2c
 802db6a:	4b0d      	ldr	r3, [pc, #52]	; (802dba0 <std+0x64>)
 802db6c:	6323      	str	r3, [r4, #48]	; 0x30
 802db6e:	4b0d      	ldr	r3, [pc, #52]	; (802dba4 <std+0x68>)
 802db70:	6224      	str	r4, [r4, #32]
 802db72:	429c      	cmp	r4, r3
 802db74:	d006      	beq.n	802db84 <std+0x48>
 802db76:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802db7a:	4294      	cmp	r4, r2
 802db7c:	d002      	beq.n	802db84 <std+0x48>
 802db7e:	33d0      	adds	r3, #208	; 0xd0
 802db80:	429c      	cmp	r4, r3
 802db82:	d105      	bne.n	802db90 <std+0x54>
 802db84:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802db88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802db8c:	f000 ba10 	b.w	802dfb0 <__retarget_lock_init_recursive>
 802db90:	bd10      	pop	{r4, pc}
 802db92:	bf00      	nop
 802db94:	0802dce5 	.word	0x0802dce5
 802db98:	0802dd07 	.word	0x0802dd07
 802db9c:	0802dd3f 	.word	0x0802dd3f
 802dba0:	0802dd63 	.word	0x0802dd63
 802dba4:	20014198 	.word	0x20014198

0802dba8 <stdio_exit_handler>:
 802dba8:	4a02      	ldr	r2, [pc, #8]	; (802dbb4 <stdio_exit_handler+0xc>)
 802dbaa:	4903      	ldr	r1, [pc, #12]	; (802dbb8 <stdio_exit_handler+0x10>)
 802dbac:	4803      	ldr	r0, [pc, #12]	; (802dbbc <stdio_exit_handler+0x14>)
 802dbae:	f000 b87b 	b.w	802dca8 <_fwalk_sglue>
 802dbb2:	bf00      	nop
 802dbb4:	2000010c 	.word	0x2000010c
 802dbb8:	0802e7dd 	.word	0x0802e7dd
 802dbbc:	20000118 	.word	0x20000118

0802dbc0 <cleanup_stdio>:
 802dbc0:	6841      	ldr	r1, [r0, #4]
 802dbc2:	4b0c      	ldr	r3, [pc, #48]	; (802dbf4 <cleanup_stdio+0x34>)
 802dbc4:	4299      	cmp	r1, r3
 802dbc6:	b510      	push	{r4, lr}
 802dbc8:	4604      	mov	r4, r0
 802dbca:	d001      	beq.n	802dbd0 <cleanup_stdio+0x10>
 802dbcc:	f000 fe06 	bl	802e7dc <_fflush_r>
 802dbd0:	68a1      	ldr	r1, [r4, #8]
 802dbd2:	4b09      	ldr	r3, [pc, #36]	; (802dbf8 <cleanup_stdio+0x38>)
 802dbd4:	4299      	cmp	r1, r3
 802dbd6:	d002      	beq.n	802dbde <cleanup_stdio+0x1e>
 802dbd8:	4620      	mov	r0, r4
 802dbda:	f000 fdff 	bl	802e7dc <_fflush_r>
 802dbde:	68e1      	ldr	r1, [r4, #12]
 802dbe0:	4b06      	ldr	r3, [pc, #24]	; (802dbfc <cleanup_stdio+0x3c>)
 802dbe2:	4299      	cmp	r1, r3
 802dbe4:	d004      	beq.n	802dbf0 <cleanup_stdio+0x30>
 802dbe6:	4620      	mov	r0, r4
 802dbe8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dbec:	f000 bdf6 	b.w	802e7dc <_fflush_r>
 802dbf0:	bd10      	pop	{r4, pc}
 802dbf2:	bf00      	nop
 802dbf4:	20014198 	.word	0x20014198
 802dbf8:	20014200 	.word	0x20014200
 802dbfc:	20014268 	.word	0x20014268

0802dc00 <global_stdio_init.part.0>:
 802dc00:	b510      	push	{r4, lr}
 802dc02:	4b0b      	ldr	r3, [pc, #44]	; (802dc30 <global_stdio_init.part.0+0x30>)
 802dc04:	4c0b      	ldr	r4, [pc, #44]	; (802dc34 <global_stdio_init.part.0+0x34>)
 802dc06:	4a0c      	ldr	r2, [pc, #48]	; (802dc38 <global_stdio_init.part.0+0x38>)
 802dc08:	601a      	str	r2, [r3, #0]
 802dc0a:	4620      	mov	r0, r4
 802dc0c:	2200      	movs	r2, #0
 802dc0e:	2104      	movs	r1, #4
 802dc10:	f7ff ff94 	bl	802db3c <std>
 802dc14:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802dc18:	2201      	movs	r2, #1
 802dc1a:	2109      	movs	r1, #9
 802dc1c:	f7ff ff8e 	bl	802db3c <std>
 802dc20:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802dc24:	2202      	movs	r2, #2
 802dc26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dc2a:	2112      	movs	r1, #18
 802dc2c:	f7ff bf86 	b.w	802db3c <std>
 802dc30:	200142d0 	.word	0x200142d0
 802dc34:	20014198 	.word	0x20014198
 802dc38:	0802dba9 	.word	0x0802dba9

0802dc3c <__sfp_lock_acquire>:
 802dc3c:	4801      	ldr	r0, [pc, #4]	; (802dc44 <__sfp_lock_acquire+0x8>)
 802dc3e:	f000 b9b8 	b.w	802dfb2 <__retarget_lock_acquire_recursive>
 802dc42:	bf00      	nop
 802dc44:	200142da 	.word	0x200142da

0802dc48 <__sfp_lock_release>:
 802dc48:	4801      	ldr	r0, [pc, #4]	; (802dc50 <__sfp_lock_release+0x8>)
 802dc4a:	f000 b9b3 	b.w	802dfb4 <__retarget_lock_release_recursive>
 802dc4e:	bf00      	nop
 802dc50:	200142da 	.word	0x200142da

0802dc54 <__sinit>:
 802dc54:	b510      	push	{r4, lr}
 802dc56:	4604      	mov	r4, r0
 802dc58:	f7ff fff0 	bl	802dc3c <__sfp_lock_acquire>
 802dc5c:	6a23      	ldr	r3, [r4, #32]
 802dc5e:	b11b      	cbz	r3, 802dc68 <__sinit+0x14>
 802dc60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dc64:	f7ff bff0 	b.w	802dc48 <__sfp_lock_release>
 802dc68:	4b04      	ldr	r3, [pc, #16]	; (802dc7c <__sinit+0x28>)
 802dc6a:	6223      	str	r3, [r4, #32]
 802dc6c:	4b04      	ldr	r3, [pc, #16]	; (802dc80 <__sinit+0x2c>)
 802dc6e:	681b      	ldr	r3, [r3, #0]
 802dc70:	2b00      	cmp	r3, #0
 802dc72:	d1f5      	bne.n	802dc60 <__sinit+0xc>
 802dc74:	f7ff ffc4 	bl	802dc00 <global_stdio_init.part.0>
 802dc78:	e7f2      	b.n	802dc60 <__sinit+0xc>
 802dc7a:	bf00      	nop
 802dc7c:	0802dbc1 	.word	0x0802dbc1
 802dc80:	200142d0 	.word	0x200142d0

0802dc84 <fiprintf>:
 802dc84:	b40e      	push	{r1, r2, r3}
 802dc86:	b503      	push	{r0, r1, lr}
 802dc88:	4601      	mov	r1, r0
 802dc8a:	ab03      	add	r3, sp, #12
 802dc8c:	4805      	ldr	r0, [pc, #20]	; (802dca4 <fiprintf+0x20>)
 802dc8e:	f853 2b04 	ldr.w	r2, [r3], #4
 802dc92:	6800      	ldr	r0, [r0, #0]
 802dc94:	9301      	str	r3, [sp, #4]
 802dc96:	f000 fa71 	bl	802e17c <_vfiprintf_r>
 802dc9a:	b002      	add	sp, #8
 802dc9c:	f85d eb04 	ldr.w	lr, [sp], #4
 802dca0:	b003      	add	sp, #12
 802dca2:	4770      	bx	lr
 802dca4:	20000164 	.word	0x20000164

0802dca8 <_fwalk_sglue>:
 802dca8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dcac:	4607      	mov	r7, r0
 802dcae:	4688      	mov	r8, r1
 802dcb0:	4614      	mov	r4, r2
 802dcb2:	2600      	movs	r6, #0
 802dcb4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802dcb8:	f1b9 0901 	subs.w	r9, r9, #1
 802dcbc:	d505      	bpl.n	802dcca <_fwalk_sglue+0x22>
 802dcbe:	6824      	ldr	r4, [r4, #0]
 802dcc0:	2c00      	cmp	r4, #0
 802dcc2:	d1f7      	bne.n	802dcb4 <_fwalk_sglue+0xc>
 802dcc4:	4630      	mov	r0, r6
 802dcc6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802dcca:	89ab      	ldrh	r3, [r5, #12]
 802dccc:	2b01      	cmp	r3, #1
 802dcce:	d907      	bls.n	802dce0 <_fwalk_sglue+0x38>
 802dcd0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802dcd4:	3301      	adds	r3, #1
 802dcd6:	d003      	beq.n	802dce0 <_fwalk_sglue+0x38>
 802dcd8:	4629      	mov	r1, r5
 802dcda:	4638      	mov	r0, r7
 802dcdc:	47c0      	blx	r8
 802dcde:	4306      	orrs	r6, r0
 802dce0:	3568      	adds	r5, #104	; 0x68
 802dce2:	e7e9      	b.n	802dcb8 <_fwalk_sglue+0x10>

0802dce4 <__sread>:
 802dce4:	b510      	push	{r4, lr}
 802dce6:	460c      	mov	r4, r1
 802dce8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dcec:	f000 f8ee 	bl	802decc <_read_r>
 802dcf0:	2800      	cmp	r0, #0
 802dcf2:	bfab      	itete	ge
 802dcf4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802dcf6:	89a3      	ldrhlt	r3, [r4, #12]
 802dcf8:	181b      	addge	r3, r3, r0
 802dcfa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802dcfe:	bfac      	ite	ge
 802dd00:	6563      	strge	r3, [r4, #84]	; 0x54
 802dd02:	81a3      	strhlt	r3, [r4, #12]
 802dd04:	bd10      	pop	{r4, pc}

0802dd06 <__swrite>:
 802dd06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802dd0a:	461f      	mov	r7, r3
 802dd0c:	898b      	ldrh	r3, [r1, #12]
 802dd0e:	05db      	lsls	r3, r3, #23
 802dd10:	4605      	mov	r5, r0
 802dd12:	460c      	mov	r4, r1
 802dd14:	4616      	mov	r6, r2
 802dd16:	d505      	bpl.n	802dd24 <__swrite+0x1e>
 802dd18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dd1c:	2302      	movs	r3, #2
 802dd1e:	2200      	movs	r2, #0
 802dd20:	f000 f8c2 	bl	802dea8 <_lseek_r>
 802dd24:	89a3      	ldrh	r3, [r4, #12]
 802dd26:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802dd2a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802dd2e:	81a3      	strh	r3, [r4, #12]
 802dd30:	4632      	mov	r2, r6
 802dd32:	463b      	mov	r3, r7
 802dd34:	4628      	mov	r0, r5
 802dd36:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802dd3a:	f000 b8fd 	b.w	802df38 <_write_r>

0802dd3e <__sseek>:
 802dd3e:	b510      	push	{r4, lr}
 802dd40:	460c      	mov	r4, r1
 802dd42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dd46:	f000 f8af 	bl	802dea8 <_lseek_r>
 802dd4a:	1c43      	adds	r3, r0, #1
 802dd4c:	89a3      	ldrh	r3, [r4, #12]
 802dd4e:	bf15      	itete	ne
 802dd50:	6560      	strne	r0, [r4, #84]	; 0x54
 802dd52:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802dd56:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802dd5a:	81a3      	strheq	r3, [r4, #12]
 802dd5c:	bf18      	it	ne
 802dd5e:	81a3      	strhne	r3, [r4, #12]
 802dd60:	bd10      	pop	{r4, pc}

0802dd62 <__sclose>:
 802dd62:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dd66:	f000 b839 	b.w	802dddc <_close_r>

0802dd6a <memset>:
 802dd6a:	4402      	add	r2, r0
 802dd6c:	4603      	mov	r3, r0
 802dd6e:	4293      	cmp	r3, r2
 802dd70:	d100      	bne.n	802dd74 <memset+0xa>
 802dd72:	4770      	bx	lr
 802dd74:	f803 1b01 	strb.w	r1, [r3], #1
 802dd78:	e7f9      	b.n	802dd6e <memset+0x4>

0802dd7a <_raise_r>:
 802dd7a:	291f      	cmp	r1, #31
 802dd7c:	b538      	push	{r3, r4, r5, lr}
 802dd7e:	4604      	mov	r4, r0
 802dd80:	460d      	mov	r5, r1
 802dd82:	d904      	bls.n	802dd8e <_raise_r+0x14>
 802dd84:	2316      	movs	r3, #22
 802dd86:	6003      	str	r3, [r0, #0]
 802dd88:	f04f 30ff 	mov.w	r0, #4294967295
 802dd8c:	bd38      	pop	{r3, r4, r5, pc}
 802dd8e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802dd90:	b112      	cbz	r2, 802dd98 <_raise_r+0x1e>
 802dd92:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802dd96:	b94b      	cbnz	r3, 802ddac <_raise_r+0x32>
 802dd98:	4620      	mov	r0, r4
 802dd9a:	f000 f8bb 	bl	802df14 <_getpid_r>
 802dd9e:	462a      	mov	r2, r5
 802dda0:	4601      	mov	r1, r0
 802dda2:	4620      	mov	r0, r4
 802dda4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802dda8:	f000 b8a2 	b.w	802def0 <_kill_r>
 802ddac:	2b01      	cmp	r3, #1
 802ddae:	d00a      	beq.n	802ddc6 <_raise_r+0x4c>
 802ddb0:	1c59      	adds	r1, r3, #1
 802ddb2:	d103      	bne.n	802ddbc <_raise_r+0x42>
 802ddb4:	2316      	movs	r3, #22
 802ddb6:	6003      	str	r3, [r0, #0]
 802ddb8:	2001      	movs	r0, #1
 802ddba:	e7e7      	b.n	802dd8c <_raise_r+0x12>
 802ddbc:	2400      	movs	r4, #0
 802ddbe:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802ddc2:	4628      	mov	r0, r5
 802ddc4:	4798      	blx	r3
 802ddc6:	2000      	movs	r0, #0
 802ddc8:	e7e0      	b.n	802dd8c <_raise_r+0x12>
	...

0802ddcc <raise>:
 802ddcc:	4b02      	ldr	r3, [pc, #8]	; (802ddd8 <raise+0xc>)
 802ddce:	4601      	mov	r1, r0
 802ddd0:	6818      	ldr	r0, [r3, #0]
 802ddd2:	f7ff bfd2 	b.w	802dd7a <_raise_r>
 802ddd6:	bf00      	nop
 802ddd8:	20000164 	.word	0x20000164

0802dddc <_close_r>:
 802dddc:	b538      	push	{r3, r4, r5, lr}
 802ddde:	4d06      	ldr	r5, [pc, #24]	; (802ddf8 <_close_r+0x1c>)
 802dde0:	2300      	movs	r3, #0
 802dde2:	4604      	mov	r4, r0
 802dde4:	4608      	mov	r0, r1
 802dde6:	602b      	str	r3, [r5, #0]
 802dde8:	f7d4 fd7c 	bl	80028e4 <_close>
 802ddec:	1c43      	adds	r3, r0, #1
 802ddee:	d102      	bne.n	802ddf6 <_close_r+0x1a>
 802ddf0:	682b      	ldr	r3, [r5, #0]
 802ddf2:	b103      	cbz	r3, 802ddf6 <_close_r+0x1a>
 802ddf4:	6023      	str	r3, [r4, #0]
 802ddf6:	bd38      	pop	{r3, r4, r5, pc}
 802ddf8:	200142d4 	.word	0x200142d4

0802ddfc <_reclaim_reent>:
 802ddfc:	4b29      	ldr	r3, [pc, #164]	; (802dea4 <_reclaim_reent+0xa8>)
 802ddfe:	681b      	ldr	r3, [r3, #0]
 802de00:	4283      	cmp	r3, r0
 802de02:	b570      	push	{r4, r5, r6, lr}
 802de04:	4604      	mov	r4, r0
 802de06:	d04b      	beq.n	802dea0 <_reclaim_reent+0xa4>
 802de08:	69c3      	ldr	r3, [r0, #28]
 802de0a:	b143      	cbz	r3, 802de1e <_reclaim_reent+0x22>
 802de0c:	68db      	ldr	r3, [r3, #12]
 802de0e:	2b00      	cmp	r3, #0
 802de10:	d144      	bne.n	802de9c <_reclaim_reent+0xa0>
 802de12:	69e3      	ldr	r3, [r4, #28]
 802de14:	6819      	ldr	r1, [r3, #0]
 802de16:	b111      	cbz	r1, 802de1e <_reclaim_reent+0x22>
 802de18:	4620      	mov	r0, r4
 802de1a:	f000 f939 	bl	802e090 <_free_r>
 802de1e:	6961      	ldr	r1, [r4, #20]
 802de20:	b111      	cbz	r1, 802de28 <_reclaim_reent+0x2c>
 802de22:	4620      	mov	r0, r4
 802de24:	f000 f934 	bl	802e090 <_free_r>
 802de28:	69e1      	ldr	r1, [r4, #28]
 802de2a:	b111      	cbz	r1, 802de32 <_reclaim_reent+0x36>
 802de2c:	4620      	mov	r0, r4
 802de2e:	f000 f92f 	bl	802e090 <_free_r>
 802de32:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802de34:	b111      	cbz	r1, 802de3c <_reclaim_reent+0x40>
 802de36:	4620      	mov	r0, r4
 802de38:	f000 f92a 	bl	802e090 <_free_r>
 802de3c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802de3e:	b111      	cbz	r1, 802de46 <_reclaim_reent+0x4a>
 802de40:	4620      	mov	r0, r4
 802de42:	f000 f925 	bl	802e090 <_free_r>
 802de46:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802de48:	b111      	cbz	r1, 802de50 <_reclaim_reent+0x54>
 802de4a:	4620      	mov	r0, r4
 802de4c:	f000 f920 	bl	802e090 <_free_r>
 802de50:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802de52:	b111      	cbz	r1, 802de5a <_reclaim_reent+0x5e>
 802de54:	4620      	mov	r0, r4
 802de56:	f000 f91b 	bl	802e090 <_free_r>
 802de5a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802de5c:	b111      	cbz	r1, 802de64 <_reclaim_reent+0x68>
 802de5e:	4620      	mov	r0, r4
 802de60:	f000 f916 	bl	802e090 <_free_r>
 802de64:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802de66:	b111      	cbz	r1, 802de6e <_reclaim_reent+0x72>
 802de68:	4620      	mov	r0, r4
 802de6a:	f000 f911 	bl	802e090 <_free_r>
 802de6e:	6a23      	ldr	r3, [r4, #32]
 802de70:	b1b3      	cbz	r3, 802dea0 <_reclaim_reent+0xa4>
 802de72:	4620      	mov	r0, r4
 802de74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802de78:	4718      	bx	r3
 802de7a:	5949      	ldr	r1, [r1, r5]
 802de7c:	b941      	cbnz	r1, 802de90 <_reclaim_reent+0x94>
 802de7e:	3504      	adds	r5, #4
 802de80:	69e3      	ldr	r3, [r4, #28]
 802de82:	2d80      	cmp	r5, #128	; 0x80
 802de84:	68d9      	ldr	r1, [r3, #12]
 802de86:	d1f8      	bne.n	802de7a <_reclaim_reent+0x7e>
 802de88:	4620      	mov	r0, r4
 802de8a:	f000 f901 	bl	802e090 <_free_r>
 802de8e:	e7c0      	b.n	802de12 <_reclaim_reent+0x16>
 802de90:	680e      	ldr	r6, [r1, #0]
 802de92:	4620      	mov	r0, r4
 802de94:	f000 f8fc 	bl	802e090 <_free_r>
 802de98:	4631      	mov	r1, r6
 802de9a:	e7ef      	b.n	802de7c <_reclaim_reent+0x80>
 802de9c:	2500      	movs	r5, #0
 802de9e:	e7ef      	b.n	802de80 <_reclaim_reent+0x84>
 802dea0:	bd70      	pop	{r4, r5, r6, pc}
 802dea2:	bf00      	nop
 802dea4:	20000164 	.word	0x20000164

0802dea8 <_lseek_r>:
 802dea8:	b538      	push	{r3, r4, r5, lr}
 802deaa:	4d07      	ldr	r5, [pc, #28]	; (802dec8 <_lseek_r+0x20>)
 802deac:	4604      	mov	r4, r0
 802deae:	4608      	mov	r0, r1
 802deb0:	4611      	mov	r1, r2
 802deb2:	2200      	movs	r2, #0
 802deb4:	602a      	str	r2, [r5, #0]
 802deb6:	461a      	mov	r2, r3
 802deb8:	f7d4 fd20 	bl	80028fc <_lseek>
 802debc:	1c43      	adds	r3, r0, #1
 802debe:	d102      	bne.n	802dec6 <_lseek_r+0x1e>
 802dec0:	682b      	ldr	r3, [r5, #0]
 802dec2:	b103      	cbz	r3, 802dec6 <_lseek_r+0x1e>
 802dec4:	6023      	str	r3, [r4, #0]
 802dec6:	bd38      	pop	{r3, r4, r5, pc}
 802dec8:	200142d4 	.word	0x200142d4

0802decc <_read_r>:
 802decc:	b538      	push	{r3, r4, r5, lr}
 802dece:	4d07      	ldr	r5, [pc, #28]	; (802deec <_read_r+0x20>)
 802ded0:	4604      	mov	r4, r0
 802ded2:	4608      	mov	r0, r1
 802ded4:	4611      	mov	r1, r2
 802ded6:	2200      	movs	r2, #0
 802ded8:	602a      	str	r2, [r5, #0]
 802deda:	461a      	mov	r2, r3
 802dedc:	f7d4 fce6 	bl	80028ac <_read>
 802dee0:	1c43      	adds	r3, r0, #1
 802dee2:	d102      	bne.n	802deea <_read_r+0x1e>
 802dee4:	682b      	ldr	r3, [r5, #0]
 802dee6:	b103      	cbz	r3, 802deea <_read_r+0x1e>
 802dee8:	6023      	str	r3, [r4, #0]
 802deea:	bd38      	pop	{r3, r4, r5, pc}
 802deec:	200142d4 	.word	0x200142d4

0802def0 <_kill_r>:
 802def0:	b538      	push	{r3, r4, r5, lr}
 802def2:	4d07      	ldr	r5, [pc, #28]	; (802df10 <_kill_r+0x20>)
 802def4:	2300      	movs	r3, #0
 802def6:	4604      	mov	r4, r0
 802def8:	4608      	mov	r0, r1
 802defa:	4611      	mov	r1, r2
 802defc:	602b      	str	r3, [r5, #0]
 802defe:	f7d4 fcc7 	bl	8002890 <_kill>
 802df02:	1c43      	adds	r3, r0, #1
 802df04:	d102      	bne.n	802df0c <_kill_r+0x1c>
 802df06:	682b      	ldr	r3, [r5, #0]
 802df08:	b103      	cbz	r3, 802df0c <_kill_r+0x1c>
 802df0a:	6023      	str	r3, [r4, #0]
 802df0c:	bd38      	pop	{r3, r4, r5, pc}
 802df0e:	bf00      	nop
 802df10:	200142d4 	.word	0x200142d4

0802df14 <_getpid_r>:
 802df14:	f7d4 bcba 	b.w	800288c <_getpid>

0802df18 <_sbrk_r>:
 802df18:	b538      	push	{r3, r4, r5, lr}
 802df1a:	4d06      	ldr	r5, [pc, #24]	; (802df34 <_sbrk_r+0x1c>)
 802df1c:	2300      	movs	r3, #0
 802df1e:	4604      	mov	r4, r0
 802df20:	4608      	mov	r0, r1
 802df22:	602b      	str	r3, [r5, #0]
 802df24:	f7d4 fcec 	bl	8002900 <_sbrk>
 802df28:	1c43      	adds	r3, r0, #1
 802df2a:	d102      	bne.n	802df32 <_sbrk_r+0x1a>
 802df2c:	682b      	ldr	r3, [r5, #0]
 802df2e:	b103      	cbz	r3, 802df32 <_sbrk_r+0x1a>
 802df30:	6023      	str	r3, [r4, #0]
 802df32:	bd38      	pop	{r3, r4, r5, pc}
 802df34:	200142d4 	.word	0x200142d4

0802df38 <_write_r>:
 802df38:	b538      	push	{r3, r4, r5, lr}
 802df3a:	4d07      	ldr	r5, [pc, #28]	; (802df58 <_write_r+0x20>)
 802df3c:	4604      	mov	r4, r0
 802df3e:	4608      	mov	r0, r1
 802df40:	4611      	mov	r1, r2
 802df42:	2200      	movs	r2, #0
 802df44:	602a      	str	r2, [r5, #0]
 802df46:	461a      	mov	r2, r3
 802df48:	f7d4 fcbe 	bl	80028c8 <_write>
 802df4c:	1c43      	adds	r3, r0, #1
 802df4e:	d102      	bne.n	802df56 <_write_r+0x1e>
 802df50:	682b      	ldr	r3, [r5, #0]
 802df52:	b103      	cbz	r3, 802df56 <_write_r+0x1e>
 802df54:	6023      	str	r3, [r4, #0]
 802df56:	bd38      	pop	{r3, r4, r5, pc}
 802df58:	200142d4 	.word	0x200142d4

0802df5c <__errno>:
 802df5c:	4b01      	ldr	r3, [pc, #4]	; (802df64 <__errno+0x8>)
 802df5e:	6818      	ldr	r0, [r3, #0]
 802df60:	4770      	bx	lr
 802df62:	bf00      	nop
 802df64:	20000164 	.word	0x20000164

0802df68 <__libc_init_array>:
 802df68:	b570      	push	{r4, r5, r6, lr}
 802df6a:	4d0d      	ldr	r5, [pc, #52]	; (802dfa0 <__libc_init_array+0x38>)
 802df6c:	4c0d      	ldr	r4, [pc, #52]	; (802dfa4 <__libc_init_array+0x3c>)
 802df6e:	1b64      	subs	r4, r4, r5
 802df70:	10a4      	asrs	r4, r4, #2
 802df72:	2600      	movs	r6, #0
 802df74:	42a6      	cmp	r6, r4
 802df76:	d109      	bne.n	802df8c <__libc_init_array+0x24>
 802df78:	4d0b      	ldr	r5, [pc, #44]	; (802dfa8 <__libc_init_array+0x40>)
 802df7a:	4c0c      	ldr	r4, [pc, #48]	; (802dfac <__libc_init_array+0x44>)
 802df7c:	f000 fd70 	bl	802ea60 <_init>
 802df80:	1b64      	subs	r4, r4, r5
 802df82:	10a4      	asrs	r4, r4, #2
 802df84:	2600      	movs	r6, #0
 802df86:	42a6      	cmp	r6, r4
 802df88:	d105      	bne.n	802df96 <__libc_init_array+0x2e>
 802df8a:	bd70      	pop	{r4, r5, r6, pc}
 802df8c:	f855 3b04 	ldr.w	r3, [r5], #4
 802df90:	4798      	blx	r3
 802df92:	3601      	adds	r6, #1
 802df94:	e7ee      	b.n	802df74 <__libc_init_array+0xc>
 802df96:	f855 3b04 	ldr.w	r3, [r5], #4
 802df9a:	4798      	blx	r3
 802df9c:	3601      	adds	r6, #1
 802df9e:	e7f2      	b.n	802df86 <__libc_init_array+0x1e>
 802dfa0:	080cf3d8 	.word	0x080cf3d8
 802dfa4:	080cf3d8 	.word	0x080cf3d8
 802dfa8:	080cf3d8 	.word	0x080cf3d8
 802dfac:	080cf3ec 	.word	0x080cf3ec

0802dfb0 <__retarget_lock_init_recursive>:
 802dfb0:	4770      	bx	lr

0802dfb2 <__retarget_lock_acquire_recursive>:
 802dfb2:	4770      	bx	lr

0802dfb4 <__retarget_lock_release_recursive>:
 802dfb4:	4770      	bx	lr

0802dfb6 <memcpy>:
 802dfb6:	440a      	add	r2, r1
 802dfb8:	4291      	cmp	r1, r2
 802dfba:	f100 33ff 	add.w	r3, r0, #4294967295
 802dfbe:	d100      	bne.n	802dfc2 <memcpy+0xc>
 802dfc0:	4770      	bx	lr
 802dfc2:	b510      	push	{r4, lr}
 802dfc4:	f811 4b01 	ldrb.w	r4, [r1], #1
 802dfc8:	f803 4f01 	strb.w	r4, [r3, #1]!
 802dfcc:	4291      	cmp	r1, r2
 802dfce:	d1f9      	bne.n	802dfc4 <memcpy+0xe>
 802dfd0:	bd10      	pop	{r4, pc}
	...

0802dfd4 <__register_exitproc>:
 802dfd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dfd8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802e08c <__register_exitproc+0xb8>
 802dfdc:	4606      	mov	r6, r0
 802dfde:	f8d8 0000 	ldr.w	r0, [r8]
 802dfe2:	461f      	mov	r7, r3
 802dfe4:	460d      	mov	r5, r1
 802dfe6:	4691      	mov	r9, r2
 802dfe8:	f7ff ffe3 	bl	802dfb2 <__retarget_lock_acquire_recursive>
 802dfec:	4b23      	ldr	r3, [pc, #140]	; (802e07c <__register_exitproc+0xa8>)
 802dfee:	681c      	ldr	r4, [r3, #0]
 802dff0:	b934      	cbnz	r4, 802e000 <__register_exitproc+0x2c>
 802dff2:	4c23      	ldr	r4, [pc, #140]	; (802e080 <__register_exitproc+0xac>)
 802dff4:	601c      	str	r4, [r3, #0]
 802dff6:	4b23      	ldr	r3, [pc, #140]	; (802e084 <__register_exitproc+0xb0>)
 802dff8:	b113      	cbz	r3, 802e000 <__register_exitproc+0x2c>
 802dffa:	681b      	ldr	r3, [r3, #0]
 802dffc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802e000:	6863      	ldr	r3, [r4, #4]
 802e002:	2b1f      	cmp	r3, #31
 802e004:	dd07      	ble.n	802e016 <__register_exitproc+0x42>
 802e006:	f8d8 0000 	ldr.w	r0, [r8]
 802e00a:	f7ff ffd3 	bl	802dfb4 <__retarget_lock_release_recursive>
 802e00e:	f04f 30ff 	mov.w	r0, #4294967295
 802e012:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e016:	b32e      	cbz	r6, 802e064 <__register_exitproc+0x90>
 802e018:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802e01c:	b968      	cbnz	r0, 802e03a <__register_exitproc+0x66>
 802e01e:	4b1a      	ldr	r3, [pc, #104]	; (802e088 <__register_exitproc+0xb4>)
 802e020:	2b00      	cmp	r3, #0
 802e022:	d0f0      	beq.n	802e006 <__register_exitproc+0x32>
 802e024:	f44f 7084 	mov.w	r0, #264	; 0x108
 802e028:	f7ff fcbe 	bl	802d9a8 <malloc>
 802e02c:	2800      	cmp	r0, #0
 802e02e:	d0ea      	beq.n	802e006 <__register_exitproc+0x32>
 802e030:	2300      	movs	r3, #0
 802e032:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802e036:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802e03a:	6863      	ldr	r3, [r4, #4]
 802e03c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802e040:	2201      	movs	r2, #1
 802e042:	409a      	lsls	r2, r3
 802e044:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802e048:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802e04c:	4313      	orrs	r3, r2
 802e04e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802e052:	2e02      	cmp	r6, #2
 802e054:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802e058:	bf02      	ittt	eq
 802e05a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802e05e:	4313      	orreq	r3, r2
 802e060:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802e064:	6863      	ldr	r3, [r4, #4]
 802e066:	f8d8 0000 	ldr.w	r0, [r8]
 802e06a:	1c5a      	adds	r2, r3, #1
 802e06c:	3302      	adds	r3, #2
 802e06e:	6062      	str	r2, [r4, #4]
 802e070:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802e074:	f7ff ff9e 	bl	802dfb4 <__retarget_lock_release_recursive>
 802e078:	2000      	movs	r0, #0
 802e07a:	e7ca      	b.n	802e012 <__register_exitproc+0x3e>
 802e07c:	20014368 	.word	0x20014368
 802e080:	200142dc 	.word	0x200142dc
 802e084:	08045c30 	.word	0x08045c30
 802e088:	0802d9a9 	.word	0x0802d9a9
 802e08c:	20000168 	.word	0x20000168

0802e090 <_free_r>:
 802e090:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802e092:	2900      	cmp	r1, #0
 802e094:	d044      	beq.n	802e120 <_free_r+0x90>
 802e096:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802e09a:	9001      	str	r0, [sp, #4]
 802e09c:	2b00      	cmp	r3, #0
 802e09e:	f1a1 0404 	sub.w	r4, r1, #4
 802e0a2:	bfb8      	it	lt
 802e0a4:	18e4      	addlt	r4, r4, r3
 802e0a6:	f7ff fd2f 	bl	802db08 <__malloc_lock>
 802e0aa:	4a1e      	ldr	r2, [pc, #120]	; (802e124 <_free_r+0x94>)
 802e0ac:	9801      	ldr	r0, [sp, #4]
 802e0ae:	6813      	ldr	r3, [r2, #0]
 802e0b0:	b933      	cbnz	r3, 802e0c0 <_free_r+0x30>
 802e0b2:	6063      	str	r3, [r4, #4]
 802e0b4:	6014      	str	r4, [r2, #0]
 802e0b6:	b003      	add	sp, #12
 802e0b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802e0bc:	f7ff bd2a 	b.w	802db14 <__malloc_unlock>
 802e0c0:	42a3      	cmp	r3, r4
 802e0c2:	d908      	bls.n	802e0d6 <_free_r+0x46>
 802e0c4:	6825      	ldr	r5, [r4, #0]
 802e0c6:	1961      	adds	r1, r4, r5
 802e0c8:	428b      	cmp	r3, r1
 802e0ca:	bf01      	itttt	eq
 802e0cc:	6819      	ldreq	r1, [r3, #0]
 802e0ce:	685b      	ldreq	r3, [r3, #4]
 802e0d0:	1949      	addeq	r1, r1, r5
 802e0d2:	6021      	streq	r1, [r4, #0]
 802e0d4:	e7ed      	b.n	802e0b2 <_free_r+0x22>
 802e0d6:	461a      	mov	r2, r3
 802e0d8:	685b      	ldr	r3, [r3, #4]
 802e0da:	b10b      	cbz	r3, 802e0e0 <_free_r+0x50>
 802e0dc:	42a3      	cmp	r3, r4
 802e0de:	d9fa      	bls.n	802e0d6 <_free_r+0x46>
 802e0e0:	6811      	ldr	r1, [r2, #0]
 802e0e2:	1855      	adds	r5, r2, r1
 802e0e4:	42a5      	cmp	r5, r4
 802e0e6:	d10b      	bne.n	802e100 <_free_r+0x70>
 802e0e8:	6824      	ldr	r4, [r4, #0]
 802e0ea:	4421      	add	r1, r4
 802e0ec:	1854      	adds	r4, r2, r1
 802e0ee:	42a3      	cmp	r3, r4
 802e0f0:	6011      	str	r1, [r2, #0]
 802e0f2:	d1e0      	bne.n	802e0b6 <_free_r+0x26>
 802e0f4:	681c      	ldr	r4, [r3, #0]
 802e0f6:	685b      	ldr	r3, [r3, #4]
 802e0f8:	6053      	str	r3, [r2, #4]
 802e0fa:	440c      	add	r4, r1
 802e0fc:	6014      	str	r4, [r2, #0]
 802e0fe:	e7da      	b.n	802e0b6 <_free_r+0x26>
 802e100:	d902      	bls.n	802e108 <_free_r+0x78>
 802e102:	230c      	movs	r3, #12
 802e104:	6003      	str	r3, [r0, #0]
 802e106:	e7d6      	b.n	802e0b6 <_free_r+0x26>
 802e108:	6825      	ldr	r5, [r4, #0]
 802e10a:	1961      	adds	r1, r4, r5
 802e10c:	428b      	cmp	r3, r1
 802e10e:	bf04      	itt	eq
 802e110:	6819      	ldreq	r1, [r3, #0]
 802e112:	685b      	ldreq	r3, [r3, #4]
 802e114:	6063      	str	r3, [r4, #4]
 802e116:	bf04      	itt	eq
 802e118:	1949      	addeq	r1, r1, r5
 802e11a:	6021      	streq	r1, [r4, #0]
 802e11c:	6054      	str	r4, [r2, #4]
 802e11e:	e7ca      	b.n	802e0b6 <_free_r+0x26>
 802e120:	b003      	add	sp, #12
 802e122:	bd30      	pop	{r4, r5, pc}
 802e124:	20014190 	.word	0x20014190

0802e128 <__sfputc_r>:
 802e128:	6893      	ldr	r3, [r2, #8]
 802e12a:	3b01      	subs	r3, #1
 802e12c:	2b00      	cmp	r3, #0
 802e12e:	b410      	push	{r4}
 802e130:	6093      	str	r3, [r2, #8]
 802e132:	da08      	bge.n	802e146 <__sfputc_r+0x1e>
 802e134:	6994      	ldr	r4, [r2, #24]
 802e136:	42a3      	cmp	r3, r4
 802e138:	db01      	blt.n	802e13e <__sfputc_r+0x16>
 802e13a:	290a      	cmp	r1, #10
 802e13c:	d103      	bne.n	802e146 <__sfputc_r+0x1e>
 802e13e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e142:	f000 bb73 	b.w	802e82c <__swbuf_r>
 802e146:	6813      	ldr	r3, [r2, #0]
 802e148:	1c58      	adds	r0, r3, #1
 802e14a:	6010      	str	r0, [r2, #0]
 802e14c:	7019      	strb	r1, [r3, #0]
 802e14e:	4608      	mov	r0, r1
 802e150:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e154:	4770      	bx	lr

0802e156 <__sfputs_r>:
 802e156:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e158:	4606      	mov	r6, r0
 802e15a:	460f      	mov	r7, r1
 802e15c:	4614      	mov	r4, r2
 802e15e:	18d5      	adds	r5, r2, r3
 802e160:	42ac      	cmp	r4, r5
 802e162:	d101      	bne.n	802e168 <__sfputs_r+0x12>
 802e164:	2000      	movs	r0, #0
 802e166:	e007      	b.n	802e178 <__sfputs_r+0x22>
 802e168:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e16c:	463a      	mov	r2, r7
 802e16e:	4630      	mov	r0, r6
 802e170:	f7ff ffda 	bl	802e128 <__sfputc_r>
 802e174:	1c43      	adds	r3, r0, #1
 802e176:	d1f3      	bne.n	802e160 <__sfputs_r+0xa>
 802e178:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802e17c <_vfiprintf_r>:
 802e17c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e180:	460d      	mov	r5, r1
 802e182:	b09d      	sub	sp, #116	; 0x74
 802e184:	4614      	mov	r4, r2
 802e186:	4698      	mov	r8, r3
 802e188:	4606      	mov	r6, r0
 802e18a:	b118      	cbz	r0, 802e194 <_vfiprintf_r+0x18>
 802e18c:	6a03      	ldr	r3, [r0, #32]
 802e18e:	b90b      	cbnz	r3, 802e194 <_vfiprintf_r+0x18>
 802e190:	f7ff fd60 	bl	802dc54 <__sinit>
 802e194:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e196:	07d9      	lsls	r1, r3, #31
 802e198:	d405      	bmi.n	802e1a6 <_vfiprintf_r+0x2a>
 802e19a:	89ab      	ldrh	r3, [r5, #12]
 802e19c:	059a      	lsls	r2, r3, #22
 802e19e:	d402      	bmi.n	802e1a6 <_vfiprintf_r+0x2a>
 802e1a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e1a2:	f7ff ff06 	bl	802dfb2 <__retarget_lock_acquire_recursive>
 802e1a6:	89ab      	ldrh	r3, [r5, #12]
 802e1a8:	071b      	lsls	r3, r3, #28
 802e1aa:	d501      	bpl.n	802e1b0 <_vfiprintf_r+0x34>
 802e1ac:	692b      	ldr	r3, [r5, #16]
 802e1ae:	b99b      	cbnz	r3, 802e1d8 <_vfiprintf_r+0x5c>
 802e1b0:	4629      	mov	r1, r5
 802e1b2:	4630      	mov	r0, r6
 802e1b4:	f000 fb78 	bl	802e8a8 <__swsetup_r>
 802e1b8:	b170      	cbz	r0, 802e1d8 <_vfiprintf_r+0x5c>
 802e1ba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e1bc:	07dc      	lsls	r4, r3, #31
 802e1be:	d504      	bpl.n	802e1ca <_vfiprintf_r+0x4e>
 802e1c0:	f04f 30ff 	mov.w	r0, #4294967295
 802e1c4:	b01d      	add	sp, #116	; 0x74
 802e1c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e1ca:	89ab      	ldrh	r3, [r5, #12]
 802e1cc:	0598      	lsls	r0, r3, #22
 802e1ce:	d4f7      	bmi.n	802e1c0 <_vfiprintf_r+0x44>
 802e1d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e1d2:	f7ff feef 	bl	802dfb4 <__retarget_lock_release_recursive>
 802e1d6:	e7f3      	b.n	802e1c0 <_vfiprintf_r+0x44>
 802e1d8:	2300      	movs	r3, #0
 802e1da:	9309      	str	r3, [sp, #36]	; 0x24
 802e1dc:	2320      	movs	r3, #32
 802e1de:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802e1e2:	f8cd 800c 	str.w	r8, [sp, #12]
 802e1e6:	2330      	movs	r3, #48	; 0x30
 802e1e8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802e39c <_vfiprintf_r+0x220>
 802e1ec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802e1f0:	f04f 0901 	mov.w	r9, #1
 802e1f4:	4623      	mov	r3, r4
 802e1f6:	469a      	mov	sl, r3
 802e1f8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802e1fc:	b10a      	cbz	r2, 802e202 <_vfiprintf_r+0x86>
 802e1fe:	2a25      	cmp	r2, #37	; 0x25
 802e200:	d1f9      	bne.n	802e1f6 <_vfiprintf_r+0x7a>
 802e202:	ebba 0b04 	subs.w	fp, sl, r4
 802e206:	d00b      	beq.n	802e220 <_vfiprintf_r+0xa4>
 802e208:	465b      	mov	r3, fp
 802e20a:	4622      	mov	r2, r4
 802e20c:	4629      	mov	r1, r5
 802e20e:	4630      	mov	r0, r6
 802e210:	f7ff ffa1 	bl	802e156 <__sfputs_r>
 802e214:	3001      	adds	r0, #1
 802e216:	f000 80a9 	beq.w	802e36c <_vfiprintf_r+0x1f0>
 802e21a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802e21c:	445a      	add	r2, fp
 802e21e:	9209      	str	r2, [sp, #36]	; 0x24
 802e220:	f89a 3000 	ldrb.w	r3, [sl]
 802e224:	2b00      	cmp	r3, #0
 802e226:	f000 80a1 	beq.w	802e36c <_vfiprintf_r+0x1f0>
 802e22a:	2300      	movs	r3, #0
 802e22c:	f04f 32ff 	mov.w	r2, #4294967295
 802e230:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802e234:	f10a 0a01 	add.w	sl, sl, #1
 802e238:	9304      	str	r3, [sp, #16]
 802e23a:	9307      	str	r3, [sp, #28]
 802e23c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802e240:	931a      	str	r3, [sp, #104]	; 0x68
 802e242:	4654      	mov	r4, sl
 802e244:	2205      	movs	r2, #5
 802e246:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e24a:	4854      	ldr	r0, [pc, #336]	; (802e39c <_vfiprintf_r+0x220>)
 802e24c:	f7d2 f830 	bl	80002b0 <memchr>
 802e250:	9a04      	ldr	r2, [sp, #16]
 802e252:	b9d8      	cbnz	r0, 802e28c <_vfiprintf_r+0x110>
 802e254:	06d1      	lsls	r1, r2, #27
 802e256:	bf44      	itt	mi
 802e258:	2320      	movmi	r3, #32
 802e25a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e25e:	0713      	lsls	r3, r2, #28
 802e260:	bf44      	itt	mi
 802e262:	232b      	movmi	r3, #43	; 0x2b
 802e264:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e268:	f89a 3000 	ldrb.w	r3, [sl]
 802e26c:	2b2a      	cmp	r3, #42	; 0x2a
 802e26e:	d015      	beq.n	802e29c <_vfiprintf_r+0x120>
 802e270:	9a07      	ldr	r2, [sp, #28]
 802e272:	4654      	mov	r4, sl
 802e274:	2000      	movs	r0, #0
 802e276:	f04f 0c0a 	mov.w	ip, #10
 802e27a:	4621      	mov	r1, r4
 802e27c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802e280:	3b30      	subs	r3, #48	; 0x30
 802e282:	2b09      	cmp	r3, #9
 802e284:	d94d      	bls.n	802e322 <_vfiprintf_r+0x1a6>
 802e286:	b1b0      	cbz	r0, 802e2b6 <_vfiprintf_r+0x13a>
 802e288:	9207      	str	r2, [sp, #28]
 802e28a:	e014      	b.n	802e2b6 <_vfiprintf_r+0x13a>
 802e28c:	eba0 0308 	sub.w	r3, r0, r8
 802e290:	fa09 f303 	lsl.w	r3, r9, r3
 802e294:	4313      	orrs	r3, r2
 802e296:	9304      	str	r3, [sp, #16]
 802e298:	46a2      	mov	sl, r4
 802e29a:	e7d2      	b.n	802e242 <_vfiprintf_r+0xc6>
 802e29c:	9b03      	ldr	r3, [sp, #12]
 802e29e:	1d19      	adds	r1, r3, #4
 802e2a0:	681b      	ldr	r3, [r3, #0]
 802e2a2:	9103      	str	r1, [sp, #12]
 802e2a4:	2b00      	cmp	r3, #0
 802e2a6:	bfbb      	ittet	lt
 802e2a8:	425b      	neglt	r3, r3
 802e2aa:	f042 0202 	orrlt.w	r2, r2, #2
 802e2ae:	9307      	strge	r3, [sp, #28]
 802e2b0:	9307      	strlt	r3, [sp, #28]
 802e2b2:	bfb8      	it	lt
 802e2b4:	9204      	strlt	r2, [sp, #16]
 802e2b6:	7823      	ldrb	r3, [r4, #0]
 802e2b8:	2b2e      	cmp	r3, #46	; 0x2e
 802e2ba:	d10c      	bne.n	802e2d6 <_vfiprintf_r+0x15a>
 802e2bc:	7863      	ldrb	r3, [r4, #1]
 802e2be:	2b2a      	cmp	r3, #42	; 0x2a
 802e2c0:	d134      	bne.n	802e32c <_vfiprintf_r+0x1b0>
 802e2c2:	9b03      	ldr	r3, [sp, #12]
 802e2c4:	1d1a      	adds	r2, r3, #4
 802e2c6:	681b      	ldr	r3, [r3, #0]
 802e2c8:	9203      	str	r2, [sp, #12]
 802e2ca:	2b00      	cmp	r3, #0
 802e2cc:	bfb8      	it	lt
 802e2ce:	f04f 33ff 	movlt.w	r3, #4294967295
 802e2d2:	3402      	adds	r4, #2
 802e2d4:	9305      	str	r3, [sp, #20]
 802e2d6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802e3ac <_vfiprintf_r+0x230>
 802e2da:	7821      	ldrb	r1, [r4, #0]
 802e2dc:	2203      	movs	r2, #3
 802e2de:	4650      	mov	r0, sl
 802e2e0:	f7d1 ffe6 	bl	80002b0 <memchr>
 802e2e4:	b138      	cbz	r0, 802e2f6 <_vfiprintf_r+0x17a>
 802e2e6:	9b04      	ldr	r3, [sp, #16]
 802e2e8:	eba0 000a 	sub.w	r0, r0, sl
 802e2ec:	2240      	movs	r2, #64	; 0x40
 802e2ee:	4082      	lsls	r2, r0
 802e2f0:	4313      	orrs	r3, r2
 802e2f2:	3401      	adds	r4, #1
 802e2f4:	9304      	str	r3, [sp, #16]
 802e2f6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e2fa:	4829      	ldr	r0, [pc, #164]	; (802e3a0 <_vfiprintf_r+0x224>)
 802e2fc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802e300:	2206      	movs	r2, #6
 802e302:	f7d1 ffd5 	bl	80002b0 <memchr>
 802e306:	2800      	cmp	r0, #0
 802e308:	d03f      	beq.n	802e38a <_vfiprintf_r+0x20e>
 802e30a:	4b26      	ldr	r3, [pc, #152]	; (802e3a4 <_vfiprintf_r+0x228>)
 802e30c:	bb1b      	cbnz	r3, 802e356 <_vfiprintf_r+0x1da>
 802e30e:	9b03      	ldr	r3, [sp, #12]
 802e310:	3307      	adds	r3, #7
 802e312:	f023 0307 	bic.w	r3, r3, #7
 802e316:	3308      	adds	r3, #8
 802e318:	9303      	str	r3, [sp, #12]
 802e31a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e31c:	443b      	add	r3, r7
 802e31e:	9309      	str	r3, [sp, #36]	; 0x24
 802e320:	e768      	b.n	802e1f4 <_vfiprintf_r+0x78>
 802e322:	fb0c 3202 	mla	r2, ip, r2, r3
 802e326:	460c      	mov	r4, r1
 802e328:	2001      	movs	r0, #1
 802e32a:	e7a6      	b.n	802e27a <_vfiprintf_r+0xfe>
 802e32c:	2300      	movs	r3, #0
 802e32e:	3401      	adds	r4, #1
 802e330:	9305      	str	r3, [sp, #20]
 802e332:	4619      	mov	r1, r3
 802e334:	f04f 0c0a 	mov.w	ip, #10
 802e338:	4620      	mov	r0, r4
 802e33a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802e33e:	3a30      	subs	r2, #48	; 0x30
 802e340:	2a09      	cmp	r2, #9
 802e342:	d903      	bls.n	802e34c <_vfiprintf_r+0x1d0>
 802e344:	2b00      	cmp	r3, #0
 802e346:	d0c6      	beq.n	802e2d6 <_vfiprintf_r+0x15a>
 802e348:	9105      	str	r1, [sp, #20]
 802e34a:	e7c4      	b.n	802e2d6 <_vfiprintf_r+0x15a>
 802e34c:	fb0c 2101 	mla	r1, ip, r1, r2
 802e350:	4604      	mov	r4, r0
 802e352:	2301      	movs	r3, #1
 802e354:	e7f0      	b.n	802e338 <_vfiprintf_r+0x1bc>
 802e356:	ab03      	add	r3, sp, #12
 802e358:	9300      	str	r3, [sp, #0]
 802e35a:	462a      	mov	r2, r5
 802e35c:	4b12      	ldr	r3, [pc, #72]	; (802e3a8 <_vfiprintf_r+0x22c>)
 802e35e:	a904      	add	r1, sp, #16
 802e360:	4630      	mov	r0, r6
 802e362:	f3af 8000 	nop.w
 802e366:	4607      	mov	r7, r0
 802e368:	1c78      	adds	r0, r7, #1
 802e36a:	d1d6      	bne.n	802e31a <_vfiprintf_r+0x19e>
 802e36c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e36e:	07d9      	lsls	r1, r3, #31
 802e370:	d405      	bmi.n	802e37e <_vfiprintf_r+0x202>
 802e372:	89ab      	ldrh	r3, [r5, #12]
 802e374:	059a      	lsls	r2, r3, #22
 802e376:	d402      	bmi.n	802e37e <_vfiprintf_r+0x202>
 802e378:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e37a:	f7ff fe1b 	bl	802dfb4 <__retarget_lock_release_recursive>
 802e37e:	89ab      	ldrh	r3, [r5, #12]
 802e380:	065b      	lsls	r3, r3, #25
 802e382:	f53f af1d 	bmi.w	802e1c0 <_vfiprintf_r+0x44>
 802e386:	9809      	ldr	r0, [sp, #36]	; 0x24
 802e388:	e71c      	b.n	802e1c4 <_vfiprintf_r+0x48>
 802e38a:	ab03      	add	r3, sp, #12
 802e38c:	9300      	str	r3, [sp, #0]
 802e38e:	462a      	mov	r2, r5
 802e390:	4b05      	ldr	r3, [pc, #20]	; (802e3a8 <_vfiprintf_r+0x22c>)
 802e392:	a904      	add	r1, sp, #16
 802e394:	4630      	mov	r0, r6
 802e396:	f000 f879 	bl	802e48c <_printf_i>
 802e39a:	e7e4      	b.n	802e366 <_vfiprintf_r+0x1ea>
 802e39c:	08045c34 	.word	0x08045c34
 802e3a0:	08045c3e 	.word	0x08045c3e
 802e3a4:	00000000 	.word	0x00000000
 802e3a8:	0802e157 	.word	0x0802e157
 802e3ac:	08045c3a 	.word	0x08045c3a

0802e3b0 <_printf_common>:
 802e3b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e3b4:	4616      	mov	r6, r2
 802e3b6:	4699      	mov	r9, r3
 802e3b8:	688a      	ldr	r2, [r1, #8]
 802e3ba:	690b      	ldr	r3, [r1, #16]
 802e3bc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802e3c0:	4293      	cmp	r3, r2
 802e3c2:	bfb8      	it	lt
 802e3c4:	4613      	movlt	r3, r2
 802e3c6:	6033      	str	r3, [r6, #0]
 802e3c8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802e3cc:	4607      	mov	r7, r0
 802e3ce:	460c      	mov	r4, r1
 802e3d0:	b10a      	cbz	r2, 802e3d6 <_printf_common+0x26>
 802e3d2:	3301      	adds	r3, #1
 802e3d4:	6033      	str	r3, [r6, #0]
 802e3d6:	6823      	ldr	r3, [r4, #0]
 802e3d8:	0699      	lsls	r1, r3, #26
 802e3da:	bf42      	ittt	mi
 802e3dc:	6833      	ldrmi	r3, [r6, #0]
 802e3de:	3302      	addmi	r3, #2
 802e3e0:	6033      	strmi	r3, [r6, #0]
 802e3e2:	6825      	ldr	r5, [r4, #0]
 802e3e4:	f015 0506 	ands.w	r5, r5, #6
 802e3e8:	d106      	bne.n	802e3f8 <_printf_common+0x48>
 802e3ea:	f104 0a19 	add.w	sl, r4, #25
 802e3ee:	68e3      	ldr	r3, [r4, #12]
 802e3f0:	6832      	ldr	r2, [r6, #0]
 802e3f2:	1a9b      	subs	r3, r3, r2
 802e3f4:	42ab      	cmp	r3, r5
 802e3f6:	dc26      	bgt.n	802e446 <_printf_common+0x96>
 802e3f8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802e3fc:	1e13      	subs	r3, r2, #0
 802e3fe:	6822      	ldr	r2, [r4, #0]
 802e400:	bf18      	it	ne
 802e402:	2301      	movne	r3, #1
 802e404:	0692      	lsls	r2, r2, #26
 802e406:	d42b      	bmi.n	802e460 <_printf_common+0xb0>
 802e408:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802e40c:	4649      	mov	r1, r9
 802e40e:	4638      	mov	r0, r7
 802e410:	47c0      	blx	r8
 802e412:	3001      	adds	r0, #1
 802e414:	d01e      	beq.n	802e454 <_printf_common+0xa4>
 802e416:	6823      	ldr	r3, [r4, #0]
 802e418:	6922      	ldr	r2, [r4, #16]
 802e41a:	f003 0306 	and.w	r3, r3, #6
 802e41e:	2b04      	cmp	r3, #4
 802e420:	bf02      	ittt	eq
 802e422:	68e5      	ldreq	r5, [r4, #12]
 802e424:	6833      	ldreq	r3, [r6, #0]
 802e426:	1aed      	subeq	r5, r5, r3
 802e428:	68a3      	ldr	r3, [r4, #8]
 802e42a:	bf0c      	ite	eq
 802e42c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802e430:	2500      	movne	r5, #0
 802e432:	4293      	cmp	r3, r2
 802e434:	bfc4      	itt	gt
 802e436:	1a9b      	subgt	r3, r3, r2
 802e438:	18ed      	addgt	r5, r5, r3
 802e43a:	2600      	movs	r6, #0
 802e43c:	341a      	adds	r4, #26
 802e43e:	42b5      	cmp	r5, r6
 802e440:	d11a      	bne.n	802e478 <_printf_common+0xc8>
 802e442:	2000      	movs	r0, #0
 802e444:	e008      	b.n	802e458 <_printf_common+0xa8>
 802e446:	2301      	movs	r3, #1
 802e448:	4652      	mov	r2, sl
 802e44a:	4649      	mov	r1, r9
 802e44c:	4638      	mov	r0, r7
 802e44e:	47c0      	blx	r8
 802e450:	3001      	adds	r0, #1
 802e452:	d103      	bne.n	802e45c <_printf_common+0xac>
 802e454:	f04f 30ff 	mov.w	r0, #4294967295
 802e458:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e45c:	3501      	adds	r5, #1
 802e45e:	e7c6      	b.n	802e3ee <_printf_common+0x3e>
 802e460:	18e1      	adds	r1, r4, r3
 802e462:	1c5a      	adds	r2, r3, #1
 802e464:	2030      	movs	r0, #48	; 0x30
 802e466:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802e46a:	4422      	add	r2, r4
 802e46c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802e470:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802e474:	3302      	adds	r3, #2
 802e476:	e7c7      	b.n	802e408 <_printf_common+0x58>
 802e478:	2301      	movs	r3, #1
 802e47a:	4622      	mov	r2, r4
 802e47c:	4649      	mov	r1, r9
 802e47e:	4638      	mov	r0, r7
 802e480:	47c0      	blx	r8
 802e482:	3001      	adds	r0, #1
 802e484:	d0e6      	beq.n	802e454 <_printf_common+0xa4>
 802e486:	3601      	adds	r6, #1
 802e488:	e7d9      	b.n	802e43e <_printf_common+0x8e>
	...

0802e48c <_printf_i>:
 802e48c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802e490:	7e0f      	ldrb	r7, [r1, #24]
 802e492:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802e494:	2f78      	cmp	r7, #120	; 0x78
 802e496:	4691      	mov	r9, r2
 802e498:	4680      	mov	r8, r0
 802e49a:	460c      	mov	r4, r1
 802e49c:	469a      	mov	sl, r3
 802e49e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802e4a2:	d807      	bhi.n	802e4b4 <_printf_i+0x28>
 802e4a4:	2f62      	cmp	r7, #98	; 0x62
 802e4a6:	d80a      	bhi.n	802e4be <_printf_i+0x32>
 802e4a8:	2f00      	cmp	r7, #0
 802e4aa:	f000 80d4 	beq.w	802e656 <_printf_i+0x1ca>
 802e4ae:	2f58      	cmp	r7, #88	; 0x58
 802e4b0:	f000 80c0 	beq.w	802e634 <_printf_i+0x1a8>
 802e4b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e4b8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802e4bc:	e03a      	b.n	802e534 <_printf_i+0xa8>
 802e4be:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802e4c2:	2b15      	cmp	r3, #21
 802e4c4:	d8f6      	bhi.n	802e4b4 <_printf_i+0x28>
 802e4c6:	a101      	add	r1, pc, #4	; (adr r1, 802e4cc <_printf_i+0x40>)
 802e4c8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802e4cc:	0802e525 	.word	0x0802e525
 802e4d0:	0802e539 	.word	0x0802e539
 802e4d4:	0802e4b5 	.word	0x0802e4b5
 802e4d8:	0802e4b5 	.word	0x0802e4b5
 802e4dc:	0802e4b5 	.word	0x0802e4b5
 802e4e0:	0802e4b5 	.word	0x0802e4b5
 802e4e4:	0802e539 	.word	0x0802e539
 802e4e8:	0802e4b5 	.word	0x0802e4b5
 802e4ec:	0802e4b5 	.word	0x0802e4b5
 802e4f0:	0802e4b5 	.word	0x0802e4b5
 802e4f4:	0802e4b5 	.word	0x0802e4b5
 802e4f8:	0802e63d 	.word	0x0802e63d
 802e4fc:	0802e565 	.word	0x0802e565
 802e500:	0802e5f7 	.word	0x0802e5f7
 802e504:	0802e4b5 	.word	0x0802e4b5
 802e508:	0802e4b5 	.word	0x0802e4b5
 802e50c:	0802e65f 	.word	0x0802e65f
 802e510:	0802e4b5 	.word	0x0802e4b5
 802e514:	0802e565 	.word	0x0802e565
 802e518:	0802e4b5 	.word	0x0802e4b5
 802e51c:	0802e4b5 	.word	0x0802e4b5
 802e520:	0802e5ff 	.word	0x0802e5ff
 802e524:	682b      	ldr	r3, [r5, #0]
 802e526:	1d1a      	adds	r2, r3, #4
 802e528:	681b      	ldr	r3, [r3, #0]
 802e52a:	602a      	str	r2, [r5, #0]
 802e52c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e530:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802e534:	2301      	movs	r3, #1
 802e536:	e09f      	b.n	802e678 <_printf_i+0x1ec>
 802e538:	6820      	ldr	r0, [r4, #0]
 802e53a:	682b      	ldr	r3, [r5, #0]
 802e53c:	0607      	lsls	r7, r0, #24
 802e53e:	f103 0104 	add.w	r1, r3, #4
 802e542:	6029      	str	r1, [r5, #0]
 802e544:	d501      	bpl.n	802e54a <_printf_i+0xbe>
 802e546:	681e      	ldr	r6, [r3, #0]
 802e548:	e003      	b.n	802e552 <_printf_i+0xc6>
 802e54a:	0646      	lsls	r6, r0, #25
 802e54c:	d5fb      	bpl.n	802e546 <_printf_i+0xba>
 802e54e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802e552:	2e00      	cmp	r6, #0
 802e554:	da03      	bge.n	802e55e <_printf_i+0xd2>
 802e556:	232d      	movs	r3, #45	; 0x2d
 802e558:	4276      	negs	r6, r6
 802e55a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e55e:	485a      	ldr	r0, [pc, #360]	; (802e6c8 <_printf_i+0x23c>)
 802e560:	230a      	movs	r3, #10
 802e562:	e012      	b.n	802e58a <_printf_i+0xfe>
 802e564:	682b      	ldr	r3, [r5, #0]
 802e566:	6820      	ldr	r0, [r4, #0]
 802e568:	1d19      	adds	r1, r3, #4
 802e56a:	6029      	str	r1, [r5, #0]
 802e56c:	0605      	lsls	r5, r0, #24
 802e56e:	d501      	bpl.n	802e574 <_printf_i+0xe8>
 802e570:	681e      	ldr	r6, [r3, #0]
 802e572:	e002      	b.n	802e57a <_printf_i+0xee>
 802e574:	0641      	lsls	r1, r0, #25
 802e576:	d5fb      	bpl.n	802e570 <_printf_i+0xe4>
 802e578:	881e      	ldrh	r6, [r3, #0]
 802e57a:	4853      	ldr	r0, [pc, #332]	; (802e6c8 <_printf_i+0x23c>)
 802e57c:	2f6f      	cmp	r7, #111	; 0x6f
 802e57e:	bf0c      	ite	eq
 802e580:	2308      	moveq	r3, #8
 802e582:	230a      	movne	r3, #10
 802e584:	2100      	movs	r1, #0
 802e586:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802e58a:	6865      	ldr	r5, [r4, #4]
 802e58c:	60a5      	str	r5, [r4, #8]
 802e58e:	2d00      	cmp	r5, #0
 802e590:	bfa2      	ittt	ge
 802e592:	6821      	ldrge	r1, [r4, #0]
 802e594:	f021 0104 	bicge.w	r1, r1, #4
 802e598:	6021      	strge	r1, [r4, #0]
 802e59a:	b90e      	cbnz	r6, 802e5a0 <_printf_i+0x114>
 802e59c:	2d00      	cmp	r5, #0
 802e59e:	d04b      	beq.n	802e638 <_printf_i+0x1ac>
 802e5a0:	4615      	mov	r5, r2
 802e5a2:	fbb6 f1f3 	udiv	r1, r6, r3
 802e5a6:	fb03 6711 	mls	r7, r3, r1, r6
 802e5aa:	5dc7      	ldrb	r7, [r0, r7]
 802e5ac:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802e5b0:	4637      	mov	r7, r6
 802e5b2:	42bb      	cmp	r3, r7
 802e5b4:	460e      	mov	r6, r1
 802e5b6:	d9f4      	bls.n	802e5a2 <_printf_i+0x116>
 802e5b8:	2b08      	cmp	r3, #8
 802e5ba:	d10b      	bne.n	802e5d4 <_printf_i+0x148>
 802e5bc:	6823      	ldr	r3, [r4, #0]
 802e5be:	07de      	lsls	r6, r3, #31
 802e5c0:	d508      	bpl.n	802e5d4 <_printf_i+0x148>
 802e5c2:	6923      	ldr	r3, [r4, #16]
 802e5c4:	6861      	ldr	r1, [r4, #4]
 802e5c6:	4299      	cmp	r1, r3
 802e5c8:	bfde      	ittt	le
 802e5ca:	2330      	movle	r3, #48	; 0x30
 802e5cc:	f805 3c01 	strble.w	r3, [r5, #-1]
 802e5d0:	f105 35ff 	addle.w	r5, r5, #4294967295
 802e5d4:	1b52      	subs	r2, r2, r5
 802e5d6:	6122      	str	r2, [r4, #16]
 802e5d8:	f8cd a000 	str.w	sl, [sp]
 802e5dc:	464b      	mov	r3, r9
 802e5de:	aa03      	add	r2, sp, #12
 802e5e0:	4621      	mov	r1, r4
 802e5e2:	4640      	mov	r0, r8
 802e5e4:	f7ff fee4 	bl	802e3b0 <_printf_common>
 802e5e8:	3001      	adds	r0, #1
 802e5ea:	d14a      	bne.n	802e682 <_printf_i+0x1f6>
 802e5ec:	f04f 30ff 	mov.w	r0, #4294967295
 802e5f0:	b004      	add	sp, #16
 802e5f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e5f6:	6823      	ldr	r3, [r4, #0]
 802e5f8:	f043 0320 	orr.w	r3, r3, #32
 802e5fc:	6023      	str	r3, [r4, #0]
 802e5fe:	4833      	ldr	r0, [pc, #204]	; (802e6cc <_printf_i+0x240>)
 802e600:	2778      	movs	r7, #120	; 0x78
 802e602:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802e606:	6823      	ldr	r3, [r4, #0]
 802e608:	6829      	ldr	r1, [r5, #0]
 802e60a:	061f      	lsls	r7, r3, #24
 802e60c:	f851 6b04 	ldr.w	r6, [r1], #4
 802e610:	d402      	bmi.n	802e618 <_printf_i+0x18c>
 802e612:	065f      	lsls	r7, r3, #25
 802e614:	bf48      	it	mi
 802e616:	b2b6      	uxthmi	r6, r6
 802e618:	07df      	lsls	r7, r3, #31
 802e61a:	bf48      	it	mi
 802e61c:	f043 0320 	orrmi.w	r3, r3, #32
 802e620:	6029      	str	r1, [r5, #0]
 802e622:	bf48      	it	mi
 802e624:	6023      	strmi	r3, [r4, #0]
 802e626:	b91e      	cbnz	r6, 802e630 <_printf_i+0x1a4>
 802e628:	6823      	ldr	r3, [r4, #0]
 802e62a:	f023 0320 	bic.w	r3, r3, #32
 802e62e:	6023      	str	r3, [r4, #0]
 802e630:	2310      	movs	r3, #16
 802e632:	e7a7      	b.n	802e584 <_printf_i+0xf8>
 802e634:	4824      	ldr	r0, [pc, #144]	; (802e6c8 <_printf_i+0x23c>)
 802e636:	e7e4      	b.n	802e602 <_printf_i+0x176>
 802e638:	4615      	mov	r5, r2
 802e63a:	e7bd      	b.n	802e5b8 <_printf_i+0x12c>
 802e63c:	682b      	ldr	r3, [r5, #0]
 802e63e:	6826      	ldr	r6, [r4, #0]
 802e640:	6961      	ldr	r1, [r4, #20]
 802e642:	1d18      	adds	r0, r3, #4
 802e644:	6028      	str	r0, [r5, #0]
 802e646:	0635      	lsls	r5, r6, #24
 802e648:	681b      	ldr	r3, [r3, #0]
 802e64a:	d501      	bpl.n	802e650 <_printf_i+0x1c4>
 802e64c:	6019      	str	r1, [r3, #0]
 802e64e:	e002      	b.n	802e656 <_printf_i+0x1ca>
 802e650:	0670      	lsls	r0, r6, #25
 802e652:	d5fb      	bpl.n	802e64c <_printf_i+0x1c0>
 802e654:	8019      	strh	r1, [r3, #0]
 802e656:	2300      	movs	r3, #0
 802e658:	6123      	str	r3, [r4, #16]
 802e65a:	4615      	mov	r5, r2
 802e65c:	e7bc      	b.n	802e5d8 <_printf_i+0x14c>
 802e65e:	682b      	ldr	r3, [r5, #0]
 802e660:	1d1a      	adds	r2, r3, #4
 802e662:	602a      	str	r2, [r5, #0]
 802e664:	681d      	ldr	r5, [r3, #0]
 802e666:	6862      	ldr	r2, [r4, #4]
 802e668:	2100      	movs	r1, #0
 802e66a:	4628      	mov	r0, r5
 802e66c:	f7d1 fe20 	bl	80002b0 <memchr>
 802e670:	b108      	cbz	r0, 802e676 <_printf_i+0x1ea>
 802e672:	1b40      	subs	r0, r0, r5
 802e674:	6060      	str	r0, [r4, #4]
 802e676:	6863      	ldr	r3, [r4, #4]
 802e678:	6123      	str	r3, [r4, #16]
 802e67a:	2300      	movs	r3, #0
 802e67c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e680:	e7aa      	b.n	802e5d8 <_printf_i+0x14c>
 802e682:	6923      	ldr	r3, [r4, #16]
 802e684:	462a      	mov	r2, r5
 802e686:	4649      	mov	r1, r9
 802e688:	4640      	mov	r0, r8
 802e68a:	47d0      	blx	sl
 802e68c:	3001      	adds	r0, #1
 802e68e:	d0ad      	beq.n	802e5ec <_printf_i+0x160>
 802e690:	6823      	ldr	r3, [r4, #0]
 802e692:	079b      	lsls	r3, r3, #30
 802e694:	d413      	bmi.n	802e6be <_printf_i+0x232>
 802e696:	68e0      	ldr	r0, [r4, #12]
 802e698:	9b03      	ldr	r3, [sp, #12]
 802e69a:	4298      	cmp	r0, r3
 802e69c:	bfb8      	it	lt
 802e69e:	4618      	movlt	r0, r3
 802e6a0:	e7a6      	b.n	802e5f0 <_printf_i+0x164>
 802e6a2:	2301      	movs	r3, #1
 802e6a4:	4632      	mov	r2, r6
 802e6a6:	4649      	mov	r1, r9
 802e6a8:	4640      	mov	r0, r8
 802e6aa:	47d0      	blx	sl
 802e6ac:	3001      	adds	r0, #1
 802e6ae:	d09d      	beq.n	802e5ec <_printf_i+0x160>
 802e6b0:	3501      	adds	r5, #1
 802e6b2:	68e3      	ldr	r3, [r4, #12]
 802e6b4:	9903      	ldr	r1, [sp, #12]
 802e6b6:	1a5b      	subs	r3, r3, r1
 802e6b8:	42ab      	cmp	r3, r5
 802e6ba:	dcf2      	bgt.n	802e6a2 <_printf_i+0x216>
 802e6bc:	e7eb      	b.n	802e696 <_printf_i+0x20a>
 802e6be:	2500      	movs	r5, #0
 802e6c0:	f104 0619 	add.w	r6, r4, #25
 802e6c4:	e7f5      	b.n	802e6b2 <_printf_i+0x226>
 802e6c6:	bf00      	nop
 802e6c8:	08045c45 	.word	0x08045c45
 802e6cc:	08045c56 	.word	0x08045c56

0802e6d0 <__sflush_r>:
 802e6d0:	898a      	ldrh	r2, [r1, #12]
 802e6d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e6d6:	4605      	mov	r5, r0
 802e6d8:	0710      	lsls	r0, r2, #28
 802e6da:	460c      	mov	r4, r1
 802e6dc:	d458      	bmi.n	802e790 <__sflush_r+0xc0>
 802e6de:	684b      	ldr	r3, [r1, #4]
 802e6e0:	2b00      	cmp	r3, #0
 802e6e2:	dc05      	bgt.n	802e6f0 <__sflush_r+0x20>
 802e6e4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802e6e6:	2b00      	cmp	r3, #0
 802e6e8:	dc02      	bgt.n	802e6f0 <__sflush_r+0x20>
 802e6ea:	2000      	movs	r0, #0
 802e6ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e6f0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e6f2:	2e00      	cmp	r6, #0
 802e6f4:	d0f9      	beq.n	802e6ea <__sflush_r+0x1a>
 802e6f6:	2300      	movs	r3, #0
 802e6f8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802e6fc:	682f      	ldr	r7, [r5, #0]
 802e6fe:	6a21      	ldr	r1, [r4, #32]
 802e700:	602b      	str	r3, [r5, #0]
 802e702:	d032      	beq.n	802e76a <__sflush_r+0x9a>
 802e704:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802e706:	89a3      	ldrh	r3, [r4, #12]
 802e708:	075a      	lsls	r2, r3, #29
 802e70a:	d505      	bpl.n	802e718 <__sflush_r+0x48>
 802e70c:	6863      	ldr	r3, [r4, #4]
 802e70e:	1ac0      	subs	r0, r0, r3
 802e710:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802e712:	b10b      	cbz	r3, 802e718 <__sflush_r+0x48>
 802e714:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802e716:	1ac0      	subs	r0, r0, r3
 802e718:	2300      	movs	r3, #0
 802e71a:	4602      	mov	r2, r0
 802e71c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e71e:	6a21      	ldr	r1, [r4, #32]
 802e720:	4628      	mov	r0, r5
 802e722:	47b0      	blx	r6
 802e724:	1c43      	adds	r3, r0, #1
 802e726:	89a3      	ldrh	r3, [r4, #12]
 802e728:	d106      	bne.n	802e738 <__sflush_r+0x68>
 802e72a:	6829      	ldr	r1, [r5, #0]
 802e72c:	291d      	cmp	r1, #29
 802e72e:	d82b      	bhi.n	802e788 <__sflush_r+0xb8>
 802e730:	4a29      	ldr	r2, [pc, #164]	; (802e7d8 <__sflush_r+0x108>)
 802e732:	410a      	asrs	r2, r1
 802e734:	07d6      	lsls	r6, r2, #31
 802e736:	d427      	bmi.n	802e788 <__sflush_r+0xb8>
 802e738:	2200      	movs	r2, #0
 802e73a:	6062      	str	r2, [r4, #4]
 802e73c:	04d9      	lsls	r1, r3, #19
 802e73e:	6922      	ldr	r2, [r4, #16]
 802e740:	6022      	str	r2, [r4, #0]
 802e742:	d504      	bpl.n	802e74e <__sflush_r+0x7e>
 802e744:	1c42      	adds	r2, r0, #1
 802e746:	d101      	bne.n	802e74c <__sflush_r+0x7c>
 802e748:	682b      	ldr	r3, [r5, #0]
 802e74a:	b903      	cbnz	r3, 802e74e <__sflush_r+0x7e>
 802e74c:	6560      	str	r0, [r4, #84]	; 0x54
 802e74e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e750:	602f      	str	r7, [r5, #0]
 802e752:	2900      	cmp	r1, #0
 802e754:	d0c9      	beq.n	802e6ea <__sflush_r+0x1a>
 802e756:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e75a:	4299      	cmp	r1, r3
 802e75c:	d002      	beq.n	802e764 <__sflush_r+0x94>
 802e75e:	4628      	mov	r0, r5
 802e760:	f7ff fc96 	bl	802e090 <_free_r>
 802e764:	2000      	movs	r0, #0
 802e766:	6360      	str	r0, [r4, #52]	; 0x34
 802e768:	e7c0      	b.n	802e6ec <__sflush_r+0x1c>
 802e76a:	2301      	movs	r3, #1
 802e76c:	4628      	mov	r0, r5
 802e76e:	47b0      	blx	r6
 802e770:	1c41      	adds	r1, r0, #1
 802e772:	d1c8      	bne.n	802e706 <__sflush_r+0x36>
 802e774:	682b      	ldr	r3, [r5, #0]
 802e776:	2b00      	cmp	r3, #0
 802e778:	d0c5      	beq.n	802e706 <__sflush_r+0x36>
 802e77a:	2b1d      	cmp	r3, #29
 802e77c:	d001      	beq.n	802e782 <__sflush_r+0xb2>
 802e77e:	2b16      	cmp	r3, #22
 802e780:	d101      	bne.n	802e786 <__sflush_r+0xb6>
 802e782:	602f      	str	r7, [r5, #0]
 802e784:	e7b1      	b.n	802e6ea <__sflush_r+0x1a>
 802e786:	89a3      	ldrh	r3, [r4, #12]
 802e788:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e78c:	81a3      	strh	r3, [r4, #12]
 802e78e:	e7ad      	b.n	802e6ec <__sflush_r+0x1c>
 802e790:	690f      	ldr	r7, [r1, #16]
 802e792:	2f00      	cmp	r7, #0
 802e794:	d0a9      	beq.n	802e6ea <__sflush_r+0x1a>
 802e796:	0793      	lsls	r3, r2, #30
 802e798:	680e      	ldr	r6, [r1, #0]
 802e79a:	bf08      	it	eq
 802e79c:	694b      	ldreq	r3, [r1, #20]
 802e79e:	600f      	str	r7, [r1, #0]
 802e7a0:	bf18      	it	ne
 802e7a2:	2300      	movne	r3, #0
 802e7a4:	eba6 0807 	sub.w	r8, r6, r7
 802e7a8:	608b      	str	r3, [r1, #8]
 802e7aa:	f1b8 0f00 	cmp.w	r8, #0
 802e7ae:	dd9c      	ble.n	802e6ea <__sflush_r+0x1a>
 802e7b0:	6a21      	ldr	r1, [r4, #32]
 802e7b2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802e7b4:	4643      	mov	r3, r8
 802e7b6:	463a      	mov	r2, r7
 802e7b8:	4628      	mov	r0, r5
 802e7ba:	47b0      	blx	r6
 802e7bc:	2800      	cmp	r0, #0
 802e7be:	dc06      	bgt.n	802e7ce <__sflush_r+0xfe>
 802e7c0:	89a3      	ldrh	r3, [r4, #12]
 802e7c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e7c6:	81a3      	strh	r3, [r4, #12]
 802e7c8:	f04f 30ff 	mov.w	r0, #4294967295
 802e7cc:	e78e      	b.n	802e6ec <__sflush_r+0x1c>
 802e7ce:	4407      	add	r7, r0
 802e7d0:	eba8 0800 	sub.w	r8, r8, r0
 802e7d4:	e7e9      	b.n	802e7aa <__sflush_r+0xda>
 802e7d6:	bf00      	nop
 802e7d8:	dfbffffe 	.word	0xdfbffffe

0802e7dc <_fflush_r>:
 802e7dc:	b538      	push	{r3, r4, r5, lr}
 802e7de:	690b      	ldr	r3, [r1, #16]
 802e7e0:	4605      	mov	r5, r0
 802e7e2:	460c      	mov	r4, r1
 802e7e4:	b913      	cbnz	r3, 802e7ec <_fflush_r+0x10>
 802e7e6:	2500      	movs	r5, #0
 802e7e8:	4628      	mov	r0, r5
 802e7ea:	bd38      	pop	{r3, r4, r5, pc}
 802e7ec:	b118      	cbz	r0, 802e7f6 <_fflush_r+0x1a>
 802e7ee:	6a03      	ldr	r3, [r0, #32]
 802e7f0:	b90b      	cbnz	r3, 802e7f6 <_fflush_r+0x1a>
 802e7f2:	f7ff fa2f 	bl	802dc54 <__sinit>
 802e7f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e7fa:	2b00      	cmp	r3, #0
 802e7fc:	d0f3      	beq.n	802e7e6 <_fflush_r+0xa>
 802e7fe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802e800:	07d0      	lsls	r0, r2, #31
 802e802:	d404      	bmi.n	802e80e <_fflush_r+0x32>
 802e804:	0599      	lsls	r1, r3, #22
 802e806:	d402      	bmi.n	802e80e <_fflush_r+0x32>
 802e808:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e80a:	f7ff fbd2 	bl	802dfb2 <__retarget_lock_acquire_recursive>
 802e80e:	4628      	mov	r0, r5
 802e810:	4621      	mov	r1, r4
 802e812:	f7ff ff5d 	bl	802e6d0 <__sflush_r>
 802e816:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802e818:	07da      	lsls	r2, r3, #31
 802e81a:	4605      	mov	r5, r0
 802e81c:	d4e4      	bmi.n	802e7e8 <_fflush_r+0xc>
 802e81e:	89a3      	ldrh	r3, [r4, #12]
 802e820:	059b      	lsls	r3, r3, #22
 802e822:	d4e1      	bmi.n	802e7e8 <_fflush_r+0xc>
 802e824:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e826:	f7ff fbc5 	bl	802dfb4 <__retarget_lock_release_recursive>
 802e82a:	e7dd      	b.n	802e7e8 <_fflush_r+0xc>

0802e82c <__swbuf_r>:
 802e82c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e82e:	460e      	mov	r6, r1
 802e830:	4614      	mov	r4, r2
 802e832:	4605      	mov	r5, r0
 802e834:	b118      	cbz	r0, 802e83e <__swbuf_r+0x12>
 802e836:	6a03      	ldr	r3, [r0, #32]
 802e838:	b90b      	cbnz	r3, 802e83e <__swbuf_r+0x12>
 802e83a:	f7ff fa0b 	bl	802dc54 <__sinit>
 802e83e:	69a3      	ldr	r3, [r4, #24]
 802e840:	60a3      	str	r3, [r4, #8]
 802e842:	89a3      	ldrh	r3, [r4, #12]
 802e844:	071a      	lsls	r2, r3, #28
 802e846:	d525      	bpl.n	802e894 <__swbuf_r+0x68>
 802e848:	6923      	ldr	r3, [r4, #16]
 802e84a:	b31b      	cbz	r3, 802e894 <__swbuf_r+0x68>
 802e84c:	6823      	ldr	r3, [r4, #0]
 802e84e:	6922      	ldr	r2, [r4, #16]
 802e850:	1a98      	subs	r0, r3, r2
 802e852:	6963      	ldr	r3, [r4, #20]
 802e854:	b2f6      	uxtb	r6, r6
 802e856:	4283      	cmp	r3, r0
 802e858:	4637      	mov	r7, r6
 802e85a:	dc04      	bgt.n	802e866 <__swbuf_r+0x3a>
 802e85c:	4621      	mov	r1, r4
 802e85e:	4628      	mov	r0, r5
 802e860:	f7ff ffbc 	bl	802e7dc <_fflush_r>
 802e864:	b9e0      	cbnz	r0, 802e8a0 <__swbuf_r+0x74>
 802e866:	68a3      	ldr	r3, [r4, #8]
 802e868:	3b01      	subs	r3, #1
 802e86a:	60a3      	str	r3, [r4, #8]
 802e86c:	6823      	ldr	r3, [r4, #0]
 802e86e:	1c5a      	adds	r2, r3, #1
 802e870:	6022      	str	r2, [r4, #0]
 802e872:	701e      	strb	r6, [r3, #0]
 802e874:	6962      	ldr	r2, [r4, #20]
 802e876:	1c43      	adds	r3, r0, #1
 802e878:	429a      	cmp	r2, r3
 802e87a:	d004      	beq.n	802e886 <__swbuf_r+0x5a>
 802e87c:	89a3      	ldrh	r3, [r4, #12]
 802e87e:	07db      	lsls	r3, r3, #31
 802e880:	d506      	bpl.n	802e890 <__swbuf_r+0x64>
 802e882:	2e0a      	cmp	r6, #10
 802e884:	d104      	bne.n	802e890 <__swbuf_r+0x64>
 802e886:	4621      	mov	r1, r4
 802e888:	4628      	mov	r0, r5
 802e88a:	f7ff ffa7 	bl	802e7dc <_fflush_r>
 802e88e:	b938      	cbnz	r0, 802e8a0 <__swbuf_r+0x74>
 802e890:	4638      	mov	r0, r7
 802e892:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802e894:	4621      	mov	r1, r4
 802e896:	4628      	mov	r0, r5
 802e898:	f000 f806 	bl	802e8a8 <__swsetup_r>
 802e89c:	2800      	cmp	r0, #0
 802e89e:	d0d5      	beq.n	802e84c <__swbuf_r+0x20>
 802e8a0:	f04f 37ff 	mov.w	r7, #4294967295
 802e8a4:	e7f4      	b.n	802e890 <__swbuf_r+0x64>
	...

0802e8a8 <__swsetup_r>:
 802e8a8:	b538      	push	{r3, r4, r5, lr}
 802e8aa:	4b2a      	ldr	r3, [pc, #168]	; (802e954 <__swsetup_r+0xac>)
 802e8ac:	4605      	mov	r5, r0
 802e8ae:	6818      	ldr	r0, [r3, #0]
 802e8b0:	460c      	mov	r4, r1
 802e8b2:	b118      	cbz	r0, 802e8bc <__swsetup_r+0x14>
 802e8b4:	6a03      	ldr	r3, [r0, #32]
 802e8b6:	b90b      	cbnz	r3, 802e8bc <__swsetup_r+0x14>
 802e8b8:	f7ff f9cc 	bl	802dc54 <__sinit>
 802e8bc:	89a3      	ldrh	r3, [r4, #12]
 802e8be:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e8c2:	0718      	lsls	r0, r3, #28
 802e8c4:	d422      	bmi.n	802e90c <__swsetup_r+0x64>
 802e8c6:	06d9      	lsls	r1, r3, #27
 802e8c8:	d407      	bmi.n	802e8da <__swsetup_r+0x32>
 802e8ca:	2309      	movs	r3, #9
 802e8cc:	602b      	str	r3, [r5, #0]
 802e8ce:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802e8d2:	81a3      	strh	r3, [r4, #12]
 802e8d4:	f04f 30ff 	mov.w	r0, #4294967295
 802e8d8:	e034      	b.n	802e944 <__swsetup_r+0x9c>
 802e8da:	0758      	lsls	r0, r3, #29
 802e8dc:	d512      	bpl.n	802e904 <__swsetup_r+0x5c>
 802e8de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e8e0:	b141      	cbz	r1, 802e8f4 <__swsetup_r+0x4c>
 802e8e2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e8e6:	4299      	cmp	r1, r3
 802e8e8:	d002      	beq.n	802e8f0 <__swsetup_r+0x48>
 802e8ea:	4628      	mov	r0, r5
 802e8ec:	f7ff fbd0 	bl	802e090 <_free_r>
 802e8f0:	2300      	movs	r3, #0
 802e8f2:	6363      	str	r3, [r4, #52]	; 0x34
 802e8f4:	89a3      	ldrh	r3, [r4, #12]
 802e8f6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802e8fa:	81a3      	strh	r3, [r4, #12]
 802e8fc:	2300      	movs	r3, #0
 802e8fe:	6063      	str	r3, [r4, #4]
 802e900:	6923      	ldr	r3, [r4, #16]
 802e902:	6023      	str	r3, [r4, #0]
 802e904:	89a3      	ldrh	r3, [r4, #12]
 802e906:	f043 0308 	orr.w	r3, r3, #8
 802e90a:	81a3      	strh	r3, [r4, #12]
 802e90c:	6923      	ldr	r3, [r4, #16]
 802e90e:	b94b      	cbnz	r3, 802e924 <__swsetup_r+0x7c>
 802e910:	89a3      	ldrh	r3, [r4, #12]
 802e912:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802e916:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802e91a:	d003      	beq.n	802e924 <__swsetup_r+0x7c>
 802e91c:	4621      	mov	r1, r4
 802e91e:	4628      	mov	r0, r5
 802e920:	f000 f840 	bl	802e9a4 <__smakebuf_r>
 802e924:	89a0      	ldrh	r0, [r4, #12]
 802e926:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e92a:	f010 0301 	ands.w	r3, r0, #1
 802e92e:	d00a      	beq.n	802e946 <__swsetup_r+0x9e>
 802e930:	2300      	movs	r3, #0
 802e932:	60a3      	str	r3, [r4, #8]
 802e934:	6963      	ldr	r3, [r4, #20]
 802e936:	425b      	negs	r3, r3
 802e938:	61a3      	str	r3, [r4, #24]
 802e93a:	6923      	ldr	r3, [r4, #16]
 802e93c:	b943      	cbnz	r3, 802e950 <__swsetup_r+0xa8>
 802e93e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802e942:	d1c4      	bne.n	802e8ce <__swsetup_r+0x26>
 802e944:	bd38      	pop	{r3, r4, r5, pc}
 802e946:	0781      	lsls	r1, r0, #30
 802e948:	bf58      	it	pl
 802e94a:	6963      	ldrpl	r3, [r4, #20]
 802e94c:	60a3      	str	r3, [r4, #8]
 802e94e:	e7f4      	b.n	802e93a <__swsetup_r+0x92>
 802e950:	2000      	movs	r0, #0
 802e952:	e7f7      	b.n	802e944 <__swsetup_r+0x9c>
 802e954:	20000164 	.word	0x20000164

0802e958 <__swhatbuf_r>:
 802e958:	b570      	push	{r4, r5, r6, lr}
 802e95a:	460c      	mov	r4, r1
 802e95c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e960:	2900      	cmp	r1, #0
 802e962:	b096      	sub	sp, #88	; 0x58
 802e964:	4615      	mov	r5, r2
 802e966:	461e      	mov	r6, r3
 802e968:	da0d      	bge.n	802e986 <__swhatbuf_r+0x2e>
 802e96a:	89a3      	ldrh	r3, [r4, #12]
 802e96c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802e970:	f04f 0100 	mov.w	r1, #0
 802e974:	bf0c      	ite	eq
 802e976:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802e97a:	2340      	movne	r3, #64	; 0x40
 802e97c:	2000      	movs	r0, #0
 802e97e:	6031      	str	r1, [r6, #0]
 802e980:	602b      	str	r3, [r5, #0]
 802e982:	b016      	add	sp, #88	; 0x58
 802e984:	bd70      	pop	{r4, r5, r6, pc}
 802e986:	466a      	mov	r2, sp
 802e988:	f000 f848 	bl	802ea1c <_fstat_r>
 802e98c:	2800      	cmp	r0, #0
 802e98e:	dbec      	blt.n	802e96a <__swhatbuf_r+0x12>
 802e990:	9901      	ldr	r1, [sp, #4]
 802e992:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802e996:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802e99a:	4259      	negs	r1, r3
 802e99c:	4159      	adcs	r1, r3
 802e99e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802e9a2:	e7eb      	b.n	802e97c <__swhatbuf_r+0x24>

0802e9a4 <__smakebuf_r>:
 802e9a4:	898b      	ldrh	r3, [r1, #12]
 802e9a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802e9a8:	079d      	lsls	r5, r3, #30
 802e9aa:	4606      	mov	r6, r0
 802e9ac:	460c      	mov	r4, r1
 802e9ae:	d507      	bpl.n	802e9c0 <__smakebuf_r+0x1c>
 802e9b0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802e9b4:	6023      	str	r3, [r4, #0]
 802e9b6:	6123      	str	r3, [r4, #16]
 802e9b8:	2301      	movs	r3, #1
 802e9ba:	6163      	str	r3, [r4, #20]
 802e9bc:	b002      	add	sp, #8
 802e9be:	bd70      	pop	{r4, r5, r6, pc}
 802e9c0:	ab01      	add	r3, sp, #4
 802e9c2:	466a      	mov	r2, sp
 802e9c4:	f7ff ffc8 	bl	802e958 <__swhatbuf_r>
 802e9c8:	9900      	ldr	r1, [sp, #0]
 802e9ca:	4605      	mov	r5, r0
 802e9cc:	4630      	mov	r0, r6
 802e9ce:	f7ff f81b 	bl	802da08 <_malloc_r>
 802e9d2:	b948      	cbnz	r0, 802e9e8 <__smakebuf_r+0x44>
 802e9d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e9d8:	059a      	lsls	r2, r3, #22
 802e9da:	d4ef      	bmi.n	802e9bc <__smakebuf_r+0x18>
 802e9dc:	f023 0303 	bic.w	r3, r3, #3
 802e9e0:	f043 0302 	orr.w	r3, r3, #2
 802e9e4:	81a3      	strh	r3, [r4, #12]
 802e9e6:	e7e3      	b.n	802e9b0 <__smakebuf_r+0xc>
 802e9e8:	89a3      	ldrh	r3, [r4, #12]
 802e9ea:	6020      	str	r0, [r4, #0]
 802e9ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802e9f0:	81a3      	strh	r3, [r4, #12]
 802e9f2:	9b00      	ldr	r3, [sp, #0]
 802e9f4:	6163      	str	r3, [r4, #20]
 802e9f6:	9b01      	ldr	r3, [sp, #4]
 802e9f8:	6120      	str	r0, [r4, #16]
 802e9fa:	b15b      	cbz	r3, 802ea14 <__smakebuf_r+0x70>
 802e9fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ea00:	4630      	mov	r0, r6
 802ea02:	f000 f81d 	bl	802ea40 <_isatty_r>
 802ea06:	b128      	cbz	r0, 802ea14 <__smakebuf_r+0x70>
 802ea08:	89a3      	ldrh	r3, [r4, #12]
 802ea0a:	f023 0303 	bic.w	r3, r3, #3
 802ea0e:	f043 0301 	orr.w	r3, r3, #1
 802ea12:	81a3      	strh	r3, [r4, #12]
 802ea14:	89a3      	ldrh	r3, [r4, #12]
 802ea16:	431d      	orrs	r5, r3
 802ea18:	81a5      	strh	r5, [r4, #12]
 802ea1a:	e7cf      	b.n	802e9bc <__smakebuf_r+0x18>

0802ea1c <_fstat_r>:
 802ea1c:	b538      	push	{r3, r4, r5, lr}
 802ea1e:	4d07      	ldr	r5, [pc, #28]	; (802ea3c <_fstat_r+0x20>)
 802ea20:	2300      	movs	r3, #0
 802ea22:	4604      	mov	r4, r0
 802ea24:	4608      	mov	r0, r1
 802ea26:	4611      	mov	r1, r2
 802ea28:	602b      	str	r3, [r5, #0]
 802ea2a:	f7d3 ff5f 	bl	80028ec <_fstat>
 802ea2e:	1c43      	adds	r3, r0, #1
 802ea30:	d102      	bne.n	802ea38 <_fstat_r+0x1c>
 802ea32:	682b      	ldr	r3, [r5, #0]
 802ea34:	b103      	cbz	r3, 802ea38 <_fstat_r+0x1c>
 802ea36:	6023      	str	r3, [r4, #0]
 802ea38:	bd38      	pop	{r3, r4, r5, pc}
 802ea3a:	bf00      	nop
 802ea3c:	200142d4 	.word	0x200142d4

0802ea40 <_isatty_r>:
 802ea40:	b538      	push	{r3, r4, r5, lr}
 802ea42:	4d06      	ldr	r5, [pc, #24]	; (802ea5c <_isatty_r+0x1c>)
 802ea44:	2300      	movs	r3, #0
 802ea46:	4604      	mov	r4, r0
 802ea48:	4608      	mov	r0, r1
 802ea4a:	602b      	str	r3, [r5, #0]
 802ea4c:	f7d3 ff54 	bl	80028f8 <_isatty>
 802ea50:	1c43      	adds	r3, r0, #1
 802ea52:	d102      	bne.n	802ea5a <_isatty_r+0x1a>
 802ea54:	682b      	ldr	r3, [r5, #0]
 802ea56:	b103      	cbz	r3, 802ea5a <_isatty_r+0x1a>
 802ea58:	6023      	str	r3, [r4, #0]
 802ea5a:	bd38      	pop	{r3, r4, r5, pc}
 802ea5c:	200142d4 	.word	0x200142d4

0802ea60 <_init>:
 802ea60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ea62:	bf00      	nop
 802ea64:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ea66:	bc08      	pop	{r3}
 802ea68:	469e      	mov	lr, r3
 802ea6a:	4770      	bx	lr

0802ea6c <_fini>:
 802ea6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ea6e:	bf00      	nop
 802ea70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ea72:	bc08      	pop	{r3}
 802ea74:	469e      	mov	lr, r3
 802ea76:	4770      	bx	lr

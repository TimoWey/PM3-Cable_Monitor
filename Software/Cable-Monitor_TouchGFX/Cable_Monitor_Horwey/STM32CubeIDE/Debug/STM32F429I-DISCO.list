
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002b988  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171a4  0802bb38  0802bb38  0003bb38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08042cdc  08042cdc  00052cdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  080469d4  080469d4  000569d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000063c  08046c20  08046c20  00056c20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  0804725c  0804725c  0005725c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cc34c  080cc34c  000e0184  2**0
                  CONTENTS
  8 .ARM          00000008  080cc34c  080cc34c  000dc34c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cc354  080cc354  000e0184  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cc354  080cc354  000dc354  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cc368  080cc368  000dc368  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000184  20000000  080cc36c  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013d6c  20000188  080cc4f0  000e0188  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013ef4  080cc4f0  000e3ef4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0184  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e01b4  2**0
                  CONTENTS, READONLY
 18 .debug_line   00090315  00000000  00000000  000e02e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001705fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002215bb  00000000  00000000  0017068e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c387  00000000  00000000  00391c49  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004300  00000000  00000000  003bdfd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f162  00000000  00000000  003c22d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007aa5  00000000  00000000  004e1432  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003014a  00000000  00000000  004e8ed7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a80c  00000000  00000000  00519021  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c6f4  00000000  00000000  00553830  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  0055ff24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0056329c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000188 	.word	0x20000188
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802bb20 	.word	0x0802bb20

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000018c 	.word	0x2000018c
 80001ec:	0802bb20 	.word	0x0802bb20

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fb3f 	bl	8008cf8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02a fcd5 	bl	802b028 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa5f 	bl	8000b40 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080cc36c 	.word	0x080cc36c
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000184 	.word	0x20000184
  ldr  r2, =_sbss
 8000694:	20000188 	.word	0x20000188
  ldr  r3, = _ebss
 8000698:	20013ef4 	.word	0x20013ef4

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f008 fc45 	bl	8009074 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f008 fcaf 	bl	8009170 <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f008 fb7e 	bl	8008f30 <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f008 fc3a 	bl	80090b0 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f008 fc2c 	bl	800909c <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	200001a4 	.word	0x200001a4

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fe6d 	bl	8001558 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fe59 	bl	8001554 <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f028 f9c0 	bl	8028c78 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f028 fa3c 	bl	8028d80 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f028 fea5 	bl	802965c <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe23 	bl	800155c <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f028 f935 	bl	8028ba8 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fe09 	bl	800155c <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00c f946 	bl	800cc04 <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00c fa30 	bl	800cdfc <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f008 fdb6 	bl	8009518 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f008 fdb5 	bl	8009520 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00c f923 	bl	800cc04 <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	20000028 	.word	0x20000028
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001d8 	.word	0x200001d8

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	20000028 	.word	0x20000028

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 f9a9 	bl	8008d6c <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 f98c 	bl	8008d6c <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <setCalibrationFlashValues>:
{
 8000a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a70:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8000a72:	009b      	lsls	r3, r3, #2
 8000a74:	3307      	adds	r3, #7
 8000a76:	466d      	mov	r5, sp
 8000a78:	08db      	lsrs	r3, r3, #3
 8000a7a:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8000a7e:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8000a80:	469d      	mov	sp, r3
 8000a82:	466d      	mov	r5, sp
{
 8000a84:	4616      	mov	r6, r2
 8000a86:	4681      	mov	r9, r0
 8000a88:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8000a8a:	4622      	mov	r2, r4
 8000a8c:	4629      	mov	r1, r5
 8000a8e:	f7ff fedf 	bl	8000850 <Flash_Read_Data>
	Rx_Data[index] = value;
 8000a92:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8000a96:	4622      	mov	r2, r4
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4648      	mov	r0, r9
 8000a9c:	f7ff fe9e 	bl	80007dc <Flash_Write_Data>
}
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa6:	bf00      	nop

08000aa8 <SystemClock_Config>:
{
 8000aa8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aaa:	2400      	movs	r4, #0
{
 8000aac:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aae:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000ab2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ab6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000aba:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000abe:	4a1e      	ldr	r2, [pc, #120]	; (8000b38 <SystemClock_Config+0x90>)
 8000ac0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ac2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac6:	4b1d      	ldr	r3, [pc, #116]	; (8000b3c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000acc:	6411      	str	r1, [r2, #64]	; 0x40
 8000ace:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000ad0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000ad4:	9201      	str	r2, [sp, #4]
 8000ad6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad8:	9402      	str	r4, [sp, #8]
 8000ada:	681a      	ldr	r2, [r3, #0]
 8000adc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000ae8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aea:	2201      	movs	r2, #1
 8000aec:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000af0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000af6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000afa:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000afe:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b02:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b06:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b08:	2202      	movs	r2, #2
 8000b0a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b0c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b12:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b14:	f00a fb3e 	bl	800b194 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b18:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b1a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b1e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b26:	a803      	add	r0, sp, #12
 8000b28:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b2a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b30:	f00a fd48 	bl	800b5c4 <HAL_RCC_ClockConfig>
}
 8000b34:	b015      	add	sp, #84	; 0x54
 8000b36:	bd30      	pop	{r4, r5, pc}
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40007000 	.word	0x40007000

08000b40 <main>:
{
 8000b40:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b44:	2400      	movs	r4, #0
{
 8000b46:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b48:	f008 f8e4 	bl	8008d14 <HAL_Init>
  SystemClock_Config();
 8000b4c:	f7ff ffac 	bl	8000aa8 <SystemClock_Config>
  gyro_disable();
 8000b50:	f7ff ff44 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b54:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b58:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b5c:	4bbe      	ldr	r3, [pc, #760]	; (8000e58 <main+0x318>)
 8000b5e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b60:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b62:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b64:	48bd      	ldr	r0, [pc, #756]	; (8000e5c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000b66:	4dbe      	ldr	r5, [pc, #760]	; (8000e60 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b68:	f041 0110 	orr.w	r1, r1, #16
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0110 	and.w	r1, r1, #16
 8000b74:	9100      	str	r1, [sp, #0]
 8000b76:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b78:	9401      	str	r4, [sp, #4]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0120 	orr.w	r1, r1, #32
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0120 	and.w	r1, r1, #32
 8000b88:	9101      	str	r1, [sp, #4]
 8000b8a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b8c:	9402      	str	r4, [sp, #8]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b9c:	9102      	str	r1, [sp, #8]
 8000b9e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ba0:	9403      	str	r4, [sp, #12]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0104 	orr.w	r1, r1, #4
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0104 	and.w	r1, r1, #4
 8000bb0:	9103      	str	r1, [sp, #12]
 8000bb2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bb4:	9404      	str	r4, [sp, #16]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0101 	orr.w	r1, r1, #1
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bc0:	f001 0101 	and.w	r1, r1, #1
 8000bc4:	9104      	str	r1, [sp, #16]
 8000bc6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bc8:	9405      	str	r4, [sp, #20]
 8000bca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bcc:	f041 0102 	orr.w	r1, r1, #2
 8000bd0:	6319      	str	r1, [r3, #48]	; 0x30
 8000bd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bd4:	f001 0102 	and.w	r1, r1, #2
 8000bd8:	9105      	str	r1, [sp, #20]
 8000bda:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000bdc:	9406      	str	r4, [sp, #24]
 8000bde:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000be4:	6319      	str	r1, [r3, #48]	; 0x30
 8000be6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bec:	9106      	str	r1, [sp, #24]
 8000bee:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bf0:	9407      	str	r4, [sp, #28]
 8000bf2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bf4:	f041 0108 	orr.w	r1, r1, #8
 8000bf8:	6319      	str	r1, [r3, #48]	; 0x30
 8000bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bfc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c00:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c02:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c04:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c06:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c08:	f008 fc86 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000c0c:	4893      	ldr	r0, [pc, #588]	; (8000e5c <main+0x31c>)
 8000c0e:	2120      	movs	r1, #32
 8000c10:	2201      	movs	r2, #1
 8000c12:	f008 fc81 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000c16:	4893      	ldr	r0, [pc, #588]	; (8000e64 <main+0x324>)
 8000c18:	4622      	mov	r2, r4
 8000c1a:	2114      	movs	r1, #20
 8000c1c:	f008 fc7c 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8000c20:	4891      	ldr	r0, [pc, #580]	; (8000e68 <main+0x328>)
 8000c22:	4622      	mov	r2, r4
 8000c24:	2180      	movs	r1, #128	; 0x80
 8000c26:	f008 fc77 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000c2a:	4890      	ldr	r0, [pc, #576]	; (8000e6c <main+0x32c>)
 8000c2c:	4622      	mov	r2, r4
 8000c2e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c32:	f008 fc71 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c36:	488e      	ldr	r0, [pc, #568]	; (8000e70 <main+0x330>)
 8000c38:	4622      	mov	r2, r4
 8000c3a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c3e:	f008 fc6b 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c42:	488c      	ldr	r0, [pc, #560]	; (8000e74 <main+0x334>)
 8000c44:	4622      	mov	r2, r4
 8000c46:	2104      	movs	r1, #4
 8000c48:	f008 fc66 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c4c:	2201      	movs	r2, #1
 8000c4e:	4889      	ldr	r0, [pc, #548]	; (8000e74 <main+0x334>)
 8000c50:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c54:	f008 fc60 	bl	8009518 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c58:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c5a:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c5e:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c60:	487e      	ldr	r0, [pc, #504]	; (8000e5c <main+0x31c>)
 8000c62:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c64:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c68:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c6c:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c70:	f008 fb0e 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c74:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c78:	4878      	ldr	r0, [pc, #480]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c7a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c7e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c80:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c82:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c84:	f008 fb04 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c88:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8a:	4874      	ldr	r0, [pc, #464]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c8c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c90:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c92:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c96:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c9a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c9c:	f008 faf8 	bl	8009290 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca0:	4870      	ldr	r0, [pc, #448]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000ca2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cac:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cae:	f008 faef 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb2:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb4:	486c      	ldr	r0, [pc, #432]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb6:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb8:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cba:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cbe:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cc2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc4:	f008 fae4 	bl	8009290 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc8:	4866      	ldr	r0, [pc, #408]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cca:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ccc:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cce:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cd2:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cd6:	f008 fadb 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cda:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cde:	4863      	ldr	r0, [pc, #396]	; (8000e6c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ce0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ce8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cea:	f008 fad1 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cee:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf2:	485f      	ldr	r0, [pc, #380]	; (8000e70 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cf4:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cfc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cfe:	f008 fac7 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d02:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d06:	485b      	ldr	r0, [pc, #364]	; (8000e74 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d08:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d0a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d0c:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d10:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d12:	f008 fabd 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1a:	4853      	ldr	r0, [pc, #332]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d1c:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000d20:	220f      	movs	r2, #15
 8000d22:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d24:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d28:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d2a:	f008 fab1 	bl	8009290 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000d2e:	2105      	movs	r1, #5
 8000d30:	4622      	mov	r2, r4
 8000d32:	2009      	movs	r0, #9
 8000d34:	f008 f83e 	bl	8008db4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000d38:	2009      	movs	r0, #9
 8000d3a:	f008 f879 	bl	8008e30 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d3e:	484e      	ldr	r0, [pc, #312]	; (8000e78 <main+0x338>)
 8000d40:	4a4e      	ldr	r2, [pc, #312]	; (8000e7c <main+0x33c>)
 8000d42:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d44:	f008 f882 	bl	8008e4c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d48:	494d      	ldr	r1, [pc, #308]	; (8000e80 <main+0x340>)
 8000d4a:	4a4e      	ldr	r2, [pc, #312]	; (8000e84 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d4c:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000d4e:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d52:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d56:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d58:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d5c:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d60:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d64:	f008 fe3e 	bl	80099e4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d68:	4641      	mov	r1, r8
 8000d6a:	4628      	mov	r0, r5
 8000d6c:	f00a f806 	bl	800ad7c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d70:	4621      	mov	r1, r4
 8000d72:	4628      	mov	r0, r5
 8000d74:	f00a f822 	bl	800adbc <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d78:	f8df c11c 	ldr.w	ip, [pc, #284]	; 8000e98 <main+0x358>
  hspi5.Instance = SPI5;
 8000d7c:	4842      	ldr	r0, [pc, #264]	; (8000e88 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d7e:	4d43      	ldr	r5, [pc, #268]	; (8000e8c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d80:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d82:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d86:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d8a:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d8e:	2218      	movs	r2, #24
 8000d90:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d94:	220a      	movs	r2, #10
 8000d96:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d98:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d9c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000da0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000da4:	f00a fefc 	bl	800bba0 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000da8:	2207      	movs	r2, #7
 8000daa:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000dac:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000dae:	4a38      	ldr	r2, [pc, #224]	; (8000e90 <main+0x350>)
 8000db0:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000db2:	2040      	movs	r0, #64	; 0x40
 8000db4:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000db8:	e9c5 0205 	strd	r0, r2, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000dbc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000dc0:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc2:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dc4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc8:	4628      	mov	r0, r5
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000dca:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000dce:	e9c5 a803 	strd	sl, r8, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dd2:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 8000dd4:	e9cd b713 	strd	fp, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000dd8:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000dda:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000ddc:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000de0:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8000de2:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000de4:	f00a fdea 	bl	800b9bc <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000de8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dec:	a90b      	add	r1, sp, #44	; 0x2c
 8000dee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000df0:	e9cd 690b 	strd	r6, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000df4:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000df8:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfa:	f00a fe01 	bl	800ba00 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000dfe:	4630      	mov	r0, r6
 8000e00:	f007 ffb4 	bl	8008d6c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e08:	a90b      	add	r1, sp, #44	; 0x2c
 8000e0a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e0c:	e9cd 790b 	strd	r7, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e10:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e14:	f00a fdf4 	bl	800ba00 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e18:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e1c:	a90b      	add	r1, sp, #44	; 0x2c
 8000e1e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e20:	e9cd b90b 	strd	fp, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e24:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e28:	f00a fdea 	bl	800ba00 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e2c:	f44f 720c 	mov.w	r2, #560	; 0x230
 8000e30:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e32:	9908      	ldr	r1, [sp, #32]
 8000e34:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e36:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e3a:	a90b      	add	r1, sp, #44	; 0x2c
 8000e3c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e3e:	e9cd a90b 	strd	sl, r9, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e42:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e44:	f00a fddc 	bl	800ba00 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e48:	4628      	mov	r0, r5
 8000e4a:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8000e4e:	4d11      	ldr	r5, [pc, #68]	; (8000e94 <main+0x354>)
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e50:	f00a fdf4 	bl	800ba3c <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e54:	4621      	mov	r1, r4
 8000e56:	e021      	b.n	8000e9c <main+0x35c>
 8000e58:	40023800 	.word	0x40023800
 8000e5c:	40021000 	.word	0x40021000
 8000e60:	200001ec 	.word	0x200001ec
 8000e64:	40020800 	.word	0x40020800
 8000e68:	40020000 	.word	0x40020000
 8000e6c:	40020400 	.word	0x40020400
 8000e70:	40020c00 	.word	0x40020c00
 8000e74:	40021800 	.word	0x40021800
 8000e78:	200001e4 	.word	0x200001e4
 8000e7c:	40023000 	.word	0x40023000
 8000e80:	40005c00 	.word	0x40005c00
 8000e84:	000186a0 	.word	0x000186a0
 8000e88:	2000031c 	.word	0x2000031c
 8000e8c:	200002e8 	.word	0x200002e8
 8000e90:	a0000140 	.word	0xa0000140
 8000e94:	20000240 	.word	0x20000240
 8000e98:	40015000 	.word	0x40015000
 8000e9c:	2234      	movs	r2, #52	; 0x34
 8000e9e:	a80f      	add	r0, sp, #60	; 0x3c
 8000ea0:	f029 ffc3 	bl	802ae2a <memset>
  hltdc.Instance = LTDC;
 8000ea4:	4a75      	ldr	r2, [pc, #468]	; (800107c <main+0x53c>)
 8000ea6:	602a      	str	r2, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8000ea8:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedVBP = 3;
 8000eaa:	f8c5 b020 	str.w	fp, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8000eae:	61ea      	str	r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000eb0:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000eb4:	f240 1243 	movw	r2, #323	; 0x143
  hltdc.Init.TotalHeigh = 327;
 8000eb8:	f240 1317 	movw	r3, #279	; 0x117
  hltdc.Init.AccumulatedActiveH = 323;
 8000ebc:	e9c5 b209 	strd	fp, r2, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8000ec0:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8000ec2:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.HorizontalSync = 9;
 8000ec6:	f04f 0909 	mov.w	r9, #9
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000eca:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000ecc:	e9c5 320b 	strd	r3, r2, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000ed0:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000ed2:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000ed6:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8000eda:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 8000ede:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ee2:	f009 ff8f 	bl	800ae04 <HAL_LTDC_Init>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ee6:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 240;
 8000ee8:	25f0      	movs	r5, #240	; 0xf0
 8000eea:	9510      	str	r5, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000eec:	9519      	str	r5, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000eee:	f44f 75a0 	mov.w	r5, #320	; 0x140
 8000ef2:	9512      	str	r5, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000ef4:	951a      	str	r5, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000ef6:	25ff      	movs	r5, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ef8:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000efc:	a90f      	add	r1, sp, #60	; 0x3c
 8000efe:	4622      	mov	r2, r4
  pLayerCfg.Alpha = 255;
 8000f00:	9514      	str	r5, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000f02:	2505      	movs	r5, #5
 8000f04:	e9cd c516 	strd	ip, r5, [sp, #88]	; 0x58
  pLayerCfg.WindowX0 = 0;
 8000f08:	940f      	str	r4, [sp, #60]	; 0x3c
  LcdDrv = &ili9341_drv;
 8000f0a:	4d5d      	ldr	r5, [pc, #372]	; (8001080 <main+0x540>)
  pLayerCfg.WindowY0 = 0;
 8000f0c:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000f0e:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8000f10:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000f12:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000f14:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000f18:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f1c:	f00a f848 	bl	800afb0 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000f20:	4a58      	ldr	r2, [pc, #352]	; (8001084 <main+0x544>)
 8000f22:	602a      	str	r2, [r5, #0]
  LcdDrv->Init();
 8000f24:	6812      	ldr	r2, [r2, #0]
  htim1.Instance = TIM1;
 8000f26:	4e58      	ldr	r6, [pc, #352]	; (8001088 <main+0x548>)
  LcdDrv->Init();
 8000f28:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8000f2a:	682a      	ldr	r2, [r5, #0]
  htim3.Instance = TIM3;
 8000f2c:	4d57      	ldr	r5, [pc, #348]	; (800108c <main+0x54c>)
  LcdDrv->DisplayOff();
 8000f2e:	68d2      	ldr	r2, [r2, #12]
 8000f30:	4790      	blx	r2
  htim1.Init.Period = 65535;
 8000f32:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 8000f36:	4a56      	ldr	r2, [pc, #344]	; (8001090 <main+0x550>)
 8000f38:	6032      	str	r2, [r6, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f3a:	4630      	mov	r0, r6
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f3c:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim1.Init.RepetitionCounter = 0;
 8000f40:	e9c6 4404 	strd	r4, r4, [r6, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f44:	61b4      	str	r4, [r6, #24]
  htim1.Init.Period = 65535;
 8000f46:	f8c6 a00c 	str.w	sl, [r6, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f4a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f4e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f52:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f56:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f58:	f00b fa12 	bl	800c380 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f5c:	a90f      	add	r1, sp, #60	; 0x3c
 8000f5e:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f60:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f64:	f00b fb86 	bl	800c674 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f68:	a90b      	add	r1, sp, #44	; 0x2c
 8000f6a:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f70:	f00b fcbe 	bl	800c8f0 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8000f74:	4a47      	ldr	r2, [pc, #284]	; (8001094 <main+0x554>)
 8000f76:	602a      	str	r2, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f78:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f7a:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8000f7e:	f8c5 a00c 	str.w	sl, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f82:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f84:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f86:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f8a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f8e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f92:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8000f96:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f98:	9409      	str	r4, [sp, #36]	; 0x24
 8000f9a:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f9c:	f00b f9f0 	bl	800c380 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fa0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fa4:	a90b      	add	r1, sp, #44	; 0x2c
 8000fa6:	4628      	mov	r0, r5
  htim2.Instance = TIM2;
 8000fa8:	4e3b      	ldr	r6, [pc, #236]	; (8001098 <main+0x558>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000faa:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fac:	f00b fab2 	bl	800c514 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb0:	a90f      	add	r1, sp, #60	; 0x3c
 8000fb2:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000fb4:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb8:	f00b fb5c 	bl	800c674 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fbc:	a909      	add	r1, sp, #36	; 0x24
 8000fbe:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fc0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fc4:	f00b fc94 	bl	800c8f0 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Prescaler = 13124;
 8000fc8:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 8000fcc:	f243 3244 	movw	r2, #13124	; 0x3344
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd0:	2380      	movs	r3, #128	; 0x80
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fd2:	4630      	mov	r0, r6
  htim2.Init.Prescaler = 13124;
 8000fd4:	e9c6 e200 	strd	lr, r2, [r6]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd8:	61b3      	str	r3, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fda:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fde:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fe2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.Period = 9;
 8000fe6:	f8c6 900c 	str.w	r9, [r6, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fea:	60b4      	str	r4, [r6, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fec:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fee:	f00b f9c7 	bl	800c380 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ff2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ff6:	a90f      	add	r1, sp, #60	; 0x3c
 8000ff8:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ffa:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ffc:	f00b fa8a 	bl	800c514 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001000:	a90b      	add	r1, sp, #44	; 0x2c
 8001002:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001004:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001008:	f00b fc72 	bl	800c8f0 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 800100c:	f000 fe04 	bl	8001c18 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001010:	f000 fe00 	bl	8001c14 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001014:	f7ff fce2 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001018:	f000 f95e 	bl	80012d8 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800101c:	f000 f990 	bl	8001340 <MEAS_timer_init>
  Flash_Write_Data(SECTOR_23_ADDR, data_addr, 6);
 8001020:	4b1e      	ldr	r3, [pc, #120]	; (800109c <main+0x55c>)
 8001022:	481f      	ldr	r0, [pc, #124]	; (80010a0 <main+0x560>)
 8001024:	6819      	ldr	r1, [r3, #0]
 8001026:	2206      	movs	r2, #6
 8001028:	f7ff fbd8 	bl	80007dc <Flash_Write_Data>
  Flash_Read_Data(SECTOR_23_ADDR, Rx_Data, 6);
 800102c:	491d      	ldr	r1, [pc, #116]	; (80010a4 <main+0x564>)
 800102e:	481c      	ldr	r0, [pc, #112]	; (80010a0 <main+0x560>)
 8001030:	2206      	movs	r2, #6
 8001032:	f7ff fc0d 	bl	8000850 <Flash_Read_Data>
  osKernelInitialize();
 8001036:	f00b fd6d 	bl	800cb14 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800103a:	4a1b      	ldr	r2, [pc, #108]	; (80010a8 <main+0x568>)
 800103c:	4639      	mov	r1, r7
 800103e:	4640      	mov	r0, r8
 8001040:	f00b fea2 	bl	800cd88 <osMessageQueueNew>
 8001044:	4b19      	ldr	r3, [pc, #100]	; (80010ac <main+0x56c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001046:	4a1a      	ldr	r2, [pc, #104]	; (80010b0 <main+0x570>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001048:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800104a:	4621      	mov	r1, r4
 800104c:	4819      	ldr	r0, [pc, #100]	; (80010b4 <main+0x574>)
 800104e:	f00b fd8d 	bl	800cb6c <osThreadNew>
 8001052:	4b19      	ldr	r3, [pc, #100]	; (80010b8 <main+0x578>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001054:	4a19      	ldr	r2, [pc, #100]	; (80010bc <main+0x57c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001056:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001058:	4621      	mov	r1, r4
 800105a:	4819      	ldr	r0, [pc, #100]	; (80010c0 <main+0x580>)
 800105c:	f00b fd86 	bl	800cb6c <osThreadNew>
 8001060:	4b18      	ldr	r3, [pc, #96]	; (80010c4 <main+0x584>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001062:	4a19      	ldr	r2, [pc, #100]	; (80010c8 <main+0x588>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001064:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001066:	4621      	mov	r1, r4
 8001068:	4818      	ldr	r0, [pc, #96]	; (80010cc <main+0x58c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800106a:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800106c:	f00b fd7e 	bl	800cb6c <osThreadNew>
 8001070:	4b17      	ldr	r3, [pc, #92]	; (80010d0 <main+0x590>)
 8001072:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001074:	f00b fd60 	bl	800cb38 <osKernelStart>
  while (1)
 8001078:	e7fe      	b.n	8001078 <main+0x538>
 800107a:	bf00      	nop
 800107c:	40016800 	.word	0x40016800
 8001080:	200001bc 	.word	0x200001bc
 8001084:	20000034 	.word	0x20000034
 8001088:	20000374 	.word	0x20000374
 800108c:	20000404 	.word	0x20000404
 8001090:	40010000 	.word	0x40010000
 8001094:	40000400 	.word	0x40000400
 8001098:	200003bc 	.word	0x200003bc
 800109c:	20000024 	.word	0x20000024
 80010a0:	081e0000 	.word	0x081e0000
 80010a4:	200001c0 	.word	0x200001c0
 80010a8:	0802bbd0 	.word	0x0802bbd0
 80010ac:	200001d8 	.word	0x200001d8
 80010b0:	0802bc0c 	.word	0x0802bc0c
 80010b4:	08000971 	.word	0x08000971
 80010b8:	200001e0 	.word	0x200001e0
 80010bc:	0802bbac 	.word	0x0802bbac
 80010c0:	08001c29 	.word	0x08001c29
 80010c4:	200001b8 	.word	0x200001b8
 80010c8:	0802bbe8 	.word	0x0802bbe8
 80010cc:	0800097d 	.word	0x0800097d
 80010d0:	200001dc 	.word	0x200001dc

080010d4 <IOE_Init>:
 80010d4:	4770      	bx	lr
 80010d6:	bf00      	nop

080010d8 <IOE_ITConfig>:
 80010d8:	4770      	bx	lr
 80010da:	bf00      	nop

080010dc <IOE_Write>:
{
 80010dc:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010de:	4c09      	ldr	r4, [pc, #36]	; (8001104 <IOE_Write+0x28>)
{
 80010e0:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010e2:	6824      	ldr	r4, [r4, #0]
 80010e4:	9402      	str	r4, [sp, #8]
{
 80010e6:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010e8:	2301      	movs	r3, #1
 80010ea:	f88d 4017 	strb.w	r4, [sp, #23]
 80010ee:	f10d 0417 	add.w	r4, sp, #23
 80010f2:	460a      	mov	r2, r1
 80010f4:	9301      	str	r3, [sp, #4]
 80010f6:	4601      	mov	r1, r0
 80010f8:	9400      	str	r4, [sp, #0]
 80010fa:	4803      	ldr	r0, [pc, #12]	; (8001108 <IOE_Write+0x2c>)
 80010fc:	f008 fd3a 	bl	8009b74 <HAL_I2C_Mem_Write>
}
 8001100:	b006      	add	sp, #24
 8001102:	bd10      	pop	{r4, pc}
 8001104:	2000001c 	.word	0x2000001c
 8001108:	200001ec 	.word	0x200001ec

0800110c <IOE_Read>:
{
 800110c:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800110e:	4b0b      	ldr	r3, [pc, #44]	; (800113c <IOE_Read+0x30>)
{
 8001110:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001112:	681b      	ldr	r3, [r3, #0]
 8001114:	9302      	str	r3, [sp, #8]
{
 8001116:	4684      	mov	ip, r0
 8001118:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800111a:	2301      	movs	r3, #1
 800111c:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001120:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001122:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001126:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800112a:	4661      	mov	r1, ip
 800112c:	4804      	ldr	r0, [pc, #16]	; (8001140 <IOE_Read+0x34>)
 800112e:	f008 fe13 	bl	8009d58 <HAL_I2C_Mem_Read>
}
 8001132:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001136:	b007      	add	sp, #28
 8001138:	f85d fb04 	ldr.w	pc, [sp], #4
 800113c:	2000001c 	.word	0x2000001c
 8001140:	200001ec 	.word	0x200001ec

08001144 <IOE_ReadMultiple>:
{
 8001144:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001146:	4c09      	ldr	r4, [pc, #36]	; (800116c <IOE_ReadMultiple+0x28>)
{
 8001148:	b084      	sub	sp, #16
 800114a:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800114c:	6820      	ldr	r0, [r4, #0]
 800114e:	9002      	str	r0, [sp, #8]
 8001150:	e9cd 2300 	strd	r2, r3, [sp]
 8001154:	4806      	ldr	r0, [pc, #24]	; (8001170 <IOE_ReadMultiple+0x2c>)
 8001156:	460a      	mov	r2, r1
 8001158:	2301      	movs	r3, #1
 800115a:	4661      	mov	r1, ip
 800115c:	f008 fdfc 	bl	8009d58 <HAL_I2C_Mem_Read>
}
 8001160:	3800      	subs	r0, #0
 8001162:	bf18      	it	ne
 8001164:	2001      	movne	r0, #1
 8001166:	b004      	add	sp, #16
 8001168:	bd10      	pop	{r4, pc}
 800116a:	bf00      	nop
 800116c:	2000001c 	.word	0x2000001c
 8001170:	200001ec 	.word	0x200001ec

08001174 <IOE_Delay>:
 8001174:	f007 bdfa 	b.w	8008d6c <HAL_Delay>

08001178 <LCD_IO_Init>:
{
 8001178:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800117a:	4806      	ldr	r0, [pc, #24]	; (8001194 <LCD_IO_Init+0x1c>)
 800117c:	2200      	movs	r2, #0
 800117e:	2104      	movs	r1, #4
 8001180:	f008 f9ca 	bl	8009518 <HAL_GPIO_WritePin>
}
 8001184:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001188:	4802      	ldr	r0, [pc, #8]	; (8001194 <LCD_IO_Init+0x1c>)
 800118a:	2201      	movs	r2, #1
 800118c:	2104      	movs	r1, #4
 800118e:	f008 b9c3 	b.w	8009518 <HAL_GPIO_WritePin>
 8001192:	bf00      	nop
 8001194:	40020800 	.word	0x40020800

08001198 <LCD_IO_WriteData>:
{
 8001198:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800119a:	4d10      	ldr	r5, [pc, #64]	; (80011dc <LCD_IO_WriteData+0x44>)
{
 800119c:	b083      	sub	sp, #12
 800119e:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80011a0:	2201      	movs	r2, #1
 80011a2:	480f      	ldr	r0, [pc, #60]	; (80011e0 <LCD_IO_WriteData+0x48>)
 80011a4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011a8:	f008 f9b6 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011ac:	4628      	mov	r0, r5
 80011ae:	2200      	movs	r2, #0
 80011b0:	2104      	movs	r1, #4
 80011b2:	f008 f9b1 	bl	8009518 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011b6:	4b0b      	ldr	r3, [pc, #44]	; (80011e4 <LCD_IO_WriteData+0x4c>)
 80011b8:	480b      	ldr	r0, [pc, #44]	; (80011e8 <LCD_IO_WriteData+0x50>)
 80011ba:	681b      	ldr	r3, [r3, #0]
 80011bc:	f8ad 4006 	strh.w	r4, [sp, #6]
 80011c0:	f10d 0106 	add.w	r1, sp, #6
 80011c4:	2201      	movs	r2, #1
 80011c6:	f00a fd4d 	bl	800bc64 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011ca:	2201      	movs	r2, #1
 80011cc:	2104      	movs	r1, #4
 80011ce:	4628      	mov	r0, r5
}
 80011d0:	b003      	add	sp, #12
 80011d2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011d6:	f008 b99f 	b.w	8009518 <HAL_GPIO_WritePin>
 80011da:	bf00      	nop
 80011dc:	40020800 	.word	0x40020800
 80011e0:	40020c00 	.word	0x40020c00
 80011e4:	20000020 	.word	0x20000020
 80011e8:	2000031c 	.word	0x2000031c

080011ec <LCD_IO_WriteReg>:
{
 80011ec:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011ee:	4d10      	ldr	r5, [pc, #64]	; (8001230 <LCD_IO_WriteReg+0x44>)
{
 80011f0:	b083      	sub	sp, #12
 80011f2:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80011f4:	2200      	movs	r2, #0
 80011f6:	480f      	ldr	r0, [pc, #60]	; (8001234 <LCD_IO_WriteReg+0x48>)
 80011f8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011fc:	f008 f98c 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001200:	4628      	mov	r0, r5
 8001202:	2200      	movs	r2, #0
 8001204:	2104      	movs	r1, #4
 8001206:	f008 f987 	bl	8009518 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800120a:	4b0b      	ldr	r3, [pc, #44]	; (8001238 <LCD_IO_WriteReg+0x4c>)
 800120c:	480b      	ldr	r0, [pc, #44]	; (800123c <LCD_IO_WriteReg+0x50>)
 800120e:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001210:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001214:	f10d 0106 	add.w	r1, sp, #6
 8001218:	2201      	movs	r2, #1
 800121a:	f00a fd23 	bl	800bc64 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800121e:	2201      	movs	r2, #1
 8001220:	2104      	movs	r1, #4
 8001222:	4628      	mov	r0, r5
}
 8001224:	b003      	add	sp, #12
 8001226:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800122a:	f008 b975 	b.w	8009518 <HAL_GPIO_WritePin>
 800122e:	bf00      	nop
 8001230:	40020800 	.word	0x40020800
 8001234:	40020c00 	.word	0x40020c00
 8001238:	20000020 	.word	0x20000020
 800123c:	2000031c 	.word	0x2000031c

08001240 <LCD_IO_ReadData>:
{
 8001240:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001244:	4e19      	ldr	r6, [pc, #100]	; (80012ac <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001246:	4f1a      	ldr	r7, [pc, #104]	; (80012b0 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001248:	f8df 9068 	ldr.w	r9, [pc, #104]	; 80012b4 <LCD_IO_ReadData+0x74>
 800124c:	f8df 8068 	ldr.w	r8, [pc, #104]	; 80012b8 <LCD_IO_ReadData+0x78>
{
 8001250:	b083      	sub	sp, #12
 8001252:	460c      	mov	r4, r1
 8001254:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001256:	2200      	movs	r2, #0
 8001258:	4630      	mov	r0, r6
 800125a:	2104      	movs	r1, #4
 800125c:	f008 f95c 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001260:	4638      	mov	r0, r7
 8001262:	2200      	movs	r2, #0
 8001264:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001268:	f008 f956 	bl	8009518 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800126c:	f8d9 3000 	ldr.w	r3, [r9]
 8001270:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001274:	a901      	add	r1, sp, #4
 8001276:	2201      	movs	r2, #1
 8001278:	4640      	mov	r0, r8
 800127a:	f00a fcf3 	bl	800bc64 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800127e:	f8d9 3000 	ldr.w	r3, [r9]
 8001282:	4622      	mov	r2, r4
 8001284:	a901      	add	r1, sp, #4
 8001286:	4640      	mov	r0, r8
 8001288:	f00a ff94 	bl	800c1b4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800128c:	4638      	mov	r0, r7
 800128e:	2201      	movs	r2, #1
 8001290:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001294:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001296:	f008 f93f 	bl	8009518 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800129a:	4630      	mov	r0, r6
 800129c:	2201      	movs	r2, #1
 800129e:	2104      	movs	r1, #4
 80012a0:	f008 f93a 	bl	8009518 <HAL_GPIO_WritePin>
}
 80012a4:	4620      	mov	r0, r4
 80012a6:	b003      	add	sp, #12
 80012a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80012ac:	40020800 	.word	0x40020800
 80012b0:	40020c00 	.word	0x40020c00
 80012b4:	20000020 	.word	0x20000020
 80012b8:	2000031c 	.word	0x2000031c

080012bc <LCD_Delay>:
  HAL_Delay(Delay);
 80012bc:	f007 bd56 	b.w	8008d6c <HAL_Delay>

080012c0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80012c0:	4b03      	ldr	r3, [pc, #12]	; (80012d0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80012c2:	6802      	ldr	r2, [r0, #0]
 80012c4:	429a      	cmp	r2, r3
 80012c6:	d000      	beq.n	80012ca <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80012c8:	4770      	bx	lr
    HAL_IncTick();
 80012ca:	f007 bd3d 	b.w	8008d48 <HAL_IncTick>
 80012ce:	bf00      	nop
 80012d0:	40001000 	.word	0x40001000

080012d4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80012d4:	4770      	bx	lr
 80012d6:	bf00      	nop

080012d8 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80012d8:	b410      	push	{r4}
 80012da:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012dc:	4b15      	ldr	r3, [pc, #84]	; (8001334 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012de:	4916      	ldr	r1, [pc, #88]	; (8001338 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012e0:	2400      	movs	r4, #0
 80012e2:	9400      	str	r4, [sp, #0]
 80012e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012e6:	f042 0220 	orr.w	r2, r2, #32
 80012ea:	631a      	str	r2, [r3, #48]	; 0x30
 80012ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012ee:	f002 0220 	and.w	r2, r2, #32
 80012f2:	9200      	str	r2, [sp, #0]
 80012f4:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012f6:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80012f8:	4a10      	ldr	r2, [pc, #64]	; (800133c <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012fa:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80012fe:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001300:	6808      	ldr	r0, [r1, #0]
 8001302:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001306:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001308:	9401      	str	r4, [sp, #4]
 800130a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800130c:	f041 0104 	orr.w	r1, r1, #4
 8001310:	6319      	str	r1, [r3, #48]	; 0x30
 8001312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001314:	f003 0304 	and.w	r3, r3, #4
 8001318:	9301      	str	r3, [sp, #4]
 800131a:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 800131c:	6813      	ldr	r3, [r2, #0]
 800131e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001322:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001324:	6813      	ldr	r3, [r2, #0]
 8001326:	f043 030c 	orr.w	r3, r3, #12
 800132a:	6013      	str	r3, [r2, #0]
}
 800132c:	b003      	add	sp, #12
 800132e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001332:	4770      	bx	lr
 8001334:	40023800 	.word	0x40023800
 8001338:	40021400 	.word	0x40021400
 800133c:	40020800 	.word	0x40020800

08001340 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001340:	b410      	push	{r4}
 8001342:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001344:	4a0e      	ldr	r2, [pc, #56]	; (8001380 <MEAS_timer_init+0x40>)
 8001346:	2000      	movs	r0, #0
 8001348:	9001      	str	r0, [sp, #4]
 800134a:	6c11      	ldr	r1, [r2, #64]	; 0x40
 800134c:	f041 0101 	orr.w	r1, r1, #1
 8001350:	6411      	str	r1, [r2, #64]	; 0x40
 8001352:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001354:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001358:	f002 0201 	and.w	r2, r2, #1
 800135c:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800135e:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001362:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001364:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001366:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001368:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 800136a:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800136c:	4905      	ldr	r1, [pc, #20]	; (8001384 <MEAS_timer_init+0x44>)
 800136e:	f042 0220 	orr.w	r2, r2, #32
 8001372:	605a      	str	r2, [r3, #4]
 8001374:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001378:	b003      	add	sp, #12
 800137a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800137e:	4770      	bx	lr
 8001380:	40023800 	.word	0x40023800
 8001384:	e000e100 	.word	0xe000e100

08001388 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001388:	b410      	push	{r4}
 800138a:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800138c:	4a36      	ldr	r2, [pc, #216]	; (8001468 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800138e:	4b37      	ldr	r3, [pc, #220]	; (800146c <MEAS_ADC3_scan_init+0xe4>)
 8001390:	4c37      	ldr	r4, [pc, #220]	; (8001470 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001392:	2100      	movs	r1, #0
 8001394:	9100      	str	r1, [sp, #0]
 8001396:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001398:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 800139c:	6450      	str	r0, [r2, #68]	; 0x44
 800139e:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80013a0:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 80013a4:	9000      	str	r0, [sp, #0]
 80013a6:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80013a8:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80013aa:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 80013ae:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 80013b0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013b2:	f040 0004 	orr.w	r0, r0, #4
 80013b6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 80013b8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013ba:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 80013be:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 80013c0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013c2:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 80013c6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 80013c8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013ca:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 80013ce:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 80013d0:	6858      	ldr	r0, [r3, #4]
 80013d2:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013d6:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 80013d8:	6898      	ldr	r0, [r3, #8]
 80013da:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80013de:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80013e0:	6898      	ldr	r0, [r3, #8]
 80013e2:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80013e6:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80013e8:	6898      	ldr	r0, [r3, #8]
 80013ea:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013ee:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013f0:	9101      	str	r1, [sp, #4]
 80013f2:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80013f4:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80013f8:	6310      	str	r0, [r2, #48]	; 0x30
 80013fa:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80013fc:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001400:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001402:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001406:	9a01      	ldr	r2, [sp, #4]
 8001408:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 800140c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800140e:	f022 0201 	bic.w	r2, r2, #1
 8001412:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001414:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001416:	07d2      	lsls	r2, r2, #31
 8001418:	d4fc      	bmi.n	8001414 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 800141a:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 800141c:	4815      	ldr	r0, [pc, #84]	; (8001474 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800141e:	4916      	ldr	r1, [pc, #88]	; (8001478 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001420:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001424:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001426:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001428:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800142c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 800142e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001430:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001434:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001436:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001438:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800143c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800143e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001440:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001444:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001446:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001448:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800144c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800144e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001450:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001454:	f042 0210 	orr.w	r2, r2, #16
 8001458:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800145a:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 800145c:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800145e:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001460:	b003      	add	sp, #12
 8001462:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001466:	4770      	bx	lr
 8001468:	40023800 	.word	0x40023800
 800146c:	40012200 	.word	0x40012200
 8001470:	e000e100 	.word	0xe000e100
 8001474:	4001224c 	.word	0x4001224c
 8001478:	2000044c 	.word	0x2000044c

0800147c <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 800147c:	4b1b      	ldr	r3, [pc, #108]	; (80014ec <DMA2_Stream1_IRQHandler+0x70>)
 800147e:	681a      	ldr	r2, [r3, #0]
 8001480:	0511      	lsls	r1, r2, #20
 8001482:	d400      	bmi.n	8001486 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001484:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001486:	4a1a      	ldr	r2, [pc, #104]	; (80014f0 <DMA2_Stream1_IRQHandler+0x74>)
 8001488:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 800148c:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001490:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001494:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001498:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 800149c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800149e:	f022 0201 	bic.w	r2, r2, #1
 80014a2:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80014a4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014a6:	07d2      	lsls	r2, r2, #31
 80014a8:	d4fc      	bmi.n	80014a4 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014aa:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014ac:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014b0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 80014b4:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014b6:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014b8:	490e      	ldr	r1, [pc, #56]	; (80014f4 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014ba:	f023 0301 	bic.w	r3, r3, #1
 80014be:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014c0:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014c2:	4b0d      	ldr	r3, [pc, #52]	; (80014f8 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014c4:	f020 0001 	bic.w	r0, r0, #1
 80014c8:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 80014ca:	6888      	ldr	r0, [r1, #8]
 80014cc:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80014d0:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014d2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014d4:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80014d8:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80014da:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014dc:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80014e0:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80014e2:	6813      	ldr	r3, [r2, #0]
 80014e4:	f023 0301 	bic.w	r3, r3, #1
 80014e8:	6013      	str	r3, [r2, #0]
}
 80014ea:	4770      	bx	lr
 80014ec:	40026400 	.word	0x40026400
 80014f0:	e000e100 	.word	0xe000e100
 80014f4:	40012200 	.word	0x40012200
 80014f8:	40023800 	.word	0x40023800

080014fc <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80014fc:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80014fe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001502:	2100      	movs	r1, #0
 8001504:	480f      	ldr	r0, [pc, #60]	; (8001544 <MEAS_start_measure+0x48>)
 8001506:	f029 fc90 	bl	802ae2a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 800150a:	f7ff ff3d 	bl	8001388 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800150e:	4a0e      	ldr	r2, [pc, #56]	; (8001548 <MEAS_start_measure+0x4c>)
 8001510:	490e      	ldr	r1, [pc, #56]	; (800154c <MEAS_start_measure+0x50>)
 8001512:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001514:	480e      	ldr	r0, [pc, #56]	; (8001550 <MEAS_start_measure+0x54>)
 8001516:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800151a:	f043 0301 	orr.w	r3, r3, #1
 800151e:	6293      	str	r3, [r2, #40]	; 0x28
 8001520:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001524:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001526:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001528:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800152c:	f043 0301 	orr.w	r3, r3, #1
 8001530:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001532:	680b      	ldr	r3, [r1, #0]
 8001534:	f043 0301 	orr.w	r3, r3, #1
 8001538:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800153a:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800153c:	07db      	lsls	r3, r3, #31
 800153e:	d4fc      	bmi.n	800153a <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001540:	4800      	ldr	r0, [pc, #0]	; (8001544 <MEAS_start_measure+0x48>)
 8001542:	bd10      	pop	{r4, pc}
 8001544:	2000044c 	.word	0x2000044c
 8001548:	40026400 	.word	0x40026400
 800154c:	e000e100 	.word	0xe000e100
 8001550:	40012200 	.word	0x40012200

08001554 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001554:	2004      	movs	r0, #4
 8001556:	4770      	bx	lr

08001558 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001558:	2040      	movs	r0, #64	; 0x40
 800155a:	4770      	bx	lr

0800155c <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 800155c:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001560:	4770      	bx	lr
 8001562:	bf00      	nop

08001564 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001564:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001566:	4b0e      	ldr	r3, [pc, #56]	; (80015a0 <HAL_MspInit+0x3c>)
 8001568:	2200      	movs	r2, #0
 800156a:	9200      	str	r2, [sp, #0]
 800156c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800156e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001572:	6459      	str	r1, [r3, #68]	; 0x44
 8001574:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001576:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 800157a:	9000      	str	r0, [sp, #0]
 800157c:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800157e:	9201      	str	r2, [sp, #4]
 8001580:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001582:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001586:	6418      	str	r0, [r3, #64]	; 0x40
 8001588:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800158a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800158e:	9301      	str	r3, [sp, #4]
 8001590:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001592:	210f      	movs	r1, #15
 8001594:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001598:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800159a:	f007 bc0b 	b.w	8008db4 <HAL_NVIC_SetPriority>
 800159e:	bf00      	nop
 80015a0:	40023800 	.word	0x40023800

080015a4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80015a4:	4b0b      	ldr	r3, [pc, #44]	; (80015d4 <HAL_CRC_MspInit+0x30>)
 80015a6:	6802      	ldr	r2, [r0, #0]
 80015a8:	429a      	cmp	r2, r3
 80015aa:	d000      	beq.n	80015ae <HAL_CRC_MspInit+0xa>
 80015ac:	4770      	bx	lr
{
 80015ae:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80015b0:	2200      	movs	r2, #0
 80015b2:	9201      	str	r2, [sp, #4]
 80015b4:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 80015b8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80015bc:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 80015c0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80015c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015c6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80015ca:	9301      	str	r3, [sp, #4]
 80015cc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80015ce:	b002      	add	sp, #8
 80015d0:	4770      	bx	lr
 80015d2:	bf00      	nop
 80015d4:	40023000 	.word	0x40023000

080015d8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80015d8:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80015dc:	4b2e      	ldr	r3, [pc, #184]	; (8001698 <HAL_I2C_MspInit+0xc0>)
 80015de:	6802      	ldr	r2, [r0, #0]
{
 80015e0:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015e2:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80015e4:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015e6:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80015ea:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80015ee:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80015f0:	d002      	beq.n	80015f8 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80015f2:	b00a      	add	sp, #40	; 0x28
 80015f4:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015f8:	4d28      	ldr	r5, [pc, #160]	; (800169c <HAL_I2C_MspInit+0xc4>)
 80015fa:	9401      	str	r4, [sp, #4]
 80015fc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015fe:	4828      	ldr	r0, [pc, #160]	; (80016a0 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001600:	f043 0304 	orr.w	r3, r3, #4
 8001604:	632b      	str	r3, [r5, #48]	; 0x30
 8001606:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001608:	f003 0304 	and.w	r3, r3, #4
 800160c:	9301      	str	r3, [sp, #4]
 800160e:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001610:	9402      	str	r4, [sp, #8]
 8001612:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001614:	f043 0301 	orr.w	r3, r3, #1
 8001618:	632b      	str	r3, [r5, #48]	; 0x30
 800161a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800161c:	f003 0301 	and.w	r3, r3, #1
 8001620:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001622:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001626:	f04f 0801 	mov.w	r8, #1
 800162a:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800162e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001630:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001632:	2312      	movs	r3, #18
 8001634:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001638:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800163c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800163e:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001640:	f007 fe26 	bl	8009290 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001644:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001646:	f44f 7280 	mov.w	r2, #256	; 0x100
 800164a:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800164c:	4815      	ldr	r0, [pc, #84]	; (80016a4 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800164e:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001650:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001654:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001658:	f007 fe1a 	bl	8009290 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 800165c:	9403      	str	r4, [sp, #12]
 800165e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001660:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001664:	642b      	str	r3, [r5, #64]	; 0x40
 8001666:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001668:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800166c:	4622      	mov	r2, r4
 800166e:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001670:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001672:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001674:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001676:	f007 fb9d 	bl	8008db4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 800167a:	2048      	movs	r0, #72	; 0x48
 800167c:	f007 fbd8 	bl	8008e30 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001680:	6a2b      	ldr	r3, [r5, #32]
 8001682:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001686:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001688:	6a2b      	ldr	r3, [r5, #32]
 800168a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800168e:	622b      	str	r3, [r5, #32]
}
 8001690:	b00a      	add	sp, #40	; 0x28
 8001692:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001696:	bf00      	nop
 8001698:	40005c00 	.word	0x40005c00
 800169c:	40023800 	.word	0x40023800
 80016a0:	40020800 	.word	0x40020800
 80016a4:	40020000 	.word	0x40020000

080016a8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80016a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80016ac:	4604      	mov	r4, r0
 80016ae:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016b0:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016b2:	2230      	movs	r2, #48	; 0x30
 80016b4:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016b6:	e9cd 1108 	strd	r1, r1, [sp, #32]
 80016ba:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 80016be:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016c0:	f029 fbb3 	bl	802ae2a <memset>
  if(hltdc->Instance==LTDC)
 80016c4:	4b67      	ldr	r3, [pc, #412]	; (8001864 <HAL_LTDC_MspInit+0x1bc>)
 80016c6:	6822      	ldr	r2, [r4, #0]
 80016c8:	429a      	cmp	r2, r3
 80016ca:	d002      	beq.n	80016d2 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80016cc:	b01a      	add	sp, #104	; 0x68
 80016ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016d2:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016d4:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016d6:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016d8:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016da:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016dc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016e0:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016e2:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016e4:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016e6:	f00a f83d 	bl	800b764 <HAL_RCCEx_PeriphCLKConfig>
 80016ea:	2800      	cmp	r0, #0
 80016ec:	f040 80b7 	bne.w	800185e <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016f0:	4b5d      	ldr	r3, [pc, #372]	; (8001868 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80016f2:	485e      	ldr	r0, [pc, #376]	; (800186c <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016f4:	2400      	movs	r4, #0
 80016f6:	9401      	str	r4, [sp, #4]
 80016f8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016fa:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80016fe:	645a      	str	r2, [r3, #68]	; 0x44
 8001700:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001702:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001706:	9201      	str	r2, [sp, #4]
 8001708:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800170a:	9402      	str	r4, [sp, #8]
 800170c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800170e:	f042 0220 	orr.w	r2, r2, #32
 8001712:	631a      	str	r2, [r3, #48]	; 0x30
 8001714:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001716:	f002 0220 	and.w	r2, r2, #32
 800171a:	9202      	str	r2, [sp, #8]
 800171c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800171e:	9403      	str	r4, [sp, #12]
 8001720:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001722:	f042 0201 	orr.w	r2, r2, #1
 8001726:	631a      	str	r2, [r3, #48]	; 0x30
 8001728:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800172a:	f002 0201 	and.w	r2, r2, #1
 800172e:	9203      	str	r2, [sp, #12]
 8001730:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001732:	9404      	str	r4, [sp, #16]
 8001734:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001736:	f042 0202 	orr.w	r2, r2, #2
 800173a:	631a      	str	r2, [r3, #48]	; 0x30
 800173c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800173e:	f002 0202 	and.w	r2, r2, #2
 8001742:	9204      	str	r2, [sp, #16]
 8001744:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001746:	9405      	str	r4, [sp, #20]
 8001748:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800174a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800174e:	631a      	str	r2, [r3, #48]	; 0x30
 8001750:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001752:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001756:	9205      	str	r2, [sp, #20]
 8001758:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800175a:	9406      	str	r4, [sp, #24]
 800175c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800175e:	f042 0204 	orr.w	r2, r2, #4
 8001762:	631a      	str	r2, [r3, #48]	; 0x30
 8001764:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001766:	f002 0204 	and.w	r2, r2, #4
 800176a:	9206      	str	r2, [sp, #24]
 800176c:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800176e:	9407      	str	r4, [sp, #28]
 8001770:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001772:	f042 0208 	orr.w	r2, r2, #8
 8001776:	631a      	str	r2, [r3, #48]	; 0x30
 8001778:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800177a:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800177e:	2600      	movs	r6, #0
 8001780:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001782:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001784:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001786:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001788:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800178c:	2302      	movs	r3, #2
 800178e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001792:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001796:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001798:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800179a:	f007 fd79 	bl	8009290 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800179e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017a0:	f641 0258 	movw	r2, #6232	; 0x1858
 80017a4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017a6:	4832      	ldr	r0, [pc, #200]	; (8001870 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017a8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017aa:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017ae:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017b2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017b6:	f007 fd6b 	bl	8009290 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ba:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017bc:	2203      	movs	r2, #3
 80017be:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017c0:	482c      	ldr	r0, [pc, #176]	; (8001874 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017c2:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017c6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017ca:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ce:	f007 fd5f 	bl	8009290 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017d2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017d4:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80017d8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017da:	4826      	ldr	r0, [pc, #152]	; (8001874 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017dc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017de:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017e2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e6:	f007 fd53 	bl	8009290 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017ea:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017ec:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80017f0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017f2:	4821      	ldr	r0, [pc, #132]	; (8001878 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017f4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017f6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017fa:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017fe:	f007 fd47 	bl	8009290 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001802:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001804:	22c0      	movs	r2, #192	; 0xc0
 8001806:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001808:	481c      	ldr	r0, [pc, #112]	; (800187c <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800180a:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800180c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001810:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001814:	f007 fd3c 	bl	8009290 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001818:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800181a:	2208      	movs	r2, #8
 800181c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800181e:	4818      	ldr	r0, [pc, #96]	; (8001880 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001820:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001822:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001826:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800182a:	f007 fd31 	bl	8009290 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800182e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001830:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001832:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001836:	4810      	ldr	r0, [pc, #64]	; (8001878 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001838:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800183c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001840:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001844:	f007 fd24 	bl	8009290 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001848:	4622      	mov	r2, r4
 800184a:	2105      	movs	r1, #5
 800184c:	2058      	movs	r0, #88	; 0x58
 800184e:	f007 fab1 	bl	8008db4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001852:	2058      	movs	r0, #88	; 0x58
 8001854:	f007 faec 	bl	8008e30 <HAL_NVIC_EnableIRQ>
}
 8001858:	b01a      	add	sp, #104	; 0x68
 800185a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800185e:	f7ff fd39 	bl	80012d4 <Error_Handler>
 8001862:	e745      	b.n	80016f0 <HAL_LTDC_MspInit+0x48>
 8001864:	40016800 	.word	0x40016800
 8001868:	40023800 	.word	0x40023800
 800186c:	40021400 	.word	0x40021400
 8001870:	40020000 	.word	0x40020000
 8001874:	40020400 	.word	0x40020400
 8001878:	40021800 	.word	0x40021800
 800187c:	40020800 	.word	0x40020800
 8001880:	40020c00 	.word	0x40020c00
 8001884:	00000000 	.word	0x00000000

08001888 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001888:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800188a:	4a1b      	ldr	r2, [pc, #108]	; (80018f8 <HAL_SPI_MspInit+0x70>)
 800188c:	6801      	ldr	r1, [r0, #0]
{
 800188e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001890:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001892:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001894:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001898:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800189c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800189e:	d001      	beq.n	80018a4 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80018a0:	b008      	add	sp, #32
 80018a2:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 80018a4:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 80018a8:	9300      	str	r3, [sp, #0]
 80018aa:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018ac:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 80018b0:	6450      	str	r0, [r2, #68]	; 0x44
 80018b2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018b4:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 80018b8:	9000      	str	r0, [sp, #0]
 80018ba:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018bc:	9301      	str	r3, [sp, #4]
 80018be:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018c0:	480e      	ldr	r0, [pc, #56]	; (80018fc <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018c2:	f043 0320 	orr.w	r3, r3, #32
 80018c6:	6313      	str	r3, [r2, #48]	; 0x30
 80018c8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018ca:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80018f0 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018ce:	f003 0320 	and.w	r3, r3, #32
 80018d2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018d4:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018d6:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018d8:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018da:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018de:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018e2:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018e4:	f007 fcd4 	bl	8009290 <HAL_GPIO_Init>
}
 80018e8:	b008      	add	sp, #32
 80018ea:	bd10      	pop	{r4, pc}
 80018ec:	f3af 8000 	nop.w
 80018f0:	00000380 	.word	0x00000380
 80018f4:	00000002 	.word	0x00000002
 80018f8:	40015000 	.word	0x40015000
 80018fc:	40021400 	.word	0x40021400

08001900 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001900:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 8001902:	4a21      	ldr	r2, [pc, #132]	; (8001988 <HAL_TIM_Base_MspInit+0x88>)
 8001904:	6803      	ldr	r3, [r0, #0]
 8001906:	4293      	cmp	r3, r2
{
 8001908:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 800190a:	d008      	beq.n	800191e <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 800190c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001910:	d023      	beq.n	800195a <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001912:	4a1e      	ldr	r2, [pc, #120]	; (800198c <HAL_TIM_Base_MspInit+0x8c>)
 8001914:	4293      	cmp	r3, r2
 8001916:	d011      	beq.n	800193c <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001918:	b005      	add	sp, #20
 800191a:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 800191e:	4b1c      	ldr	r3, [pc, #112]	; (8001990 <HAL_TIM_Base_MspInit+0x90>)
 8001920:	2200      	movs	r2, #0
 8001922:	9201      	str	r2, [sp, #4]
 8001924:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001926:	f042 0201 	orr.w	r2, r2, #1
 800192a:	645a      	str	r2, [r3, #68]	; 0x44
 800192c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800192e:	f003 0301 	and.w	r3, r3, #1
 8001932:	9301      	str	r3, [sp, #4]
 8001934:	9b01      	ldr	r3, [sp, #4]
}
 8001936:	b005      	add	sp, #20
 8001938:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 800193c:	4b14      	ldr	r3, [pc, #80]	; (8001990 <HAL_TIM_Base_MspInit+0x90>)
 800193e:	2200      	movs	r2, #0
 8001940:	9203      	str	r2, [sp, #12]
 8001942:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001944:	f042 0202 	orr.w	r2, r2, #2
 8001948:	641a      	str	r2, [r3, #64]	; 0x40
 800194a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800194c:	f003 0302 	and.w	r3, r3, #2
 8001950:	9303      	str	r3, [sp, #12]
 8001952:	9b03      	ldr	r3, [sp, #12]
}
 8001954:	b005      	add	sp, #20
 8001956:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 800195a:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 800195e:	2200      	movs	r2, #0
 8001960:	9202      	str	r2, [sp, #8]
 8001962:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001964:	f041 0101 	orr.w	r1, r1, #1
 8001968:	6419      	str	r1, [r3, #64]	; 0x40
 800196a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800196c:	f003 0301 	and.w	r3, r3, #1
 8001970:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001972:	201c      	movs	r0, #28
 8001974:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001976:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001978:	f007 fa1c 	bl	8008db4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800197c:	201c      	movs	r0, #28
}
 800197e:	b005      	add	sp, #20
 8001980:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001984:	f007 ba54 	b.w	8008e30 <HAL_NVIC_EnableIRQ>
 8001988:	40010000 	.word	0x40010000
 800198c:	40000400 	.word	0x40000400
 8001990:	40023800 	.word	0x40023800

08001994 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001994:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001996:	4b2b      	ldr	r3, [pc, #172]	; (8001a44 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001998:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 800199a:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800199c:	2200      	movs	r2, #0
 800199e:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 80019a0:	2c00      	cmp	r4, #0
 80019a2:	d14c      	bne.n	8001a3e <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 80019a4:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 80019a6:	4a28      	ldr	r2, [pc, #160]	; (8001a48 <HAL_SDRAM_MspInit+0xb4>)
 80019a8:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 80019aa:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 80019ac:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019ae:	4827      	ldr	r0, [pc, #156]	; (8001a4c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80019b0:	433b      	orrs	r3, r7
 80019b2:	6393      	str	r3, [r2, #56]	; 0x38
 80019b4:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80019b6:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019b8:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019ba:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80019bc:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 80019c0:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019c2:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80019c4:	2302      	movs	r3, #2
 80019c6:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019ca:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80019ce:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019d0:	f007 fc5e 	bl	8009290 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019d4:	481e      	ldr	r0, [pc, #120]	; (8001a50 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80019d6:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019d8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019da:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019dc:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019e0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019e4:	f007 fc54 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019e8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019ec:	4819      	ldr	r0, [pc, #100]	; (8001a54 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019ee:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019f0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019f2:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019f6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019fa:	f007 fc49 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019fe:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a02:	4815      	ldr	r0, [pc, #84]	; (8001a58 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001a04:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a06:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a08:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a0c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a10:	f007 fc3e 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001a14:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a18:	4810      	ldr	r0, [pc, #64]	; (8001a5c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001a1a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a1c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a1e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a22:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a26:	f007 fc33 	bl	8009290 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a2a:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a2c:	480c      	ldr	r0, [pc, #48]	; (8001a60 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a2e:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a30:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a32:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a36:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a38:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a3a:	f007 fc29 	bl	8009290 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001a3e:	b009      	add	sp, #36	; 0x24
 8001a40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a42:	bf00      	nop
 8001a44:	2000084c 	.word	0x2000084c
 8001a48:	40023800 	.word	0x40023800
 8001a4c:	40021400 	.word	0x40021400
 8001a50:	40020800 	.word	0x40020800
 8001a54:	40021800 	.word	0x40021800
 8001a58:	40021000 	.word	0x40021000
 8001a5c:	40020c00 	.word	0x40020c00
 8001a60:	40020400 	.word	0x40020400

08001a64 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001a64:	b570      	push	{r4, r5, r6, lr}
 8001a66:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a68:	4b23      	ldr	r3, [pc, #140]	; (8001af8 <HAL_InitTick+0x94>)
 8001a6a:	2200      	movs	r2, #0
 8001a6c:	9202      	str	r2, [sp, #8]
 8001a6e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a70:	f042 0210 	orr.w	r2, r2, #16
 8001a74:	641a      	str	r2, [r3, #64]	; 0x40
 8001a76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a78:	f003 0310 	and.w	r3, r3, #16
 8001a7c:	9302      	str	r3, [sp, #8]
{
 8001a7e:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a80:	a901      	add	r1, sp, #4
 8001a82:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a84:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a86:	f009 fe4b 	bl	800b720 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001a8a:	9b06      	ldr	r3, [sp, #24]
 8001a8c:	b9d3      	cbnz	r3, 8001ac4 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001a8e:	f009 fe37 	bl	800b700 <HAL_RCC_GetPCLK1Freq>
 8001a92:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a94:	4a19      	ldr	r2, [pc, #100]	; (8001afc <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001a96:	4c1a      	ldr	r4, [pc, #104]	; (8001b00 <HAL_InitTick+0x9c>)
 8001a98:	491a      	ldr	r1, [pc, #104]	; (8001b04 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a9a:	fba2 2303 	umull	r2, r3, r2, r3
 8001a9e:	0c9b      	lsrs	r3, r3, #18
 8001aa0:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001aa2:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001aa4:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001aa8:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001aaa:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001aae:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ab0:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001ab2:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001ab4:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001ab6:	f00a fc63 	bl	800c380 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001aba:	4606      	mov	r6, r0
 8001abc:	b130      	cbz	r0, 8001acc <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001abe:	4630      	mov	r0, r6
 8001ac0:	b008      	add	sp, #32
 8001ac2:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001ac4:	f009 fe1c 	bl	800b700 <HAL_RCC_GetPCLK1Freq>
 8001ac8:	0043      	lsls	r3, r0, #1
 8001aca:	e7e3      	b.n	8001a94 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001acc:	4620      	mov	r0, r4
 8001ace:	f00a fce5 	bl	800c49c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001ad2:	4606      	mov	r6, r0
 8001ad4:	2800      	cmp	r0, #0
 8001ad6:	d1f2      	bne.n	8001abe <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ad8:	2036      	movs	r0, #54	; 0x36
 8001ada:	f007 f9a9 	bl	8008e30 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001ade:	2d0f      	cmp	r5, #15
 8001ae0:	d901      	bls.n	8001ae6 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001ae2:	2601      	movs	r6, #1
 8001ae4:	e7eb      	b.n	8001abe <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001ae6:	4632      	mov	r2, r6
 8001ae8:	4629      	mov	r1, r5
 8001aea:	2036      	movs	r0, #54	; 0x36
 8001aec:	f007 f962 	bl	8008db4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001af0:	4b05      	ldr	r3, [pc, #20]	; (8001b08 <HAL_InitTick+0xa4>)
 8001af2:	601d      	str	r5, [r3, #0]
 8001af4:	e7e3      	b.n	8001abe <HAL_InitTick+0x5a>
 8001af6:	bf00      	nop
 8001af8:	40023800 	.word	0x40023800
 8001afc:	431bde83 	.word	0x431bde83
 8001b00:	20000850 	.word	0x20000850
 8001b04:	40001000 	.word	0x40001000
 8001b08:	2000009c 	.word	0x2000009c

08001b0c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001b0c:	4770      	bx	lr
 8001b0e:	bf00      	nop

08001b10 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001b10:	e7fe      	b.n	8001b10 <HardFault_Handler>
 8001b12:	bf00      	nop

08001b14 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001b14:	e7fe      	b.n	8001b14 <MemManage_Handler>
 8001b16:	bf00      	nop

08001b18 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001b18:	e7fe      	b.n	8001b18 <BusFault_Handler>
 8001b1a:	bf00      	nop

08001b1c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001b1c:	e7fe      	b.n	8001b1c <UsageFault_Handler>
 8001b1e:	bf00      	nop

08001b20 <DebugMon_Handler>:
 8001b20:	4770      	bx	lr
 8001b22:	bf00      	nop

08001b24 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001b24:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001b26:	20c8      	movs	r0, #200	; 0xc8
 8001b28:	f007 f920 	bl	8008d6c <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001b2c:	4804      	ldr	r0, [pc, #16]	; (8001b40 <EXTI3_IRQHandler+0x1c>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	2120      	movs	r1, #32
 8001b32:	f007 fcf1 	bl	8009518 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001b36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001b3a:	2008      	movs	r0, #8
 8001b3c:	f007 bcfc 	b.w	8009538 <HAL_GPIO_EXTI_IRQHandler>
 8001b40:	40021000 	.word	0x40021000

08001b44 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001b44:	4801      	ldr	r0, [pc, #4]	; (8001b4c <TIM6_DAC_IRQHandler+0x8>)
 8001b46:	f00a be29 	b.w	800c79c <HAL_TIM_IRQHandler>
 8001b4a:	bf00      	nop
 8001b4c:	20000850 	.word	0x20000850

08001b50 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001b50:	4801      	ldr	r0, [pc, #4]	; (8001b58 <I2C3_EV_IRQHandler+0x8>)
 8001b52:	f008 bc51 	b.w	800a3f8 <HAL_I2C_EV_IRQHandler>
 8001b56:	bf00      	nop
 8001b58:	200001ec 	.word	0x200001ec

08001b5c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001b5c:	4801      	ldr	r0, [pc, #4]	; (8001b64 <LTDC_IRQHandler+0x8>)
 8001b5e:	f009 b9c5 	b.w	800aeec <HAL_LTDC_IRQHandler>
 8001b62:	bf00      	nop
 8001b64:	20000240 	.word	0x20000240

08001b68 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001b68:	2001      	movs	r0, #1
 8001b6a:	4770      	bx	lr

08001b6c <_kill>:

int _kill(int pid, int sig)
{
 8001b6c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b6e:	f029 fa55 	bl	802b01c <__errno>
 8001b72:	2316      	movs	r3, #22
 8001b74:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001b76:	f04f 30ff 	mov.w	r0, #4294967295
 8001b7a:	bd08      	pop	{r3, pc}

08001b7c <_exit>:

void _exit (int status)
{
 8001b7c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b7e:	f029 fa4d 	bl	802b01c <__errno>
 8001b82:	2316      	movs	r3, #22
 8001b84:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001b86:	e7fe      	b.n	8001b86 <_exit+0xa>

08001b88 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001b88:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b8a:	1e16      	subs	r6, r2, #0
 8001b8c:	dd07      	ble.n	8001b9e <_read+0x16>
 8001b8e:	460c      	mov	r4, r1
 8001b90:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001b92:	f3af 8000 	nop.w
 8001b96:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b9a:	42a5      	cmp	r5, r4
 8001b9c:	d1f9      	bne.n	8001b92 <_read+0xa>
	}

return len;
}
 8001b9e:	4630      	mov	r0, r6
 8001ba0:	bd70      	pop	{r4, r5, r6, pc}
 8001ba2:	bf00      	nop

08001ba4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001ba4:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ba6:	1e16      	subs	r6, r2, #0
 8001ba8:	dd07      	ble.n	8001bba <_write+0x16>
 8001baa:	460c      	mov	r4, r1
 8001bac:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001bae:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001bb2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001bb6:	42ac      	cmp	r4, r5
 8001bb8:	d1f9      	bne.n	8001bae <_write+0xa>
	}
	return len;
}
 8001bba:	4630      	mov	r0, r6
 8001bbc:	bd70      	pop	{r4, r5, r6, pc}
 8001bbe:	bf00      	nop

08001bc0 <_close>:

int _close(int file)
{
	return -1;
}
 8001bc0:	f04f 30ff 	mov.w	r0, #4294967295
 8001bc4:	4770      	bx	lr
 8001bc6:	bf00      	nop

08001bc8 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001bc8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001bcc:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001bce:	2000      	movs	r0, #0
 8001bd0:	4770      	bx	lr
 8001bd2:	bf00      	nop

08001bd4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001bd4:	2001      	movs	r0, #1
 8001bd6:	4770      	bx	lr

08001bd8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001bd8:	2000      	movs	r0, #0
 8001bda:	4770      	bx	lr

08001bdc <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001bdc:	4a0b      	ldr	r2, [pc, #44]	; (8001c0c <_sbrk+0x30>)
{
 8001bde:	b508      	push	{r3, lr}
 8001be0:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001be2:	6810      	ldr	r0, [r2, #0]
 8001be4:	b128      	cbz	r0, 8001bf2 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001be6:	4403      	add	r3, r0
 8001be8:	4669      	mov	r1, sp
 8001bea:	428b      	cmp	r3, r1
 8001bec:	d807      	bhi.n	8001bfe <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001bee:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001bf0:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001bf2:	4807      	ldr	r0, [pc, #28]	; (8001c10 <_sbrk+0x34>)
 8001bf4:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001bf6:	4403      	add	r3, r0
 8001bf8:	4669      	mov	r1, sp
 8001bfa:	428b      	cmp	r3, r1
 8001bfc:	d9f7      	bls.n	8001bee <_sbrk+0x12>
		errno = ENOMEM;
 8001bfe:	f029 fa0d 	bl	802b01c <__errno>
 8001c02:	230c      	movs	r3, #12
 8001c04:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001c06:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001c0a:	bd08      	pop	{r3, pc}
 8001c0c:	20000898 	.word	0x20000898
 8001c10:	20013ef8 	.word	0x20013ef8

08001c14 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001c14:	4770      	bx	lr
 8001c16:	bf00      	nop

08001c18 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001c18:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001c1a:	f000 fba7 	bl	800236c <touchgfx_components_init>
  touchgfx_init();
}
 8001c1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001c22:	f000 bb31 	b.w	8002288 <touchgfx_init>
 8001c26:	bf00      	nop

08001c28 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001c28:	f000 bba2 	b.w	8002370 <touchgfx_taskEntry>

08001c2c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001c2c:	4770      	bx	lr

08001c2e <_ZN20STM32TouchControllerD0Ev>:
 8001c2e:	b510      	push	{r4, lr}
 8001c30:	2104      	movs	r1, #4
 8001c32:	4604      	mov	r4, r0
 8001c34:	f028 f8e1 	bl	8029dfa <_ZdlPvj>
 8001c38:	4620      	mov	r0, r4
 8001c3a:	bd10      	pop	{r4, pc}

08001c3c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001c3c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001c3e:	4b0c      	ldr	r3, [pc, #48]	; (8001c70 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c40:	4c0c      	ldr	r4, [pc, #48]	; (8001c74 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001c42:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001c44:	4b0c      	ldr	r3, [pc, #48]	; (8001c78 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c46:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001c48:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c4a:	6863      	ldr	r3, [r4, #4]
 8001c4c:	4798      	blx	r3
 8001c4e:	f640 0311 	movw	r3, #2065	; 0x811
 8001c52:	4298      	cmp	r0, r3
 8001c54:	d10a      	bne.n	8001c6c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001c56:	4d09      	ldr	r5, [pc, #36]	; (8001c7c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c58:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001c5a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c5c:	2082      	movs	r0, #130	; 0x82
 8001c5e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001c60:	682b      	ldr	r3, [r5, #0]
 8001c62:	2082      	movs	r0, #130	; 0x82
 8001c64:	68db      	ldr	r3, [r3, #12]
 8001c66:	4798      	blx	r3
 8001c68:	2000      	movs	r0, #0
    }

    return ret;
}
 8001c6a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001c6c:	2001      	movs	r0, #1
 8001c6e:	e7fc      	b.n	8001c6a <_Z11BSP_TS_Inittt+0x2e>
 8001c70:	2000089c 	.word	0x2000089c
 8001c74:	2000006c 	.word	0x2000006c
 8001c78:	2000089e 	.word	0x2000089e
 8001c7c:	200008a0 	.word	0x200008a0

08001c80 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001c80:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001c84:	20f0      	movs	r0, #240	; 0xf0
 8001c86:	f7ff bfd9 	b.w	8001c3c <_Z11BSP_TS_Inittt>
	...

08001c8c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001c8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c8e:	4d33      	ldr	r5, [pc, #204]	; (8001d5c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001c90:	682b      	ldr	r3, [r5, #0]
{
 8001c92:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c94:	691b      	ldr	r3, [r3, #16]
 8001c96:	2082      	movs	r0, #130	; 0x82
 8001c98:	4798      	blx	r3
 8001c9a:	b280      	uxth	r0, r0
 8001c9c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001c9e:	2800      	cmp	r0, #0
 8001ca0:	d04a      	beq.n	8001d38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001ca2:	682b      	ldr	r3, [r5, #0]
 8001ca4:	f10d 0206 	add.w	r2, sp, #6
 8001ca8:	695b      	ldr	r3, [r3, #20]
 8001caa:	a901      	add	r1, sp, #4
 8001cac:	2082      	movs	r0, #130	; 0x82
 8001cae:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001cb0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001cb4:	f640 6274 	movw	r2, #3700	; 0xe74
 8001cb8:	4293      	cmp	r3, r2
 8001cba:	d93f      	bls.n	8001d3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001cbc:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001cc0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001cc4:	1ad2      	subs	r2, r2, r3
 8001cc6:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001cc8:	2a0a      	cmp	r2, #10
 8001cca:	d93d      	bls.n	8001d48 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001ccc:	230b      	movs	r3, #11
 8001cce:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001cd2:	4b23      	ldr	r3, [pc, #140]	; (8001d60 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001cd4:	881b      	ldrh	r3, [r3, #0]
 8001cd6:	429a      	cmp	r2, r3
 8001cd8:	d901      	bls.n	8001cde <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001cda:	3b01      	subs	r3, #1
 8001cdc:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001cde:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001ce2:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001ce6:	428b      	cmp	r3, r1
 8001ce8:	d830      	bhi.n	8001d4c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001cea:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001cee:	330e      	adds	r3, #14
 8001cf0:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001cf2:	210f      	movs	r1, #15
 8001cf4:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001cf8:	491a      	ldr	r1, [pc, #104]	; (8001d64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001cfa:	8809      	ldrh	r1, [r1, #0]
 8001cfc:	428b      	cmp	r3, r1
 8001cfe:	d901      	bls.n	8001d04 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001d00:	3901      	subs	r1, #1
 8001d02:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001d04:	4e18      	ldr	r6, [pc, #96]	; (8001d68 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d06:	4d19      	ldr	r5, [pc, #100]	; (8001d6c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001d08:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d0a:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001d0c:	4283      	cmp	r3, r0
 8001d0e:	b281      	uxth	r1, r0
 8001d10:	bf8c      	ite	hi
 8001d12:	1a59      	subhi	r1, r3, r1
 8001d14:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d16:	b2b8      	uxth	r0, r7
 8001d18:	42ba      	cmp	r2, r7
 8001d1a:	bf8c      	ite	hi
 8001d1c:	1a10      	subhi	r0, r2, r0
 8001d1e:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001d20:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d22:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001d24:	4401      	add	r1, r0
 8001d26:	2905      	cmp	r1, #5
        {
            _x = x;
 8001d28:	bfc8      	it	gt
 8001d2a:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001d2c:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001d2e:	bfc8      	it	gt
 8001d30:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001d32:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001d34:	682b      	ldr	r3, [r5, #0]
 8001d36:	80a3      	strh	r3, [r4, #4]
    }
}
 8001d38:	b003      	add	sp, #12
 8001d3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001d3c:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001d3e:	bf9c      	itt	ls
 8001d40:	23b4      	movls	r3, #180	; 0xb4
 8001d42:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001d46:	e7bb      	b.n	8001cc0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001d48:	2200      	movs	r2, #0
 8001d4a:	e7c8      	b.n	8001cde <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001d4c:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001d50:	3308      	adds	r3, #8
 8001d52:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001d54:	2b0e      	cmp	r3, #14
 8001d56:	d8cc      	bhi.n	8001cf2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001d58:	2300      	movs	r3, #0
 8001d5a:	e7d3      	b.n	8001d04 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001d5c:	200008a0 	.word	0x200008a0
 8001d60:	2000089e 	.word	0x2000089e
 8001d64:	2000089c 	.word	0x2000089c
 8001d68:	200008a4 	.word	0x200008a4
 8001d6c:	200008a8 	.word	0x200008a8

08001d70 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001d70:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001d72:	4668      	mov	r0, sp
{
 8001d74:	460d      	mov	r5, r1
 8001d76:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001d78:	f7ff ff88 	bl	8001c8c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001d7c:	f8bd 0000 	ldrh.w	r0, [sp]
 8001d80:	b148      	cbz	r0, 8001d96 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001d82:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001d86:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001d88:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001d8c:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001d8e:	4b03      	ldr	r3, [pc, #12]	; (8001d9c <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001d90:	223c      	movs	r2, #60	; 0x3c
 8001d92:	601a      	str	r2, [r3, #0]
        return true;
 8001d94:	2001      	movs	r0, #1
}
 8001d96:	b003      	add	sp, #12
 8001d98:	bd30      	pop	{r4, r5, pc}
 8001d9a:	bf00      	nop
 8001d9c:	20000028 	.word	0x20000028

08001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001da0:	b110      	cbz	r0, 8001da8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001da2:	2802      	cmp	r0, #2
 8001da4:	d009      	beq.n	8001dba <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001da6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001da8:	4b07      	ldr	r3, [pc, #28]	; (8001dc8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001daa:	681a      	ldr	r2, [r3, #0]
 8001dac:	fab2 f282 	clz	r2, r2
 8001db0:	0952      	lsrs	r2, r2, #5
 8001db2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001db4:	4805      	ldr	r0, [pc, #20]	; (8001dcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001db6:	f007 bbaf 	b.w	8009518 <HAL_GPIO_WritePin>
 8001dba:	4b03      	ldr	r3, [pc, #12]	; (8001dc8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001dbc:	689a      	ldr	r2, [r3, #8]
 8001dbe:	fab2 f282 	clz	r2, r2
 8001dc2:	0952      	lsrs	r2, r2, #5
 8001dc4:	2110      	movs	r1, #16
 8001dc6:	e7f5      	b.n	8001db4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001dc8:	200008ac 	.word	0x200008ac
 8001dcc:	40021000 	.word	0x40021000

08001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001dd0:	b110      	cbz	r0, 8001dd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001dd2:	2802      	cmp	r0, #2
 8001dd4:	d009      	beq.n	8001dea <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001dd6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001dd8:	4b07      	ldr	r3, [pc, #28]	; (8001df8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001dda:	681a      	ldr	r2, [r3, #0]
 8001ddc:	3a00      	subs	r2, #0
 8001dde:	bf18      	it	ne
 8001de0:	2201      	movne	r2, #1
 8001de2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001de4:	4805      	ldr	r0, [pc, #20]	; (8001dfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001de6:	f007 bb97 	b.w	8009518 <HAL_GPIO_WritePin>
 8001dea:	4b03      	ldr	r3, [pc, #12]	; (8001df8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001dec:	689a      	ldr	r2, [r3, #8]
 8001dee:	3a00      	subs	r2, #0
 8001df0:	bf18      	it	ne
 8001df2:	2201      	movne	r2, #1
 8001df4:	2110      	movs	r1, #16
 8001df6:	e7f5      	b.n	8001de4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001df8:	200008ac 	.word	0x200008ac
 8001dfc:	40021000 	.word	0x40021000

08001e00 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001e00:	b110      	cbz	r0, 8001e08 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001e02:	2802      	cmp	r0, #2
 8001e04:	d004      	beq.n	8001e10 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001e06:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001e08:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e0a:	4802      	ldr	r0, [pc, #8]	; (8001e14 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001e0c:	f007 bb88 	b.w	8009520 <HAL_GPIO_TogglePin>
 8001e10:	2110      	movs	r1, #16
 8001e12:	e7fa      	b.n	8001e0a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001e14:	40021000 	.word	0x40021000

08001e18 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001e18:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001e1a:	b130      	cbz	r0, 8001e2a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001e1c:	2802      	cmp	r0, #2
 8001e1e:	d009      	beq.n	8001e34 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001e20:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001e22:	1e43      	subs	r3, r0, #1
 8001e24:	4258      	negs	r0, r3
 8001e26:	4158      	adcs	r0, r3
 8001e28:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001e2a:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e2c:	4802      	ldr	r0, [pc, #8]	; (8001e38 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001e2e:	f007 fb6d 	bl	800950c <HAL_GPIO_ReadPin>
        break;
 8001e32:	e7f6      	b.n	8001e22 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e34:	2110      	movs	r1, #16
 8001e36:	e7f9      	b.n	8001e2c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001e38:	40021000 	.word	0x40021000

08001e3c <_ZN8touchgfx4GPIO4initEv>:
{
 8001e3c:	b570      	push	{r4, r5, r6, lr}
 8001e3e:	4d08      	ldr	r5, [pc, #32]	; (8001e60 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001e40:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001e42:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001e44:	b2e0      	uxtb	r0, r4
 8001e46:	f7ff ffe7 	bl	8001e18 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001e4a:	b118      	cbz	r0, 8001e54 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001e4c:	682b      	ldr	r3, [r5, #0]
 8001e4e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001e50:	bf18      	it	ne
 8001e52:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001e54:	3401      	adds	r4, #1
 8001e56:	2c05      	cmp	r4, #5
 8001e58:	f105 0504 	add.w	r5, r5, #4
 8001e5c:	d1f2      	bne.n	8001e44 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001e5e:	bd70      	pop	{r4, r5, r6, pc}
 8001e60:	200008ac 	.word	0x200008ac

08001e64 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001e64:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001e66:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001e6a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001e6e:	4770      	bx	lr

08001e70 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001e70:	2000      	movs	r0, #0
 8001e72:	4770      	bx	lr

08001e74 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e74:	4b03      	ldr	r3, [pc, #12]	; (8001e84 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001e76:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e78:	3900      	subs	r1, #0
 8001e7a:	bf18      	it	ne
 8001e7c:	2101      	movne	r1, #1
 8001e7e:	7019      	strb	r1, [r3, #0]
    }
 8001e80:	4770      	bx	lr
 8001e82:	bf00      	nop
 8001e84:	200132bb 	.word	0x200132bb

08001e88 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001e88:	2000      	movs	r0, #0
 8001e8a:	4770      	bx	lr

08001e8c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001e8c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001e8e:	b10b      	cbz	r3, 8001e94 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001e90:	4608      	mov	r0, r1
 8001e92:	4718      	bx	r3
        }
    }
 8001e94:	4770      	bx	lr

08001e96 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001e96:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001e9a:	4770      	bx	lr

08001e9c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001e9c:	6840      	ldr	r0, [r0, #4]
 8001e9e:	6803      	ldr	r3, [r0, #0]
 8001ea0:	699b      	ldr	r3, [r3, #24]
 8001ea2:	4718      	bx	r3

08001ea4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001ea4:	4770      	bx	lr

08001ea6 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001ea6:	4770      	bx	lr

08001ea8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001ea8:	4770      	bx	lr
	...

08001eac <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001eac:	b510      	push	{r4, lr}
 8001eae:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001eb0:	f000 fb4a 	bl	8002548 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001eb4:	6823      	ldr	r3, [r4, #0]
 8001eb6:	4903      	ldr	r1, [pc, #12]	; (8001ec4 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001eb8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001ebc:	4620      	mov	r0, r4
}
 8001ebe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001ec2:	4718      	bx	r3
 8001ec4:	d0000000 	.word	0xd0000000

08001ec8 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001ec8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001eca:	6803      	ldr	r3, [r0, #0]
{
 8001ecc:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001ece:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001ed2:	4798      	blx	r3
    enableInterrupts();
 8001ed4:	6823      	ldr	r3, [r4, #0]
 8001ed6:	4620      	mov	r0, r4
 8001ed8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001eda:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001edc:	f000 f8ec 	bl	80020b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001ee0:	6823      	ldr	r3, [r4, #0]
 8001ee2:	4620      	mov	r0, r4
 8001ee4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ee6:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001ee8:	2029      	movs	r0, #41	; 0x29
 8001eea:	f7ff f97f 	bl	80011ec <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001eee:	f000 f8e3 	bl	80020b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001ef2:	6823      	ldr	r3, [r4, #0]
 8001ef4:	4620      	mov	r0, r4
 8001ef6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ef8:	4798      	blx	r3
    for (;;)
 8001efa:	e7f8      	b.n	8001eee <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001efc <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001efc:	b510      	push	{r4, lr}
 8001efe:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001f00:	f00f fa8c 	bl	801141c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001f04:	6823      	ldr	r3, [r4, #0]
 8001f06:	4620      	mov	r0, r4
 8001f08:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001f0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001f10:	4718      	bx	r3

08001f12 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001f12:	f000 bb0b 	b.w	800252c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001f16 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001f16:	f000 bb0f 	b.w	8002538 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001f1a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001f1a:	f000 bb33 	b.w	8002584 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001f1e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001f1e:	f000 badb 	b.w	80024d8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001f22 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001f22:	f000 bae1 	b.w	80024e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001f26 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001f26:	f000 bb39 	b.w	800259c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001f2a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001f2a:	f000 bae5 	b.w	80024f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001f2e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001f2e:	f00e bce0 	b.w	80108f2 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001f32 <_ZN11TouchGFXHALD0Ev>:
 8001f32:	b510      	push	{r4, lr}
 8001f34:	217c      	movs	r1, #124	; 0x7c
 8001f36:	4604      	mov	r4, r0
 8001f38:	f027 ff5f 	bl	8029dfa <_ZdlPvj>
 8001f3c:	4620      	mov	r0, r4
 8001f3e:	bd10      	pop	{r4, pc}

08001f40 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001f40:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001f44:	b11b      	cbz	r3, 8001f4e <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001f46:	6840      	ldr	r0, [r0, #4]
 8001f48:	6803      	ldr	r3, [r0, #0]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	4718      	bx	r3
    }
 8001f4e:	4618      	mov	r0, r3
 8001f50:	4770      	bx	lr
	...

08001f54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001f54:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001f56:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001f5a:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001f5e:	4b0c      	ldr	r3, [pc, #48]	; (8001f90 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001f60:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001f62:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001f64:	d009      	beq.n	8001f7a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001f66:	b93a      	cbnz	r2, 8001f78 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f68:	4a0a      	ldr	r2, [pc, #40]	; (8001f94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f6a:	490b      	ldr	r1, [pc, #44]	; (8001f98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f6c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f6e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001f70:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f72:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001f74:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001f76:	701a      	strb	r2, [r3, #0]
    }
 8001f78:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001f7a:	2a00      	cmp	r2, #0
 8001f7c:	d0fc      	beq.n	8001f78 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f7e:	4a05      	ldr	r2, [pc, #20]	; (8001f94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f80:	4905      	ldr	r1, [pc, #20]	; (8001f98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f82:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f84:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001f86:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f88:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001f8a:	2200      	movs	r2, #0
 8001f8c:	e7f3      	b.n	8001f76 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001f8e:	bf00      	nop
 8001f90:	200132b4 	.word	0x200132b4
 8001f94:	200132b0 	.word	0x200132b0
 8001f98:	200132b2 	.word	0x200132b2

08001f9c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001f9c:	b570      	push	{r4, r5, r6, lr}
 8001f9e:	460d      	mov	r5, r1
 8001fa0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001fa2:	b935      	cbnz	r5, 8001fb2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001fa4:	4b09      	ldr	r3, [pc, #36]	; (8001fcc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001fa6:	4a0a      	ldr	r2, [pc, #40]	; (8001fd0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001fa8:	480a      	ldr	r0, [pc, #40]	; (8001fd4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001faa:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001fae:	f028 fd37 	bl	802aa20 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001fb2:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001fb6:	4b08      	ldr	r3, [pc, #32]	; (8001fd8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001fb8:	3a00      	subs	r2, #0
 8001fba:	bf18      	it	ne
 8001fbc:	2201      	movne	r2, #1
 8001fbe:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001fc0:	6803      	ldr	r3, [r0, #0]
    }
 8001fc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001fc6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001fca:	4718      	bx	r3
 8001fcc:	0802bc48 	.word	0x0802bc48
 8001fd0:	0802bc80 	.word	0x0802bc80
 8001fd4:	0802bcce 	.word	0x0802bcce
 8001fd8:	200132ba 	.word	0x200132ba

08001fdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001fdc:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001fde:	4b09      	ldr	r3, [pc, #36]	; (8002004 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001fe0:	881b      	ldrh	r3, [r3, #0]
 8001fe2:	428b      	cmp	r3, r1
 8001fe4:	d803      	bhi.n	8001fee <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001fe6:	4b08      	ldr	r3, [pc, #32]	; (8002008 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001fe8:	881b      	ldrh	r3, [r3, #0]
 8001fea:	4293      	cmp	r3, r2
 8001fec:	d905      	bls.n	8001ffa <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001fee:	4b07      	ldr	r3, [pc, #28]	; (800200c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001ff0:	4a07      	ldr	r2, [pc, #28]	; (8002010 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001ff2:	4808      	ldr	r0, [pc, #32]	; (8002014 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001ff4:	219e      	movs	r1, #158	; 0x9e
 8001ff6:	f028 fd13 	bl	802aa20 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001ffa:	4b07      	ldr	r3, [pc, #28]	; (8002018 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001ffc:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001ffe:	4b07      	ldr	r3, [pc, #28]	; (800201c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002000:	801a      	strh	r2, [r3, #0]
    }
 8002002:	bd08      	pop	{r3, pc}
 8002004:	200132b0 	.word	0x200132b0
 8002008:	200132b2 	.word	0x200132b2
 800200c:	0802bd13 	.word	0x0802bd13
 8002010:	0802bd76 	.word	0x0802bd76
 8002014:	0802bcce 	.word	0x0802bcce
 8002018:	200132b6 	.word	0x200132b6
 800201c:	200132b8 	.word	0x200132b8

08002020 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002020:	2101      	movs	r1, #1
{
 8002022:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002024:	2200      	movs	r2, #0
 8002026:	4608      	mov	r0, r1
 8002028:	f00a fdfa 	bl	800cc20 <osSemaphoreNew>
 800202c:	4b0a      	ldr	r3, [pc, #40]	; (8002058 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800202e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002030:	b928      	cbnz	r0, 800203e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002032:	4b0a      	ldr	r3, [pc, #40]	; (800205c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002034:	4a0a      	ldr	r2, [pc, #40]	; (8002060 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002036:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002038:	480a      	ldr	r0, [pc, #40]	; (8002064 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800203a:	f028 fcf1 	bl	802aa20 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800203e:	2200      	movs	r2, #0
 8002040:	2104      	movs	r1, #4
 8002042:	2001      	movs	r0, #1
 8002044:	f00a fea0 	bl	800cd88 <osMessageQueueNew>
 8002048:	4b07      	ldr	r3, [pc, #28]	; (8002068 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800204a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800204c:	b918      	cbnz	r0, 8002056 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800204e:	4b07      	ldr	r3, [pc, #28]	; (800206c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002050:	4a03      	ldr	r2, [pc, #12]	; (8002060 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002052:	212c      	movs	r1, #44	; 0x2c
 8002054:	e7f0      	b.n	8002038 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002056:	bd08      	pop	{r3, pc}
 8002058:	200008c0 	.word	0x200008c0
 800205c:	0802be94 	.word	0x0802be94
 8002060:	0802bedd 	.word	0x0802bedd
 8002064:	0802bf0c 	.word	0x0802bf0c
 8002068:	200008bc 	.word	0x200008bc
 800206c:	0802bf86 	.word	0x0802bf86

08002070 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002070:	4b02      	ldr	r3, [pc, #8]	; (800207c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002072:	f04f 31ff 	mov.w	r1, #4294967295
 8002076:	6818      	ldr	r0, [r3, #0]
 8002078:	f00a be26 	b.w	800ccc8 <osSemaphoreAcquire>
 800207c:	200008c0 	.word	0x200008c0

08002080 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002080:	4b01      	ldr	r3, [pc, #4]	; (8002088 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002082:	6818      	ldr	r0, [r3, #0]
 8002084:	f00a be54 	b.w	800cd30 <osSemaphoreRelease>
 8002088:	200008c0 	.word	0x200008c0

0800208c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800208c:	4b02      	ldr	r3, [pc, #8]	; (8002098 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800208e:	2100      	movs	r1, #0
 8002090:	6818      	ldr	r0, [r3, #0]
 8002092:	f00a be19 	b.w	800ccc8 <osSemaphoreAcquire>
 8002096:	bf00      	nop
 8002098:	200008c0 	.word	0x200008c0

0800209c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800209c:	f7ff bff0 	b.w	8002080 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080020a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80020a0:	4803      	ldr	r0, [pc, #12]	; (80020b0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80020a2:	4904      	ldr	r1, [pc, #16]	; (80020b4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80020a4:	6800      	ldr	r0, [r0, #0]
 80020a6:	2300      	movs	r3, #0
 80020a8:	461a      	mov	r2, r3
 80020aa:	f00a bea7 	b.w	800cdfc <osMessageQueuePut>
 80020ae:	bf00      	nop
 80020b0:	200008bc 	.word	0x200008bc
 80020b4:	2000002c 	.word	0x2000002c

080020b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80020b8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80020ba:	4c08      	ldr	r4, [pc, #32]	; (80020dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80020bc:	2300      	movs	r3, #0
 80020be:	461a      	mov	r2, r3
 80020c0:	a901      	add	r1, sp, #4
 80020c2:	6820      	ldr	r0, [r4, #0]
 80020c4:	f00a fed0 	bl	800ce68 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80020c8:	6820      	ldr	r0, [r4, #0]
 80020ca:	f04f 33ff 	mov.w	r3, #4294967295
 80020ce:	2200      	movs	r2, #0
 80020d0:	a901      	add	r1, sp, #4
 80020d2:	f00a fec9 	bl	800ce68 <osMessageQueueGet>
}
 80020d6:	b002      	add	sp, #8
 80020d8:	bd10      	pop	{r4, pc}
 80020da:	bf00      	nop
 80020dc:	200008bc 	.word	0x200008bc

080020e0 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80020e0:	4770      	bx	lr

080020e2 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80020e2:	2000      	movs	r0, #0
 80020e4:	4770      	bx	lr

080020e6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80020e6:	4770      	bx	lr

080020e8 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80020e8:	4770      	bx	lr

080020ea <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80020ea:	2000      	movs	r0, #0
 80020ec:	4770      	bx	lr

080020ee <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80020ee:	4770      	bx	lr

080020f0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80020f0:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020f2:	4a03      	ldr	r2, [pc, #12]	; (8002100 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80020f4:	4b03      	ldr	r3, [pc, #12]	; (8002104 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80020f6:	4804      	ldr	r0, [pc, #16]	; (8002108 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80020f8:	2122      	movs	r1, #34	; 0x22
 80020fa:	f028 fc91 	bl	802aa20 <__assert_func>
 80020fe:	bf00      	nop
 8002100:	0802bfeb 	.word	0x0802bfeb
 8002104:	0802bfc8 	.word	0x0802bfc8
 8002108:	0802c029 	.word	0x0802c029

0800210c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800210c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 800210e:	4a03      	ldr	r2, [pc, #12]	; (800211c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002110:	4b03      	ldr	r3, [pc, #12]	; (8002120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002112:	4804      	ldr	r0, [pc, #16]	; (8002124 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002114:	2127      	movs	r1, #39	; 0x27
 8002116:	f028 fc83 	bl	802aa20 <__assert_func>
 800211a:	bf00      	nop
 800211c:	0802c0a1 	.word	0x0802c0a1
 8002120:	0802bfc8 	.word	0x0802bfc8
 8002124:	0802c029 	.word	0x0802c029

08002128 <_ZN8STM32DMAD0Ev>:
 8002128:	b510      	push	{r4, lr}
 800212a:	2144      	movs	r1, #68	; 0x44
 800212c:	4604      	mov	r4, r0
 800212e:	f027 fe64 	bl	8029dfa <_ZdlPvj>
 8002132:	4620      	mov	r0, r4
 8002134:	bd10      	pop	{r4, pc}
	...

08002138 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002138:	b538      	push	{r3, r4, r5, lr}
 800213a:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 800213c:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800213e:	2500      	movs	r5, #0
 8002140:	4b06      	ldr	r3, [pc, #24]	; (800215c <_ZN8STM32DMAC1Ev+0x24>)
 8002142:	7225      	strb	r5, [r4, #8]
 8002144:	300c      	adds	r0, #12
 8002146:	6060      	str	r0, [r4, #4]
 8002148:	7265      	strb	r5, [r4, #9]
 800214a:	2201      	movs	r2, #1
 800214c:	f841 3b20 	str.w	r3, [r1], #32
 8002150:	f00f fabc 	bl	80116cc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002154:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002156:	4620      	mov	r0, r4
 8002158:	bd38      	pop	{r3, r4, r5, pc}
 800215a:	bf00      	nop
 800215c:	0802c0e8 	.word	0x0802c0e8

08002160 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002160:	2001      	movs	r0, #1
 8002162:	4770      	bx	lr

08002164 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002164:	2038      	movs	r0, #56	; 0x38
 8002166:	4770      	bx	lr

08002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002168:	2338      	movs	r3, #56	; 0x38
 800216a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800216e:	3008      	adds	r0, #8
 8002170:	4770      	bx	lr

08002172 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002172:	2338      	movs	r3, #56	; 0x38
 8002174:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002178:	3008      	adds	r0, #8
 800217a:	4770      	bx	lr

0800217c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800217c:	2001      	movs	r0, #1
 800217e:	4770      	bx	lr

08002180 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002180:	f241 70cc 	movw	r0, #6092	; 0x17cc
 8002184:	4770      	bx	lr

08002186 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002186:	f241 73cc 	movw	r3, #6092	; 0x17cc
 800218a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800218e:	3008      	adds	r0, #8
 8002190:	4770      	bx	lr

08002192 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002192:	f241 73cc 	movw	r3, #6092	; 0x17cc
 8002196:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800219a:	3008      	adds	r0, #8
 800219c:	4770      	bx	lr

0800219e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800219e:	2001      	movs	r0, #1
 80021a0:	4770      	bx	lr

080021a2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80021a2:	2010      	movs	r0, #16
 80021a4:	4770      	bx	lr

080021a6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80021a6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80021aa:	3008      	adds	r0, #8
 80021ac:	4770      	bx	lr

080021ae <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80021ae:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80021b2:	3008      	adds	r0, #8
 80021b4:	4770      	bx	lr

080021b6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 80021b6:	4608      	mov	r0, r1
 80021b8:	f001 be04 	b.w	8003dc4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

080021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80021bc:	b510      	push	{r4, lr}
 80021be:	4b03      	ldr	r3, [pc, #12]	; (80021cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 80021c0:	6003      	str	r3, [r0, #0]
 80021c2:	4604      	mov	r4, r0
 80021c4:	f00d faab 	bl	800f71e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021c8:	4620      	mov	r0, r4
 80021ca:	bd10      	pop	{r4, pc}
 80021cc:	0802c1a0 	.word	0x0802c1a0

080021d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80021d0:	b510      	push	{r4, lr}
 80021d2:	4604      	mov	r4, r0
 80021d4:	f7ff fff2 	bl	80021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80021d8:	4620      	mov	r0, r4
 80021da:	2140      	movs	r1, #64	; 0x40
 80021dc:	f027 fe0d 	bl	8029dfa <_ZdlPvj>
 80021e0:	4620      	mov	r0, r4
 80021e2:	bd10      	pop	{r4, pc}

080021e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021e4:	b510      	push	{r4, lr}
 80021e6:	4b03      	ldr	r3, [pc, #12]	; (80021f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021e8:	6003      	str	r3, [r0, #0]
 80021ea:	4604      	mov	r4, r0
 80021ec:	f00d fa97 	bl	800f71e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021f0:	4620      	mov	r0, r4
 80021f2:	bd10      	pop	{r4, pc}
 80021f4:	0802c16c 	.word	0x0802c16c

080021f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021f8:	b510      	push	{r4, lr}
 80021fa:	4604      	mov	r4, r0
 80021fc:	f7ff fff2 	bl	80021e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002200:	4620      	mov	r0, r4
 8002202:	f241 71d4 	movw	r1, #6100	; 0x17d4
 8002206:	f027 fdf8 	bl	8029dfa <_ZdlPvj>
 800220a:	4620      	mov	r0, r4
 800220c:	bd10      	pop	{r4, pc}
	...

08002210 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002210:	b510      	push	{r4, lr}
 8002212:	4b03      	ldr	r3, [pc, #12]	; (8002220 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002214:	6003      	str	r3, [r0, #0]
 8002216:	4604      	mov	r4, r0
 8002218:	f00d fa81 	bl	800f71e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800221c:	4620      	mov	r0, r4
 800221e:	bd10      	pop	{r4, pc}
 8002220:	0802c138 	.word	0x0802c138

08002224 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002224:	b510      	push	{r4, lr}
 8002226:	4604      	mov	r4, r0
 8002228:	f7ff fff2 	bl	8002210 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800222c:	4620      	mov	r0, r4
 800222e:	2118      	movs	r1, #24
 8002230:	f027 fde3 	bl	8029dfa <_ZdlPvj>
 8002234:	4620      	mov	r0, r4
 8002236:	bd10      	pop	{r4, pc}

08002238 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002238:	b510      	push	{r4, lr}
 800223a:	4b08      	ldr	r3, [pc, #32]	; (800225c <_ZN12FrontendHeapD1Ev+0x24>)
 800223c:	6003      	str	r3, [r0, #0]
 800223e:	4604      	mov	r4, r0
 8002240:	f500 50c0 	add.w	r0, r0, #6144	; 0x1800
 8002244:	f7ff ffba 	bl	80021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002248:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800224c:	f7ff ffca 	bl	80021e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002250:	f104 0014 	add.w	r0, r4, #20
 8002254:	f7ff ffdc 	bl	8002210 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002258:	4620      	mov	r0, r4
 800225a:	bd10      	pop	{r4, pc}
 800225c:	0802c1d4 	.word	0x0802c1d4

08002260 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002260:	b508      	push	{r3, lr}
 8002262:	4802      	ldr	r0, [pc, #8]	; (800226c <__tcf_0+0xc>)
 8002264:	f7ff ffe8 	bl	8002238 <_ZN12FrontendHeapD1Ev>
 8002268:	bd08      	pop	{r3, pc}
 800226a:	bf00      	nop
 800226c:	200008c8 	.word	0x200008c8

08002270 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002270:	b510      	push	{r4, lr}
 8002272:	4604      	mov	r4, r0
 8002274:	f7ff ffe0 	bl	8002238 <_ZN12FrontendHeapD1Ev>
 8002278:	4620      	mov	r0, r4
 800227a:	f641 11a4 	movw	r1, #6564	; 0x19a4
 800227e:	f027 fdbc 	bl	8029dfa <_ZdlPvj>
 8002282:	4620      	mov	r0, r4
 8002284:	bd10      	pop	{r4, pc}
	...

08002288 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002288:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800228c:	f000 fa5a 	bl	8002744 <_ZN14BitmapDatabase11getInstanceEv>
 8002290:	4605      	mov	r5, r0
 8002292:	f000 fa5b 	bl	800274c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002296:	2400      	movs	r4, #0
 8002298:	4601      	mov	r1, r0
 800229a:	4623      	mov	r3, r4
 800229c:	4628      	mov	r0, r5
 800229e:	4622      	mov	r2, r4
 80022a0:	9400      	str	r4, [sp, #0]
 80022a2:	f017 f931 	bl	8019508 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80022a6:	4b26      	ldr	r3, [pc, #152]	; (8002340 <touchgfx_init+0xb8>)
 80022a8:	4a26      	ldr	r2, [pc, #152]	; (8002344 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80022aa:	4d27      	ldr	r5, [pc, #156]	; (8002348 <touchgfx_init+0xc0>)
 80022ac:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80022ae:	4620      	mov	r0, r4
 80022b0:	f005 fd98 	bl	8007de4 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80022b4:	4825      	ldr	r0, [pc, #148]	; (800234c <touchgfx_init+0xc4>)
 80022b6:	f017 f88f 	bl	80193d8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80022ba:	682b      	ldr	r3, [r5, #0]
 80022bc:	f3bf 8f5b 	dmb	ish
 80022c0:	07db      	lsls	r3, r3, #31
 80022c2:	d437      	bmi.n	8002334 <touchgfx_init+0xac>
 80022c4:	4628      	mov	r0, r5
 80022c6:	f027 fd9a 	bl	8029dfe <__cxa_guard_acquire>
 80022ca:	b398      	cbz	r0, 8002334 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80022cc:	4c20      	ldr	r4, [pc, #128]	; (8002350 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80022ce:	4b21      	ldr	r3, [pc, #132]	; (8002354 <touchgfx_init+0xcc>)
 80022d0:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
 80022d2:	f504 57c0 	add.w	r7, r4, #6144	; 0x1800
          frontendApplication(app)
 80022d6:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 80022da:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80022de:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 80022e2:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80022e4:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80022e8:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80022ea:	6126      	str	r6, [r4, #16]
 80022ec:	f00d fa18 	bl	800f720 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022f0:	4b19      	ldr	r3, [pc, #100]	; (8002358 <touchgfx_init+0xd0>)
 80022f2:	6163      	str	r3, [r4, #20]
 80022f4:	4640      	mov	r0, r8
 80022f6:	f00d fa13 	bl	800f720 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022fa:	4b18      	ldr	r3, [pc, #96]	; (800235c <touchgfx_init+0xd4>)
 80022fc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80022fe:	4638      	mov	r0, r7
 8002300:	f00d fa0e 	bl	800f720 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002304:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002308:	4a15      	ldr	r2, [pc, #84]	; (8002360 <touchgfx_init+0xd8>)
 800230a:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800230e:	f504 50c2 	add.w	r0, r4, #6208	; 0x1840
 8002312:	f006 f9b1 	bl	8008678 <_ZN5ModelC1Ev>
 8002316:	4622      	mov	r2, r4
 8002318:	f504 51c2 	add.w	r1, r4, #6208	; 0x1840
 800231c:	4630      	mov	r0, r6
 800231e:	f005 febb 	bl	8008098 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002322:	4630      	mov	r0, r6
 8002324:	f001 fd4e 	bl	8003dc4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002328:	480e      	ldr	r0, [pc, #56]	; (8002364 <touchgfx_init+0xdc>)
 800232a:	f028 fb97 	bl	802aa5c <atexit>
 800232e:	4628      	mov	r0, r5
 8002330:	f027 fd71 	bl	8029e16 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002334:	480c      	ldr	r0, [pc, #48]	; (8002368 <touchgfx_init+0xe0>)
}
 8002336:	b002      	add	sp, #8
 8002338:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800233c:	f7ff bdb6 	b.w	8001eac <_ZN11TouchGFXHAL10initializeEv>
 8002340:	20013320 	.word	0x20013320
 8002344:	20002330 	.word	0x20002330
 8002348:	200008c4 	.word	0x200008c4
 800234c:	20000030 	.word	0x20000030
 8002350:	200008c8 	.word	0x200008c8
 8002354:	0802c1d4 	.word	0x0802c1d4
 8002358:	0802c138 	.word	0x0802c138
 800235c:	0802c16c 	.word	0x0802c16c
 8002360:	0802c1a0 	.word	0x0802c1a0
 8002364:	08002261 	.word	0x08002261
 8002368:	200022b4 	.word	0x200022b4

0800236c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 800236c:	4770      	bx	lr
	...

08002370 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002370:	4801      	ldr	r0, [pc, #4]	; (8002378 <touchgfx_taskEntry+0x8>)
 8002372:	f7ff bda9 	b.w	8001ec8 <_ZN11TouchGFXHAL9taskEntryEv>
 8002376:	bf00      	nop
 8002378:	200022b4 	.word	0x200022b4

0800237c <_GLOBAL__sub_I_touchgfx_init>:
}
 800237c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800237e:	4e22      	ldr	r6, [pc, #136]	; (8002408 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002380:	4c22      	ldr	r4, [pc, #136]	; (800240c <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002382:	4d23      	ldr	r5, [pc, #140]	; (8002410 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002384:	4b23      	ldr	r3, [pc, #140]	; (8002414 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002386:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002388:	4630      	mov	r0, r6
 800238a:	f7ff fed5 	bl	8002138 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800238e:	4628      	mov	r0, r5
 8002390:	f01b fb86 	bl	801daa0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002394:	4b20      	ldr	r3, [pc, #128]	; (8002418 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002396:	4821      	ldr	r0, [pc, #132]	; (800241c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002398:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800239a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800239c:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 80023a0:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 80023a4:	491e      	ldr	r1, [pc, #120]	; (8002420 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80023a6:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80023a8:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80023ac:	491d      	ldr	r1, [pc, #116]	; (8002424 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80023ae:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80023b0:	491d      	ldr	r1, [pc, #116]	; (8002428 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80023b2:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80023b6:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80023b8:	21f0      	movs	r1, #240	; 0xf0
 80023ba:	8001      	strh	r1, [r0, #0]
 80023bc:	481b      	ldr	r0, [pc, #108]	; (800242c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80023be:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80023c0:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023c2:	481b      	ldr	r0, [pc, #108]	; (8002430 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80023c4:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023c8:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80023cc:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80023d0:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80023d4:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80023d8:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80023dc:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80023e0:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80023e4:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80023e8:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80023ec:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80023ee:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023f2:	8001      	strh	r1, [r0, #0]
 80023f4:	480f      	ldr	r0, [pc, #60]	; (8002434 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80023f6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80023f8:	490f      	ldr	r1, [pc, #60]	; (8002438 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80023fa:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80023fc:	2201      	movs	r2, #1
 80023fe:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002402:	4a0e      	ldr	r2, [pc, #56]	; (800243c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8002404:	601a      	str	r2, [r3, #0]
}
 8002406:	bd70      	pop	{r4, r5, r6, pc}
 8002408:	20002270 	.word	0x20002270
 800240c:	2000226c 	.word	0x2000226c
 8002410:	20002334 	.word	0x20002334
 8002414:	0802bc38 	.word	0x0802bc38
 8002418:	200022b4 	.word	0x200022b4
 800241c:	200132b0 	.word	0x200132b0
 8002420:	01000001 	.word	0x01000001
 8002424:	01010000 	.word	0x01010000
 8002428:	200132bc 	.word	0x200132bc
 800242c:	200132b6 	.word	0x200132b6
 8002430:	200132b2 	.word	0x200132b2
 8002434:	200132b8 	.word	0x200132b8
 8002438:	200132b4 	.word	0x200132b4
 800243c:	0802bdc4 	.word	0x0802bdc4

08002440 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002440:	2000      	movs	r0, #0
 8002442:	4770      	bx	lr

08002444 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002444:	8081      	strh	r1, [r0, #4]
    }
 8002446:	4770      	bx	lr

08002448 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002448:	80c1      	strh	r1, [r0, #6]
    }
 800244a:	4770      	bx	lr

0800244c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800244c:	8101      	strh	r1, [r0, #8]
    }
 800244e:	4770      	bx	lr

08002450 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002450:	8141      	strh	r1, [r0, #10]
    }
 8002452:	4770      	bx	lr

08002454 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002454:	4770      	bx	lr

08002456 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002456:	4770      	bx	lr

08002458 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002458:	4770      	bx	lr

0800245a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800245a:	4770      	bx	lr

0800245c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800245c:	4770      	bx	lr

0800245e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800245e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002460:	88c4      	ldrh	r4, [r0, #6]
 8002462:	6803      	ldr	r3, [r0, #0]
 8002464:	1b12      	subs	r2, r2, r4
 8002466:	8884      	ldrh	r4, [r0, #4]
 8002468:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800246a:	1b09      	subs	r1, r1, r4
 800246c:	b212      	sxth	r2, r2
    }
 800246e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002472:	b209      	sxth	r1, r1
 8002474:	4718      	bx	r3

08002476 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002476:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800247a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800247c:	f04f 33ff 	mov.w	r3, #4294967295
 8002480:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002482:	6813      	ldr	r3, [r2, #0]
 8002484:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002486:	6010      	str	r0, [r2, #0]
    }
 8002488:	4770      	bx	lr

0800248a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800248a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800248e:	b11a      	cbz	r2, 8002498 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002490:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002494:	b102      	cbz	r2, 8002498 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002496:	6018      	str	r0, [r3, #0]
        }
    }
 8002498:	4770      	bx	lr

0800249a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800249a:	2000      	movs	r0, #0
 800249c:	4770      	bx	lr

0800249e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800249e:	888b      	ldrh	r3, [r1, #4]
 80024a0:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80024a2:	2001      	movs	r0, #1
 80024a4:	4770      	bx	lr

080024a6 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80024a6:	4770      	bx	lr

080024a8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80024a8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80024ac:	4770      	bx	lr

080024ae <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80024ae:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80024b2:	4770      	bx	lr

080024b4 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80024b4:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80024b6:	2200      	movs	r2, #0
        return rect.width;
 80024b8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80024bc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80024c0:	8002      	strh	r2, [r0, #0]
 80024c2:	8042      	strh	r2, [r0, #2]
 80024c4:	8084      	strh	r4, [r0, #4]
 80024c6:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80024c8:	bd10      	pop	{r4, pc}

080024ca <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80024ca:	2200      	movs	r2, #0
 80024cc:	8002      	strh	r2, [r0, #0]
 80024ce:	8042      	strh	r2, [r0, #2]
 80024d0:	8082      	strh	r2, [r0, #4]
 80024d2:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80024d4:	4770      	bx	lr
	...

080024d8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80024d8:	4b02      	ldr	r3, [pc, #8]	; (80024e4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80024da:	2290      	movs	r2, #144	; 0x90
 80024dc:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80024e0:	4770      	bx	lr
 80024e2:	bf00      	nop
 80024e4:	e000e100 	.word	0xe000e100

080024e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80024e8:	4b02      	ldr	r3, [pc, #8]	; (80024f4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80024ea:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80024ee:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80024f0:	4770      	bx	lr
 80024f2:	bf00      	nop
 80024f4:	e000e100 	.word	0xe000e100

080024f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024f8:	4a09      	ldr	r2, [pc, #36]	; (8002520 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80024fa:	490a      	ldr	r1, [pc, #40]	; (8002524 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80024fc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80024fe:	480a      	ldr	r0, [pc, #40]	; (8002528 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002500:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002504:	3b01      	subs	r3, #1
 8002506:	b29b      	uxth	r3, r3
 8002508:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800250a:	6911      	ldr	r1, [r2, #16]
 800250c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002510:	3901      	subs	r1, #1
 8002512:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002514:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002516:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002518:	f043 0301 	orr.w	r3, r3, #1
 800251c:	6353      	str	r3, [r2, #52]	; 0x34
}
 800251e:	4770      	bx	lr
 8002520:	40016800 	.word	0x40016800
 8002524:	200023ba 	.word	0x200023ba
 8002528:	200023b8 	.word	0x200023b8

0800252c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800252c:	4b01      	ldr	r3, [pc, #4]	; (8002534 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800252e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002532:	4770      	bx	lr
 8002534:	40016800 	.word	0x40016800

08002538 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002538:	4b02      	ldr	r3, [pc, #8]	; (8002544 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800253a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800253c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002540:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002542:	4770      	bx	lr
 8002544:	40016800 	.word	0x40016800

08002548 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002548:	b570      	push	{r4, r5, r6, lr}
 800254a:	4604      	mov	r4, r0
    HAL::initialize();
 800254c:	f00e fa27 	bl	801099e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002550:	6823      	ldr	r3, [r4, #0]
 8002552:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002554:	f013 fb9c 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 8002558:	4601      	mov	r1, r0
 800255a:	4620      	mov	r0, r4
 800255c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800255e:	6823      	ldr	r3, [r4, #0]
 8002560:	4a05      	ldr	r2, [pc, #20]	; (8002578 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002562:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002566:	4620      	mov	r0, r4
 8002568:	46ac      	mov	ip, r5
 800256a:	2300      	movs	r3, #0
}
 800256c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002570:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002574:	4760      	bx	ip
 8002576:	bf00      	nop
 8002578:	d004b000 	.word	0xd004b000

0800257c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800257c:	f00e b9f6 	b.w	801096c <_ZN8touchgfx3HAL10beginFrameEv>

08002580 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002580:	f00e ba00 	b.w	8010984 <_ZN8touchgfx3HAL8endFrameEv>

08002584 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002584:	f00e b9bb 	b.w	80108fe <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002588 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002588:	f00e bb1d 	b.w	8010bc6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800258c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800258c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002590:	b112      	cbz	r2, 8002598 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002592:	6803      	ldr	r3, [r0, #0]
 8002594:	695b      	ldr	r3, [r3, #20]
 8002596:	4718      	bx	r3
    }
 8002598:	4770      	bx	lr
	...

0800259c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800259c:	4b04      	ldr	r3, [pc, #16]	; (80025b0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800259e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80025a2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80025a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80025aa:	f3bf 8f6f 	isb	sy
}
 80025ae:	4770      	bx	lr
 80025b0:	e000e100 	.word	0xe000e100

080025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80025b4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80025b6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80025b8:	4e12      	ldr	r6, [pc, #72]	; (8002604 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80025ba:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80025bc:	4b12      	ldr	r3, [pc, #72]	; (8002608 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80025be:	6003      	str	r3, [r0, #0]
 80025c0:	6833      	ldr	r3, [r6, #0]
 80025c2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80025c6:	4605      	mov	r5, r0
 80025c8:	b10a      	cbz	r2, 80025ce <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80025ca:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025cc:	b900      	cbnz	r0, 80025d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80025ce:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80025d0:	6803      	ldr	r3, [r0, #0]
 80025d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025d4:	4798      	blx	r3
        return auxiliaryLCD;
 80025d6:	6833      	ldr	r3, [r6, #0]
 80025d8:	fab0 f480 	clz	r4, r0
 80025dc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025de:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80025e0:	b130      	cbz	r0, 80025f0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80025e2:	6803      	ldr	r3, [r0, #0]
 80025e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025e6:	4798      	blx	r3
 80025e8:	2800      	cmp	r0, #0
 80025ea:	bf08      	it	eq
 80025ec:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80025f0:	b92c      	cbnz	r4, 80025fe <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80025f2:	4b06      	ldr	r3, [pc, #24]	; (800260c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80025f4:	4a06      	ldr	r2, [pc, #24]	; (8002610 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80025f6:	4807      	ldr	r0, [pc, #28]	; (8002614 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80025f8:	212c      	movs	r1, #44	; 0x2c
 80025fa:	f028 fa11 	bl	802aa20 <__assert_func>
    }
 80025fe:	4628      	mov	r0, r5
 8002600:	bd70      	pop	{r4, r5, r6, pc}
 8002602:	bf00      	nop
 8002604:	200132bc 	.word	0x200132bc
 8002608:	0802c2e4 	.word	0x0802c2e4
 800260c:	0802c1e0 	.word	0x0802c1e0
 8002610:	0802c23e 	.word	0x0802c23e
 8002614:	0802c277 	.word	0x0802c277

08002618 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8002618:	4770      	bx	lr
	...

0800261c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 800261c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8002620:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8002622:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8002626:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 800262a:	d105      	bne.n	8002638 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 800262c:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002630:	4281      	cmp	r1, r0
 8002632:	d8fb      	bhi.n	800262c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002634:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002638:	4f17      	ldr	r7, [pc, #92]	; (8002698 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800263a:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800263e:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002642:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002646:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800264a:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800264c:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800264e:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002650:	b2db      	uxtb	r3, r3
 8002652:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002654:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002658:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800265c:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002660:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002664:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002668:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800266c:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002670:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002674:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002676:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800267a:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800267e:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002682:	fbbe fef5 	udiv	lr, lr, r5
 8002686:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800268a:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800268e:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002692:	4281      	cmp	r1, r0
 8002694:	d8de      	bhi.n	8002654 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002696:	e7cd      	b.n	8002634 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002698:	fffff800 	.word	0xfffff800

0800269c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800269c:	b510      	push	{r4, lr}
        return instance;
 800269e:	4c14      	ldr	r4, [pc, #80]	; (80026f0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80026a0:	6823      	ldr	r3, [r4, #0]
 80026a2:	b323      	cbz	r3, 80026ee <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80026a4:	4b13      	ldr	r3, [pc, #76]	; (80026f4 <HAL_LTDC_LineEventCallback+0x58>)
 80026a6:	4a14      	ldr	r2, [pc, #80]	; (80026f8 <HAL_LTDC_LineEventCallback+0x5c>)
 80026a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026aa:	8811      	ldrh	r1, [r2, #0]
 80026ac:	428b      	cmp	r3, r1
 80026ae:	d113      	bne.n	80026d8 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80026b0:	4b12      	ldr	r3, [pc, #72]	; (80026fc <HAL_LTDC_LineEventCallback+0x60>)
 80026b2:	8819      	ldrh	r1, [r3, #0]
 80026b4:	f008 fd4c 	bl	800b150 <HAL_LTDC_ProgramLineEvent>
 80026b8:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80026ba:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80026be:	3301      	adds	r3, #1
 80026c0:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80026c4:	f7ff fcec 	bl	80020a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80026c8:	6820      	ldr	r0, [r4, #0]
 80026ca:	f00e fea7 	bl	801141c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80026ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80026d2:	2000      	movs	r0, #0
 80026d4:	f7ff bb64 	b.w	8001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80026d8:	f008 fd3a 	bl	800b150 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80026dc:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80026de:	6803      	ldr	r3, [r0, #0]
 80026e0:	6a1b      	ldr	r3, [r3, #32]
 80026e2:	4798      	blx	r3
    }
 80026e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80026e8:	2000      	movs	r0, #0
 80026ea:	f7ff bb71 	b.w	8001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80026ee:	bd10      	pop	{r4, pc}
 80026f0:	200132bc 	.word	0x200132bc
 80026f4:	40016800 	.word	0x40016800
 80026f8:	200023ba 	.word	0x200023ba
 80026fc:	200023b8 	.word	0x200023b8

08002700 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002700:	4770      	bx	lr

08002702 <_ZN23ApplicationFontProviderD0Ev>:
 8002702:	b510      	push	{r4, lr}
 8002704:	2104      	movs	r1, #4
 8002706:	4604      	mov	r4, r0
 8002708:	f027 fb77 	bl	8029dfa <_ZdlPvj>
 800270c:	4620      	mov	r0, r4
 800270e:	bd10      	pop	{r4, pc}

08002710 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002710:	b508      	push	{r3, lr}
    switch (typography)
 8002712:	2903      	cmp	r1, #3
 8002714:	d813      	bhi.n	800273e <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002716:	e8df f001 	tbb	[pc, r1]
 800271a:	0602      	.short	0x0602
 800271c:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800271e:	f005 fbad 	bl	8007e7c <_ZN17TypedTextDatabase8getFontsEv>
 8002722:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002724:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002726:	f005 fba9 	bl	8007e7c <_ZN17TypedTextDatabase8getFontsEv>
 800272a:	6840      	ldr	r0, [r0, #4]
 800272c:	e7fa      	b.n	8002724 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800272e:	f005 fba5 	bl	8007e7c <_ZN17TypedTextDatabase8getFontsEv>
 8002732:	6880      	ldr	r0, [r0, #8]
 8002734:	e7f6      	b.n	8002724 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002736:	f005 fba1 	bl	8007e7c <_ZN17TypedTextDatabase8getFontsEv>
 800273a:	68c0      	ldr	r0, [r0, #12]
 800273c:	e7f2      	b.n	8002724 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800273e:	2000      	movs	r0, #0
 8002740:	e7f0      	b.n	8002724 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002744 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002744:	4800      	ldr	r0, [pc, #0]	; (8002748 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002746:	4770      	bx	lr
 8002748:	0802c310 	.word	0x0802c310

0800274c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800274c:	200c      	movs	r0, #12
 800274e:	4770      	bx	lr

08002750 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002750:	b513      	push	{r0, r1, r4, lr}
 8002752:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002754:	b151      	cbz	r1, 800276c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002756:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002758:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800275a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800275e:	aa01      	add	r2, sp, #4
 8002760:	689c      	ldr	r4, [r3, #8]
 8002762:	f10d 0303 	add.w	r3, sp, #3
 8002766:	47a0      	blx	r4
        return glyph;
    }
 8002768:	b002      	add	sp, #8
 800276a:	bd10      	pop	{r4, pc}
            return 0;
 800276c:	4608      	mov	r0, r1
 800276e:	e7fb      	b.n	8002768 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002770 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002770:	89c0      	ldrh	r0, [r0, #14]
 8002772:	4770      	bx	lr

08002774 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002774:	8a00      	ldrh	r0, [r0, #16]
 8002776:	4770      	bx	lr

08002778 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002778:	88c0      	ldrh	r0, [r0, #6]
 800277a:	4770      	bx	lr

0800277c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 800277c:	8880      	ldrh	r0, [r0, #4]
 800277e:	4770      	bx	lr

08002780 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002780:	7a80      	ldrb	r0, [r0, #10]
    }
 8002782:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002786:	4770      	bx	lr

08002788 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002788:	7a80      	ldrb	r0, [r0, #10]
    }
 800278a:	09c0      	lsrs	r0, r0, #7
 800278c:	4770      	bx	lr

0800278e <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800278e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002790:	4770      	bx	lr

08002792 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002792:	4770      	bx	lr

08002794 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002794:	4770      	bx	lr

08002796 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002796:	4770      	bx	lr

08002798 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002798:	4770      	bx	lr

0800279a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800279a:	4770      	bx	lr

0800279c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800279c:	4770      	bx	lr

0800279e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800279e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80027a0:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80027a2:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80027a4:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027a6:	466d      	mov	r5, sp
 80027a8:	4601      	mov	r1, r0
 80027aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80027ae:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027b0:	4628      	mov	r0, r5
 80027b2:	4798      	blx	r3
 80027b4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027b8:	343c      	adds	r4, #60	; 0x3c
 80027ba:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027be:	b005      	add	sp, #20
 80027c0:	bd30      	pop	{r4, r5, pc}

080027c2 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80027c2:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80027c4:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80027c6:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80027c8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027ca:	466d      	mov	r5, sp
 80027cc:	4601      	mov	r1, r0
 80027ce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80027d2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027d4:	4628      	mov	r0, r5
 80027d6:	4798      	blx	r3
 80027d8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027dc:	343c      	adds	r4, #60	; 0x3c
 80027de:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027e2:	b005      	add	sp, #20
 80027e4:	bd30      	pop	{r4, r5, pc}

080027e6 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80027e6:	2200      	movs	r2, #0
 80027e8:	8002      	strh	r2, [r0, #0]
 80027ea:	8042      	strh	r2, [r0, #2]
 80027ec:	8082      	strh	r2, [r0, #4]
 80027ee:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80027f0:	4770      	bx	lr

080027f2 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80027f2:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80027f6:	4770      	bx	lr

080027f8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027f8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80027fa:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027fc:	4604      	mov	r4, r0
        setX(x);
 80027fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002800:	4615      	mov	r5, r2
        setX(x);
 8002802:	4798      	blx	r3
        setBaselineY(baselineY);
 8002804:	6823      	ldr	r3, [r4, #0]
 8002806:	4629      	mov	r1, r5
 8002808:	4620      	mov	r0, r4
 800280a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 800280c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002810:	4718      	bx	r3

08002812 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002812:	2000      	movs	r0, #0
 8002814:	4770      	bx	lr

08002816 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002816:	2200      	movs	r2, #0
 8002818:	f04f 31ff 	mov.w	r1, #4294967295
 800281c:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002820:	6082      	str	r2, [r0, #8]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
 8002822:	4770      	bx	lr

08002824 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002824:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002826:	4770      	bx	lr

08002828 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 8002828:	4770      	bx	lr

0800282a <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 800282a:	6803      	ldr	r3, [r0, #0]
 800282c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800282e:	4718      	bx	r3

08002830 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 8002830:	6803      	ldr	r3, [r0, #0]
 8002832:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002834:	4718      	bx	r3

08002836 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002836:	4770      	bx	lr

08002838 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002838:	4770      	bx	lr

0800283a <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 800283a:	4770      	bx	lr

0800283c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800283c:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800283e:	68c2      	ldr	r2, [r0, #12]
 8002840:	6844      	ldr	r4, [r0, #4]
 8002842:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002844:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002846:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800284a:	07d2      	lsls	r2, r2, #31
 800284c:	bf48      	it	mi
 800284e:	5962      	ldrmi	r2, [r4, r5]
 8002850:	689b      	ldr	r3, [r3, #8]
    }
 8002852:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002854:	bf48      	it	mi
 8002856:	58d3      	ldrmi	r3, [r2, r3]
 8002858:	4718      	bx	r3

0800285a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800285a:	6843      	ldr	r3, [r0, #4]
 800285c:	b12b      	cbz	r3, 800286a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800285e:	6883      	ldr	r3, [r0, #8]
 8002860:	b92b      	cbnz	r3, 800286e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002862:	68c0      	ldr	r0, [r0, #12]
 8002864:	f000 0001 	and.w	r0, r0, #1
 8002868:	4770      	bx	lr
 800286a:	4618      	mov	r0, r3
 800286c:	4770      	bx	lr
 800286e:	2001      	movs	r0, #1
    }
 8002870:	4770      	bx	lr

08002872 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002872:	b510      	push	{r4, lr}
    }
 8002874:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002876:	4604      	mov	r4, r0
    }
 8002878:	f027 fabf 	bl	8029dfa <_ZdlPvj>
 800287c:	4620      	mov	r0, r4
 800287e:	bd10      	pop	{r4, pc}

08002880 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002880:	b510      	push	{r4, lr}
 8002882:	214c      	movs	r1, #76	; 0x4c
 8002884:	4604      	mov	r4, r0
 8002886:	f027 fab8 	bl	8029dfa <_ZdlPvj>
 800288a:	4620      	mov	r0, r4
 800288c:	bd10      	pop	{r4, pc}

0800288e <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800288e:	b510      	push	{r4, lr}
 8002890:	2110      	movs	r1, #16
 8002892:	4604      	mov	r4, r0
 8002894:	f027 fab1 	bl	8029dfa <_ZdlPvj>
 8002898:	4620      	mov	r0, r4
 800289a:	bd10      	pop	{r4, pc}

0800289c <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 800289c:	b510      	push	{r4, lr}
 800289e:	218c      	movs	r1, #140	; 0x8c
 80028a0:	4604      	mov	r4, r0
 80028a2:	f027 faaa 	bl	8029dfa <_ZdlPvj>
 80028a6:	4620      	mov	r0, r4
 80028a8:	bd10      	pop	{r4, pc}
	...

080028ac <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80028ac:	b538      	push	{r3, r4, r5, lr}
 80028ae:	4605      	mov	r5, r0
 80028b0:	4b05      	ldr	r3, [pc, #20]	; (80028c8 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 80028b2:	f845 3be0 	str.w	r3, [r5], #224
 80028b6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80028b8:	f011 fce8 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 80028bc:	4628      	mov	r0, r5
 80028be:	f00d fb9d 	bl	800fffc <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80028c2:	4620      	mov	r0, r4
 80028c4:	bd38      	pop	{r3, r4, r5, pc}
 80028c6:	bf00      	nop
 80028c8:	0802c6f8 	.word	0x0802c6f8

080028cc <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80028cc:	b510      	push	{r4, lr}
 80028ce:	4604      	mov	r4, r0
}
 80028d0:	f7ff ffec 	bl	80028ac <_ZN23Calibration_PadViewBaseD1Ev>
 80028d4:	4620      	mov	r0, r4
 80028d6:	f241 71cc 	movw	r1, #6092	; 0x17cc
 80028da:	f027 fa8e 	bl	8029dfa <_ZdlPvj>
 80028de:	4620      	mov	r0, r4
 80028e0:	bd10      	pop	{r4, pc}

080028e2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80028e2:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80028e4:	f7ff fe52 	bl	800258c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80028e8:	bd08      	pop	{r3, pc}
	...

080028ec <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028ec:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028ee:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028f0:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80028f2:	4b12      	ldr	r3, [pc, #72]	; (800293c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80028f4:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028f6:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028f8:	b28d      	uxth	r5, r1
 80028fa:	b92b      	cbnz	r3, 8002908 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80028fc:	4b10      	ldr	r3, [pc, #64]	; (8002940 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80028fe:	4a11      	ldr	r2, [pc, #68]	; (8002944 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002900:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002902:	4811      	ldr	r0, [pc, #68]	; (8002948 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002904:	f028 f88c 	bl	802aa20 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002908:	4910      	ldr	r1, [pc, #64]	; (800294c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800290a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800290c:	8809      	ldrh	r1, [r1, #0]
 800290e:	4291      	cmp	r1, r2
 8002910:	d803      	bhi.n	800291a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002912:	4b0f      	ldr	r3, [pc, #60]	; (8002950 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002914:	4a0b      	ldr	r2, [pc, #44]	; (8002944 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002916:	216d      	movs	r1, #109	; 0x6d
 8002918:	e7f3      	b.n	8002902 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800291a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800291e:	4b0d      	ldr	r3, [pc, #52]	; (8002954 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002926:	6803      	ldr	r3, [r0, #0]
 8002928:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800292a:	4798      	blx	r3
 800292c:	1a28      	subs	r0, r5, r0
 800292e:	b201      	sxth	r1, r0
 8002930:	4633      	mov	r3, r6
 8002932:	4620      	mov	r0, r4
    }
 8002934:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002938:	4718      	bx	r3
 800293a:	bf00      	nop
 800293c:	20013314 	.word	0x20013314
 8002940:	0802c400 	.word	0x0802c400
 8002944:	0802c442 	.word	0x0802c442
 8002948:	0802c47d 	.word	0x0802c47d
 800294c:	20013318 	.word	0x20013318
 8002950:	0802c4c4 	.word	0x0802c4c4
 8002954:	2001331c 	.word	0x2001331c

08002958 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002958:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800295a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800295c:	4604      	mov	r4, r0
        setX(x);
 800295e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002960:	4615      	mov	r5, r2
        setX(x);
 8002962:	4798      	blx	r3
        setY(y);
 8002964:	6823      	ldr	r3, [r4, #0]
 8002966:	4629      	mov	r1, r5
 8002968:	4620      	mov	r0, r4
 800296a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800296c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002970:	4718      	bx	r3

08002972 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002972:	b570      	push	{r4, r5, r6, lr}
 8002974:	4604      	mov	r4, r0
 8002976:	461d      	mov	r5, r3
 8002978:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800297c:	f7ff ffec 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002980:	6823      	ldr	r3, [r4, #0]
 8002982:	4629      	mov	r1, r5
 8002984:	4620      	mov	r0, r4
 8002986:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002988:	4798      	blx	r3
        setHeight(height);
 800298a:	6823      	ldr	r3, [r4, #0]
 800298c:	4631      	mov	r1, r6
 800298e:	4620      	mov	r0, r4
 8002990:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002992:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002996:	4718      	bx	r3

08002998 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 8002998:	f44f 7180 	mov.w	r1, #256	; 0x100
 800299c:	2200      	movs	r2, #0
 800299e:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 80029a0:	4905      	ldr	r1, [pc, #20]	; (80029b8 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 80029a2:	6001      	str	r1, [r0, #0]
 80029a4:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80029a8:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80029ac:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80029b0:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80029b4:	6282      	str	r2, [r0, #40]	; 0x28
    }
 80029b6:	4770      	bx	lr
 80029b8:	0802e61c 	.word	0x0802e61c

080029bc <_ZN8touchgfx6WidgetC1Ev>:
 80029bc:	2200      	movs	r2, #0
 80029be:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80029c2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80029c6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80029ca:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80029ce:	f44f 7280 	mov.w	r2, #256	; 0x100
 80029d2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80029d4:	4a01      	ldr	r2, [pc, #4]	; (80029dc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80029d6:	6002      	str	r2, [r0, #0]
 80029d8:	4770      	bx	lr
 80029da:	bf00      	nop
 80029dc:	0802c548 	.word	0x0802c548

080029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80029e0:	4b1a      	ldr	r3, [pc, #104]	; (8002a4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80029e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80029e4:	881b      	ldrh	r3, [r3, #0]
 80029e6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80029e8:	428b      	cmp	r3, r1
    void updateTextPosition()
 80029ea:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80029ec:	d92b      	bls.n	8002a46 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029ee:	4b18      	ldr	r3, [pc, #96]	; (8002a50 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80029f0:	681b      	ldr	r3, [r3, #0]
 80029f2:	b92b      	cbnz	r3, 8002a00 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80029f4:	4b17      	ldr	r3, [pc, #92]	; (8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80029f6:	4a18      	ldr	r2, [pc, #96]	; (8002a58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80029f8:	4818      	ldr	r0, [pc, #96]	; (8002a5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80029fa:	216c      	movs	r1, #108	; 0x6c
 80029fc:	f028 f810 	bl	802aa20 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002a00:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002a04:	4b16      	ldr	r3, [pc, #88]	; (8002a60 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002a0c:	4b15      	ldr	r3, [pc, #84]	; (8002a64 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002a0e:	6818      	ldr	r0, [r3, #0]
 8002a10:	f005 fa24 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002a14:	682b      	ldr	r3, [r5, #0]
 8002a16:	9001      	str	r0, [sp, #4]
 8002a18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a1a:	4628      	mov	r0, r5
 8002a1c:	4798      	blx	r3
 8002a1e:	682b      	ldr	r3, [r5, #0]
 8002a20:	9901      	ldr	r1, [sp, #4]
 8002a22:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002a24:	4604      	mov	r4, r0
 8002a26:	4628      	mov	r0, r5
 8002a28:	4798      	blx	r3
 8002a2a:	682b      	ldr	r3, [r5, #0]
 8002a2c:	9901      	ldr	r1, [sp, #4]
 8002a2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a30:	fb14 f400 	smulbb	r4, r4, r0
 8002a34:	4628      	mov	r0, r5
 8002a36:	4798      	blx	r3
 8002a38:	b2a4      	uxth	r4, r4
 8002a3a:	1823      	adds	r3, r4, r0
 8002a3c:	b21b      	sxth	r3, r3
 8002a3e:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002a42:	b002      	add	sp, #8
 8002a44:	bd70      	pop	{r4, r5, r6, pc}
 8002a46:	2300      	movs	r3, #0
 8002a48:	e7f9      	b.n	8002a3e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002a4a:	bf00      	nop
 8002a4c:	20013318 	.word	0x20013318
 8002a50:	20013314 	.word	0x20013314
 8002a54:	0802c400 	.word	0x0802c400
 8002a58:	0802c442 	.word	0x0802c442
 8002a5c:	0802c47d 	.word	0x0802c47d
 8002a60:	2001331c 	.word	0x2001331c
 8002a64:	20013320 	.word	0x20013320

08002a68 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002a68:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a6a:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002a6c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a6e:	2100      	movs	r1, #0
 8002a70:	f028 f9db 	bl	802ae2a <memset>
 8002a74:	4620      	mov	r0, r4
 8002a76:	f7ff ffa1 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8002a7a:	4b0a      	ldr	r3, [pc, #40]	; (8002aa4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002a7c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002a7e:	4b0a      	ldr	r3, [pc, #40]	; (8002aa8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002a80:	62a3      	str	r3, [r4, #40]	; 0x28
 8002a82:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002a86:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002a88:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002a8c:	2300      	movs	r3, #0
 8002a8e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002a92:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002a96:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a9a:	8723      	strh	r3, [r4, #56]	; 0x38
 8002a9c:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002a9e:	4620      	mov	r0, r4
 8002aa0:	bd10      	pop	{r4, pc}
 8002aa2:	bf00      	nop
 8002aa4:	0802ea74 	.word	0x0802ea74
 8002aa8:	0802c5b0 	.word	0x0802c5b0

08002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002aac:	b510      	push	{r4, lr}
 8002aae:	4604      	mov	r4, r0
        : TextArea()
 8002ab0:	f7ff ffda 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002ab4:	4b02      	ldr	r3, [pc, #8]	; (8002ac0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002ab6:	6023      	str	r3, [r4, #0]
 8002ab8:	2300      	movs	r3, #0
 8002aba:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002abc:	4620      	mov	r0, r4
 8002abe:	bd10      	pop	{r4, pc}
 8002ac0:	0802c650 	.word	0x0802c650

08002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8002ac4:	b510      	push	{r4, lr}
 8002ac6:	4604      	mov	r4, r0
 8002ac8:	460b      	mov	r3, r1
 8002aca:	490d      	ldr	r1, [pc, #52]	; (8002b00 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8002acc:	f844 1b04 	str.w	r1, [r4], #4
 8002ad0:	4602      	mov	r2, r0
 8002ad2:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8002ad6:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ada:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8002ade:	f102 040c 	add.w	r4, r2, #12
 8002ae2:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ae6:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002aea:	695c      	ldr	r4, [r3, #20]
 8002aec:	61d1      	str	r1, [r2, #28]
 8002aee:	6a19      	ldr	r1, [r3, #32]
 8002af0:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002af2:	6211      	str	r1, [r2, #32]
 8002af4:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8002af8:	8493      	strh	r3, [r2, #36]	; 0x24
 8002afa:	4610      	mov	r0, r2
 8002afc:	bd10      	pop	{r4, pc}
 8002afe:	bf00      	nop
 8002b00:	0802ee94 	.word	0x0802ee94

08002b04 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8002b04:	b530      	push	{r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002b06:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8002b0a:	4299      	cmp	r1, r3
{
 8002b0c:	b0bf      	sub	sp, #252	; 0xfc
 8002b0e:	4604      	mov	r4, r0
 8002b10:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002b12:	d103      	bne.n	8002b1c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002b14:	f013 f8bc 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002b18:	f001 f964 	bl	8003de4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8002b1c:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8002b20:	429d      	cmp	r5, r3
 8002b22:	d16e      	bne.n	8002c02 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xfe>
class Container : public Drawable
 8002b24:	f104 05e0 	add.w	r5, r4, #224	; 0xe0
 8002b28:	4629      	mov	r1, r5
 8002b2a:	a801      	add	r0, sp, #4
 8002b2c:	f7ff ffca 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b30:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002b34:	930b      	str	r3, [sp, #44]	; 0x2c
class SwipeContainer : public Container
 8002b36:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8002b3a:	930c      	str	r3, [sp, #48]	; 0x30
 8002b3c:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8002b40:	4a31      	ldr	r2, [pc, #196]	; (8002c08 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x104>)
 8002b42:	930d      	str	r3, [sp, #52]	; 0x34
 8002b44:	f504 718c 	add.w	r1, r4, #280	; 0x118
 8002b48:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8002b4c:	9201      	str	r2, [sp, #4]
 8002b4e:	a80f      	add	r0, sp, #60	; 0x3c
 8002b50:	930e      	str	r3, [sp, #56]	; 0x38
 8002b52:	f7ff ffb7 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b56:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8002b5a:	9319      	str	r3, [sp, #100]	; 0x64
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8002b5c:	4b2b      	ldr	r3, [pc, #172]	; (8002c0c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x108>)
 8002b5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8002b60:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 8002b64:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 8002b68:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8002b6c:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8002b70:	f8ad 306a 	strh.w	r3, [sp, #106]	; 0x6a
 8002b74:	a81b      	add	r0, sp, #108	; 0x6c
 8002b76:	f7ff ffa5 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b7a:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8002b7e:	9325      	str	r3, [sp, #148]	; 0x94
 8002b80:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 8002b84:	4b22      	ldr	r3, [pc, #136]	; (8002c10 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x10c>)
 8002b86:	931b      	str	r3, [sp, #108]	; 0x6c
 8002b88:	a826      	add	r0, sp, #152	; 0x98
 8002b8a:	f7ff ff9b 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8002b8e:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8002b92:	f8ad 30be 	strh.w	r3, [sp, #190]	; 0xbe
 8002b96:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8002b9a:	f88d 30c0 	strb.w	r3, [sp, #192]	; 0xc0
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8002b9e:	4b1d      	ldr	r3, [pc, #116]	; (8002c14 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x110>)
 8002ba0:	9326      	str	r3, [sp, #152]	; 0x98
 8002ba2:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 8002ba6:	f8ad 30c2 	strh.w	r3, [sp, #194]	; 0xc2
 8002baa:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8002bae:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8002bb2:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
 8002bb6:	a832      	add	r0, sp, #200	; 0xc8
 8002bb8:	f7ff ff84 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002bbc:	4b16      	ldr	r3, [pc, #88]	; (8002c18 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x114>)
 8002bbe:	9332      	str	r3, [sp, #200]	; 0xc8
 8002bc0:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
 8002bc4:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 8002bc8:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8002bcc:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 8002bd0:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
        setCalibrationFlashValues(SECTOR_23_ADDR, 999, 0, 12);
 8002bd4:	4811      	ldr	r0, [pc, #68]	; (8002c1c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x118>)
 8002bd6:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 8002bda:	2200      	movs	r2, #0
 8002bdc:	230c      	movs	r3, #12
 8002bde:	f240 31e7 	movw	r1, #999	; 0x3e7
 8002be2:	f7fd ff43 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", 999);
 8002be6:	4a0e      	ldr	r2, [pc, #56]	; (8002c20 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x11c>)
 8002be8:	f240 33e7 	movw	r3, #999	; 0x3e7
 8002bec:	210a      	movs	r1, #10
 8002bee:	f604 105c 	addw	r0, r4, #2396	; 0x95c
 8002bf2:	f016 f9fb 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002bf6:	4628      	mov	r0, r5
 8002bf8:	f014 f932 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002bfc:	a801      	add	r0, sp, #4
 8002bfe:	f00d f9fd 	bl	800fffc <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8002c02:	b03f      	add	sp, #252	; 0xfc
 8002c04:	bd30      	pop	{r4, r5, pc}
 8002c06:	bf00      	nop
 8002c08:	0802e6ac 	.word	0x0802e6ac
 8002c0c:	0802e770 	.word	0x0802e770
 8002c10:	0802c5c0 	.word	0x0802c5c0
 8002c14:	0802eb6c 	.word	0x0802eb6c
 8002c18:	0802ed50 	.word	0x0802ed50
 8002c1c:	081e0000 	.word	0x081e0000
 8002c20:	0802c502 	.word	0x0802c502

08002c24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8002c24:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002c26:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8002c28:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8002c2c:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8002c30:	d004      	beq.n	8002c3c <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8002c32:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002c36:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8002c38:	f00f b83e 	b.w	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8002c3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002c40:	4770      	bx	lr
	...

08002c44 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c48:	ed2d 8b10 	vpush	{d8-d15}
 8002c4c:	4604      	mov	r4, r0
 8002c4e:	b099      	sub	sp, #100	; 0x64
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002c50:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002c52:	2500      	movs	r5, #0
 8002c54:	f014 fc9c 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 8002c58:	4be8      	ldr	r3, [pc, #928]	; (8002ffc <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8002c5a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002c5c:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002c60:	2226      	movs	r2, #38	; 0x26
 8002c62:	4629      	mov	r1, r5
 8002c64:	4648      	mov	r0, r9
 8002c66:	f028 f8e0 	bl	802ae2a <memset>
 8002c6a:	4648      	mov	r0, r9
 8002c6c:	f7ff fea6 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8002c70:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002c74:	26ff      	movs	r6, #255	; 0xff
 8002c76:	4be2      	ldr	r3, [pc, #904]	; (8003000 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8002c78:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002c7a:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002c7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002c80:	4629      	mov	r1, r5
 8002c82:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002c86:	4640      	mov	r0, r8
        : color(col)
 8002c88:	66a5      	str	r5, [r4, #104]	; 0x68
 8002c8a:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8002c8e:	f028 f8cc 	bl	802ae2a <memset>
 8002c92:	4640      	mov	r0, r8
 8002c94:	f7ff fe92 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8002c98:	4bda      	ldr	r3, [pc, #872]	; (8003004 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8002c9a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002c9c:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8002ca0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002ca4:	a916      	add	r1, sp, #88	; 0x58
 8002ca6:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 8002caa:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002cac:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002cb0:	f010 faef 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002cb4:	4650      	mov	r0, sl
 8002cb6:	f010 fc23 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002cba:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002cbe:	4618      	mov	r0, r3
 8002cc0:	ee08 3a90 	vmov	s17, r3
 8002cc4:	f00d fac8 	bl	8010258 <_ZN8touchgfx14SwipeContainerC1Ev>
 8002cc8:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 8002ccc:	f504 7700 	add.w	r7, r4, #512	; 0x200
 8002cd0:	4618      	mov	r0, r3
 8002cd2:	ee08 3a10 	vmov	s16, r3
 8002cd6:	f7ff fe5f 	bl	8002998 <_ZN8touchgfx9ContainerC1Ev>
 8002cda:	4638      	mov	r0, r7
 8002cdc:	f7ff fee6 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002ce0:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8002ce4:	4618      	mov	r0, r3
 8002ce6:	9303      	str	r3, [sp, #12]
 8002ce8:	f010 faac 	bl	8013244 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002cec:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002cf0:	4618      	mov	r0, r3
 8002cf2:	9304      	str	r3, [sp, #16]
 8002cf4:	f010 faa6 	bl	8013244 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002cf8:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8002cfc:	4618      	mov	r0, r3
 8002cfe:	f504 7640 	add.w	r6, r4, #768	; 0x300
 8002d02:	9305      	str	r3, [sp, #20]
 8002d04:	f010 fa9e 	bl	8013244 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d08:	4630      	mov	r0, r6
 8002d0a:	f7ff fecf 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002d0e:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8002d12:	4618      	mov	r0, r3
 8002d14:	ee0b 3a90 	vmov	s23, r3
 8002d18:	f7ff fec8 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002d1c:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8002d20:	4618      	mov	r0, r3
 8002d22:	ee0c 3a10 	vmov	s24, r3
 8002d26:	f7ff fec1 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002d2a:	f504 7379 	add.w	r3, r4, #996	; 0x3e4
 8002d2e:	4618      	mov	r0, r3
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002d30:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 800301c <_ZN23Calibration_PadViewBaseC1Ev+0x3d8>
 8002d34:	ee09 3a90 	vmov	s19, r3
 8002d38:	f00e ff9e 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 8002d3c:	f204 4354 	addw	r3, r4, #1108	; 0x454
 8002d40:	4618      	mov	r0, r3
 8002d42:	930a      	str	r3, [sp, #40]	; 0x28
 8002d44:	f7ff fc36 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002d48:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 8002d4c:	f504 628d 	add.w	r2, r4, #1128	; 0x468
 8002d50:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
 8002d54:	f8c4 b454 	str.w	fp, [r4, #1108]	; 0x454
 8002d58:	4610      	mov	r0, r2
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002d5a:	f8c4 5460 	str.w	r5, [r4, #1120]	; 0x460
 8002d5e:	ee0e 2a90 	vmov	s29, r2
 8002d62:	f7ff fe81 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8002d66:	f504 6296 	add.w	r2, r4, #1200	; 0x4b0
 8002d6a:	4610      	mov	r0, r2
 8002d6c:	ee09 2a10 	vmov	s18, r2
 8002d70:	f7ff fe12 	bl	8002998 <_ZN8touchgfx9ContainerC1Ev>
 8002d74:	f204 42dc 	addw	r2, r4, #1244	; 0x4dc
 8002d78:	4610      	mov	r0, r2
 8002d7a:	9206      	str	r2, [sp, #24]
 8002d7c:	f010 fa62 	bl	8013244 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d80:	f504 62a3 	add.w	r2, r4, #1304	; 0x518
 8002d84:	4610      	mov	r0, r2
 8002d86:	9207      	str	r2, [sp, #28]
 8002d88:	f010 fa5c 	bl	8013244 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d8c:	f204 5254 	addw	r2, r4, #1364	; 0x554
 8002d90:	4610      	mov	r0, r2
 8002d92:	9208      	str	r2, [sp, #32]
 8002d94:	f010 fa56 	bl	8013244 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d98:	f504 62b2 	add.w	r2, r4, #1424	; 0x590
 8002d9c:	4610      	mov	r0, r2
 8002d9e:	ee0f 2a10 	vmov	s30, r2
 8002da2:	f7ff fe83 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002da6:	f204 52dc 	addw	r2, r4, #1500	; 0x5dc
 8002daa:	4610      	mov	r0, r2
 8002dac:	ee0f 2a90 	vmov	s31, r2
 8002db0:	f7ff fe7c 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002db4:	f504 62c5 	add.w	r2, r4, #1576	; 0x628
 8002db8:	4610      	mov	r0, r2
 8002dba:	9202      	str	r2, [sp, #8]
 8002dbc:	f7ff fe76 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002dc0:	f204 6274 	addw	r2, r4, #1652	; 0x674
 8002dc4:	4610      	mov	r0, r2
 8002dc6:	ee0a 2a10 	vmov	s20, r2
 8002dca:	f00e ff55 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 8002dce:	f204 62e4 	addw	r2, r4, #1764	; 0x6e4
 8002dd2:	4610      	mov	r0, r2
 8002dd4:	920b      	str	r2, [sp, #44]	; 0x2c
 8002dd6:	f7ff fbed 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002dda:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 8002dde:	f504 62df 	add.w	r2, r4, #1784	; 0x6f8
 8002de2:	f8c4 36ec 	str.w	r3, [r4, #1772]	; 0x6ec
 8002de6:	f8c4 b6e4 	str.w	fp, [r4, #1764]	; 0x6e4
 8002dea:	4610      	mov	r0, r2
 8002dec:	f8c4 56f0 	str.w	r5, [r4, #1776]	; 0x6f0
 8002df0:	ee0c 2a90 	vmov	s25, r2
 8002df4:	f7ff fe38 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8002df8:	f504 62e8 	add.w	r2, r4, #1856	; 0x740
 8002dfc:	4610      	mov	r0, r2
 8002dfe:	ee0a 2a90 	vmov	s21, r2
 8002e02:	f00e ff39 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 8002e06:	f504 62f6 	add.w	r2, r4, #1968	; 0x7b0
 8002e0a:	4610      	mov	r0, r2
 8002e0c:	920c      	str	r2, [sp, #48]	; 0x30
 8002e0e:	f7ff fbd1 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002e12:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 8002e16:	f204 72c4 	addw	r2, r4, #1988	; 0x7c4
 8002e1a:	f8c4 37b8 	str.w	r3, [r4, #1976]	; 0x7b8
 8002e1e:	f8c4 b7b0 	str.w	fp, [r4, #1968]	; 0x7b0
 8002e22:	4610      	mov	r0, r2
 8002e24:	f8c4 57bc 	str.w	r5, [r4, #1980]	; 0x7bc
 8002e28:	ee0d 2a10 	vmov	s26, r2
 8002e2c:	f7ff fe1c 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8002e30:	f604 020c 	addw	r2, r4, #2060	; 0x80c
 8002e34:	4610      	mov	r0, r2
 8002e36:	ee0b 2a10 	vmov	s22, r2
 8002e3a:	f00e ff1d 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 8002e3e:	f604 027c 	addw	r2, r4, #2172	; 0x87c
 8002e42:	4610      	mov	r0, r2
 8002e44:	920d      	str	r2, [sp, #52]	; 0x34
 8002e46:	f7ff fbb5 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002e4a:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 8002e4e:	f8c4 3884 	str.w	r3, [r4, #2180]	; 0x884
 8002e52:	f504 6309 	add.w	r3, r4, #2192	; 0x890
 8002e56:	f8c4 b87c 	str.w	fp, [r4, #2172]	; 0x87c
 8002e5a:	4618      	mov	r0, r3
 8002e5c:	f8c4 5888 	str.w	r5, [r4, #2184]	; 0x888
 8002e60:	ee0d 3a90 	vmov	s27, r3
 8002e64:	f7ff fe00 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8002e68:	f604 03d8 	addw	r3, r4, #2264	; 0x8d8
 8002e6c:	4618      	mov	r0, r3
 8002e6e:	ee0e 3a10 	vmov	s28, r3
 8002e72:	f7ff fdf9 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002e76:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002e7a:	4a63      	ldr	r2, [pc, #396]	; (8003008 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>)
 8002e7c:	f8c3 27bc 	str.w	r2, [r3, #1980]	; 0x7bc
 8002e80:	4a62      	ldr	r2, [pc, #392]	; (800300c <_ZN23Calibration_PadViewBaseC1Ev+0x3c8>)
 8002e82:	f8c3 27c4 	str.w	r2, [r3, #1988]	; 0x7c4
 8002e86:	f8c3 47c0 	str.w	r4, [r3, #1984]	; 0x7c0
 8002e8a:	f8c3 57c8 	str.w	r5, [r3, #1992]	; 0x7c8
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002e8e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002e92:	f604 10ac 	addw	r0, r4, #2476	; 0x9ac
 8002e96:	f011 f9ef 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002e9a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002e9e:	462a      	mov	r2, r5
 8002ea0:	4648      	mov	r0, r9
 8002ea2:	9300      	str	r3, [sp, #0]
 8002ea4:	4629      	mov	r1, r5
 8002ea6:	23f0      	movs	r3, #240	; 0xf0
 8002ea8:	f7ff fd63 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002eac:	f104 0b04 	add.w	fp, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002eb0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002eb4:	66a3      	str	r3, [r4, #104]	; 0x68
 8002eb6:	4649      	mov	r1, r9
 8002eb8:	4658      	mov	r0, fp
 8002eba:	f00c fe11 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002ebe:	462a      	mov	r2, r5
 8002ec0:	4640      	mov	r0, r8
 8002ec2:	4629      	mov	r1, r5
 8002ec4:	f7ff fd48 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8002ec8:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002eca:	4640      	mov	r0, r8
 8002ecc:	a916      	add	r1, sp, #88	; 0x58
 8002ece:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8002ed2:	f010 f9de 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ed6:	4641      	mov	r1, r8
 8002ed8:	4658      	mov	r0, fp
 8002eda:	f00c fe01 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002ede:	4650      	mov	r0, sl
 8002ee0:	f240 1201 	movw	r2, #257	; 0x101
 8002ee4:	2121      	movs	r1, #33	; 0x21
 8002ee6:	f7ff fd37 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8002eea:	f04f 0303 	mov.w	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002eee:	aa16      	add	r2, sp, #88	; 0x58
 8002ef0:	a915      	add	r1, sp, #84	; 0x54
 8002ef2:	4650      	mov	r0, sl
 8002ef4:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8002ef8:	f04f 0302 	mov.w	r3, #2
 8002efc:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8002f00:	f00f ffd1 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002f04:	2317      	movs	r3, #23
        updateTextPosition();
 8002f06:	4650      	mov	r0, sl
 8002f08:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8002f0c:	f7ff fd68 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8002f10:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8002f14:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 8002f18:	f504 53bd 	add.w	r3, r4, #6048	; 0x17a0
 8002f1c:	331c      	adds	r3, #28
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002f1e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002f22:	4651      	mov	r1, sl
 8002f24:	4658      	mov	r0, fp
 8002f26:	9309      	str	r3, [sp, #36]	; 0x24
 8002f28:	f00c fdda 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8002f2c:	ee18 0a90 	vmov	r0, s17
 8002f30:	2255      	movs	r2, #85	; 0x55
 8002f32:	4629      	mov	r1, r5
 8002f34:	f7ff fd10 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8002f38:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8002f3a:	ee18 0a90 	vmov	r0, s17
 8002f3e:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8002f42:	aa16      	add	r2, sp, #88	; 0x58
 8002f44:	2307      	movs	r3, #7
 8002f46:	a915      	add	r1, sp, #84	; 0x54
 8002f48:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8002f4c:	f00d fa22 	bl	8010394 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(100, 140);
 8002f50:	228c      	movs	r2, #140	; 0x8c
 8002f52:	ee18 0a90 	vmov	r0, s17
 8002f56:	2164      	movs	r1, #100	; 0x64
 8002f58:	f00d f8ca 	bl	80100f0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8002f5c:	ee18 0a90 	vmov	r0, s17
 8002f60:	2132      	movs	r1, #50	; 0x32
 8002f62:	f00d f848 	bl	800fff6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 8002f66:	ee18 0a90 	vmov	r0, s17
 8002f6a:	2132      	movs	r1, #50	; 0x32
 8002f6c:	f00d f8be 	bl	80100ec <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8002f70:	4b27      	ldr	r3, [pc, #156]	; (8003010 <_ZN23Calibration_PadViewBaseC1Ev+0x3cc>)
 8002f72:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    textAreaCal_LP1_1.setXY(22, 32);
 8002f76:	2220      	movs	r2, #32
 8002f78:	4638      	mov	r0, r7
 8002f7a:	2116      	movs	r1, #22
 8002f7c:	f7ff fcec 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002f80:	f04f 33ff 	mov.w	r3, #4294967295
 8002f84:	f8c4 3230 	str.w	r3, [r4, #560]	; 0x230
        boundingArea = calculateBoundingArea();
 8002f88:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
        linespace = space;
 8002f8c:	f8a4 5234 	strh.w	r5, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8002f90:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8002f94:	4639      	mov	r1, r7
 8002f96:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002f9a:	4640      	mov	r0, r8
 8002f9c:	4798      	blx	r3
 8002f9e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002fa2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8002fa6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textAreaCal_LP1_1.setWildcard(textAreaCal_LP1_1Buffer);
 8002faa:	f504 6312 	add.w	r3, r4, #2336	; 0x920
    textAreaCal_LP1_1.resizeToCurrentText();
 8002fae:	4638      	mov	r0, r7
        wc1 = value;
 8002fb0:	f8c4 3248 	str.w	r3, [r4, #584]	; 0x248
    textAreaCal_LP1_1Buffer[0] = 0;
 8002fb4:	f8a4 5920 	strh.w	r5, [r4, #2336]	; 0x920
    textAreaCal_LP1_1.resizeToCurrentText();
 8002fb8:	f00f fb9a 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002fbc:	4b15      	ldr	r3, [pc, #84]	; (8003014 <_ZN23Calibration_PadViewBaseC1Ev+0x3d0>)
 8002fbe:	9316      	str	r3, [sp, #88]	; 0x58
    textAreaCal_LP1_1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 8002fc0:	4638      	mov	r0, r7
 8002fc2:	f04f 030c 	mov.w	r3, #12
 8002fc6:	a916      	add	r1, sp, #88	; 0x58
 8002fc8:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8002fcc:	f00f fbb0 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1_1);
 8002fd0:	4639      	mov	r1, r7
 8002fd2:	ee18 0a10 	vmov	r0, s16
 8002fd6:	f00c fd83 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP3.setXY(194, 97);
 8002fda:	9803      	ldr	r0, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002fdc:	4f0e      	ldr	r7, [pc, #56]	; (8003018 <_ZN23Calibration_PadViewBaseC1Ev+0x3d4>)
 8002fde:	2261      	movs	r2, #97	; 0x61
 8002fe0:	21c2      	movs	r1, #194	; 0xc2
 8002fe2:	f7ff fcb9 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8002fe6:	ab16      	add	r3, sp, #88	; 0x58
 8002fe8:	f04f 0909 	mov.w	r9, #9
 8002fec:	f04f 0a01 	mov.w	sl, #1
 8002ff0:	aa14      	add	r2, sp, #80	; 0x50
 8002ff2:	9803      	ldr	r0, [sp, #12]
 8002ff4:	9300      	str	r3, [sp, #0]
 8002ff6:	a913      	add	r1, sp, #76	; 0x4c
 8002ff8:	ab15      	add	r3, sp, #84	; 0x54
 8002ffa:	e011      	b.n	8003020 <_ZN23Calibration_PadViewBaseC1Ev+0x3dc>
 8002ffc:	0802c6f8 	.word	0x0802c6f8
 8003000:	0802eb04 	.word	0x0802eb04
 8003004:	0802ed50 	.word	0x0802ed50
 8003008:	0802c6e0 	.word	0x0802c6e0
 800300c:	08002b05 	.word	0x08002b05
 8003010:	00ac00f0 	.word	0x00ac00f0
 8003014:	0802c5b0 	.word	0x0802c5b0
 8003018:	20013314 	.word	0x20013314
 800301c:	0802e838 	.word	0x0802e838
 8003020:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 8003024:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 8003028:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 800302c:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 8003030:	f010 f873 	bl	801311a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 8003034:	9903      	ldr	r1, [sp, #12]
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003036:	f8c4 5284 	str.w	r5, [r4, #644]	; 0x284
 800303a:	ee18 0a10 	vmov	r0, s16
 800303e:	f00c fd4f 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 8003042:	9804      	ldr	r0, [sp, #16]
 8003044:	223d      	movs	r2, #61	; 0x3d
 8003046:	21c2      	movs	r1, #194	; 0xc2
 8003048:	f7ff fc86 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800304c:	ab16      	add	r3, sp, #88	; 0x58
 800304e:	aa14      	add	r2, sp, #80	; 0x50
 8003050:	9804      	ldr	r0, [sp, #16]
 8003052:	9300      	str	r3, [sp, #0]
 8003054:	a913      	add	r1, sp, #76	; 0x4c
 8003056:	ab15      	add	r3, sp, #84	; 0x54
 8003058:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 800305c:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 8003060:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 8003064:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 8003068:	f010 f857 	bl	801311a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 800306c:	9904      	ldr	r1, [sp, #16]
 800306e:	f8c4 52c0 	str.w	r5, [r4, #704]	; 0x2c0
 8003072:	ee18 0a10 	vmov	r0, s16
 8003076:	f00c fd33 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 800307a:	9805      	ldr	r0, [sp, #20]
 800307c:	2219      	movs	r2, #25
 800307e:	21c2      	movs	r1, #194	; 0xc2
 8003080:	f7ff fc6a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003084:	ab16      	add	r3, sp, #88	; 0x58
 8003086:	aa14      	add	r2, sp, #80	; 0x50
 8003088:	9805      	ldr	r0, [sp, #20]
 800308a:	9300      	str	r3, [sp, #0]
 800308c:	a913      	add	r1, sp, #76	; 0x4c
 800308e:	ab15      	add	r3, sp, #84	; 0x54
 8003090:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 8003094:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 8003098:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 800309c:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 80030a0:	f010 f83b 	bl	801311a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80030a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80030a6:	f8c4 32ec 	str.w	r3, [r4, #748]	; 0x2ec
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 80030aa:	9905      	ldr	r1, [sp, #20]
 80030ac:	f8c4 52fc 	str.w	r5, [r4, #764]	; 0x2fc
 80030b0:	ee18 0a10 	vmov	r0, s16
 80030b4:	f00c fd14 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 80030b8:	2268      	movs	r2, #104	; 0x68
 80030ba:	210a      	movs	r1, #10
 80030bc:	4630      	mov	r0, r6
 80030be:	f7ff fc4b 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80030c2:	f04f 33ff 	mov.w	r3, #4294967295
 80030c6:	f8c4 3330 	str.w	r3, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 80030ca:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 80030ce:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        boundingArea = calculateBoundingArea();
 80030d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80030d6:	4631      	mov	r1, r6
 80030d8:	4640      	mov	r0, r8
 80030da:	4798      	blx	r3
 80030dc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80030e0:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 80030e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 80030e8:	f604 1334 	addw	r3, r4, #2356	; 0x934
 80030ec:	9303      	str	r3, [sp, #12]
 80030ee:	683b      	ldr	r3, [r7, #0]
 80030f0:	b92b      	cbnz	r3, 80030fe <_ZN23Calibration_PadViewBaseC1Ev+0x4ba>
 80030f2:	4b07      	ldr	r3, [pc, #28]	; (8003110 <_ZN23Calibration_PadViewBaseC1Ev+0x4cc>)
 80030f4:	4a07      	ldr	r2, [pc, #28]	; (8003114 <_ZN23Calibration_PadViewBaseC1Ev+0x4d0>)
 80030f6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80030f8:	4807      	ldr	r0, [pc, #28]	; (8003118 <_ZN23Calibration_PadViewBaseC1Ev+0x4d4>)
 80030fa:	f027 fc91 	bl	802aa20 <__assert_func>
 80030fe:	4b07      	ldr	r3, [pc, #28]	; (800311c <_ZN23Calibration_PadViewBaseC1Ev+0x4d8>)
 8003100:	881b      	ldrh	r3, [r3, #0]
 8003102:	2b01      	cmp	r3, #1
 8003104:	d80e      	bhi.n	8003124 <_ZN23Calibration_PadViewBaseC1Ev+0x4e0>
 8003106:	4b06      	ldr	r3, [pc, #24]	; (8003120 <_ZN23Calibration_PadViewBaseC1Ev+0x4dc>)
 8003108:	4a02      	ldr	r2, [pc, #8]	; (8003114 <_ZN23Calibration_PadViewBaseC1Ev+0x4d0>)
 800310a:	2161      	movs	r1, #97	; 0x61
 800310c:	e7f4      	b.n	80030f8 <_ZN23Calibration_PadViewBaseC1Ev+0x4b4>
 800310e:	bf00      	nop
 8003110:	0802c400 	.word	0x0802c400
 8003114:	0802c505 	.word	0x0802c505
 8003118:	0802c47d 	.word	0x0802c47d
 800311c:	20013318 	.word	0x20013318
 8003120:	0802c4c4 	.word	0x0802c4c4
        return texts->getText(typedTextId);
 8003124:	4bd8      	ldr	r3, [pc, #864]	; (8003488 <_ZN23Calibration_PadViewBaseC1Ev+0x844>)
 8003126:	4651      	mov	r1, sl
 8003128:	6818      	ldr	r0, [r3, #0]
 800312a:	f004 fe97 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 800312e:	4ad7      	ldr	r2, [pc, #860]	; (800348c <_ZN23Calibration_PadViewBaseC1Ev+0x848>)
 8003130:	4603      	mov	r3, r0
 8003132:	210a      	movs	r1, #10
 8003134:	9803      	ldr	r0, [sp, #12]
 8003136:	f015 ff59 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800313a:	9903      	ldr	r1, [sp, #12]
 800313c:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
    textAreaCal_LP3.resizeToCurrentText();
 8003140:	4630      	mov	r0, r6
 8003142:	f00f fad5 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003146:	f04f 0102 	mov.w	r1, #2
 800314a:	4bd1      	ldr	r3, [pc, #836]	; (8003490 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 800314c:	f8ad 105c 	strh.w	r1, [sp, #92]	; 0x5c
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP3));
 8003150:	4630      	mov	r0, r6
 8003152:	a916      	add	r1, sp, #88	; 0x58
 8003154:	9316      	str	r3, [sp, #88]	; 0x58
 8003156:	f00f faeb 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 800315a:	4631      	mov	r1, r6
 800315c:	ee18 0a10 	vmov	r0, s16
 8003160:	f00c fcbe 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 8003164:	2244      	movs	r2, #68	; 0x44
 8003166:	ee1b 0a90 	vmov	r0, s23
 800316a:	2116      	movs	r1, #22
 800316c:	f7ff fbf4 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8003170:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 8003174:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 8003178:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800317c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003180:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 8003184:	4640      	mov	r0, r8
 8003186:	ee1b 1a90 	vmov	r1, s23
 800318a:	4798      	blx	r3
 800318c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003190:	f504 7362 	add.w	r3, r4, #904	; 0x388
 8003194:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003198:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 800319a:	f604 1648 	addw	r6, r4, #2376	; 0x948
 800319e:	2b00      	cmp	r3, #0
 80031a0:	d0a7      	beq.n	80030f2 <_ZN23Calibration_PadViewBaseC1Ev+0x4ae>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80031a2:	49bc      	ldr	r1, [pc, #752]	; (8003494 <_ZN23Calibration_PadViewBaseC1Ev+0x850>)
 80031a4:	880b      	ldrh	r3, [r1, #0]
 80031a6:	2b03      	cmp	r3, #3
 80031a8:	d9ad      	bls.n	8003106 <_ZN23Calibration_PadViewBaseC1Ev+0x4c2>
        return texts->getText(typedTextId);
 80031aa:	4ab7      	ldr	r2, [pc, #732]	; (8003488 <_ZN23Calibration_PadViewBaseC1Ev+0x844>)
 80031ac:	2103      	movs	r1, #3
 80031ae:	6810      	ldr	r0, [r2, #0]
 80031b0:	f004 fe54 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 80031b4:	4ab5      	ldr	r2, [pc, #724]	; (800348c <_ZN23Calibration_PadViewBaseC1Ev+0x848>)
 80031b6:	4603      	mov	r3, r0
 80031b8:	210a      	movs	r1, #10
 80031ba:	4630      	mov	r0, r6
 80031bc:	f015 ff16 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 80031c0:	ee1b 0a90 	vmov	r0, s23
 80031c4:	f8c4 6394 	str.w	r6, [r4, #916]	; 0x394
 80031c8:	f00f fa92 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80031cc:	4bb0      	ldr	r3, [pc, #704]	; (8003490 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 80031ce:	9316      	str	r3, [sp, #88]	; 0x58
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP2));
 80031d0:	a816      	add	r0, sp, #88	; 0x58
 80031d2:	2304      	movs	r3, #4
 80031d4:	4601      	mov	r1, r0
 80031d6:	ee1b 0a90 	vmov	r0, s23
 80031da:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 80031de:	f00f faa7 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 80031e2:	ee1b 1a90 	vmov	r1, s23
 80031e6:	ee18 0a10 	vmov	r0, s16
 80031ea:	f00c fc79 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 80031ee:	2220      	movs	r2, #32
 80031f0:	ee1c 0a10 	vmov	r0, s24
 80031f4:	2116      	movs	r1, #22
 80031f6:	f7ff fbaf 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80031fa:	f8d4 3398 	ldr.w	r3, [r4, #920]	; 0x398
        linespace = space;
 80031fe:	f8a4 53cc 	strh.w	r5, [r4, #972]	; 0x3cc
        color = newColor;
 8003202:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003206:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800320a:	f8c4 03c8 	str.w	r0, [r4, #968]	; 0x3c8
        boundingArea = calculateBoundingArea();
 800320e:	ee1c 1a10 	vmov	r1, s24
 8003212:	4640      	mov	r0, r8
 8003214:	4798      	blx	r3
 8003216:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800321a:	f504 7375 	add.w	r3, r4, #980	; 0x3d4
 800321e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003222:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 8003224:	f604 165c 	addw	r6, r4, #2396	; 0x95c
 8003228:	2b00      	cmp	r3, #0
 800322a:	f43f af62 	beq.w	80030f2 <_ZN23Calibration_PadViewBaseC1Ev+0x4ae>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800322e:	4999      	ldr	r1, [pc, #612]	; (8003494 <_ZN23Calibration_PadViewBaseC1Ev+0x850>)
 8003230:	880b      	ldrh	r3, [r1, #0]
 8003232:	2b05      	cmp	r3, #5
 8003234:	f67f af67 	bls.w	8003106 <_ZN23Calibration_PadViewBaseC1Ev+0x4c2>
        return texts->getText(typedTextId);
 8003238:	4a93      	ldr	r2, [pc, #588]	; (8003488 <_ZN23Calibration_PadViewBaseC1Ev+0x844>)
 800323a:	2105      	movs	r1, #5
 800323c:	6810      	ldr	r0, [r2, #0]
 800323e:	f004 fe0d 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8003242:	4a92      	ldr	r2, [pc, #584]	; (800348c <_ZN23Calibration_PadViewBaseC1Ev+0x848>)
 8003244:	4603      	mov	r3, r0
 8003246:	210a      	movs	r1, #10
 8003248:	4630      	mov	r0, r6
 800324a:	f015 fecf 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 800324e:	ee1c 0a10 	vmov	r0, s24
 8003252:	f8c4 63e0 	str.w	r6, [r4, #992]	; 0x3e0
 8003256:	f00f fa4b 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800325a:	f04f 000c 	mov.w	r0, #12
 800325e:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 8003262:	a816      	add	r0, sp, #88	; 0x58
 8003264:	4b8a      	ldr	r3, [pc, #552]	; (8003490 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 8003266:	9316      	str	r3, [sp, #88]	; 0x58
 8003268:	4601      	mov	r1, r0
 800326a:	ee1c 0a10 	vmov	r0, s24
 800326e:	f00f fa5f 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    line1_1_2_1.setPosition(0, 15, 240, 10);
 8003272:	260a      	movs	r6, #10
    swipeContainerPadLeft.add(textAreaCal_LP1);
 8003274:	ee1c 1a10 	vmov	r1, s24
 8003278:	ee18 0a10 	vmov	r0, s16
 800327c:	f00c fc30 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_1.setPosition(0, 15, 240, 10);
 8003280:	23f0      	movs	r3, #240	; 0xf0
 8003282:	ee19 0a90 	vmov	r0, s19
 8003286:	220f      	movs	r2, #15
 8003288:	4629      	mov	r1, r5
 800328a:	9600      	str	r6, [sp, #0]
 800328c:	f7ff fb71 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003290:	f04f 30ff 	mov.w	r0, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003294:	22a0      	movs	r2, #160	; 0xa0
 8003296:	f8c4 0460 	str.w	r0, [r4, #1120]	; 0x460
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800329a:	f8a4 0464 	strh.w	r0, [r4, #1124]	; 0x464
        canvasPainter = &painter;
 800329e:	980a      	ldr	r0, [sp, #40]	; 0x28
 80032a0:	f8c4 040c 	str.w	r0, [r4, #1036]	; 0x40c
 80032a4:	4611      	mov	r1, r2
 80032a6:	ee19 0a90 	vmov	r0, s19
 80032aa:	f00e fdfb 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80032ae:	22a0      	movs	r2, #160	; 0xa0
 80032b0:	ee19 0a90 	vmov	r0, s19
 80032b4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80032b8:	f00e fdff 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2_1.setLineWidth(1);
 80032bc:	ee19 0a90 	vmov	r0, s19
 80032c0:	4651      	mov	r1, sl
 80032c2:	f7ff fcaf 	bl	8002c24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80032c6:	ee19 0a90 	vmov	r0, s19
 80032ca:	4651      	mov	r1, sl
 80032cc:	f00e fe00 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_1_2_1);
 80032d0:	ee19 1a90 	vmov	r1, s19
 80032d4:	ee18 0a10 	vmov	r0, s16
 80032d8:	f00c fc02 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2_1.setXY(92, 0);
 80032dc:	462a      	mov	r2, r5
 80032de:	ee1e 0a90 	vmov	r0, s29
 80032e2:	215c      	movs	r1, #92	; 0x5c
 80032e4:	f7ff fb38 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80032e8:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80032ec:	ee1e 1a90 	vmov	r1, s29
        color = newColor;
 80032f0:	f8c4 0498 	str.w	r0, [r4, #1176]	; 0x498
        linespace = space;
 80032f4:	f8a4 549c 	strh.w	r5, [r4, #1180]	; 0x49c
        boundingArea = calculateBoundingArea();
 80032f8:	4640      	mov	r0, r8
 80032fa:	f00e ff7f 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80032fe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003302:	f204 43a4 	addw	r3, r4, #1188	; 0x4a4
 8003306:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 800330a:	a816      	add	r0, sp, #88	; 0x58
 800330c:	4b60      	ldr	r3, [pc, #384]	; (8003490 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 800330e:	9316      	str	r3, [sp, #88]	; 0x58
 8003310:	4601      	mov	r1, r0
 8003312:	ee1e 0a90 	vmov	r0, s29
 8003316:	f8ad 505c 	strh.w	r5, [sp, #92]	; 0x5c
 800331a:	f00f fa09 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea3_2_1);
 800331e:	ee1e 1a90 	vmov	r1, s29
 8003322:	ee18 0a10 	vmov	r0, s16
 8003326:	f00c fbdb 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 800332a:	ee18 1a10 	vmov	r1, s16
 800332e:	ee18 0a90 	vmov	r0, s17
 8003332:	f00d f8b8 	bl	80104a6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003336:	4858      	ldr	r0, [pc, #352]	; (8003498 <_ZN23Calibration_PadViewBaseC1Ev+0x854>)
 8003338:	f8c4 04b8 	str.w	r0, [r4, #1208]	; 0x4b8
    buttonWithIcon_RP3.setXY(194, 97);
 800333c:	2261      	movs	r2, #97	; 0x61
 800333e:	9806      	ldr	r0, [sp, #24]
 8003340:	21c2      	movs	r1, #194	; 0xc2
 8003342:	f7ff fb09 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003346:	a816      	add	r0, sp, #88	; 0x58
 8003348:	9000      	str	r0, [sp, #0]
 800334a:	a815      	add	r0, sp, #84	; 0x54
 800334c:	4603      	mov	r3, r0
 800334e:	a814      	add	r0, sp, #80	; 0x50
 8003350:	4602      	mov	r2, r0
 8003352:	a813      	add	r0, sp, #76	; 0x4c
 8003354:	4601      	mov	r1, r0
 8003356:	9806      	ldr	r0, [sp, #24]
 8003358:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 800335c:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 8003360:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 8003364:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 8003368:	f00f fed7 	bl	801311a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 800336c:	9906      	ldr	r1, [sp, #24]
 800336e:	f8c4 5514 	str.w	r5, [r4, #1300]	; 0x514
 8003372:	ee19 0a10 	vmov	r0, s18
 8003376:	f00c fbb3 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 800337a:	9807      	ldr	r0, [sp, #28]
 800337c:	223d      	movs	r2, #61	; 0x3d
 800337e:	21c2      	movs	r1, #194	; 0xc2
 8003380:	f7ff faea 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003384:	a816      	add	r0, sp, #88	; 0x58
 8003386:	9000      	str	r0, [sp, #0]
 8003388:	a815      	add	r0, sp, #84	; 0x54
 800338a:	4603      	mov	r3, r0
 800338c:	a814      	add	r0, sp, #80	; 0x50
 800338e:	4602      	mov	r2, r0
 8003390:	a813      	add	r0, sp, #76	; 0x4c
 8003392:	4601      	mov	r1, r0
 8003394:	9807      	ldr	r0, [sp, #28]
 8003396:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 800339a:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 800339e:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 80033a2:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 80033a6:	f00f feb8 	bl	801311a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 80033aa:	9907      	ldr	r1, [sp, #28]
 80033ac:	f8c4 5550 	str.w	r5, [r4, #1360]	; 0x550
 80033b0:	ee19 0a10 	vmov	r0, s18
 80033b4:	f00c fb94 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 80033b8:	9808      	ldr	r0, [sp, #32]
 80033ba:	2219      	movs	r2, #25
 80033bc:	21c2      	movs	r1, #194	; 0xc2
 80033be:	f7ff facb 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80033c2:	a816      	add	r0, sp, #88	; 0x58
 80033c4:	9000      	str	r0, [sp, #0]
 80033c6:	a815      	add	r0, sp, #84	; 0x54
 80033c8:	4603      	mov	r3, r0
 80033ca:	a814      	add	r0, sp, #80	; 0x50
 80033cc:	4602      	mov	r2, r0
 80033ce:	a813      	add	r0, sp, #76	; 0x4c
 80033d0:	4601      	mov	r1, r0
 80033d2:	9808      	ldr	r0, [sp, #32]
 80033d4:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 80033d8:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 80033dc:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 80033e0:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 80033e4:	f00f fe99 	bl	801311a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 80033e8:	9908      	ldr	r1, [sp, #32]
 80033ea:	f8c4 558c 	str.w	r5, [r4, #1420]	; 0x58c
 80033ee:	ee19 0a10 	vmov	r0, s18
 80033f2:	f00c fb75 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 80033f6:	ee1f 0a10 	vmov	r0, s30
 80033fa:	2268      	movs	r2, #104	; 0x68
 80033fc:	4631      	mov	r1, r6
 80033fe:	f7ff faab 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003402:	683b      	ldr	r3, [r7, #0]
        linespace = space;
 8003404:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        color = newColor;
 8003408:	f04f 30ff 	mov.w	r0, #4294967295
 800340c:	f8c4 05c0 	str.w	r0, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8003410:	f8c4 55cc 	str.w	r5, [r4, #1484]	; 0x5cc
 8003414:	f8c4 05d0 	str.w	r0, [r4, #1488]	; 0x5d0
 8003418:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 800341c:	f504 6817 	add.w	r8, r4, #2416	; 0x970
 8003420:	2b00      	cmp	r3, #0
 8003422:	f43f ae66 	beq.w	80030f2 <_ZN23Calibration_PadViewBaseC1Ev+0x4ae>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003426:	491b      	ldr	r1, [pc, #108]	; (8003494 <_ZN23Calibration_PadViewBaseC1Ev+0x850>)
 8003428:	880b      	ldrh	r3, [r1, #0]
 800342a:	42b3      	cmp	r3, r6
 800342c:	f67f ae6b 	bls.w	8003106 <_ZN23Calibration_PadViewBaseC1Ev+0x4c2>
        return texts->getText(typedTextId);
 8003430:	4a15      	ldr	r2, [pc, #84]	; (8003488 <_ZN23Calibration_PadViewBaseC1Ev+0x844>)
 8003432:	4631      	mov	r1, r6
 8003434:	6810      	ldr	r0, [r2, #0]
 8003436:	f004 fd11 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 800343a:	4a14      	ldr	r2, [pc, #80]	; (800348c <_ZN23Calibration_PadViewBaseC1Ev+0x848>)
 800343c:	4603      	mov	r3, r0
 800343e:	4631      	mov	r1, r6
 8003440:	4640      	mov	r0, r8
 8003442:	f015 fdd3 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 8003446:	ee1f 0a10 	vmov	r0, s30
 800344a:	f8c4 85d8 	str.w	r8, [r4, #1496]	; 0x5d8
 800344e:	f00f f94f 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003452:	4b0f      	ldr	r3, [pc, #60]	; (8003490 <_ZN23Calibration_PadViewBaseC1Ev+0x84c>)
 8003454:	9316      	str	r3, [sp, #88]	; 0x58
 8003456:	230b      	movs	r3, #11
 8003458:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP3));
 800345c:	ab16      	add	r3, sp, #88	; 0x58
 800345e:	4619      	mov	r1, r3
 8003460:	ee1f 0a10 	vmov	r0, s30
 8003464:	f00f f964 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 8003468:	ee1f 1a10 	vmov	r1, s30
 800346c:	ee19 0a10 	vmov	r0, s18
 8003470:	f00c fb36 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8003474:	ee1f 0a90 	vmov	r0, s31
 8003478:	2244      	movs	r2, #68	; 0x44
 800347a:	2116      	movs	r1, #22
 800347c:	f7ff fa6c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003480:	f04f 33ff 	mov.w	r3, #4294967295
 8003484:	e00a      	b.n	800349c <_ZN23Calibration_PadViewBaseC1Ev+0x858>
 8003486:	bf00      	nop
 8003488:	20013320 	.word	0x20013320
 800348c:	0802c53d 	.word	0x0802c53d
 8003490:	0802c5b0 	.word	0x0802c5b0
 8003494:	20013318 	.word	0x20013318
 8003498:	00ac00f0 	.word	0x00ac00f0
 800349c:	f8c4 360c 	str.w	r3, [r4, #1548]	; 0x60c
        boundingArea = calculateBoundingArea();
 80034a0:	f8c4 361c 	str.w	r3, [r4, #1564]	; 0x61c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80034a4:	683b      	ldr	r3, [r7, #0]
        linespace = space;
 80034a6:	f8a4 5610 	strh.w	r5, [r4, #1552]	; 0x610
        boundingArea = calculateBoundingArea();
 80034aa:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 80034ae:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 80034b2:	f604 1584 	addw	r5, r4, #2436	; 0x984
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	f43f ae1b 	beq.w	80030f2 <_ZN23Calibration_PadViewBaseC1Ev+0x4ae>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80034bc:	49cd      	ldr	r1, [pc, #820]	; (80037f4 <_ZN23Calibration_PadViewBaseC1Ev+0xbb0>)
 80034be:	880b      	ldrh	r3, [r1, #0]
 80034c0:	2b08      	cmp	r3, #8
 80034c2:	f67f ae20 	bls.w	8003106 <_ZN23Calibration_PadViewBaseC1Ev+0x4c2>
        return texts->getText(typedTextId);
 80034c6:	f8df 9338 	ldr.w	r9, [pc, #824]	; 8003800 <_ZN23Calibration_PadViewBaseC1Ev+0xbbc>
        : typedTextId(id)
 80034ca:	f8df 8338 	ldr.w	r8, [pc, #824]	; 8003804 <_ZN23Calibration_PadViewBaseC1Ev+0xbc0>
        return texts->getText(typedTextId);
 80034ce:	f8d9 0000 	ldr.w	r0, [r9]
 80034d2:	2108      	movs	r1, #8
 80034d4:	f004 fcc2 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 80034d8:	4ac7      	ldr	r2, [pc, #796]	; (80037f8 <_ZN23Calibration_PadViewBaseC1Ev+0xbb4>)
 80034da:	4603      	mov	r3, r0
 80034dc:	4631      	mov	r1, r6
 80034de:	4628      	mov	r0, r5
 80034e0:	f015 fd84 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 80034e4:	ee1f 0a90 	vmov	r0, s31
 80034e8:	f8c4 5624 	str.w	r5, [r4, #1572]	; 0x624
 80034ec:	f00f f900 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80034f0:	2309      	movs	r3, #9
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP2));
 80034f2:	ee1f 0a90 	vmov	r0, s31
 80034f6:	a916      	add	r1, sp, #88	; 0x58
 80034f8:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 80034fc:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003500:	f00f f916 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8003504:	ee1f 1a90 	vmov	r1, s31
 8003508:	ee19 0a10 	vmov	r0, s18
 800350c:	f00c fae8 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP1.setXY(22, 32);
 8003510:	9802      	ldr	r0, [sp, #8]
 8003512:	2220      	movs	r2, #32
 8003514:	2116      	movs	r1, #22
 8003516:	f7ff fa1f 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800351a:	4bb8      	ldr	r3, [pc, #736]	; (80037fc <_ZN23Calibration_PadViewBaseC1Ev+0xbb8>)
 800351c:	681b      	ldr	r3, [r3, #0]
        linespace = space;
 800351e:	2600      	movs	r6, #0
        color = newColor;
 8003520:	f04f 37ff 	mov.w	r7, #4294967295
 8003524:	f8c4 7658 	str.w	r7, [r4, #1624]	; 0x658
        linespace = space;
 8003528:	f8a4 665c 	strh.w	r6, [r4, #1628]	; 0x65c
        boundingArea = calculateBoundingArea();
 800352c:	f8c4 6664 	str.w	r6, [r4, #1636]	; 0x664
 8003530:	f8c4 7668 	str.w	r7, [r4, #1640]	; 0x668
 8003534:	f8c4 666c 	str.w	r6, [r4, #1644]	; 0x66c
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 8003538:	f604 1598 	addw	r5, r4, #2456	; 0x998
 800353c:	2b00      	cmp	r3, #0
 800353e:	f43f add8 	beq.w	80030f2 <_ZN23Calibration_PadViewBaseC1Ev+0x4ae>
        return typedTextId < numberOfTypedTexts;
 8003542:	4bac      	ldr	r3, [pc, #688]	; (80037f4 <_ZN23Calibration_PadViewBaseC1Ev+0xbb0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003544:	881b      	ldrh	r3, [r3, #0]
 8003546:	2b07      	cmp	r3, #7
 8003548:	f67f addd 	bls.w	8003106 <_ZN23Calibration_PadViewBaseC1Ev+0x4c2>
        return texts->getText(typedTextId);
 800354c:	f8d9 0000 	ldr.w	r0, [r9]
 8003550:	2107      	movs	r1, #7
 8003552:	f004 fc83 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8003556:	4aa8      	ldr	r2, [pc, #672]	; (80037f8 <_ZN23Calibration_PadViewBaseC1Ev+0xbb4>)
 8003558:	4603      	mov	r3, r0
 800355a:	210a      	movs	r1, #10
 800355c:	4628      	mov	r0, r5
 800355e:	f015 fd45 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8003562:	9802      	ldr	r0, [sp, #8]
 8003564:	f8c4 5670 	str.w	r5, [r4, #1648]	; 0x670
 8003568:	f00f f8c2 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800356c:	f04f 0a0c 	mov.w	sl, #12
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 8003570:	9802      	ldr	r0, [sp, #8]
 8003572:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003576:	a916      	add	r1, sp, #88	; 0x58
    line1_1_2.setPosition(0, 15, 240, 10);
 8003578:	f04f 090a 	mov.w	r9, #10
 800357c:	f8ad a05c 	strh.w	sl, [sp, #92]	; 0x5c
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 8003580:	f00f f8d6 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8003584:	9902      	ldr	r1, [sp, #8]
 8003586:	ee19 0a10 	vmov	r0, s18
 800358a:	f00c faa9 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2.setPosition(0, 15, 240, 10);
 800358e:	ee1a 0a10 	vmov	r0, s20
 8003592:	4631      	mov	r1, r6
 8003594:	f8cd 9000 	str.w	r9, [sp]
 8003598:	23f0      	movs	r3, #240	; 0xf0
 800359a:	220f      	movs	r2, #15
 800359c:	f7ff f9e9 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80035a2:	f8c4 369c 	str.w	r3, [r4, #1692]	; 0x69c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80035a6:	22a0      	movs	r2, #160	; 0xa0
 80035a8:	ee1a 0a10 	vmov	r0, s20
 80035ac:	4611      	mov	r1, r2
 80035ae:	f8c4 76f0 	str.w	r7, [r4, #1776]	; 0x6f0
 80035b2:	f8a4 76f4 	strh.w	r7, [r4, #1780]	; 0x6f4
 80035b6:	f00e fc75 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80035ba:	22a0      	movs	r2, #160	; 0xa0
 80035bc:	ee1a 0a10 	vmov	r0, s20
 80035c0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80035c4:	f00e fc79 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2.setLineWidth(1);
 80035c8:	ee1a 0a10 	vmov	r0, s20
 80035cc:	2101      	movs	r1, #1
 80035ce:	f7ff fb29 	bl	8002c24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80035d2:	ee1a 0a10 	vmov	r0, s20
 80035d6:	2101      	movs	r1, #1
 80035d8:	f00e fc7a 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_1_2);
 80035dc:	ee1a 1a10 	vmov	r1, s20
 80035e0:	ee19 0a10 	vmov	r0, s18
 80035e4:	ad0e      	add	r5, sp, #56	; 0x38
 80035e6:	f00c fa7b 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2.setXY(92, 0);
 80035ea:	4632      	mov	r2, r6
 80035ec:	ee1c 0a90 	vmov	r0, s25
 80035f0:	215c      	movs	r1, #92	; 0x5c
 80035f2:	f7ff f9b1 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80035f6:	ee1c 1a90 	vmov	r1, s25
 80035fa:	4628      	mov	r0, r5
        color = newColor;
 80035fc:	f8c4 7728 	str.w	r7, [r4, #1832]	; 0x728
        linespace = space;
 8003600:	f8a4 672c 	strh.w	r6, [r4, #1836]	; 0x72c
        boundingArea = calculateBoundingArea();
 8003604:	f00e fdfa 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003608:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800360c:	ee1c 3a90 	vmov	r3, s25
 8003610:	333c      	adds	r3, #60	; 0x3c
 8003612:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003616:	2306      	movs	r3, #6
    textArea3_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8003618:	ee1c 0a90 	vmov	r0, s25
 800361c:	a916      	add	r1, sp, #88	; 0x58
 800361e:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003622:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003626:	f00f f883 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea3_2);
 800362a:	ee1c 1a90 	vmov	r1, s25
 800362e:	ee19 0a10 	vmov	r0, s18
 8003632:	f00c fa55 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8003636:	ee19 1a10 	vmov	r1, s18
 800363a:	ee18 0a90 	vmov	r0, s17
 800363e:	f00c ff32 	bl	80104a6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8003642:	ee18 0a90 	vmov	r0, s17
 8003646:	4631      	mov	r1, r6
 8003648:	f00c ff1e 	bl	8010488 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 800364c:	ee18 1a90 	vmov	r1, s17
 8003650:	4658      	mov	r0, fp
 8003652:	f00c fa45 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8003656:	ee1a 0a90 	vmov	r0, s21
 800365a:	4631      	mov	r1, r6
 800365c:	f8cd 9000 	str.w	r9, [sp]
 8003660:	23f0      	movs	r3, #240	; 0xf0
 8003662:	224b      	movs	r2, #75	; 0x4b
 8003664:	f7ff f985 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003668:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800366c:	f8a4 37c0 	strh.w	r3, [r4, #1984]	; 0x7c0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003670:	22a0      	movs	r2, #160	; 0xa0
 8003672:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003674:	f8c4 3768 	str.w	r3, [r4, #1896]	; 0x768
 8003678:	ee1a 0a90 	vmov	r0, s21
 800367c:	4611      	mov	r1, r2
 800367e:	f8c4 77bc 	str.w	r7, [r4, #1980]	; 0x7bc
 8003682:	f00e fc0f 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003686:	22a0      	movs	r2, #160	; 0xa0
 8003688:	ee1a 0a90 	vmov	r0, s21
 800368c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003690:	f00e fc13 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1.setLineWidth(1);
 8003694:	ee1a 0a90 	vmov	r0, s21
 8003698:	2101      	movs	r1, #1
 800369a:	f7ff fac3 	bl	8002c24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800369e:	ee1a 0a90 	vmov	r0, s21
 80036a2:	2101      	movs	r1, #1
 80036a4:	f00e fc14 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80036a8:	ee1a 1a90 	vmov	r1, s21
 80036ac:	4658      	mov	r0, fp
 80036ae:	f00c fa17 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 80036b2:	ee1d 0a10 	vmov	r0, s26
 80036b6:	223c      	movs	r2, #60	; 0x3c
 80036b8:	2146      	movs	r1, #70	; 0x46
 80036ba:	f7ff f94d 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80036be:	ee1d 1a10 	vmov	r1, s26
 80036c2:	4628      	mov	r0, r5
        color = newColor;
 80036c4:	f8c4 77f4 	str.w	r7, [r4, #2036]	; 0x7f4
        linespace = space;
 80036c8:	f8a4 67f8 	strh.w	r6, [r4, #2040]	; 0x7f8
        boundingArea = calculateBoundingArea();
 80036cc:	f00e fd96 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80036d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80036d4:	ee1d 3a10 	vmov	r3, s26
 80036d8:	333c      	adds	r3, #60	; 0x3c
 80036da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80036de:	2316      	movs	r3, #22
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80036e0:	ee1d 0a10 	vmov	r0, s26
 80036e4:	a916      	add	r1, sp, #88	; 0x58
 80036e6:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 80036ea:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 80036ee:	f00f f81f 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80036f2:	ee1d 1a10 	vmov	r1, s26
 80036f6:	4658      	mov	r0, fp
 80036f8:	f00c f9f2 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80036fc:	ee1b 0a10 	vmov	r0, s22
 8003700:	4631      	mov	r1, r6
 8003702:	f8cd 9000 	str.w	r9, [sp]
 8003706:	23f0      	movs	r3, #240	; 0xf0
 8003708:	2232      	movs	r2, #50	; 0x32
 800370a:	f7ff f932 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 800370e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003710:	f8c4 3834 	str.w	r3, [r4, #2100]	; 0x834
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003714:	22a0      	movs	r2, #160	; 0xa0
 8003716:	ee1b 0a10 	vmov	r0, s22
 800371a:	4611      	mov	r1, r2
 800371c:	f8c4 7888 	str.w	r7, [r4, #2184]	; 0x888
 8003720:	f8a4 788c 	strh.w	r7, [r4, #2188]	; 0x88c
 8003724:	f00e fbbe 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003728:	22a0      	movs	r2, #160	; 0xa0
 800372a:	ee1b 0a10 	vmov	r0, s22
 800372e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003732:	f00e fbc2 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1.setLineWidth(1);
 8003736:	ee1b 0a10 	vmov	r0, s22
 800373a:	2101      	movs	r1, #1
 800373c:	f7ff fa72 	bl	8002c24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003740:	ee1b 0a10 	vmov	r0, s22
 8003744:	2101      	movs	r1, #1
 8003746:	f00e fbc3 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800374a:	ee1b 1a10 	vmov	r1, s22
 800374e:	4658      	mov	r0, fp
 8003750:	f00c f9c6 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8003754:	ee1d 0a90 	vmov	r0, s27
 8003758:	2223      	movs	r2, #35	; 0x23
 800375a:	2145      	movs	r1, #69	; 0x45
 800375c:	f7ff f8fc 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8003760:	ee1d 1a90 	vmov	r1, s27
 8003764:	4628      	mov	r0, r5
        color = newColor;
 8003766:	f8c4 78c0 	str.w	r7, [r4, #2240]	; 0x8c0
        linespace = space;
 800376a:	f8a4 68c4 	strh.w	r6, [r4, #2244]	; 0x8c4
        boundingArea = calculateBoundingArea();
 800376e:	f00e fd45 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003772:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003776:	ee1d 3a90 	vmov	r3, s27
 800377a:	333c      	adds	r3, #60	; 0x3c
 800377c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003780:	2318      	movs	r3, #24
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8003782:	ee1d 0a90 	vmov	r0, s27
 8003786:	a916      	add	r1, sp, #88	; 0x58
 8003788:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 800378c:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003790:	f00e ffce 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003794:	ee1d 1a90 	vmov	r1, s27
 8003798:	4658      	mov	r0, fp
 800379a:	f00c f9a1 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800379e:	4652      	mov	r2, sl
 80037a0:	ee1e 0a10 	vmov	r0, s28
 80037a4:	2136      	movs	r1, #54	; 0x36
 80037a6:	f7ff f8d7 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80037aa:	ee1e 1a10 	vmov	r1, s28
 80037ae:	4628      	mov	r0, r5
        color = newColor;
 80037b0:	f8c4 7908 	str.w	r7, [r4, #2312]	; 0x908
        linespace = space;
 80037b4:	f8a4 690c 	strh.w	r6, [r4, #2316]	; 0x90c
        boundingArea = calculateBoundingArea();
 80037b8:	f00e fd20 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80037bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80037c0:	ee1e 3a10 	vmov	r3, s28
 80037c4:	333c      	adds	r3, #60	; 0x3c
 80037c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80037ca:	2319      	movs	r3, #25
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80037cc:	ee1e 0a10 	vmov	r0, s28
 80037d0:	a916      	add	r1, sp, #88	; 0x58
 80037d2:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 80037d6:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 80037da:	f00e ffa9 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80037de:	4658      	mov	r0, fp
 80037e0:	ee1e 1a10 	vmov	r1, s28
 80037e4:	f00c f97c 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80037e8:	4620      	mov	r0, r4
 80037ea:	b019      	add	sp, #100	; 0x64
 80037ec:	ecbd 8b10 	vpop	{d8-d15}
 80037f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037f4:	20013318 	.word	0x20013318
 80037f8:	0802c53d 	.word	0x0802c53d
 80037fc:	20013314 	.word	0x20013314
 8003800:	20013320 	.word	0x20013320
 8003804:	0802c5b0 	.word	0x0802c5b0

08003808 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003808:	4770      	bx	lr

0800380a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800380a:	4770      	bx	lr

0800380c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800380c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003810:	6808      	ldr	r0, [r1, #0]
 8003812:	6849      	ldr	r1, [r1, #4]
 8003814:	c303      	stmia	r3!, {r0, r1}
    }
 8003816:	4770      	bx	lr

08003818 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003818:	4770      	bx	lr

0800381a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800381a:	4770      	bx	lr

0800381c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800381c:	6041      	str	r1, [r0, #4]
    }
 800381e:	4770      	bx	lr

08003820 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003820:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003822:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003824:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003828:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800382c:	8002      	strh	r2, [r0, #0]
 800382e:	8042      	strh	r2, [r0, #2]
 8003830:	8084      	strh	r4, [r0, #4]
 8003832:	80c1      	strh	r1, [r0, #6]
        }
 8003834:	bd10      	pop	{r4, pc}

08003836 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003836:	4770      	bx	lr

08003838 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003838:	4770      	bx	lr
	...

0800383c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800383c:	4b06      	ldr	r3, [pc, #24]	; (8003858 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800383e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003842:	2300      	movs	r3, #0
 8003844:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003848:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800384c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003850:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8003854:	4770      	bx	lr
 8003856:	bf00      	nop
 8003858:	08003bf9 	.word	0x08003bf9

0800385c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800385c:	2301      	movs	r3, #1
 800385e:	7203      	strb	r3, [r0, #8]
    }
 8003860:	4770      	bx	lr

08003862 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003862:	4770      	bx	lr

08003864 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003864:	4770      	bx	lr

08003866 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8003866:	4770      	bx	lr

08003868 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003868:	4770      	bx	lr

0800386a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800386a:	4770      	bx	lr

0800386c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 800386c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800386e:	6840      	ldr	r0, [r0, #4]
 8003870:	6803      	ldr	r3, [r0, #0]
 8003872:	3110      	adds	r1, #16
 8003874:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003876:	4718      	bx	r3

08003878 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003878:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800387a:	6840      	ldr	r0, [r0, #4]
 800387c:	6803      	ldr	r3, [r0, #0]
 800387e:	3110      	adds	r1, #16
 8003880:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003882:	4718      	bx	r3

08003884 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003884:	4770      	bx	lr

08003886 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8003886:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003888:	6840      	ldr	r0, [r0, #4]
 800388a:	6803      	ldr	r3, [r0, #0]
 800388c:	3110      	adds	r1, #16
 800388e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003890:	4718      	bx	r3

08003892 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8003892:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003894:	6840      	ldr	r0, [r0, #4]
 8003896:	6803      	ldr	r3, [r0, #0]
 8003898:	3110      	adds	r1, #16
 800389a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800389c:	4718      	bx	r3

0800389e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800389e:	4770      	bx	lr

080038a0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80038a0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80038a2:	68c2      	ldr	r2, [r0, #12]
 80038a4:	6841      	ldr	r1, [r0, #4]
 80038a6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80038a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80038aa:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80038ae:	07d2      	lsls	r2, r2, #31
 80038b0:	bf48      	it	mi
 80038b2:	590a      	ldrmi	r2, [r1, r4]
 80038b4:	689b      	ldr	r3, [r3, #8]
    }
 80038b6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80038ba:	bf48      	it	mi
 80038bc:	58d3      	ldrmi	r3, [r2, r3]
 80038be:	4718      	bx	r3

080038c0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80038c0:	6843      	ldr	r3, [r0, #4]
 80038c2:	b12b      	cbz	r3, 80038d0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80038c4:	6883      	ldr	r3, [r0, #8]
 80038c6:	b92b      	cbnz	r3, 80038d4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80038c8:	68c0      	ldr	r0, [r0, #12]
 80038ca:	f000 0001 	and.w	r0, r0, #1
 80038ce:	4770      	bx	lr
 80038d0:	4618      	mov	r0, r3
 80038d2:	4770      	bx	lr
 80038d4:	2001      	movs	r0, #1
    }
 80038d6:	4770      	bx	lr

080038d8 <_ZN8touchgfx12NoTransitionD0Ev>:
 80038d8:	b510      	push	{r4, lr}
 80038da:	210c      	movs	r1, #12
 80038dc:	4604      	mov	r4, r0
 80038de:	f026 fa8c 	bl	8029dfa <_ZdlPvj>
 80038e2:	4620      	mov	r0, r4
 80038e4:	bd10      	pop	{r4, pc}

080038e6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80038e6:	b510      	push	{r4, lr}
 80038e8:	2110      	movs	r1, #16
 80038ea:	4604      	mov	r4, r0
 80038ec:	f026 fa85 	bl	8029dfa <_ZdlPvj>
 80038f0:	4620      	mov	r0, r4
 80038f2:	bd10      	pop	{r4, pc}

080038f4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80038f4:	b510      	push	{r4, lr}
 80038f6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80038fa:	4604      	mov	r4, r0
 80038fc:	f026 fa7d 	bl	8029dfa <_ZdlPvj>
 8003900:	4620      	mov	r0, r4
 8003902:	bd10      	pop	{r4, pc}

08003904 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8003904:	b510      	push	{r4, lr}
 8003906:	2138      	movs	r1, #56	; 0x38
 8003908:	4604      	mov	r4, r0
 800390a:	f026 fa76 	bl	8029dfa <_ZdlPvj>
 800390e:	4620      	mov	r0, r4
 8003910:	bd10      	pop	{r4, pc}

08003912 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8003912:	b510      	push	{r4, lr}
 8003914:	2128      	movs	r1, #40	; 0x28
 8003916:	4604      	mov	r4, r0
 8003918:	f026 fa6f 	bl	8029dfa <_ZdlPvj>
 800391c:	4620      	mov	r0, r4
 800391e:	bd10      	pop	{r4, pc}

08003920 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8003920:	b510      	push	{r4, lr}
 8003922:	2138      	movs	r1, #56	; 0x38
 8003924:	4604      	mov	r4, r0
 8003926:	f026 fa68 	bl	8029dfa <_ZdlPvj>
 800392a:	4620      	mov	r0, r4
 800392c:	bd10      	pop	{r4, pc}

0800392e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800392e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003930:	f012 f9ae 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 8003934:	6803      	ldr	r3, [r0, #0]
    }
 8003936:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800393a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800393c:	4718      	bx	r3
	...

08003940 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003940:	b513      	push	{r0, r1, r4, lr}
 8003942:	4604      	mov	r4, r0
        animationCounter++;
 8003944:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003946:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003948:	3001      	adds	r0, #1
 800394a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800394c:	4298      	cmp	r0, r3
        animationCounter++;
 800394e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003950:	d905      	bls.n	800395e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8003952:	2301      	movs	r3, #1
 8003954:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003956:	2300      	movs	r3, #0
 8003958:	72a3      	strb	r3, [r4, #10]
    }
 800395a:	b002      	add	sp, #8
 800395c:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800395e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003962:	2100      	movs	r1, #0
 8003964:	f014 f804 	bl	8017970 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003968:	f010 0201 	ands.w	r2, r0, #1
 800396c:	b283      	uxth	r3, r0
 800396e:	d12a      	bne.n	80039c6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003970:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003972:	4a19      	ldr	r2, [pc, #100]	; (80039d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003974:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003978:	89e3      	ldrh	r3, [r4, #14]
 800397a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800397c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003980:	82a0      	strh	r0, [r4, #20]
 8003982:	2000      	movs	r0, #0
 8003984:	1ad2      	subs	r2, r2, r3
 8003986:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800398a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800398c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800398e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003990:	4a12      	ldr	r2, [pc, #72]	; (80039dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8003992:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003996:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003998:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800399c:	691b      	ldr	r3, [r3, #16]
 800399e:	f8ad 1000 	strh.w	r1, [sp]
 80039a2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80039a6:	4669      	mov	r1, sp
 80039a8:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80039aa:	7aa3      	ldrb	r3, [r4, #10]
 80039ac:	2b01      	cmp	r3, #1
 80039ae:	d1d4      	bne.n	800395a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 80039b0:	4b0b      	ldr	r3, [pc, #44]	; (80039e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 80039b2:	781b      	ldrb	r3, [r3, #0]
 80039b4:	2b00      	cmp	r3, #0
 80039b6:	d0d0      	beq.n	800395a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80039b8:	f012 f96a 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80039bc:	b002      	add	sp, #8
 80039be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80039c2:	f012 b96b 	b.w	8015c9c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80039c6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80039ca:	2800      	cmp	r0, #0
 80039cc:	bfd8      	it	le
 80039ce:	460a      	movle	r2, r1
 80039d0:	4413      	add	r3, r2
 80039d2:	81e3      	strh	r3, [r4, #14]
 80039d4:	e7cd      	b.n	8003972 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80039d6:	bf00      	nop
 80039d8:	200132b0 	.word	0x200132b0
 80039dc:	200132b2 	.word	0x200132b2
 80039e0:	200132ba 	.word	0x200132ba

080039e4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80039e4:	b510      	push	{r4, lr}
 80039e6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80039e8:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80039ec:	b158      	cbz	r0, 8003a06 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80039ee:	6803      	ldr	r3, [r0, #0]
 80039f0:	68db      	ldr	r3, [r3, #12]
 80039f2:	4798      	blx	r3
 80039f4:	b138      	cbz	r0, 8003a06 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80039f6:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80039fa:	6803      	ldr	r3, [r0, #0]
 80039fc:	689b      	ldr	r3, [r3, #8]
 80039fe:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003a00:	2300      	movs	r3, #0
 8003a02:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8003a06:	bd10      	pop	{r4, pc}

08003a08 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8003a08:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003a0c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003a10:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003a12:	68a8      	ldr	r0, [r5, #8]
 8003a14:	6803      	ldr	r3, [r0, #0]
 8003a16:	6a1b      	ldr	r3, [r3, #32]
 8003a18:	4798      	blx	r3
 8003a1a:	2897      	cmp	r0, #151	; 0x97
 8003a1c:	d805      	bhi.n	8003a2a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8003a1e:	4b46      	ldr	r3, [pc, #280]	; (8003b38 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8003a20:	4a46      	ldr	r2, [pc, #280]	; (8003b3c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003a22:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003a24:	4846      	ldr	r0, [pc, #280]	; (8003b40 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8003a26:	f026 fffb 	bl	802aa20 <__assert_func>
 8003a2a:	6868      	ldr	r0, [r5, #4]
 8003a2c:	6803      	ldr	r3, [r0, #0]
 8003a2e:	6a1b      	ldr	r3, [r3, #32]
 8003a30:	4798      	blx	r3
 8003a32:	280f      	cmp	r0, #15
 8003a34:	d803      	bhi.n	8003a3e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8003a36:	4b43      	ldr	r3, [pc, #268]	; (8003b44 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8003a38:	4a40      	ldr	r2, [pc, #256]	; (8003b3c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003a3a:	21a4      	movs	r1, #164	; 0xa4
 8003a3c:	e7f2      	b.n	8003a24 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a3e:	68e8      	ldr	r0, [r5, #12]
 8003a40:	6803      	ldr	r3, [r0, #0]
 8003a42:	6a1b      	ldr	r3, [r3, #32]
 8003a44:	4798      	blx	r3
 8003a46:	280b      	cmp	r0, #11
 8003a48:	d803      	bhi.n	8003a52 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8003a4a:	4b3f      	ldr	r3, [pc, #252]	; (8003b48 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8003a4c:	4a3b      	ldr	r2, [pc, #236]	; (8003b3c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003a4e:	21a5      	movs	r1, #165	; 0xa5
 8003a50:	e7e8      	b.n	8003a24 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003a52:	f012 f91d 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003a56:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003b50 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003a5a:	3004      	adds	r0, #4
 8003a5c:	f012 f97e 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003a60:	f8d9 0000 	ldr.w	r0, [r9]
 8003a64:	b110      	cbz	r0, 8003a6c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8003a66:	6803      	ldr	r3, [r0, #0]
 8003a68:	68db      	ldr	r3, [r3, #12]
 8003a6a:	4798      	blx	r3
    if (*currentTrans)
 8003a6c:	f8d9 0000 	ldr.w	r0, [r9]
 8003a70:	b110      	cbz	r0, 8003a78 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003a72:	6803      	ldr	r3, [r0, #0]
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	4798      	blx	r3
    if (*currentScreen)
 8003a78:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003b54 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003a7c:	f8d8 0000 	ldr.w	r0, [r8]
 8003a80:	b110      	cbz	r0, 8003a88 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003a82:	6803      	ldr	r3, [r0, #0]
 8003a84:	695b      	ldr	r3, [r3, #20]
 8003a86:	4798      	blx	r3
    if (*currentPresenter)
 8003a88:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003a8c:	b110      	cbz	r0, 8003a94 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003a8e:	6803      	ldr	r3, [r0, #0]
 8003a90:	685b      	ldr	r3, [r3, #4]
 8003a92:	4798      	blx	r3
    if (*currentScreen)
 8003a94:	f8d8 0000 	ldr.w	r0, [r8]
 8003a98:	b110      	cbz	r0, 8003aa0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003a9a:	6803      	ldr	r3, [r0, #0]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	4798      	blx	r3
    if (*currentPresenter)
 8003aa0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003aa4:	b110      	cbz	r0, 8003aac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8003aa6:	6803      	ldr	r3, [r0, #0]
 8003aa8:	689b      	ldr	r3, [r3, #8]
 8003aaa:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003aac:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003aae:	6803      	ldr	r3, [r0, #0]
 8003ab0:	2100      	movs	r1, #0
 8003ab2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ab4:	4798      	blx	r3
        : screenContainer(0), done(false)
 8003ab6:	f04f 0b00 	mov.w	fp, #0
 8003aba:	4b24      	ldr	r3, [pc, #144]	; (8003b4c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003abc:	6003      	str	r3, [r0, #0]
 8003abe:	4604      	mov	r4, r0
 8003ac0:	f8c0 b004 	str.w	fp, [r0, #4]
 8003ac4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003ac8:	68a8      	ldr	r0, [r5, #8]
 8003aca:	6803      	ldr	r3, [r0, #0]
 8003acc:	4659      	mov	r1, fp
 8003ace:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ad0:	4798      	blx	r3
 8003ad2:	4606      	mov	r6, r0
 8003ad4:	f004 fe82 	bl	80087dc <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ad8:	6868      	ldr	r0, [r5, #4]
 8003ada:	6803      	ldr	r3, [r0, #0]
 8003adc:	4659      	mov	r1, fp
 8003ade:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ae0:	4798      	blx	r3
 8003ae2:	4631      	mov	r1, r6
 8003ae4:	4605      	mov	r5, r0
 8003ae6:	f004 fe55 	bl	8008794 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8003aea:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003aee:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003af2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003af6:	b1e5      	cbz	r5, 8003b32 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003af8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003afa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003afe:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003b00:	f8c5 a008 	str.w	sl, [r5, #8]
 8003b04:	4630      	mov	r0, r6
 8003b06:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003b08:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003b0a:	4798      	blx	r3
    newPresenter->activate();
 8003b0c:	682b      	ldr	r3, [r5, #0]
 8003b0e:	4628      	mov	r0, r5
 8003b10:	681b      	ldr	r3, [r3, #0]
 8003b12:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003b14:	4621      	mov	r1, r4
 8003b16:	4630      	mov	r0, r6
 8003b18:	f013 fee6 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003b1c:	6823      	ldr	r3, [r4, #0]
 8003b1e:	4620      	mov	r0, r4
 8003b20:	691b      	ldr	r3, [r3, #16]
 8003b22:	4798      	blx	r3
    newTransition->invalidate();
 8003b24:	6823      	ldr	r3, [r4, #0]
 8003b26:	695b      	ldr	r3, [r3, #20]
 8003b28:	4620      	mov	r0, r4
}
 8003b2a:	b001      	add	sp, #4
 8003b2c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b30:	4718      	bx	r3
    model->bind(newPresenter);
 8003b32:	462b      	mov	r3, r5
 8003b34:	e7e1      	b.n	8003afa <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8003b36:	bf00      	nop
 8003b38:	0802c72c 	.word	0x0802c72c
 8003b3c:	0802c7ba 	.word	0x0802c7ba
 8003b40:	0802c8c8 	.word	0x0802c8c8
 8003b44:	0802c90f 	.word	0x0802c90f
 8003b48:	0802c9b2 	.word	0x0802c9b2
 8003b4c:	0802da6c 	.word	0x0802da6c
 8003b50:	20013304 	.word	0x20013304
 8003b54:	20013300 	.word	0x20013300

08003b58 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003b58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003b5a:	4604      	mov	r4, r0
        animationCounter++;
 8003b5c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003b5e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003b60:	3001      	adds	r0, #1
 8003b62:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003b64:	4298      	cmp	r0, r3
        animationCounter++;
 8003b66:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003b68:	d905      	bls.n	8003b76 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8003b6a:	2301      	movs	r3, #1
 8003b6c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003b6e:	2300      	movs	r3, #0
 8003b70:	72a3      	strb	r3, [r4, #10]
    }
 8003b72:	b003      	add	sp, #12
 8003b74:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003b76:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003b7a:	2100      	movs	r1, #0
 8003b7c:	f013 fef8 	bl	8017970 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003b80:	f010 0201 	ands.w	r2, r0, #1
 8003b84:	b283      	uxth	r3, r0
 8003b86:	d128      	bne.n	8003bda <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003b88:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003b8a:	4b18      	ldr	r3, [pc, #96]	; (8003bec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003b8c:	4818      	ldr	r0, [pc, #96]	; (8003bf0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003b8e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003b90:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003b92:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003b94:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003b98:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003b9c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003b9e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003ba0:	442b      	add	r3, r5
 8003ba2:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003ba4:	b212      	sxth	r2, r2
 8003ba6:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003baa:	6803      	ldr	r3, [r0, #0]
 8003bac:	8322      	strh	r2, [r4, #24]
 8003bae:	f8ad 2000 	strh.w	r2, [sp]
 8003bb2:	2200      	movs	r2, #0
 8003bb4:	691b      	ldr	r3, [r3, #16]
 8003bb6:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003bba:	4669      	mov	r1, sp
 8003bbc:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003bbe:	7aa3      	ldrb	r3, [r4, #10]
 8003bc0:	2b01      	cmp	r3, #1
 8003bc2:	d1d6      	bne.n	8003b72 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003bc4:	4b0b      	ldr	r3, [pc, #44]	; (8003bf4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8003bc6:	781b      	ldrb	r3, [r3, #0]
 8003bc8:	2b00      	cmp	r3, #0
 8003bca:	d0d2      	beq.n	8003b72 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003bcc:	f012 f860 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003bd0:	b003      	add	sp, #12
 8003bd2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003bd6:	f012 b861 	b.w	8015c9c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003bda:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003bde:	2800      	cmp	r0, #0
 8003be0:	bfd8      	it	le
 8003be2:	460a      	movle	r2, r1
 8003be4:	4413      	add	r3, r2
 8003be6:	81e3      	strh	r3, [r4, #14]
 8003be8:	e7cf      	b.n	8003b8a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8003bea:	bf00      	nop
 8003bec:	200132b0 	.word	0x200132b0
 8003bf0:	200132b2 	.word	0x200132b2
 8003bf4:	200132ba 	.word	0x200132ba

08003bf8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8003bf8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003bfc:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003c00:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c02:	68a8      	ldr	r0, [r5, #8]
 8003c04:	6803      	ldr	r3, [r0, #0]
 8003c06:	6a1b      	ldr	r3, [r3, #32]
 8003c08:	4798      	blx	r3
 8003c0a:	f241 137b 	movw	r3, #4475	; 0x117b
 8003c0e:	4298      	cmp	r0, r3
 8003c10:	d805      	bhi.n	8003c1e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8003c12:	4b46      	ldr	r3, [pc, #280]	; (8003d2c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8003c14:	4a46      	ldr	r2, [pc, #280]	; (8003d30 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003c16:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c18:	4846      	ldr	r0, [pc, #280]	; (8003d34 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8003c1a:	f026 ff01 	bl	802aa20 <__assert_func>
 8003c1e:	6868      	ldr	r0, [r5, #4]
 8003c20:	6803      	ldr	r3, [r0, #0]
 8003c22:	6a1b      	ldr	r3, [r3, #32]
 8003c24:	4798      	blx	r3
 8003c26:	280f      	cmp	r0, #15
 8003c28:	d803      	bhi.n	8003c32 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8003c2a:	4b43      	ldr	r3, [pc, #268]	; (8003d38 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8003c2c:	4a40      	ldr	r2, [pc, #256]	; (8003d30 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003c2e:	21a4      	movs	r1, #164	; 0xa4
 8003c30:	e7f2      	b.n	8003c18 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c32:	68e8      	ldr	r0, [r5, #12]
 8003c34:	6803      	ldr	r3, [r0, #0]
 8003c36:	6a1b      	ldr	r3, [r3, #32]
 8003c38:	4798      	blx	r3
 8003c3a:	280b      	cmp	r0, #11
 8003c3c:	d803      	bhi.n	8003c46 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8003c3e:	4b3f      	ldr	r3, [pc, #252]	; (8003d3c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8003c40:	4a3b      	ldr	r2, [pc, #236]	; (8003d30 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003c42:	21a5      	movs	r1, #165	; 0xa5
 8003c44:	e7e8      	b.n	8003c18 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003c46:	f012 f823 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c4a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003d44 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8003c4e:	3004      	adds	r0, #4
 8003c50:	f012 f884 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c54:	f8d9 0000 	ldr.w	r0, [r9]
 8003c58:	b110      	cbz	r0, 8003c60 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003c5a:	6803      	ldr	r3, [r0, #0]
 8003c5c:	68db      	ldr	r3, [r3, #12]
 8003c5e:	4798      	blx	r3
    if (*currentTrans)
 8003c60:	f8d9 0000 	ldr.w	r0, [r9]
 8003c64:	b110      	cbz	r0, 8003c6c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003c66:	6803      	ldr	r3, [r0, #0]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	4798      	blx	r3
    if (*currentScreen)
 8003c6c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003d48 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003c70:	f8d8 0000 	ldr.w	r0, [r8]
 8003c74:	b110      	cbz	r0, 8003c7c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003c76:	6803      	ldr	r3, [r0, #0]
 8003c78:	695b      	ldr	r3, [r3, #20]
 8003c7a:	4798      	blx	r3
    if (*currentPresenter)
 8003c7c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c80:	b110      	cbz	r0, 8003c88 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003c82:	6803      	ldr	r3, [r0, #0]
 8003c84:	685b      	ldr	r3, [r3, #4]
 8003c86:	4798      	blx	r3
    if (*currentScreen)
 8003c88:	f8d8 0000 	ldr.w	r0, [r8]
 8003c8c:	b110      	cbz	r0, 8003c94 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003c8e:	6803      	ldr	r3, [r0, #0]
 8003c90:	681b      	ldr	r3, [r3, #0]
 8003c92:	4798      	blx	r3
    if (*currentPresenter)
 8003c94:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c98:	b110      	cbz	r0, 8003ca0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003c9a:	6803      	ldr	r3, [r0, #0]
 8003c9c:	689b      	ldr	r3, [r3, #8]
 8003c9e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003ca0:	68e8      	ldr	r0, [r5, #12]
 8003ca2:	6803      	ldr	r3, [r0, #0]
 8003ca4:	2100      	movs	r1, #0
 8003ca6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ca8:	4798      	blx	r3
 8003caa:	f04f 0b00 	mov.w	fp, #0
 8003cae:	4b24      	ldr	r3, [pc, #144]	; (8003d40 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003cb0:	6003      	str	r3, [r0, #0]
 8003cb2:	4604      	mov	r4, r0
 8003cb4:	f8c0 b004 	str.w	fp, [r0, #4]
 8003cb8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003cbc:	68a8      	ldr	r0, [r5, #8]
 8003cbe:	6803      	ldr	r3, [r0, #0]
 8003cc0:	4659      	mov	r1, fp
 8003cc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cc4:	4798      	blx	r3
 8003cc6:	4606      	mov	r6, r0
 8003cc8:	f004 fa2c 	bl	8008124 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ccc:	6868      	ldr	r0, [r5, #4]
 8003cce:	6803      	ldr	r3, [r0, #0]
 8003cd0:	4659      	mov	r1, fp
 8003cd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cd4:	4798      	blx	r3
 8003cd6:	4631      	mov	r1, r6
 8003cd8:	4605      	mov	r5, r0
 8003cda:	f004 f9fd 	bl	80080d8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003cde:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003ce2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003ce6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003cea:	b1e5      	cbz	r5, 8003d26 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8003cec:	1d2b      	adds	r3, r5, #4
 8003cee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003cf2:	6833      	ldr	r3, [r6, #0]
 8003cf4:	f8c5 a008 	str.w	sl, [r5, #8]
 8003cf8:	4630      	mov	r0, r6
 8003cfa:	68db      	ldr	r3, [r3, #12]
 8003cfc:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003cfe:	4798      	blx	r3
    newPresenter->activate();
 8003d00:	682b      	ldr	r3, [r5, #0]
 8003d02:	4628      	mov	r0, r5
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d08:	4621      	mov	r1, r4
 8003d0a:	4630      	mov	r0, r6
 8003d0c:	f013 fdec 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d10:	6823      	ldr	r3, [r4, #0]
 8003d12:	4620      	mov	r0, r4
 8003d14:	691b      	ldr	r3, [r3, #16]
 8003d16:	4798      	blx	r3
    newTransition->invalidate();
 8003d18:	6823      	ldr	r3, [r4, #0]
 8003d1a:	695b      	ldr	r3, [r3, #20]
 8003d1c:	4620      	mov	r0, r4
}
 8003d1e:	b001      	add	sp, #4
 8003d20:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d24:	4718      	bx	r3
    model->bind(newPresenter);
 8003d26:	462b      	mov	r3, r5
 8003d28:	e7e1      	b.n	8003cee <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8003d2a:	bf00      	nop
 8003d2c:	0802c72c 	.word	0x0802c72c
 8003d30:	0802ca55 	.word	0x0802ca55
 8003d34:	0802c8c8 	.word	0x0802c8c8
 8003d38:	0802c90f 	.word	0x0802c90f
 8003d3c:	0802c9b2 	.word	0x0802c9b2
 8003d40:	0802da6c 	.word	0x0802da6c
 8003d44:	20013304 	.word	0x20013304
 8003d48:	20013300 	.word	0x20013300

08003d4c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003d4c:	4b04      	ldr	r3, [pc, #16]	; (8003d60 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8003d54:	b10a      	cbz	r2, 8003d5a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8003d56:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003d58:	b900      	cbnz	r0, 8003d5c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003d5a:	6898      	ldr	r0, [r3, #8]
    }
 8003d5c:	4770      	bx	lr
 8003d5e:	bf00      	nop
 8003d60:	200132bc 	.word	0x200132bc

08003d64 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d66:	4604      	mov	r4, r0
 8003d68:	4617      	mov	r7, r2
 8003d6a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003d6c:	f012 f8c4 	bl	8015ef8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003d70:	4b10      	ldr	r3, [pc, #64]	; (8003db4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8003d72:	601c      	str	r4, [r3, #0]
      model(m)
 8003d74:	4b10      	ldr	r3, [pc, #64]	; (8003db8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8003d76:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003d78:	4b10      	ldr	r3, [pc, #64]	; (8003dbc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8003d7a:	2500      	movs	r5, #0
 8003d7c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003d80:	4b0f      	ldr	r3, [pc, #60]	; (8003dc0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003d82:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8003d86:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003d88:	6803      	ldr	r3, [r0, #0]
 8003d8a:	2101      	movs	r1, #1
 8003d8c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003d8e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8003d92:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003d96:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003d98:	4628      	mov	r0, r5
 8003d9a:	f004 f823 	bl	8007de4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003d9e:	f7ff ffd5 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8003da2:	f01b fcac 	bl	801f6fe <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003da6:	f7ff ffd1 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8003daa:	f01b fd23 	bl	801f7f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003dae:	4620      	mov	r0, r4
 8003db0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003db2:	bf00      	nop
 8003db4:	20013310 	.word	0x20013310
 8003db8:	0802da18 	.word	0x0802da18
 8003dbc:	0802da00 	.word	0x0802da00
 8003dc0:	200132bc 	.word	0x200132bc

08003dc4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003dc4:	4b06      	ldr	r3, [pc, #24]	; (8003de0 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8003dc6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003dca:	2300      	movs	r3, #0
 8003dcc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003dd0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003dd4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003dd8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ddc:	4770      	bx	lr
 8003dde:	bf00      	nop
 8003de0:	08003bf9 	.word	0x08003bf9

08003de4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8003de4:	4b06      	ldr	r3, [pc, #24]	; (8003e00 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8003de6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003dea:	2300      	movs	r3, #0
 8003dec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003df0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003df4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003df8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003dfc:	4770      	bx	lr
 8003dfe:	bf00      	nop
 8003e00:	08004269 	.word	0x08004269

08003e04 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003e04:	4b06      	ldr	r3, [pc, #24]	; (8003e20 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003e06:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e0a:	2300      	movs	r3, #0
 8003e0c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e10:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e14:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e18:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e1c:	4770      	bx	lr
 8003e1e:	bf00      	nop
 8003e20:	08004e0d 	.word	0x08004e0d

08003e24 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8003e24:	4b06      	ldr	r3, [pc, #24]	; (8003e40 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8003e26:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e2a:	2300      	movs	r3, #0
 8003e2c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e30:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e34:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e38:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e3c:	4770      	bx	lr
 8003e3e:	bf00      	nop
 8003e40:	08004129 	.word	0x08004129

08003e44 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8003e44:	4b06      	ldr	r3, [pc, #24]	; (8003e60 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8003e46:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e4a:	2300      	movs	r3, #0
 8003e4c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e50:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e54:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e58:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e5c:	4770      	bx	lr
 8003e5e:	bf00      	nop
 8003e60:	08004ccd 	.word	0x08004ccd

08003e64 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8003e64:	4b06      	ldr	r3, [pc, #24]	; (8003e80 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8003e66:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e6a:	2300      	movs	r3, #0
 8003e6c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e70:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e74:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e78:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e7c:	4770      	bx	lr
 8003e7e:	bf00      	nop
 8003e80:	08004b8d 	.word	0x08004b8d

08003e84 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003e84:	4b06      	ldr	r3, [pc, #24]	; (8003ea0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003e86:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e8a:	2300      	movs	r3, #0
 8003e8c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e90:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e94:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e98:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e9c:	4770      	bx	lr
 8003e9e:	bf00      	nop
 8003ea0:	08004a4d 	.word	0x08004a4d

08003ea4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003ea4:	4b06      	ldr	r3, [pc, #24]	; (8003ec0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003ea6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003eaa:	2300      	movs	r3, #0
 8003eac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003eb0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003eb4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003eb8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ebc:	4770      	bx	lr
 8003ebe:	bf00      	nop
 8003ec0:	0800490d 	.word	0x0800490d

08003ec4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003ec4:	4b06      	ldr	r3, [pc, #24]	; (8003ee0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003ec6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003eca:	2300      	movs	r3, #0
 8003ecc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ed0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ed4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ed8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003edc:	4770      	bx	lr
 8003ede:	bf00      	nop
 8003ee0:	08003fe9 	.word	0x08003fe9

08003ee4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003ee4:	4b06      	ldr	r3, [pc, #24]	; (8003f00 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003ee6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003eea:	2300      	movs	r3, #0
 8003eec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ef0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ef4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ef8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003efc:	4770      	bx	lr
 8003efe:	bf00      	nop
 8003f00:	080047cd 	.word	0x080047cd

08003f04 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003f04:	4b06      	ldr	r3, [pc, #24]	; (8003f20 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003f06:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f0a:	2300      	movs	r3, #0
 8003f0c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f10:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f14:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f18:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f1c:	4770      	bx	lr
 8003f1e:	bf00      	nop
 8003f20:	0800468d 	.word	0x0800468d

08003f24 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8003f24:	4b06      	ldr	r3, [pc, #24]	; (8003f40 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8003f26:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f2a:	2300      	movs	r3, #0
 8003f2c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f30:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f34:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f38:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f3c:	4770      	bx	lr
 8003f3e:	bf00      	nop
 8003f40:	0800454d 	.word	0x0800454d

08003f44 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003f44:	4b06      	ldr	r3, [pc, #24]	; (8003f60 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003f46:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f4a:	2300      	movs	r3, #0
 8003f4c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f50:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f54:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f58:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f5c:	4770      	bx	lr
 8003f5e:	bf00      	nop
 8003f60:	0800440d 	.word	0x0800440d

08003f64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003f64:	4b06      	ldr	r3, [pc, #24]	; (8003f80 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003f66:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f6a:	2300      	movs	r3, #0
 8003f6c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f70:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f74:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f78:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f7c:	4770      	bx	lr
 8003f7e:	bf00      	nop
 8003f80:	08003a09 	.word	0x08003a09

08003f84 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003f84:	6803      	ldr	r3, [r0, #0]
 8003f86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f88:	4718      	bx	r3
	...

08003f8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003f8c:	4b12      	ldr	r3, [pc, #72]	; (8003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003f8e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003f90:	6003      	str	r3, [r0, #0]
 8003f92:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003f96:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003f98:	4b10      	ldr	r3, [pc, #64]	; (8003fdc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003f9a:	7241      	strb	r1, [r0, #9]
 8003f9c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003f9e:	4910      	ldr	r1, [pc, #64]	; (8003fe0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003fa0:	4b10      	ldr	r3, [pc, #64]	; (8003fe4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003fa2:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003fa6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003faa:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003fac:	2200      	movs	r2, #0
 8003fae:	6042      	str	r2, [r0, #4]
 8003fb0:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003fb2:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003fb4:	81c2      	strh	r2, [r0, #14]
          solid()
 8003fb6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003fba:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003fbe:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003fc2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003fc6:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003fc8:	9100      	str	r1, [sp, #0]
 8003fca:	3010      	adds	r0, #16
 8003fcc:	4611      	mov	r1, r2
 8003fce:	f7fe fcd0 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003fd2:	4620      	mov	r0, r4
 8003fd4:	b002      	add	sp, #8
 8003fd6:	bd10      	pop	{r4, pc}
 8003fd8:	0802dab4 	.word	0x0802dab4
 8003fdc:	0802d998 	.word	0x0802d998
 8003fe0:	200132b2 	.word	0x200132b2
 8003fe4:	200132b0 	.word	0x200132b0

08003fe8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003fe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003fec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ff0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003ff2:	68a0      	ldr	r0, [r4, #8]
 8003ff4:	6803      	ldr	r3, [r0, #0]
 8003ff6:	6a1b      	ldr	r3, [r3, #32]
 8003ff8:	4798      	blx	r3
 8003ffa:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003ffe:	d205      	bcs.n	800400c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004000:	4b42      	ldr	r3, [pc, #264]	; (800410c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004002:	4a43      	ldr	r2, [pc, #268]	; (8004110 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004004:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004006:	4843      	ldr	r0, [pc, #268]	; (8004114 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004008:	f026 fd0a 	bl	802aa20 <__assert_func>
 800400c:	6860      	ldr	r0, [r4, #4]
 800400e:	6803      	ldr	r3, [r0, #0]
 8004010:	6a1b      	ldr	r3, [r3, #32]
 8004012:	4798      	blx	r3
 8004014:	280f      	cmp	r0, #15
 8004016:	d803      	bhi.n	8004020 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004018:	4b3f      	ldr	r3, [pc, #252]	; (8004118 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 800401a:	4a3d      	ldr	r2, [pc, #244]	; (8004110 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800401c:	21a4      	movs	r1, #164	; 0xa4
 800401e:	e7f2      	b.n	8004006 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004020:	68e0      	ldr	r0, [r4, #12]
 8004022:	6803      	ldr	r3, [r0, #0]
 8004024:	6a1b      	ldr	r3, [r3, #32]
 8004026:	4798      	blx	r3
 8004028:	2837      	cmp	r0, #55	; 0x37
 800402a:	d803      	bhi.n	8004034 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 800402c:	4b3b      	ldr	r3, [pc, #236]	; (800411c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 800402e:	4a38      	ldr	r2, [pc, #224]	; (8004110 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004030:	21a5      	movs	r1, #165	; 0xa5
 8004032:	e7e8      	b.n	8004006 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004034:	f011 fe2c 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004038:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004120 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 800403c:	3004      	adds	r0, #4
 800403e:	f011 fe8d 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004042:	f8d9 0000 	ldr.w	r0, [r9]
 8004046:	b110      	cbz	r0, 800404e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004048:	6803      	ldr	r3, [r0, #0]
 800404a:	68db      	ldr	r3, [r3, #12]
 800404c:	4798      	blx	r3
    if (*currentTrans)
 800404e:	f8d9 0000 	ldr.w	r0, [r9]
 8004052:	b110      	cbz	r0, 800405a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004054:	6803      	ldr	r3, [r0, #0]
 8004056:	681b      	ldr	r3, [r3, #0]
 8004058:	4798      	blx	r3
    if (*currentScreen)
 800405a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004124 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 800405e:	f8d8 0000 	ldr.w	r0, [r8]
 8004062:	b110      	cbz	r0, 800406a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004064:	6803      	ldr	r3, [r0, #0]
 8004066:	695b      	ldr	r3, [r3, #20]
 8004068:	4798      	blx	r3
    if (*currentPresenter)
 800406a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800406e:	b110      	cbz	r0, 8004076 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004070:	6803      	ldr	r3, [r0, #0]
 8004072:	685b      	ldr	r3, [r3, #4]
 8004074:	4798      	blx	r3
    if (*currentScreen)
 8004076:	f8d8 0000 	ldr.w	r0, [r8]
 800407a:	b110      	cbz	r0, 8004082 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 800407c:	6803      	ldr	r3, [r0, #0]
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	4798      	blx	r3
    if (*currentPresenter)
 8004082:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004086:	b110      	cbz	r0, 800408e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004088:	6803      	ldr	r3, [r0, #0]
 800408a:	689b      	ldr	r3, [r3, #8]
 800408c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800408e:	68e0      	ldr	r0, [r4, #12]
 8004090:	2100      	movs	r1, #0
 8004092:	f7ff ff77 	bl	8003f84 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004096:	2114      	movs	r1, #20
 8004098:	4605      	mov	r5, r0
 800409a:	f7ff ff77 	bl	8003f8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800409e:	68a0      	ldr	r0, [r4, #8]
 80040a0:	6803      	ldr	r3, [r0, #0]
 80040a2:	2100      	movs	r1, #0
 80040a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040a6:	4798      	blx	r3
 80040a8:	4606      	mov	r6, r0
 80040aa:	f004 f8fb 	bl	80082a4 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80040ae:	6860      	ldr	r0, [r4, #4]
 80040b0:	6803      	ldr	r3, [r0, #0]
 80040b2:	2100      	movs	r1, #0
 80040b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040b6:	4798      	blx	r3
 80040b8:	4631      	mov	r1, r6
 80040ba:	4604      	mov	r4, r0
 80040bc:	f004 f8cc 	bl	8008258 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80040c0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80040c4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80040c8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80040cc:	b1dc      	cbz	r4, 8004106 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 80040ce:	1d23      	adds	r3, r4, #4
 80040d0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80040d4:	6833      	ldr	r3, [r6, #0]
 80040d6:	f8c4 a008 	str.w	sl, [r4, #8]
 80040da:	4630      	mov	r0, r6
 80040dc:	68db      	ldr	r3, [r3, #12]
 80040de:	63f4      	str	r4, [r6, #60]	; 0x3c
 80040e0:	4798      	blx	r3
    newPresenter->activate();
 80040e2:	6823      	ldr	r3, [r4, #0]
 80040e4:	4620      	mov	r0, r4
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80040ea:	4629      	mov	r1, r5
 80040ec:	4630      	mov	r0, r6
 80040ee:	f013 fbfb 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80040f2:	682b      	ldr	r3, [r5, #0]
 80040f4:	4628      	mov	r0, r5
 80040f6:	691b      	ldr	r3, [r3, #16]
 80040f8:	4798      	blx	r3
    newTransition->invalidate();
 80040fa:	682b      	ldr	r3, [r5, #0]
 80040fc:	4628      	mov	r0, r5
 80040fe:	695b      	ldr	r3, [r3, #20]
}
 8004100:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004104:	4718      	bx	r3
    model->bind(newPresenter);
 8004106:	4623      	mov	r3, r4
 8004108:	e7e2      	b.n	80040d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 800410a:	bf00      	nop
 800410c:	0802c72c 	.word	0x0802c72c
 8004110:	0802cb5d 	.word	0x0802cb5d
 8004114:	0802c8c8 	.word	0x0802c8c8
 8004118:	0802c90f 	.word	0x0802c90f
 800411c:	0802c9b2 	.word	0x0802c9b2
 8004120:	20013304 	.word	0x20013304
 8004124:	20013300 	.word	0x20013300

08004128 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004128:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800412c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004130:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004132:	68a0      	ldr	r0, [r4, #8]
 8004134:	6803      	ldr	r3, [r0, #0]
 8004136:	6a1b      	ldr	r3, [r3, #32]
 8004138:	4798      	blx	r3
 800413a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800413e:	d205      	bcs.n	800414c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004140:	4b42      	ldr	r3, [pc, #264]	; (800424c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004142:	4a43      	ldr	r2, [pc, #268]	; (8004250 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004144:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004146:	4843      	ldr	r0, [pc, #268]	; (8004254 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004148:	f026 fc6a 	bl	802aa20 <__assert_func>
 800414c:	6860      	ldr	r0, [r4, #4]
 800414e:	6803      	ldr	r3, [r0, #0]
 8004150:	6a1b      	ldr	r3, [r3, #32]
 8004152:	4798      	blx	r3
 8004154:	280f      	cmp	r0, #15
 8004156:	d803      	bhi.n	8004160 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004158:	4b3f      	ldr	r3, [pc, #252]	; (8004258 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 800415a:	4a3d      	ldr	r2, [pc, #244]	; (8004250 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 800415c:	21a4      	movs	r1, #164	; 0xa4
 800415e:	e7f2      	b.n	8004146 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004160:	68e0      	ldr	r0, [r4, #12]
 8004162:	6803      	ldr	r3, [r0, #0]
 8004164:	6a1b      	ldr	r3, [r3, #32]
 8004166:	4798      	blx	r3
 8004168:	2837      	cmp	r0, #55	; 0x37
 800416a:	d803      	bhi.n	8004174 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 800416c:	4b3b      	ldr	r3, [pc, #236]	; (800425c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 800416e:	4a38      	ldr	r2, [pc, #224]	; (8004250 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004170:	21a5      	movs	r1, #165	; 0xa5
 8004172:	e7e8      	b.n	8004146 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004174:	f011 fd8c 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004178:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004260 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 800417c:	3004      	adds	r0, #4
 800417e:	f011 fded 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004182:	f8d9 0000 	ldr.w	r0, [r9]
 8004186:	b110      	cbz	r0, 800418e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004188:	6803      	ldr	r3, [r0, #0]
 800418a:	68db      	ldr	r3, [r3, #12]
 800418c:	4798      	blx	r3
    if (*currentTrans)
 800418e:	f8d9 0000 	ldr.w	r0, [r9]
 8004192:	b110      	cbz	r0, 800419a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004194:	6803      	ldr	r3, [r0, #0]
 8004196:	681b      	ldr	r3, [r3, #0]
 8004198:	4798      	blx	r3
    if (*currentScreen)
 800419a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004264 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 800419e:	f8d8 0000 	ldr.w	r0, [r8]
 80041a2:	b110      	cbz	r0, 80041aa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80041a4:	6803      	ldr	r3, [r0, #0]
 80041a6:	695b      	ldr	r3, [r3, #20]
 80041a8:	4798      	blx	r3
    if (*currentPresenter)
 80041aa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041ae:	b110      	cbz	r0, 80041b6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80041b0:	6803      	ldr	r3, [r0, #0]
 80041b2:	685b      	ldr	r3, [r3, #4]
 80041b4:	4798      	blx	r3
    if (*currentScreen)
 80041b6:	f8d8 0000 	ldr.w	r0, [r8]
 80041ba:	b110      	cbz	r0, 80041c2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80041bc:	6803      	ldr	r3, [r0, #0]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	4798      	blx	r3
    if (*currentPresenter)
 80041c2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041c6:	b110      	cbz	r0, 80041ce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80041c8:	6803      	ldr	r3, [r0, #0]
 80041ca:	689b      	ldr	r3, [r3, #8]
 80041cc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80041ce:	68e0      	ldr	r0, [r4, #12]
 80041d0:	2100      	movs	r1, #0
 80041d2:	f7ff fed7 	bl	8003f84 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80041d6:	2114      	movs	r1, #20
 80041d8:	4605      	mov	r5, r0
 80041da:	f7ff fed7 	bl	8003f8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80041de:	68a0      	ldr	r0, [r4, #8]
 80041e0:	6803      	ldr	r3, [r0, #0]
 80041e2:	2100      	movs	r1, #0
 80041e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041e6:	4798      	blx	r3
 80041e8:	4606      	mov	r6, r0
 80041ea:	f003 fffb 	bl	80081e4 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80041ee:	6860      	ldr	r0, [r4, #4]
 80041f0:	6803      	ldr	r3, [r0, #0]
 80041f2:	2100      	movs	r1, #0
 80041f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041f6:	4798      	blx	r3
 80041f8:	4631      	mov	r1, r6
 80041fa:	4604      	mov	r4, r0
 80041fc:	f003 ffcc 	bl	8008198 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004200:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004204:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004208:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800420c:	b1dc      	cbz	r4, 8004246 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 800420e:	1d23      	adds	r3, r4, #4
 8004210:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004214:	6833      	ldr	r3, [r6, #0]
 8004216:	f8c4 a008 	str.w	sl, [r4, #8]
 800421a:	4630      	mov	r0, r6
 800421c:	68db      	ldr	r3, [r3, #12]
 800421e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004220:	4798      	blx	r3
    newPresenter->activate();
 8004222:	6823      	ldr	r3, [r4, #0]
 8004224:	4620      	mov	r0, r4
 8004226:	681b      	ldr	r3, [r3, #0]
 8004228:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800422a:	4629      	mov	r1, r5
 800422c:	4630      	mov	r0, r6
 800422e:	f013 fb5b 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004232:	682b      	ldr	r3, [r5, #0]
 8004234:	4628      	mov	r0, r5
 8004236:	691b      	ldr	r3, [r3, #16]
 8004238:	4798      	blx	r3
    newTransition->invalidate();
 800423a:	682b      	ldr	r3, [r5, #0]
 800423c:	4628      	mov	r0, r5
 800423e:	695b      	ldr	r3, [r3, #20]
}
 8004240:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004244:	4718      	bx	r3
    model->bind(newPresenter);
 8004246:	4623      	mov	r3, r4
 8004248:	e7e2      	b.n	8004210 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 800424a:	bf00      	nop
 800424c:	0802c72c 	.word	0x0802c72c
 8004250:	0802cc8d 	.word	0x0802cc8d
 8004254:	0802c8c8 	.word	0x0802c8c8
 8004258:	0802c90f 	.word	0x0802c90f
 800425c:	0802c9b2 	.word	0x0802c9b2
 8004260:	20013304 	.word	0x20013304
 8004264:	20013300 	.word	0x20013300

08004268 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004268:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800426c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004270:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004272:	68a0      	ldr	r0, [r4, #8]
 8004274:	6803      	ldr	r3, [r0, #0]
 8004276:	6a1b      	ldr	r3, [r3, #32]
 8004278:	4798      	blx	r3
 800427a:	f241 137b 	movw	r3, #4475	; 0x117b
 800427e:	4298      	cmp	r0, r3
 8004280:	d805      	bhi.n	800428e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004282:	4b42      	ldr	r3, [pc, #264]	; (800438c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004284:	4a42      	ldr	r2, [pc, #264]	; (8004390 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004286:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004288:	4842      	ldr	r0, [pc, #264]	; (8004394 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 800428a:	f026 fbc9 	bl	802aa20 <__assert_func>
 800428e:	6860      	ldr	r0, [r4, #4]
 8004290:	6803      	ldr	r3, [r0, #0]
 8004292:	6a1b      	ldr	r3, [r3, #32]
 8004294:	4798      	blx	r3
 8004296:	280f      	cmp	r0, #15
 8004298:	d803      	bhi.n	80042a2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 800429a:	4b3f      	ldr	r3, [pc, #252]	; (8004398 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 800429c:	4a3c      	ldr	r2, [pc, #240]	; (8004390 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800429e:	21a4      	movs	r1, #164	; 0xa4
 80042a0:	e7f2      	b.n	8004288 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80042a2:	68e0      	ldr	r0, [r4, #12]
 80042a4:	6803      	ldr	r3, [r0, #0]
 80042a6:	6a1b      	ldr	r3, [r3, #32]
 80042a8:	4798      	blx	r3
 80042aa:	2837      	cmp	r0, #55	; 0x37
 80042ac:	d803      	bhi.n	80042b6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 80042ae:	4b3b      	ldr	r3, [pc, #236]	; (800439c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 80042b0:	4a37      	ldr	r2, [pc, #220]	; (8004390 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80042b2:	21a5      	movs	r1, #165	; 0xa5
 80042b4:	e7e8      	b.n	8004288 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80042b6:	f011 fceb 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80042ba:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80043a0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 80042be:	3004      	adds	r0, #4
 80042c0:	f011 fd4c 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80042c4:	f8d9 0000 	ldr.w	r0, [r9]
 80042c8:	b110      	cbz	r0, 80042d0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 80042ca:	6803      	ldr	r3, [r0, #0]
 80042cc:	68db      	ldr	r3, [r3, #12]
 80042ce:	4798      	blx	r3
    if (*currentTrans)
 80042d0:	f8d9 0000 	ldr.w	r0, [r9]
 80042d4:	b110      	cbz	r0, 80042dc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 80042d6:	6803      	ldr	r3, [r0, #0]
 80042d8:	681b      	ldr	r3, [r3, #0]
 80042da:	4798      	blx	r3
    if (*currentScreen)
 80042dc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80043a4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 80042e0:	f8d8 0000 	ldr.w	r0, [r8]
 80042e4:	b110      	cbz	r0, 80042ec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80042e6:	6803      	ldr	r3, [r0, #0]
 80042e8:	695b      	ldr	r3, [r3, #20]
 80042ea:	4798      	blx	r3
    if (*currentPresenter)
 80042ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042f0:	b110      	cbz	r0, 80042f8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 80042f2:	6803      	ldr	r3, [r0, #0]
 80042f4:	685b      	ldr	r3, [r3, #4]
 80042f6:	4798      	blx	r3
    if (*currentScreen)
 80042f8:	f8d8 0000 	ldr.w	r0, [r8]
 80042fc:	b110      	cbz	r0, 8004304 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 80042fe:	6803      	ldr	r3, [r0, #0]
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	4798      	blx	r3
    if (*currentPresenter)
 8004304:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004308:	b110      	cbz	r0, 8004310 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800430a:	6803      	ldr	r3, [r0, #0]
 800430c:	689b      	ldr	r3, [r3, #8]
 800430e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004310:	68e0      	ldr	r0, [r4, #12]
 8004312:	2100      	movs	r1, #0
 8004314:	f7ff fe36 	bl	8003f84 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004318:	2114      	movs	r1, #20
 800431a:	4605      	mov	r5, r0
 800431c:	f7ff fe36 	bl	8003f8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004320:	68a0      	ldr	r0, [r4, #8]
 8004322:	6803      	ldr	r3, [r0, #0]
 8004324:	2100      	movs	r1, #0
 8004326:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004328:	4798      	blx	r3
 800432a:	4606      	mov	r6, r0
 800432c:	f003 fefa 	bl	8008124 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004330:	6860      	ldr	r0, [r4, #4]
 8004332:	6803      	ldr	r3, [r0, #0]
 8004334:	2100      	movs	r1, #0
 8004336:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004338:	4798      	blx	r3
 800433a:	4631      	mov	r1, r6
 800433c:	4604      	mov	r4, r0
 800433e:	f003 fecb 	bl	80080d8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004342:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004346:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800434a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800434e:	b1dc      	cbz	r4, 8004388 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004350:	1d23      	adds	r3, r4, #4
 8004352:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004356:	6833      	ldr	r3, [r6, #0]
 8004358:	f8c4 a008 	str.w	sl, [r4, #8]
 800435c:	4630      	mov	r0, r6
 800435e:	68db      	ldr	r3, [r3, #12]
 8004360:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004362:	4798      	blx	r3
    newPresenter->activate();
 8004364:	6823      	ldr	r3, [r4, #0]
 8004366:	4620      	mov	r0, r4
 8004368:	681b      	ldr	r3, [r3, #0]
 800436a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800436c:	4629      	mov	r1, r5
 800436e:	4630      	mov	r0, r6
 8004370:	f013 faba 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004374:	682b      	ldr	r3, [r5, #0]
 8004376:	4628      	mov	r0, r5
 8004378:	691b      	ldr	r3, [r3, #16]
 800437a:	4798      	blx	r3
    newTransition->invalidate();
 800437c:	682b      	ldr	r3, [r5, #0]
 800437e:	4628      	mov	r0, r5
 8004380:	695b      	ldr	r3, [r3, #20]
}
 8004382:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004386:	4718      	bx	r3
    model->bind(newPresenter);
 8004388:	4623      	mov	r3, r4
 800438a:	e7e2      	b.n	8004352 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 800438c:	0802c72c 	.word	0x0802c72c
 8004390:	0802cdab 	.word	0x0802cdab
 8004394:	0802c8c8 	.word	0x0802c8c8
 8004398:	0802c90f 	.word	0x0802c90f
 800439c:	0802c9b2 	.word	0x0802c9b2
 80043a0:	20013304 	.word	0x20013304
 80043a4:	20013300 	.word	0x20013300

080043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 80043a8:	6803      	ldr	r3, [r0, #0]
 80043aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043ac:	4718      	bx	r3
	...

080043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 80043b0:	4b12      	ldr	r3, [pc, #72]	; (80043fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80043b2:	b513      	push	{r0, r1, r4, lr}
          solid()
 80043b4:	6003      	str	r3, [r0, #0]
 80043b6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80043ba:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80043bc:	4b10      	ldr	r3, [pc, #64]	; (8004400 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80043be:	7241      	strb	r1, [r0, #9]
 80043c0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80043c2:	4910      	ldr	r1, [pc, #64]	; (8004404 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80043c4:	4b10      	ldr	r3, [pc, #64]	; (8004408 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80043c6:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80043ca:	f9b3 3000 	ldrsh.w	r3, [r3]
 80043ce:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80043d0:	2200      	movs	r2, #0
 80043d2:	6042      	str	r2, [r0, #4]
 80043d4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80043d6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80043d8:	81c2      	strh	r2, [r0, #14]
          solid()
 80043da:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80043de:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80043e2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80043e6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80043ea:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80043ec:	9100      	str	r1, [sp, #0]
 80043ee:	3010      	adds	r0, #16
 80043f0:	4611      	mov	r1, r2
 80043f2:	f7fe fabe 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80043f6:	4620      	mov	r0, r4
 80043f8:	b002      	add	sp, #8
 80043fa:	bd10      	pop	{r4, pc}
 80043fc:	0802da90 	.word	0x0802da90
 8004400:	0802d998 	.word	0x0802d998
 8004404:	200132b2 	.word	0x200132b2
 8004408:	200132b0 	.word	0x200132b0

0800440c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 800440c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004410:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004414:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004416:	68a0      	ldr	r0, [r4, #8]
 8004418:	6803      	ldr	r3, [r0, #0]
 800441a:	6a1b      	ldr	r3, [r3, #32]
 800441c:	4798      	blx	r3
 800441e:	f241 03af 	movw	r3, #4271	; 0x10af
 8004422:	4298      	cmp	r0, r3
 8004424:	d805      	bhi.n	8004432 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004426:	4b42      	ldr	r3, [pc, #264]	; (8004530 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004428:	4a42      	ldr	r2, [pc, #264]	; (8004534 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800442a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800442c:	4842      	ldr	r0, [pc, #264]	; (8004538 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 800442e:	f026 faf7 	bl	802aa20 <__assert_func>
 8004432:	6860      	ldr	r0, [r4, #4]
 8004434:	6803      	ldr	r3, [r0, #0]
 8004436:	6a1b      	ldr	r3, [r3, #32]
 8004438:	4798      	blx	r3
 800443a:	280f      	cmp	r0, #15
 800443c:	d803      	bhi.n	8004446 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 800443e:	4b3f      	ldr	r3, [pc, #252]	; (800453c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004440:	4a3c      	ldr	r2, [pc, #240]	; (8004534 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004442:	21a4      	movs	r1, #164	; 0xa4
 8004444:	e7f2      	b.n	800442c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004446:	68e0      	ldr	r0, [r4, #12]
 8004448:	6803      	ldr	r3, [r0, #0]
 800444a:	6a1b      	ldr	r3, [r3, #32]
 800444c:	4798      	blx	r3
 800444e:	2837      	cmp	r0, #55	; 0x37
 8004450:	d803      	bhi.n	800445a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004452:	4b3b      	ldr	r3, [pc, #236]	; (8004540 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004454:	4a37      	ldr	r2, [pc, #220]	; (8004534 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004456:	21a5      	movs	r1, #165	; 0xa5
 8004458:	e7e8      	b.n	800442c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800445a:	f011 fc19 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800445e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004544 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004462:	3004      	adds	r0, #4
 8004464:	f011 fc7a 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004468:	f8d9 0000 	ldr.w	r0, [r9]
 800446c:	b110      	cbz	r0, 8004474 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800446e:	6803      	ldr	r3, [r0, #0]
 8004470:	68db      	ldr	r3, [r3, #12]
 8004472:	4798      	blx	r3
    if (*currentTrans)
 8004474:	f8d9 0000 	ldr.w	r0, [r9]
 8004478:	b110      	cbz	r0, 8004480 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800447a:	6803      	ldr	r3, [r0, #0]
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	4798      	blx	r3
    if (*currentScreen)
 8004480:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004548 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004484:	f8d8 0000 	ldr.w	r0, [r8]
 8004488:	b110      	cbz	r0, 8004490 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800448a:	6803      	ldr	r3, [r0, #0]
 800448c:	695b      	ldr	r3, [r3, #20]
 800448e:	4798      	blx	r3
    if (*currentPresenter)
 8004490:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004494:	b110      	cbz	r0, 800449c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004496:	6803      	ldr	r3, [r0, #0]
 8004498:	685b      	ldr	r3, [r3, #4]
 800449a:	4798      	blx	r3
    if (*currentScreen)
 800449c:	f8d8 0000 	ldr.w	r0, [r8]
 80044a0:	b110      	cbz	r0, 80044a8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80044a2:	6803      	ldr	r3, [r0, #0]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	4798      	blx	r3
    if (*currentPresenter)
 80044a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80044ac:	b110      	cbz	r0, 80044b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80044ae:	6803      	ldr	r3, [r0, #0]
 80044b0:	689b      	ldr	r3, [r3, #8]
 80044b2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80044b4:	68e0      	ldr	r0, [r4, #12]
 80044b6:	2100      	movs	r1, #0
 80044b8:	f7ff ff76 	bl	80043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80044bc:	2114      	movs	r1, #20
 80044be:	4605      	mov	r5, r0
 80044c0:	f7ff ff76 	bl	80043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80044c4:	68a0      	ldr	r0, [r4, #8]
 80044c6:	6803      	ldr	r3, [r0, #0]
 80044c8:	2100      	movs	r1, #0
 80044ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044cc:	4798      	blx	r3
 80044ce:	4606      	mov	r6, r0
 80044d0:	f004 f92c 	bl	800872c <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80044d4:	6860      	ldr	r0, [r4, #4]
 80044d6:	6803      	ldr	r3, [r0, #0]
 80044d8:	2100      	movs	r1, #0
 80044da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044dc:	4798      	blx	r3
 80044de:	4631      	mov	r1, r6
 80044e0:	4604      	mov	r4, r0
 80044e2:	f004 f8fd 	bl	80086e0 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 80044e6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80044ea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80044ee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80044f2:	b1dc      	cbz	r4, 800452c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 80044f4:	1d23      	adds	r3, r4, #4
 80044f6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80044fa:	6833      	ldr	r3, [r6, #0]
 80044fc:	f8c4 a008 	str.w	sl, [r4, #8]
 8004500:	4630      	mov	r0, r6
 8004502:	68db      	ldr	r3, [r3, #12]
 8004504:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004506:	4798      	blx	r3
    newPresenter->activate();
 8004508:	6823      	ldr	r3, [r4, #0]
 800450a:	4620      	mov	r0, r4
 800450c:	681b      	ldr	r3, [r3, #0]
 800450e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004510:	4629      	mov	r1, r5
 8004512:	4630      	mov	r0, r6
 8004514:	f013 f9e8 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004518:	682b      	ldr	r3, [r5, #0]
 800451a:	4628      	mov	r0, r5
 800451c:	691b      	ldr	r3, [r3, #16]
 800451e:	4798      	blx	r3
    newTransition->invalidate();
 8004520:	682b      	ldr	r3, [r5, #0]
 8004522:	4628      	mov	r0, r5
 8004524:	695b      	ldr	r3, [r3, #20]
}
 8004526:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800452a:	4718      	bx	r3
    model->bind(newPresenter);
 800452c:	4623      	mov	r3, r4
 800452e:	e7e2      	b.n	80044f6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004530:	0802c72c 	.word	0x0802c72c
 8004534:	0802cec5 	.word	0x0802cec5
 8004538:	0802c8c8 	.word	0x0802c8c8
 800453c:	0802c90f 	.word	0x0802c90f
 8004540:	0802c9b2 	.word	0x0802c9b2
 8004544:	20013304 	.word	0x20013304
 8004548:	20013300 	.word	0x20013300

0800454c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 800454c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004550:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004554:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004556:	68a0      	ldr	r0, [r4, #8]
 8004558:	6803      	ldr	r3, [r0, #0]
 800455a:	6a1b      	ldr	r3, [r3, #32]
 800455c:	4798      	blx	r3
 800455e:	f241 73cb 	movw	r3, #6091	; 0x17cb
 8004562:	4298      	cmp	r0, r3
 8004564:	d805      	bhi.n	8004572 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8004566:	4b42      	ldr	r3, [pc, #264]	; (8004670 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004568:	4a42      	ldr	r2, [pc, #264]	; (8004674 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800456a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800456c:	4842      	ldr	r0, [pc, #264]	; (8004678 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 800456e:	f026 fa57 	bl	802aa20 <__assert_func>
 8004572:	6860      	ldr	r0, [r4, #4]
 8004574:	6803      	ldr	r3, [r0, #0]
 8004576:	6a1b      	ldr	r3, [r3, #32]
 8004578:	4798      	blx	r3
 800457a:	280f      	cmp	r0, #15
 800457c:	d803      	bhi.n	8004586 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 800457e:	4b3f      	ldr	r3, [pc, #252]	; (800467c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004580:	4a3c      	ldr	r2, [pc, #240]	; (8004674 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004582:	21a4      	movs	r1, #164	; 0xa4
 8004584:	e7f2      	b.n	800456c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004586:	68e0      	ldr	r0, [r4, #12]
 8004588:	6803      	ldr	r3, [r0, #0]
 800458a:	6a1b      	ldr	r3, [r3, #32]
 800458c:	4798      	blx	r3
 800458e:	2837      	cmp	r0, #55	; 0x37
 8004590:	d803      	bhi.n	800459a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004592:	4b3b      	ldr	r3, [pc, #236]	; (8004680 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004594:	4a37      	ldr	r2, [pc, #220]	; (8004674 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004596:	21a5      	movs	r1, #165	; 0xa5
 8004598:	e7e8      	b.n	800456c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800459a:	f011 fb79 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800459e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004684 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 80045a2:	3004      	adds	r0, #4
 80045a4:	f011 fbda 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80045a8:	f8d9 0000 	ldr.w	r0, [r9]
 80045ac:	b110      	cbz	r0, 80045b4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80045ae:	6803      	ldr	r3, [r0, #0]
 80045b0:	68db      	ldr	r3, [r3, #12]
 80045b2:	4798      	blx	r3
    if (*currentTrans)
 80045b4:	f8d9 0000 	ldr.w	r0, [r9]
 80045b8:	b110      	cbz	r0, 80045c0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80045ba:	6803      	ldr	r3, [r0, #0]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	4798      	blx	r3
    if (*currentScreen)
 80045c0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004688 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 80045c4:	f8d8 0000 	ldr.w	r0, [r8]
 80045c8:	b110      	cbz	r0, 80045d0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80045ca:	6803      	ldr	r3, [r0, #0]
 80045cc:	695b      	ldr	r3, [r3, #20]
 80045ce:	4798      	blx	r3
    if (*currentPresenter)
 80045d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045d4:	b110      	cbz	r0, 80045dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80045d6:	6803      	ldr	r3, [r0, #0]
 80045d8:	685b      	ldr	r3, [r3, #4]
 80045da:	4798      	blx	r3
    if (*currentScreen)
 80045dc:	f8d8 0000 	ldr.w	r0, [r8]
 80045e0:	b110      	cbz	r0, 80045e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80045e2:	6803      	ldr	r3, [r0, #0]
 80045e4:	681b      	ldr	r3, [r3, #0]
 80045e6:	4798      	blx	r3
    if (*currentPresenter)
 80045e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045ec:	b110      	cbz	r0, 80045f4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80045ee:	6803      	ldr	r3, [r0, #0]
 80045f0:	689b      	ldr	r3, [r3, #8]
 80045f2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045f4:	68e0      	ldr	r0, [r4, #12]
 80045f6:	2100      	movs	r1, #0
 80045f8:	f7ff fed6 	bl	80043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80045fc:	2114      	movs	r1, #20
 80045fe:	4605      	mov	r5, r0
 8004600:	f7ff fed6 	bl	80043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004604:	68a0      	ldr	r0, [r4, #8]
 8004606:	6803      	ldr	r3, [r0, #0]
 8004608:	2100      	movs	r1, #0
 800460a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800460c:	4798      	blx	r3
 800460e:	4606      	mov	r6, r0
 8004610:	f003 fc80 	bl	8007f14 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004614:	6860      	ldr	r0, [r4, #4]
 8004616:	6803      	ldr	r3, [r0, #0]
 8004618:	2100      	movs	r1, #0
 800461a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800461c:	4798      	blx	r3
 800461e:	4631      	mov	r1, r6
 8004620:	4604      	mov	r4, r0
 8004622:	f003 fc51 	bl	8007ec8 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8004626:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800462a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800462e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004632:	b1dc      	cbz	r4, 800466c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8004634:	1d23      	adds	r3, r4, #4
 8004636:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800463a:	6833      	ldr	r3, [r6, #0]
 800463c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004640:	4630      	mov	r0, r6
 8004642:	68db      	ldr	r3, [r3, #12]
 8004644:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004646:	4798      	blx	r3
    newPresenter->activate();
 8004648:	6823      	ldr	r3, [r4, #0]
 800464a:	4620      	mov	r0, r4
 800464c:	681b      	ldr	r3, [r3, #0]
 800464e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004650:	4629      	mov	r1, r5
 8004652:	4630      	mov	r0, r6
 8004654:	f013 f948 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004658:	682b      	ldr	r3, [r5, #0]
 800465a:	4628      	mov	r0, r5
 800465c:	691b      	ldr	r3, [r3, #16]
 800465e:	4798      	blx	r3
    newTransition->invalidate();
 8004660:	682b      	ldr	r3, [r5, #0]
 8004662:	4628      	mov	r0, r5
 8004664:	695b      	ldr	r3, [r3, #20]
}
 8004666:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800466a:	4718      	bx	r3
    model->bind(newPresenter);
 800466c:	4623      	mov	r3, r4
 800466e:	e7e2      	b.n	8004636 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004670:	0802c72c 	.word	0x0802c72c
 8004674:	0802cfe5 	.word	0x0802cfe5
 8004678:	0802c8c8 	.word	0x0802c8c8
 800467c:	0802c90f 	.word	0x0802c90f
 8004680:	0802c9b2 	.word	0x0802c9b2
 8004684:	20013304 	.word	0x20013304
 8004688:	20013300 	.word	0x20013300

0800468c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 800468c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004690:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004694:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004696:	68a0      	ldr	r0, [r4, #8]
 8004698:	6803      	ldr	r3, [r0, #0]
 800469a:	6a1b      	ldr	r3, [r3, #32]
 800469c:	4798      	blx	r3
 800469e:	f241 035b 	movw	r3, #4187	; 0x105b
 80046a2:	4298      	cmp	r0, r3
 80046a4:	d805      	bhi.n	80046b2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 80046a6:	4b42      	ldr	r3, [pc, #264]	; (80047b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 80046a8:	4a42      	ldr	r2, [pc, #264]	; (80047b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80046aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80046ac:	4842      	ldr	r0, [pc, #264]	; (80047b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80046ae:	f026 f9b7 	bl	802aa20 <__assert_func>
 80046b2:	6860      	ldr	r0, [r4, #4]
 80046b4:	6803      	ldr	r3, [r0, #0]
 80046b6:	6a1b      	ldr	r3, [r3, #32]
 80046b8:	4798      	blx	r3
 80046ba:	280f      	cmp	r0, #15
 80046bc:	d803      	bhi.n	80046c6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80046be:	4b3f      	ldr	r3, [pc, #252]	; (80047bc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 80046c0:	4a3c      	ldr	r2, [pc, #240]	; (80047b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80046c2:	21a4      	movs	r1, #164	; 0xa4
 80046c4:	e7f2      	b.n	80046ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80046c6:	68e0      	ldr	r0, [r4, #12]
 80046c8:	6803      	ldr	r3, [r0, #0]
 80046ca:	6a1b      	ldr	r3, [r3, #32]
 80046cc:	4798      	blx	r3
 80046ce:	2837      	cmp	r0, #55	; 0x37
 80046d0:	d803      	bhi.n	80046da <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80046d2:	4b3b      	ldr	r3, [pc, #236]	; (80047c0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80046d4:	4a37      	ldr	r2, [pc, #220]	; (80047b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80046d6:	21a5      	movs	r1, #165	; 0xa5
 80046d8:	e7e8      	b.n	80046ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80046da:	f011 fad9 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80046de:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80047c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80046e2:	3004      	adds	r0, #4
 80046e4:	f011 fb3a 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80046e8:	f8d9 0000 	ldr.w	r0, [r9]
 80046ec:	b110      	cbz	r0, 80046f4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80046ee:	6803      	ldr	r3, [r0, #0]
 80046f0:	68db      	ldr	r3, [r3, #12]
 80046f2:	4798      	blx	r3
    if (*currentTrans)
 80046f4:	f8d9 0000 	ldr.w	r0, [r9]
 80046f8:	b110      	cbz	r0, 8004700 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80046fa:	6803      	ldr	r3, [r0, #0]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	4798      	blx	r3
    if (*currentScreen)
 8004700:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80047c8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8004704:	f8d8 0000 	ldr.w	r0, [r8]
 8004708:	b110      	cbz	r0, 8004710 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800470a:	6803      	ldr	r3, [r0, #0]
 800470c:	695b      	ldr	r3, [r3, #20]
 800470e:	4798      	blx	r3
    if (*currentPresenter)
 8004710:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004714:	b110      	cbz	r0, 800471c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004716:	6803      	ldr	r3, [r0, #0]
 8004718:	685b      	ldr	r3, [r3, #4]
 800471a:	4798      	blx	r3
    if (*currentScreen)
 800471c:	f8d8 0000 	ldr.w	r0, [r8]
 8004720:	b110      	cbz	r0, 8004728 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004722:	6803      	ldr	r3, [r0, #0]
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	4798      	blx	r3
    if (*currentPresenter)
 8004728:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800472c:	b110      	cbz	r0, 8004734 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800472e:	6803      	ldr	r3, [r0, #0]
 8004730:	689b      	ldr	r3, [r3, #8]
 8004732:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004734:	68e0      	ldr	r0, [r4, #12]
 8004736:	2100      	movs	r1, #0
 8004738:	f7ff fe36 	bl	80043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800473c:	2114      	movs	r1, #20
 800473e:	4605      	mov	r5, r0
 8004740:	f7ff fe36 	bl	80043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004744:	68a0      	ldr	r0, [r4, #8]
 8004746:	6803      	ldr	r3, [r0, #0]
 8004748:	2100      	movs	r1, #0
 800474a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800474c:	4798      	blx	r3
 800474e:	4606      	mov	r6, r0
 8004750:	f003 fe44 	bl	80083dc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004754:	6860      	ldr	r0, [r4, #4]
 8004756:	6803      	ldr	r3, [r0, #0]
 8004758:	2100      	movs	r1, #0
 800475a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800475c:	4798      	blx	r3
 800475e:	4631      	mov	r1, r6
 8004760:	4604      	mov	r4, r0
 8004762:	f003 fe15 	bl	8008390 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8004766:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800476a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800476e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004772:	b1dc      	cbz	r4, 80047ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004774:	1d23      	adds	r3, r4, #4
 8004776:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800477a:	6833      	ldr	r3, [r6, #0]
 800477c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004780:	4630      	mov	r0, r6
 8004782:	68db      	ldr	r3, [r3, #12]
 8004784:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004786:	4798      	blx	r3
    newPresenter->activate();
 8004788:	6823      	ldr	r3, [r4, #0]
 800478a:	4620      	mov	r0, r4
 800478c:	681b      	ldr	r3, [r3, #0]
 800478e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004790:	4629      	mov	r1, r5
 8004792:	4630      	mov	r0, r6
 8004794:	f013 f8a8 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004798:	682b      	ldr	r3, [r5, #0]
 800479a:	4628      	mov	r0, r5
 800479c:	691b      	ldr	r3, [r3, #16]
 800479e:	4798      	blx	r3
    newTransition->invalidate();
 80047a0:	682b      	ldr	r3, [r5, #0]
 80047a2:	4628      	mov	r0, r5
 80047a4:	695b      	ldr	r3, [r3, #20]
}
 80047a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047aa:	4718      	bx	r3
    model->bind(newPresenter);
 80047ac:	4623      	mov	r3, r4
 80047ae:	e7e2      	b.n	8004776 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80047b0:	0802c72c 	.word	0x0802c72c
 80047b4:	0802d10b 	.word	0x0802d10b
 80047b8:	0802c8c8 	.word	0x0802c8c8
 80047bc:	0802c90f 	.word	0x0802c90f
 80047c0:	0802c9b2 	.word	0x0802c9b2
 80047c4:	20013304 	.word	0x20013304
 80047c8:	20013300 	.word	0x20013300

080047cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80047cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80047d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047d6:	68a0      	ldr	r0, [r4, #8]
 80047d8:	6803      	ldr	r3, [r0, #0]
 80047da:	6a1b      	ldr	r3, [r3, #32]
 80047dc:	4798      	blx	r3
 80047de:	f241 035b 	movw	r3, #4187	; 0x105b
 80047e2:	4298      	cmp	r0, r3
 80047e4:	d805      	bhi.n	80047f2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80047e6:	4b42      	ldr	r3, [pc, #264]	; (80048f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80047e8:	4a42      	ldr	r2, [pc, #264]	; (80048f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80047ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047ec:	4842      	ldr	r0, [pc, #264]	; (80048f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80047ee:	f026 f917 	bl	802aa20 <__assert_func>
 80047f2:	6860      	ldr	r0, [r4, #4]
 80047f4:	6803      	ldr	r3, [r0, #0]
 80047f6:	6a1b      	ldr	r3, [r3, #32]
 80047f8:	4798      	blx	r3
 80047fa:	280f      	cmp	r0, #15
 80047fc:	d803      	bhi.n	8004806 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80047fe:	4b3f      	ldr	r3, [pc, #252]	; (80048fc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8004800:	4a3c      	ldr	r2, [pc, #240]	; (80048f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004802:	21a4      	movs	r1, #164	; 0xa4
 8004804:	e7f2      	b.n	80047ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004806:	68e0      	ldr	r0, [r4, #12]
 8004808:	6803      	ldr	r3, [r0, #0]
 800480a:	6a1b      	ldr	r3, [r3, #32]
 800480c:	4798      	blx	r3
 800480e:	2837      	cmp	r0, #55	; 0x37
 8004810:	d803      	bhi.n	800481a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8004812:	4b3b      	ldr	r3, [pc, #236]	; (8004900 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8004814:	4a37      	ldr	r2, [pc, #220]	; (80048f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004816:	21a5      	movs	r1, #165	; 0xa5
 8004818:	e7e8      	b.n	80047ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800481a:	f011 fa39 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800481e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004904 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8004822:	3004      	adds	r0, #4
 8004824:	f011 fa9a 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004828:	f8d9 0000 	ldr.w	r0, [r9]
 800482c:	b110      	cbz	r0, 8004834 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800482e:	6803      	ldr	r3, [r0, #0]
 8004830:	68db      	ldr	r3, [r3, #12]
 8004832:	4798      	blx	r3
    if (*currentTrans)
 8004834:	f8d9 0000 	ldr.w	r0, [r9]
 8004838:	b110      	cbz	r0, 8004840 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800483a:	6803      	ldr	r3, [r0, #0]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	4798      	blx	r3
    if (*currentScreen)
 8004840:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004908 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8004844:	f8d8 0000 	ldr.w	r0, [r8]
 8004848:	b110      	cbz	r0, 8004850 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800484a:	6803      	ldr	r3, [r0, #0]
 800484c:	695b      	ldr	r3, [r3, #20]
 800484e:	4798      	blx	r3
    if (*currentPresenter)
 8004850:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004854:	b110      	cbz	r0, 800485c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004856:	6803      	ldr	r3, [r0, #0]
 8004858:	685b      	ldr	r3, [r3, #4]
 800485a:	4798      	blx	r3
    if (*currentScreen)
 800485c:	f8d8 0000 	ldr.w	r0, [r8]
 8004860:	b110      	cbz	r0, 8004868 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004862:	6803      	ldr	r3, [r0, #0]
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	4798      	blx	r3
    if (*currentPresenter)
 8004868:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800486c:	b110      	cbz	r0, 8004874 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800486e:	6803      	ldr	r3, [r0, #0]
 8004870:	689b      	ldr	r3, [r3, #8]
 8004872:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004874:	68e0      	ldr	r0, [r4, #12]
 8004876:	2100      	movs	r1, #0
 8004878:	f7ff fd96 	bl	80043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800487c:	2114      	movs	r1, #20
 800487e:	4605      	mov	r5, r0
 8004880:	f7ff fd96 	bl	80043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004884:	68a0      	ldr	r0, [r4, #8]
 8004886:	6803      	ldr	r3, [r0, #0]
 8004888:	2100      	movs	r1, #0
 800488a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800488c:	4798      	blx	r3
 800488e:	4606      	mov	r6, r0
 8004890:	f003 fd62 	bl	8008358 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004894:	6860      	ldr	r0, [r4, #4]
 8004896:	6803      	ldr	r3, [r0, #0]
 8004898:	2100      	movs	r1, #0
 800489a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800489c:	4798      	blx	r3
 800489e:	4631      	mov	r1, r6
 80048a0:	4604      	mov	r4, r0
 80048a2:	f003 fd33 	bl	800830c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80048a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80048aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048b2:	b1dc      	cbz	r4, 80048ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80048b4:	1d23      	adds	r3, r4, #4
 80048b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048ba:	6833      	ldr	r3, [r6, #0]
 80048bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80048c0:	4630      	mov	r0, r6
 80048c2:	68db      	ldr	r3, [r3, #12]
 80048c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80048c6:	4798      	blx	r3
    newPresenter->activate();
 80048c8:	6823      	ldr	r3, [r4, #0]
 80048ca:	4620      	mov	r0, r4
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048d0:	4629      	mov	r1, r5
 80048d2:	4630      	mov	r0, r6
 80048d4:	f013 f808 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048d8:	682b      	ldr	r3, [r5, #0]
 80048da:	4628      	mov	r0, r5
 80048dc:	691b      	ldr	r3, [r3, #16]
 80048de:	4798      	blx	r3
    newTransition->invalidate();
 80048e0:	682b      	ldr	r3, [r5, #0]
 80048e2:	4628      	mov	r0, r5
 80048e4:	695b      	ldr	r3, [r3, #20]
}
 80048e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80048ea:	4718      	bx	r3
    model->bind(newPresenter);
 80048ec:	4623      	mov	r3, r4
 80048ee:	e7e2      	b.n	80048b6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80048f0:	0802c72c 	.word	0x0802c72c
 80048f4:	0802d24f 	.word	0x0802d24f
 80048f8:	0802c8c8 	.word	0x0802c8c8
 80048fc:	0802c90f 	.word	0x0802c90f
 8004900:	0802c9b2 	.word	0x0802c9b2
 8004904:	20013304 	.word	0x20013304
 8004908:	20013300 	.word	0x20013300

0800490c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 800490c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004910:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004914:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004916:	68a0      	ldr	r0, [r4, #8]
 8004918:	6803      	ldr	r3, [r0, #0]
 800491a:	6a1b      	ldr	r3, [r3, #32]
 800491c:	4798      	blx	r3
 800491e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004922:	d205      	bcs.n	8004930 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8004924:	4b42      	ldr	r3, [pc, #264]	; (8004a30 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8004926:	4a43      	ldr	r2, [pc, #268]	; (8004a34 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004928:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800492a:	4843      	ldr	r0, [pc, #268]	; (8004a38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 800492c:	f026 f878 	bl	802aa20 <__assert_func>
 8004930:	6860      	ldr	r0, [r4, #4]
 8004932:	6803      	ldr	r3, [r0, #0]
 8004934:	6a1b      	ldr	r3, [r3, #32]
 8004936:	4798      	blx	r3
 8004938:	280f      	cmp	r0, #15
 800493a:	d803      	bhi.n	8004944 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 800493c:	4b3f      	ldr	r3, [pc, #252]	; (8004a3c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800493e:	4a3d      	ldr	r2, [pc, #244]	; (8004a34 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004940:	21a4      	movs	r1, #164	; 0xa4
 8004942:	e7f2      	b.n	800492a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004944:	68e0      	ldr	r0, [r4, #12]
 8004946:	6803      	ldr	r3, [r0, #0]
 8004948:	6a1b      	ldr	r3, [r3, #32]
 800494a:	4798      	blx	r3
 800494c:	2837      	cmp	r0, #55	; 0x37
 800494e:	d803      	bhi.n	8004958 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004950:	4b3b      	ldr	r3, [pc, #236]	; (8004a40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8004952:	4a38      	ldr	r2, [pc, #224]	; (8004a34 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004954:	21a5      	movs	r1, #165	; 0xa5
 8004956:	e7e8      	b.n	800492a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004958:	f011 f99a 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800495c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004960:	3004      	adds	r0, #4
 8004962:	f011 f9fb 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004966:	f8d9 0000 	ldr.w	r0, [r9]
 800496a:	b110      	cbz	r0, 8004972 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800496c:	6803      	ldr	r3, [r0, #0]
 800496e:	68db      	ldr	r3, [r3, #12]
 8004970:	4798      	blx	r3
    if (*currentTrans)
 8004972:	f8d9 0000 	ldr.w	r0, [r9]
 8004976:	b110      	cbz	r0, 800497e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004978:	6803      	ldr	r3, [r0, #0]
 800497a:	681b      	ldr	r3, [r3, #0]
 800497c:	4798      	blx	r3
    if (*currentScreen)
 800497e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004a48 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8004982:	f8d8 0000 	ldr.w	r0, [r8]
 8004986:	b110      	cbz	r0, 800498e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004988:	6803      	ldr	r3, [r0, #0]
 800498a:	695b      	ldr	r3, [r3, #20]
 800498c:	4798      	blx	r3
    if (*currentPresenter)
 800498e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004992:	b110      	cbz	r0, 800499a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004994:	6803      	ldr	r3, [r0, #0]
 8004996:	685b      	ldr	r3, [r3, #4]
 8004998:	4798      	blx	r3
    if (*currentScreen)
 800499a:	f8d8 0000 	ldr.w	r0, [r8]
 800499e:	b110      	cbz	r0, 80049a6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80049a0:	6803      	ldr	r3, [r0, #0]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	4798      	blx	r3
    if (*currentPresenter)
 80049a6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049aa:	b110      	cbz	r0, 80049b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80049ac:	6803      	ldr	r3, [r0, #0]
 80049ae:	689b      	ldr	r3, [r3, #8]
 80049b0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80049b2:	68e0      	ldr	r0, [r4, #12]
 80049b4:	2100      	movs	r1, #0
 80049b6:	f7ff fcf7 	bl	80043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80049ba:	2114      	movs	r1, #20
 80049bc:	4605      	mov	r5, r0
 80049be:	f7ff fcf7 	bl	80043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80049c2:	68a0      	ldr	r0, [r4, #8]
 80049c4:	6803      	ldr	r3, [r0, #0]
 80049c6:	2100      	movs	r1, #0
 80049c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049ca:	4798      	blx	r3
 80049cc:	4606      	mov	r6, r0
 80049ce:	f003 fc69 	bl	80082a4 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049d2:	6860      	ldr	r0, [r4, #4]
 80049d4:	6803      	ldr	r3, [r0, #0]
 80049d6:	2100      	movs	r1, #0
 80049d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049da:	4798      	blx	r3
 80049dc:	4631      	mov	r1, r6
 80049de:	4604      	mov	r4, r0
 80049e0:	f003 fc3a 	bl	8008258 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80049e4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80049e8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80049ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80049f0:	b1dc      	cbz	r4, 8004a2a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80049f2:	1d23      	adds	r3, r4, #4
 80049f4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80049f8:	6833      	ldr	r3, [r6, #0]
 80049fa:	f8c4 a008 	str.w	sl, [r4, #8]
 80049fe:	4630      	mov	r0, r6
 8004a00:	68db      	ldr	r3, [r3, #12]
 8004a02:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004a04:	4798      	blx	r3
    newPresenter->activate();
 8004a06:	6823      	ldr	r3, [r4, #0]
 8004a08:	4620      	mov	r0, r4
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a0e:	4629      	mov	r1, r5
 8004a10:	4630      	mov	r0, r6
 8004a12:	f012 ff69 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a16:	682b      	ldr	r3, [r5, #0]
 8004a18:	4628      	mov	r0, r5
 8004a1a:	691b      	ldr	r3, [r3, #16]
 8004a1c:	4798      	blx	r3
    newTransition->invalidate();
 8004a1e:	682b      	ldr	r3, [r5, #0]
 8004a20:	4628      	mov	r0, r5
 8004a22:	695b      	ldr	r3, [r3, #20]
}
 8004a24:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a28:	4718      	bx	r3
    model->bind(newPresenter);
 8004a2a:	4623      	mov	r3, r4
 8004a2c:	e7e2      	b.n	80049f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8004a2e:	bf00      	nop
 8004a30:	0802c72c 	.word	0x0802c72c
 8004a34:	0802d38f 	.word	0x0802d38f
 8004a38:	0802c8c8 	.word	0x0802c8c8
 8004a3c:	0802c90f 	.word	0x0802c90f
 8004a40:	0802c9b2 	.word	0x0802c9b2
 8004a44:	20013304 	.word	0x20013304
 8004a48:	20013300 	.word	0x20013300

08004a4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004a4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a50:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a54:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a56:	68a0      	ldr	r0, [r4, #8]
 8004a58:	6803      	ldr	r3, [r0, #0]
 8004a5a:	6a1b      	ldr	r3, [r3, #32]
 8004a5c:	4798      	blx	r3
 8004a5e:	f241 035b 	movw	r3, #4187	; 0x105b
 8004a62:	4298      	cmp	r0, r3
 8004a64:	d805      	bhi.n	8004a72 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8004a66:	4b42      	ldr	r3, [pc, #264]	; (8004b70 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004a68:	4a42      	ldr	r2, [pc, #264]	; (8004b74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004a6a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a6c:	4842      	ldr	r0, [pc, #264]	; (8004b78 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004a6e:	f025 ffd7 	bl	802aa20 <__assert_func>
 8004a72:	6860      	ldr	r0, [r4, #4]
 8004a74:	6803      	ldr	r3, [r0, #0]
 8004a76:	6a1b      	ldr	r3, [r3, #32]
 8004a78:	4798      	blx	r3
 8004a7a:	280f      	cmp	r0, #15
 8004a7c:	d803      	bhi.n	8004a86 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004a7e:	4b3f      	ldr	r3, [pc, #252]	; (8004b7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004a80:	4a3c      	ldr	r2, [pc, #240]	; (8004b74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004a82:	21a4      	movs	r1, #164	; 0xa4
 8004a84:	e7f2      	b.n	8004a6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a86:	68e0      	ldr	r0, [r4, #12]
 8004a88:	6803      	ldr	r3, [r0, #0]
 8004a8a:	6a1b      	ldr	r3, [r3, #32]
 8004a8c:	4798      	blx	r3
 8004a8e:	2837      	cmp	r0, #55	; 0x37
 8004a90:	d803      	bhi.n	8004a9a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8004a92:	4b3b      	ldr	r3, [pc, #236]	; (8004b80 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8004a94:	4a37      	ldr	r2, [pc, #220]	; (8004b74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004a96:	21a5      	movs	r1, #165	; 0xa5
 8004a98:	e7e8      	b.n	8004a6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004a9a:	f011 f8f9 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a9e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004b84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8004aa2:	3004      	adds	r0, #4
 8004aa4:	f011 f95a 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004aa8:	f8d9 0000 	ldr.w	r0, [r9]
 8004aac:	b110      	cbz	r0, 8004ab4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004aae:	6803      	ldr	r3, [r0, #0]
 8004ab0:	68db      	ldr	r3, [r3, #12]
 8004ab2:	4798      	blx	r3
    if (*currentTrans)
 8004ab4:	f8d9 0000 	ldr.w	r0, [r9]
 8004ab8:	b110      	cbz	r0, 8004ac0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004aba:	6803      	ldr	r3, [r0, #0]
 8004abc:	681b      	ldr	r3, [r3, #0]
 8004abe:	4798      	blx	r3
    if (*currentScreen)
 8004ac0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004b88 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004ac4:	f8d8 0000 	ldr.w	r0, [r8]
 8004ac8:	b110      	cbz	r0, 8004ad0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004aca:	6803      	ldr	r3, [r0, #0]
 8004acc:	695b      	ldr	r3, [r3, #20]
 8004ace:	4798      	blx	r3
    if (*currentPresenter)
 8004ad0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ad4:	b110      	cbz	r0, 8004adc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004ad6:	6803      	ldr	r3, [r0, #0]
 8004ad8:	685b      	ldr	r3, [r3, #4]
 8004ada:	4798      	blx	r3
    if (*currentScreen)
 8004adc:	f8d8 0000 	ldr.w	r0, [r8]
 8004ae0:	b110      	cbz	r0, 8004ae8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004ae2:	6803      	ldr	r3, [r0, #0]
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	4798      	blx	r3
    if (*currentPresenter)
 8004ae8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004aec:	b110      	cbz	r0, 8004af4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004aee:	6803      	ldr	r3, [r0, #0]
 8004af0:	689b      	ldr	r3, [r3, #8]
 8004af2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004af4:	68e0      	ldr	r0, [r4, #12]
 8004af6:	2100      	movs	r1, #0
 8004af8:	f7ff fc56 	bl	80043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004afc:	2114      	movs	r1, #20
 8004afe:	4605      	mov	r5, r0
 8004b00:	f7ff fc56 	bl	80043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b04:	68a0      	ldr	r0, [r4, #8]
 8004b06:	6803      	ldr	r3, [r0, #0]
 8004b08:	2100      	movs	r1, #0
 8004b0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b0c:	4798      	blx	r3
 8004b0e:	4606      	mov	r6, r0
 8004b10:	f003 fda6 	bl	8008660 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b14:	6860      	ldr	r0, [r4, #4]
 8004b16:	6803      	ldr	r3, [r0, #0]
 8004b18:	2100      	movs	r1, #0
 8004b1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b1c:	4798      	blx	r3
 8004b1e:	4631      	mov	r1, r6
 8004b20:	4604      	mov	r4, r0
 8004b22:	f003 fd77 	bl	8008614 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004b26:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b2a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b2e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b32:	b1dc      	cbz	r4, 8004b6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004b34:	1d23      	adds	r3, r4, #4
 8004b36:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b3a:	6833      	ldr	r3, [r6, #0]
 8004b3c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b40:	4630      	mov	r0, r6
 8004b42:	68db      	ldr	r3, [r3, #12]
 8004b44:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b46:	4798      	blx	r3
    newPresenter->activate();
 8004b48:	6823      	ldr	r3, [r4, #0]
 8004b4a:	4620      	mov	r0, r4
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b50:	4629      	mov	r1, r5
 8004b52:	4630      	mov	r0, r6
 8004b54:	f012 fec8 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b58:	682b      	ldr	r3, [r5, #0]
 8004b5a:	4628      	mov	r0, r5
 8004b5c:	691b      	ldr	r3, [r3, #16]
 8004b5e:	4798      	blx	r3
    newTransition->invalidate();
 8004b60:	682b      	ldr	r3, [r5, #0]
 8004b62:	4628      	mov	r0, r5
 8004b64:	695b      	ldr	r3, [r3, #20]
}
 8004b66:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b6a:	4718      	bx	r3
    model->bind(newPresenter);
 8004b6c:	4623      	mov	r3, r4
 8004b6e:	e7e2      	b.n	8004b36 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004b70:	0802c72c 	.word	0x0802c72c
 8004b74:	0802d4bf 	.word	0x0802d4bf
 8004b78:	0802c8c8 	.word	0x0802c8c8
 8004b7c:	0802c90f 	.word	0x0802c90f
 8004b80:	0802c9b2 	.word	0x0802c9b2
 8004b84:	20013304 	.word	0x20013304
 8004b88:	20013300 	.word	0x20013300

08004b8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004b8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b90:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b94:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b96:	68a0      	ldr	r0, [r4, #8]
 8004b98:	6803      	ldr	r3, [r0, #0]
 8004b9a:	6a1b      	ldr	r3, [r3, #32]
 8004b9c:	4798      	blx	r3
 8004b9e:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8004ba2:	4298      	cmp	r0, r3
 8004ba4:	d805      	bhi.n	8004bb2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004ba6:	4b42      	ldr	r3, [pc, #264]	; (8004cb0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004ba8:	4a42      	ldr	r2, [pc, #264]	; (8004cb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004baa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bac:	4842      	ldr	r0, [pc, #264]	; (8004cb8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004bae:	f025 ff37 	bl	802aa20 <__assert_func>
 8004bb2:	6860      	ldr	r0, [r4, #4]
 8004bb4:	6803      	ldr	r3, [r0, #0]
 8004bb6:	6a1b      	ldr	r3, [r3, #32]
 8004bb8:	4798      	blx	r3
 8004bba:	280f      	cmp	r0, #15
 8004bbc:	d803      	bhi.n	8004bc6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004bbe:	4b3f      	ldr	r3, [pc, #252]	; (8004cbc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004bc0:	4a3c      	ldr	r2, [pc, #240]	; (8004cb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004bc2:	21a4      	movs	r1, #164	; 0xa4
 8004bc4:	e7f2      	b.n	8004bac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bc6:	68e0      	ldr	r0, [r4, #12]
 8004bc8:	6803      	ldr	r3, [r0, #0]
 8004bca:	6a1b      	ldr	r3, [r3, #32]
 8004bcc:	4798      	blx	r3
 8004bce:	2837      	cmp	r0, #55	; 0x37
 8004bd0:	d803      	bhi.n	8004bda <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004bd2:	4b3b      	ldr	r3, [pc, #236]	; (8004cc0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004bd4:	4a37      	ldr	r2, [pc, #220]	; (8004cb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004bd6:	21a5      	movs	r1, #165	; 0xa5
 8004bd8:	e7e8      	b.n	8004bac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004bda:	f011 f859 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bde:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004cc4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004be2:	3004      	adds	r0, #4
 8004be4:	f011 f8ba 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004be8:	f8d9 0000 	ldr.w	r0, [r9]
 8004bec:	b110      	cbz	r0, 8004bf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004bee:	6803      	ldr	r3, [r0, #0]
 8004bf0:	68db      	ldr	r3, [r3, #12]
 8004bf2:	4798      	blx	r3
    if (*currentTrans)
 8004bf4:	f8d9 0000 	ldr.w	r0, [r9]
 8004bf8:	b110      	cbz	r0, 8004c00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004bfa:	6803      	ldr	r3, [r0, #0]
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	4798      	blx	r3
    if (*currentScreen)
 8004c00:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004cc8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004c04:	f8d8 0000 	ldr.w	r0, [r8]
 8004c08:	b110      	cbz	r0, 8004c10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c0a:	6803      	ldr	r3, [r0, #0]
 8004c0c:	695b      	ldr	r3, [r3, #20]
 8004c0e:	4798      	blx	r3
    if (*currentPresenter)
 8004c10:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c14:	b110      	cbz	r0, 8004c1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c16:	6803      	ldr	r3, [r0, #0]
 8004c18:	685b      	ldr	r3, [r3, #4]
 8004c1a:	4798      	blx	r3
    if (*currentScreen)
 8004c1c:	f8d8 0000 	ldr.w	r0, [r8]
 8004c20:	b110      	cbz	r0, 8004c28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004c22:	6803      	ldr	r3, [r0, #0]
 8004c24:	681b      	ldr	r3, [r3, #0]
 8004c26:	4798      	blx	r3
    if (*currentPresenter)
 8004c28:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c2c:	b110      	cbz	r0, 8004c34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c2e:	6803      	ldr	r3, [r0, #0]
 8004c30:	689b      	ldr	r3, [r3, #8]
 8004c32:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c34:	68e0      	ldr	r0, [r4, #12]
 8004c36:	2100      	movs	r1, #0
 8004c38:	f7ff fbb6 	bl	80043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004c3c:	2114      	movs	r1, #20
 8004c3e:	4605      	mov	r5, r0
 8004c40:	f7ff fbb6 	bl	80043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c44:	68a0      	ldr	r0, [r4, #8]
 8004c46:	6803      	ldr	r3, [r0, #0]
 8004c48:	2100      	movs	r1, #0
 8004c4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c4c:	4798      	blx	r3
 8004c4e:	4606      	mov	r6, r0
 8004c50:	f003 fc66 	bl	8008520 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c54:	6860      	ldr	r0, [r4, #4]
 8004c56:	6803      	ldr	r3, [r0, #0]
 8004c58:	2100      	movs	r1, #0
 8004c5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c5c:	4798      	blx	r3
 8004c5e:	4631      	mov	r1, r6
 8004c60:	4604      	mov	r4, r0
 8004c62:	f003 fc37 	bl	80084d4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004c66:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c6a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c6e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c72:	b1dc      	cbz	r4, 8004cac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004c74:	1d23      	adds	r3, r4, #4
 8004c76:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c7a:	6833      	ldr	r3, [r6, #0]
 8004c7c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c80:	4630      	mov	r0, r6
 8004c82:	68db      	ldr	r3, [r3, #12]
 8004c84:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c86:	4798      	blx	r3
    newPresenter->activate();
 8004c88:	6823      	ldr	r3, [r4, #0]
 8004c8a:	4620      	mov	r0, r4
 8004c8c:	681b      	ldr	r3, [r3, #0]
 8004c8e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c90:	4629      	mov	r1, r5
 8004c92:	4630      	mov	r0, r6
 8004c94:	f012 fe28 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c98:	682b      	ldr	r3, [r5, #0]
 8004c9a:	4628      	mov	r0, r5
 8004c9c:	691b      	ldr	r3, [r3, #16]
 8004c9e:	4798      	blx	r3
    newTransition->invalidate();
 8004ca0:	682b      	ldr	r3, [r5, #0]
 8004ca2:	4628      	mov	r0, r5
 8004ca4:	695b      	ldr	r3, [r3, #20]
}
 8004ca6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004caa:	4718      	bx	r3
    model->bind(newPresenter);
 8004cac:	4623      	mov	r3, r4
 8004cae:	e7e2      	b.n	8004c76 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004cb0:	0802c72c 	.word	0x0802c72c
 8004cb4:	0802d601 	.word	0x0802d601
 8004cb8:	0802c8c8 	.word	0x0802c8c8
 8004cbc:	0802c90f 	.word	0x0802c90f
 8004cc0:	0802c9b2 	.word	0x0802c9b2
 8004cc4:	20013304 	.word	0x20013304
 8004cc8:	20013300 	.word	0x20013300

08004ccc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004ccc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cd0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004cd4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cd6:	68a0      	ldr	r0, [r4, #8]
 8004cd8:	6803      	ldr	r3, [r0, #0]
 8004cda:	6a1b      	ldr	r3, [r3, #32]
 8004cdc:	4798      	blx	r3
 8004cde:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004ce2:	d205      	bcs.n	8004cf0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004ce4:	4b42      	ldr	r3, [pc, #264]	; (8004df0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004ce6:	4a43      	ldr	r2, [pc, #268]	; (8004df4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004ce8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cea:	4843      	ldr	r0, [pc, #268]	; (8004df8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004cec:	f025 fe98 	bl	802aa20 <__assert_func>
 8004cf0:	6860      	ldr	r0, [r4, #4]
 8004cf2:	6803      	ldr	r3, [r0, #0]
 8004cf4:	6a1b      	ldr	r3, [r3, #32]
 8004cf6:	4798      	blx	r3
 8004cf8:	280f      	cmp	r0, #15
 8004cfa:	d803      	bhi.n	8004d04 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004cfc:	4b3f      	ldr	r3, [pc, #252]	; (8004dfc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004cfe:	4a3d      	ldr	r2, [pc, #244]	; (8004df4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004d00:	21a4      	movs	r1, #164	; 0xa4
 8004d02:	e7f2      	b.n	8004cea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d04:	68e0      	ldr	r0, [r4, #12]
 8004d06:	6803      	ldr	r3, [r0, #0]
 8004d08:	6a1b      	ldr	r3, [r3, #32]
 8004d0a:	4798      	blx	r3
 8004d0c:	2837      	cmp	r0, #55	; 0x37
 8004d0e:	d803      	bhi.n	8004d18 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004d10:	4b3b      	ldr	r3, [pc, #236]	; (8004e00 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004d12:	4a38      	ldr	r2, [pc, #224]	; (8004df4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004d14:	21a5      	movs	r1, #165	; 0xa5
 8004d16:	e7e8      	b.n	8004cea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d18:	f010 ffba 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d1c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e04 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004d20:	3004      	adds	r0, #4
 8004d22:	f011 f81b 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d26:	f8d9 0000 	ldr.w	r0, [r9]
 8004d2a:	b110      	cbz	r0, 8004d32 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004d2c:	6803      	ldr	r3, [r0, #0]
 8004d2e:	68db      	ldr	r3, [r3, #12]
 8004d30:	4798      	blx	r3
    if (*currentTrans)
 8004d32:	f8d9 0000 	ldr.w	r0, [r9]
 8004d36:	b110      	cbz	r0, 8004d3e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d38:	6803      	ldr	r3, [r0, #0]
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	4798      	blx	r3
    if (*currentScreen)
 8004d3e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e08 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004d42:	f8d8 0000 	ldr.w	r0, [r8]
 8004d46:	b110      	cbz	r0, 8004d4e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d48:	6803      	ldr	r3, [r0, #0]
 8004d4a:	695b      	ldr	r3, [r3, #20]
 8004d4c:	4798      	blx	r3
    if (*currentPresenter)
 8004d4e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d52:	b110      	cbz	r0, 8004d5a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d54:	6803      	ldr	r3, [r0, #0]
 8004d56:	685b      	ldr	r3, [r3, #4]
 8004d58:	4798      	blx	r3
    if (*currentScreen)
 8004d5a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d5e:	b110      	cbz	r0, 8004d66 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d60:	6803      	ldr	r3, [r0, #0]
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	4798      	blx	r3
    if (*currentPresenter)
 8004d66:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d6a:	b110      	cbz	r0, 8004d72 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d6c:	6803      	ldr	r3, [r0, #0]
 8004d6e:	689b      	ldr	r3, [r3, #8]
 8004d70:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d72:	68e0      	ldr	r0, [r4, #12]
 8004d74:	2100      	movs	r1, #0
 8004d76:	f7ff fb17 	bl	80043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004d7a:	2114      	movs	r1, #20
 8004d7c:	4605      	mov	r5, r0
 8004d7e:	f7ff fb17 	bl	80043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d82:	68a0      	ldr	r0, [r4, #8]
 8004d84:	6803      	ldr	r3, [r0, #0]
 8004d86:	2100      	movs	r1, #0
 8004d88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d8a:	4798      	blx	r3
 8004d8c:	4606      	mov	r6, r0
 8004d8e:	f003 fb6d 	bl	800846c <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d92:	6860      	ldr	r0, [r4, #4]
 8004d94:	6803      	ldr	r3, [r0, #0]
 8004d96:	2100      	movs	r1, #0
 8004d98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d9a:	4798      	blx	r3
 8004d9c:	4631      	mov	r1, r6
 8004d9e:	4604      	mov	r4, r0
 8004da0:	f003 fb3e 	bl	8008420 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004da4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004da8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004dac:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004db0:	b1dc      	cbz	r4, 8004dea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004db2:	1d23      	adds	r3, r4, #4
 8004db4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004db8:	6833      	ldr	r3, [r6, #0]
 8004dba:	f8c4 a008 	str.w	sl, [r4, #8]
 8004dbe:	4630      	mov	r0, r6
 8004dc0:	68db      	ldr	r3, [r3, #12]
 8004dc2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004dc4:	4798      	blx	r3
    newPresenter->activate();
 8004dc6:	6823      	ldr	r3, [r4, #0]
 8004dc8:	4620      	mov	r0, r4
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dce:	4629      	mov	r1, r5
 8004dd0:	4630      	mov	r0, r6
 8004dd2:	f012 fd89 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004dd6:	682b      	ldr	r3, [r5, #0]
 8004dd8:	4628      	mov	r0, r5
 8004dda:	691b      	ldr	r3, [r3, #16]
 8004ddc:	4798      	blx	r3
    newTransition->invalidate();
 8004dde:	682b      	ldr	r3, [r5, #0]
 8004de0:	4628      	mov	r0, r5
 8004de2:	695b      	ldr	r3, [r3, #20]
}
 8004de4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004de8:	4718      	bx	r3
    model->bind(newPresenter);
 8004dea:	4623      	mov	r3, r4
 8004dec:	e7e2      	b.n	8004db4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004dee:	bf00      	nop
 8004df0:	0802c72c 	.word	0x0802c72c
 8004df4:	0802d743 	.word	0x0802d743
 8004df8:	0802c8c8 	.word	0x0802c8c8
 8004dfc:	0802c90f 	.word	0x0802c90f
 8004e00:	0802c9b2 	.word	0x0802c9b2
 8004e04:	20013304 	.word	0x20013304
 8004e08:	20013300 	.word	0x20013300

08004e0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004e0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e14:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e16:	68a0      	ldr	r0, [r4, #8]
 8004e18:	6803      	ldr	r3, [r0, #0]
 8004e1a:	6a1b      	ldr	r3, [r3, #32]
 8004e1c:	4798      	blx	r3
 8004e1e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004e22:	d205      	bcs.n	8004e30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004e24:	4b42      	ldr	r3, [pc, #264]	; (8004f30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004e26:	4a43      	ldr	r2, [pc, #268]	; (8004f34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004e28:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e2a:	4843      	ldr	r0, [pc, #268]	; (8004f38 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004e2c:	f025 fdf8 	bl	802aa20 <__assert_func>
 8004e30:	6860      	ldr	r0, [r4, #4]
 8004e32:	6803      	ldr	r3, [r0, #0]
 8004e34:	6a1b      	ldr	r3, [r3, #32]
 8004e36:	4798      	blx	r3
 8004e38:	280f      	cmp	r0, #15
 8004e3a:	d803      	bhi.n	8004e44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004e3c:	4b3f      	ldr	r3, [pc, #252]	; (8004f3c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004e3e:	4a3d      	ldr	r2, [pc, #244]	; (8004f34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004e40:	21a4      	movs	r1, #164	; 0xa4
 8004e42:	e7f2      	b.n	8004e2a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e44:	68e0      	ldr	r0, [r4, #12]
 8004e46:	6803      	ldr	r3, [r0, #0]
 8004e48:	6a1b      	ldr	r3, [r3, #32]
 8004e4a:	4798      	blx	r3
 8004e4c:	2837      	cmp	r0, #55	; 0x37
 8004e4e:	d803      	bhi.n	8004e58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004e50:	4b3b      	ldr	r3, [pc, #236]	; (8004f40 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004e52:	4a38      	ldr	r2, [pc, #224]	; (8004f34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004e54:	21a5      	movs	r1, #165	; 0xa5
 8004e56:	e7e8      	b.n	8004e2a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004e58:	f010 ff1a 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e5c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004e60:	3004      	adds	r0, #4
 8004e62:	f010 ff7b 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e66:	f8d9 0000 	ldr.w	r0, [r9]
 8004e6a:	b110      	cbz	r0, 8004e72 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004e6c:	6803      	ldr	r3, [r0, #0]
 8004e6e:	68db      	ldr	r3, [r3, #12]
 8004e70:	4798      	blx	r3
    if (*currentTrans)
 8004e72:	f8d9 0000 	ldr.w	r0, [r9]
 8004e76:	b110      	cbz	r0, 8004e7e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004e78:	6803      	ldr	r3, [r0, #0]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	4798      	blx	r3
    if (*currentScreen)
 8004e7e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004f48 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004e82:	f8d8 0000 	ldr.w	r0, [r8]
 8004e86:	b110      	cbz	r0, 8004e8e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004e88:	6803      	ldr	r3, [r0, #0]
 8004e8a:	695b      	ldr	r3, [r3, #20]
 8004e8c:	4798      	blx	r3
    if (*currentPresenter)
 8004e8e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e92:	b110      	cbz	r0, 8004e9a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004e94:	6803      	ldr	r3, [r0, #0]
 8004e96:	685b      	ldr	r3, [r3, #4]
 8004e98:	4798      	blx	r3
    if (*currentScreen)
 8004e9a:	f8d8 0000 	ldr.w	r0, [r8]
 8004e9e:	b110      	cbz	r0, 8004ea6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004ea0:	6803      	ldr	r3, [r0, #0]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	4798      	blx	r3
    if (*currentPresenter)
 8004ea6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004eaa:	b110      	cbz	r0, 8004eb2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004eac:	6803      	ldr	r3, [r0, #0]
 8004eae:	689b      	ldr	r3, [r3, #8]
 8004eb0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004eb2:	68e0      	ldr	r0, [r4, #12]
 8004eb4:	2100      	movs	r1, #0
 8004eb6:	f7ff fa77 	bl	80043a8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004eba:	2114      	movs	r1, #20
 8004ebc:	4605      	mov	r5, r0
 8004ebe:	f7ff fa77 	bl	80043b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ec2:	68a0      	ldr	r0, [r4, #8]
 8004ec4:	6803      	ldr	r3, [r0, #0]
 8004ec6:	2100      	movs	r1, #0
 8004ec8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004eca:	4798      	blx	r3
 8004ecc:	4606      	mov	r6, r0
 8004ece:	f003 f989 	bl	80081e4 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ed2:	6860      	ldr	r0, [r4, #4]
 8004ed4:	6803      	ldr	r3, [r0, #0]
 8004ed6:	2100      	movs	r1, #0
 8004ed8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004eda:	4798      	blx	r3
 8004edc:	4631      	mov	r1, r6
 8004ede:	4604      	mov	r4, r0
 8004ee0:	f003 f95a 	bl	8008198 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004ee4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004ee8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004eec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ef0:	b1dc      	cbz	r4, 8004f2a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004ef2:	1d23      	adds	r3, r4, #4
 8004ef4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ef8:	6833      	ldr	r3, [r6, #0]
 8004efa:	f8c4 a008 	str.w	sl, [r4, #8]
 8004efe:	4630      	mov	r0, r6
 8004f00:	68db      	ldr	r3, [r3, #12]
 8004f02:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f04:	4798      	blx	r3
    newPresenter->activate();
 8004f06:	6823      	ldr	r3, [r4, #0]
 8004f08:	4620      	mov	r0, r4
 8004f0a:	681b      	ldr	r3, [r3, #0]
 8004f0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f0e:	4629      	mov	r1, r5
 8004f10:	4630      	mov	r0, r6
 8004f12:	f012 fce9 	bl	80178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f16:	682b      	ldr	r3, [r5, #0]
 8004f18:	4628      	mov	r0, r5
 8004f1a:	691b      	ldr	r3, [r3, #16]
 8004f1c:	4798      	blx	r3
    newTransition->invalidate();
 8004f1e:	682b      	ldr	r3, [r5, #0]
 8004f20:	4628      	mov	r0, r5
 8004f22:	695b      	ldr	r3, [r3, #20]
}
 8004f24:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f28:	4718      	bx	r3
    model->bind(newPresenter);
 8004f2a:	4623      	mov	r3, r4
 8004f2c:	e7e2      	b.n	8004ef4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004f2e:	bf00      	nop
 8004f30:	0802c72c 	.word	0x0802c72c
 8004f34:	0802d86f 	.word	0x0802d86f
 8004f38:	0802c8c8 	.word	0x0802c8c8
 8004f3c:	0802c90f 	.word	0x0802c90f
 8004f40:	0802c9b2 	.word	0x0802c9b2
 8004f44:	20013304 	.word	0x20013304
 8004f48:	20013300 	.word	0x20013300

08004f4c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004f4c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004f4e:	4770      	bx	lr

08004f50 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004f50:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004f52:	4770      	bx	lr

08004f54 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004f54:	4770      	bx	lr

08004f56 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004f56:	888b      	ldrh	r3, [r1, #4]
 8004f58:	69c0      	ldr	r0, [r0, #28]
 8004f5a:	680a      	ldr	r2, [r1, #0]
 8004f5c:	0adb      	lsrs	r3, r3, #11
 8004f5e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004f62:	4410      	add	r0, r2
 8004f64:	4770      	bx	lr

08004f66 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004f66:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004f68:	b1c2      	cbz	r2, 8004f9c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004f6a:	7b13      	ldrb	r3, [r2, #12]
 8004f6c:	b1b3      	cbz	r3, 8004f9c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004f6e:	7b54      	ldrb	r4, [r2, #13]
 8004f70:	7ad2      	ldrb	r2, [r2, #11]
 8004f72:	0224      	lsls	r4, r4, #8
 8004f74:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f78:	4314      	orrs	r4, r2
 8004f7a:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f7c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f7e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004f82:	8813      	ldrh	r3, [r2, #0]
 8004f84:	428b      	cmp	r3, r1
 8004f86:	d102      	bne.n	8004f8e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004f88:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004f8c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004f8e:	d805      	bhi.n	8004f9c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f90:	3801      	subs	r0, #1
 8004f92:	b280      	uxth	r0, r0
 8004f94:	3204      	adds	r2, #4
 8004f96:	2800      	cmp	r0, #0
 8004f98:	d1f3      	bne.n	8004f82 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004f9a:	e7f7      	b.n	8004f8c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004f9c:	2000      	movs	r0, #0
 8004f9e:	e7f5      	b.n	8004f8c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004fa0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004fa0:	b510      	push	{r4, lr}
 8004fa2:	212c      	movs	r1, #44	; 0x2c
 8004fa4:	4604      	mov	r4, r0
 8004fa6:	f024 ff28 	bl	8029dfa <_ZdlPvj>
 8004faa:	4620      	mov	r0, r4
 8004fac:	bd10      	pop	{r4, pc}
	...

08004fb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004fb0:	b530      	push	{r4, r5, lr}
 8004fb2:	b08b      	sub	sp, #44	; 0x2c
 8004fb4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004fb6:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8004fba:	9508      	str	r5, [sp, #32]
 8004fbc:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8004fc0:	9507      	str	r5, [sp, #28]
 8004fc2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8004fc6:	9506      	str	r5, [sp, #24]
 8004fc8:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8004fcc:	9505      	str	r5, [sp, #20]
 8004fce:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8004fd2:	9504      	str	r5, [sp, #16]
 8004fd4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8004fd8:	9503      	str	r5, [sp, #12]
 8004fda:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8004fde:	9502      	str	r5, [sp, #8]
 8004fe0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8004fe4:	9501      	str	r5, [sp, #4]
 8004fe6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8004fea:	9500      	str	r5, [sp, #0]
 8004fec:	f011 ffe6 	bl	8016fbc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004ff0:	4b06      	ldr	r3, [pc, #24]	; (800500c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8004ff2:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8004ff4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004ff6:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8004ff8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004ffa:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8004ffc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004ffe:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005000:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005002:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005004:	4620      	mov	r0, r4
 8005006:	b00b      	add	sp, #44	; 0x2c
 8005008:	bd30      	pop	{r4, r5, pc}
 800500a:	bf00      	nop
 800500c:	0802dad8 	.word	0x0802dad8

08005010 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005010:	4770      	bx	lr

08005012 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005012:	4770      	bx	lr

08005014 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005014:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005016:	68c2      	ldr	r2, [r0, #12]
 8005018:	6844      	ldr	r4, [r0, #4]
 800501a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800501c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800501e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005022:	07d2      	lsls	r2, r2, #31
 8005024:	bf48      	it	mi
 8005026:	5962      	ldrmi	r2, [r4, r5]
 8005028:	689b      	ldr	r3, [r3, #8]
    }
 800502a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800502c:	bf48      	it	mi
 800502e:	58d3      	ldrmi	r3, [r2, r3]
 8005030:	4718      	bx	r3

08005032 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005032:	6843      	ldr	r3, [r0, #4]
 8005034:	b12b      	cbz	r3, 8005042 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005036:	6883      	ldr	r3, [r0, #8]
 8005038:	b92b      	cbnz	r3, 8005046 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800503a:	68c0      	ldr	r0, [r0, #12]
 800503c:	f000 0001 	and.w	r0, r0, #1
 8005040:	4770      	bx	lr
 8005042:	4618      	mov	r0, r3
 8005044:	4770      	bx	lr
 8005046:	2001      	movs	r0, #1
    }
 8005048:	4770      	bx	lr

0800504a <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800504a:	b510      	push	{r4, lr}
 800504c:	2110      	movs	r1, #16
 800504e:	4604      	mov	r4, r0
 8005050:	f024 fed3 	bl	8029dfa <_ZdlPvj>
 8005054:	4620      	mov	r0, r4
 8005056:	bd10      	pop	{r4, pc}

08005058 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005058:	b510      	push	{r4, lr}
 800505a:	4b03      	ldr	r3, [pc, #12]	; (8005068 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 800505c:	6003      	str	r3, [r0, #0]
 800505e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005060:	f00f f914 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005064:	4620      	mov	r0, r4
 8005066:	bd10      	pop	{r4, pc}
 8005068:	0802db50 	.word	0x0802db50

0800506c <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 800506c:	b507      	push	{r0, r1, r2, lr}
 800506e:	4b07      	ldr	r3, [pc, #28]	; (800508c <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005070:	6003      	str	r3, [r0, #0]
 8005072:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005074:	f00f f90a 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005078:	9801      	ldr	r0, [sp, #4]
 800507a:	f241 117c 	movw	r1, #4476	; 0x117c
 800507e:	f024 febc 	bl	8029dfa <_ZdlPvj>
 8005082:	9801      	ldr	r0, [sp, #4]
 8005084:	b003      	add	sp, #12
 8005086:	f85d fb04 	ldr.w	pc, [sp], #4
 800508a:	bf00      	nop
 800508c:	0802db50 	.word	0x0802db50

08005090 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005090:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005092:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005096:	4299      	cmp	r1, r3
{
 8005098:	4604      	mov	r4, r0
 800509a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 800509c:	d103      	bne.n	80050a6 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800509e:	f010 fdf7 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80050a2:	f7fe feaf 	bl	8003e04 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80050a6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80050aa:	429d      	cmp	r5, r3
 80050ac:	d103      	bne.n	80050b6 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80050ae:	f010 fdef 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 80050b2:	f7fe ff37 	bl	8003f24 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80050b6:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80050ba:	429d      	cmp	r5, r3
 80050bc:	d103      	bne.n	80050c6 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80050be:	f010 fde7 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80050c2:	f7fe ff3f 	bl	8003f44 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80050c6:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80050ca:	42a5      	cmp	r5, r4
 80050cc:	d10a      	bne.n	80050e4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80050ce:	4806      	ldr	r0, [pc, #24]	; (80050e8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80050d0:	2200      	movs	r2, #0
 80050d2:	2120      	movs	r1, #32
 80050d4:	f004 fa20 	bl	8009518 <HAL_GPIO_WritePin>
 80050d8:	f010 fdda 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80050dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80050e0:	f7fe bf40 	b.w	8003f64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80050e4:	bd38      	pop	{r3, r4, r5, pc}
 80050e6:	bf00      	nop
 80050e8:	40021000 	.word	0x40021000

080050ec <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80050ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050f0:	ed2d 8b06 	vpush	{d8-d10}
 80050f4:	4604      	mov	r4, r0
 80050f6:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80050f8:	46a3      	mov	fp, r4
        : presenter(0)
 80050fa:	2500      	movs	r5, #0
 80050fc:	f012 fa48 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 8005100:	4b6a      	ldr	r3, [pc, #424]	; (80052ac <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005102:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005104:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005108:	2226      	movs	r2, #38	; 0x26
 800510a:	4629      	mov	r1, r5
 800510c:	4658      	mov	r0, fp
 800510e:	f025 fe8c 	bl	802ae2a <memset>
 8005112:	4658      	mov	r0, fp
 8005114:	f7fd fc52 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8005118:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800511c:	26ff      	movs	r6, #255	; 0xff
 800511e:	4b64      	ldr	r3, [pc, #400]	; (80052b0 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005120:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005122:	2226      	movs	r2, #38	; 0x26
 8005124:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005128:	4629      	mov	r1, r5
 800512a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800512e:	4650      	mov	r0, sl
        : color(col)
 8005130:	66a5      	str	r5, [r4, #104]	; 0x68
 8005132:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005136:	f025 fe78 	bl	802ae2a <memset>
 800513a:	4650      	mov	r0, sl
 800513c:	f7fd fc3e 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8005140:	4b5c      	ldr	r3, [pc, #368]	; (80052b4 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005142:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005144:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005148:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800514c:	a90c      	add	r1, sp, #48	; 0x30
 800514e:	4650      	mov	r0, sl
 8005150:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005154:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005158:	f00e f89b 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800515c:	4648      	mov	r0, r9
 800515e:	f7fd fc83 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005162:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005166:	4b54      	ldr	r3, [pc, #336]	; (80052b8 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005168:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800516c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005170:	4638      	mov	r0, r7
 8005172:	f00c fd81 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 8005176:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800517a:	4618      	mov	r0, r3
 800517c:	9303      	str	r3, [sp, #12]
 800517e:	f7fd fa19 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005182:	4b4e      	ldr	r3, [pc, #312]	; (80052bc <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005184:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005188:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 800518c:	3324      	adds	r3, #36	; 0x24
 800518e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005192:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005196:	4640      	mov	r0, r8
 8005198:	f7fd fc66 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 800519c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80051a0:	4618      	mov	r0, r3
 80051a2:	ee08 3a10 	vmov	s16, r3
 80051a6:	f7fd fc5f 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80051aa:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80051ae:	4618      	mov	r0, r3
 80051b0:	ee08 3a90 	vmov	s17, r3
 80051b4:	f7fd fc58 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80051b8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80051bc:	4618      	mov	r0, r3
 80051be:	ee09 3a10 	vmov	s18, r3
 80051c2:	f00e f99d 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051c6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80051ca:	4618      	mov	r0, r3
 80051cc:	ee09 3a90 	vmov	s19, r3
 80051d0:	f00e f996 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051d4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80051d8:	4618      	mov	r0, r3
 80051da:	ee0a 3a10 	vmov	s20, r3
 80051de:	f00e f98f 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051e2:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80051e6:	4618      	mov	r0, r3
 80051e8:	ee0a 3a90 	vmov	s21, r3
 80051ec:	f00e f82a 	bl	8013244 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80051f0:	4a33      	ldr	r2, [pc, #204]	; (80052c0 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80051f2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80051f6:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80051fa:	4a32      	ldr	r2, [pc, #200]	; (80052c4 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80051fc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005200:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005204:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005208:	f00f f836 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800520c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005210:	462a      	mov	r2, r5
 8005212:	4658      	mov	r0, fp
 8005214:	9300      	str	r3, [sp, #0]
 8005216:	4629      	mov	r1, r5
 8005218:	23f0      	movs	r3, #240	; 0xf0
 800521a:	f7fd fbaa 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 800521e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005220:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005224:	66a3      	str	r3, [r4, #104]	; 0x68
 8005226:	4659      	mov	r1, fp
 8005228:	4630      	mov	r0, r6
 800522a:	f00a fc59 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800522e:	462a      	mov	r2, r5
 8005230:	4650      	mov	r0, sl
 8005232:	4629      	mov	r1, r5
 8005234:	f7fd fb90 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005238:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800523a:	4650      	mov	r0, sl
 800523c:	a90c      	add	r1, sp, #48	; 0x30
 800523e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005242:	f00e f826 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005246:	4651      	mov	r1, sl
 8005248:	4630      	mov	r0, r6
 800524a:	f00a fc49 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 800524e:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005252:	2156      	movs	r1, #86	; 0x56
 8005254:	4648      	mov	r0, r9
 8005256:	f7fd fb7f 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 800525a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800525e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005262:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005266:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800526a:	4650      	mov	r0, sl
 800526c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005270:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005274:	4649      	mov	r1, r9
 8005276:	4798      	blx	r3
 8005278:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800527c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005280:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005284:	4b10      	ldr	r3, [pc, #64]	; (80052c8 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005286:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005288:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 800528c:	b92b      	cbnz	r3, 800529a <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 800528e:	4b0f      	ldr	r3, [pc, #60]	; (80052cc <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005290:	4a0f      	ldr	r2, [pc, #60]	; (80052d0 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005292:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005294:	480f      	ldr	r0, [pc, #60]	; (80052d4 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005296:	f025 fbc3 	bl	802aa20 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800529a:	4b0f      	ldr	r3, [pc, #60]	; (80052d8 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800529c:	881b      	ldrh	r3, [r3, #0]
 800529e:	2b30      	cmp	r3, #48	; 0x30
 80052a0:	d81e      	bhi.n	80052e0 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 80052a2:	4b0e      	ldr	r3, [pc, #56]	; (80052dc <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80052a4:	4a0a      	ldr	r2, [pc, #40]	; (80052d0 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80052a6:	2161      	movs	r1, #97	; 0x61
 80052a8:	e7f4      	b.n	8005294 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 80052aa:	bf00      	nop
 80052ac:	0802db50 	.word	0x0802db50
 80052b0:	0802eb04 	.word	0x0802eb04
 80052b4:	0802ed50 	.word	0x0802ed50
 80052b8:	0802c650 	.word	0x0802c650
 80052bc:	0802e838 	.word	0x0802e838
 80052c0:	0802db38 	.word	0x0802db38
 80052c4:	08005091 	.word	0x08005091
 80052c8:	20013314 	.word	0x20013314
 80052cc:	0802c400 	.word	0x0802c400
 80052d0:	0802c505 	.word	0x0802c505
 80052d4:	0802c47d 	.word	0x0802c47d
 80052d8:	20013318 	.word	0x20013318
 80052dc:	0802c4c4 	.word	0x0802c4c4
        return texts->getText(typedTextId);
 80052e0:	4ba5      	ldr	r3, [pc, #660]	; (8005578 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 80052e2:	2130      	movs	r1, #48	; 0x30
 80052e4:	6818      	ldr	r0, [r3, #0]
 80052e6:	f002 fdb9 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 80052ea:	4aa4      	ldr	r2, [pc, #656]	; (800557c <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80052ec:	4603      	mov	r3, r0
 80052ee:	2104      	movs	r1, #4
 80052f0:	4650      	mov	r0, sl
 80052f2:	f013 fe7b 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80052f6:	4648      	mov	r0, r9
        wc1 = value;
 80052f8:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80052fc:	f00d f9f8 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005300:	4b9f      	ldr	r3, [pc, #636]	; (8005580 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005302:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005304:	a90c      	add	r1, sp, #48	; 0x30
 8005306:	2331      	movs	r3, #49	; 0x31
 8005308:	4648      	mov	r0, r9
 800530a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800530e:	f00d fa0f 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005312:	4649      	mov	r1, r9
 8005314:	4630      	mov	r0, r6
 8005316:	f00a fbe3 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800531a:	230a      	movs	r3, #10
 800531c:	9300      	str	r3, [sp, #0]
 800531e:	2232      	movs	r2, #50	; 0x32
 8005320:	23f0      	movs	r3, #240	; 0xf0
 8005322:	4629      	mov	r1, r5
 8005324:	4638      	mov	r0, r7
 8005326:	f7fd fb24 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 800532a:	9b03      	ldr	r3, [sp, #12]
 800532c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005330:	22a0      	movs	r2, #160	; 0xa0
 8005332:	4611      	mov	r1, r2
 8005334:	4638      	mov	r0, r7
 8005336:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800533a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800533e:	f00c fdb1 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005342:	22a0      	movs	r2, #160	; 0xa0
 8005344:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005348:	4638      	mov	r0, r7
 800534a:	f00c fdb6 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800534e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005352:	2b20      	cmp	r3, #32
 8005354:	d005      	beq.n	8005362 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005356:	2320      	movs	r3, #32
 8005358:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 800535c:	4638      	mov	r0, r7
 800535e:	f00c fcab 	bl	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005362:	4638      	mov	r0, r7
 8005364:	2101      	movs	r1, #1
 8005366:	f00c fdb3 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800536a:	4639      	mov	r1, r7
 800536c:	4630      	mov	r0, r6
 800536e:	ad04      	add	r5, sp, #16
        color = newColor;
 8005370:	f04f 37ff 	mov.w	r7, #4294967295
 8005374:	f00a fbb4 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005378:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 800537c:	2223      	movs	r2, #35	; 0x23
 800537e:	4640      	mov	r0, r8
 8005380:	2145      	movs	r1, #69	; 0x45
 8005382:	f7fd fae9 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005386:	4641      	mov	r1, r8
 8005388:	4628      	mov	r0, r5
        color = newColor;
 800538a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800538e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005392:	f00c ff33 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005396:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 800539a:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800539e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80053a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80053a6:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005580 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 80053aa:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80053ae:	234b      	movs	r3, #75	; 0x4b
 80053b0:	4649      	mov	r1, r9
 80053b2:	4640      	mov	r0, r8
 80053b4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053b8:	f00d f9ba 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053bc:	4641      	mov	r1, r8
 80053be:	4630      	mov	r0, r6
 80053c0:	f00a fb8e 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80053c4:	ee18 0a10 	vmov	r0, s16
 80053c8:	220c      	movs	r2, #12
 80053ca:	2136      	movs	r1, #54	; 0x36
 80053cc:	f7fd fac4 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80053d0:	ee18 1a10 	vmov	r1, s16
 80053d4:	4628      	mov	r0, r5
        color = newColor;
 80053d6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80053da:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80053de:	f00c ff0d 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80053e2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053e6:	ee18 3a10 	vmov	r3, s16
 80053ea:	333c      	adds	r3, #60	; 0x3c
 80053ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80053f0:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80053f2:	ee18 0a10 	vmov	r0, s16
 80053f6:	4649      	mov	r1, r9
 80053f8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053fc:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005400:	f00d f996 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005404:	ee18 1a10 	vmov	r1, s16
 8005408:	4630      	mov	r0, r6
 800540a:	f00a fb69 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 800540e:	ee18 0a90 	vmov	r0, s17
 8005412:	223c      	movs	r2, #60	; 0x3c
 8005414:	2158      	movs	r1, #88	; 0x58
 8005416:	f7fd fa9f 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 800541a:	ee18 1a90 	vmov	r1, s17
 800541e:	4628      	mov	r0, r5
        color = newColor;
 8005420:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005424:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005428:	f00c fee8 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800542c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005430:	ee18 3a90 	vmov	r3, s17
 8005434:	333c      	adds	r3, #60	; 0x3c
 8005436:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800543a:	2320      	movs	r3, #32
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 800543c:	ee18 0a90 	vmov	r0, s17
 8005440:	4649      	mov	r1, r9
 8005442:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005446:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800544a:	f00d f971 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800544e:	ee18 1a90 	vmov	r1, s17
 8005452:	4630      	mov	r0, r6
 8005454:	f00a fb44 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005458:	ee19 0a10 	vmov	r0, s18
 800545c:	22f0      	movs	r2, #240	; 0xf0
 800545e:	2121      	movs	r1, #33	; 0x21
 8005460:	f7fd fa7a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005464:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005468:	464a      	mov	r2, r9
 800546a:	f04f 0802 	mov.w	r8, #2
 800546e:	a90b      	add	r1, sp, #44	; 0x2c
 8005470:	ee19 0a10 	vmov	r0, s18
 8005474:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005478:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 800547c:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005480:	f00d fd11 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005484:	234d      	movs	r3, #77	; 0x4d
 8005486:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800548a:	350c      	adds	r5, #12
        updateTextPosition();
 800548c:	ee19 0a10 	vmov	r0, s18
 8005490:	f7fd faa6 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005494:	ee19 1a10 	vmov	r1, s18
 8005498:	4630      	mov	r0, r6
        colorPressed = col;
 800549a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800549e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80054a2:	f00a fb1d 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80054a6:	ee19 0a90 	vmov	r0, s19
 80054aa:	22aa      	movs	r2, #170	; 0xaa
 80054ac:	2121      	movs	r1, #33	; 0x21
 80054ae:	f7fd fa53 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054b2:	464a      	mov	r2, r9
 80054b4:	a90b      	add	r1, sp, #44	; 0x2c
 80054b6:	ee19 0a90 	vmov	r0, s19
 80054ba:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80054be:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80054c2:	f00d fcf0 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80054c6:	234e      	movs	r3, #78	; 0x4e
 80054c8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80054cc:	ee19 0a90 	vmov	r0, s19
 80054d0:	f7fd fa86 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80054d4:	ee19 1a90 	vmov	r1, s19
 80054d8:	4630      	mov	r0, r6
        colorPressed = col;
 80054da:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80054de:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80054e2:	f00a fafd 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80054e6:	ee1a 0a10 	vmov	r0, s20
 80054ea:	2264      	movs	r2, #100	; 0x64
 80054ec:	2121      	movs	r1, #33	; 0x21
 80054ee:	f7fd fa33 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054f2:	464a      	mov	r2, r9
 80054f4:	a90b      	add	r1, sp, #44	; 0x2c
 80054f6:	ee1a 0a10 	vmov	r0, s20
 80054fa:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80054fe:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005502:	f00d fcd0 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005506:	234f      	movs	r3, #79	; 0x4f
 8005508:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 800550c:	ee1a 0a10 	vmov	r0, s20
 8005510:	f7fd fa66 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005514:	ee1a 1a10 	vmov	r1, s20
 8005518:	4630      	mov	r0, r6
        colorPressed = col;
 800551a:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800551e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005522:	f00a fadd 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8005526:	ee1a 0a90 	vmov	r0, s21
 800552a:	2205      	movs	r2, #5
 800552c:	21c6      	movs	r1, #198	; 0xc6
 800552e:	f7fd fa13 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005532:	2301      	movs	r3, #1
 8005534:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005538:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 800553a:	ee1a 0a90 	vmov	r0, s21
 800553e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005542:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005546:	aa0a      	add	r2, sp, #40	; 0x28
 8005548:	ab0b      	add	r3, sp, #44	; 0x2c
 800554a:	a909      	add	r1, sp, #36	; 0x24
 800554c:	f8cd 9000 	str.w	r9, [sp]
 8005550:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005554:	f00d fde1 	bl	801311a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005558:	4630      	mov	r0, r6
 800555a:	ee1a 1a90 	vmov	r1, s21
 800555e:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8005562:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005566:	f00a fabb 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800556a:	4620      	mov	r0, r4
 800556c:	b00f      	add	sp, #60	; 0x3c
 800556e:	ecbd 8b06 	vpop	{d8-d10}
 8005572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005576:	bf00      	nop
 8005578:	20013320 	.word	0x20013320
 800557c:	0802c53d 	.word	0x0802c53d
 8005580:	0802c5b0 	.word	0x0802c5b0

08005584 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005584:	4770      	bx	lr

08005586 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005586:	4770      	bx	lr

08005588 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005588:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800558a:	68c2      	ldr	r2, [r0, #12]
 800558c:	6844      	ldr	r4, [r0, #4]
 800558e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005590:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005592:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005596:	07d2      	lsls	r2, r2, #31
 8005598:	bf48      	it	mi
 800559a:	5962      	ldrmi	r2, [r4, r5]
 800559c:	689b      	ldr	r3, [r3, #8]
    }
 800559e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80055a0:	bf48      	it	mi
 80055a2:	58d3      	ldrmi	r3, [r2, r3]
 80055a4:	4718      	bx	r3

080055a6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80055a6:	6843      	ldr	r3, [r0, #4]
 80055a8:	b12b      	cbz	r3, 80055b6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80055aa:	6883      	ldr	r3, [r0, #8]
 80055ac:	b92b      	cbnz	r3, 80055ba <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80055ae:	68c0      	ldr	r0, [r0, #12]
 80055b0:	f000 0001 	and.w	r0, r0, #1
 80055b4:	4770      	bx	lr
 80055b6:	4618      	mov	r0, r3
 80055b8:	4770      	bx	lr
 80055ba:	2001      	movs	r0, #1
    }
 80055bc:	4770      	bx	lr

080055be <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80055be:	b510      	push	{r4, lr}
 80055c0:	2110      	movs	r1, #16
 80055c2:	4604      	mov	r4, r0
 80055c4:	f024 fc19 	bl	8029dfa <_ZdlPvj>
 80055c8:	4620      	mov	r0, r4
 80055ca:	bd10      	pop	{r4, pc}

080055cc <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80055cc:	b510      	push	{r4, lr}
 80055ce:	4b03      	ldr	r3, [pc, #12]	; (80055dc <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80055d0:	6003      	str	r3, [r0, #0]
 80055d2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055d4:	f00e fe5a 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055d8:	4620      	mov	r0, r4
 80055da:	bd10      	pop	{r4, pc}
 80055dc:	0802db9c 	.word	0x0802db9c

080055e0 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80055e0:	b507      	push	{r0, r1, r2, lr}
 80055e2:	4b07      	ldr	r3, [pc, #28]	; (8005600 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80055e4:	6003      	str	r3, [r0, #0]
 80055e6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055e8:	f00e fe50 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055ec:	9801      	ldr	r0, [sp, #4]
 80055ee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80055f2:	f024 fc02 	bl	8029dfa <_ZdlPvj>
 80055f6:	9801      	ldr	r0, [sp, #4]
 80055f8:	b003      	add	sp, #12
 80055fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80055fe:	bf00      	nop
 8005600:	0802db9c 	.word	0x0802db9c

08005604 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005604:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005606:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800560a:	4299      	cmp	r1, r3
{
 800560c:	4604      	mov	r4, r0
 800560e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005610:	d103      	bne.n	800561a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005612:	f010 fb3d 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8005616:	f7fe fbe5 	bl	8003de4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800561a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800561e:	429d      	cmp	r5, r3
 8005620:	d103      	bne.n	800562a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005622:	f010 fb35 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005626:	f7fe fc0d 	bl	8003e44 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800562a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800562e:	42a5      	cmp	r5, r4
 8005630:	d105      	bne.n	800563e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005632:	f010 fb2d 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8005636:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 800563a:	f7fe bc33 	b.w	8003ea4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 800563e:	bd38      	pop	{r3, r4, r5, pc}

08005640 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005644:	ed2d 8b06 	vpush	{d8-d10}
 8005648:	4604      	mov	r4, r0
 800564a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 800564c:	46a3      	mov	fp, r4
 800564e:	2500      	movs	r5, #0
 8005650:	f011 ff9e 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 8005654:	4b66      	ldr	r3, [pc, #408]	; (80057f0 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005656:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005658:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800565c:	2226      	movs	r2, #38	; 0x26
 800565e:	4629      	mov	r1, r5
 8005660:	4658      	mov	r0, fp
 8005662:	f025 fbe2 	bl	802ae2a <memset>
 8005666:	4658      	mov	r0, fp
 8005668:	f7fd f9a8 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 800566c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005670:	26ff      	movs	r6, #255	; 0xff
 8005672:	4b60      	ldr	r3, [pc, #384]	; (80057f4 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005674:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005676:	2226      	movs	r2, #38	; 0x26
 8005678:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800567c:	4629      	mov	r1, r5
 800567e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005682:	4650      	mov	r0, sl
 8005684:	66a5      	str	r5, [r4, #104]	; 0x68
 8005686:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800568a:	f025 fbce 	bl	802ae2a <memset>
 800568e:	4650      	mov	r0, sl
 8005690:	f7fd f994 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8005694:	4b58      	ldr	r3, [pc, #352]	; (80057f8 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005696:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005698:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800569c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80056a0:	a90a      	add	r1, sp, #40	; 0x28
 80056a2:	4650      	mov	r0, sl
 80056a4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80056a8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80056ac:	f00d fdf1 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80056b0:	4648      	mov	r0, r9
 80056b2:	f7fd f9d9 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80056b6:	4b51      	ldr	r3, [pc, #324]	; (80057fc <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80056b8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80056bc:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80056c0:	4618      	mov	r0, r3
 80056c2:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80056c6:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80056ca:	ee08 3a90 	vmov	s17, r3
 80056ce:	f7fd f9cb 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80056d2:	4638      	mov	r0, r7
 80056d4:	f00c fad0 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 80056d8:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80056dc:	4618      	mov	r0, r3
 80056de:	9303      	str	r3, [sp, #12]
 80056e0:	f7fc ff68 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80056e4:	4b46      	ldr	r3, [pc, #280]	; (8005800 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80056e6:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80056ea:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80056ee:	3324      	adds	r3, #36	; 0x24
 80056f0:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80056f4:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80056f8:	4640      	mov	r0, r8
 80056fa:	f7fd f9b5 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80056fe:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005702:	4618      	mov	r0, r3
 8005704:	ee08 3a10 	vmov	s16, r3
 8005708:	f7fd f9ae 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 800570c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005710:	4618      	mov	r0, r3
 8005712:	ee09 3a10 	vmov	s18, r3
 8005716:	f00d fef3 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800571a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800571e:	4618      	mov	r0, r3
 8005720:	ee09 3a90 	vmov	s19, r3
 8005724:	f00d feec 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005728:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800572c:	4618      	mov	r0, r3
 800572e:	ee0a 3a10 	vmov	s20, r3
 8005732:	f00d fee5 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005736:	4a33      	ldr	r2, [pc, #204]	; (8005804 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005738:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800573c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005740:	4a31      	ldr	r2, [pc, #196]	; (8005808 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005742:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005746:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800574a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800574e:	f00e fd93 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005752:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005756:	462a      	mov	r2, r5
 8005758:	4658      	mov	r0, fp
 800575a:	9300      	str	r3, [sp, #0]
 800575c:	4629      	mov	r1, r5
 800575e:	23f0      	movs	r3, #240	; 0xf0
 8005760:	f7fd f907 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005764:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005766:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800576a:	66a3      	str	r3, [r4, #104]	; 0x68
 800576c:	4659      	mov	r1, fp
 800576e:	4630      	mov	r0, r6
 8005770:	f00a f9b6 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005774:	462a      	mov	r2, r5
 8005776:	4650      	mov	r0, sl
 8005778:	4629      	mov	r1, r5
 800577a:	f7fd f8ed 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 800577e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005780:	4650      	mov	r0, sl
 8005782:	a90a      	add	r1, sp, #40	; 0x28
 8005784:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005788:	f00d fd83 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800578c:	4651      	mov	r1, sl
 800578e:	4630      	mov	r0, r6
 8005790:	f00a f9a6 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005794:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005798:	2156      	movs	r1, #86	; 0x56
 800579a:	4648      	mov	r0, r9
 800579c:	f7fd f8dc 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80057a0:	f04f 33ff 	mov.w	r3, #4294967295
 80057a4:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80057a8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80057ac:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80057b0:	f10d 0b10 	add.w	fp, sp, #16
 80057b4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80057b8:	4649      	mov	r1, r9
 80057ba:	4658      	mov	r0, fp
 80057bc:	4798      	blx	r3
 80057be:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80057c2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80057c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80057ca:	4b10      	ldr	r3, [pc, #64]	; (800580c <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80057cc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80057ce:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80057d2:	b92b      	cbnz	r3, 80057e0 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 80057d4:	4b0e      	ldr	r3, [pc, #56]	; (8005810 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 80057d6:	4a0f      	ldr	r2, [pc, #60]	; (8005814 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80057d8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80057da:	480f      	ldr	r0, [pc, #60]	; (8005818 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80057dc:	f025 f920 	bl	802aa20 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80057e0:	4b0e      	ldr	r3, [pc, #56]	; (800581c <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80057e2:	881b      	ldrh	r3, [r3, #0]
 80057e4:	2b21      	cmp	r3, #33	; 0x21
 80057e6:	d81d      	bhi.n	8005824 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80057e8:	4b0d      	ldr	r3, [pc, #52]	; (8005820 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80057ea:	4a0a      	ldr	r2, [pc, #40]	; (8005814 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80057ec:	2161      	movs	r1, #97	; 0x61
 80057ee:	e7f4      	b.n	80057da <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80057f0:	0802db9c 	.word	0x0802db9c
 80057f4:	0802eb04 	.word	0x0802eb04
 80057f8:	0802ed50 	.word	0x0802ed50
 80057fc:	0802c650 	.word	0x0802c650
 8005800:	0802e838 	.word	0x0802e838
 8005804:	0802db84 	.word	0x0802db84
 8005808:	08005605 	.word	0x08005605
 800580c:	20013314 	.word	0x20013314
 8005810:	0802c400 	.word	0x0802c400
 8005814:	0802c505 	.word	0x0802c505
 8005818:	0802c47d 	.word	0x0802c47d
 800581c:	20013318 	.word	0x20013318
 8005820:	0802c4c4 	.word	0x0802c4c4
        return texts->getText(typedTextId);
 8005824:	4b95      	ldr	r3, [pc, #596]	; (8005a7c <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005826:	2121      	movs	r1, #33	; 0x21
 8005828:	6818      	ldr	r0, [r3, #0]
 800582a:	f002 fb17 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 800582e:	4a94      	ldr	r2, [pc, #592]	; (8005a80 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005830:	4603      	mov	r3, r0
 8005832:	2104      	movs	r1, #4
 8005834:	4650      	mov	r0, sl
 8005836:	f013 fbd9 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800583a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800583e:	4648      	mov	r0, r9
 8005840:	f00c ff56 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005844:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005a84 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005848:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800584c:	2322      	movs	r3, #34	; 0x22
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800584e:	a90a      	add	r1, sp, #40	; 0x28
 8005850:	4648      	mov	r0, r9
 8005852:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005856:	f00c ff6b 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800585a:	4649      	mov	r1, r9
 800585c:	4630      	mov	r0, r6
 800585e:	f00a f93f 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005862:	223c      	movs	r2, #60	; 0x3c
 8005864:	ee18 0a90 	vmov	r0, s17
 8005868:	213d      	movs	r1, #61	; 0x3d
 800586a:	f7fd f875 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800586e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005872:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005876:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800587a:	4658      	mov	r0, fp
        linespace = space;
 800587c:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005880:	f00c fcbc 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005884:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005888:	f504 7390 	add.w	r3, r4, #288	; 0x120
 800588c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005890:	232f      	movs	r3, #47	; 0x2f
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005892:	ee18 0a90 	vmov	r0, s17
 8005896:	a90a      	add	r1, sp, #40	; 0x28
 8005898:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800589c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80058a0:	f00c ff46 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058a4:	ee18 1a90 	vmov	r1, s17
 80058a8:	4630      	mov	r0, r6
 80058aa:	f00a f919 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80058ae:	230a      	movs	r3, #10
 80058b0:	9300      	str	r3, [sp, #0]
 80058b2:	2232      	movs	r2, #50	; 0x32
 80058b4:	23f0      	movs	r3, #240	; 0xf0
 80058b6:	4629      	mov	r1, r5
 80058b8:	4638      	mov	r0, r7
 80058ba:	f7fd f85a 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80058be:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80058c2:	22a0      	movs	r2, #160	; 0xa0
 80058c4:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80058c8:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80058cc:	9b03      	ldr	r3, [sp, #12]
 80058ce:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80058d2:	4611      	mov	r1, r2
 80058d4:	4638      	mov	r0, r7
 80058d6:	f00c fae5 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80058da:	22a0      	movs	r2, #160	; 0xa0
 80058dc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80058e0:	4638      	mov	r0, r7
 80058e2:	f00c faea 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80058e6:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80058ea:	2b20      	cmp	r3, #32
 80058ec:	d005      	beq.n	80058fa <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80058ee:	2320      	movs	r3, #32
 80058f0:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80058f4:	4638      	mov	r0, r7
 80058f6:	f00c f9df 	bl	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80058fa:	4638      	mov	r0, r7
 80058fc:	2101      	movs	r1, #1
 80058fe:	f00c fae7 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005902:	4639      	mov	r1, r7
 8005904:	4630      	mov	r0, r6
 8005906:	f00a f8eb 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800590a:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800590e:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005910:	2223      	movs	r2, #35	; 0x23
 8005912:	4640      	mov	r0, r8
        linespace = space;
 8005914:	f04f 0a00 	mov.w	sl, #0
 8005918:	2145      	movs	r1, #69	; 0x45
 800591a:	f7fd f81d 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800591e:	4641      	mov	r1, r8
 8005920:	4638      	mov	r0, r7
        color = newColor;
 8005922:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005926:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800592a:	f00c fc67 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800592e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005932:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005936:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800593a:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005a84 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800593e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005942:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005944:	a90a      	add	r1, sp, #40	; 0x28
 8005946:	4640      	mov	r0, r8
 8005948:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800594c:	f00c fef0 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005950:	4641      	mov	r1, r8
 8005952:	4630      	mov	r0, r6
 8005954:	f00a f8c4 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005958:	ee18 0a10 	vmov	r0, s16
 800595c:	220c      	movs	r2, #12
 800595e:	2136      	movs	r1, #54	; 0x36
 8005960:	f7fc fffa 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005964:	ee18 1a10 	vmov	r1, s16
 8005968:	4638      	mov	r0, r7
        color = newColor;
 800596a:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800596e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005972:	f00c fc43 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005976:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800597a:	ee18 3a10 	vmov	r3, s16
 800597e:	333c      	adds	r3, #60	; 0x3c
 8005980:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005984:	234a      	movs	r3, #74	; 0x4a
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005986:	ee18 0a10 	vmov	r0, s16
 800598a:	a90a      	add	r1, sp, #40	; 0x28
 800598c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005990:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005994:	f00c fecc 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005998:	ee18 1a10 	vmov	r1, s16
 800599c:	4630      	mov	r0, r6
 800599e:	f00a f89f 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80059a2:	ee19 0a10 	vmov	r0, s18
 80059a6:	22f0      	movs	r2, #240	; 0xf0
 80059a8:	2121      	movs	r1, #33	; 0x21
 80059aa:	f7fc ffd5 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80059ae:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059b2:	aa0a      	add	r2, sp, #40	; 0x28
 80059b4:	f04f 0802 	mov.w	r8, #2
 80059b8:	a909      	add	r1, sp, #36	; 0x24
 80059ba:	ee19 0a10 	vmov	r0, s18
 80059be:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80059c2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80059c6:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059ca:	f00d fa6c 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80059ce:	2348      	movs	r3, #72	; 0x48
 80059d0:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80059d4:	3710      	adds	r7, #16
        updateTextPosition();
 80059d6:	ee19 0a10 	vmov	r0, s18
 80059da:	f7fd f801 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80059de:	ee19 1a10 	vmov	r1, s18
 80059e2:	4630      	mov	r0, r6
        colorPressed = col;
 80059e4:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80059e8:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80059ec:	f00a f878 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80059f0:	ee19 0a90 	vmov	r0, s19
 80059f4:	22aa      	movs	r2, #170	; 0xaa
 80059f6:	2121      	movs	r1, #33	; 0x21
 80059f8:	f7fc ffae 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059fc:	aa0a      	add	r2, sp, #40	; 0x28
 80059fe:	a909      	add	r1, sp, #36	; 0x24
 8005a00:	ee19 0a90 	vmov	r0, s19
 8005a04:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a08:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a0c:	f00d fa4b 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a10:	2347      	movs	r3, #71	; 0x47
 8005a12:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005a16:	ee19 0a90 	vmov	r0, s19
 8005a1a:	f7fc ffe1 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a1e:	ee19 1a90 	vmov	r1, s19
 8005a22:	4630      	mov	r0, r6
        colorPressed = col;
 8005a24:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005a28:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005a2c:	f00a f858 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005a30:	ee1a 0a10 	vmov	r0, s20
 8005a34:	2264      	movs	r2, #100	; 0x64
 8005a36:	2121      	movs	r1, #33	; 0x21
 8005a38:	f7fc ff8e 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a3c:	aa0a      	add	r2, sp, #40	; 0x28
 8005a3e:	a909      	add	r1, sp, #36	; 0x24
 8005a40:	ee1a 0a10 	vmov	r0, s20
 8005a44:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a48:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a4c:	f00d fa2b 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a50:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8005a52:	ee1a 0a10 	vmov	r0, s20
 8005a56:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005a5a:	f7fc ffc1 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a5e:	4630      	mov	r0, r6
        colorPressed = col;
 8005a60:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005a64:	ee1a 1a10 	vmov	r1, s20
 8005a68:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005a6c:	f00a f838 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005a70:	4620      	mov	r0, r4
 8005a72:	b00d      	add	sp, #52	; 0x34
 8005a74:	ecbd 8b06 	vpop	{d8-d10}
 8005a78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a7c:	20013320 	.word	0x20013320
 8005a80:	0802c53d 	.word	0x0802c53d
 8005a84:	0802c5b0 	.word	0x0802c5b0

08005a88 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005a88:	4770      	bx	lr

08005a8a <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005a8a:	4770      	bx	lr

08005a8c <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005a8c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005a8e:	68c2      	ldr	r2, [r0, #12]
 8005a90:	6844      	ldr	r4, [r0, #4]
 8005a92:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005a94:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005a96:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005a9a:	07d2      	lsls	r2, r2, #31
 8005a9c:	bf48      	it	mi
 8005a9e:	5962      	ldrmi	r2, [r4, r5]
 8005aa0:	689b      	ldr	r3, [r3, #8]
    }
 8005aa2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005aa4:	bf48      	it	mi
 8005aa6:	58d3      	ldrmi	r3, [r2, r3]
 8005aa8:	4718      	bx	r3

08005aaa <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005aaa:	6843      	ldr	r3, [r0, #4]
 8005aac:	b12b      	cbz	r3, 8005aba <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005aae:	6883      	ldr	r3, [r0, #8]
 8005ab0:	b92b      	cbnz	r3, 8005abe <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005ab2:	68c0      	ldr	r0, [r0, #12]
 8005ab4:	f000 0001 	and.w	r0, r0, #1
 8005ab8:	4770      	bx	lr
 8005aba:	4618      	mov	r0, r3
 8005abc:	4770      	bx	lr
 8005abe:	2001      	movs	r0, #1
    }
 8005ac0:	4770      	bx	lr

08005ac2 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005ac2:	b510      	push	{r4, lr}
 8005ac4:	2110      	movs	r1, #16
 8005ac6:	4604      	mov	r4, r0
 8005ac8:	f024 f997 	bl	8029dfa <_ZdlPvj>
 8005acc:	4620      	mov	r0, r4
 8005ace:	bd10      	pop	{r4, pc}

08005ad0 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005ad0:	b510      	push	{r4, lr}
 8005ad2:	4b03      	ldr	r3, [pc, #12]	; (8005ae0 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005ad4:	6003      	str	r3, [r0, #0]
 8005ad6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ad8:	f00e fbd8 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005adc:	4620      	mov	r0, r4
 8005ade:	bd10      	pop	{r4, pc}
 8005ae0:	0802dbe8 	.word	0x0802dbe8

08005ae4 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005ae4:	b507      	push	{r0, r1, r2, lr}
 8005ae6:	4b07      	ldr	r3, [pc, #28]	; (8005b04 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005ae8:	6003      	str	r3, [r0, #0]
 8005aea:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005aec:	f00e fbce 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005af0:	9801      	ldr	r0, [sp, #4]
 8005af2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005af6:	f024 f980 	bl	8029dfa <_ZdlPvj>
 8005afa:	9801      	ldr	r0, [sp, #4]
 8005afc:	b003      	add	sp, #12
 8005afe:	f85d fb04 	ldr.w	pc, [sp], #4
 8005b02:	bf00      	nop
 8005b04:	0802dbe8 	.word	0x0802dbe8

08005b08 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005b08:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005b0a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005b0e:	4299      	cmp	r1, r3
{
 8005b10:	4604      	mov	r4, r0
 8005b12:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005b14:	d103      	bne.n	8005b1e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005b16:	f010 f8bb 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005b1a:	f7fe f983 	bl	8003e24 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005b1e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005b22:	429d      	cmp	r5, r3
 8005b24:	d103      	bne.n	8005b2e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005b26:	f010 f8b3 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005b2a:	f7fe f9eb 	bl	8003f04 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005b2e:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005b32:	42a5      	cmp	r5, r4
 8005b34:	d105      	bne.n	8005b42 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005b36:	f010 f8ab 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005b3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005b3e:	f7fe b9d1 	b.w	8003ee4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005b42:	bd38      	pop	{r3, r4, r5, pc}

08005b44 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b48:	ed2d 8b06 	vpush	{d8-d10}
 8005b4c:	4604      	mov	r4, r0
 8005b4e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005b50:	46a3      	mov	fp, r4
 8005b52:	2500      	movs	r5, #0
 8005b54:	f011 fd1c 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 8005b58:	4b66      	ldr	r3, [pc, #408]	; (8005cf4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005b5a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005b5c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005b60:	2226      	movs	r2, #38	; 0x26
 8005b62:	4629      	mov	r1, r5
 8005b64:	4658      	mov	r0, fp
 8005b66:	f025 f960 	bl	802ae2a <memset>
 8005b6a:	4658      	mov	r0, fp
 8005b6c:	f7fc ff26 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8005b70:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005b74:	26ff      	movs	r6, #255	; 0xff
 8005b76:	4b60      	ldr	r3, [pc, #384]	; (8005cf8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005b78:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005b7a:	2226      	movs	r2, #38	; 0x26
 8005b7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005b80:	4629      	mov	r1, r5
 8005b82:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005b86:	4650      	mov	r0, sl
 8005b88:	66a5      	str	r5, [r4, #104]	; 0x68
 8005b8a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005b8e:	f025 f94c 	bl	802ae2a <memset>
 8005b92:	4650      	mov	r0, sl
 8005b94:	f7fc ff12 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8005b98:	4b58      	ldr	r3, [pc, #352]	; (8005cfc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005b9a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005b9c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005ba0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005ba4:	a90a      	add	r1, sp, #40	; 0x28
 8005ba6:	4650      	mov	r0, sl
 8005ba8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005bac:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005bb0:	f00d fb6f 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005bb4:	4648      	mov	r0, r9
 8005bb6:	f7fc ff57 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005bba:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005bbe:	4b50      	ldr	r3, [pc, #320]	; (8005d00 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005bc0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005bc4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005bc8:	4638      	mov	r0, r7
 8005bca:	f00c f855 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 8005bce:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005bd2:	4618      	mov	r0, r3
 8005bd4:	9303      	str	r3, [sp, #12]
 8005bd6:	f7fc fced 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005bda:	4b4a      	ldr	r3, [pc, #296]	; (8005d04 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005bdc:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005be0:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005be4:	3324      	adds	r3, #36	; 0x24
 8005be6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005bea:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005bee:	4640      	mov	r0, r8
 8005bf0:	f7fc ff3a 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005bf4:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005bf8:	4618      	mov	r0, r3
 8005bfa:	ee08 3a10 	vmov	s16, r3
 8005bfe:	f7fc ff33 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005c02:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005c06:	4618      	mov	r0, r3
 8005c08:	ee08 3a90 	vmov	s17, r3
 8005c0c:	f7fc ff2c 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8005c10:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c14:	4618      	mov	r0, r3
 8005c16:	ee09 3a10 	vmov	s18, r3
 8005c1a:	f00d fc71 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c1e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c22:	4618      	mov	r0, r3
 8005c24:	ee09 3a90 	vmov	s19, r3
 8005c28:	f00d fc6a 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c2c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005c30:	4618      	mov	r0, r3
 8005c32:	ee0a 3a10 	vmov	s20, r3
 8005c36:	f00d fc63 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005c3a:	4a33      	ldr	r2, [pc, #204]	; (8005d08 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005c3c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005c40:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005c44:	4a31      	ldr	r2, [pc, #196]	; (8005d0c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005c46:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005c4a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005c4e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005c52:	f00e fb11 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005c56:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005c5a:	462a      	mov	r2, r5
 8005c5c:	4658      	mov	r0, fp
 8005c5e:	9300      	str	r3, [sp, #0]
 8005c60:	4629      	mov	r1, r5
 8005c62:	23f0      	movs	r3, #240	; 0xf0
 8005c64:	f7fc fe85 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c68:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005c6a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005c6e:	66a3      	str	r3, [r4, #104]	; 0x68
 8005c70:	4659      	mov	r1, fp
 8005c72:	4630      	mov	r0, r6
 8005c74:	f009 ff34 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005c78:	462a      	mov	r2, r5
 8005c7a:	4650      	mov	r0, sl
 8005c7c:	4629      	mov	r1, r5
 8005c7e:	f7fc fe6b 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005c82:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005c84:	4650      	mov	r0, sl
 8005c86:	a90a      	add	r1, sp, #40	; 0x28
 8005c88:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c8c:	f00d fb01 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005c90:	4651      	mov	r1, sl
 8005c92:	4630      	mov	r0, r6
 8005c94:	f009 ff24 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005c98:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005c9c:	2156      	movs	r1, #86	; 0x56
 8005c9e:	4648      	mov	r0, r9
 8005ca0:	f7fc fe5a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005ca4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005ca8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005cac:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005cb0:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005cb4:	4650      	mov	r0, sl
 8005cb6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005cba:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005cbe:	4649      	mov	r1, r9
 8005cc0:	4798      	blx	r3
 8005cc2:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005cc6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005cca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005cce:	4b10      	ldr	r3, [pc, #64]	; (8005d10 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005cd0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005cd2:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005cd6:	b92b      	cbnz	r3, 8005ce4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005cd8:	4b0e      	ldr	r3, [pc, #56]	; (8005d14 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005cda:	4a0f      	ldr	r2, [pc, #60]	; (8005d18 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005cdc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005cde:	480f      	ldr	r0, [pc, #60]	; (8005d1c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005ce0:	f024 fe9e 	bl	802aa20 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005ce4:	4b0e      	ldr	r3, [pc, #56]	; (8005d20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005ce6:	881b      	ldrh	r3, [r3, #0]
 8005ce8:	2b1c      	cmp	r3, #28
 8005cea:	d81d      	bhi.n	8005d28 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005cec:	4b0d      	ldr	r3, [pc, #52]	; (8005d24 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005cee:	4a0a      	ldr	r2, [pc, #40]	; (8005d18 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005cf0:	2161      	movs	r1, #97	; 0x61
 8005cf2:	e7f4      	b.n	8005cde <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005cf4:	0802dbe8 	.word	0x0802dbe8
 8005cf8:	0802eb04 	.word	0x0802eb04
 8005cfc:	0802ed50 	.word	0x0802ed50
 8005d00:	0802c650 	.word	0x0802c650
 8005d04:	0802e838 	.word	0x0802e838
 8005d08:	0802dbd0 	.word	0x0802dbd0
 8005d0c:	08005b09 	.word	0x08005b09
 8005d10:	20013314 	.word	0x20013314
 8005d14:	0802c400 	.word	0x0802c400
 8005d18:	0802c505 	.word	0x0802c505
 8005d1c:	0802c47d 	.word	0x0802c47d
 8005d20:	20013318 	.word	0x20013318
 8005d24:	0802c4c4 	.word	0x0802c4c4
        return texts->getText(typedTextId);
 8005d28:	4b93      	ldr	r3, [pc, #588]	; (8005f78 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005d2a:	211c      	movs	r1, #28
 8005d2c:	6818      	ldr	r0, [r3, #0]
 8005d2e:	f002 f895 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8005d32:	4a92      	ldr	r2, [pc, #584]	; (8005f7c <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005d34:	4603      	mov	r3, r0
 8005d36:	2104      	movs	r1, #4
 8005d38:	4650      	mov	r0, sl
 8005d3a:	f013 f957 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005d3e:	4648      	mov	r0, r9
        wc1 = value;
 8005d40:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005d44:	f00c fcd4 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005d48:	4b8d      	ldr	r3, [pc, #564]	; (8005f80 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005d4a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8005d4c:	a90a      	add	r1, sp, #40	; 0x28
 8005d4e:	231d      	movs	r3, #29
 8005d50:	4648      	mov	r0, r9
 8005d52:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d56:	f00c fceb 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d5a:	4649      	mov	r1, r9
 8005d5c:	4630      	mov	r0, r6
 8005d5e:	f009 febf 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005d62:	230a      	movs	r3, #10
 8005d64:	9300      	str	r3, [sp, #0]
 8005d66:	2232      	movs	r2, #50	; 0x32
 8005d68:	23f0      	movs	r3, #240	; 0xf0
 8005d6a:	4629      	mov	r1, r5
 8005d6c:	4638      	mov	r0, r7
 8005d6e:	f7fc fe00 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d72:	9b03      	ldr	r3, [sp, #12]
 8005d74:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d78:	22a0      	movs	r2, #160	; 0xa0
 8005d7a:	4611      	mov	r1, r2
 8005d7c:	4638      	mov	r0, r7
 8005d7e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005d82:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005d86:	f00c f88d 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d8a:	22a0      	movs	r2, #160	; 0xa0
 8005d8c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005d90:	4638      	mov	r0, r7
 8005d92:	f00c f892 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005d96:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005d9a:	2b20      	cmp	r3, #32
 8005d9c:	d005      	beq.n	8005daa <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8005d9e:	2320      	movs	r3, #32
 8005da0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005da4:	4638      	mov	r0, r7
 8005da6:	f00b ff87 	bl	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005daa:	4638      	mov	r0, r7
 8005dac:	2101      	movs	r1, #1
 8005dae:	f00c f88f 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005db2:	4639      	mov	r1, r7
 8005db4:	4630      	mov	r0, r6
 8005db6:	ad04      	add	r5, sp, #16
        color = newColor;
 8005db8:	f04f 37ff 	mov.w	r7, #4294967295
 8005dbc:	f009 fe90 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005dc0:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005dc4:	2223      	movs	r2, #35	; 0x23
 8005dc6:	4640      	mov	r0, r8
 8005dc8:	2145      	movs	r1, #69	; 0x45
 8005dca:	f7fc fdc5 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005dce:	4641      	mov	r1, r8
 8005dd0:	4628      	mov	r0, r5
        color = newColor;
 8005dd2:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005dd6:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005dda:	f00c fa0f 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005dde:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005de2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005de6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005dea:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 8005dee:	f8df 9190 	ldr.w	r9, [pc, #400]	; 8005f80 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8005df2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005df6:	a90a      	add	r1, sp, #40	; 0x28
 8005df8:	4640      	mov	r0, r8
 8005dfa:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005dfe:	f00c fc97 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e02:	4641      	mov	r1, r8
 8005e04:	4630      	mov	r0, r6
 8005e06:	f009 fe6b 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005e0a:	ee18 0a10 	vmov	r0, s16
 8005e0e:	220c      	movs	r2, #12
 8005e10:	2136      	movs	r1, #54	; 0x36
 8005e12:	f7fc fda1 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005e16:	ee18 1a10 	vmov	r1, s16
 8005e1a:	4628      	mov	r0, r5
        color = newColor;
 8005e1c:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005e20:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005e24:	f00c f9ea 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e28:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e2c:	ee18 3a10 	vmov	r3, s16
 8005e30:	445b      	add	r3, fp
 8005e32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e36:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8005e38:	ee18 0a10 	vmov	r0, s16
 8005e3c:	a90a      	add	r1, sp, #40	; 0x28
 8005e3e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e42:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e46:	f00c fc73 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e4a:	ee18 1a10 	vmov	r1, s16
 8005e4e:	4630      	mov	r0, r6
 8005e50:	f009 fe46 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8005e54:	465a      	mov	r2, fp
 8005e56:	ee18 0a90 	vmov	r0, s17
 8005e5a:	2121      	movs	r1, #33	; 0x21
 8005e5c:	f7fc fd7c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005e60:	ee18 1a90 	vmov	r1, s17
 8005e64:	4628      	mov	r0, r5
        color = newColor;
 8005e66:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005e6a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005e6e:	f00c f9c5 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e76:	ee18 3a90 	vmov	r3, s17
 8005e7a:	445b      	add	r3, fp
 8005e7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e80:	232b      	movs	r3, #43	; 0x2b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8005e82:	ee18 0a90 	vmov	r0, s17
 8005e86:	a90a      	add	r1, sp, #40	; 0x28
 8005e88:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e8c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e90:	f00c fc4e 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e94:	ee18 1a90 	vmov	r1, s17
 8005e98:	4630      	mov	r0, r6
 8005e9a:	f009 fe21 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005e9e:	ee19 0a10 	vmov	r0, s18
 8005ea2:	22f0      	movs	r2, #240	; 0xf0
 8005ea4:	2121      	movs	r1, #33	; 0x21
 8005ea6:	f7fc fd57 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8005eaa:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005eae:	aa0a      	add	r2, sp, #40	; 0x28
 8005eb0:	f04f 0802 	mov.w	r8, #2
 8005eb4:	a909      	add	r1, sp, #36	; 0x24
 8005eb6:	ee19 0a10 	vmov	r0, s18
 8005eba:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005ebe:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005ec2:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ec6:	f00c ffee 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005eca:	233a      	movs	r3, #58	; 0x3a
 8005ecc:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005ed0:	3510      	adds	r5, #16
        updateTextPosition();
 8005ed2:	ee19 0a10 	vmov	r0, s18
 8005ed6:	f7fc fd83 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005eda:	ee19 1a10 	vmov	r1, s18
 8005ede:	4630      	mov	r0, r6
        colorPressed = col;
 8005ee0:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005ee4:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005ee8:	f009 fdfa 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005eec:	ee19 0a90 	vmov	r0, s19
 8005ef0:	22aa      	movs	r2, #170	; 0xaa
 8005ef2:	2121      	movs	r1, #33	; 0x21
 8005ef4:	f7fc fd30 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ef8:	aa0a      	add	r2, sp, #40	; 0x28
 8005efa:	a909      	add	r1, sp, #36	; 0x24
 8005efc:	ee19 0a90 	vmov	r0, s19
 8005f00:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f04:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f08:	f00c ffcd 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f0c:	2339      	movs	r3, #57	; 0x39
 8005f0e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005f12:	ee19 0a90 	vmov	r0, s19
 8005f16:	f7fc fd63 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f1a:	ee19 1a90 	vmov	r1, s19
 8005f1e:	4630      	mov	r0, r6
        colorPressed = col;
 8005f20:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005f24:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005f28:	f009 fdda 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005f2c:	ee1a 0a10 	vmov	r0, s20
 8005f30:	2264      	movs	r2, #100	; 0x64
 8005f32:	2121      	movs	r1, #33	; 0x21
 8005f34:	f7fc fd10 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f38:	aa0a      	add	r2, sp, #40	; 0x28
 8005f3a:	a909      	add	r1, sp, #36	; 0x24
 8005f3c:	ee1a 0a10 	vmov	r0, s20
 8005f40:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f44:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f48:	f00c ffad 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f4c:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8005f4e:	ee1a 0a10 	vmov	r0, s20
 8005f52:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005f56:	f7fc fd43 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f5a:	4630      	mov	r0, r6
        colorPressed = col;
 8005f5c:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005f60:	ee1a 1a10 	vmov	r1, s20
 8005f64:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005f68:	f009 fdba 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005f6c:	4620      	mov	r0, r4
 8005f6e:	b00d      	add	sp, #52	; 0x34
 8005f70:	ecbd 8b06 	vpop	{d8-d10}
 8005f74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f78:	20013320 	.word	0x20013320
 8005f7c:	0802c53d 	.word	0x0802c53d
 8005f80:	0802c5b0 	.word	0x0802c5b0

08005f84 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8005f84:	4770      	bx	lr

08005f86 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005f86:	4770      	bx	lr

08005f88 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005f88:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005f8a:	68c2      	ldr	r2, [r0, #12]
 8005f8c:	6844      	ldr	r4, [r0, #4]
 8005f8e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005f90:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005f92:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005f96:	07d2      	lsls	r2, r2, #31
 8005f98:	bf48      	it	mi
 8005f9a:	5962      	ldrmi	r2, [r4, r5]
 8005f9c:	689b      	ldr	r3, [r3, #8]
    }
 8005f9e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005fa0:	bf48      	it	mi
 8005fa2:	58d3      	ldrmi	r3, [r2, r3]
 8005fa4:	4718      	bx	r3

08005fa6 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005fa6:	6843      	ldr	r3, [r0, #4]
 8005fa8:	b12b      	cbz	r3, 8005fb6 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005faa:	6883      	ldr	r3, [r0, #8]
 8005fac:	b92b      	cbnz	r3, 8005fba <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005fae:	68c0      	ldr	r0, [r0, #12]
 8005fb0:	f000 0001 	and.w	r0, r0, #1
 8005fb4:	4770      	bx	lr
 8005fb6:	4618      	mov	r0, r3
 8005fb8:	4770      	bx	lr
 8005fba:	2001      	movs	r0, #1
    }
 8005fbc:	4770      	bx	lr

08005fbe <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005fbe:	b510      	push	{r4, lr}
 8005fc0:	2110      	movs	r1, #16
 8005fc2:	4604      	mov	r4, r0
 8005fc4:	f023 ff19 	bl	8029dfa <_ZdlPvj>
 8005fc8:	4620      	mov	r0, r4
 8005fca:	bd10      	pop	{r4, pc}

08005fcc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005fcc:	b510      	push	{r4, lr}
 8005fce:	4b03      	ldr	r3, [pc, #12]	; (8005fdc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8005fd0:	6003      	str	r3, [r0, #0]
 8005fd2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005fd4:	f00e f95a 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005fd8:	4620      	mov	r0, r4
 8005fda:	bd10      	pop	{r4, pc}
 8005fdc:	0802dc34 	.word	0x0802dc34

08005fe0 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005fe0:	b507      	push	{r0, r1, r2, lr}
 8005fe2:	4b07      	ldr	r3, [pc, #28]	; (8006000 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8005fe4:	6003      	str	r3, [r0, #0]
 8005fe6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005fe8:	f00e f950 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005fec:	9801      	ldr	r0, [sp, #4]
 8005fee:	f241 015c 	movw	r1, #4188	; 0x105c
 8005ff2:	f023 ff02 	bl	8029dfa <_ZdlPvj>
 8005ff6:	9801      	ldr	r0, [sp, #4]
 8005ff8:	b003      	add	sp, #12
 8005ffa:	f85d fb04 	ldr.w	pc, [sp], #4
 8005ffe:	bf00      	nop
 8006000:	0802dc34 	.word	0x0802dc34

08006004 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006004:	3098      	adds	r0, #152	; 0x98
 8006006:	4288      	cmp	r0, r1
{
 8006008:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800600a:	d105      	bne.n	8006018 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800600c:	f00f fe40 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006010:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006014:	f7fd bf56 	b.w	8003ec4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006018:	bd08      	pop	{r3, pc}
	...

0800601c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 800601c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006020:	ed2d 8b02 	vpush	{d8}
 8006024:	4604      	mov	r4, r0
 8006026:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006028:	46a1      	mov	r9, r4
 800602a:	2500      	movs	r5, #0
 800602c:	f011 fab0 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 8006030:	4ba6      	ldr	r3, [pc, #664]	; (80062cc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006032:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006034:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006038:	2226      	movs	r2, #38	; 0x26
 800603a:	4629      	mov	r1, r5
 800603c:	4648      	mov	r0, r9
 800603e:	f024 fef4 	bl	802ae2a <memset>
 8006042:	4648      	mov	r0, r9
 8006044:	f7fc fcba 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006048:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800604c:	26ff      	movs	r6, #255	; 0xff
 800604e:	4ba0      	ldr	r3, [pc, #640]	; (80062d0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006050:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006052:	2226      	movs	r2, #38	; 0x26
 8006054:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006058:	4629      	mov	r1, r5
 800605a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800605e:	4640      	mov	r0, r8
 8006060:	66a5      	str	r5, [r4, #104]	; 0x68
 8006062:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006066:	f024 fee0 	bl	802ae2a <memset>
 800606a:	4640      	mov	r0, r8
 800606c:	f7fc fca6 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006070:	4b98      	ldr	r3, [pc, #608]	; (80062d4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8006072:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006074:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006078:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800607c:	a90a      	add	r1, sp, #40	; 0x28
 800607e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006082:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006084:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006088:	f00d f903 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800608c:	4658      	mov	r0, fp
 800608e:	f00d fa37 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006092:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006096:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800609a:	4618      	mov	r0, r3
 800609c:	ee08 3a90 	vmov	s17, r3
 80060a0:	f7fc fce2 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80060a4:	4638      	mov	r0, r7
 80060a6:	f00b fde7 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 80060aa:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80060ae:	4618      	mov	r0, r3
 80060b0:	9303      	str	r3, [sp, #12]
 80060b2:	f7fc fa7f 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80060b6:	4b88      	ldr	r3, [pc, #544]	; (80062d8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 80060b8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80060bc:	3324      	adds	r3, #36	; 0x24
 80060be:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80060c2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80060c6:	4618      	mov	r0, r3
 80060c8:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80060cc:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80060d0:	ee08 3a10 	vmov	s16, r3
 80060d4:	f7fc fcc8 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80060d8:	4650      	mov	r0, sl
 80060da:	f7fc fcc5 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80060de:	4a7f      	ldr	r2, [pc, #508]	; (80062dc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
 80060e0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80060e4:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80060e8:	4a7d      	ldr	r2, [pc, #500]	; (80062e0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80060ea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80060ee:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80060f2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80060f6:	f00e f8bf 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80060fa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80060fe:	462a      	mov	r2, r5
 8006100:	4648      	mov	r0, r9
 8006102:	9300      	str	r3, [sp, #0]
 8006104:	4629      	mov	r1, r5
 8006106:	23f0      	movs	r3, #240	; 0xf0
 8006108:	f7fc fc33 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 800610c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800610e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006112:	66a3      	str	r3, [r4, #104]	; 0x68
 8006114:	4649      	mov	r1, r9
 8006116:	4630      	mov	r0, r6
 8006118:	f009 fce2 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800611c:	462a      	mov	r2, r5
 800611e:	4640      	mov	r0, r8
 8006120:	4629      	mov	r1, r5
 8006122:	f7fc fc19 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006126:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006128:	4640      	mov	r0, r8
 800612a:	a90a      	add	r1, sp, #40	; 0x28
 800612c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006130:	f00d f8af 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006134:	4641      	mov	r1, r8
 8006136:	4630      	mov	r0, r6
 8006138:	f009 fcd2 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800613c:	4658      	mov	r0, fp
 800613e:	f240 1201 	movw	r2, #257	; 0x101
 8006142:	2121      	movs	r1, #33	; 0x21
 8006144:	f7fc fc08 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006148:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800614a:	aa0a      	add	r2, sp, #40	; 0x28
 800614c:	a909      	add	r1, sp, #36	; 0x24
 800614e:	4658      	mov	r0, fp
 8006150:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006154:	2302      	movs	r3, #2
 8006156:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800615a:	f00c fea4 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800615e:	2327      	movs	r3, #39	; 0x27
        updateTextPosition();
 8006160:	4658      	mov	r0, fp
 8006162:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006166:	f7fc fc3b 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800616a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800616e:	330c      	adds	r3, #12
        color = col;
 8006170:	f04f 39ff 	mov.w	r9, #4294967295
 8006174:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006178:	4659      	mov	r1, fp
 800617a:	4630      	mov	r0, r6
        colorPressed = col;
 800617c:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006180:	f009 fcae 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006184:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006188:	223c      	movs	r2, #60	; 0x3c
 800618a:	ee18 0a90 	vmov	r0, s17
 800618e:	2117      	movs	r1, #23
 8006190:	f7fc fbe2 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006194:	ee18 1a90 	vmov	r1, s17
 8006198:	4640      	mov	r0, r8
        color = newColor;
 800619a:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800619e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80061a2:	f00c f82b 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80061a6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80061aa:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80061ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80061b2:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80061b4:	eb0d 0103 	add.w	r1, sp, r3
 80061b8:	ee18 0a90 	vmov	r0, s17
 80061bc:	f8df b124 	ldr.w	fp, [pc, #292]	; 80062e4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>
 80061c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80061c4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80061c8:	f00c fab2 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061cc:	ee18 1a90 	vmov	r1, s17
 80061d0:	4630      	mov	r0, r6
 80061d2:	f009 fc85 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80061d6:	230a      	movs	r3, #10
 80061d8:	9300      	str	r3, [sp, #0]
 80061da:	2232      	movs	r2, #50	; 0x32
 80061dc:	23f0      	movs	r3, #240	; 0xf0
 80061de:	4629      	mov	r1, r5
 80061e0:	4638      	mov	r0, r7
 80061e2:	f7fc fbc6 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061e6:	9b03      	ldr	r3, [sp, #12]
 80061e8:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80061ec:	22a0      	movs	r2, #160	; 0xa0
 80061ee:	4611      	mov	r1, r2
 80061f0:	4638      	mov	r0, r7
 80061f2:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80061f6:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80061fa:	f00b fe53 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80061fe:	22a0      	movs	r2, #160	; 0xa0
 8006200:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006204:	4638      	mov	r0, r7
 8006206:	f00b fe58 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800620a:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800620e:	2b20      	cmp	r3, #32
 8006210:	d005      	beq.n	800621e <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x202>
        lineWidthQ5 = widthQ5;
 8006212:	2320      	movs	r3, #32
 8006214:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006218:	4638      	mov	r0, r7
 800621a:	f00b fd4d 	bl	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800621e:	4638      	mov	r0, r7
 8006220:	2101      	movs	r1, #1
 8006222:	f00b fe55 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006226:	4639      	mov	r1, r7
 8006228:	4630      	mov	r0, r6
 800622a:	f009 fc59 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800622e:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006232:	ee18 0a10 	vmov	r0, s16
 8006236:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006238:	2500      	movs	r5, #0
 800623a:	2145      	movs	r1, #69	; 0x45
 800623c:	f7fc fb8c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006240:	ee18 1a10 	vmov	r1, s16
 8006244:	4640      	mov	r0, r8
        color = newColor;
 8006246:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800624a:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800624e:	f00b ffd5 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006252:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006256:	ee18 3a10 	vmov	r3, s16
 800625a:	333c      	adds	r3, #60	; 0x3c
 800625c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006260:	2329      	movs	r3, #41	; 0x29
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006262:	ee18 0a10 	vmov	r0, s16
 8006266:	a90a      	add	r1, sp, #40	; 0x28
 8006268:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800626c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006270:	f00c fa5e 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006274:	ee18 1a10 	vmov	r1, s16
 8006278:	4630      	mov	r0, r6
 800627a:	f009 fc31 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800627e:	220c      	movs	r2, #12
 8006280:	4650      	mov	r0, sl
 8006282:	2136      	movs	r1, #54	; 0x36
 8006284:	f7fc fb68 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006288:	4651      	mov	r1, sl
 800628a:	4640      	mov	r0, r8
        color = newColor;
 800628c:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006290:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006294:	f00b ffb2 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006298:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800629c:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80062a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062a4:	232a      	movs	r3, #42	; 0x2a
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 80062a6:	a90a      	add	r1, sp, #40	; 0x28
 80062a8:	4650      	mov	r0, sl
 80062aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80062ae:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80062b2:	f00c fa3d 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062b6:	4630      	mov	r0, r6
 80062b8:	4651      	mov	r1, sl
 80062ba:	f009 fc11 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80062be:	4620      	mov	r0, r4
 80062c0:	b00d      	add	sp, #52	; 0x34
 80062c2:	ecbd 8b02 	vpop	{d8}
 80062c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062ca:	bf00      	nop
 80062cc:	0802dc34 	.word	0x0802dc34
 80062d0:	0802eb04 	.word	0x0802eb04
 80062d4:	0802ed50 	.word	0x0802ed50
 80062d8:	0802e838 	.word	0x0802e838
 80062dc:	0802dc1c 	.word	0x0802dc1c
 80062e0:	08006005 	.word	0x08006005
 80062e4:	0802c5b0 	.word	0x0802c5b0

080062e8 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 80062e8:	4770      	bx	lr

080062ea <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80062ea:	4770      	bx	lr

080062ec <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80062ec:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80062ee:	68c2      	ldr	r2, [r0, #12]
 80062f0:	6844      	ldr	r4, [r0, #4]
 80062f2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80062f4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80062f6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80062fa:	07d2      	lsls	r2, r2, #31
 80062fc:	bf48      	it	mi
 80062fe:	5962      	ldrmi	r2, [r4, r5]
 8006300:	689b      	ldr	r3, [r3, #8]
    }
 8006302:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006304:	bf48      	it	mi
 8006306:	58d3      	ldrmi	r3, [r2, r3]
 8006308:	4718      	bx	r3

0800630a <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800630a:	6843      	ldr	r3, [r0, #4]
 800630c:	b12b      	cbz	r3, 800631a <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800630e:	6883      	ldr	r3, [r0, #8]
 8006310:	b92b      	cbnz	r3, 800631e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006312:	68c0      	ldr	r0, [r0, #12]
 8006314:	f000 0001 	and.w	r0, r0, #1
 8006318:	4770      	bx	lr
 800631a:	4618      	mov	r0, r3
 800631c:	4770      	bx	lr
 800631e:	2001      	movs	r0, #1
    }
 8006320:	4770      	bx	lr

08006322 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006322:	b510      	push	{r4, lr}
 8006324:	2110      	movs	r1, #16
 8006326:	4604      	mov	r4, r0
 8006328:	f023 fd67 	bl	8029dfa <_ZdlPvj>
 800632c:	4620      	mov	r0, r4
 800632e:	bd10      	pop	{r4, pc}

08006330 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006330:	b510      	push	{r4, lr}
 8006332:	4b03      	ldr	r3, [pc, #12]	; (8006340 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006334:	6003      	str	r3, [r0, #0]
 8006336:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006338:	f00d ffa8 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800633c:	4620      	mov	r0, r4
 800633e:	bd10      	pop	{r4, pc}
 8006340:	0802dc80 	.word	0x0802dc80

08006344 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006344:	b507      	push	{r0, r1, r2, lr}
 8006346:	4b07      	ldr	r3, [pc, #28]	; (8006364 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006348:	6003      	str	r3, [r0, #0]
 800634a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800634c:	f00d ff9e 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006350:	9801      	ldr	r0, [sp, #4]
 8006352:	f241 015c 	movw	r1, #4188	; 0x105c
 8006356:	f023 fd50 	bl	8029dfa <_ZdlPvj>
 800635a:	9801      	ldr	r0, [sp, #4]
 800635c:	b003      	add	sp, #12
 800635e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006362:	bf00      	nop
 8006364:	0802dc80 	.word	0x0802dc80

08006368 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006368:	3098      	adds	r0, #152	; 0x98
 800636a:	4288      	cmp	r0, r1
{
 800636c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800636e:	d105      	bne.n	800637c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006370:	f00f fc8e 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006374:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006378:	f7fd bda4 	b.w	8003ec4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800637c:	bd08      	pop	{r3, pc}
	...

08006380 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006384:	ed2d 8b02 	vpush	{d8}
 8006388:	4604      	mov	r4, r0
 800638a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 800638c:	46a1      	mov	r9, r4
 800638e:	2500      	movs	r5, #0
 8006390:	f011 f8fe 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 8006394:	4ba5      	ldr	r3, [pc, #660]	; (800662c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006396:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006398:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800639c:	2226      	movs	r2, #38	; 0x26
 800639e:	4629      	mov	r1, r5
 80063a0:	4648      	mov	r0, r9
 80063a2:	f024 fd42 	bl	802ae2a <memset>
 80063a6:	4648      	mov	r0, r9
 80063a8:	f7fc fb08 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80063ac:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80063b0:	26ff      	movs	r6, #255	; 0xff
 80063b2:	4b9f      	ldr	r3, [pc, #636]	; (8006630 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 80063b4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80063b6:	2226      	movs	r2, #38	; 0x26
 80063b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80063bc:	4629      	mov	r1, r5
 80063be:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80063c2:	4640      	mov	r0, r8
 80063c4:	66a5      	str	r5, [r4, #104]	; 0x68
 80063c6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80063ca:	f024 fd2e 	bl	802ae2a <memset>
 80063ce:	4640      	mov	r0, r8
 80063d0:	f7fc faf4 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80063d4:	4b97      	ldr	r3, [pc, #604]	; (8006634 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 80063d6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80063d8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80063dc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80063e0:	a90a      	add	r1, sp, #40	; 0x28
 80063e2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80063e6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80063e8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80063ec:	f00c ff51 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80063f0:	4658      	mov	r0, fp
 80063f2:	f00d f885 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80063f6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80063fa:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80063fe:	4618      	mov	r0, r3
 8006400:	ee08 3a90 	vmov	s17, r3
 8006404:	f7fc fb30 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006408:	4638      	mov	r0, r7
 800640a:	f00b fc35 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 800640e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006412:	4618      	mov	r0, r3
 8006414:	9303      	str	r3, [sp, #12]
 8006416:	f7fc f8cd 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800641a:	4b87      	ldr	r3, [pc, #540]	; (8006638 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 800641c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006420:	3324      	adds	r3, #36	; 0x24
 8006422:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006426:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800642a:	4618      	mov	r0, r3
 800642c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006430:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006434:	ee08 3a10 	vmov	s16, r3
 8006438:	f7fc fb16 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 800643c:	4650      	mov	r0, sl
 800643e:	f7fc fb13 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006442:	4a7e      	ldr	r2, [pc, #504]	; (800663c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8006444:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006448:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 800644c:	4a7c      	ldr	r2, [pc, #496]	; (8006640 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800644e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006452:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006456:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800645a:	f00d ff0d 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800645e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006462:	462a      	mov	r2, r5
 8006464:	4648      	mov	r0, r9
 8006466:	9300      	str	r3, [sp, #0]
 8006468:	4629      	mov	r1, r5
 800646a:	23f0      	movs	r3, #240	; 0xf0
 800646c:	f7fc fa81 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006470:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006472:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006476:	66a3      	str	r3, [r4, #104]	; 0x68
 8006478:	4649      	mov	r1, r9
 800647a:	4630      	mov	r0, r6
 800647c:	f009 fb30 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006480:	462a      	mov	r2, r5
 8006482:	4640      	mov	r0, r8
 8006484:	4629      	mov	r1, r5
 8006486:	f7fc fa67 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 800648a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800648c:	4640      	mov	r0, r8
 800648e:	a90a      	add	r1, sp, #40	; 0x28
 8006490:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006494:	f00c fefd 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006498:	4641      	mov	r1, r8
 800649a:	4630      	mov	r0, r6
 800649c:	f009 fb20 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80064a0:	4658      	mov	r0, fp
 80064a2:	f240 1201 	movw	r2, #257	; 0x101
 80064a6:	2121      	movs	r1, #33	; 0x21
 80064a8:	f7fc fa56 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80064ac:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064ae:	aa0a      	add	r2, sp, #40	; 0x28
 80064b0:	a909      	add	r1, sp, #36	; 0x24
 80064b2:	4658      	mov	r0, fp
 80064b4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80064b8:	2302      	movs	r3, #2
 80064ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064be:	f00c fcf2 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80064c2:	2323      	movs	r3, #35	; 0x23
        updateTextPosition();
 80064c4:	4658      	mov	r0, fp
 80064c6:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80064ca:	f7fc fa89 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80064ce:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 80064d2:	330c      	adds	r3, #12
        color = col;
 80064d4:	f04f 39ff 	mov.w	r9, #4294967295
 80064d8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80064dc:	4659      	mov	r1, fp
 80064de:	4630      	mov	r0, r6
        colorPressed = col;
 80064e0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80064e4:	f009 fafc 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80064e8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80064ec:	223c      	movs	r2, #60	; 0x3c
 80064ee:	ee18 0a90 	vmov	r0, s17
 80064f2:	2117      	movs	r1, #23
 80064f4:	f7fc fa30 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80064f8:	ee18 1a90 	vmov	r1, s17
 80064fc:	4640      	mov	r0, r8
        color = newColor;
 80064fe:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006502:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006506:	f00b fe79 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800650a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800650e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006512:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006516:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006644 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 800651a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800651e:	2324      	movs	r3, #36	; 0x24
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006520:	ee18 0a90 	vmov	r0, s17
 8006524:	a90a      	add	r1, sp, #40	; 0x28
 8006526:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800652a:	f00c f901 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800652e:	ee18 1a90 	vmov	r1, s17
 8006532:	4630      	mov	r0, r6
 8006534:	f009 fad4 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006538:	230a      	movs	r3, #10
 800653a:	9300      	str	r3, [sp, #0]
 800653c:	2232      	movs	r2, #50	; 0x32
 800653e:	23f0      	movs	r3, #240	; 0xf0
 8006540:	4629      	mov	r1, r5
 8006542:	4638      	mov	r0, r7
 8006544:	f7fc fa15 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006548:	9b03      	ldr	r3, [sp, #12]
 800654a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800654e:	22a0      	movs	r2, #160	; 0xa0
 8006550:	4611      	mov	r1, r2
 8006552:	4638      	mov	r0, r7
 8006554:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006558:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800655c:	f00b fca2 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006560:	22a0      	movs	r2, #160	; 0xa0
 8006562:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006566:	4638      	mov	r0, r7
 8006568:	f00b fca7 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800656c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006570:	2b20      	cmp	r3, #32
 8006572:	d005      	beq.n	8006580 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006574:	2320      	movs	r3, #32
 8006576:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800657a:	4638      	mov	r0, r7
 800657c:	f00b fb9c 	bl	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006580:	4638      	mov	r0, r7
 8006582:	2101      	movs	r1, #1
 8006584:	f00b fca4 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006588:	4639      	mov	r1, r7
 800658a:	4630      	mov	r0, r6
 800658c:	f009 faa8 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006590:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006594:	ee18 0a10 	vmov	r0, s16
 8006598:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800659a:	2500      	movs	r5, #0
 800659c:	2145      	movs	r1, #69	; 0x45
 800659e:	f7fc f9db 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80065a2:	ee18 1a10 	vmov	r1, s16
 80065a6:	4640      	mov	r0, r8
        color = newColor;
 80065a8:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80065ac:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80065b0:	f00b fe24 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065b4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065b8:	ee18 3a10 	vmov	r3, s16
 80065bc:	333c      	adds	r3, #60	; 0x3c
 80065be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065c2:	2325      	movs	r3, #37	; 0x25
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80065c4:	ee18 0a10 	vmov	r0, s16
 80065c8:	a90a      	add	r1, sp, #40	; 0x28
 80065ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065ce:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80065d2:	f00c f8ad 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065d6:	ee18 1a10 	vmov	r1, s16
 80065da:	4630      	mov	r0, r6
 80065dc:	f009 fa80 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80065e0:	220c      	movs	r2, #12
 80065e2:	4650      	mov	r0, sl
 80065e4:	2136      	movs	r1, #54	; 0x36
 80065e6:	f7fc f9b7 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80065ea:	4651      	mov	r1, sl
 80065ec:	4640      	mov	r0, r8
        color = newColor;
 80065ee:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80065f2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80065f6:	f00b fe01 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065fa:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065fe:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006602:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006606:	2326      	movs	r3, #38	; 0x26
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8006608:	a90a      	add	r1, sp, #40	; 0x28
 800660a:	4650      	mov	r0, sl
 800660c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006610:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006614:	f00c f88c 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006618:	4630      	mov	r0, r6
 800661a:	4651      	mov	r1, sl
 800661c:	f009 fa60 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006620:	4620      	mov	r0, r4
 8006622:	b00d      	add	sp, #52	; 0x34
 8006624:	ecbd 8b02 	vpop	{d8}
 8006628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800662c:	0802dc80 	.word	0x0802dc80
 8006630:	0802eb04 	.word	0x0802eb04
 8006634:	0802ed50 	.word	0x0802ed50
 8006638:	0802e838 	.word	0x0802e838
 800663c:	0802dc68 	.word	0x0802dc68
 8006640:	08006369 	.word	0x08006369
 8006644:	0802c5b0 	.word	0x0802c5b0

08006648 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006648:	4770      	bx	lr

0800664a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800664a:	4770      	bx	lr

0800664c <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800664c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800664e:	68c2      	ldr	r2, [r0, #12]
 8006650:	6844      	ldr	r4, [r0, #4]
 8006652:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006654:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006656:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800665a:	07d2      	lsls	r2, r2, #31
 800665c:	bf48      	it	mi
 800665e:	5962      	ldrmi	r2, [r4, r5]
 8006660:	689b      	ldr	r3, [r3, #8]
    }
 8006662:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006664:	bf48      	it	mi
 8006666:	58d3      	ldrmi	r3, [r2, r3]
 8006668:	4718      	bx	r3

0800666a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800666a:	6843      	ldr	r3, [r0, #4]
 800666c:	b12b      	cbz	r3, 800667a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800666e:	6883      	ldr	r3, [r0, #8]
 8006670:	b92b      	cbnz	r3, 800667e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006672:	68c0      	ldr	r0, [r0, #12]
 8006674:	f000 0001 	and.w	r0, r0, #1
 8006678:	4770      	bx	lr
 800667a:	4618      	mov	r0, r3
 800667c:	4770      	bx	lr
 800667e:	2001      	movs	r0, #1
    }
 8006680:	4770      	bx	lr

08006682 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006682:	b510      	push	{r4, lr}
 8006684:	2110      	movs	r1, #16
 8006686:	4604      	mov	r4, r0
 8006688:	f023 fbb7 	bl	8029dfa <_ZdlPvj>
 800668c:	4620      	mov	r0, r4
 800668e:	bd10      	pop	{r4, pc}

08006690 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006690:	b510      	push	{r4, lr}
 8006692:	4b03      	ldr	r3, [pc, #12]	; (80066a0 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006694:	6003      	str	r3, [r0, #0]
 8006696:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006698:	f00d fdf8 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800669c:	4620      	mov	r0, r4
 800669e:	bd10      	pop	{r4, pc}
 80066a0:	0802dccc 	.word	0x0802dccc

080066a4 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80066a4:	b507      	push	{r0, r1, r2, lr}
 80066a6:	4b07      	ldr	r3, [pc, #28]	; (80066c4 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80066a8:	6003      	str	r3, [r0, #0]
 80066aa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066ac:	f00d fdee 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066b0:	9801      	ldr	r0, [sp, #4]
 80066b2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80066b6:	f023 fba0 	bl	8029dfa <_ZdlPvj>
 80066ba:	9801      	ldr	r0, [sp, #4]
 80066bc:	b003      	add	sp, #12
 80066be:	f85d fb04 	ldr.w	pc, [sp], #4
 80066c2:	bf00      	nop
 80066c4:	0802dccc 	.word	0x0802dccc

080066c8 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80066c8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80066ca:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80066ce:	4299      	cmp	r1, r3
{
 80066d0:	4604      	mov	r4, r0
 80066d2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80066d4:	d103      	bne.n	80066de <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80066d6:	f00f fadb 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80066da:	f7fd fba3 	bl	8003e24 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80066de:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80066e2:	429d      	cmp	r5, r3
 80066e4:	d103      	bne.n	80066ee <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80066e6:	f00f fad3 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80066ea:	f7fd fbbb 	bl	8003e64 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80066ee:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80066f2:	42a5      	cmp	r5, r4
 80066f4:	d105      	bne.n	8006702 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80066f6:	f00f facb 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80066fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80066fe:	f7fd bbc1 	b.w	8003e84 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006702:	bd38      	pop	{r3, r4, r5, pc}

08006704 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006708:	ed2d 8b06 	vpush	{d8-d10}
 800670c:	4604      	mov	r4, r0
 800670e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006710:	46a3      	mov	fp, r4
 8006712:	2500      	movs	r5, #0
 8006714:	f010 ff3c 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 8006718:	4b66      	ldr	r3, [pc, #408]	; (80068b4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 800671a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800671c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006720:	2226      	movs	r2, #38	; 0x26
 8006722:	4629      	mov	r1, r5
 8006724:	4658      	mov	r0, fp
 8006726:	f024 fb80 	bl	802ae2a <memset>
 800672a:	4658      	mov	r0, fp
 800672c:	f7fc f946 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006730:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006734:	26ff      	movs	r6, #255	; 0xff
 8006736:	4b60      	ldr	r3, [pc, #384]	; (80068b8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006738:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800673a:	2226      	movs	r2, #38	; 0x26
 800673c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006740:	4629      	mov	r1, r5
 8006742:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006746:	4650      	mov	r0, sl
 8006748:	66a5      	str	r5, [r4, #104]	; 0x68
 800674a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800674e:	f024 fb6c 	bl	802ae2a <memset>
 8006752:	4650      	mov	r0, sl
 8006754:	f7fc f932 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006758:	4b58      	ldr	r3, [pc, #352]	; (80068bc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 800675a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800675c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006760:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006764:	a90a      	add	r1, sp, #40	; 0x28
 8006766:	4650      	mov	r0, sl
 8006768:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800676c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006770:	f00c fd8f 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006774:	4648      	mov	r0, r9
 8006776:	f7fc f977 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800677a:	4b51      	ldr	r3, [pc, #324]	; (80068c0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 800677c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006780:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006784:	4618      	mov	r0, r3
 8006786:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800678a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800678e:	ee08 3a90 	vmov	s17, r3
 8006792:	f7fc f969 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006796:	4638      	mov	r0, r7
 8006798:	f00b fa6e 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 800679c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80067a0:	4618      	mov	r0, r3
 80067a2:	9303      	str	r3, [sp, #12]
 80067a4:	f7fb ff06 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067a8:	4b46      	ldr	r3, [pc, #280]	; (80068c4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 80067aa:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80067ae:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80067b2:	3324      	adds	r3, #36	; 0x24
 80067b4:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80067b8:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80067bc:	4640      	mov	r0, r8
 80067be:	f7fc f953 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80067c2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80067c6:	4618      	mov	r0, r3
 80067c8:	ee08 3a10 	vmov	s16, r3
 80067cc:	f7fc f94c 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80067d0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80067d4:	4618      	mov	r0, r3
 80067d6:	ee09 3a10 	vmov	s18, r3
 80067da:	f00c fe91 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067de:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80067e2:	4618      	mov	r0, r3
 80067e4:	ee09 3a90 	vmov	s19, r3
 80067e8:	f00c fe8a 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067ec:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80067f0:	4618      	mov	r0, r3
 80067f2:	ee0a 3a10 	vmov	s20, r3
 80067f6:	f00c fe83 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80067fa:	4a33      	ldr	r2, [pc, #204]	; (80068c8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80067fc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006800:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006804:	4a31      	ldr	r2, [pc, #196]	; (80068cc <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006806:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800680a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800680e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006812:	f00d fd31 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006816:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800681a:	462a      	mov	r2, r5
 800681c:	4658      	mov	r0, fp
 800681e:	9300      	str	r3, [sp, #0]
 8006820:	4629      	mov	r1, r5
 8006822:	23f0      	movs	r3, #240	; 0xf0
 8006824:	f7fc f8a5 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006828:	1d26      	adds	r6, r4, #4
        color = newColor;
 800682a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800682e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006830:	4659      	mov	r1, fp
 8006832:	4630      	mov	r0, r6
 8006834:	f009 f954 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006838:	462a      	mov	r2, r5
 800683a:	4650      	mov	r0, sl
 800683c:	4629      	mov	r1, r5
 800683e:	f7fc f88b 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006842:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006844:	4650      	mov	r0, sl
 8006846:	a90a      	add	r1, sp, #40	; 0x28
 8006848:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800684c:	f00c fd21 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006850:	4651      	mov	r1, sl
 8006852:	4630      	mov	r0, r6
 8006854:	f009 f944 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006858:	f44f 729a 	mov.w	r2, #308	; 0x134
 800685c:	2156      	movs	r1, #86	; 0x56
 800685e:	4648      	mov	r0, r9
 8006860:	f7fc f87a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006864:	f04f 33ff 	mov.w	r3, #4294967295
 8006868:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800686c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006870:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006874:	f10d 0b10 	add.w	fp, sp, #16
 8006878:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800687c:	4649      	mov	r1, r9
 800687e:	4658      	mov	r0, fp
 8006880:	4798      	blx	r3
 8006882:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006886:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800688a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800688e:	4b10      	ldr	r3, [pc, #64]	; (80068d0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006890:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006892:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006896:	b92b      	cbnz	r3, 80068a4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006898:	4b0e      	ldr	r3, [pc, #56]	; (80068d4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 800689a:	4a0f      	ldr	r2, [pc, #60]	; (80068d8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 800689c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800689e:	480f      	ldr	r0, [pc, #60]	; (80068dc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 80068a0:	f024 f8be 	bl	802aa20 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80068a4:	4b0e      	ldr	r3, [pc, #56]	; (80068e0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068a6:	881b      	ldrh	r3, [r3, #0]
 80068a8:	2b1e      	cmp	r3, #30
 80068aa:	d81d      	bhi.n	80068e8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 80068ac:	4b0d      	ldr	r3, [pc, #52]	; (80068e4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 80068ae:	4a0a      	ldr	r2, [pc, #40]	; (80068d8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80068b0:	2161      	movs	r1, #97	; 0x61
 80068b2:	e7f4      	b.n	800689e <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 80068b4:	0802dccc 	.word	0x0802dccc
 80068b8:	0802eb04 	.word	0x0802eb04
 80068bc:	0802ed50 	.word	0x0802ed50
 80068c0:	0802c650 	.word	0x0802c650
 80068c4:	0802e838 	.word	0x0802e838
 80068c8:	0802dcb4 	.word	0x0802dcb4
 80068cc:	080066c9 	.word	0x080066c9
 80068d0:	20013314 	.word	0x20013314
 80068d4:	0802c400 	.word	0x0802c400
 80068d8:	0802c505 	.word	0x0802c505
 80068dc:	0802c47d 	.word	0x0802c47d
 80068e0:	20013318 	.word	0x20013318
 80068e4:	0802c4c4 	.word	0x0802c4c4
        return texts->getText(typedTextId);
 80068e8:	4b95      	ldr	r3, [pc, #596]	; (8006b40 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 80068ea:	211e      	movs	r1, #30
 80068ec:	6818      	ldr	r0, [r3, #0]
 80068ee:	f001 fab5 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 80068f2:	4a94      	ldr	r2, [pc, #592]	; (8006b44 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 80068f4:	4603      	mov	r3, r0
 80068f6:	2104      	movs	r1, #4
 80068f8:	4650      	mov	r0, sl
 80068fa:	f012 fb77 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80068fe:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006902:	4648      	mov	r0, r9
 8006904:	f00b fef4 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006908:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006b48 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 800690c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006910:	231f      	movs	r3, #31
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006912:	a90a      	add	r1, sp, #40	; 0x28
 8006914:	4648      	mov	r0, r9
 8006916:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800691a:	f00b ff09 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800691e:	4649      	mov	r1, r9
 8006920:	4630      	mov	r0, r6
 8006922:	f009 f8dd 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006926:	223c      	movs	r2, #60	; 0x3c
 8006928:	ee18 0a90 	vmov	r0, s17
 800692c:	2129      	movs	r1, #41	; 0x29
 800692e:	f7fc f813 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006932:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006936:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800693a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800693e:	4658      	mov	r0, fp
        linespace = space;
 8006940:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006944:	f00b fc5a 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006948:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800694c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006950:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006954:	232e      	movs	r3, #46	; 0x2e
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006956:	ee18 0a90 	vmov	r0, s17
 800695a:	a90a      	add	r1, sp, #40	; 0x28
 800695c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006960:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006964:	f00b fee4 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006968:	ee18 1a90 	vmov	r1, s17
 800696c:	4630      	mov	r0, r6
 800696e:	f009 f8b7 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006972:	230a      	movs	r3, #10
 8006974:	9300      	str	r3, [sp, #0]
 8006976:	2232      	movs	r2, #50	; 0x32
 8006978:	23f0      	movs	r3, #240	; 0xf0
 800697a:	4629      	mov	r1, r5
 800697c:	4638      	mov	r0, r7
 800697e:	f7fb fff8 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006982:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006986:	22a0      	movs	r2, #160	; 0xa0
 8006988:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800698c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006990:	9b03      	ldr	r3, [sp, #12]
 8006992:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006996:	4611      	mov	r1, r2
 8006998:	4638      	mov	r0, r7
 800699a:	f00b fa83 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800699e:	22a0      	movs	r2, #160	; 0xa0
 80069a0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80069a4:	4638      	mov	r0, r7
 80069a6:	f00b fa88 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80069aa:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80069ae:	2b20      	cmp	r3, #32
 80069b0:	d005      	beq.n	80069be <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80069b2:	2320      	movs	r3, #32
 80069b4:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80069b8:	4638      	mov	r0, r7
 80069ba:	f00b f97d 	bl	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80069be:	4638      	mov	r0, r7
 80069c0:	2101      	movs	r1, #1
 80069c2:	f00b fa85 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80069c6:	4639      	mov	r1, r7
 80069c8:	4630      	mov	r0, r6
 80069ca:	f009 f889 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80069ce:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80069d2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80069d4:	2223      	movs	r2, #35	; 0x23
 80069d6:	4640      	mov	r0, r8
        linespace = space;
 80069d8:	f04f 0a00 	mov.w	sl, #0
 80069dc:	2145      	movs	r1, #69	; 0x45
 80069de:	f7fb ffbb 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80069e2:	4641      	mov	r1, r8
 80069e4:	4638      	mov	r0, r7
        color = newColor;
 80069e6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80069ea:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80069ee:	f00b fc05 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069f2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80069f6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80069fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069fe:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006b48 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8006a02:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a06:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006a08:	a90a      	add	r1, sp, #40	; 0x28
 8006a0a:	4640      	mov	r0, r8
 8006a0c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a10:	f00b fe8e 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a14:	4641      	mov	r1, r8
 8006a16:	4630      	mov	r0, r6
 8006a18:	f009 f862 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006a1c:	ee18 0a10 	vmov	r0, s16
 8006a20:	220c      	movs	r2, #12
 8006a22:	2136      	movs	r1, #54	; 0x36
 8006a24:	f7fb ff98 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006a28:	ee18 1a10 	vmov	r1, s16
 8006a2c:	4638      	mov	r0, r7
        color = newColor;
 8006a2e:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006a32:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006a36:	f00b fbe1 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a3a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a3e:	ee18 3a10 	vmov	r3, s16
 8006a42:	333c      	adds	r3, #60	; 0x3c
 8006a44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a48:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006a4a:	ee18 0a10 	vmov	r0, s16
 8006a4e:	a90a      	add	r1, sp, #40	; 0x28
 8006a50:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a54:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a58:	f00b fe6a 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a5c:	ee18 1a10 	vmov	r1, s16
 8006a60:	4630      	mov	r0, r6
 8006a62:	f009 f83d 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006a66:	ee19 0a10 	vmov	r0, s18
 8006a6a:	22f0      	movs	r2, #240	; 0xf0
 8006a6c:	2121      	movs	r1, #33	; 0x21
 8006a6e:	f7fb ff73 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006a72:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a76:	aa0a      	add	r2, sp, #40	; 0x28
 8006a78:	f04f 0802 	mov.w	r8, #2
 8006a7c:	a909      	add	r1, sp, #36	; 0x24
 8006a7e:	ee19 0a10 	vmov	r0, s18
 8006a82:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a86:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006a8a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a8e:	f00c fa0a 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006a92:	233f      	movs	r3, #63	; 0x3f
 8006a94:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006a98:	3710      	adds	r7, #16
        updateTextPosition();
 8006a9a:	ee19 0a10 	vmov	r0, s18
 8006a9e:	f7fb ff9f 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006aa2:	ee19 1a10 	vmov	r1, s18
 8006aa6:	4630      	mov	r0, r6
        colorPressed = col;
 8006aa8:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006aac:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006ab0:	f009 f816 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006ab4:	ee19 0a90 	vmov	r0, s19
 8006ab8:	22aa      	movs	r2, #170	; 0xaa
 8006aba:	2121      	movs	r1, #33	; 0x21
 8006abc:	f7fb ff4c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ac0:	aa0a      	add	r2, sp, #40	; 0x28
 8006ac2:	a909      	add	r1, sp, #36	; 0x24
 8006ac4:	ee19 0a90 	vmov	r0, s19
 8006ac8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006acc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006ad0:	f00c f9e9 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006ad4:	233e      	movs	r3, #62	; 0x3e
 8006ad6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006ada:	ee19 0a90 	vmov	r0, s19
 8006ade:	f7fb ff7f 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ae2:	ee19 1a90 	vmov	r1, s19
 8006ae6:	4630      	mov	r0, r6
        colorPressed = col;
 8006ae8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006aec:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006af0:	f008 fff6 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006af4:	ee1a 0a10 	vmov	r0, s20
 8006af8:	2264      	movs	r2, #100	; 0x64
 8006afa:	2121      	movs	r1, #33	; 0x21
 8006afc:	f7fb ff2c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b00:	aa0a      	add	r2, sp, #40	; 0x28
 8006b02:	a909      	add	r1, sp, #36	; 0x24
 8006b04:	ee1a 0a10 	vmov	r0, s20
 8006b08:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b0c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b10:	f00c f9c9 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b14:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006b16:	ee1a 0a10 	vmov	r0, s20
 8006b1a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006b1e:	f7fb ff5f 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b22:	4630      	mov	r0, r6
        colorPressed = col;
 8006b24:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006b28:	ee1a 1a10 	vmov	r1, s20
 8006b2c:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006b30:	f008 ffd6 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b34:	4620      	mov	r0, r4
 8006b36:	b00d      	add	sp, #52	; 0x34
 8006b38:	ecbd 8b06 	vpop	{d8-d10}
 8006b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b40:	20013320 	.word	0x20013320
 8006b44:	0802c53d 	.word	0x0802c53d
 8006b48:	0802c5b0 	.word	0x0802c5b0

08006b4c <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006b4c:	4770      	bx	lr

08006b4e <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006b4e:	4770      	bx	lr

08006b50 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b50:	4770      	bx	lr

08006b52 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b52:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b54:	68c2      	ldr	r2, [r0, #12]
 8006b56:	6844      	ldr	r4, [r0, #4]
 8006b58:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006b5a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b5c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b60:	07d2      	lsls	r2, r2, #31
 8006b62:	bf48      	it	mi
 8006b64:	5962      	ldrmi	r2, [r4, r5]
 8006b66:	689b      	ldr	r3, [r3, #8]
    }
 8006b68:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b6a:	bf48      	it	mi
 8006b6c:	58d3      	ldrmi	r3, [r2, r3]
 8006b6e:	4718      	bx	r3

08006b70 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006b70:	6843      	ldr	r3, [r0, #4]
 8006b72:	b12b      	cbz	r3, 8006b80 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006b74:	6883      	ldr	r3, [r0, #8]
 8006b76:	b92b      	cbnz	r3, 8006b84 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006b78:	68c0      	ldr	r0, [r0, #12]
 8006b7a:	f000 0001 	and.w	r0, r0, #1
 8006b7e:	4770      	bx	lr
 8006b80:	4618      	mov	r0, r3
 8006b82:	4770      	bx	lr
 8006b84:	2001      	movs	r0, #1
    }
 8006b86:	4770      	bx	lr

08006b88 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b88:	b510      	push	{r4, lr}
 8006b8a:	2110      	movs	r1, #16
 8006b8c:	4604      	mov	r4, r0
 8006b8e:	f023 f934 	bl	8029dfa <_ZdlPvj>
 8006b92:	4620      	mov	r0, r4
 8006b94:	bd10      	pop	{r4, pc}
	...

08006b98 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006b98:	b510      	push	{r4, lr}
 8006b9a:	4b03      	ldr	r3, [pc, #12]	; (8006ba8 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006b9c:	6003      	str	r3, [r0, #0]
 8006b9e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ba0:	f00d fb74 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ba4:	4620      	mov	r0, r4
 8006ba6:	bd10      	pop	{r4, pc}
 8006ba8:	0802dd18 	.word	0x0802dd18

08006bac <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006bac:	b507      	push	{r0, r1, r2, lr}
 8006bae:	4b07      	ldr	r3, [pc, #28]	; (8006bcc <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006bb0:	6003      	str	r3, [r0, #0]
 8006bb2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006bb4:	f00d fb6a 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006bb8:	9801      	ldr	r0, [sp, #4]
 8006bba:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8006bbe:	f023 f91c 	bl	8029dfa <_ZdlPvj>
 8006bc2:	9801      	ldr	r0, [sp, #4]
 8006bc4:	b003      	add	sp, #12
 8006bc6:	f85d fb04 	ldr.w	pc, [sp], #4
 8006bca:	bf00      	nop
 8006bcc:	0802dd18 	.word	0x0802dd18

08006bd0 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8006bd0:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8006bd2:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8006bd6:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8006bda:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006bdc:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8006bde:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006be2:	d105      	bne.n	8006bf0 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8006be4:	6803      	ldr	r3, [r0, #0]
 8006be6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006be8:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8006bea:	2300      	movs	r3, #0
 8006bec:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8006bf0:	bd10      	pop	{r4, pc}

08006bf2 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006bf2:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006bf6:	4288      	cmp	r0, r1
{
 8006bf8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006bfa:	d105      	bne.n	8006c08 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006bfc:	f00f f848 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006c00:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006c04:	f7fd b91e 	b.w	8003e44 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006c08:	bd08      	pop	{r3, pc}
	...

08006c0c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c10:	ed2d 8b0a 	vpush	{d8-d12}
 8006c14:	4604      	mov	r4, r0
 8006c16:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8006c18:	46a1      	mov	r9, r4
 8006c1a:	2500      	movs	r5, #0
 8006c1c:	f010 fcb8 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 8006c20:	4baa      	ldr	r3, [pc, #680]	; (8006ecc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006c22:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006c24:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006c28:	2226      	movs	r2, #38	; 0x26
 8006c2a:	4629      	mov	r1, r5
 8006c2c:	4648      	mov	r0, r9
 8006c2e:	f024 f8fc 	bl	802ae2a <memset>
 8006c32:	4648      	mov	r0, r9
 8006c34:	f7fb fec2 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006c38:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006c3c:	26ff      	movs	r6, #255	; 0xff
 8006c3e:	4ba4      	ldr	r3, [pc, #656]	; (8006ed0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8006c40:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006c42:	2226      	movs	r2, #38	; 0x26
 8006c44:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c48:	4629      	mov	r1, r5
 8006c4a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c4e:	4640      	mov	r0, r8
 8006c50:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c52:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c56:	f024 f8e8 	bl	802ae2a <memset>
 8006c5a:	4640      	mov	r0, r8
 8006c5c:	f7fb feae 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8006c60:	4b9c      	ldr	r3, [pc, #624]	; (8006ed4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8006c62:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006c64:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006c68:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006c6c:	a90a      	add	r1, sp, #40	; 0x28
 8006c6e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006c72:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006c74:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006c78:	f00c fb0b 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c7c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006c80:	4658      	mov	r0, fp
 8006c82:	f7fb fef1 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006c86:	4638      	mov	r0, r7
 8006c88:	f00b ffc6 	bl	8012c18 <_ZN8touchgfx5GaugeC1Ev>
 8006c8c:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8006c90:	4618      	mov	r0, r3
 8006c92:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006c96:	4e90      	ldr	r6, [pc, #576]	; (8006ed8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
        : TextArea()
 8006c98:	f7fb fee6 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006c9c:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8006ca0:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8006ca4:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006ca6:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8006caa:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8006cae:	f7fb fedb 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006cb2:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8006cb6:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8006cba:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006cbc:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8006cc0:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8006cc4:	f7fb fed0 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006cc8:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8006ccc:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8006cd0:	4618      	mov	r0, r3
 8006cd2:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8006cd6:	ee0a 3a90 	vmov	s21, r3
 8006cda:	f7fb fec5 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006cde:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8006ce2:	4618      	mov	r0, r3
 8006ce4:	ee0b 3a10 	vmov	s22, r3
 8006ce8:	f7fb febe 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006cec:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8006cf0:	4618      	mov	r0, r3
 8006cf2:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8006cf6:	ee0b 3a90 	vmov	s23, r3
 8006cfa:	f7fb feb5 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006cfe:	4650      	mov	r0, sl
 8006d00:	f00a ffba 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 8006d04:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006d08:	4618      	mov	r0, r3
 8006d0a:	9303      	str	r3, [sp, #12]
 8006d0c:	f7fb fc52 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006d10:	4b72      	ldr	r3, [pc, #456]	; (8006edc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8006d12:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8006d16:	3324      	adds	r3, #36	; 0x24
 8006d18:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8006d1c:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8006d20:	4618      	mov	r0, r3
 8006d22:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8006d26:	ee08 3a10 	vmov	s16, r3
 8006d2a:	f7fb fe9d 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006d2e:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8006d32:	4618      	mov	r0, r3
 8006d34:	ee08 3a90 	vmov	s17, r3
 8006d38:	f7fb fe96 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8006d3c:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8006d40:	4618      	mov	r0, r3
 8006d42:	ee0c 3a10 	vmov	s24, r3
 8006d46:	f00c fbdb 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006d4a:	4a65      	ldr	r2, [pc, #404]	; (8006ee0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006d4c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006d50:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8006d54:	4a63      	ldr	r2, [pc, #396]	; (8006ee4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006d56:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8006d5a:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006d5e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006d62:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8006d66:	f00d fa87 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006d6a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006d6e:	462a      	mov	r2, r5
 8006d70:	4648      	mov	r0, r9
 8006d72:	9300      	str	r3, [sp, #0]
 8006d74:	4629      	mov	r1, r5
 8006d76:	23f0      	movs	r3, #240	; 0xf0
 8006d78:	f7fb fdfb 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d7c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006d7e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006d82:	66a3      	str	r3, [r4, #104]	; 0x68
 8006d84:	4649      	mov	r1, r9
 8006d86:	4630      	mov	r0, r6
 8006d88:	f008 feaa 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006d8c:	462a      	mov	r2, r5
 8006d8e:	4640      	mov	r0, r8
 8006d90:	4629      	mov	r1, r5
 8006d92:	f7fb fde1 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006d96:	f04f 0908 	mov.w	r9, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006d9a:	4640      	mov	r0, r8
 8006d9c:	a90a      	add	r1, sp, #40	; 0x28
 8006d9e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8006da2:	f00c fa76 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006da6:	4641      	mov	r1, r8
 8006da8:	4630      	mov	r0, r6
 8006daa:	f008 fe99 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8006dae:	223c      	movs	r2, #60	; 0x3c
 8006db0:	4658      	mov	r0, fp
 8006db2:	211f      	movs	r1, #31
 8006db4:	f7fb fdd0 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8006db8:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8006dbc:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006dc0:	4659      	mov	r1, fp
        color = newColor;
 8006dc2:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006dc6:	4640      	mov	r0, r8
        linespace = space;
 8006dc8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006dcc:	f00b fa16 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006dd0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006dd4:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006dd8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006ddc:	4b42      	ldr	r3, [pc, #264]	; (8006ee8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8006dde:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006de0:	4658      	mov	r0, fp
 8006de2:	232d      	movs	r3, #45	; 0x2d
 8006de4:	a90a      	add	r1, sp, #40	; 0x28
 8006de6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006dea:	f00b fca1 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006dee:	4659      	mov	r1, fp
 8006df0:	4630      	mov	r0, r6
 8006df2:	f008 fe75 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006df6:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8006df8:	4638      	mov	r0, r7
 8006dfa:	a90a      	add	r1, sp, #40	; 0x28
 8006dfc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e00:	f008 fe00 	bl	800fa04 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8006e04:	236a      	movs	r3, #106	; 0x6a
 8006e06:	4638      	mov	r0, r7
 8006e08:	9300      	str	r3, [sp, #0]
 8006e0a:	225e      	movs	r2, #94	; 0x5e
 8006e0c:	23b8      	movs	r3, #184	; 0xb8
 8006e0e:	211c      	movs	r1, #28
 8006e10:	f7fb fdaf 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8006e14:	225c      	movs	r2, #92	; 0x5c
 8006e16:	4611      	mov	r1, r2
 8006e18:	4638      	mov	r0, r7
 8006e1a:	f00b ffa8 	bl	8012d6e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8006e1e:	4638      	mov	r0, r7
 8006e20:	225a      	movs	r2, #90	; 0x5a
 8006e22:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8006e26:	f00c f827 	bl	8012e78 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8006e2a:	462b      	mov	r3, r5
 8006e2c:	225a      	movs	r2, #90	; 0x5a
 8006e2e:	4638      	mov	r0, r7
 8006e30:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8006e34:	9500      	str	r5, [sp, #0]
 8006e36:	f008 fc92 	bl	800f75e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8006e3a:	4638      	mov	r0, r7
 8006e3c:	4629      	mov	r1, r5
 8006e3e:	f00b ffc5 	bl	8012dcc <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8006e42:	464a      	mov	r2, r9
 8006e44:	2335      	movs	r3, #53	; 0x35
 8006e46:	4638      	mov	r0, r7
 8006e48:	2105      	movs	r1, #5
 8006e4a:	f00b ff7b 	bl	8012d44 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006e4e:	4638      	mov	r0, r7
 8006e50:	2101      	movs	r1, #1
 8006e52:	f00b ff19 	bl	8012c88 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006e56:	4638      	mov	r0, r7
 8006e58:	2101      	movs	r1, #1
 8006e5a:	f00b ff18 	bl	8012c8e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8006e5e:	f04f 0b0f 	mov.w	fp, #15
 8006e62:	4639      	mov	r1, r7
 8006e64:	4630      	mov	r0, r6
 8006e66:	f008 fe3b 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e6a:	22e6      	movs	r2, #230	; 0xe6
 8006e6c:	ee19 0a10 	vmov	r0, s18
 8006e70:	23f0      	movs	r3, #240	; 0xf0
 8006e72:	4629      	mov	r1, r5
 8006e74:	f8cd b000 	str.w	fp, [sp]
 8006e78:	f7fb fd7b 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006e7c:	f04f 33ff 	mov.w	r3, #4294967295
 8006e80:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8006e84:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8006e88:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8006e8c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006e90:	4f16      	ldr	r7, [pc, #88]	; (8006eec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8006e92:	ee19 1a10 	vmov	r1, s18
 8006e96:	4640      	mov	r0, r8
 8006e98:	4798      	blx	r3
 8006e9a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e9e:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8006ea2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ea6:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8006ea8:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 8006eac:	b92b      	cbnz	r3, 8006eba <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ae>
 8006eae:	4b10      	ldr	r3, [pc, #64]	; (8006ef0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8006eb0:	4a10      	ldr	r2, [pc, #64]	; (8006ef4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8006eb2:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006eb4:	4810      	ldr	r0, [pc, #64]	; (8006ef8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8006eb6:	f023 fdb3 	bl	802aa20 <__assert_func>
 8006eba:	4b10      	ldr	r3, [pc, #64]	; (8006efc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 8006ebc:	881b      	ldrh	r3, [r3, #0]
 8006ebe:	2b0d      	cmp	r3, #13
 8006ec0:	d820      	bhi.n	8006f04 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 8006ec2:	4b0f      	ldr	r3, [pc, #60]	; (8006f00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>)
 8006ec4:	4a0b      	ldr	r2, [pc, #44]	; (8006ef4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8006ec6:	2161      	movs	r1, #97	; 0x61
 8006ec8:	e7f4      	b.n	8006eb4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 8006eca:	bf00      	nop
 8006ecc:	0802dd18 	.word	0x0802dd18
 8006ed0:	0802eb04 	.word	0x0802eb04
 8006ed4:	0802ed50 	.word	0x0802ed50
 8006ed8:	0802c650 	.word	0x0802c650
 8006edc:	0802e838 	.word	0x0802e838
 8006ee0:	0802dd00 	.word	0x0802dd00
 8006ee4:	08006bf3 	.word	0x08006bf3
 8006ee8:	0802c5b0 	.word	0x0802c5b0
 8006eec:	20013314 	.word	0x20013314
 8006ef0:	0802c400 	.word	0x0802c400
 8006ef4:	0802c505 	.word	0x0802c505
 8006ef8:	0802c47d 	.word	0x0802c47d
 8006efc:	20013318 	.word	0x20013318
 8006f00:	0802c4c4 	.word	0x0802c4c4
        return texts->getText(typedTextId);
 8006f04:	4bdf      	ldr	r3, [pc, #892]	; (8007284 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8006f06:	210d      	movs	r1, #13
 8006f08:	6818      	ldr	r0, [r3, #0]
 8006f0a:	f000 ffa7 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8006f0e:	4ade      	ldr	r2, [pc, #888]	; (8007288 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 8006f10:	4603      	mov	r3, r0
 8006f12:	210a      	movs	r1, #10
 8006f14:	4648      	mov	r0, r9
 8006f16:	f012 f869 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006f1a:	4bdc      	ldr	r3, [pc, #880]	; (800728c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
        wc1 = value;
 8006f1c:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8006f20:	ee19 0a10 	vmov	r0, s18
 8006f24:	930a      	str	r3, [sp, #40]	; 0x28
 8006f26:	a90a      	add	r1, sp, #40	; 0x28
 8006f28:	2310      	movs	r3, #16
 8006f2a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f2e:	f00b fbff 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f32:	ee19 1a10 	vmov	r1, s18
 8006f36:	4630      	mov	r0, r6
 8006f38:	f008 fdd2 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8006f3c:	22d7      	movs	r2, #215	; 0xd7
 8006f3e:	ee19 0a90 	vmov	r0, s19
 8006f42:	23f0      	movs	r3, #240	; 0xf0
 8006f44:	4629      	mov	r1, r5
 8006f46:	f8cd b000 	str.w	fp, [sp]
 8006f4a:	f7fb fd12 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f4e:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8006f52:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8006f56:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8006f5a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006f5e:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8006f62:	4640      	mov	r0, r8
 8006f64:	ee19 1a90 	vmov	r1, s19
 8006f68:	4798      	blx	r3
 8006f6a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006f6e:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8006f72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006f76:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8006f78:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8006f7c:	2b00      	cmp	r3, #0
 8006f7e:	d096      	beq.n	8006eae <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f80:	49c3      	ldr	r1, [pc, #780]	; (8007290 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 8006f82:	880b      	ldrh	r3, [r1, #0]
 8006f84:	2b0e      	cmp	r3, #14
 8006f86:	d99c      	bls.n	8006ec2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b6>
        return texts->getText(typedTextId);
 8006f88:	4abe      	ldr	r2, [pc, #760]	; (8007284 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8006f8a:	210e      	movs	r1, #14
 8006f8c:	6810      	ldr	r0, [r2, #0]
 8006f8e:	f000 ff65 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8006f92:	4abd      	ldr	r2, [pc, #756]	; (8007288 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 8006f94:	4603      	mov	r3, r0
 8006f96:	210a      	movs	r1, #10
 8006f98:	4648      	mov	r0, r9
 8006f9a:	f012 f827 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006f9e:	4bbb      	ldr	r3, [pc, #748]	; (800728c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
 8006fa0:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8006fa4:	a80a      	add	r0, sp, #40	; 0x28
 8006fa6:	4601      	mov	r1, r0
 8006fa8:	930a      	str	r3, [sp, #40]	; 0x28
 8006faa:	ee19 0a90 	vmov	r0, s19
 8006fae:	2311      	movs	r3, #17
 8006fb0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006fb4:	f00b fbbc 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fb8:	ee19 1a90 	vmov	r1, s19
 8006fbc:	4630      	mov	r0, r6
 8006fbe:	f008 fd8f 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8006fc2:	22c8      	movs	r2, #200	; 0xc8
 8006fc4:	ee1a 0a10 	vmov	r0, s20
 8006fc8:	23f0      	movs	r3, #240	; 0xf0
 8006fca:	4629      	mov	r1, r5
 8006fcc:	f8cd b000 	str.w	fp, [sp]
 8006fd0:	f7fb fccf 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006fd4:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 8006fd8:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8006fdc:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8006fe0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006fe4:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8006fe8:	ee1a 1a10 	vmov	r1, s20
 8006fec:	4640      	mov	r0, r8
 8006fee:	4798      	blx	r3
 8006ff0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006ff4:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006ff8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006ffc:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8006ffe:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007002:	2b00      	cmp	r3, #0
 8007004:	f43f af53 	beq.w	8006eae <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007008:	49a1      	ldr	r1, [pc, #644]	; (8007290 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 800700a:	880b      	ldrh	r3, [r1, #0]
 800700c:	2b0f      	cmp	r3, #15
 800700e:	f67f af58 	bls.w	8006ec2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b6>
        return texts->getText(typedTextId);
 8007012:	4a9c      	ldr	r2, [pc, #624]	; (8007284 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        : typedTextId(id)
 8007014:	4f9d      	ldr	r7, [pc, #628]	; (800728c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
        return texts->getText(typedTextId);
 8007016:	6810      	ldr	r0, [r2, #0]
 8007018:	4659      	mov	r1, fp
 800701a:	f000 ff1f 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 800701e:	4a9a      	ldr	r2, [pc, #616]	; (8007288 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 8007020:	4603      	mov	r3, r0
 8007022:	210a      	movs	r1, #10
 8007024:	4648      	mov	r0, r9
 8007026:	f011 ffe1 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800702a:	2312      	movs	r3, #18
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 800702c:	ee1a 0a10 	vmov	r0, s20
 8007030:	a90a      	add	r1, sp, #40	; 0x28
 8007032:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007036:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800703a:	970a      	str	r7, [sp, #40]	; 0x28
 800703c:	f00b fb78 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007040:	ee1a 1a10 	vmov	r1, s20
 8007044:	4630      	mov	r0, r6
 8007046:	f008 fd4b 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 800704a:	224c      	movs	r2, #76	; 0x4c
 800704c:	ee1a 0a90 	vmov	r0, s21
 8007050:	2171      	movs	r1, #113	; 0x71
 8007052:	f7fb fc81 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007056:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800705a:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 800705e:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8007062:	4640      	mov	r0, r8
        linespace = space;
 8007064:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007068:	f00b f8c8 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800706c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007070:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007074:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007078:	2313      	movs	r3, #19
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800707a:	ee1a 0a90 	vmov	r0, s21
 800707e:	a90a      	add	r1, sp, #40	; 0x28
 8007080:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007084:	970a      	str	r7, [sp, #40]	; 0x28
 8007086:	f00b fb53 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800708a:	ee1a 1a90 	vmov	r1, s21
 800708e:	4630      	mov	r0, r6
 8007090:	f008 fd26 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007094:	22b9      	movs	r2, #185	; 0xb9
 8007096:	ee1b 0a10 	vmov	r0, s22
 800709a:	4629      	mov	r1, r5
 800709c:	f7fb fc5c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80070a0:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80070a4:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80070a8:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 80070ac:	4640      	mov	r0, r8
        linespace = space;
 80070ae:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80070b2:	f00b f8a3 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070b6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070ba:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80070be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070c2:	2314      	movs	r3, #20
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80070c4:	ee1b 0a10 	vmov	r0, s22
 80070c8:	a90a      	add	r1, sp, #40	; 0x28
 80070ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070ce:	970a      	str	r7, [sp, #40]	; 0x28
 80070d0:	f00b fb2e 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070d4:	ee1b 1a10 	vmov	r1, s22
 80070d8:	4630      	mov	r0, r6
 80070da:	f008 fd01 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80070de:	22b9      	movs	r2, #185	; 0xb9
 80070e0:	ee1b 0a90 	vmov	r0, s23
 80070e4:	21d9      	movs	r1, #217	; 0xd9
 80070e6:	f7fb fc37 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80070ea:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80070ee:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 80070f2:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 80070f6:	4640      	mov	r0, r8
        linespace = space;
 80070f8:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 80070fc:	f00b f87e 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007100:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007104:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007108:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800710c:	2315      	movs	r3, #21
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 800710e:	ee1b 0a90 	vmov	r0, s23
 8007112:	a90a      	add	r1, sp, #40	; 0x28
 8007114:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007118:	970a      	str	r7, [sp, #40]	; 0x28
 800711a:	f00b fb09 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800711e:	ee1b 1a90 	vmov	r1, s23
 8007122:	4630      	mov	r0, r6
 8007124:	f008 fcdc 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007128:	230a      	movs	r3, #10
 800712a:	9300      	str	r3, [sp, #0]
 800712c:	2232      	movs	r2, #50	; 0x32
 800712e:	23f0      	movs	r3, #240	; 0xf0
 8007130:	4629      	mov	r1, r5
 8007132:	4650      	mov	r0, sl
 8007134:	f7fb fc1d 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007138:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800713c:	22a0      	movs	r2, #160	; 0xa0
 800713e:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007142:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 8007146:	9b03      	ldr	r3, [sp, #12]
 8007148:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 800714c:	4611      	mov	r1, r2
 800714e:	4650      	mov	r0, sl
 8007150:	f00a fea8 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007154:	22a0      	movs	r2, #160	; 0xa0
 8007156:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800715a:	4650      	mov	r0, sl
 800715c:	f00a fead 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007160:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007164:	2b20      	cmp	r3, #32
 8007166:	d005      	beq.n	8007174 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x568>
        lineWidthQ5 = widthQ5;
 8007168:	2320      	movs	r3, #32
 800716a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800716e:	4650      	mov	r0, sl
 8007170:	f00a fda2 	bl	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007174:	4650      	mov	r0, sl
 8007176:	2101      	movs	r1, #1
 8007178:	f00a feaa 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800717c:	4651      	mov	r1, sl
 800717e:	4630      	mov	r0, r6
 8007180:	f008 fcae 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007184:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8007188:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 800718a:	ee18 0a10 	vmov	r0, s16
 800718e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007190:	f04f 0900 	mov.w	r9, #0
 8007194:	2145      	movs	r1, #69	; 0x45
 8007196:	f7fb fbdf 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800719a:	ee18 1a10 	vmov	r1, s16
 800719e:	4628      	mov	r0, r5
        color = newColor;
 80071a0:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 80071a4:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80071a8:	f00b f828 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071b0:	ee18 3a10 	vmov	r3, s16
 80071b4:	333c      	adds	r3, #60	; 0x3c
 80071b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071ba:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800728c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>
 80071be:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80071c2:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80071c4:	ee18 0a10 	vmov	r0, s16
 80071c8:	a90a      	add	r1, sp, #40	; 0x28
 80071ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071ce:	f00b faaf 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071d2:	ee18 1a10 	vmov	r1, s16
 80071d6:	4630      	mov	r0, r6
 80071d8:	f008 fc82 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80071dc:	ee18 0a90 	vmov	r0, s17
 80071e0:	220c      	movs	r2, #12
 80071e2:	2136      	movs	r1, #54	; 0x36
 80071e4:	f7fb fbb8 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80071e8:	ee18 1a90 	vmov	r1, s17
 80071ec:	4628      	mov	r0, r5
        color = newColor;
 80071ee:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 80071f2:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 80071f6:	f00b f801 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071fe:	ee18 3a90 	vmov	r3, s17
 8007202:	333c      	adds	r3, #60	; 0x3c
 8007204:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007208:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800720a:	ee18 0a90 	vmov	r0, s17
 800720e:	a90a      	add	r1, sp, #40	; 0x28
 8007210:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007214:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007218:	f00b fa8a 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800721c:	ee18 1a90 	vmov	r1, s17
 8007220:	4630      	mov	r0, r6
 8007222:	f008 fc5d 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007226:	ee1c 0a10 	vmov	r0, s24
 800722a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800722e:	2121      	movs	r1, #33	; 0x21
 8007230:	f7fb fb92 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007234:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007236:	aa0a      	add	r2, sp, #40	; 0x28
 8007238:	a909      	add	r1, sp, #36	; 0x24
 800723a:	ee1c 0a10 	vmov	r0, s24
 800723e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007242:	2302      	movs	r3, #2
 8007244:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007248:	f00b fe2d 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800724c:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 800724e:	ee1c 0a10 	vmov	r0, s24
 8007252:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007256:	f7fb fbc3 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800725a:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 800725e:	3304      	adds	r3, #4
 8007260:	4630      	mov	r0, r6
 8007262:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007266:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 800726a:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 800726e:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007272:	f008 fc35 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007276:	4620      	mov	r0, r4
 8007278:	b00d      	add	sp, #52	; 0x34
 800727a:	ecbd 8b0a 	vpop	{d8-d12}
 800727e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007282:	bf00      	nop
 8007284:	20013320 	.word	0x20013320
 8007288:	0802c53d 	.word	0x0802c53d
 800728c:	0802c5b0 	.word	0x0802c5b0
 8007290:	20013318 	.word	0x20013318

08007294 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007294:	4770      	bx	lr

08007296 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007296:	4770      	bx	lr

08007298 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007298:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800729a:	68c2      	ldr	r2, [r0, #12]
 800729c:	6844      	ldr	r4, [r0, #4]
 800729e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80072a0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80072a2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80072a6:	07d2      	lsls	r2, r2, #31
 80072a8:	bf48      	it	mi
 80072aa:	5962      	ldrmi	r2, [r4, r5]
 80072ac:	689b      	ldr	r3, [r3, #8]
    }
 80072ae:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072b0:	bf48      	it	mi
 80072b2:	58d3      	ldrmi	r3, [r2, r3]
 80072b4:	4718      	bx	r3

080072b6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80072b6:	6843      	ldr	r3, [r0, #4]
 80072b8:	b12b      	cbz	r3, 80072c6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80072ba:	6883      	ldr	r3, [r0, #8]
 80072bc:	b92b      	cbnz	r3, 80072ca <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80072be:	68c0      	ldr	r0, [r0, #12]
 80072c0:	f000 0001 	and.w	r0, r0, #1
 80072c4:	4770      	bx	lr
 80072c6:	4618      	mov	r0, r3
 80072c8:	4770      	bx	lr
 80072ca:	2001      	movs	r0, #1
    }
 80072cc:	4770      	bx	lr

080072ce <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80072ce:	b510      	push	{r4, lr}
 80072d0:	2110      	movs	r1, #16
 80072d2:	4604      	mov	r4, r0
 80072d4:	f022 fd91 	bl	8029dfa <_ZdlPvj>
 80072d8:	4620      	mov	r0, r4
 80072da:	bd10      	pop	{r4, pc}

080072dc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80072dc:	b510      	push	{r4, lr}
 80072de:	4b03      	ldr	r3, [pc, #12]	; (80072ec <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 80072e0:	6003      	str	r3, [r0, #0]
 80072e2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80072e4:	f00c ffd2 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80072e8:	4620      	mov	r0, r4
 80072ea:	bd10      	pop	{r4, pc}
 80072ec:	0802dd68 	.word	0x0802dd68

080072f0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80072f0:	b507      	push	{r0, r1, r2, lr}
 80072f2:	4b07      	ldr	r3, [pc, #28]	; (8007310 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 80072f4:	6003      	str	r3, [r0, #0]
 80072f6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80072f8:	f00c ffc8 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80072fc:	9801      	ldr	r0, [sp, #4]
 80072fe:	f241 015c 	movw	r1, #4188	; 0x105c
 8007302:	f022 fd7a 	bl	8029dfa <_ZdlPvj>
 8007306:	9801      	ldr	r0, [sp, #4]
 8007308:	b003      	add	sp, #12
 800730a:	f85d fb04 	ldr.w	pc, [sp], #4
 800730e:	bf00      	nop
 8007310:	0802dd68 	.word	0x0802dd68

08007314 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007314:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007318:	4288      	cmp	r0, r1
{
 800731a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800731c:	d105      	bne.n	800732a <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800731e:	f00e fcb7 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007322:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007326:	f7fc bd8d 	b.w	8003e44 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 800732a:	bd08      	pop	{r3, pc}

0800732c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 800732c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007330:	ed2d 8b02 	vpush	{d8}
 8007334:	4604      	mov	r4, r0
 8007336:	b08d      	sub	sp, #52	; 0x34
 8007338:	f010 f92a 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 800733c:	4622      	mov	r2, r4
 800733e:	2500      	movs	r5, #0
 8007340:	4ba4      	ldr	r3, [pc, #656]	; (80075d4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007342:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007344:	f842 3b40 	str.w	r3, [r2], #64
 8007348:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 800734c:	4629      	mov	r1, r5
 800734e:	2226      	movs	r2, #38	; 0x26
 8007350:	ee18 0a10 	vmov	r0, s16
 8007354:	f023 fd69 	bl	802ae2a <memset>
 8007358:	ee18 0a10 	vmov	r0, s16
 800735c:	f7fb fb2e 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8007360:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007364:	26ff      	movs	r6, #255	; 0xff
 8007366:	4b9c      	ldr	r3, [pc, #624]	; (80075d8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007368:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800736a:	2226      	movs	r2, #38	; 0x26
 800736c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007370:	4629      	mov	r1, r5
 8007372:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007376:	66a5      	str	r5, [r4, #104]	; 0x68
 8007378:	4658      	mov	r0, fp
 800737a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800737e:	f023 fd54 	bl	802ae2a <memset>
 8007382:	4658      	mov	r0, fp
 8007384:	f7fb fb1a 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 8007388:	4b94      	ldr	r3, [pc, #592]	; (80075dc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 800738a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800738c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007390:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007394:	a90a      	add	r1, sp, #40	; 0x28
 8007396:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800739a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800739e:	4658      	mov	r0, fp
 80073a0:	f00b ff77 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80073a4:	4638      	mov	r0, r7
 80073a6:	f00a fc67 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 80073aa:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80073ae:	4618      	mov	r0, r3
 80073b0:	9303      	str	r3, [sp, #12]
 80073b2:	f7fb f8ff 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80073b6:	4b8a      	ldr	r3, [pc, #552]	; (80075e0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 80073b8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80073bc:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 80073c0:	3324      	adds	r3, #36	; 0x24
 80073c2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80073c6:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80073ca:	4650      	mov	r0, sl
 80073cc:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 80073d0:	f7fb fb4a 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80073d4:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 80073d8:	4648      	mov	r0, r9
 80073da:	f7fb fb45 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80073de:	4640      	mov	r0, r8
 80073e0:	f7fb fb42 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80073e4:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80073e8:	4618      	mov	r0, r3
 80073ea:	ee08 3a90 	vmov	s17, r3
 80073ee:	f00c f887 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80073f2:	4a7c      	ldr	r2, [pc, #496]	; (80075e4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 80073f4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80073f8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80073fc:	4a7a      	ldr	r2, [pc, #488]	; (80075e8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80073fe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007402:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007406:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800740a:	f00c ff35 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800740e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007412:	462a      	mov	r2, r5
 8007414:	ee18 0a10 	vmov	r0, s16
 8007418:	9300      	str	r3, [sp, #0]
 800741a:	4629      	mov	r1, r5
 800741c:	23f0      	movs	r3, #240	; 0xf0
 800741e:	f7fb faa8 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007422:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007424:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007428:	66a3      	str	r3, [r4, #104]	; 0x68
 800742a:	ee18 1a10 	vmov	r1, s16
 800742e:	4630      	mov	r0, r6
 8007430:	f008 fb56 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007434:	462a      	mov	r2, r5
 8007436:	4629      	mov	r1, r5
 8007438:	4658      	mov	r0, fp
 800743a:	f7fb fa8d 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 800743e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007440:	a90a      	add	r1, sp, #40	; 0x28
 8007442:	4658      	mov	r0, fp
 8007444:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007448:	f00b ff23 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800744c:	4659      	mov	r1, fp
 800744e:	4630      	mov	r0, r6
 8007450:	f008 fb46 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007454:	230a      	movs	r3, #10
 8007456:	9300      	str	r3, [sp, #0]
 8007458:	2232      	movs	r2, #50	; 0x32
 800745a:	23f0      	movs	r3, #240	; 0xf0
 800745c:	4629      	mov	r1, r5
 800745e:	4638      	mov	r0, r7
 8007460:	f7fb fa87 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007464:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007468:	22a0      	movs	r2, #160	; 0xa0
 800746a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800746e:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007472:	9b03      	ldr	r3, [sp, #12]
 8007474:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007478:	4611      	mov	r1, r2
 800747a:	4638      	mov	r0, r7
 800747c:	f00a fd12 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007480:	22a0      	movs	r2, #160	; 0xa0
 8007482:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007486:	4638      	mov	r0, r7
 8007488:	f00a fd17 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800748c:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007490:	2b20      	cmp	r3, #32
 8007492:	d005      	beq.n	80074a0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8007494:	2320      	movs	r3, #32
 8007496:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800749a:	4638      	mov	r0, r7
 800749c:	f00a fc0c 	bl	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80074a0:	4638      	mov	r0, r7
 80074a2:	2101      	movs	r1, #1
 80074a4:	f00a fd14 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80074a8:	4639      	mov	r1, r7
 80074aa:	4630      	mov	r0, r6
 80074ac:	f008 fb18 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80074b0:	ad04      	add	r5, sp, #16
        color = newColor;
 80074b2:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80074b6:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 80074ba:	2223      	movs	r2, #35	; 0x23
 80074bc:	4650      	mov	r0, sl
 80074be:	2145      	movs	r1, #69	; 0x45
 80074c0:	f7fb fa4a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80074c4:	4651      	mov	r1, sl
 80074c6:	4628      	mov	r0, r5
        color = newColor;
 80074c8:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80074cc:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80074d0:	f00a fe94 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074d4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80074d8:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80074dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80074e0:	4b42      	ldr	r3, [pc, #264]	; (80075ec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80074e2:	930a      	str	r3, [sp, #40]	; 0x28
 80074e4:	2237      	movs	r2, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80074e6:	a90a      	add	r1, sp, #40	; 0x28
 80074e8:	4650      	mov	r0, sl
 80074ea:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80074ee:	f00b f91f 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074f2:	4651      	mov	r1, sl
 80074f4:	4630      	mov	r0, r6
 80074f6:	f008 faf3 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80074fa:	223c      	movs	r2, #60	; 0x3c
 80074fc:	4648      	mov	r0, r9
 80074fe:	211f      	movs	r1, #31
 8007500:	f7fb fa2a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007504:	4649      	mov	r1, r9
 8007506:	4628      	mov	r0, r5
        color = newColor;
 8007508:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 800750c:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007510:	f00a fe74 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007514:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007518:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 800751c:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007520:	4b32      	ldr	r3, [pc, #200]	; (80075ec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007522:	930a      	str	r3, [sp, #40]	; 0x28
 8007524:	222c      	movs	r2, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007526:	a90a      	add	r1, sp, #40	; 0x28
 8007528:	4648      	mov	r0, r9
 800752a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800752e:	f00b f8ff 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007532:	4649      	mov	r1, r9
 8007534:	4630      	mov	r0, r6
 8007536:	f008 fad3 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800753a:	220c      	movs	r2, #12
 800753c:	4640      	mov	r0, r8
 800753e:	2136      	movs	r1, #54	; 0x36
 8007540:	f7fb fa0a 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007544:	4641      	mov	r1, r8
 8007546:	4628      	mov	r0, r5
        color = newColor;
 8007548:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800754c:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007550:	f00a fe54 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007554:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007558:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 800755c:	4b23      	ldr	r3, [pc, #140]	; (80075ec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 800755e:	930a      	str	r3, [sp, #40]	; 0x28
 8007560:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007564:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007566:	a90a      	add	r1, sp, #40	; 0x28
 8007568:	4640      	mov	r0, r8
 800756a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800756e:	f00b f8df 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007572:	4641      	mov	r1, r8
 8007574:	4630      	mov	r0, r6
 8007576:	f008 fab3 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800757a:	ee18 0a90 	vmov	r0, s17
 800757e:	f240 1201 	movw	r2, #257	; 0x101
 8007582:	2121      	movs	r1, #33	; 0x21
 8007584:	f7fb f9e8 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007588:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800758a:	aa0a      	add	r2, sp, #40	; 0x28
 800758c:	a909      	add	r1, sp, #36	; 0x24
 800758e:	ee18 0a90 	vmov	r0, s17
 8007592:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007596:	2302      	movs	r3, #2
 8007598:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800759c:	f00b fc83 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80075a0:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 80075a2:	ee18 0a90 	vmov	r0, s17
 80075a6:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80075aa:	f7fb fa19 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80075ae:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 80075b2:	330c      	adds	r3, #12
 80075b4:	4630      	mov	r0, r6
        colorPressed = col;
 80075b6:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 80075ba:	ee18 1a90 	vmov	r1, s17
 80075be:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80075c2:	f008 fa8d 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80075c6:	4620      	mov	r0, r4
 80075c8:	b00d      	add	sp, #52	; 0x34
 80075ca:	ecbd 8b02 	vpop	{d8}
 80075ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075d2:	bf00      	nop
 80075d4:	0802dd68 	.word	0x0802dd68
 80075d8:	0802eb04 	.word	0x0802eb04
 80075dc:	0802ed50 	.word	0x0802ed50
 80075e0:	0802e838 	.word	0x0802e838
 80075e4:	0802dd50 	.word	0x0802dd50
 80075e8:	08007315 	.word	0x08007315
 80075ec:	0802c5b0 	.word	0x0802c5b0

080075f0 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80075f0:	4770      	bx	lr

080075f2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80075f2:	4770      	bx	lr

080075f4 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80075f4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80075f6:	68c2      	ldr	r2, [r0, #12]
 80075f8:	6844      	ldr	r4, [r0, #4]
 80075fa:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80075fc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80075fe:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007602:	07d2      	lsls	r2, r2, #31
 8007604:	bf48      	it	mi
 8007606:	5962      	ldrmi	r2, [r4, r5]
 8007608:	689b      	ldr	r3, [r3, #8]
    }
 800760a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800760c:	bf48      	it	mi
 800760e:	58d3      	ldrmi	r3, [r2, r3]
 8007610:	4718      	bx	r3

08007612 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007612:	6843      	ldr	r3, [r0, #4]
 8007614:	b12b      	cbz	r3, 8007622 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007616:	6883      	ldr	r3, [r0, #8]
 8007618:	b92b      	cbnz	r3, 8007626 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800761a:	68c0      	ldr	r0, [r0, #12]
 800761c:	f000 0001 	and.w	r0, r0, #1
 8007620:	4770      	bx	lr
 8007622:	4618      	mov	r0, r3
 8007624:	4770      	bx	lr
 8007626:	2001      	movs	r0, #1
    }
 8007628:	4770      	bx	lr

0800762a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800762a:	b510      	push	{r4, lr}
 800762c:	2110      	movs	r1, #16
 800762e:	4604      	mov	r4, r0
 8007630:	f022 fbe3 	bl	8029dfa <_ZdlPvj>
 8007634:	4620      	mov	r0, r4
 8007636:	bd10      	pop	{r4, pc}

08007638 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007638:	b510      	push	{r4, lr}
 800763a:	4b03      	ldr	r3, [pc, #12]	; (8007648 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 800763c:	6003      	str	r3, [r0, #0]
 800763e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007640:	f00c fe24 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007644:	4620      	mov	r0, r4
 8007646:	bd10      	pop	{r4, pc}
 8007648:	0802ddb4 	.word	0x0802ddb4

0800764c <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800764c:	b507      	push	{r0, r1, r2, lr}
 800764e:	4b07      	ldr	r3, [pc, #28]	; (800766c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007650:	6003      	str	r3, [r0, #0]
 8007652:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007654:	f00c fe1a 	bl	801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007658:	9801      	ldr	r0, [sp, #4]
 800765a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800765e:	f022 fbcc 	bl	8029dfa <_ZdlPvj>
 8007662:	9801      	ldr	r0, [sp, #4]
 8007664:	b003      	add	sp, #12
 8007666:	f85d fb04 	ldr.w	pc, [sp], #4
 800766a:	bf00      	nop
 800766c:	0802ddb4 	.word	0x0802ddb4

08007670 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007670:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007674:	4288      	cmp	r0, r1
{
 8007676:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007678:	d105      	bne.n	8007686 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800767a:	f00e fb09 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800767e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007682:	f7fc bbaf 	b.w	8003de4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007686:	bd08      	pop	{r3, pc}

08007688 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800768c:	ed2d 8b04 	vpush	{d8-d9}
 8007690:	4604      	mov	r4, r0
 8007692:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007694:	46a3      	mov	fp, r4
 8007696:	2500      	movs	r5, #0
 8007698:	f00f ff7a 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 800769c:	4bd1      	ldr	r3, [pc, #836]	; (80079e4 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 800769e:	63e5      	str	r5, [r4, #60]	; 0x3c
 80076a0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80076a4:	2226      	movs	r2, #38	; 0x26
 80076a6:	4629      	mov	r1, r5
 80076a8:	4658      	mov	r0, fp
 80076aa:	f023 fbbe 	bl	802ae2a <memset>
 80076ae:	4658      	mov	r0, fp
 80076b0:	f7fb f984 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80076b4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80076b8:	26ff      	movs	r6, #255	; 0xff
 80076ba:	4bcb      	ldr	r3, [pc, #812]	; (80079e8 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 80076bc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80076be:	2226      	movs	r2, #38	; 0x26
 80076c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80076c4:	4629      	mov	r1, r5
 80076c6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80076ca:	4650      	mov	r0, sl
 80076cc:	66a5      	str	r5, [r4, #104]	; 0x68
 80076ce:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80076d2:	f023 fbaa 	bl	802ae2a <memset>
 80076d6:	4650      	mov	r0, sl
 80076d8:	f7fb f970 	bl	80029bc <_ZN8touchgfx6WidgetC1Ev>
 80076dc:	4bc3      	ldr	r3, [pc, #780]	; (80079ec <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 80076de:	66e3      	str	r3, [r4, #108]	; 0x6c
 80076e0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80076e4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80076e8:	a90a      	add	r1, sp, #40	; 0x28
 80076ea:	4650      	mov	r0, sl
 80076ec:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80076f0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80076f4:	f00b fdcd 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80076f8:	4648      	mov	r0, r9
 80076fa:	f7fb f9b5 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 80076fe:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007702:	4bbb      	ldr	r3, [pc, #748]	; (80079f0 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007704:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007708:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800770c:	4638      	mov	r0, r7
 800770e:	f00a fab3 	bl	8011c78 <_ZN8touchgfx4LineC1Ev>
 8007712:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007716:	4618      	mov	r0, r3
 8007718:	9303      	str	r3, [sp, #12]
 800771a:	f7fa ff4b 	bl	80025b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800771e:	4bb5      	ldr	r3, [pc, #724]	; (80079f4 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007720:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007724:	3324      	adds	r3, #36	; 0x24
 8007726:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800772a:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800772e:	4618      	mov	r0, r3
 8007730:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007734:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007738:	ee09 3a10 	vmov	s18, r3
 800773c:	f00b fee0 	bl	8013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007740:	4640      	mov	r0, r8
 8007742:	f7fb f991 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8007746:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800774a:	4618      	mov	r0, r3
 800774c:	ee08 3a10 	vmov	s16, r3
 8007750:	f7fb f98a 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
 8007754:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007758:	4618      	mov	r0, r3
 800775a:	ee08 3a90 	vmov	s17, r3
 800775e:	f7fb f983 	bl	8002a68 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007762:	4aa5      	ldr	r2, [pc, #660]	; (80079f8 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007764:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007768:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 800776c:	4aa3      	ldr	r2, [pc, #652]	; (80079fc <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800776e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007772:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007776:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800777a:	f00c fd7d 	bl	8014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800777e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007782:	462a      	mov	r2, r5
 8007784:	4658      	mov	r0, fp
 8007786:	9300      	str	r3, [sp, #0]
 8007788:	4629      	mov	r1, r5
 800778a:	23f0      	movs	r3, #240	; 0xf0
 800778c:	f7fb f8f1 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007790:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007792:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007796:	66a3      	str	r3, [r4, #104]	; 0x68
 8007798:	4659      	mov	r1, fp
 800779a:	4630      	mov	r0, r6
 800779c:	f008 f9a0 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80077a0:	462a      	mov	r2, r5
 80077a2:	4650      	mov	r0, sl
 80077a4:	4629      	mov	r1, r5
 80077a6:	f7fb f8d7 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80077aa:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80077ac:	4650      	mov	r0, sl
 80077ae:	a90a      	add	r1, sp, #40	; 0x28
 80077b0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077b4:	f00b fd6d 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80077b8:	4651      	mov	r1, sl
 80077ba:	4630      	mov	r0, r6
 80077bc:	f008 f990 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80077c0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80077c4:	2156      	movs	r1, #86	; 0x56
 80077c6:	4648      	mov	r0, r9
 80077c8:	f7fb f8c6 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80077cc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80077d0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80077d4:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80077d8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80077dc:	4650      	mov	r0, sl
 80077de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80077e2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80077e6:	4649      	mov	r1, r9
 80077e8:	4798      	blx	r3
 80077ea:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80077ee:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80077f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80077f6:	4b82      	ldr	r3, [pc, #520]	; (8007a00 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80077f8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80077fa:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80077fe:	b92b      	cbnz	r3, 800780c <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007800:	4b80      	ldr	r3, [pc, #512]	; (8007a04 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007802:	4a81      	ldr	r2, [pc, #516]	; (8007a08 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007804:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007806:	4881      	ldr	r0, [pc, #516]	; (8007a0c <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007808:	f023 f90a 	bl	802aa20 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800780c:	4b80      	ldr	r3, [pc, #512]	; (8007a10 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800780e:	881b      	ldrh	r3, [r3, #0]
 8007810:	2b1a      	cmp	r3, #26
 8007812:	d803      	bhi.n	800781c <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007814:	4b7f      	ldr	r3, [pc, #508]	; (8007a14 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007816:	4a7c      	ldr	r2, [pc, #496]	; (8007a08 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007818:	2161      	movs	r1, #97	; 0x61
 800781a:	e7f4      	b.n	8007806 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 800781c:	4b7e      	ldr	r3, [pc, #504]	; (8007a18 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 800781e:	211a      	movs	r1, #26
 8007820:	6818      	ldr	r0, [r3, #0]
 8007822:	f000 fb1b 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8007826:	4a7d      	ldr	r2, [pc, #500]	; (8007a1c <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007828:	4603      	mov	r3, r0
 800782a:	2104      	movs	r1, #4
 800782c:	4650      	mov	r0, sl
 800782e:	f011 fbdd 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007832:	4648      	mov	r0, r9
        wc1 = value;
 8007834:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007838:	f00a ff5a 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800783c:	4b78      	ldr	r3, [pc, #480]	; (8007a20 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 800783e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007840:	a90a      	add	r1, sp, #40	; 0x28
 8007842:	231b      	movs	r3, #27
 8007844:	4648      	mov	r0, r9
 8007846:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800784a:	f00a ff71 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800784e:	4649      	mov	r1, r9
 8007850:	4630      	mov	r0, r6
 8007852:	f008 f945 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007856:	230a      	movs	r3, #10
 8007858:	9300      	str	r3, [sp, #0]
 800785a:	2232      	movs	r2, #50	; 0x32
 800785c:	23f0      	movs	r3, #240	; 0xf0
 800785e:	4629      	mov	r1, r5
 8007860:	4638      	mov	r0, r7
 8007862:	f7fb f886 	bl	8002972 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007866:	9b03      	ldr	r3, [sp, #12]
 8007868:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800786c:	22a0      	movs	r2, #160	; 0xa0
 800786e:	4611      	mov	r1, r2
 8007870:	4638      	mov	r0, r7
 8007872:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007876:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800787a:	f00a fb13 	bl	8011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800787e:	22a0      	movs	r2, #160	; 0xa0
 8007880:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007884:	4638      	mov	r0, r7
 8007886:	f00a fb18 	bl	8011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800788a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800788e:	2b20      	cmp	r3, #32
 8007890:	d005      	beq.n	800789e <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007892:	2320      	movs	r3, #32
 8007894:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007898:	4638      	mov	r0, r7
 800789a:	f00a fa0d 	bl	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800789e:	4638      	mov	r0, r7
 80078a0:	2101      	movs	r1, #1
 80078a2:	f00a fb15 	bl	8011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80078a6:	4639      	mov	r1, r7
 80078a8:	4630      	mov	r0, r6
 80078aa:	f008 f919 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80078ae:	ee19 0a10 	vmov	r0, s18
 80078b2:	22f0      	movs	r2, #240	; 0xf0
 80078b4:	2121      	movs	r1, #33	; 0x21
 80078b6:	f7fb f84f 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80078ba:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80078bc:	aa0a      	add	r2, sp, #40	; 0x28
 80078be:	a909      	add	r1, sp, #36	; 0x24
 80078c0:	ee19 0a10 	vmov	r0, s18
 80078c4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80078c8:	2302      	movs	r3, #2
 80078ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80078ce:	f00b faea 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80078d2:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 80078d4:	ee19 0a10 	vmov	r0, s18
 80078d8:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 80078dc:	f7fb f880 	bl	80029e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80078e0:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80078e4:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80078e8:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80078ec:	ee19 1a10 	vmov	r1, s18
 80078f0:	4630      	mov	r0, r6
        colorPressed = col;
 80078f2:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80078f6:	ad04      	add	r5, sp, #16
 80078f8:	f008 f8f2 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80078fc:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007900:	225b      	movs	r2, #91	; 0x5b
 8007902:	4640      	mov	r0, r8
 8007904:	2105      	movs	r1, #5
 8007906:	f7fb f827 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800790a:	4641      	mov	r1, r8
 800790c:	4628      	mov	r0, r5
        color = newColor;
 800790e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007912:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007916:	f00a fc71 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800791a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800791e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007922:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007926:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007a20 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 800792a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800792e:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007930:	a90a      	add	r1, sp, #40	; 0x28
 8007932:	4640      	mov	r0, r8
 8007934:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007938:	f00a fefa 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800793c:	4641      	mov	r1, r8
 800793e:	4630      	mov	r0, r6
 8007940:	f008 f8ce 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007944:	ee18 0a10 	vmov	r0, s16
 8007948:	2223      	movs	r2, #35	; 0x23
 800794a:	2145      	movs	r1, #69	; 0x45
 800794c:	f7fb f804 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007950:	ee18 1a10 	vmov	r1, s16
 8007954:	4628      	mov	r0, r5
        color = newColor;
 8007956:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800795a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800795e:	f00a fc4d 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007962:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007966:	ee18 3a10 	vmov	r3, s16
 800796a:	333c      	adds	r3, #60	; 0x3c
 800796c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007970:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007972:	ee18 0a10 	vmov	r0, s16
 8007976:	a90a      	add	r1, sp, #40	; 0x28
 8007978:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800797c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007980:	f00a fed6 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007984:	ee18 1a10 	vmov	r1, s16
 8007988:	4630      	mov	r0, r6
 800798a:	f008 f8a9 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800798e:	ee18 0a90 	vmov	r0, s17
 8007992:	220c      	movs	r2, #12
 8007994:	2136      	movs	r1, #54	; 0x36
 8007996:	f7fa ffdf 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 800799a:	ee18 1a90 	vmov	r1, s17
 800799e:	4628      	mov	r0, r5
        color = newColor;
 80079a0:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 80079a4:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 80079a8:	f00a fc28 	bl	80121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80079b0:	ee18 3a90 	vmov	r3, s17
 80079b4:	333c      	adds	r3, #60	; 0x3c
 80079b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079ba:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 80079bc:	ee18 0a90 	vmov	r0, s17
 80079c0:	a90a      	add	r1, sp, #40	; 0x28
 80079c2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079c6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80079ca:	f00a feb1 	bl	8012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079ce:	4630      	mov	r0, r6
 80079d0:	ee18 1a90 	vmov	r1, s17
 80079d4:	f008 f884 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80079d8:	4620      	mov	r0, r4
 80079da:	b00d      	add	sp, #52	; 0x34
 80079dc:	ecbd 8b04 	vpop	{d8-d9}
 80079e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80079e4:	0802ddb4 	.word	0x0802ddb4
 80079e8:	0802eb04 	.word	0x0802eb04
 80079ec:	0802ed50 	.word	0x0802ed50
 80079f0:	0802c650 	.word	0x0802c650
 80079f4:	0802e838 	.word	0x0802e838
 80079f8:	0802dd9c 	.word	0x0802dd9c
 80079fc:	08007671 	.word	0x08007671
 8007a00:	20013314 	.word	0x20013314
 8007a04:	0802c400 	.word	0x0802c400
 8007a08:	0802c505 	.word	0x0802c505
 8007a0c:	0802c47d 	.word	0x0802c47d
 8007a10:	20013318 	.word	0x20013318
 8007a14:	0802c4c4 	.word	0x0802c4c4
 8007a18:	20013320 	.word	0x20013320
 8007a1c:	0802c53d 	.word	0x0802c53d
 8007a20:	0802c5b0 	.word	0x0802c5b0

08007a24 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007a24:	4770      	bx	lr

08007a26 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007a26:	4770      	bx	lr

08007a28 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007a28:	b510      	push	{r4, lr}
}
 8007a2a:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007a2c:	4604      	mov	r4, r0
}
 8007a2e:	f022 f9e4 	bl	8029dfa <_ZdlPvj>
 8007a32:	4620      	mov	r0, r4
 8007a34:	bd10      	pop	{r4, pc}
	...

08007a38 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007a38:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007a3c:	4604      	mov	r4, r0
 8007a3e:	4626      	mov	r6, r4
 8007a40:	f00f fda6 	bl	8017590 <_ZN8touchgfx6ScreenC1Ev>
 8007a44:	2500      	movs	r5, #0
 8007a46:	4b2e      	ldr	r3, [pc, #184]	; (8007b00 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007a48:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007a4a:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007a4e:	4b2d      	ldr	r3, [pc, #180]	; (8007b04 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007a50:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007a52:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007a56:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007a5a:	23ff      	movs	r3, #255	; 0xff
 8007a5c:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007a60:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007a64:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007a68:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007a6c:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007a70:	4a25      	ldr	r2, [pc, #148]	; (8007b08 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007a72:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007a76:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007a7a:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007a7c:	a901      	add	r1, sp, #4
 8007a7e:	4638      	mov	r0, r7
 8007a80:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007a84:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007a88:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007a8c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007a90:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007a94:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007a98:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007a9c:	66a5      	str	r5, [r4, #104]	; 0x68
 8007a9e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007aa2:	f00b fbf6 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007aa6:	462a      	mov	r2, r5
 8007aa8:	4629      	mov	r1, r5
 8007aaa:	4630      	mov	r0, r6
 8007aac:	f7fa ff54 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007ab0:	4630      	mov	r0, r6
 8007ab2:	21f0      	movs	r1, #240	; 0xf0
 8007ab4:	f7fa fcca 	bl	800244c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007ab8:	4630      	mov	r0, r6
 8007aba:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007abe:	f7fa fcc7 	bl	8002450 <_ZN8touchgfx8Drawable9setHeightEs>
 8007ac2:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007ac6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007aca:	66a3      	str	r3, [r4, #104]	; 0x68
 8007acc:	4631      	mov	r1, r6
 8007ace:	4640      	mov	r0, r8
 8007ad0:	f008 f806 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007ad4:	462a      	mov	r2, r5
 8007ad6:	4638      	mov	r0, r7
 8007ad8:	f06f 0102 	mvn.w	r1, #2
 8007adc:	f7fa ff3c 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8007ae0:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007ae2:	a901      	add	r1, sp, #4
 8007ae4:	4638      	mov	r0, r7
 8007ae6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007aea:	f00b fbd2 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007aee:	4640      	mov	r0, r8
 8007af0:	4639      	mov	r1, r7
 8007af2:	f007 fff5 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007af6:	4620      	mov	r0, r4
 8007af8:	b002      	add	sp, #8
 8007afa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007afe:	bf00      	nop
 8007b00:	0802dde8 	.word	0x0802dde8
 8007b04:	0802eb04 	.word	0x0802eb04
 8007b08:	0802ed50 	.word	0x0802ed50

08007b0c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007b0c:	4770      	bx	lr
	...

08007b10 <_Z23getFont_verdana_10_4bppv>:
{
 8007b10:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007b12:	4d17      	ldr	r5, [pc, #92]	; (8007b70 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007b14:	682c      	ldr	r4, [r5, #0]
 8007b16:	f3bf 8f5b 	dmb	ish
 8007b1a:	f014 0401 	ands.w	r4, r4, #1
{
 8007b1e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007b20:	d122      	bne.n	8007b68 <_Z23getFont_verdana_10_4bppv+0x58>
 8007b22:	4628      	mov	r0, r5
 8007b24:	f022 f96b 	bl	8029dfe <__cxa_guard_acquire>
 8007b28:	b1f0      	cbz	r0, 8007b68 <_Z23getFont_verdana_10_4bppv+0x58>
 8007b2a:	233f      	movs	r3, #63	; 0x3f
 8007b2c:	9309      	str	r3, [sp, #36]	; 0x24
 8007b2e:	4b11      	ldr	r3, [pc, #68]	; (8007b74 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007b30:	9308      	str	r3, [sp, #32]
 8007b32:	4b11      	ldr	r3, [pc, #68]	; (8007b78 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007b34:	9307      	str	r3, [sp, #28]
 8007b36:	2301      	movs	r3, #1
 8007b38:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007b3c:	9304      	str	r3, [sp, #16]
 8007b3e:	2304      	movs	r3, #4
 8007b40:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007b44:	230a      	movs	r3, #10
 8007b46:	490d      	ldr	r1, [pc, #52]	; (8007b7c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007b48:	9300      	str	r3, [sp, #0]
 8007b4a:	225f      	movs	r2, #95	; 0x5f
 8007b4c:	230c      	movs	r3, #12
 8007b4e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007b52:	480b      	ldr	r0, [pc, #44]	; (8007b80 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007b54:	940a      	str	r4, [sp, #40]	; 0x28
 8007b56:	9401      	str	r4, [sp, #4]
 8007b58:	f7fd fa2a 	bl	8004fb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007b5c:	4809      	ldr	r0, [pc, #36]	; (8007b84 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007b5e:	f022 ff7d 	bl	802aa5c <atexit>
 8007b62:	4628      	mov	r0, r5
 8007b64:	f022 f957 	bl	8029e16 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007b68:	4805      	ldr	r0, [pc, #20]	; (8007b80 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007b6a:	b00f      	add	sp, #60	; 0x3c
 8007b6c:	bd30      	pop	{r4, r5, pc}
 8007b6e:	bf00      	nop
 8007b70:	200023bc 	.word	0x200023bc
 8007b74:	080469d4 	.word	0x080469d4
 8007b78:	08046c10 	.word	0x08046c10
 8007b7c:	08045a1c 	.word	0x08045a1c
 8007b80:	200023c0 	.word	0x200023c0
 8007b84:	08007b0d 	.word	0x08007b0d

08007b88 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007b88:	4770      	bx	lr
	...

08007b8c <_Z23getFont_verdana_12_4bppv>:
{
 8007b8c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007b8e:	4d17      	ldr	r5, [pc, #92]	; (8007bec <_Z23getFont_verdana_12_4bppv+0x60>)
 8007b90:	682c      	ldr	r4, [r5, #0]
 8007b92:	f3bf 8f5b 	dmb	ish
 8007b96:	f014 0401 	ands.w	r4, r4, #1
{
 8007b9a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007b9c:	d122      	bne.n	8007be4 <_Z23getFont_verdana_12_4bppv+0x58>
 8007b9e:	4628      	mov	r0, r5
 8007ba0:	f022 f92d 	bl	8029dfe <__cxa_guard_acquire>
 8007ba4:	b1f0      	cbz	r0, 8007be4 <_Z23getFont_verdana_12_4bppv+0x58>
 8007ba6:	233f      	movs	r3, #63	; 0x3f
 8007ba8:	9309      	str	r3, [sp, #36]	; 0x24
 8007baa:	4b11      	ldr	r3, [pc, #68]	; (8007bf0 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007bac:	9308      	str	r3, [sp, #32]
 8007bae:	4b11      	ldr	r3, [pc, #68]	; (8007bf4 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007bb0:	9307      	str	r3, [sp, #28]
 8007bb2:	2301      	movs	r3, #1
 8007bb4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007bb8:	9304      	str	r3, [sp, #16]
 8007bba:	2304      	movs	r3, #4
 8007bbc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007bc0:	230c      	movs	r3, #12
 8007bc2:	490d      	ldr	r1, [pc, #52]	; (8007bf8 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007bc4:	9300      	str	r3, [sp, #0]
 8007bc6:	2260      	movs	r2, #96	; 0x60
 8007bc8:	230f      	movs	r3, #15
 8007bca:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007bce:	480b      	ldr	r0, [pc, #44]	; (8007bfc <_Z23getFont_verdana_12_4bppv+0x70>)
 8007bd0:	940a      	str	r4, [sp, #40]	; 0x28
 8007bd2:	9401      	str	r4, [sp, #4]
 8007bd4:	f7fd f9ec 	bl	8004fb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007bd8:	4809      	ldr	r0, [pc, #36]	; (8007c00 <_Z23getFont_verdana_12_4bppv+0x74>)
 8007bda:	f022 ff3f 	bl	802aa5c <atexit>
 8007bde:	4628      	mov	r0, r5
 8007be0:	f022 f919 	bl	8029e16 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007be4:	4805      	ldr	r0, [pc, #20]	; (8007bfc <_Z23getFont_verdana_12_4bppv+0x70>)
 8007be6:	b00f      	add	sp, #60	; 0x3c
 8007be8:	bd30      	pop	{r4, r5, pc}
 8007bea:	bf00      	nop
 8007bec:	200023ec 	.word	0x200023ec
 8007bf0:	08046a08 	.word	0x08046a08
 8007bf4:	08046c14 	.word	0x08046c14
 8007bf8:	08045f50 	.word	0x08045f50
 8007bfc:	200023f0 	.word	0x200023f0
 8007c00:	08007b89 	.word	0x08007b89

08007c04 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007c04:	4770      	bx	lr
	...

08007c08 <_Z23getFont_verdana_19_4bppv>:
{
 8007c08:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007c0a:	4d17      	ldr	r5, [pc, #92]	; (8007c68 <_Z23getFont_verdana_19_4bppv+0x60>)
 8007c0c:	682c      	ldr	r4, [r5, #0]
 8007c0e:	f3bf 8f5b 	dmb	ish
 8007c12:	f014 0401 	ands.w	r4, r4, #1
{
 8007c16:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007c18:	d122      	bne.n	8007c60 <_Z23getFont_verdana_19_4bppv+0x58>
 8007c1a:	4628      	mov	r0, r5
 8007c1c:	f022 f8ef 	bl	8029dfe <__cxa_guard_acquire>
 8007c20:	b1f0      	cbz	r0, 8007c60 <_Z23getFont_verdana_19_4bppv+0x58>
 8007c22:	233f      	movs	r3, #63	; 0x3f
 8007c24:	9309      	str	r3, [sp, #36]	; 0x24
 8007c26:	4b11      	ldr	r3, [pc, #68]	; (8007c6c <_Z23getFont_verdana_19_4bppv+0x64>)
 8007c28:	9308      	str	r3, [sp, #32]
 8007c2a:	4b11      	ldr	r3, [pc, #68]	; (8007c70 <_Z23getFont_verdana_19_4bppv+0x68>)
 8007c2c:	9307      	str	r3, [sp, #28]
 8007c2e:	2301      	movs	r3, #1
 8007c30:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007c34:	9304      	str	r3, [sp, #16]
 8007c36:	2304      	movs	r3, #4
 8007c38:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007c3c:	2313      	movs	r3, #19
 8007c3e:	490d      	ldr	r1, [pc, #52]	; (8007c74 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007c40:	9300      	str	r3, [sp, #0]
 8007c42:	225f      	movs	r2, #95	; 0x5f
 8007c44:	2317      	movs	r3, #23
 8007c46:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007c4a:	480b      	ldr	r0, [pc, #44]	; (8007c78 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007c4c:	940a      	str	r4, [sp, #40]	; 0x28
 8007c4e:	9401      	str	r4, [sp, #4]
 8007c50:	f7fd f9ae 	bl	8004fb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007c54:	4809      	ldr	r0, [pc, #36]	; (8007c7c <_Z23getFont_verdana_19_4bppv+0x74>)
 8007c56:	f022 ff01 	bl	802aa5c <atexit>
 8007c5a:	4628      	mov	r0, r5
 8007c5c:	f022 f8db 	bl	8029e16 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007c60:	4805      	ldr	r0, [pc, #20]	; (8007c78 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007c62:	b00f      	add	sp, #60	; 0x3c
 8007c64:	bd30      	pop	{r4, r5, pc}
 8007c66:	bf00      	nop
 8007c68:	2000241c 	.word	0x2000241c
 8007c6c:	08046a8c 	.word	0x08046a8c
 8007c70:	08046c18 	.word	0x08046c18
 8007c74:	08046490 	.word	0x08046490
 8007c78:	20002420 	.word	0x20002420
 8007c7c:	08007c05 	.word	0x08007c05

08007c80 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007c80:	4770      	bx	lr
	...

08007c84 <_Z23getFont_verdana_40_4bppv>:
{
 8007c84:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007c86:	4d16      	ldr	r5, [pc, #88]	; (8007ce0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007c88:	682c      	ldr	r4, [r5, #0]
 8007c8a:	f3bf 8f5b 	dmb	ish
 8007c8e:	f014 0401 	ands.w	r4, r4, #1
{
 8007c92:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007c94:	d120      	bne.n	8007cd8 <_Z23getFont_verdana_40_4bppv+0x54>
 8007c96:	4628      	mov	r0, r5
 8007c98:	f022 f8b1 	bl	8029dfe <__cxa_guard_acquire>
 8007c9c:	b1e0      	cbz	r0, 8007cd8 <_Z23getFont_verdana_40_4bppv+0x54>
 8007c9e:	233f      	movs	r3, #63	; 0x3f
 8007ca0:	9309      	str	r3, [sp, #36]	; 0x24
 8007ca2:	4b10      	ldr	r3, [pc, #64]	; (8007ce4 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007ca4:	9308      	str	r3, [sp, #32]
 8007ca6:	4b10      	ldr	r3, [pc, #64]	; (8007ce8 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007ca8:	4910      	ldr	r1, [pc, #64]	; (8007cec <_Z23getFont_verdana_40_4bppv+0x68>)
 8007caa:	4811      	ldr	r0, [pc, #68]	; (8007cf0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007cac:	940a      	str	r4, [sp, #40]	; 0x28
 8007cae:	2201      	movs	r2, #1
 8007cb0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007cb4:	2304      	movs	r3, #4
 8007cb6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007cba:	2328      	movs	r3, #40	; 0x28
 8007cbc:	9300      	str	r3, [sp, #0]
 8007cbe:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007cc2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007cc6:	9405      	str	r4, [sp, #20]
 8007cc8:	f7fd f972 	bl	8004fb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007ccc:	4809      	ldr	r0, [pc, #36]	; (8007cf4 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007cce:	f022 fec5 	bl	802aa5c <atexit>
 8007cd2:	4628      	mov	r0, r5
 8007cd4:	f022 f89f 	bl	8029e16 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007cd8:	4805      	ldr	r0, [pc, #20]	; (8007cf0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007cda:	b00f      	add	sp, #60	; 0x3c
 8007cdc:	bd30      	pop	{r4, r5, pc}
 8007cde:	bf00      	nop
 8007ce0:	2000244c 	.word	0x2000244c
 8007ce4:	08046c0c 	.word	0x08046c0c
 8007ce8:	08046c1c 	.word	0x08046c1c
 8007cec:	080469c4 	.word	0x080469c4
 8007cf0:	20002450 	.word	0x20002450
 8007cf4:	08007c81 	.word	0x08007c81

08007cf8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007cf8:	2000      	movs	r0, #0
 8007cfa:	4770      	bx	lr

08007cfc <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8007cfc:	2000      	movs	r0, #0
 8007cfe:	4770      	bx	lr

08007d00 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007d00:	b40e      	push	{r1, r2, r3}
 8007d02:	b503      	push	{r0, r1, lr}
 8007d04:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007d06:	2100      	movs	r1, #0
{
 8007d08:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007d0c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007d0e:	f00e ff7d 	bl	8016c0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007d12:	b002      	add	sp, #8
 8007d14:	f85d eb04 	ldr.w	lr, [sp], #4
 8007d18:	b003      	add	sp, #12
 8007d1a:	4770      	bx	lr

08007d1c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007d1c:	b40c      	push	{r2, r3}
 8007d1e:	b507      	push	{r0, r1, r2, lr}
 8007d20:	ab04      	add	r3, sp, #16
 8007d22:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007d26:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007d28:	f00e ff70 	bl	8016c0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007d2c:	b003      	add	sp, #12
 8007d2e:	f85d eb04 	ldr.w	lr, [sp], #4
 8007d32:	b002      	add	sp, #8
 8007d34:	4770      	bx	lr
	...

08007d38 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8007d38:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8007d3a:	b510      	push	{r4, lr}
 8007d3c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007d3e:	b373      	cbz	r3, 8007d9e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007d40:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007d42:	b92b      	cbnz	r3, 8007d50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007d44:	4b18      	ldr	r3, [pc, #96]	; (8007da8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007d46:	4a19      	ldr	r2, [pc, #100]	; (8007dac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007d48:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8007d4a:	4819      	ldr	r0, [pc, #100]	; (8007db0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007d4c:	f022 fe68 	bl	802aa20 <__assert_func>
            return buffer[pos];
 8007d50:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007d52:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007d56:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8007d58:	b30b      	cbz	r3, 8007d9e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8007d5a:	f010 fb92 	bl	8018482 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007d5e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007d60:	2b01      	cmp	r3, #1
 8007d62:	d803      	bhi.n	8007d6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007d64:	4b13      	ldr	r3, [pc, #76]	; (8007db4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8007d66:	4a14      	ldr	r2, [pc, #80]	; (8007db8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8007d68:	21cb      	movs	r1, #203	; 0xcb
 8007d6a:	e7ee      	b.n	8007d4a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007d6c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007d6e:	1c53      	adds	r3, r2, #1
 8007d70:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007d72:	2b09      	cmp	r3, #9
 8007d74:	4619      	mov	r1, r3
 8007d76:	bf88      	it	hi
 8007d78:	f1a3 010a 	subhi.w	r1, r3, #10
 8007d7c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007d80:	f640 103f 	movw	r0, #2367	; 0x93f
 8007d84:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8007d86:	4281      	cmp	r1, r0
 8007d88:	d109      	bne.n	8007d9e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007d8a:	2b0a      	cmp	r3, #10
 8007d8c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007d90:	bf28      	it	cs
 8007d92:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007d94:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007d98:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007d9a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007d9c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007d9e:	4620      	mov	r0, r4
}
 8007da0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007da4:	f010 ba70 	b.w	8018288 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007da8:	0802de14 	.word	0x0802de14
 8007dac:	0802de1d 	.word	0x0802de1d
 8007db0:	0802dec8 	.word	0x0802dec8
 8007db4:	0802df12 	.word	0x0802df12
 8007db8:	0802df20 	.word	0x0802df20

08007dbc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007dbc:	f010 ba2b 	b.w	8018216 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007dc0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007dc0:	b510      	push	{r4, lr}
 8007dc2:	b086      	sub	sp, #24
 8007dc4:	ac02      	add	r4, sp, #8
 8007dc6:	e884 0006 	stmia.w	r4, {r1, r2}
 8007dca:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007dcc:	ab0a      	add	r3, sp, #40	; 0x28
 8007dce:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007dd0:	9301      	str	r3, [sp, #4]
 8007dd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007dd4:	9300      	str	r3, [sp, #0]
 8007dd6:	4621      	mov	r1, r4
 8007dd8:	9b08      	ldr	r3, [sp, #32]
 8007dda:	f00d fadb 	bl	8015394 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8007dde:	b006      	add	sp, #24
 8007de0:	bd10      	pop	{r4, pc}
	...

08007de4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007de4:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007de6:	bb18      	cbnz	r0, 8007e30 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007de8:	4b12      	ldr	r3, [pc, #72]	; (8007e34 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8007dea:	4813      	ldr	r0, [pc, #76]	; (8007e38 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8007dec:	681c      	ldr	r4, [r3, #0]
 8007dee:	4913      	ldr	r1, [pc, #76]	; (8007e3c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007df0:	b1b4      	cbz	r4, 8007e20 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007df2:	6822      	ldr	r2, [r4, #0]
 8007df4:	4422      	add	r2, r4
 8007df6:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007df8:	6862      	ldr	r2, [r4, #4]
 8007dfa:	4422      	add	r2, r4
 8007dfc:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007dfe:	68a2      	ldr	r2, [r4, #8]
 8007e00:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007e02:	4b0f      	ldr	r3, [pc, #60]	; (8007e40 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007e04:	2200      	movs	r2, #0
 8007e06:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007e08:	f000 f838 	bl	8007e7c <_ZN17TypedTextDatabase8getFontsEv>
 8007e0c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8007e0e:	f000 f833 	bl	8007e78 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007e12:	4b0c      	ldr	r3, [pc, #48]	; (8007e44 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007e14:	601c      	str	r4, [r3, #0]
        fonts = f;
 8007e16:	4b0c      	ldr	r3, [pc, #48]	; (8007e48 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8007e18:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8007e1a:	4b0c      	ldr	r3, [pc, #48]	; (8007e4c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8007e1c:	8018      	strh	r0, [r3, #0]
    }
}
 8007e1e:	e007      	b.n	8007e30 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8007e20:	4b0b      	ldr	r3, [pc, #44]	; (8007e50 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8007e22:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007e24:	4b0b      	ldr	r3, [pc, #44]	; (8007e54 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8007e26:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8007e28:	4b0b      	ldr	r3, [pc, #44]	; (8007e58 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8007e2a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8007e2c:	2c00      	cmp	r4, #0
 8007e2e:	d1e8      	bne.n	8007e02 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007e30:	bd38      	pop	{r3, r4, r5, pc}
 8007e32:	bf00      	nop
 8007e34:	2000247c 	.word	0x2000247c
 8007e38:	20002480 	.word	0x20002480
 8007e3c:	20002484 	.word	0x20002484
 8007e40:	20002488 	.word	0x20002488
 8007e44:	20013314 	.word	0x20013314
 8007e48:	2001331c 	.word	0x2001331c
 8007e4c:	20013318 	.word	0x20013318
 8007e50:	08046d60 	.word	0x08046d60
 8007e54:	08046c20 	.word	0x08046c20
 8007e58:	08047258 	.word	0x08047258

08007e5c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8007e5c:	4b04      	ldr	r3, [pc, #16]	; (8007e70 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007e64:	4b03      	ldr	r3, [pc, #12]	; (8007e74 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8007e66:	681b      	ldr	r3, [r3, #0]
}
 8007e68:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007e6c:	4770      	bx	lr
 8007e6e:	bf00      	nop
 8007e70:	20002484 	.word	0x20002484
 8007e74:	20002480 	.word	0x20002480

08007e78 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8007e78:	2050      	movs	r0, #80	; 0x50
 8007e7a:	4770      	bx	lr

08007e7c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007e7c:	4800      	ldr	r0, [pc, #0]	; (8007e80 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007e7e:	4770      	bx	lr
 8007e80:	2000248c 	.word	0x2000248c

08007e84 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007e84:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8007e86:	f7ff febf 	bl	8007c08 <_Z23getFont_verdana_19_4bppv>
};
 8007e8a:	4c06      	ldr	r4, [pc, #24]	; (8007ea4 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8007e8c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8007e8e:	f7ff fef9 	bl	8007c84 <_Z23getFont_verdana_40_4bppv>
};
 8007e92:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8007e94:	f7ff fe3c 	bl	8007b10 <_Z23getFont_verdana_10_4bppv>
};
 8007e98:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8007e9a:	f7ff fe77 	bl	8007b8c <_Z23getFont_verdana_12_4bppv>
};
 8007e9e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8007ea0:	bd10      	pop	{r4, pc}
 8007ea2:	bf00      	nop
 8007ea4:	2000248c 	.word	0x2000248c

08007ea8 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8007ea8:	4770      	bx	lr

08007eaa <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8007eaa:	3804      	subs	r0, #4
 8007eac:	4770      	bx	lr

08007eae <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8007eae:	4770      	bx	lr

08007eb0 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8007eb0:	4770      	bx	lr

08007eb2 <_ZN24Calibration_PadPresenterD0Ev>:
 8007eb2:	b510      	push	{r4, lr}
 8007eb4:	2110      	movs	r1, #16
 8007eb6:	4604      	mov	r4, r0
 8007eb8:	f021 ff9f 	bl	8029dfa <_ZdlPvj>
 8007ebc:	4620      	mov	r0, r4
 8007ebe:	bd10      	pop	{r4, pc}

08007ec0 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8007ec0:	f1a0 0004 	sub.w	r0, r0, #4
 8007ec4:	e7f5      	b.n	8007eb2 <_ZN24Calibration_PadPresenterD0Ev>

08007ec6 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8007ec6:	4770      	bx	lr

08007ec8 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8007ec8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007eca:	2200      	movs	r2, #0
 8007ecc:	6082      	str	r2, [r0, #8]
    : view(v)
 8007ece:	4a04      	ldr	r2, [pc, #16]	; (8007ee0 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8007ed0:	60c1      	str	r1, [r0, #12]
 8007ed2:	f102 0408 	add.w	r4, r2, #8
 8007ed6:	3224      	adds	r2, #36	; 0x24
 8007ed8:	6004      	str	r4, [r0, #0]
 8007eda:	6042      	str	r2, [r0, #4]
}
 8007edc:	bd10      	pop	{r4, pc}
 8007ede:	bf00      	nop
 8007ee0:	0802dff4 	.word	0x0802dff4

08007ee4 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8007ee4:	4770      	bx	lr

08007ee6 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8007ee6:	4770      	bx	lr

08007ee8 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8007ee8:	b510      	push	{r4, lr}
 8007eea:	4b03      	ldr	r3, [pc, #12]	; (8007ef8 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8007eec:	6003      	str	r3, [r0, #0]
 8007eee:	4604      	mov	r4, r0
 8007ef0:	f7fa fcdc 	bl	80028ac <_ZN23Calibration_PadViewBaseD1Ev>
 8007ef4:	4620      	mov	r0, r4
 8007ef6:	bd10      	pop	{r4, pc}
 8007ef8:	0802e02c 	.word	0x0802e02c

08007efc <_ZN19Calibration_PadViewD0Ev>:
 8007efc:	b510      	push	{r4, lr}
 8007efe:	4604      	mov	r4, r0
 8007f00:	f7ff fff2 	bl	8007ee8 <_ZN19Calibration_PadViewD1Ev>
 8007f04:	4620      	mov	r0, r4
 8007f06:	f241 71cc 	movw	r1, #6092	; 0x17cc
 8007f0a:	f021 ff76 	bl	8029dfa <_ZdlPvj>
 8007f0e:	4620      	mov	r0, r4
 8007f10:	bd10      	pop	{r4, pc}
	...

08007f14 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8007f14:	b510      	push	{r4, lr}
 8007f16:	4604      	mov	r4, r0
 8007f18:	f7fa fe94 	bl	8002c44 <_ZN23Calibration_PadViewBaseC1Ev>
 8007f1c:	4b01      	ldr	r3, [pc, #4]	; (8007f24 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8007f1e:	6023      	str	r3, [r4, #0]
}
 8007f20:	4620      	mov	r0, r4
 8007f22:	bd10      	pop	{r4, pc}
 8007f24:	0802e02c 	.word	0x0802e02c

08007f28 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 8007f28:	b530      	push	{r4, r5, lr}
 8007f2a:	4604      	mov	r4, r0
 8007f2c:	b0c5      	sub	sp, #276	; 0x114
 8007f2e:	f100 05e0 	add.w	r5, r0, #224	; 0xe0
 8007f32:	4629      	mov	r1, r5
 8007f34:	a807      	add	r0, sp, #28
 8007f36:	f7fa fdc5 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8007f3a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8007f3e:	9311      	str	r3, [sp, #68]	; 0x44
class SwipeContainer : public Container
 8007f40:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8007f44:	9312      	str	r3, [sp, #72]	; 0x48
 8007f46:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8007f4a:	4a41      	ldr	r2, [pc, #260]	; (8008050 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x128>)
 8007f4c:	9313      	str	r3, [sp, #76]	; 0x4c
 8007f4e:	f504 718c 	add.w	r1, r4, #280	; 0x118
 8007f52:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8007f56:	9207      	str	r2, [sp, #28]
 8007f58:	a815      	add	r0, sp, #84	; 0x54
 8007f5a:	9314      	str	r3, [sp, #80]	; 0x50
 8007f5c:	f7fa fdb2 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8007f60:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007f64:	931f      	str	r3, [sp, #124]	; 0x7c
 8007f66:	4b3b      	ldr	r3, [pc, #236]	; (8008054 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x12c>)
 8007f68:	9315      	str	r3, [sp, #84]	; 0x54
 8007f6a:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 8007f6e:	f88d 3080 	strb.w	r3, [sp, #128]	; 0x80
 8007f72:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8007f76:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8007f7a:	f8ad 3082 	strh.w	r3, [sp, #130]	; 0x82
 8007f7e:	a821      	add	r0, sp, #132	; 0x84
 8007f80:	f7fa fda0 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8007f84:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8007f88:	932b      	str	r3, [sp, #172]	; 0xac
 8007f8a:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 8007f8e:	4b32      	ldr	r3, [pc, #200]	; (8008058 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x130>)
 8007f90:	9321      	str	r3, [sp, #132]	; 0x84
 8007f92:	a82c      	add	r0, sp, #176	; 0xb0
 8007f94:	f7fa fd96 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8007f98:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8007f9c:	f8ad 30d6 	strh.w	r3, [sp, #214]	; 0xd6
 8007fa0:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8007fa4:	f88d 30d8 	strb.w	r3, [sp, #216]	; 0xd8
 8007fa8:	4b2c      	ldr	r3, [pc, #176]	; (800805c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x134>)
 8007faa:	932c      	str	r3, [sp, #176]	; 0xb0
 8007fac:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 8007fb0:	f8ad 30da 	strh.w	r3, [sp, #218]	; 0xda
 8007fb4:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8007fb8:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8007fbc:	f8ad 30dc 	strh.w	r3, [sp, #220]	; 0xdc
 8007fc0:	a838      	add	r0, sp, #224	; 0xe0
 8007fc2:	f7fa fd7f 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8007fc6:	4b26      	ldr	r3, [pc, #152]	; (8008060 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x138>)
 8007fc8:	9338      	str	r3, [sp, #224]	; 0xe0
 8007fca:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
 8007fce:	f8ad 3106 	strh.w	r3, [sp, #262]	; 0x106
 8007fd2:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8007fd6:	f88d 3108 	strb.w	r3, [sp, #264]	; 0x108

	SwipeContainer swipeContainer = swipeContainer1;
	uint32_t Rx_Data[6];

	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 6);
 8007fda:	a901      	add	r1, sp, #4
 8007fdc:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 8007fe0:	4820      	ldr	r0, [pc, #128]	; (8008064 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x13c>)
 8007fe2:	f8ad 310c 	strh.w	r3, [sp, #268]	; 0x10c
 8007fe6:	2206      	movs	r2, #6
 8007fe8:	f7f8 fc32 	bl	8000850 <Flash_Read_Data>

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8007fec:	9b01      	ldr	r3, [sp, #4]
 8007fee:	4a1e      	ldr	r2, [pc, #120]	; (8008068 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 8007ff0:	210a      	movs	r1, #10
 8007ff2:	f604 105c 	addw	r0, r4, #2396	; 0x95c
 8007ff6:	f010 fff9 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8007ffa:	9b02      	ldr	r3, [sp, #8]
 8007ffc:	4a1a      	ldr	r2, [pc, #104]	; (8008068 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 8007ffe:	210a      	movs	r1, #10
 8008000:	f604 1048 	addw	r0, r4, #2376	; 0x948
 8008004:	f010 fff2 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 8008008:	9b03      	ldr	r3, [sp, #12]
 800800a:	4a17      	ldr	r2, [pc, #92]	; (8008068 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 800800c:	210a      	movs	r1, #10
 800800e:	f604 1034 	addw	r0, r4, #2356	; 0x934
 8008012:	f010 ffeb 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 8008016:	9b04      	ldr	r3, [sp, #16]
 8008018:	4a13      	ldr	r2, [pc, #76]	; (8008068 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 800801a:	210a      	movs	r1, #10
 800801c:	f604 1098 	addw	r0, r4, #2456	; 0x998
 8008020:	f010 ffe4 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 8008024:	9b05      	ldr	r3, [sp, #20]
 8008026:	4a10      	ldr	r2, [pc, #64]	; (8008068 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 8008028:	210a      	movs	r1, #10
 800802a:	f604 1084 	addw	r0, r4, #2436	; 0x984
 800802e:	f010 ffdd 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 8008032:	9b06      	ldr	r3, [sp, #24]
 8008034:	4a0c      	ldr	r2, [pc, #48]	; (8008068 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x140>)
 8008036:	210a      	movs	r1, #10
 8008038:	f504 6017 	add.w	r0, r4, #2416	; 0x970
 800803c:	f010 ffd6 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 8008040:	4628      	mov	r0, r5
 8008042:	f00e ff0d 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8008046:	a807      	add	r0, sp, #28
 8008048:	f007 ffd8 	bl	800fffc <_ZN8touchgfx14SwipeContainerD1Ev>
 800804c:	b045      	add	sp, #276	; 0x114
 800804e:	bd30      	pop	{r4, r5, pc}
 8008050:	0802e6ac 	.word	0x0802e6ac
 8008054:	0802e770 	.word	0x0802e770
 8008058:	0802c5c0 	.word	0x0802c5c0
 800805c:	0802eb6c 	.word	0x0802eb6c
 8008060:	0802ed50 	.word	0x0802ed50
 8008064:	081e0000 	.word	0x081e0000
 8008068:	0802c502 	.word	0x0802c502

0800806c <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800806c:	f7fa bbdd 	b.w	800282a <_ZN23Calibration_PadViewBase11setupScreenEv>

08008070 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008070:	4770      	bx	lr

08008072 <_ZN19FrontendApplicationD0Ev>:
 8008072:	b510      	push	{r4, lr}
 8008074:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008078:	4604      	mov	r4, r0
 800807a:	f021 febe 	bl	8029dfa <_ZdlPvj>
 800807e:	4620      	mov	r0, r4
 8008080:	bd10      	pop	{r4, pc}

08008082 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008082:	b510      	push	{r4, lr}
 8008084:	4604      	mov	r4, r0
    {
        model.tick();
 8008086:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800808a:	f000 fafb 	bl	8008684 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800808e:	4620      	mov	r0, r4
    }
 8008090:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008094:	f00d bec0 	b.w	8015e18 <_ZN8touchgfx11Application15handleTickEventEv>

08008098 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008098:	b510      	push	{r4, lr}
 800809a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800809c:	f7fb fe62 	bl	8003d64 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80080a0:	4b01      	ldr	r3, [pc, #4]	; (80080a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80080a2:	6023      	str	r3, [r4, #0]
{

}
 80080a4:	4620      	mov	r0, r4
 80080a6:	bd10      	pop	{r4, pc}
 80080a8:	0802e06c 	.word	0x0802e06c

080080ac <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 80080ac:	4770      	bx	lr

080080ae <_ZThn4_N18Main_MenuPresenterD1Ev>:
 80080ae:	3804      	subs	r0, #4
 80080b0:	4770      	bx	lr

080080b2 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 80080b2:	4770      	bx	lr

080080b4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80080b4:	68c0      	ldr	r0, [r0, #12]
 80080b6:	6803      	ldr	r3, [r0, #0]
 80080b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80080ba:	4718      	bx	r3

080080bc <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80080bc:	f1a0 0004 	sub.w	r0, r0, #4
 80080c0:	f7ff bff8 	b.w	80080b4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

080080c4 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 80080c4:	b510      	push	{r4, lr}
 80080c6:	2110      	movs	r1, #16
 80080c8:	4604      	mov	r4, r0
 80080ca:	f021 fe96 	bl	8029dfa <_ZdlPvj>
 80080ce:	4620      	mov	r0, r4
 80080d0:	bd10      	pop	{r4, pc}

080080d2 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 80080d2:	f1a0 0004 	sub.w	r0, r0, #4
 80080d6:	e7f5      	b.n	80080c4 <_ZN18Main_MenuPresenterD0Ev>

080080d8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 80080d8:	b510      	push	{r4, lr}
 80080da:	2200      	movs	r2, #0
 80080dc:	6082      	str	r2, [r0, #8]
    : view(v)
 80080de:	4a04      	ldr	r2, [pc, #16]	; (80080f0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 80080e0:	60c1      	str	r1, [r0, #12]
 80080e2:	f102 0408 	add.w	r4, r2, #8
 80080e6:	3224      	adds	r2, #36	; 0x24
 80080e8:	6004      	str	r4, [r0, #0]
 80080ea:	6042      	str	r2, [r0, #4]
}
 80080ec:	bd10      	pop	{r4, pc}
 80080ee:	bf00      	nop
 80080f0:	0802e0b8 	.word	0x0802e0b8

080080f4 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 80080f4:	4770      	bx	lr
	...

080080f8 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 80080f8:	b510      	push	{r4, lr}
 80080fa:	4b03      	ldr	r3, [pc, #12]	; (8008108 <_ZN13Main_MenuViewD1Ev+0x10>)
 80080fc:	6003      	str	r3, [r0, #0]
 80080fe:	4604      	mov	r4, r0
 8008100:	f7fc ffaa 	bl	8005058 <_ZN17Main_MenuViewBaseD1Ev>
 8008104:	4620      	mov	r0, r4
 8008106:	bd10      	pop	{r4, pc}
 8008108:	0802e0f0 	.word	0x0802e0f0

0800810c <_ZN13Main_MenuViewD0Ev>:
 800810c:	b510      	push	{r4, lr}
 800810e:	4604      	mov	r4, r0
 8008110:	f7ff fff2 	bl	80080f8 <_ZN13Main_MenuViewD1Ev>
 8008114:	4620      	mov	r0, r4
 8008116:	f241 117c 	movw	r1, #4476	; 0x117c
 800811a:	f021 fe6e 	bl	8029dfa <_ZdlPvj>
 800811e:	4620      	mov	r0, r4
 8008120:	bd10      	pop	{r4, pc}
	...

08008124 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008124:	b510      	push	{r4, lr}
 8008126:	4604      	mov	r4, r0
 8008128:	f7fc ffe0 	bl	80050ec <_ZN17Main_MenuViewBaseC1Ev>
 800812c:	4b01      	ldr	r3, [pc, #4]	; (8008134 <_ZN13Main_MenuViewC1Ev+0x10>)
 800812e:	6023      	str	r3, [r4, #0]
}
 8008130:	4620      	mov	r0, r4
 8008132:	bd10      	pop	{r4, pc}
 8008134:	0802e0f0 	.word	0x0802e0f0

08008138 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008138:	f7fc bf6a 	b.w	8005010 <_ZN17Main_MenuViewBase11setupScreenEv>

0800813c <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800813c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800813e:	4a0a      	ldr	r2, [pc, #40]	; (8008168 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008140:	4605      	mov	r5, r0
 8008142:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008144:	460b      	mov	r3, r1
 8008146:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800814a:	2104      	movs	r1, #4
 800814c:	f010 ff4e 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008150:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008154:	f00e fe84 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008158:	b92c      	cbnz	r4, 8008166 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800815a:	f00d fd99 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800815e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008162:	f7fb beff 	b.w	8003f64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008166:	bd38      	pop	{r3, r4, r5, pc}
 8008168:	0802c502 	.word	0x0802c502

0800816c <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 800816c:	4770      	bx	lr

0800816e <_ZThn4_N20MeasurementPresenterD1Ev>:
 800816e:	3804      	subs	r0, #4
 8008170:	4770      	bx	lr

08008172 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008172:	4770      	bx	lr

08008174 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008174:	68c0      	ldr	r0, [r0, #12]
 8008176:	6803      	ldr	r3, [r0, #0]
 8008178:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800817a:	4718      	bx	r3

0800817c <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800817c:	f1a0 0004 	sub.w	r0, r0, #4
 8008180:	f7ff bff8 	b.w	8008174 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008184 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008184:	b510      	push	{r4, lr}
 8008186:	2110      	movs	r1, #16
 8008188:	4604      	mov	r4, r0
 800818a:	f021 fe36 	bl	8029dfa <_ZdlPvj>
 800818e:	4620      	mov	r0, r4
 8008190:	bd10      	pop	{r4, pc}

08008192 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008192:	f1a0 0004 	sub.w	r0, r0, #4
 8008196:	e7f5      	b.n	8008184 <_ZN20MeasurementPresenterD0Ev>

08008198 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008198:	b510      	push	{r4, lr}
 800819a:	2200      	movs	r2, #0
 800819c:	6082      	str	r2, [r0, #8]
    : view(v)
 800819e:	4a04      	ldr	r2, [pc, #16]	; (80081b0 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 80081a0:	60c1      	str	r1, [r0, #12]
 80081a2:	f102 0408 	add.w	r4, r2, #8
 80081a6:	3224      	adds	r2, #36	; 0x24
 80081a8:	6004      	str	r4, [r0, #0]
 80081aa:	6042      	str	r2, [r0, #4]
}
 80081ac:	bd10      	pop	{r4, pc}
 80081ae:	bf00      	nop
 80081b0:	0802e120 	.word	0x0802e120

080081b4 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 80081b4:	4770      	bx	lr
	...

080081b8 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 80081b8:	b510      	push	{r4, lr}
 80081ba:	4b03      	ldr	r3, [pc, #12]	; (80081c8 <_ZN15MeasurementViewD1Ev+0x10>)
 80081bc:	6003      	str	r3, [r0, #0]
 80081be:	4604      	mov	r4, r0
 80081c0:	f7fd fa04 	bl	80055cc <_ZN19MeasurementViewBaseD1Ev>
 80081c4:	4620      	mov	r0, r4
 80081c6:	bd10      	pop	{r4, pc}
 80081c8:	0802e158 	.word	0x0802e158

080081cc <_ZN15MeasurementViewD0Ev>:
 80081cc:	b510      	push	{r4, lr}
 80081ce:	4604      	mov	r4, r0
 80081d0:	f7ff fff2 	bl	80081b8 <_ZN15MeasurementViewD1Ev>
 80081d4:	4620      	mov	r0, r4
 80081d6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80081da:	f021 fe0e 	bl	8029dfa <_ZdlPvj>
 80081de:	4620      	mov	r0, r4
 80081e0:	bd10      	pop	{r4, pc}
	...

080081e4 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 80081e4:	b510      	push	{r4, lr}
 80081e6:	4604      	mov	r4, r0
 80081e8:	f7fd fa2a 	bl	8005640 <_ZN19MeasurementViewBaseC1Ev>
 80081ec:	4b01      	ldr	r3, [pc, #4]	; (80081f4 <_ZN15MeasurementViewC1Ev+0x10>)
 80081ee:	6023      	str	r3, [r4, #0]
}
 80081f0:	4620      	mov	r0, r4
 80081f2:	bd10      	pop	{r4, pc}
 80081f4:	0802e158 	.word	0x0802e158

080081f8 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 80081f8:	f7fd b9c4 	b.w	8005584 <_ZN19MeasurementViewBase11setupScreenEv>

080081fc <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 80081fc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80081fe:	4a0a      	ldr	r2, [pc, #40]	; (8008228 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008200:	4605      	mov	r5, r0
 8008202:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008204:	460b      	mov	r3, r1
 8008206:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800820a:	2104      	movs	r1, #4
 800820c:	f010 feee 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008210:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008214:	f00e fe24 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008218:	b92c      	cbnz	r4, 8008226 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800821a:	f00d fd39 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800821e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008222:	f7fb be9f 	b.w	8003f64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008226:	bd38      	pop	{r3, r4, r5, pc}
 8008228:	0802c502 	.word	0x0802c502

0800822c <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800822c:	4770      	bx	lr

0800822e <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800822e:	3804      	subs	r0, #4
 8008230:	4770      	bx	lr

08008232 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008232:	4770      	bx	lr

08008234 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008234:	68c0      	ldr	r0, [r0, #12]
 8008236:	6803      	ldr	r3, [r0, #0]
 8008238:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800823a:	4718      	bx	r3

0800823c <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800823c:	f1a0 0004 	sub.w	r0, r0, #4
 8008240:	f7ff bff8 	b.w	8008234 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008244 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008244:	b510      	push	{r4, lr}
 8008246:	2110      	movs	r1, #16
 8008248:	4604      	mov	r4, r0
 800824a:	f021 fdd6 	bl	8029dfa <_ZdlPvj>
 800824e:	4620      	mov	r0, r4
 8008250:	bd10      	pop	{r4, pc}

08008252 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008252:	f1a0 0004 	sub.w	r0, r0, #4
 8008256:	e7f5      	b.n	8008244 <_ZN29Measurement_AccuratePresenterD0Ev>

08008258 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008258:	b510      	push	{r4, lr}
 800825a:	2200      	movs	r2, #0
 800825c:	6082      	str	r2, [r0, #8]
    : view(v)
 800825e:	4a04      	ldr	r2, [pc, #16]	; (8008270 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008260:	60c1      	str	r1, [r0, #12]
 8008262:	f102 0408 	add.w	r4, r2, #8
 8008266:	3224      	adds	r2, #36	; 0x24
 8008268:	6004      	str	r4, [r0, #0]
 800826a:	6042      	str	r2, [r0, #4]
}
 800826c:	bd10      	pop	{r4, pc}
 800826e:	bf00      	nop
 8008270:	0802e188 	.word	0x0802e188

08008274 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008274:	4770      	bx	lr
	...

08008278 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008278:	b510      	push	{r4, lr}
 800827a:	4b03      	ldr	r3, [pc, #12]	; (8008288 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 800827c:	6003      	str	r3, [r0, #0]
 800827e:	4604      	mov	r4, r0
 8008280:	f7fd fc26 	bl	8005ad0 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008284:	4620      	mov	r0, r4
 8008286:	bd10      	pop	{r4, pc}
 8008288:	0802e1c0 	.word	0x0802e1c0

0800828c <_ZN24Measurement_AccurateViewD0Ev>:
 800828c:	b510      	push	{r4, lr}
 800828e:	4604      	mov	r4, r0
 8008290:	f7ff fff2 	bl	8008278 <_ZN24Measurement_AccurateViewD1Ev>
 8008294:	4620      	mov	r0, r4
 8008296:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800829a:	f021 fdae 	bl	8029dfa <_ZdlPvj>
 800829e:	4620      	mov	r0, r4
 80082a0:	bd10      	pop	{r4, pc}
	...

080082a4 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 80082a4:	b510      	push	{r4, lr}
 80082a6:	4604      	mov	r4, r0
 80082a8:	f7fd fc4c 	bl	8005b44 <_ZN28Measurement_AccurateViewBaseC1Ev>
 80082ac:	4b01      	ldr	r3, [pc, #4]	; (80082b4 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 80082ae:	6023      	str	r3, [r4, #0]
}
 80082b0:	4620      	mov	r0, r4
 80082b2:	bd10      	pop	{r4, pc}
 80082b4:	0802e1c0 	.word	0x0802e1c0

080082b8 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 80082b8:	f7fd bbe6 	b.w	8005a88 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

080082bc <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 80082bc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80082be:	4a0a      	ldr	r2, [pc, #40]	; (80082e8 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 80082c0:	4605      	mov	r5, r0
 80082c2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80082c4:	460b      	mov	r3, r1
 80082c6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80082ca:	2104      	movs	r1, #4
 80082cc:	f010 fe8e 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80082d0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80082d4:	f00e fdc4 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80082d8:	b92c      	cbnz	r4, 80082e6 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 80082da:	f00d fcd9 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80082de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80082e2:	f7fb be3f 	b.w	8003f64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80082e6:	bd38      	pop	{r3, r4, r5, pc}
 80082e8:	0802c502 	.word	0x0802c502

080082ec <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 80082ec:	4770      	bx	lr

080082ee <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 80082ee:	3804      	subs	r0, #4
 80082f0:	4770      	bx	lr

080082f2 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 80082f2:	4770      	bx	lr

080082f4 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 80082f4:	4770      	bx	lr

080082f6 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 80082f6:	b510      	push	{r4, lr}
 80082f8:	2110      	movs	r1, #16
 80082fa:	4604      	mov	r4, r0
 80082fc:	f021 fd7d 	bl	8029dfa <_ZdlPvj>
 8008300:	4620      	mov	r0, r4
 8008302:	bd10      	pop	{r4, pc}

08008304 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008304:	f1a0 0004 	sub.w	r0, r0, #4
 8008308:	e7f5      	b.n	80082f6 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800830a <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800830a:	4770      	bx	lr

0800830c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800830c:	b510      	push	{r4, lr}
 800830e:	2200      	movs	r2, #0
 8008310:	6082      	str	r2, [r0, #8]
    : view(v)
 8008312:	4a04      	ldr	r2, [pc, #16]	; (8008324 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008314:	60c1      	str	r1, [r0, #12]
 8008316:	f102 0408 	add.w	r4, r2, #8
 800831a:	3224      	adds	r2, #36	; 0x24
 800831c:	6004      	str	r4, [r0, #0]
 800831e:	6042      	str	r2, [r0, #4]
}
 8008320:	bd10      	pop	{r4, pc}
 8008322:	bf00      	nop
 8008324:	0802e1f0 	.word	0x0802e1f0

08008328 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008328:	4770      	bx	lr
	...

0800832c <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800832c:	b510      	push	{r4, lr}
 800832e:	4b03      	ldr	r3, [pc, #12]	; (800833c <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008330:	6003      	str	r3, [r0, #0]
 8008332:	4604      	mov	r4, r0
 8008334:	f7fd fe4a 	bl	8005fcc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008338:	4620      	mov	r0, r4
 800833a:	bd10      	pop	{r4, pc}
 800833c:	0802e228 	.word	0x0802e228

08008340 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008340:	b510      	push	{r4, lr}
 8008342:	4604      	mov	r4, r0
 8008344:	f7ff fff2 	bl	800832c <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008348:	4620      	mov	r0, r4
 800834a:	f241 015c 	movw	r1, #4188	; 0x105c
 800834e:	f021 fd54 	bl	8029dfa <_ZdlPvj>
 8008352:	4620      	mov	r0, r4
 8008354:	bd10      	pop	{r4, pc}
	...

08008358 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008358:	b510      	push	{r4, lr}
 800835a:	4604      	mov	r4, r0
 800835c:	f7fd fe5e 	bl	800601c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008360:	4b01      	ldr	r3, [pc, #4]	; (8008368 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008362:	6023      	str	r3, [r4, #0]
}
 8008364:	4620      	mov	r0, r4
 8008366:	bd10      	pop	{r4, pc}
 8008368:	0802e228 	.word	0x0802e228

0800836c <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800836c:	f7fd be0a 	b.w	8005f84 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008370 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008370:	4770      	bx	lr

08008372 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008372:	3804      	subs	r0, #4
 8008374:	4770      	bx	lr

08008376 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008376:	4770      	bx	lr

08008378 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008378:	4770      	bx	lr

0800837a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800837a:	b510      	push	{r4, lr}
 800837c:	2110      	movs	r1, #16
 800837e:	4604      	mov	r4, r0
 8008380:	f021 fd3b 	bl	8029dfa <_ZdlPvj>
 8008384:	4620      	mov	r0, r4
 8008386:	bd10      	pop	{r4, pc}

08008388 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008388:	f1a0 0004 	sub.w	r0, r0, #4
 800838c:	e7f5      	b.n	800837a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800838e <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800838e:	4770      	bx	lr

08008390 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008390:	b510      	push	{r4, lr}
 8008392:	2200      	movs	r2, #0
 8008394:	6082      	str	r2, [r0, #8]
    : view(v)
 8008396:	4a04      	ldr	r2, [pc, #16]	; (80083a8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008398:	60c1      	str	r1, [r0, #12]
 800839a:	f102 0408 	add.w	r4, r2, #8
 800839e:	3224      	adds	r2, #36	; 0x24
 80083a0:	6004      	str	r4, [r0, #0]
 80083a2:	6042      	str	r2, [r0, #4]
}
 80083a4:	bd10      	pop	{r4, pc}
 80083a6:	bf00      	nop
 80083a8:	0802e254 	.word	0x0802e254

080083ac <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 80083ac:	4770      	bx	lr
	...

080083b0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 80083b0:	b510      	push	{r4, lr}
 80083b2:	4b03      	ldr	r3, [pc, #12]	; (80083c0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 80083b4:	6003      	str	r3, [r0, #0]
 80083b6:	4604      	mov	r4, r0
 80083b8:	f7fd ffba 	bl	8006330 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80083bc:	4620      	mov	r0, r4
 80083be:	bd10      	pop	{r4, pc}
 80083c0:	0802e28c 	.word	0x0802e28c

080083c4 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80083c4:	b510      	push	{r4, lr}
 80083c6:	4604      	mov	r4, r0
 80083c8:	f7ff fff2 	bl	80083b0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80083cc:	4620      	mov	r0, r4
 80083ce:	f241 015c 	movw	r1, #4188	; 0x105c
 80083d2:	f021 fd12 	bl	8029dfa <_ZdlPvj>
 80083d6:	4620      	mov	r0, r4
 80083d8:	bd10      	pop	{r4, pc}
	...

080083dc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80083dc:	b510      	push	{r4, lr}
 80083de:	4604      	mov	r4, r0
 80083e0:	f7fd ffce 	bl	8006380 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 80083e4:	4b01      	ldr	r3, [pc, #4]	; (80083ec <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 80083e6:	6023      	str	r3, [r4, #0]
}
 80083e8:	4620      	mov	r0, r4
 80083ea:	bd10      	pop	{r4, pc}
 80083ec:	0802e28c 	.word	0x0802e28c

080083f0 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 80083f0:	f7fd bf7a 	b.w	80062e8 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

080083f4 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 80083f4:	4770      	bx	lr

080083f6 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 80083f6:	3804      	subs	r0, #4
 80083f8:	4770      	bx	lr

080083fa <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 80083fa:	4770      	bx	lr

080083fc <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80083fc:	68c0      	ldr	r0, [r0, #12]
 80083fe:	6803      	ldr	r3, [r0, #0]
 8008400:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008402:	4718      	bx	r3

08008404 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008404:	f1a0 0004 	sub.w	r0, r0, #4
 8008408:	f7ff bff8 	b.w	80083fc <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800840c <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800840c:	b510      	push	{r4, lr}
 800840e:	2110      	movs	r1, #16
 8008410:	4604      	mov	r4, r0
 8008412:	f021 fcf2 	bl	8029dfa <_ZdlPvj>
 8008416:	4620      	mov	r0, r4
 8008418:	bd10      	pop	{r4, pc}

0800841a <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800841a:	f1a0 0004 	sub.w	r0, r0, #4
 800841e:	e7f5      	b.n	800840c <_ZN27Measurement_SinglePresenterD0Ev>

08008420 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008420:	b510      	push	{r4, lr}
 8008422:	2200      	movs	r2, #0
 8008424:	6082      	str	r2, [r0, #8]
    : view(v)
 8008426:	4a04      	ldr	r2, [pc, #16]	; (8008438 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008428:	60c1      	str	r1, [r0, #12]
 800842a:	f102 0408 	add.w	r4, r2, #8
 800842e:	3224      	adds	r2, #36	; 0x24
 8008430:	6004      	str	r4, [r0, #0]
 8008432:	6042      	str	r2, [r0, #4]
}
 8008434:	bd10      	pop	{r4, pc}
 8008436:	bf00      	nop
 8008438:	0802e2b8 	.word	0x0802e2b8

0800843c <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800843c:	4770      	bx	lr
	...

08008440 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008440:	b510      	push	{r4, lr}
 8008442:	4b03      	ldr	r3, [pc, #12]	; (8008450 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008444:	6003      	str	r3, [r0, #0]
 8008446:	4604      	mov	r4, r0
 8008448:	f7fe f922 	bl	8006690 <_ZN26Measurement_SingleViewBaseD1Ev>
 800844c:	4620      	mov	r0, r4
 800844e:	bd10      	pop	{r4, pc}
 8008450:	0802e2f0 	.word	0x0802e2f0

08008454 <_ZN22Measurement_SingleViewD0Ev>:
 8008454:	b510      	push	{r4, lr}
 8008456:	4604      	mov	r4, r0
 8008458:	f7ff fff2 	bl	8008440 <_ZN22Measurement_SingleViewD1Ev>
 800845c:	4620      	mov	r0, r4
 800845e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008462:	f021 fcca 	bl	8029dfa <_ZdlPvj>
 8008466:	4620      	mov	r0, r4
 8008468:	bd10      	pop	{r4, pc}
	...

0800846c <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800846c:	b510      	push	{r4, lr}
 800846e:	4604      	mov	r4, r0
 8008470:	f7fe f948 	bl	8006704 <_ZN26Measurement_SingleViewBaseC1Ev>
 8008474:	4b01      	ldr	r3, [pc, #4]	; (800847c <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008476:	6023      	str	r3, [r4, #0]
}
 8008478:	4620      	mov	r0, r4
 800847a:	bd10      	pop	{r4, pc}
 800847c:	0802e2f0 	.word	0x0802e2f0

08008480 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008480:	f7fe b8e2 	b.w	8006648 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008484 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008484:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008486:	4a0a      	ldr	r2, [pc, #40]	; (80084b0 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008488:	4605      	mov	r5, r0
 800848a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800848c:	460b      	mov	r3, r1
 800848e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008492:	2104      	movs	r1, #4
 8008494:	f010 fdaa 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008498:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800849c:	f00e fce0 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80084a0:	b92c      	cbnz	r4, 80084ae <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80084a2:	f00d fbf5 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80084a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80084aa:	f7fb bd5b 	b.w	8003f64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80084ae:	bd38      	pop	{r3, r4, r5, pc}
 80084b0:	0802c502 	.word	0x0802c502

080084b4 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80084b4:	4770      	bx	lr

080084b6 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80084b6:	3804      	subs	r0, #4
 80084b8:	4770      	bx	lr

080084ba <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80084ba:	4770      	bx	lr

080084bc <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80084bc:	4770      	bx	lr

080084be <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80084be:	b510      	push	{r4, lr}
 80084c0:	2110      	movs	r1, #16
 80084c2:	4604      	mov	r4, r0
 80084c4:	f021 fc99 	bl	8029dfa <_ZdlPvj>
 80084c8:	4620      	mov	r0, r4
 80084ca:	bd10      	pop	{r4, pc}

080084cc <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80084cc:	f1a0 0004 	sub.w	r0, r0, #4
 80084d0:	e7f5      	b.n	80084be <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080084d2 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80084d2:	4770      	bx	lr

080084d4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80084d4:	b510      	push	{r4, lr}
 80084d6:	2200      	movs	r2, #0
 80084d8:	6082      	str	r2, [r0, #8]
    : view(v)
 80084da:	4a04      	ldr	r2, [pc, #16]	; (80084ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80084dc:	60c1      	str	r1, [r0, #12]
 80084de:	f102 0408 	add.w	r4, r2, #8
 80084e2:	3224      	adds	r2, #36	; 0x24
 80084e4:	6004      	str	r4, [r0, #0]
 80084e6:	6042      	str	r2, [r0, #4]
}
 80084e8:	bd10      	pop	{r4, pc}
 80084ea:	bf00      	nop
 80084ec:	0802e320 	.word	0x0802e320

080084f0 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 80084f0:	4770      	bx	lr
	...

080084f4 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 80084f4:	b510      	push	{r4, lr}
 80084f6:	4b03      	ldr	r3, [pc, #12]	; (8008504 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 80084f8:	6003      	str	r3, [r0, #0]
 80084fa:	4604      	mov	r4, r0
 80084fc:	f7fe fb4c 	bl	8006b98 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008500:	4620      	mov	r0, r4
 8008502:	bd10      	pop	{r4, pc}
 8008504:	0802e360 	.word	0x0802e360

08008508 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008508:	b510      	push	{r4, lr}
 800850a:	4604      	mov	r4, r0
 800850c:	f7ff fff2 	bl	80084f4 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008510:	4620      	mov	r0, r4
 8008512:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8008516:	f021 fc70 	bl	8029dfa <_ZdlPvj>
 800851a:	4620      	mov	r0, r4
 800851c:	bd10      	pop	{r4, pc}
	...

08008520 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008520:	b510      	push	{r4, lr}
 8008522:	4604      	mov	r4, r0
 8008524:	f7fe fb72 	bl	8006c0c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008528:	4b01      	ldr	r3, [pc, #4]	; (8008530 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800852a:	6023      	str	r3, [r4, #0]
}
 800852c:	4620      	mov	r0, r4
 800852e:	bd10      	pop	{r4, pc}
 8008530:	0802e360 	.word	0x0802e360

08008534 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008534:	f7fe bb0b 	b.w	8006b4e <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008538 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8008538:	b5f0      	push	{r4, r5, r6, r7, lr}
 800853a:	4e2a      	ldr	r6, [pc, #168]	; (80085e4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 800853c:	4f2a      	ldr	r7, [pc, #168]	; (80085e8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 800853e:	4604      	mov	r4, r0
 8008540:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008542:	6803      	ldr	r3, [r0, #0]
{
 8008544:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008546:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008548:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 800854a:	2201      	movs	r2, #1
 800854c:	2180      	movs	r1, #128	; 0x80
 800854e:	4638      	mov	r0, r7
 8008550:	f000 ffe2 	bl	8009518 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 8008554:	f7f8 fa3c 	bl	80009d0 <updateGUI_test>
 8008558:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 800855a:	f7f8 ffcf 	bl	80014fc <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800855e:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8008560:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008562:	2001      	movs	r0, #1
 8008564:	f7f8 f980 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8008568:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 800856c:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800856e:	ed8d 0a04 	vstr	s0, [sp, #16]
 8008572:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8008576:	9001      	str	r0, [sp, #4]
 8008578:	f00a fc28 	bl	8012dcc <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 800857c:	9801      	ldr	r0, [sp, #4]
 800857e:	f00e fc6f 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8008582:	462b      	mov	r3, r5
 8008584:	4a19      	ldr	r2, [pc, #100]	; (80085ec <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 8008586:	210a      	movs	r1, #10
 8008588:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 800858c:	f010 fd2e 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8008590:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008594:	f00e fc64 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8008598:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800859a:	4a15      	ldr	r2, [pc, #84]	; (80085f0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 800859c:	9303      	str	r3, [sp, #12]
 800859e:	210a      	movs	r1, #10
 80085a0:	ab03      	add	r3, sp, #12
 80085a2:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80085a6:	f010 ff0d 	bl	80193c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80085aa:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80085ae:	f00e fc57 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80085b2:	9b05      	ldr	r3, [sp, #20]
 80085b4:	4a0e      	ldr	r2, [pc, #56]	; (80085f0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80085b6:	9303      	str	r3, [sp, #12]
 80085b8:	210a      	movs	r1, #10
 80085ba:	ab03      	add	r3, sp, #12
 80085bc:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80085c0:	f010 ff00 	bl	80193c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 80085c4:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80085c8:	f00e fc4a 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80085cc:	4638      	mov	r0, r7
 80085ce:	2200      	movs	r2, #0
 80085d0:	2180      	movs	r1, #128	; 0x80
 80085d2:	f000 ffa1 	bl	8009518 <HAL_GPIO_WritePin>
 80085d6:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80085d8:	6803      	ldr	r3, [r0, #0]
 80085da:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80085dc:	b007      	add	sp, #28
 80085de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80085e2:	4718      	bx	r3
 80085e4:	200132bc 	.word	0x200132bc
 80085e8:	40020000 	.word	0x40020000
 80085ec:	0802c502 	.word	0x0802c502
 80085f0:	0802e350 	.word	0x0802e350

080085f4 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80085f4:	4770      	bx	lr

080085f6 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80085f6:	3804      	subs	r0, #4
 80085f8:	4770      	bx	lr

080085fa <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 80085fa:	4770      	bx	lr

080085fc <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80085fc:	4770      	bx	lr

080085fe <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80085fe:	b510      	push	{r4, lr}
 8008600:	2110      	movs	r1, #16
 8008602:	4604      	mov	r4, r0
 8008604:	f021 fbf9 	bl	8029dfa <_ZdlPvj>
 8008608:	4620      	mov	r0, r4
 800860a:	bd10      	pop	{r4, pc}

0800860c <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800860c:	f1a0 0004 	sub.w	r0, r0, #4
 8008610:	e7f5      	b.n	80085fe <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008612 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008612:	4770      	bx	lr

08008614 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008614:	b510      	push	{r4, lr}
 8008616:	2200      	movs	r2, #0
 8008618:	6082      	str	r2, [r0, #8]
    : view(v)
 800861a:	4a04      	ldr	r2, [pc, #16]	; (800862c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800861c:	60c1      	str	r1, [r0, #12]
 800861e:	f102 0408 	add.w	r4, r2, #8
 8008622:	3224      	adds	r2, #36	; 0x24
 8008624:	6004      	str	r4, [r0, #0]
 8008626:	6042      	str	r2, [r0, #4]
}
 8008628:	bd10      	pop	{r4, pc}
 800862a:	bf00      	nop
 800862c:	0802e390 	.word	0x0802e390

08008630 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008630:	4770      	bx	lr
	...

08008634 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008634:	b510      	push	{r4, lr}
 8008636:	4b03      	ldr	r3, [pc, #12]	; (8008644 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008638:	6003      	str	r3, [r0, #0]
 800863a:	4604      	mov	r4, r0
 800863c:	f7fe fe4e 	bl	80072dc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008640:	4620      	mov	r0, r4
 8008642:	bd10      	pop	{r4, pc}
 8008644:	0802e3c8 	.word	0x0802e3c8

08008648 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008648:	b510      	push	{r4, lr}
 800864a:	4604      	mov	r4, r0
 800864c:	f7ff fff2 	bl	8008634 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008650:	4620      	mov	r0, r4
 8008652:	f241 015c 	movw	r1, #4188	; 0x105c
 8008656:	f021 fbd0 	bl	8029dfa <_ZdlPvj>
 800865a:	4620      	mov	r0, r4
 800865c:	bd10      	pop	{r4, pc}
	...

08008660 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008660:	b510      	push	{r4, lr}
 8008662:	4604      	mov	r4, r0
 8008664:	f7fe fe62 	bl	800732c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008668:	4b01      	ldr	r3, [pc, #4]	; (8008670 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800866a:	6023      	str	r3, [r4, #0]
}
 800866c:	4620      	mov	r0, r4
 800866e:	bd10      	pop	{r4, pc}
 8008670:	0802e3c8 	.word	0x0802e3c8

08008674 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008674:	f7fe be0e 	b.w	8007294 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008678 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008678:	2100      	movs	r1, #0
 800867a:	223c      	movs	r2, #60	; 0x3c
 800867c:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008680:	4770      	bx	lr
	...

08008684 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008684:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008686:	4d0a      	ldr	r5, [pc, #40]	; (80086b0 <_ZN5Model4tickEv+0x2c>)
{
 8008688:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800868a:	6828      	ldr	r0, [r5, #0]
 800868c:	f004 fc20 	bl	800ced0 <osMessageQueueGetCount>
 8008690:	b168      	cbz	r0, 80086ae <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008692:	2300      	movs	r3, #0
 8008694:	6828      	ldr	r0, [r5, #0]
 8008696:	461a      	mov	r2, r3
 8008698:	1d21      	adds	r1, r4, #4
 800869a:	f004 fbe5 	bl	800ce68 <osMessageQueueGet>
 800869e:	b930      	cbnz	r0, 80086ae <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80086a0:	6820      	ldr	r0, [r4, #0]
 80086a2:	6861      	ldr	r1, [r4, #4]
 80086a4:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80086a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80086aa:	689b      	ldr	r3, [r3, #8]
 80086ac:	4718      	bx	r3
}
 80086ae:	bd70      	pop	{r4, r5, r6, pc}
 80086b0:	200001d8 	.word	0x200001d8

080086b4 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80086b4:	4770      	bx	lr

080086b6 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80086b6:	3804      	subs	r0, #4
 80086b8:	4770      	bx	lr

080086ba <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80086ba:	4770      	bx	lr

080086bc <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80086bc:	68c0      	ldr	r0, [r0, #12]
 80086be:	6803      	ldr	r3, [r0, #0]
 80086c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086c2:	4718      	bx	r3

080086c4 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80086c4:	f1a0 0004 	sub.w	r0, r0, #4
 80086c8:	f7ff bff8 	b.w	80086bc <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080086cc <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80086cc:	b510      	push	{r4, lr}
 80086ce:	2110      	movs	r1, #16
 80086d0:	4604      	mov	r4, r0
 80086d2:	f021 fb92 	bl	8029dfa <_ZdlPvj>
 80086d6:	4620      	mov	r0, r4
 80086d8:	bd10      	pop	{r4, pc}

080086da <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80086da:	f1a0 0004 	sub.w	r0, r0, #4
 80086de:	e7f5      	b.n	80086cc <_ZN21Project_InfoPresenterD0Ev>

080086e0 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80086e0:	b510      	push	{r4, lr}
 80086e2:	2200      	movs	r2, #0
 80086e4:	6082      	str	r2, [r0, #8]
    : view(v)
 80086e6:	4a04      	ldr	r2, [pc, #16]	; (80086f8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 80086e8:	60c1      	str	r1, [r0, #12]
 80086ea:	f102 0408 	add.w	r4, r2, #8
 80086ee:	3224      	adds	r2, #36	; 0x24
 80086f0:	6004      	str	r4, [r0, #0]
 80086f2:	6042      	str	r2, [r0, #4]
}
 80086f4:	bd10      	pop	{r4, pc}
 80086f6:	bf00      	nop
 80086f8:	0802e3f4 	.word	0x0802e3f4

080086fc <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 80086fc:	4770      	bx	lr
	...

08008700 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008700:	b510      	push	{r4, lr}
 8008702:	4b03      	ldr	r3, [pc, #12]	; (8008710 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008704:	6003      	str	r3, [r0, #0]
 8008706:	4604      	mov	r4, r0
 8008708:	f7fe ff96 	bl	8007638 <_ZN20Project_InfoViewBaseD1Ev>
 800870c:	4620      	mov	r0, r4
 800870e:	bd10      	pop	{r4, pc}
 8008710:	0802e42c 	.word	0x0802e42c

08008714 <_ZN16Project_InfoViewD0Ev>:
 8008714:	b510      	push	{r4, lr}
 8008716:	4604      	mov	r4, r0
 8008718:	f7ff fff2 	bl	8008700 <_ZN16Project_InfoViewD1Ev>
 800871c:	4620      	mov	r0, r4
 800871e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008722:	f021 fb6a 	bl	8029dfa <_ZdlPvj>
 8008726:	4620      	mov	r0, r4
 8008728:	bd10      	pop	{r4, pc}
	...

0800872c <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800872c:	b510      	push	{r4, lr}
 800872e:	4604      	mov	r4, r0
 8008730:	f7fe ffaa 	bl	8007688 <_ZN20Project_InfoViewBaseC1Ev>
 8008734:	4b01      	ldr	r3, [pc, #4]	; (800873c <_ZN16Project_InfoViewC1Ev+0x10>)
 8008736:	6023      	str	r3, [r4, #0]
}
 8008738:	4620      	mov	r0, r4
 800873a:	bd10      	pop	{r4, pc}
 800873c:	0802e42c 	.word	0x0802e42c

08008740 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008740:	f7fe bf56 	b.w	80075f0 <_ZN20Project_InfoViewBase11setupScreenEv>

08008744 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008744:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008746:	4a0a      	ldr	r2, [pc, #40]	; (8008770 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008748:	4605      	mov	r5, r0
 800874a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800874c:	460b      	mov	r3, r1
 800874e:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008752:	2104      	movs	r1, #4
 8008754:	f010 fc4a 	bl	8018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008758:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800875c:	f00e fb80 	bl	8016e60 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008760:	b92c      	cbnz	r4, 800876e <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008762:	f00d fa95 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008766:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800876a:	f7fb bbfb 	b.w	8003f64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800876e:	bd38      	pop	{r3, r4, r5, pc}
 8008770:	0802c502 	.word	0x0802c502

08008774 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008774:	4770      	bx	lr

08008776 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008776:	3804      	subs	r0, #4
 8008778:	4770      	bx	lr

0800877a <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800877a:	4770      	bx	lr

0800877c <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800877c:	4770      	bx	lr

0800877e <_ZN21Shutting_OffPresenterD0Ev>:
 800877e:	b510      	push	{r4, lr}
 8008780:	2110      	movs	r1, #16
 8008782:	4604      	mov	r4, r0
 8008784:	f021 fb39 	bl	8029dfa <_ZdlPvj>
 8008788:	4620      	mov	r0, r4
 800878a:	bd10      	pop	{r4, pc}

0800878c <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800878c:	f1a0 0004 	sub.w	r0, r0, #4
 8008790:	e7f5      	b.n	800877e <_ZN21Shutting_OffPresenterD0Ev>

08008792 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008792:	4770      	bx	lr

08008794 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008794:	b510      	push	{r4, lr}
 8008796:	2200      	movs	r2, #0
 8008798:	6082      	str	r2, [r0, #8]
    : view(v)
 800879a:	4a04      	ldr	r2, [pc, #16]	; (80087ac <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800879c:	60c1      	str	r1, [r0, #12]
 800879e:	f102 0408 	add.w	r4, r2, #8
 80087a2:	3224      	adds	r2, #36	; 0x24
 80087a4:	6004      	str	r4, [r0, #0]
 80087a6:	6042      	str	r2, [r0, #4]
}
 80087a8:	bd10      	pop	{r4, pc}
 80087aa:	bf00      	nop
 80087ac:	0802e45c 	.word	0x0802e45c

080087b0 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80087b0:	4770      	bx	lr
	...

080087b4 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80087b4:	b510      	push	{r4, lr}
 80087b6:	4b03      	ldr	r3, [pc, #12]	; (80087c4 <_ZN16Shutting_OffViewD1Ev+0x10>)
 80087b8:	6003      	str	r3, [r0, #0]
 80087ba:	4604      	mov	r4, r0
 80087bc:	f7ff f932 	bl	8007a24 <_ZN20Shutting_OffViewBaseD1Ev>
 80087c0:	4620      	mov	r0, r4
 80087c2:	bd10      	pop	{r4, pc}
 80087c4:	0802e494 	.word	0x0802e494

080087c8 <_ZN16Shutting_OffViewD0Ev>:
 80087c8:	b510      	push	{r4, lr}
 80087ca:	4604      	mov	r4, r0
 80087cc:	f7ff fff2 	bl	80087b4 <_ZN16Shutting_OffViewD1Ev>
 80087d0:	4620      	mov	r0, r4
 80087d2:	2198      	movs	r1, #152	; 0x98
 80087d4:	f021 fb11 	bl	8029dfa <_ZdlPvj>
 80087d8:	4620      	mov	r0, r4
 80087da:	bd10      	pop	{r4, pc}

080087dc <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 80087dc:	b510      	push	{r4, lr}
 80087de:	4604      	mov	r4, r0
 80087e0:	f7ff f92a 	bl	8007a38 <_ZN20Shutting_OffViewBaseC1Ev>
 80087e4:	4b01      	ldr	r3, [pc, #4]	; (80087ec <_ZN16Shutting_OffViewC1Ev+0x10>)
 80087e6:	6023      	str	r3, [r4, #0]
}
 80087e8:	4620      	mov	r0, r4
 80087ea:	bd10      	pop	{r4, pc}
 80087ec:	0802e494 	.word	0x0802e494

080087f0 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 80087f0:	f7ff b919 	b.w	8007a26 <_ZN20Shutting_OffViewBase11setupScreenEv>

080087f4 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80087f4:	20f0      	movs	r0, #240	; 0xf0
 80087f6:	4770      	bx	lr

080087f8 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80087f8:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80087fc:	4770      	bx	lr
 80087fe:	bf00      	nop

08008800 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008800:	2029      	movs	r0, #41	; 0x29
 8008802:	f7f8 bcf3 	b.w	80011ec <LCD_IO_WriteReg>
 8008806:	bf00      	nop

08008808 <ili9341_DisplayOff>:
 8008808:	2028      	movs	r0, #40	; 0x28
 800880a:	f7f8 bcef 	b.w	80011ec <LCD_IO_WriteReg>
 800880e:	bf00      	nop

08008810 <ili9341_Init>:
{
 8008810:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008812:	f7f8 fcb1 	bl	8001178 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008816:	20ca      	movs	r0, #202	; 0xca
 8008818:	f7f8 fce8 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800881c:	20c3      	movs	r0, #195	; 0xc3
 800881e:	f7f8 fcbb 	bl	8001198 <LCD_IO_WriteData>
 8008822:	2008      	movs	r0, #8
 8008824:	f7f8 fcb8 	bl	8001198 <LCD_IO_WriteData>
 8008828:	2050      	movs	r0, #80	; 0x50
 800882a:	f7f8 fcb5 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800882e:	20cf      	movs	r0, #207	; 0xcf
 8008830:	f7f8 fcdc 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008834:	2000      	movs	r0, #0
 8008836:	f7f8 fcaf 	bl	8001198 <LCD_IO_WriteData>
 800883a:	20c1      	movs	r0, #193	; 0xc1
 800883c:	f7f8 fcac 	bl	8001198 <LCD_IO_WriteData>
 8008840:	2030      	movs	r0, #48	; 0x30
 8008842:	f7f8 fca9 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008846:	20ed      	movs	r0, #237	; 0xed
 8008848:	f7f8 fcd0 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800884c:	2064      	movs	r0, #100	; 0x64
 800884e:	f7f8 fca3 	bl	8001198 <LCD_IO_WriteData>
 8008852:	2003      	movs	r0, #3
 8008854:	f7f8 fca0 	bl	8001198 <LCD_IO_WriteData>
 8008858:	2012      	movs	r0, #18
 800885a:	f7f8 fc9d 	bl	8001198 <LCD_IO_WriteData>
 800885e:	2081      	movs	r0, #129	; 0x81
 8008860:	f7f8 fc9a 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008864:	20e8      	movs	r0, #232	; 0xe8
 8008866:	f7f8 fcc1 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800886a:	2085      	movs	r0, #133	; 0x85
 800886c:	f7f8 fc94 	bl	8001198 <LCD_IO_WriteData>
 8008870:	2000      	movs	r0, #0
 8008872:	f7f8 fc91 	bl	8001198 <LCD_IO_WriteData>
 8008876:	2078      	movs	r0, #120	; 0x78
 8008878:	f7f8 fc8e 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800887c:	20cb      	movs	r0, #203	; 0xcb
 800887e:	f7f8 fcb5 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008882:	2039      	movs	r0, #57	; 0x39
 8008884:	f7f8 fc88 	bl	8001198 <LCD_IO_WriteData>
 8008888:	202c      	movs	r0, #44	; 0x2c
 800888a:	f7f8 fc85 	bl	8001198 <LCD_IO_WriteData>
 800888e:	2000      	movs	r0, #0
 8008890:	f7f8 fc82 	bl	8001198 <LCD_IO_WriteData>
 8008894:	2034      	movs	r0, #52	; 0x34
 8008896:	f7f8 fc7f 	bl	8001198 <LCD_IO_WriteData>
 800889a:	2002      	movs	r0, #2
 800889c:	f7f8 fc7c 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088a0:	20f7      	movs	r0, #247	; 0xf7
 80088a2:	f7f8 fca3 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088a6:	2020      	movs	r0, #32
 80088a8:	f7f8 fc76 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088ac:	20ea      	movs	r0, #234	; 0xea
 80088ae:	f7f8 fc9d 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088b2:	2000      	movs	r0, #0
 80088b4:	f7f8 fc70 	bl	8001198 <LCD_IO_WriteData>
 80088b8:	2000      	movs	r0, #0
 80088ba:	f7f8 fc6d 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088be:	20b1      	movs	r0, #177	; 0xb1
 80088c0:	f7f8 fc94 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088c4:	2000      	movs	r0, #0
 80088c6:	f7f8 fc67 	bl	8001198 <LCD_IO_WriteData>
 80088ca:	201b      	movs	r0, #27
 80088cc:	f7f8 fc64 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088d0:	20b6      	movs	r0, #182	; 0xb6
 80088d2:	f7f8 fc8b 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088d6:	200a      	movs	r0, #10
 80088d8:	f7f8 fc5e 	bl	8001198 <LCD_IO_WriteData>
 80088dc:	20a2      	movs	r0, #162	; 0xa2
 80088de:	f7f8 fc5b 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088e2:	20c0      	movs	r0, #192	; 0xc0
 80088e4:	f7f8 fc82 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088e8:	2010      	movs	r0, #16
 80088ea:	f7f8 fc55 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088ee:	20c1      	movs	r0, #193	; 0xc1
 80088f0:	f7f8 fc7c 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088f4:	2010      	movs	r0, #16
 80088f6:	f7f8 fc4f 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088fa:	20c5      	movs	r0, #197	; 0xc5
 80088fc:	f7f8 fc76 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008900:	2045      	movs	r0, #69	; 0x45
 8008902:	f7f8 fc49 	bl	8001198 <LCD_IO_WriteData>
 8008906:	2015      	movs	r0, #21
 8008908:	f7f8 fc46 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800890c:	20c7      	movs	r0, #199	; 0xc7
 800890e:	f7f8 fc6d 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008912:	2090      	movs	r0, #144	; 0x90
 8008914:	f7f8 fc40 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008918:	2036      	movs	r0, #54	; 0x36
 800891a:	f7f8 fc67 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800891e:	20c8      	movs	r0, #200	; 0xc8
 8008920:	f7f8 fc3a 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008924:	20f2      	movs	r0, #242	; 0xf2
 8008926:	f7f8 fc61 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800892a:	2000      	movs	r0, #0
 800892c:	f7f8 fc34 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008930:	20b0      	movs	r0, #176	; 0xb0
 8008932:	f7f8 fc5b 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008936:	20c2      	movs	r0, #194	; 0xc2
 8008938:	f7f8 fc2e 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800893c:	20b6      	movs	r0, #182	; 0xb6
 800893e:	f7f8 fc55 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008942:	200a      	movs	r0, #10
 8008944:	f7f8 fc28 	bl	8001198 <LCD_IO_WriteData>
 8008948:	20a7      	movs	r0, #167	; 0xa7
 800894a:	f7f8 fc25 	bl	8001198 <LCD_IO_WriteData>
 800894e:	2027      	movs	r0, #39	; 0x27
 8008950:	f7f8 fc22 	bl	8001198 <LCD_IO_WriteData>
 8008954:	2004      	movs	r0, #4
 8008956:	f7f8 fc1f 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800895a:	202a      	movs	r0, #42	; 0x2a
 800895c:	f7f8 fc46 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008960:	2000      	movs	r0, #0
 8008962:	f7f8 fc19 	bl	8001198 <LCD_IO_WriteData>
 8008966:	2000      	movs	r0, #0
 8008968:	f7f8 fc16 	bl	8001198 <LCD_IO_WriteData>
 800896c:	2000      	movs	r0, #0
 800896e:	f7f8 fc13 	bl	8001198 <LCD_IO_WriteData>
 8008972:	20ef      	movs	r0, #239	; 0xef
 8008974:	f7f8 fc10 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008978:	202b      	movs	r0, #43	; 0x2b
 800897a:	f7f8 fc37 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800897e:	2000      	movs	r0, #0
 8008980:	f7f8 fc0a 	bl	8001198 <LCD_IO_WriteData>
 8008984:	2000      	movs	r0, #0
 8008986:	f7f8 fc07 	bl	8001198 <LCD_IO_WriteData>
 800898a:	2001      	movs	r0, #1
 800898c:	f7f8 fc04 	bl	8001198 <LCD_IO_WriteData>
 8008990:	203f      	movs	r0, #63	; 0x3f
 8008992:	f7f8 fc01 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008996:	20f6      	movs	r0, #246	; 0xf6
 8008998:	f7f8 fc28 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800899c:	2001      	movs	r0, #1
 800899e:	f7f8 fbfb 	bl	8001198 <LCD_IO_WriteData>
 80089a2:	2000      	movs	r0, #0
 80089a4:	f7f8 fbf8 	bl	8001198 <LCD_IO_WriteData>
 80089a8:	2006      	movs	r0, #6
 80089aa:	f7f8 fbf5 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089ae:	202c      	movs	r0, #44	; 0x2c
 80089b0:	f7f8 fc1c 	bl	80011ec <LCD_IO_WriteReg>
  LCD_Delay(200);
 80089b4:	20c8      	movs	r0, #200	; 0xc8
 80089b6:	f7f8 fc81 	bl	80012bc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80089ba:	2026      	movs	r0, #38	; 0x26
 80089bc:	f7f8 fc16 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089c0:	2001      	movs	r0, #1
 80089c2:	f7f8 fbe9 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089c6:	20e0      	movs	r0, #224	; 0xe0
 80089c8:	f7f8 fc10 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089cc:	200f      	movs	r0, #15
 80089ce:	f7f8 fbe3 	bl	8001198 <LCD_IO_WriteData>
 80089d2:	2029      	movs	r0, #41	; 0x29
 80089d4:	f7f8 fbe0 	bl	8001198 <LCD_IO_WriteData>
 80089d8:	2024      	movs	r0, #36	; 0x24
 80089da:	f7f8 fbdd 	bl	8001198 <LCD_IO_WriteData>
 80089de:	200c      	movs	r0, #12
 80089e0:	f7f8 fbda 	bl	8001198 <LCD_IO_WriteData>
 80089e4:	200e      	movs	r0, #14
 80089e6:	f7f8 fbd7 	bl	8001198 <LCD_IO_WriteData>
 80089ea:	2009      	movs	r0, #9
 80089ec:	f7f8 fbd4 	bl	8001198 <LCD_IO_WriteData>
 80089f0:	204e      	movs	r0, #78	; 0x4e
 80089f2:	f7f8 fbd1 	bl	8001198 <LCD_IO_WriteData>
 80089f6:	2078      	movs	r0, #120	; 0x78
 80089f8:	f7f8 fbce 	bl	8001198 <LCD_IO_WriteData>
 80089fc:	203c      	movs	r0, #60	; 0x3c
 80089fe:	f7f8 fbcb 	bl	8001198 <LCD_IO_WriteData>
 8008a02:	2009      	movs	r0, #9
 8008a04:	f7f8 fbc8 	bl	8001198 <LCD_IO_WriteData>
 8008a08:	2013      	movs	r0, #19
 8008a0a:	f7f8 fbc5 	bl	8001198 <LCD_IO_WriteData>
 8008a0e:	2005      	movs	r0, #5
 8008a10:	f7f8 fbc2 	bl	8001198 <LCD_IO_WriteData>
 8008a14:	2017      	movs	r0, #23
 8008a16:	f7f8 fbbf 	bl	8001198 <LCD_IO_WriteData>
 8008a1a:	2011      	movs	r0, #17
 8008a1c:	f7f8 fbbc 	bl	8001198 <LCD_IO_WriteData>
 8008a20:	2000      	movs	r0, #0
 8008a22:	f7f8 fbb9 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a26:	20e1      	movs	r0, #225	; 0xe1
 8008a28:	f7f8 fbe0 	bl	80011ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a2c:	2000      	movs	r0, #0
 8008a2e:	f7f8 fbb3 	bl	8001198 <LCD_IO_WriteData>
 8008a32:	2016      	movs	r0, #22
 8008a34:	f7f8 fbb0 	bl	8001198 <LCD_IO_WriteData>
 8008a38:	201b      	movs	r0, #27
 8008a3a:	f7f8 fbad 	bl	8001198 <LCD_IO_WriteData>
 8008a3e:	2004      	movs	r0, #4
 8008a40:	f7f8 fbaa 	bl	8001198 <LCD_IO_WriteData>
 8008a44:	2011      	movs	r0, #17
 8008a46:	f7f8 fba7 	bl	8001198 <LCD_IO_WriteData>
 8008a4a:	2007      	movs	r0, #7
 8008a4c:	f7f8 fba4 	bl	8001198 <LCD_IO_WriteData>
 8008a50:	2031      	movs	r0, #49	; 0x31
 8008a52:	f7f8 fba1 	bl	8001198 <LCD_IO_WriteData>
 8008a56:	2033      	movs	r0, #51	; 0x33
 8008a58:	f7f8 fb9e 	bl	8001198 <LCD_IO_WriteData>
 8008a5c:	2042      	movs	r0, #66	; 0x42
 8008a5e:	f7f8 fb9b 	bl	8001198 <LCD_IO_WriteData>
 8008a62:	2005      	movs	r0, #5
 8008a64:	f7f8 fb98 	bl	8001198 <LCD_IO_WriteData>
 8008a68:	200c      	movs	r0, #12
 8008a6a:	f7f8 fb95 	bl	8001198 <LCD_IO_WriteData>
 8008a6e:	200a      	movs	r0, #10
 8008a70:	f7f8 fb92 	bl	8001198 <LCD_IO_WriteData>
 8008a74:	2028      	movs	r0, #40	; 0x28
 8008a76:	f7f8 fb8f 	bl	8001198 <LCD_IO_WriteData>
 8008a7a:	202f      	movs	r0, #47	; 0x2f
 8008a7c:	f7f8 fb8c 	bl	8001198 <LCD_IO_WriteData>
 8008a80:	200f      	movs	r0, #15
 8008a82:	f7f8 fb89 	bl	8001198 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a86:	2011      	movs	r0, #17
 8008a88:	f7f8 fbb0 	bl	80011ec <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008a8c:	20c8      	movs	r0, #200	; 0xc8
 8008a8e:	f7f8 fc15 	bl	80012bc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008a92:	2029      	movs	r0, #41	; 0x29
 8008a94:	f7f8 fbaa 	bl	80011ec <LCD_IO_WriteReg>
}
 8008a98:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008a9c:	202c      	movs	r0, #44	; 0x2c
 8008a9e:	f7f8 bba5 	b.w	80011ec <LCD_IO_WriteReg>
 8008aa2:	bf00      	nop

08008aa4 <ili9341_ReadID>:
{
 8008aa4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008aa6:	f7f8 fb67 	bl	8001178 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008aaa:	2103      	movs	r1, #3
 8008aac:	20d3      	movs	r0, #211	; 0xd3
 8008aae:	f7f8 fbc7 	bl	8001240 <LCD_IO_ReadData>
}
 8008ab2:	b280      	uxth	r0, r0
 8008ab4:	bd08      	pop	{r3, pc}
 8008ab6:	bf00      	nop

08008ab8 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008ab8:	221f      	movs	r2, #31
 8008aba:	210b      	movs	r1, #11
 8008abc:	b2c0      	uxtb	r0, r0
 8008abe:	f7f8 bb0d 	b.w	80010dc <IOE_Write>
 8008ac2:	bf00      	nop

08008ac4 <stmpe811_Reset>:
{
 8008ac4:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008ac6:	b2c4      	uxtb	r4, r0
 8008ac8:	2202      	movs	r2, #2
 8008aca:	2103      	movs	r1, #3
 8008acc:	4620      	mov	r0, r4
 8008ace:	f7f8 fb05 	bl	80010dc <IOE_Write>
  IOE_Delay(10); 
 8008ad2:	200a      	movs	r0, #10
 8008ad4:	f7f8 fb4e 	bl	8001174 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008ad8:	4620      	mov	r0, r4
 8008ada:	2200      	movs	r2, #0
 8008adc:	2103      	movs	r1, #3
 8008ade:	f7f8 fafd 	bl	80010dc <IOE_Write>
}
 8008ae2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008ae6:	2002      	movs	r0, #2
 8008ae8:	f7f8 bb44 	b.w	8001174 <IOE_Delay>

08008aec <stmpe811_ReadID>:
{
 8008aec:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008aee:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008af0:	f7f8 faf0 	bl	80010d4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008af4:	2100      	movs	r1, #0
 8008af6:	4620      	mov	r0, r4
 8008af8:	f7f8 fb08 	bl	800110c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008afc:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008afe:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008b00:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b02:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008b04:	f7f8 fb02 	bl	800110c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b08:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008b0c:	b280      	uxth	r0, r0
 8008b0e:	bd10      	pop	{r4, pc}

08008b10 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008b10:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008b12:	b2c4      	uxtb	r4, r0
 8008b14:	2140      	movs	r1, #64	; 0x40
 8008b16:	4620      	mov	r0, r4
 8008b18:	f7f8 faf8 	bl	800110c <IOE_Read>
  
  if(state > 0)
 8008b1c:	0603      	lsls	r3, r0, #24
 8008b1e:	d40b      	bmi.n	8008b38 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008b20:	4620      	mov	r0, r4
 8008b22:	2201      	movs	r2, #1
 8008b24:	214b      	movs	r1, #75	; 0x4b
 8008b26:	f7f8 fad9 	bl	80010dc <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008b2a:	4620      	mov	r0, r4
 8008b2c:	2200      	movs	r2, #0
 8008b2e:	214b      	movs	r1, #75	; 0x4b
 8008b30:	f7f8 fad4 	bl	80010dc <IOE_Write>
  uint8_t ret = 0;
 8008b34:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008b36:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008b38:	214c      	movs	r1, #76	; 0x4c
 8008b3a:	4620      	mov	r0, r4
 8008b3c:	f7f8 fae6 	bl	800110c <IOE_Read>
      ret = 1;
 8008b40:	3800      	subs	r0, #0
 8008b42:	bf18      	it	ne
 8008b44:	2001      	movne	r0, #1
}
 8008b46:	bd10      	pop	{r4, pc}

08008b48 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008b48:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008b4a:	210b      	movs	r1, #11
 8008b4c:	b2c0      	uxtb	r0, r0
 8008b4e:	f7f8 fadd 	bl	800110c <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008b52:	f000 001f 	and.w	r0, r0, #31
 8008b56:	bd08      	pop	{r3, pc}

08008b58 <stmpe811_TS_GetXY>:
{
 8008b58:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008b5a:	2304      	movs	r3, #4
{
 8008b5c:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008b5e:	b2c4      	uxtb	r4, r0
{
 8008b60:	4615      	mov	r5, r2
 8008b62:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008b64:	eb0d 0203 	add.w	r2, sp, r3
 8008b68:	21d7      	movs	r1, #215	; 0xd7
 8008b6a:	4620      	mov	r0, r4
 8008b6c:	f7f8 faea 	bl	8001144 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008b70:	9b01      	ldr	r3, [sp, #4]
 8008b72:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008b74:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008b76:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008b7a:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008b7c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008b7e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008b80:	2201      	movs	r2, #1
 8008b82:	214b      	movs	r1, #75	; 0x4b
 8008b84:	f7f8 faaa 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008b88:	2200      	movs	r2, #0
 8008b8a:	214b      	movs	r1, #75	; 0x4b
 8008b8c:	4620      	mov	r0, r4
 8008b8e:	f7f8 faa5 	bl	80010dc <IOE_Write>
}
 8008b92:	b002      	add	sp, #8
 8008b94:	bd70      	pop	{r4, r5, r6, pc}
 8008b96:	bf00      	nop

08008b98 <stmpe811_TS_Start>:
{
 8008b98:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008b9a:	b2c4      	uxtb	r4, r0
 8008b9c:	2104      	movs	r1, #4
 8008b9e:	4620      	mov	r0, r4
 8008ba0:	f7f8 fab4 	bl	800110c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008ba4:	2104      	movs	r1, #4
 8008ba6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008baa:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008bac:	4620      	mov	r0, r4
 8008bae:	f7f8 fa95 	bl	80010dc <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008bb2:	2117      	movs	r1, #23
 8008bb4:	4620      	mov	r0, r4
 8008bb6:	f7f8 faa9 	bl	800110c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008bba:	2117      	movs	r1, #23
 8008bbc:	f000 020f 	and.w	r2, r0, #15
 8008bc0:	4620      	mov	r0, r4
 8008bc2:	f7f8 fa8b 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008bc6:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008bca:	4620      	mov	r0, r4
 8008bcc:	2104      	movs	r1, #4
 8008bce:	f7f8 fa85 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008bd2:	2249      	movs	r2, #73	; 0x49
 8008bd4:	2120      	movs	r1, #32
 8008bd6:	4620      	mov	r0, r4
 8008bd8:	f7f8 fa80 	bl	80010dc <IOE_Write>
  IOE_Delay(2); 
 8008bdc:	2002      	movs	r0, #2
 8008bde:	f7f8 fac9 	bl	8001174 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008be2:	4620      	mov	r0, r4
 8008be4:	2201      	movs	r2, #1
 8008be6:	2121      	movs	r1, #33	; 0x21
 8008be8:	f7f8 fa78 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008bec:	4620      	mov	r0, r4
 8008bee:	229a      	movs	r2, #154	; 0x9a
 8008bf0:	2141      	movs	r1, #65	; 0x41
 8008bf2:	f7f8 fa73 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008bf6:	4620      	mov	r0, r4
 8008bf8:	2201      	movs	r2, #1
 8008bfa:	214a      	movs	r1, #74	; 0x4a
 8008bfc:	f7f8 fa6e 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008c00:	4620      	mov	r0, r4
 8008c02:	2201      	movs	r2, #1
 8008c04:	214b      	movs	r1, #75	; 0x4b
 8008c06:	f7f8 fa69 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008c0a:	4620      	mov	r0, r4
 8008c0c:	2200      	movs	r2, #0
 8008c0e:	214b      	movs	r1, #75	; 0x4b
 8008c10:	f7f8 fa64 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008c14:	4620      	mov	r0, r4
 8008c16:	2201      	movs	r2, #1
 8008c18:	2156      	movs	r1, #86	; 0x56
 8008c1a:	f7f8 fa5f 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008c1e:	4620      	mov	r0, r4
 8008c20:	2201      	movs	r2, #1
 8008c22:	2158      	movs	r1, #88	; 0x58
 8008c24:	f7f8 fa5a 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008c28:	4620      	mov	r0, r4
 8008c2a:	2201      	movs	r2, #1
 8008c2c:	2140      	movs	r1, #64	; 0x40
 8008c2e:	f7f8 fa55 	bl	80010dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008c32:	4620      	mov	r0, r4
 8008c34:	22ff      	movs	r2, #255	; 0xff
 8008c36:	210b      	movs	r1, #11
 8008c38:	f7f8 fa50 	bl	80010dc <IOE_Write>
}
 8008c3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008c40:	2002      	movs	r0, #2
 8008c42:	f7f8 ba97 	b.w	8001174 <IOE_Delay>
 8008c46:	bf00      	nop

08008c48 <stmpe811_TS_DisableIT>:
{
 8008c48:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008c4a:	b2c4      	uxtb	r4, r0
 8008c4c:	2109      	movs	r1, #9
 8008c4e:	4620      	mov	r0, r4
 8008c50:	f7f8 fa5c 	bl	800110c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008c54:	2109      	movs	r1, #9
 8008c56:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008c5a:	4620      	mov	r0, r4
 8008c5c:	f7f8 fa3e 	bl	80010dc <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008c60:	210a      	movs	r1, #10
 8008c62:	4620      	mov	r0, r4
 8008c64:	f7f8 fa52 	bl	800110c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008c68:	210a      	movs	r1, #10
 8008c6a:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008c6e:	4620      	mov	r0, r4
}
 8008c70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008c74:	f7f8 ba32 	b.w	80010dc <IOE_Write>

08008c78 <stmpe811_TS_EnableIT>:
{
 8008c78:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008c7a:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8008c7c:	f7f8 fa2c 	bl	80010d8 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008c80:	210a      	movs	r1, #10
 8008c82:	4620      	mov	r0, r4
 8008c84:	f7f8 fa42 	bl	800110c <IOE_Read>
  tmp |= Source; 
 8008c88:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008c8c:	b2c2      	uxtb	r2, r0
 8008c8e:	210a      	movs	r1, #10
 8008c90:	4620      	mov	r0, r4
 8008c92:	f7f8 fa23 	bl	80010dc <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008c96:	2109      	movs	r1, #9
 8008c98:	4620      	mov	r0, r4
 8008c9a:	f7f8 fa37 	bl	800110c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008c9e:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008ca2:	b2c2      	uxtb	r2, r0
 8008ca4:	2109      	movs	r1, #9
 8008ca6:	4620      	mov	r0, r4
}
 8008ca8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008cac:	f7f8 ba16 	b.w	80010dc <IOE_Write>

08008cb0 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008cb0:	4a10      	ldr	r2, [pc, #64]	; (8008cf4 <stmpe811_Init+0x44>)
 8008cb2:	7813      	ldrb	r3, [r2, #0]
 8008cb4:	4298      	cmp	r0, r3
 8008cb6:	d004      	beq.n	8008cc2 <stmpe811_Init+0x12>
 8008cb8:	7851      	ldrb	r1, [r2, #1]
 8008cba:	4288      	cmp	r0, r1
 8008cbc:	d001      	beq.n	8008cc2 <stmpe811_Init+0x12>
 8008cbe:	b113      	cbz	r3, 8008cc6 <stmpe811_Init+0x16>
 8008cc0:	b101      	cbz	r1, 8008cc4 <stmpe811_Init+0x14>
 8008cc2:	4770      	bx	lr
 8008cc4:	2301      	movs	r3, #1
{
 8008cc6:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008cc8:	b2c4      	uxtb	r4, r0
 8008cca:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008ccc:	f7f8 fa02 	bl	80010d4 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008cd0:	2202      	movs	r2, #2
 8008cd2:	2103      	movs	r1, #3
 8008cd4:	4620      	mov	r0, r4
 8008cd6:	f7f8 fa01 	bl	80010dc <IOE_Write>
  IOE_Delay(10); 
 8008cda:	200a      	movs	r0, #10
 8008cdc:	f7f8 fa4a 	bl	8001174 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008ce0:	4620      	mov	r0, r4
 8008ce2:	2200      	movs	r2, #0
 8008ce4:	2103      	movs	r1, #3
 8008ce6:	f7f8 f9f9 	bl	80010dc <IOE_Write>
}
 8008cea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008cee:	2002      	movs	r0, #2
 8008cf0:	f7f8 ba40 	b.w	8001174 <IOE_Delay>
 8008cf4:	2000249c 	.word	0x2000249c

08008cf8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008cf8:	4b05      	ldr	r3, [pc, #20]	; (8008d10 <SystemInit+0x18>)
 8008cfa:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008cfe:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008d02:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8008d06:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008d0a:	6099      	str	r1, [r3, #8]
#endif
}
 8008d0c:	4770      	bx	lr
 8008d0e:	bf00      	nop
 8008d10:	e000ed00 	.word	0xe000ed00

08008d14 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008d14:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008d16:	4b0b      	ldr	r3, [pc, #44]	; (8008d44 <HAL_Init+0x30>)
 8008d18:	681a      	ldr	r2, [r3, #0]
 8008d1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008d1e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008d20:	681a      	ldr	r2, [r3, #0]
 8008d22:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008d26:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008d28:	681a      	ldr	r2, [r3, #0]
 8008d2a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008d2e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008d30:	2003      	movs	r0, #3
 8008d32:	f000 f82d 	bl	8008d90 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008d36:	2000      	movs	r0, #0
 8008d38:	f7f8 fe94 	bl	8001a64 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008d3c:	f7f8 fc12 	bl	8001564 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008d40:	2000      	movs	r0, #0
 8008d42:	bd08      	pop	{r3, pc}
 8008d44:	40023c00 	.word	0x40023c00

08008d48 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008d48:	4a03      	ldr	r2, [pc, #12]	; (8008d58 <HAL_IncTick+0x10>)
 8008d4a:	4b04      	ldr	r3, [pc, #16]	; (8008d5c <HAL_IncTick+0x14>)
 8008d4c:	6811      	ldr	r1, [r2, #0]
 8008d4e:	781b      	ldrb	r3, [r3, #0]
 8008d50:	440b      	add	r3, r1
 8008d52:	6013      	str	r3, [r2, #0]
}
 8008d54:	4770      	bx	lr
 8008d56:	bf00      	nop
 8008d58:	200024a0 	.word	0x200024a0
 8008d5c:	20000098 	.word	0x20000098

08008d60 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008d60:	4b01      	ldr	r3, [pc, #4]	; (8008d68 <HAL_GetTick+0x8>)
 8008d62:	6818      	ldr	r0, [r3, #0]
}
 8008d64:	4770      	bx	lr
 8008d66:	bf00      	nop
 8008d68:	200024a0 	.word	0x200024a0

08008d6c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008d6c:	b538      	push	{r3, r4, r5, lr}
 8008d6e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008d70:	f7ff fff6 	bl	8008d60 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008d74:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8008d76:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8008d78:	d002      	beq.n	8008d80 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8008d7a:	4b04      	ldr	r3, [pc, #16]	; (8008d8c <HAL_Delay+0x20>)
 8008d7c:	781b      	ldrb	r3, [r3, #0]
 8008d7e:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008d80:	f7ff ffee 	bl	8008d60 <HAL_GetTick>
 8008d84:	1b43      	subs	r3, r0, r5
 8008d86:	42a3      	cmp	r3, r4
 8008d88:	d3fa      	bcc.n	8008d80 <HAL_Delay+0x14>
  {
  }
}
 8008d8a:	bd38      	pop	{r3, r4, r5, pc}
 8008d8c:	20000098 	.word	0x20000098

08008d90 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8008d90:	4907      	ldr	r1, [pc, #28]	; (8008db0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8008d92:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008d94:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008d96:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008d9a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008d9e:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8008da0:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8008da2:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008da6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8008daa:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8008dac:	4770      	bx	lr
 8008dae:	bf00      	nop
 8008db0:	e000ed00 	.word	0xe000ed00

08008db4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8008db4:	4b1c      	ldr	r3, [pc, #112]	; (8008e28 <HAL_NVIC_SetPriority+0x74>)
 8008db6:	68db      	ldr	r3, [r3, #12]
 8008db8:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8008dbc:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008dbe:	f1c3 0e07 	rsb	lr, r3, #7
 8008dc2:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008dc6:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008dca:	bf28      	it	cs
 8008dcc:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008dd0:	f1bc 0f06 	cmp.w	ip, #6
 8008dd4:	d91b      	bls.n	8008e0e <HAL_NVIC_SetPriority+0x5a>
 8008dd6:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8008dd8:	f04f 3cff 	mov.w	ip, #4294967295
 8008ddc:	fa0c fc03 	lsl.w	ip, ip, r3
 8008de0:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008de4:	f04f 3cff 	mov.w	ip, #4294967295
 8008de8:	fa0c fc0e 	lsl.w	ip, ip, lr
 8008dec:	ea21 010c 	bic.w	r1, r1, ip
 8008df0:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8008df2:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008df4:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8008df8:	db0c      	blt.n	8008e14 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008dfa:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8008dfe:	0109      	lsls	r1, r1, #4
 8008e00:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8008e04:	b2c9      	uxtb	r1, r1
 8008e06:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8008e0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e0e:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008e10:	4613      	mov	r3, r2
 8008e12:	e7e7      	b.n	8008de4 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008e14:	4b05      	ldr	r3, [pc, #20]	; (8008e2c <HAL_NVIC_SetPriority+0x78>)
 8008e16:	f000 000f 	and.w	r0, r0, #15
 8008e1a:	0109      	lsls	r1, r1, #4
 8008e1c:	4403      	add	r3, r0
 8008e1e:	b2c9      	uxtb	r1, r1
 8008e20:	7619      	strb	r1, [r3, #24]
 8008e22:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e26:	bf00      	nop
 8008e28:	e000ed00 	.word	0xe000ed00
 8008e2c:	e000ecfc 	.word	0xe000ecfc

08008e30 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8008e30:	2800      	cmp	r0, #0
 8008e32:	db07      	blt.n	8008e44 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8008e34:	0941      	lsrs	r1, r0, #5
 8008e36:	4a04      	ldr	r2, [pc, #16]	; (8008e48 <HAL_NVIC_EnableIRQ+0x18>)
 8008e38:	f000 001f 	and.w	r0, r0, #31
 8008e3c:	2301      	movs	r3, #1
 8008e3e:	4083      	lsls	r3, r0
 8008e40:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8008e44:	4770      	bx	lr
 8008e46:	bf00      	nop
 8008e48:	e000e100 	.word	0xe000e100

08008e4c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8008e4c:	b180      	cbz	r0, 8008e70 <HAL_CRC_Init+0x24>
{
 8008e4e:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8008e50:	7943      	ldrb	r3, [r0, #5]
 8008e52:	4604      	mov	r4, r0
 8008e54:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008e58:	b11b      	cbz	r3, 8008e62 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8008e5a:	2301      	movs	r3, #1
 8008e5c:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8008e5e:	2000      	movs	r0, #0
}
 8008e60:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8008e62:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8008e64:	f7f8 fb9e 	bl	80015a4 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8008e68:	2301      	movs	r3, #1
 8008e6a:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8008e6c:	2000      	movs	r0, #0
}
 8008e6e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008e70:	2001      	movs	r0, #1
}
 8008e72:	4770      	bx	lr

08008e74 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8008e74:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008e78:	2b02      	cmp	r3, #2
 8008e7a:	d003      	beq.n	8008e84 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8008e7c:	2380      	movs	r3, #128	; 0x80
 8008e7e:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8008e80:	2001      	movs	r0, #1
 8008e82:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8008e84:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8008e86:	2305      	movs	r3, #5
 8008e88:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8008e8c:	6813      	ldr	r3, [r2, #0]
 8008e8e:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8008e92:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8008e94:	6013      	str	r3, [r2, #0]
}
 8008e96:	4770      	bx	lr

08008e98 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8008e98:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8008e9c:	4770      	bx	lr
 8008e9e:	bf00      	nop

08008ea0 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8008ea0:	4b21      	ldr	r3, [pc, #132]	; (8008f28 <FLASH_SetErrorCode+0x88>)
 8008ea2:	68da      	ldr	r2, [r3, #12]
 8008ea4:	06d0      	lsls	r0, r2, #27
 8008ea6:	d505      	bpl.n	8008eb4 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8008ea8:	4920      	ldr	r1, [pc, #128]	; (8008f2c <FLASH_SetErrorCode+0x8c>)
 8008eaa:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8008eac:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8008eae:	4302      	orrs	r2, r0
 8008eb0:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8008eb2:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8008eb4:	4b1c      	ldr	r3, [pc, #112]	; (8008f28 <FLASH_SetErrorCode+0x88>)
 8008eb6:	68da      	ldr	r2, [r3, #12]
 8008eb8:	0691      	lsls	r1, r2, #26
 8008eba:	d506      	bpl.n	8008eca <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8008ebc:	491b      	ldr	r1, [pc, #108]	; (8008f2c <FLASH_SetErrorCode+0x8c>)
 8008ebe:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8008ec0:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8008ec2:	f042 0208 	orr.w	r2, r2, #8
 8008ec6:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8008ec8:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8008eca:	4b17      	ldr	r3, [pc, #92]	; (8008f28 <FLASH_SetErrorCode+0x88>)
 8008ecc:	68da      	ldr	r2, [r3, #12]
 8008ece:	0652      	lsls	r2, r2, #25
 8008ed0:	d506      	bpl.n	8008ee0 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8008ed2:	4916      	ldr	r1, [pc, #88]	; (8008f2c <FLASH_SetErrorCode+0x8c>)
 8008ed4:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8008ed6:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8008ed8:	f042 0204 	orr.w	r2, r2, #4
 8008edc:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8008ede:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8008ee0:	4b11      	ldr	r3, [pc, #68]	; (8008f28 <FLASH_SetErrorCode+0x88>)
 8008ee2:	68da      	ldr	r2, [r3, #12]
 8008ee4:	0610      	lsls	r0, r2, #24
 8008ee6:	d506      	bpl.n	8008ef6 <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8008ee8:	4910      	ldr	r1, [pc, #64]	; (8008f2c <FLASH_SetErrorCode+0x8c>)
 8008eea:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8008eec:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8008eee:	f042 0202 	orr.w	r2, r2, #2
 8008ef2:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8008ef4:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8008ef6:	4b0c      	ldr	r3, [pc, #48]	; (8008f28 <FLASH_SetErrorCode+0x88>)
 8008ef8:	68da      	ldr	r2, [r3, #12]
 8008efa:	05d1      	lsls	r1, r2, #23
 8008efc:	d507      	bpl.n	8008f0e <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8008efe:	490b      	ldr	r1, [pc, #44]	; (8008f2c <FLASH_SetErrorCode+0x8c>)
 8008f00:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8008f02:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8008f06:	f042 0201 	orr.w	r2, r2, #1
 8008f0a:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8008f0c:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8008f0e:	4b06      	ldr	r3, [pc, #24]	; (8008f28 <FLASH_SetErrorCode+0x88>)
 8008f10:	68da      	ldr	r2, [r3, #12]
 8008f12:	0792      	lsls	r2, r2, #30
 8008f14:	d506      	bpl.n	8008f24 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8008f16:	4905      	ldr	r1, [pc, #20]	; (8008f2c <FLASH_SetErrorCode+0x8c>)
 8008f18:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8008f1a:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8008f1c:	f042 0220 	orr.w	r2, r2, #32
 8008f20:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8008f22:	60d8      	str	r0, [r3, #12]
  }
}
 8008f24:	4770      	bx	lr
 8008f26:	bf00      	nop
 8008f28:	40023c00 	.word	0x40023c00
 8008f2c:	200024a4 	.word	0x200024a4

08008f30 <HAL_FLASH_Program>:
{
 8008f30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8008f34:	4f4d      	ldr	r7, [pc, #308]	; (800906c <HAL_FLASH_Program+0x13c>)
{
 8008f36:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8008f38:	7e3b      	ldrb	r3, [r7, #24]
 8008f3a:	2b01      	cmp	r3, #1
 8008f3c:	d060      	beq.n	8009000 <HAL_FLASH_Program+0xd0>
 8008f3e:	2301      	movs	r3, #1
 8008f40:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8008f42:	2300      	movs	r3, #0
 8008f44:	4681      	mov	r9, r0
 8008f46:	468a      	mov	sl, r1
 8008f48:	4690      	mov	r8, r2
 8008f4a:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8008f4c:	f7ff ff08 	bl	8008d60 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8008f50:	4d47      	ldr	r5, [pc, #284]	; (8009070 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8008f52:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008f54:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8008f58:	e004      	b.n	8008f64 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008f5a:	f7ff ff01 	bl	8008d60 <HAL_GetTick>
 8008f5e:	1b00      	subs	r0, r0, r4
 8008f60:	42b0      	cmp	r0, r6
 8008f62:	d848      	bhi.n	8008ff6 <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8008f64:	68eb      	ldr	r3, [r5, #12]
 8008f66:	03d8      	lsls	r0, r3, #15
 8008f68:	d4f7      	bmi.n	8008f5a <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8008f6a:	68eb      	ldr	r3, [r5, #12]
 8008f6c:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8008f6e:	bf44      	itt	mi
 8008f70:	2301      	movmi	r3, #1
 8008f72:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8008f74:	4b3e      	ldr	r3, [pc, #248]	; (8009070 <HAL_FLASH_Program+0x140>)
 8008f76:	68da      	ldr	r2, [r3, #12]
 8008f78:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8008f7c:	d154      	bne.n	8009028 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8008f7e:	f1b9 0f00 	cmp.w	r9, #0
 8008f82:	d040      	beq.n	8009006 <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8008f84:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8008f88:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8008f8a:	d051      	beq.n	8009030 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8008f8c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8008f90:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8008f92:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8008f96:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8008f98:	d05e      	beq.n	8009058 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8008f9a:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8008f9e:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8008fa0:	691a      	ldr	r2, [r3, #16]
 8008fa2:	f042 0201 	orr.w	r2, r2, #1
 8008fa6:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8008fa8:	f8ca 8000 	str.w	r8, [sl]
 8008fac:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8008fb0:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8008fb4:	2300      	movs	r3, #0
 8008fb6:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8008fb8:	f7ff fed2 	bl	8008d60 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8008fbc:	4d2c      	ldr	r5, [pc, #176]	; (8009070 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8008fbe:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008fc0:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8008fc4:	e004      	b.n	8008fd0 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008fc6:	f7ff fecb 	bl	8008d60 <HAL_GetTick>
 8008fca:	1b00      	subs	r0, r0, r4
 8008fcc:	42b0      	cmp	r0, r6
 8008fce:	d829      	bhi.n	8009024 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8008fd0:	68eb      	ldr	r3, [r5, #12]
 8008fd2:	03da      	lsls	r2, r3, #15
 8008fd4:	d4f7      	bmi.n	8008fc6 <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8008fd6:	68eb      	ldr	r3, [r5, #12]
 8008fd8:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8008fda:	bf44      	itt	mi
 8008fdc:	2301      	movmi	r3, #1
 8008fde:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8008fe0:	4b23      	ldr	r3, [pc, #140]	; (8009070 <HAL_FLASH_Program+0x140>)
 8008fe2:	68d8      	ldr	r0, [r3, #12]
 8008fe4:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8008fe8:	d132      	bne.n	8009050 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 8008fea:	4a21      	ldr	r2, [pc, #132]	; (8009070 <HAL_FLASH_Program+0x140>)
 8008fec:	6913      	ldr	r3, [r2, #16]
 8008fee:	f023 0301 	bic.w	r3, r3, #1
 8008ff2:	6113      	str	r3, [r2, #16]
 8008ff4:	e000      	b.n	8008ff8 <HAL_FLASH_Program+0xc8>
 8008ff6:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 8008ff8:	2300      	movs	r3, #0
 8008ffa:	763b      	strb	r3, [r7, #24]
}
 8008ffc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 8009000:	2002      	movs	r0, #2
}
 8009002:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009006:	691a      	ldr	r2, [r3, #16]
 8009008:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800900c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800900e:	691a      	ldr	r2, [r3, #16]
 8009010:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009012:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8009014:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009018:	f042 0201 	orr.w	r2, r2, #1
 800901c:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800901e:	f88a 8000 	strb.w	r8, [sl]
}
 8009022:	e7c7      	b.n	8008fb4 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 8009024:	2003      	movs	r0, #3
 8009026:	e7e0      	b.n	8008fea <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 8009028:	f7ff ff3a 	bl	8008ea0 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800902c:	2001      	movs	r0, #1
 800902e:	e7e3      	b.n	8008ff8 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009030:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009034:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8009036:	691a      	ldr	r2, [r3, #16]
 8009038:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800903c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800903e:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8009040:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009044:	f042 0201 	orr.w	r2, r2, #1
 8009048:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800904a:	f8aa 8000 	strh.w	r8, [sl]
}
 800904e:	e7b1      	b.n	8008fb4 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 8009050:	f7ff ff26 	bl	8008ea0 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009054:	2001      	movs	r0, #1
 8009056:	e7c8      	b.n	8008fea <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009058:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800905c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800905e:	691a      	ldr	r2, [r3, #16]
 8009060:	f042 0201 	orr.w	r2, r2, #1
 8009064:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009066:	f8ca 8000 	str.w	r8, [sl]
}
 800906a:	e7a3      	b.n	8008fb4 <HAL_FLASH_Program+0x84>
 800906c:	200024a4 	.word	0x200024a4
 8009070:	40023c00 	.word	0x40023c00

08009074 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009074:	4b06      	ldr	r3, [pc, #24]	; (8009090 <HAL_FLASH_Unlock+0x1c>)
 8009076:	691a      	ldr	r2, [r3, #16]
 8009078:	2a00      	cmp	r2, #0
 800907a:	db01      	blt.n	8009080 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 800907c:	2000      	movs	r0, #0
}
 800907e:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009080:	4904      	ldr	r1, [pc, #16]	; (8009094 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009082:	4a05      	ldr	r2, [pc, #20]	; (8009098 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009084:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009086:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009088:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 800908a:	0fc0      	lsrs	r0, r0, #31
 800908c:	4770      	bx	lr
 800908e:	bf00      	nop
 8009090:	40023c00 	.word	0x40023c00
 8009094:	45670123 	.word	0x45670123
 8009098:	cdef89ab 	.word	0xcdef89ab

0800909c <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 800909c:	4a03      	ldr	r2, [pc, #12]	; (80090ac <HAL_FLASH_Lock+0x10>)
 800909e:	6913      	ldr	r3, [r2, #16]
 80090a0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 80090a4:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 80090a6:	6113      	str	r3, [r2, #16]
}
 80090a8:	4770      	bx	lr
 80090aa:	bf00      	nop
 80090ac:	40023c00 	.word	0x40023c00

080090b0 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 80090b0:	4b01      	ldr	r3, [pc, #4]	; (80090b8 <HAL_FLASH_GetError+0x8>)
 80090b2:	69d8      	ldr	r0, [r3, #28]
}  
 80090b4:	4770      	bx	lr
 80090b6:	bf00      	nop
 80090b8:	200024a4 	.word	0x200024a4

080090bc <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 80090bc:	4b14      	ldr	r3, [pc, #80]	; (8009110 <FLASH_WaitForLastOperation+0x54>)
{ 
 80090be:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 80090c0:	2200      	movs	r2, #0
{ 
 80090c2:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 80090c4:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 80090c6:	f7ff fe4b 	bl	8008d60 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 80090ca:	4e12      	ldr	r6, [pc, #72]	; (8009114 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 80090cc:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 80090ce:	1c63      	adds	r3, r4, #1
 80090d0:	d10f      	bne.n	80090f2 <FLASH_WaitForLastOperation+0x36>
 80090d2:	4a10      	ldr	r2, [pc, #64]	; (8009114 <FLASH_WaitForLastOperation+0x58>)
 80090d4:	68d3      	ldr	r3, [r2, #12]
 80090d6:	03d8      	lsls	r0, r3, #15
 80090d8:	d4fc      	bmi.n	80090d4 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 80090da:	4b0e      	ldr	r3, [pc, #56]	; (8009114 <FLASH_WaitForLastOperation+0x58>)
 80090dc:	68da      	ldr	r2, [r3, #12]
 80090de:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 80090e0:	bf44      	itt	mi
 80090e2:	2201      	movmi	r2, #1
 80090e4:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 80090e6:	4b0b      	ldr	r3, [pc, #44]	; (8009114 <FLASH_WaitForLastOperation+0x58>)
 80090e8:	68d8      	ldr	r0, [r3, #12]
 80090ea:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 80090ee:	d10b      	bne.n	8009108 <FLASH_WaitForLastOperation+0x4c>
}  
 80090f0:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 80090f2:	68f3      	ldr	r3, [r6, #12]
 80090f4:	03d9      	lsls	r1, r3, #15
 80090f6:	d5f0      	bpl.n	80090da <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80090f8:	b124      	cbz	r4, 8009104 <FLASH_WaitForLastOperation+0x48>
 80090fa:	f7ff fe31 	bl	8008d60 <HAL_GetTick>
 80090fe:	1b40      	subs	r0, r0, r5
 8009100:	42a0      	cmp	r0, r4
 8009102:	d9e4      	bls.n	80090ce <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 8009104:	2003      	movs	r0, #3
}  
 8009106:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 8009108:	f7ff feca 	bl	8008ea0 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800910c:	2001      	movs	r0, #1
}  
 800910e:	bd70      	pop	{r4, r5, r6, pc}
 8009110:	200024a4 	.word	0x200024a4
 8009114:	40023c00 	.word	0x40023c00

08009118 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8009118:	4b14      	ldr	r3, [pc, #80]	; (800916c <FLASH_FlushCaches+0x54>)
 800911a:	681a      	ldr	r2, [r3, #0]
 800911c:	0591      	lsls	r1, r2, #22
 800911e:	d50f      	bpl.n	8009140 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8009120:	681a      	ldr	r2, [r3, #0]
 8009122:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009126:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8009128:	681a      	ldr	r2, [r3, #0]
 800912a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800912e:	601a      	str	r2, [r3, #0]
 8009130:	681a      	ldr	r2, [r3, #0]
 8009132:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009136:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009138:	681a      	ldr	r2, [r3, #0]
 800913a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800913e:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8009140:	4b0a      	ldr	r3, [pc, #40]	; (800916c <FLASH_FlushCaches+0x54>)
 8009142:	681a      	ldr	r2, [r3, #0]
 8009144:	0552      	lsls	r2, r2, #21
 8009146:	d50f      	bpl.n	8009168 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009148:	681a      	ldr	r2, [r3, #0]
 800914a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800914e:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8009150:	681a      	ldr	r2, [r3, #0]
 8009152:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009156:	601a      	str	r2, [r3, #0]
 8009158:	681a      	ldr	r2, [r3, #0]
 800915a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800915e:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8009160:	681a      	ldr	r2, [r3, #0]
 8009162:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009166:	601a      	str	r2, [r3, #0]
  }
}
 8009168:	4770      	bx	lr
 800916a:	bf00      	nop
 800916c:	40023c00 	.word	0x40023c00

08009170 <HAL_FLASHEx_Erase>:
{
 8009170:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009174:	4f44      	ldr	r7, [pc, #272]	; (8009288 <HAL_FLASHEx_Erase+0x118>)
 8009176:	7e3b      	ldrb	r3, [r7, #24]
 8009178:	2b01      	cmp	r3, #1
 800917a:	d053      	beq.n	8009224 <HAL_FLASHEx_Erase+0xb4>
 800917c:	2301      	movs	r3, #1
 800917e:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009180:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009184:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009186:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009188:	f7ff ff98 	bl	80090bc <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 800918c:	4606      	mov	r6, r0
 800918e:	2800      	cmp	r0, #0
 8009190:	d143      	bne.n	800921a <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 8009192:	f04f 33ff 	mov.w	r3, #4294967295
 8009196:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800919a:	f8d9 3000 	ldr.w	r3, [r9]
 800919e:	2b01      	cmp	r3, #1
 80091a0:	d044      	beq.n	800922c <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 80091a2:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 80091a6:	442b      	add	r3, r5
 80091a8:	429d      	cmp	r5, r3
 80091aa:	d234      	bcs.n	8009216 <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80091ac:	4c37      	ldr	r4, [pc, #220]	; (800928c <HAL_FLASHEx_Erase+0x11c>)
 80091ae:	e005      	b.n	80091bc <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 80091b0:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 80091b4:	3501      	adds	r5, #1
 80091b6:	4413      	add	r3, r2
 80091b8:	42ab      	cmp	r3, r5
 80091ba:	d92c      	bls.n	8009216 <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 80091bc:	f899 3010 	ldrb.w	r3, [r9, #16]
 80091c0:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 80091c2:	f44f 7140 	mov.w	r1, #768	; 0x300
 80091c6:	bf98      	it	ls
 80091c8:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80091ca:	6923      	ldr	r3, [r4, #16]
 80091cc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80091d0:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 80091d2:	6923      	ldr	r3, [r4, #16]
 80091d4:	430b      	orrs	r3, r1
 80091d6:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 80091d8:	6923      	ldr	r3, [r4, #16]
 80091da:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80091de:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 80091e0:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 80091e2:	2d0b      	cmp	r5, #11
    Sector += 4U;
 80091e4:	bf8c      	ite	hi
 80091e6:	1d2a      	addhi	r2, r5, #4
 80091e8:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 80091ea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80091ee:	f043 0302 	orr.w	r3, r3, #2
 80091f2:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 80091f4:	6923      	ldr	r3, [r4, #16]
 80091f6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80091fa:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80091fc:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009200:	f7ff ff5c 	bl	80090bc <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8009204:	6923      	ldr	r3, [r4, #16]
 8009206:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800920a:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 800920c:	2800      	cmp	r0, #0
 800920e:	d0cf      	beq.n	80091b0 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 8009210:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009214:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 8009216:	f7ff ff7f 	bl	8009118 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800921a:	2300      	movs	r3, #0
 800921c:	763b      	strb	r3, [r7, #24]
}
 800921e:	4630      	mov	r0, r6
 8009220:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 8009224:	2602      	movs	r6, #2
}
 8009226:	4630      	mov	r0, r6
 8009228:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800922c:	4a17      	ldr	r2, [pc, #92]	; (800928c <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800922e:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009232:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009234:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009238:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800923c:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800923e:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009240:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009242:	d01a      	beq.n	800927a <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009244:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009246:	bf0c      	ite	eq
 8009248:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 800924c:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009250:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009252:	4c0e      	ldr	r4, [pc, #56]	; (800928c <HAL_FLASHEx_Erase+0x11c>)
 8009254:	021b      	lsls	r3, r3, #8
 8009256:	6922      	ldr	r2, [r4, #16]
 8009258:	b29b      	uxth	r3, r3
 800925a:	4313      	orrs	r3, r2
 800925c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009260:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009262:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009266:	f7ff ff29 	bl	80090bc <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 800926a:	6923      	ldr	r3, [r4, #16]
 800926c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009270:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009274:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009276:	6123      	str	r3, [r4, #16]
 8009278:	e7cd      	b.n	8009216 <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 800927a:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800927e:	f041 0104 	orr.w	r1, r1, #4
 8009282:	6111      	str	r1, [r2, #16]
 8009284:	e7e5      	b.n	8009252 <HAL_FLASHEx_Erase+0xe2>
 8009286:	bf00      	nop
 8009288:	200024a4 	.word	0x200024a4
 800928c:	40023c00 	.word	0x40023c00

08009290 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009294:	2200      	movs	r2, #0
 8009296:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009298:	f8df a260 	ldr.w	sl, [pc, #608]	; 80094fc <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800929c:	4e90      	ldr	r6, [pc, #576]	; (80094e0 <HAL_GPIO_Init+0x250>)
{
 800929e:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092a0:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80092a2:	4689      	mov	r9, r1
 80092a4:	e005      	b.n	80092b2 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092a6:	3301      	adds	r3, #1
 80092a8:	2b10      	cmp	r3, #16
 80092aa:	f102 0202 	add.w	r2, r2, #2
 80092ae:	f000 8095 	beq.w	80093dc <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 80092b2:	2101      	movs	r1, #1
 80092b4:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80092b6:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 80092ba:	43a1      	bics	r1, r4
 80092bc:	d1f3      	bne.n	80092a6 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80092be:	f8d9 c004 	ldr.w	ip, [r9, #4]
 80092c2:	f00c 0103 	and.w	r1, ip, #3
 80092c6:	1e4d      	subs	r5, r1, #1
 80092c8:	2d01      	cmp	r5, #1
 80092ca:	f240 808a 	bls.w	80093e2 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80092ce:	2903      	cmp	r1, #3
 80092d0:	f040 80ca 	bne.w	8009468 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80092d4:	4091      	lsls	r1, r2
 80092d6:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 80092d8:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80092da:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80092dc:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80092de:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 80092e2:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80092e4:	d0df      	beq.n	80092a6 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80092e6:	2100      	movs	r1, #0
 80092e8:	9103      	str	r1, [sp, #12]
 80092ea:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 80092ee:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80092f2:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 80092f6:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 80092fa:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80092fe:	9103      	str	r1, [sp, #12]
 8009300:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009302:	f023 0103 	bic.w	r1, r3, #3
 8009306:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800930a:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800930e:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009312:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009314:	00bf      	lsls	r7, r7, #2
 8009316:	f04f 0e0f 	mov.w	lr, #15
 800931a:	fa0e fe07 	lsl.w	lr, lr, r7
 800931e:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009322:	4d70      	ldr	r5, [pc, #448]	; (80094e4 <HAL_GPIO_Init+0x254>)
 8009324:	42a8      	cmp	r0, r5
 8009326:	d02e      	beq.n	8009386 <HAL_GPIO_Init+0xf6>
 8009328:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800932c:	42a8      	cmp	r0, r5
 800932e:	f000 809f 	beq.w	8009470 <HAL_GPIO_Init+0x1e0>
 8009332:	4d6d      	ldr	r5, [pc, #436]	; (80094e8 <HAL_GPIO_Init+0x258>)
 8009334:	42a8      	cmp	r0, r5
 8009336:	f000 80a2 	beq.w	800947e <HAL_GPIO_Init+0x1ee>
 800933a:	4d6c      	ldr	r5, [pc, #432]	; (80094ec <HAL_GPIO_Init+0x25c>)
 800933c:	42a8      	cmp	r0, r5
 800933e:	f000 80a5 	beq.w	800948c <HAL_GPIO_Init+0x1fc>
 8009342:	4d6b      	ldr	r5, [pc, #428]	; (80094f0 <HAL_GPIO_Init+0x260>)
 8009344:	42a8      	cmp	r0, r5
 8009346:	f000 80a8 	beq.w	800949a <HAL_GPIO_Init+0x20a>
 800934a:	4d6a      	ldr	r5, [pc, #424]	; (80094f4 <HAL_GPIO_Init+0x264>)
 800934c:	42a8      	cmp	r0, r5
 800934e:	f000 80b2 	beq.w	80094b6 <HAL_GPIO_Init+0x226>
 8009352:	4d69      	ldr	r5, [pc, #420]	; (80094f8 <HAL_GPIO_Init+0x268>)
 8009354:	42a8      	cmp	r0, r5
 8009356:	f000 80b5 	beq.w	80094c4 <HAL_GPIO_Init+0x234>
 800935a:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009500 <HAL_GPIO_Init+0x270>
 800935e:	4570      	cmp	r0, lr
 8009360:	f000 80a2 	beq.w	80094a8 <HAL_GPIO_Init+0x218>
 8009364:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009504 <HAL_GPIO_Init+0x274>
 8009368:	4570      	cmp	r0, lr
 800936a:	f000 80b2 	beq.w	80094d2 <HAL_GPIO_Init+0x242>
 800936e:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009508 <HAL_GPIO_Init+0x278>
 8009372:	4570      	cmp	r0, lr
 8009374:	bf0c      	ite	eq
 8009376:	f04f 0e09 	moveq.w	lr, #9
 800937a:	f04f 0e0a 	movne.w	lr, #10
 800937e:	fa0e f707 	lsl.w	r7, lr, r7
 8009382:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009386:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800938a:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800938c:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009390:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009394:	bf0c      	ite	eq
 8009396:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009398:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800939c:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800939e:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80093a0:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 80093a4:	bf0c      	ite	eq
 80093a6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80093a8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 80093ac:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 80093ae:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80093b0:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80093b4:	bf0c      	ite	eq
 80093b6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80093b8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 80093bc:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80093be:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80093c0:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 80093c4:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 80093c8:	bf0c      	ite	eq
 80093ca:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80093cc:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 80093d0:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 80093d2:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80093d4:	f102 0202 	add.w	r2, r2, #2
 80093d8:	f47f af6b 	bne.w	80092b2 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 80093dc:	b005      	add	sp, #20
 80093de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 80093e2:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 80093e6:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80093ea:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80093ee:	2503      	movs	r5, #3
 80093f0:	fa05 f802 	lsl.w	r8, r5, r2
 80093f4:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 80093f8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80093fc:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80093fe:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009400:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009404:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009408:	409f      	lsls	r7, r3
 800940a:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800940e:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009412:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009414:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009416:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800941a:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800941e:	4097      	lsls	r7, r2
 8009420:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009424:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8009426:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009428:	fa01 f102 	lsl.w	r1, r1, r2
 800942c:	f47f af54 	bne.w	80092d8 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8009430:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8009434:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009438:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800943c:	f8de 7020 	ldr.w	r7, [lr, #32]
 8009440:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009442:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009446:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800944a:	fa07 f708 	lsl.w	r7, r7, r8
 800944e:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009450:	270f      	movs	r7, #15
 8009452:	fa07 f808 	lsl.w	r8, r7, r8
 8009456:	9f00      	ldr	r7, [sp, #0]
 8009458:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800945c:	9f01      	ldr	r7, [sp, #4]
 800945e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8009462:	f8ce 7020 	str.w	r7, [lr, #32]
 8009466:	e737      	b.n	80092d8 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009468:	2503      	movs	r5, #3
 800946a:	4095      	lsls	r5, r2
 800946c:	43ed      	mvns	r5, r5
 800946e:	e7d1      	b.n	8009414 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009470:	f04f 0e01 	mov.w	lr, #1
 8009474:	fa0e f707 	lsl.w	r7, lr, r7
 8009478:	ea48 0807 	orr.w	r8, r8, r7
 800947c:	e783      	b.n	8009386 <HAL_GPIO_Init+0xf6>
 800947e:	f04f 0e02 	mov.w	lr, #2
 8009482:	fa0e f707 	lsl.w	r7, lr, r7
 8009486:	ea48 0807 	orr.w	r8, r8, r7
 800948a:	e77c      	b.n	8009386 <HAL_GPIO_Init+0xf6>
 800948c:	f04f 0e03 	mov.w	lr, #3
 8009490:	fa0e f707 	lsl.w	r7, lr, r7
 8009494:	ea48 0807 	orr.w	r8, r8, r7
 8009498:	e775      	b.n	8009386 <HAL_GPIO_Init+0xf6>
 800949a:	f04f 0e04 	mov.w	lr, #4
 800949e:	fa0e f707 	lsl.w	r7, lr, r7
 80094a2:	ea48 0807 	orr.w	r8, r8, r7
 80094a6:	e76e      	b.n	8009386 <HAL_GPIO_Init+0xf6>
 80094a8:	f04f 0e07 	mov.w	lr, #7
 80094ac:	fa0e f707 	lsl.w	r7, lr, r7
 80094b0:	ea48 0807 	orr.w	r8, r8, r7
 80094b4:	e767      	b.n	8009386 <HAL_GPIO_Init+0xf6>
 80094b6:	f04f 0e05 	mov.w	lr, #5
 80094ba:	fa0e f707 	lsl.w	r7, lr, r7
 80094be:	ea48 0807 	orr.w	r8, r8, r7
 80094c2:	e760      	b.n	8009386 <HAL_GPIO_Init+0xf6>
 80094c4:	f04f 0e06 	mov.w	lr, #6
 80094c8:	fa0e f707 	lsl.w	r7, lr, r7
 80094cc:	ea48 0807 	orr.w	r8, r8, r7
 80094d0:	e759      	b.n	8009386 <HAL_GPIO_Init+0xf6>
 80094d2:	f04f 0e08 	mov.w	lr, #8
 80094d6:	fa0e f707 	lsl.w	r7, lr, r7
 80094da:	ea48 0807 	orr.w	r8, r8, r7
 80094de:	e752      	b.n	8009386 <HAL_GPIO_Init+0xf6>
 80094e0:	40013c00 	.word	0x40013c00
 80094e4:	40020000 	.word	0x40020000
 80094e8:	40020800 	.word	0x40020800
 80094ec:	40020c00 	.word	0x40020c00
 80094f0:	40021000 	.word	0x40021000
 80094f4:	40021400 	.word	0x40021400
 80094f8:	40021800 	.word	0x40021800
 80094fc:	40023800 	.word	0x40023800
 8009500:	40021c00 	.word	0x40021c00
 8009504:	40022000 	.word	0x40022000
 8009508:	40022400 	.word	0x40022400

0800950c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800950c:	6903      	ldr	r3, [r0, #16]
 800950e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009510:	bf14      	ite	ne
 8009512:	2001      	movne	r0, #1
 8009514:	2000      	moveq	r0, #0
 8009516:	4770      	bx	lr

08009518 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009518:	b902      	cbnz	r2, 800951c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800951a:	0409      	lsls	r1, r1, #16
 800951c:	6181      	str	r1, [r0, #24]
  }
}
 800951e:	4770      	bx	lr

08009520 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009520:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009522:	ea01 0203 	and.w	r2, r1, r3
 8009526:	ea21 0103 	bic.w	r1, r1, r3
 800952a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800952e:	6181      	str	r1, [r0, #24]
}
 8009530:	4770      	bx	lr
 8009532:	bf00      	nop

08009534 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8009534:	4770      	bx	lr
 8009536:	bf00      	nop

08009538 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8009538:	4a04      	ldr	r2, [pc, #16]	; (800954c <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800953a:	6951      	ldr	r1, [r2, #20]
 800953c:	4201      	tst	r1, r0
 800953e:	d100      	bne.n	8009542 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8009540:	4770      	bx	lr
{
 8009542:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8009544:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8009546:	f7ff fff5 	bl	8009534 <HAL_GPIO_EXTI_Callback>
}
 800954a:	bd08      	pop	{r3, pc}
 800954c:	40013c00 	.word	0x40013c00

08009550 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8009550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009554:	6804      	ldr	r4, [r0, #0]
{
 8009556:	b083      	sub	sp, #12
 8009558:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800955a:	6823      	ldr	r3, [r4, #0]
{
 800955c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009560:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009564:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009568:	4606      	mov	r6, r0
 800956a:	468a      	mov	sl, r1
 800956c:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800956e:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009570:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009574:	d136      	bne.n	80095e4 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009576:	6965      	ldr	r5, [r4, #20]
 8009578:	07e8      	lsls	r0, r5, #31
 800957a:	d5fc      	bpl.n	8009576 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800957c:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009580:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009582:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009586:	d003      	beq.n	8009590 <I2C_RequestMemoryWrite+0x40>
 8009588:	e04f      	b.n	800962a <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800958a:	6961      	ldr	r1, [r4, #20]
 800958c:	054d      	lsls	r5, r1, #21
 800958e:	d45d      	bmi.n	800964c <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009590:	6961      	ldr	r1, [r4, #20]
 8009592:	078b      	lsls	r3, r1, #30
 8009594:	d5f9      	bpl.n	800958a <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009596:	2300      	movs	r3, #0
 8009598:	9301      	str	r3, [sp, #4]
 800959a:	6963      	ldr	r3, [r4, #20]
 800959c:	9301      	str	r3, [sp, #4]
 800959e:	69a3      	ldr	r3, [r4, #24]
 80095a0:	9301      	str	r3, [sp, #4]
 80095a2:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095a4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80095a8:	f040 8088 	bne.w	80096bc <I2C_RequestMemoryWrite+0x16c>
 80095ac:	6963      	ldr	r3, [r4, #20]
 80095ae:	061a      	lsls	r2, r3, #24
 80095b0:	d464      	bmi.n	800967c <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80095b2:	6963      	ldr	r3, [r4, #20]
 80095b4:	055b      	lsls	r3, r3, #21
 80095b6:	d5f9      	bpl.n	80095ac <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 80095b8:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80095ba:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80095be:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80095c0:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80095c2:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80095c4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80095c8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80095cc:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80095ce:	f043 0304 	orr.w	r3, r3, #4
 80095d2:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80095d4:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80095d6:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80095d8:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80095da:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80095de:	d066      	beq.n	80096ae <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 80095e0:	2001      	movs	r0, #1
 80095e2:	e01f      	b.n	8009624 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80095e4:	6963      	ldr	r3, [r4, #20]
 80095e6:	07d9      	lsls	r1, r3, #31
 80095e8:	d4c8      	bmi.n	800957c <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80095ea:	f7ff fbb9 	bl	8008d60 <HAL_GetTick>
 80095ee:	eba0 000b 	sub.w	r0, r0, fp
 80095f2:	4581      	cmp	r9, r0
 80095f4:	d304      	bcc.n	8009600 <I2C_RequestMemoryWrite+0xb0>
 80095f6:	f1b9 0f00 	cmp.w	r9, #0
 80095fa:	d001      	beq.n	8009600 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80095fc:	6834      	ldr	r4, [r6, #0]
 80095fe:	e7b7      	b.n	8009570 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009600:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009602:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009604:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009606:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800960a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800960e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009610:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009612:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009616:	f042 0220 	orr.w	r2, r2, #32
 800961a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800961c:	680b      	ldr	r3, [r1, #0]
 800961e:	05dc      	lsls	r4, r3, #23
 8009620:	d435      	bmi.n	800968e <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8009622:	2003      	movs	r0, #3
}
 8009624:	b003      	add	sp, #12
 8009626:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800962a:	6963      	ldr	r3, [r4, #20]
 800962c:	0798      	lsls	r0, r3, #30
 800962e:	d4b2      	bmi.n	8009596 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009630:	6963      	ldr	r3, [r4, #20]
 8009632:	055a      	lsls	r2, r3, #21
 8009634:	d40a      	bmi.n	800964c <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009636:	f7ff fb93 	bl	8008d60 <HAL_GetTick>
 800963a:	eba0 000b 	sub.w	r0, r0, fp
 800963e:	4581      	cmp	r9, r0
 8009640:	d34e      	bcc.n	80096e0 <I2C_RequestMemoryWrite+0x190>
 8009642:	f1b9 0f00 	cmp.w	r9, #0
 8009646:	d04b      	beq.n	80096e0 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009648:	6834      	ldr	r4, [r6, #0]
 800964a:	e79a      	b.n	8009582 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800964c:	6823      	ldr	r3, [r4, #0]
 800964e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009652:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009654:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009656:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800965a:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800965c:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800965e:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009660:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009664:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009668:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800966a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800966e:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009672:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009674:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009676:	b003      	add	sp, #12
 8009678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800967c:	f1b8 0f01 	cmp.w	r8, #1
 8009680:	d109      	bne.n	8009696 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009682:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009684:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009686:	6127      	str	r7, [r4, #16]
}
 8009688:	b003      	add	sp, #12
 800968a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800968e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009692:	6433      	str	r3, [r6, #64]	; 0x40
 8009694:	e7c5      	b.n	8009622 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009696:	0a3b      	lsrs	r3, r7, #8
 8009698:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800969a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800969e:	d12e      	bne.n	80096fe <I2C_RequestMemoryWrite+0x1ae>
 80096a0:	6963      	ldr	r3, [r4, #20]
 80096a2:	0619      	lsls	r1, r3, #24
 80096a4:	d4ed      	bmi.n	8009682 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096a6:	6963      	ldr	r3, [r4, #20]
 80096a8:	055a      	lsls	r2, r3, #21
 80096aa:	d5f9      	bpl.n	80096a0 <I2C_RequestMemoryWrite+0x150>
 80096ac:	e784      	b.n	80095b8 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096ae:	6832      	ldr	r2, [r6, #0]
 80096b0:	6813      	ldr	r3, [r2, #0]
 80096b2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 80096b6:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096b8:	6013      	str	r3, [r2, #0]
 80096ba:	e7b3      	b.n	8009624 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096bc:	6963      	ldr	r3, [r4, #20]
 80096be:	061d      	lsls	r5, r3, #24
 80096c0:	d4dc      	bmi.n	800967c <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096c2:	6963      	ldr	r3, [r4, #20]
 80096c4:	0559      	lsls	r1, r3, #21
 80096c6:	f53f af77 	bmi.w	80095b8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80096ca:	f7ff fb49 	bl	8008d60 <HAL_GetTick>
 80096ce:	eba0 000b 	sub.w	r0, r0, fp
 80096d2:	4581      	cmp	r9, r0
 80096d4:	d325      	bcc.n	8009722 <I2C_RequestMemoryWrite+0x1d2>
 80096d6:	f1b9 0f00 	cmp.w	r9, #0
 80096da:	d022      	beq.n	8009722 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096dc:	6834      	ldr	r4, [r6, #0]
 80096de:	e761      	b.n	80095a4 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80096e0:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80096e2:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80096e4:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80096e6:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80096ea:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80096ee:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80096f0:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80096f4:	f043 0320 	orr.w	r3, r3, #32
 80096f8:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 80096fa:	2001      	movs	r0, #1
 80096fc:	e792      	b.n	8009624 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096fe:	6963      	ldr	r3, [r4, #20]
 8009700:	061b      	lsls	r3, r3, #24
 8009702:	d4be      	bmi.n	8009682 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009704:	6963      	ldr	r3, [r4, #20]
 8009706:	0558      	lsls	r0, r3, #21
 8009708:	f53f af56 	bmi.w	80095b8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800970c:	f7ff fb28 	bl	8008d60 <HAL_GetTick>
 8009710:	eba0 000b 	sub.w	r0, r0, fp
 8009714:	4581      	cmp	r9, r0
 8009716:	d304      	bcc.n	8009722 <I2C_RequestMemoryWrite+0x1d2>
 8009718:	f1b9 0f00 	cmp.w	r9, #0
 800971c:	d001      	beq.n	8009722 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800971e:	6834      	ldr	r4, [r6, #0]
 8009720:	e7bb      	b.n	800969a <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009722:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009724:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009726:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009728:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800972c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009730:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009732:	4313      	orrs	r3, r2
 8009734:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009736:	e74d      	b.n	80095d4 <I2C_RequestMemoryWrite+0x84>

08009738 <I2C_RequestMemoryRead>:
{
 8009738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800973c:	6804      	ldr	r4, [r0, #0]
{
 800973e:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009740:	6823      	ldr	r3, [r4, #0]
 8009742:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009746:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009748:	6823      	ldr	r3, [r4, #0]
{
 800974a:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800974c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009750:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009754:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009758:	6023      	str	r3, [r4, #0]
{
 800975a:	4606      	mov	r6, r0
 800975c:	468b      	mov	fp, r1
 800975e:	4617      	mov	r7, r2
 8009760:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009764:	d13a      	bne.n	80097dc <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009766:	6965      	ldr	r5, [r4, #20]
 8009768:	07eb      	lsls	r3, r5, #31
 800976a:	d5fc      	bpl.n	8009766 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800976c:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009770:	6123      	str	r3, [r4, #16]
 8009772:	fa5f fb8b 	uxtb.w	fp, fp
 8009776:	f1ba 3fff 	cmp.w	sl, #4294967295
 800977a:	d003      	beq.n	8009784 <I2C_RequestMemoryRead+0x4c>
 800977c:	e069      	b.n	8009852 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800977e:	6965      	ldr	r5, [r4, #20]
 8009780:	056a      	lsls	r2, r5, #21
 8009782:	d44e      	bmi.n	8009822 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009784:	6965      	ldr	r5, [r4, #20]
 8009786:	07a9      	lsls	r1, r5, #30
 8009788:	d5f9      	bpl.n	800977e <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800978a:	2300      	movs	r3, #0
 800978c:	9301      	str	r3, [sp, #4]
 800978e:	6963      	ldr	r3, [r4, #20]
 8009790:	9301      	str	r3, [sp, #4]
 8009792:	69a3      	ldr	r3, [r4, #24]
 8009794:	9301      	str	r3, [sp, #4]
 8009796:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009798:	f1ba 3fff 	cmp.w	sl, #4294967295
 800979c:	f040 80bd 	bne.w	800991a <I2C_RequestMemoryRead+0x1e2>
 80097a0:	6963      	ldr	r3, [r4, #20]
 80097a2:	0618      	lsls	r0, r3, #24
 80097a4:	d468      	bmi.n	8009878 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097a6:	6963      	ldr	r3, [r4, #20]
 80097a8:	0559      	lsls	r1, r3, #21
 80097aa:	d5f9      	bpl.n	80097a0 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 80097ac:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80097ae:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80097b2:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80097b4:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80097b6:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80097b8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80097bc:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80097c0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80097c2:	f043 0304 	orr.w	r3, r3, #4
 80097c6:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80097c8:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 80097ca:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80097cc:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80097ce:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80097d2:	d070      	beq.n	80098b6 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 80097d4:	2001      	movs	r0, #1
}
 80097d6:	b003      	add	sp, #12
 80097d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80097dc:	6963      	ldr	r3, [r4, #20]
 80097de:	07dd      	lsls	r5, r3, #31
 80097e0:	d4c4      	bmi.n	800976c <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097e2:	f7ff fabd 	bl	8008d60 <HAL_GetTick>
 80097e6:	eba0 0009 	sub.w	r0, r0, r9
 80097ea:	4582      	cmp	sl, r0
 80097ec:	d304      	bcc.n	80097f8 <I2C_RequestMemoryRead+0xc0>
 80097ee:	f1ba 0f00 	cmp.w	sl, #0
 80097f2:	d001      	beq.n	80097f8 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80097f4:	6834      	ldr	r4, [r6, #0]
 80097f6:	e7b3      	b.n	8009760 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80097f8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80097fa:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80097fc:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80097fe:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009802:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009806:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009808:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800980a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800980e:	f042 0220 	orr.w	r2, r2, #32
 8009812:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009814:	680b      	ldr	r3, [r1, #0]
 8009816:	05dc      	lsls	r4, r3, #23
 8009818:	d43d      	bmi.n	8009896 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800981a:	2003      	movs	r0, #3
}
 800981c:	b003      	add	sp, #12
 800981e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009822:	6823      	ldr	r3, [r4, #0]
 8009824:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009828:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800982a:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800982c:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009830:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009832:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009834:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009836:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800983a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800983e:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009840:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009844:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009848:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800984a:	6433      	str	r3, [r6, #64]	; 0x40
}
 800984c:	b003      	add	sp, #12
 800984e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009852:	6963      	ldr	r3, [r4, #20]
 8009854:	079b      	lsls	r3, r3, #30
 8009856:	d498      	bmi.n	800978a <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009858:	6963      	ldr	r3, [r4, #20]
 800985a:	0558      	lsls	r0, r3, #21
 800985c:	d4e1      	bmi.n	8009822 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800985e:	f7ff fa7f 	bl	8008d60 <HAL_GetTick>
 8009862:	eba0 0009 	sub.w	r0, r0, r9
 8009866:	4582      	cmp	sl, r0
 8009868:	f0c0 808f 	bcc.w	800998a <I2C_RequestMemoryRead+0x252>
 800986c:	f1ba 0f00 	cmp.w	sl, #0
 8009870:	f000 808b 	beq.w	800998a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009874:	6834      	ldr	r4, [r6, #0]
 8009876:	e77e      	b.n	8009776 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009878:	f1b8 0f01 	cmp.w	r8, #1
 800987c:	d10f      	bne.n	800989e <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800987e:	b2ff      	uxtb	r7, r7
 8009880:	6127      	str	r7, [r4, #16]
 8009882:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009886:	d16e      	bne.n	8009966 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009888:	6963      	ldr	r3, [r4, #20]
 800988a:	061b      	lsls	r3, r3, #24
 800988c:	d41a      	bmi.n	80098c4 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800988e:	6963      	ldr	r3, [r4, #20]
 8009890:	055f      	lsls	r7, r3, #21
 8009892:	d5f9      	bpl.n	8009888 <I2C_RequestMemoryRead+0x150>
 8009894:	e78a      	b.n	80097ac <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009896:	f44f 7300 	mov.w	r3, #512	; 0x200
 800989a:	6433      	str	r3, [r6, #64]	; 0x40
 800989c:	e7bd      	b.n	800981a <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800989e:	0a3b      	lsrs	r3, r7, #8
 80098a0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098a2:	f1ba 3fff 	cmp.w	sl, #4294967295
 80098a6:	d17e      	bne.n	80099a6 <I2C_RequestMemoryRead+0x26e>
 80098a8:	6963      	ldr	r3, [r4, #20]
 80098aa:	061d      	lsls	r5, r3, #24
 80098ac:	d4e7      	bmi.n	800987e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098ae:	6963      	ldr	r3, [r4, #20]
 80098b0:	0558      	lsls	r0, r3, #21
 80098b2:	d5f9      	bpl.n	80098a8 <I2C_RequestMemoryRead+0x170>
 80098b4:	e77a      	b.n	80097ac <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098b6:	6832      	ldr	r2, [r6, #0]
 80098b8:	6813      	ldr	r3, [r2, #0]
 80098ba:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 80098be:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098c0:	6013      	str	r3, [r2, #0]
 80098c2:	e7ab      	b.n	800981c <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80098c4:	6823      	ldr	r3, [r4, #0]
 80098c6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80098ca:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80098cc:	f1ba 3fff 	cmp.w	sl, #4294967295
 80098d0:	d113      	bne.n	80098fa <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80098d2:	6963      	ldr	r3, [r4, #20]
 80098d4:	07d8      	lsls	r0, r3, #31
 80098d6:	d5fc      	bpl.n	80098d2 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80098d8:	f04b 0301 	orr.w	r3, fp, #1
 80098dc:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80098de:	f1ba 3fff 	cmp.w	sl, #4294967295
 80098e2:	d003      	beq.n	80098ec <I2C_RequestMemoryRead+0x1b4>
 80098e4:	e02b      	b.n	800993e <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098e6:	6963      	ldr	r3, [r4, #20]
 80098e8:	055b      	lsls	r3, r3, #21
 80098ea:	d49a      	bmi.n	8009822 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80098ec:	6963      	ldr	r3, [r4, #20]
 80098ee:	43db      	mvns	r3, r3
 80098f0:	f013 0302 	ands.w	r3, r3, #2
 80098f4:	d1f7      	bne.n	80098e6 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 80098f6:	4618      	mov	r0, r3
 80098f8:	e790      	b.n	800981c <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80098fa:	6963      	ldr	r3, [r4, #20]
 80098fc:	07d9      	lsls	r1, r3, #31
 80098fe:	d4eb      	bmi.n	80098d8 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009900:	f7ff fa2e 	bl	8008d60 <HAL_GetTick>
 8009904:	eba0 0009 	sub.w	r0, r0, r9
 8009908:	4582      	cmp	sl, r0
 800990a:	f4ff af75 	bcc.w	80097f8 <I2C_RequestMemoryRead+0xc0>
 800990e:	f1ba 0f00 	cmp.w	sl, #0
 8009912:	f43f af71 	beq.w	80097f8 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009916:	6834      	ldr	r4, [r6, #0]
 8009918:	e7d8      	b.n	80098cc <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800991a:	6963      	ldr	r3, [r4, #20]
 800991c:	061a      	lsls	r2, r3, #24
 800991e:	d4ab      	bmi.n	8009878 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009920:	6963      	ldr	r3, [r4, #20]
 8009922:	055d      	lsls	r5, r3, #21
 8009924:	f53f af42 	bmi.w	80097ac <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009928:	f7ff fa1a 	bl	8008d60 <HAL_GetTick>
 800992c:	eba0 0009 	sub.w	r0, r0, r9
 8009930:	4582      	cmp	sl, r0
 8009932:	d34b      	bcc.n	80099cc <I2C_RequestMemoryRead+0x294>
 8009934:	f1ba 0f00 	cmp.w	sl, #0
 8009938:	d048      	beq.n	80099cc <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800993a:	6834      	ldr	r4, [r6, #0]
 800993c:	e72c      	b.n	8009798 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800993e:	6963      	ldr	r3, [r4, #20]
 8009940:	43db      	mvns	r3, r3
 8009942:	f013 0302 	ands.w	r3, r3, #2
 8009946:	d0d6      	beq.n	80098f6 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009948:	6963      	ldr	r3, [r4, #20]
 800994a:	055a      	lsls	r2, r3, #21
 800994c:	f53f af69 	bmi.w	8009822 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009950:	f7ff fa06 	bl	8008d60 <HAL_GetTick>
 8009954:	eba0 0009 	sub.w	r0, r0, r9
 8009958:	4582      	cmp	sl, r0
 800995a:	d316      	bcc.n	800998a <I2C_RequestMemoryRead+0x252>
 800995c:	f1ba 0f00 	cmp.w	sl, #0
 8009960:	d013      	beq.n	800998a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009962:	6834      	ldr	r4, [r6, #0]
 8009964:	e7bb      	b.n	80098de <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009966:	6963      	ldr	r3, [r4, #20]
 8009968:	061d      	lsls	r5, r3, #24
 800996a:	d4ab      	bmi.n	80098c4 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800996c:	6963      	ldr	r3, [r4, #20]
 800996e:	055a      	lsls	r2, r3, #21
 8009970:	f53f af1c 	bmi.w	80097ac <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009974:	f7ff f9f4 	bl	8008d60 <HAL_GetTick>
 8009978:	eba0 0009 	sub.w	r0, r0, r9
 800997c:	4582      	cmp	sl, r0
 800997e:	d325      	bcc.n	80099cc <I2C_RequestMemoryRead+0x294>
 8009980:	f1ba 0f00 	cmp.w	sl, #0
 8009984:	d022      	beq.n	80099cc <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009986:	6834      	ldr	r4, [r6, #0]
 8009988:	e77b      	b.n	8009882 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800998a:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800998c:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800998e:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009990:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009994:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009998:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800999a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800999e:	f043 0320 	orr.w	r3, r3, #32
 80099a2:	6433      	str	r3, [r6, #64]	; 0x40
 80099a4:	e716      	b.n	80097d4 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099a6:	6963      	ldr	r3, [r4, #20]
 80099a8:	0619      	lsls	r1, r3, #24
 80099aa:	f53f af68 	bmi.w	800987e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099ae:	6963      	ldr	r3, [r4, #20]
 80099b0:	055b      	lsls	r3, r3, #21
 80099b2:	f53f aefb 	bmi.w	80097ac <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099b6:	f7ff f9d3 	bl	8008d60 <HAL_GetTick>
 80099ba:	eba0 0009 	sub.w	r0, r0, r9
 80099be:	4582      	cmp	sl, r0
 80099c0:	d304      	bcc.n	80099cc <I2C_RequestMemoryRead+0x294>
 80099c2:	f1ba 0f00 	cmp.w	sl, #0
 80099c6:	d001      	beq.n	80099cc <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099c8:	6834      	ldr	r4, [r6, #0]
 80099ca:	e76a      	b.n	80098a2 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80099cc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80099ce:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80099d0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80099d2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80099d6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80099da:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80099dc:	4313      	orrs	r3, r2
 80099de:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80099e0:	e6f2      	b.n	80097c8 <I2C_RequestMemoryRead+0x90>
 80099e2:	bf00      	nop

080099e4 <HAL_I2C_Init>:
  if (hi2c == NULL)
 80099e4:	2800      	cmp	r0, #0
 80099e6:	f000 80b9 	beq.w	8009b5c <HAL_I2C_Init+0x178>
{
 80099ea:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80099ec:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80099f0:	4604      	mov	r4, r0
 80099f2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80099f6:	2b00      	cmp	r3, #0
 80099f8:	f000 8098 	beq.w	8009b2c <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 80099fc:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 80099fe:	2224      	movs	r2, #36	; 0x24
 8009a00:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009a04:	681a      	ldr	r2, [r3, #0]
 8009a06:	f022 0201 	bic.w	r2, r2, #1
 8009a0a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009a0c:	681a      	ldr	r2, [r3, #0]
 8009a0e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009a12:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009a14:	681a      	ldr	r2, [r3, #0]
 8009a16:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009a1a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009a1c:	f001 fe70 	bl	800b700 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009a20:	6865      	ldr	r5, [r4, #4]
 8009a22:	4b4f      	ldr	r3, [pc, #316]	; (8009b60 <HAL_I2C_Init+0x17c>)
 8009a24:	429d      	cmp	r5, r3
 8009a26:	d84f      	bhi.n	8009ac8 <HAL_I2C_Init+0xe4>
 8009a28:	4b4e      	ldr	r3, [pc, #312]	; (8009b64 <HAL_I2C_Init+0x180>)
 8009a2a:	4298      	cmp	r0, r3
 8009a2c:	d97c      	bls.n	8009b28 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009a2e:	4b4e      	ldr	r3, [pc, #312]	; (8009b68 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a30:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009a32:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a36:	1e43      	subs	r3, r0, #1
 8009a38:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009a3c:	6822      	ldr	r2, [r4, #0]
 8009a3e:	6851      	ldr	r1, [r2, #4]
 8009a40:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009a44:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009a48:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009a4a:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009a4c:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009a50:	f10c 0c01 	add.w	ip, ip, #1
 8009a54:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009a58:	ea41 010c 	orr.w	r1, r1, ip
 8009a5c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a5e:	69d1      	ldr	r1, [r2, #28]
 8009a60:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009a64:	3301      	adds	r3, #1
 8009a66:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009a6a:	4203      	tst	r3, r0
 8009a6c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009a70:	d161      	bne.n	8009b36 <HAL_I2C_Init+0x152>
 8009a72:	2304      	movs	r3, #4
 8009a74:	430b      	orrs	r3, r1
 8009a76:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009a78:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009a7c:	6811      	ldr	r1, [r2, #0]
 8009a7e:	4303      	orrs	r3, r0
 8009a80:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009a84:	430b      	orrs	r3, r1
 8009a86:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009a88:	6891      	ldr	r1, [r2, #8]
 8009a8a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009a8e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009a92:	4303      	orrs	r3, r0
 8009a94:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009a98:	430b      	orrs	r3, r1
 8009a9a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009a9c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009aa0:	68d1      	ldr	r1, [r2, #12]
 8009aa2:	4303      	orrs	r3, r0
 8009aa4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009aa8:	430b      	orrs	r3, r1
 8009aaa:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009aac:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009aae:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009ab0:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009ab4:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009ab6:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009ab8:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009aba:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009abe:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009ac0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009ac4:	4618      	mov	r0, r3
}
 8009ac6:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009ac8:	4b28      	ldr	r3, [pc, #160]	; (8009b6c <HAL_I2C_Init+0x188>)
 8009aca:	4298      	cmp	r0, r3
 8009acc:	d92c      	bls.n	8009b28 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009ace:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009ad0:	4b25      	ldr	r3, [pc, #148]	; (8009b68 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009ad2:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ad4:	4e26      	ldr	r6, [pc, #152]	; (8009b70 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009ad6:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009ada:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009ade:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009ae2:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009ae4:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ae8:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009aec:	fb01 f303 	mul.w	r3, r1, r3
 8009af0:	fba6 6303 	umull	r6, r3, r6, r3
 8009af4:	6a11      	ldr	r1, [r2, #32]
 8009af6:	099b      	lsrs	r3, r3, #6
 8009af8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009afc:	3301      	adds	r3, #1
 8009afe:	430b      	orrs	r3, r1
 8009b00:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009b02:	69d1      	ldr	r1, [r2, #28]
 8009b04:	68a3      	ldr	r3, [r4, #8]
 8009b06:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009b0a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009b0e:	b9ab      	cbnz	r3, 8009b3c <HAL_I2C_Init+0x158>
 8009b10:	1e43      	subs	r3, r0, #1
 8009b12:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009b16:	fbb3 f3f5 	udiv	r3, r3, r5
 8009b1a:	3301      	adds	r3, #1
 8009b1c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009b20:	b1d3      	cbz	r3, 8009b58 <HAL_I2C_Init+0x174>
 8009b22:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009b26:	e7a5      	b.n	8009a74 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009b28:	2001      	movs	r0, #1
}
 8009b2a:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009b2c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009b30:	f7f7 fd52 	bl	80015d8 <HAL_I2C_MspInit>
 8009b34:	e762      	b.n	80099fc <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009b36:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009b3a:	e79b      	b.n	8009a74 <HAL_I2C_Init+0x90>
 8009b3c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009b40:	1e43      	subs	r3, r0, #1
 8009b42:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009b46:	fbb3 f3f5 	udiv	r3, r3, r5
 8009b4a:	3301      	adds	r3, #1
 8009b4c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009b50:	b113      	cbz	r3, 8009b58 <HAL_I2C_Init+0x174>
 8009b52:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009b56:	e78d      	b.n	8009a74 <HAL_I2C_Init+0x90>
 8009b58:	2301      	movs	r3, #1
 8009b5a:	e78b      	b.n	8009a74 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009b5c:	2001      	movs	r0, #1
}
 8009b5e:	4770      	bx	lr
 8009b60:	000186a0 	.word	0x000186a0
 8009b64:	001e847f 	.word	0x001e847f
 8009b68:	431bde83 	.word	0x431bde83
 8009b6c:	003d08ff 	.word	0x003d08ff
 8009b70:	10624dd3 	.word	0x10624dd3

08009b74 <HAL_I2C_Mem_Write>:
{
 8009b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b78:	4604      	mov	r4, r0
 8009b7a:	b083      	sub	sp, #12
 8009b7c:	4699      	mov	r9, r3
 8009b7e:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009b82:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009b84:	460f      	mov	r7, r1
 8009b86:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009b88:	f7ff f8ea 	bl	8008d60 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009b8c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009b90:	2b20      	cmp	r3, #32
 8009b92:	d004      	beq.n	8009b9e <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009b94:	2702      	movs	r7, #2
}
 8009b96:	4638      	mov	r0, r7
 8009b98:	b003      	add	sp, #12
 8009b9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009b9e:	4605      	mov	r5, r0
 8009ba0:	e005      	b.n	8009bae <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ba2:	f7ff f8dd 	bl	8008d60 <HAL_GetTick>
 8009ba6:	1b40      	subs	r0, r0, r5
 8009ba8:	2819      	cmp	r0, #25
 8009baa:	f200 80a8 	bhi.w	8009cfe <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009bae:	6820      	ldr	r0, [r4, #0]
 8009bb0:	6983      	ldr	r3, [r0, #24]
 8009bb2:	ea6f 0c03 	mvn.w	ip, r3
 8009bb6:	f01c 0b02 	ands.w	fp, ip, #2
 8009bba:	d0f2      	beq.n	8009ba2 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009bbc:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009bc0:	2b01      	cmp	r3, #1
 8009bc2:	d0e7      	beq.n	8009b94 <HAL_I2C_Mem_Write+0x20>
 8009bc4:	2301      	movs	r3, #1
 8009bc6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009bca:	6803      	ldr	r3, [r0, #0]
 8009bcc:	07db      	lsls	r3, r3, #31
 8009bce:	d572      	bpl.n	8009cb6 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009bd0:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009bd2:	6807      	ldr	r7, [r0, #0]
 8009bd4:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009bd8:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009bda:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009bdc:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009bde:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009be0:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009be4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009be8:	2040      	movs	r0, #64	; 0x40
 8009bea:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009bee:	2000      	movs	r0, #0
 8009bf0:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009bf2:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009bf6:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009bf8:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009bfa:	4856      	ldr	r0, [pc, #344]	; (8009d54 <HAL_I2C_Mem_Write+0x1e0>)
 8009bfc:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009bfe:	464b      	mov	r3, r9
 8009c00:	4642      	mov	r2, r8
 8009c02:	4620      	mov	r0, r4
 8009c04:	f7ff fca4 	bl	8009550 <I2C_RequestMemoryWrite>
 8009c08:	4607      	mov	r7, r0
 8009c0a:	bb00      	cbnz	r0, 8009c4e <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009c0c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009c0e:	2b00      	cmp	r3, #0
 8009c10:	f000 809e 	beq.w	8009d50 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009c14:	6823      	ldr	r3, [r4, #0]
 8009c16:	1c72      	adds	r2, r6, #1
 8009c18:	d159      	bne.n	8009cce <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c1a:	695a      	ldr	r2, [r3, #20]
 8009c1c:	0610      	lsls	r0, r2, #24
 8009c1e:	d41b      	bmi.n	8009c58 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c20:	695a      	ldr	r2, [r3, #20]
 8009c22:	0551      	lsls	r1, r2, #21
 8009c24:	d5f9      	bpl.n	8009c1a <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009c26:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009c28:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009c2c:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009c2e:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009c30:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009c32:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009c36:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009c3a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009c3c:	f043 0304 	orr.w	r3, r3, #4
 8009c40:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c42:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009c44:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c46:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009c48:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c4c:	d038      	beq.n	8009cc0 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009c4e:	2701      	movs	r7, #1
}
 8009c50:	4638      	mov	r0, r7
 8009c52:	b003      	add	sp, #12
 8009c54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c58:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009c5c:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c60:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009c62:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c66:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009c6a:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009c6c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009c6e:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009c70:	3a01      	subs	r2, #1
 8009c72:	b292      	uxth	r2, r2
 8009c74:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009c76:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009c78:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009c7a:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009c7c:	0740      	lsls	r0, r0, #29
 8009c7e:	d517      	bpl.n	8009cb0 <HAL_I2C_Mem_Write+0x13c>
 8009c80:	b942      	cbnz	r2, 8009c94 <HAL_I2C_Mem_Write+0x120>
 8009c82:	1c72      	adds	r2, r6, #1
 8009c84:	d156      	bne.n	8009d34 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009c86:	695a      	ldr	r2, [r3, #20]
 8009c88:	0750      	lsls	r0, r2, #29
 8009c8a:	d446      	bmi.n	8009d1a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c8c:	695a      	ldr	r2, [r3, #20]
 8009c8e:	0551      	lsls	r1, r2, #21
 8009c90:	d5f9      	bpl.n	8009c86 <HAL_I2C_Mem_Write+0x112>
 8009c92:	e7c8      	b.n	8009c26 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c94:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009c98:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009c9a:	f10c 0102 	add.w	r1, ip, #2
 8009c9e:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009ca0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009ca2:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009ca6:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009ca8:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009caa:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009cac:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009cae:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009cb0:	2a00      	cmp	r2, #0
 8009cb2:	d1b0      	bne.n	8009c16 <HAL_I2C_Mem_Write+0xa2>
 8009cb4:	e7e5      	b.n	8009c82 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009cb6:	6803      	ldr	r3, [r0, #0]
 8009cb8:	f043 0301 	orr.w	r3, r3, #1
 8009cbc:	6003      	str	r3, [r0, #0]
 8009cbe:	e787      	b.n	8009bd0 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009cc0:	6822      	ldr	r2, [r4, #0]
 8009cc2:	6813      	ldr	r3, [r2, #0]
 8009cc4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009cc8:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009cca:	6013      	str	r3, [r2, #0]
 8009ccc:	e763      	b.n	8009b96 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009cce:	695a      	ldr	r2, [r3, #20]
 8009cd0:	0612      	lsls	r2, r2, #24
 8009cd2:	d4c1      	bmi.n	8009c58 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009cd4:	695a      	ldr	r2, [r3, #20]
 8009cd6:	0551      	lsls	r1, r2, #21
 8009cd8:	d4a5      	bmi.n	8009c26 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009cda:	f7ff f841 	bl	8008d60 <HAL_GetTick>
 8009cde:	1b40      	subs	r0, r0, r5
 8009ce0:	4286      	cmp	r6, r0
 8009ce2:	d301      	bcc.n	8009ce8 <HAL_I2C_Mem_Write+0x174>
 8009ce4:	2e00      	cmp	r6, #0
 8009ce6:	d195      	bne.n	8009c14 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009ce8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009cea:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009cec:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009cee:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009cf2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009cf6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009cf8:	4313      	orrs	r3, r2
 8009cfa:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009cfc:	e7a1      	b.n	8009c42 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009cfe:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009d00:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d04:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009d08:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009d0c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009d0e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009d12:	f043 0320 	orr.w	r3, r3, #32
 8009d16:	6423      	str	r3, [r4, #64]	; 0x40
 8009d18:	e73c      	b.n	8009b94 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d1a:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d1c:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d1e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009d22:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d24:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009d26:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009d2a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d2e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009d32:	e730      	b.n	8009b96 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009d34:	695a      	ldr	r2, [r3, #20]
 8009d36:	0752      	lsls	r2, r2, #29
 8009d38:	d4ef      	bmi.n	8009d1a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d3a:	695a      	ldr	r2, [r3, #20]
 8009d3c:	0551      	lsls	r1, r2, #21
 8009d3e:	f53f af72 	bmi.w	8009c26 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d42:	f7ff f80d 	bl	8008d60 <HAL_GetTick>
 8009d46:	1b40      	subs	r0, r0, r5
 8009d48:	4286      	cmp	r6, r0
 8009d4a:	d3cd      	bcc.n	8009ce8 <HAL_I2C_Mem_Write+0x174>
 8009d4c:	2e00      	cmp	r6, #0
 8009d4e:	d0cb      	beq.n	8009ce8 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009d50:	6823      	ldr	r3, [r4, #0]
 8009d52:	e796      	b.n	8009c82 <HAL_I2C_Mem_Write+0x10e>
 8009d54:	ffff0000 	.word	0xffff0000

08009d58 <HAL_I2C_Mem_Read>:
{
 8009d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d5c:	4604      	mov	r4, r0
 8009d5e:	b087      	sub	sp, #28
 8009d60:	4699      	mov	r9, r3
 8009d62:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009d66:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009d68:	460f      	mov	r7, r1
 8009d6a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009d6c:	f7fe fff8 	bl	8008d60 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009d70:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009d74:	2b20      	cmp	r3, #32
 8009d76:	d004      	beq.n	8009d82 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009d78:	2702      	movs	r7, #2
}
 8009d7a:	4638      	mov	r0, r7
 8009d7c:	b007      	add	sp, #28
 8009d7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d82:	4606      	mov	r6, r0
 8009d84:	e005      	b.n	8009d92 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d86:	f7fe ffeb 	bl	8008d60 <HAL_GetTick>
 8009d8a:	1b80      	subs	r0, r0, r6
 8009d8c:	2819      	cmp	r0, #25
 8009d8e:	f200 80d2 	bhi.w	8009f36 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d92:	f8d4 c000 	ldr.w	ip, [r4]
 8009d96:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8009d9a:	43c0      	mvns	r0, r0
 8009d9c:	f010 0b02 	ands.w	fp, r0, #2
 8009da0:	d0f1      	beq.n	8009d86 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009da2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009da6:	2b01      	cmp	r3, #1
 8009da8:	d0e6      	beq.n	8009d78 <HAL_I2C_Mem_Read+0x20>
 8009daa:	2301      	movs	r3, #1
 8009dac:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009db0:	f8dc 3000 	ldr.w	r3, [ip]
 8009db4:	07d9      	lsls	r1, r3, #31
 8009db6:	d537      	bpl.n	8009e28 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009db8:	f8dc 0000 	ldr.w	r0, [ip]
 8009dbc:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009dc0:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009dc4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009dc6:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009dc8:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009dca:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009dce:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009dd2:	2040      	movs	r0, #64	; 0x40
 8009dd4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009dd8:	2000      	movs	r0, #0
 8009dda:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009ddc:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009de0:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009de2:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009de4:	4893      	ldr	r0, [pc, #588]	; (800a034 <HAL_I2C_Mem_Read+0x2dc>)
 8009de6:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009de8:	4639      	mov	r1, r7
 8009dea:	464b      	mov	r3, r9
 8009dec:	4642      	mov	r2, r8
 8009dee:	4620      	mov	r0, r4
 8009df0:	f7ff fca2 	bl	8009738 <I2C_RequestMemoryRead>
 8009df4:	4607      	mov	r7, r0
 8009df6:	2800      	cmp	r0, #0
 8009df8:	f040 80ab 	bne.w	8009f52 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8009dfc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8009dfe:	b9d2      	cbnz	r2, 8009e36 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009e00:	6823      	ldr	r3, [r4, #0]
 8009e02:	9002      	str	r0, [sp, #8]
 8009e04:	695a      	ldr	r2, [r3, #20]
 8009e06:	9202      	str	r2, [sp, #8]
 8009e08:	699a      	ldr	r2, [r3, #24]
 8009e0a:	9202      	str	r2, [sp, #8]
 8009e0c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e0e:	681a      	ldr	r2, [r3, #0]
 8009e10:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009e14:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009e16:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009e18:	2220      	movs	r2, #32
 8009e1a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009e1e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009e22:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8009e26:	e7a8      	b.n	8009d7a <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8009e28:	f8dc 3000 	ldr.w	r3, [ip]
 8009e2c:	f043 0301 	orr.w	r3, r3, #1
 8009e30:	f8cc 3000 	str.w	r3, [ip]
 8009e34:	e7c0      	b.n	8009db8 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8009e36:	2a01      	cmp	r2, #1
 8009e38:	f000 812c 	beq.w	800a094 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8009e3c:	2a02      	cmp	r2, #2
 8009e3e:	f000 80bd 	beq.w	8009fbc <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009e42:	6823      	ldr	r3, [r4, #0]
 8009e44:	9005      	str	r0, [sp, #20]
 8009e46:	6959      	ldr	r1, [r3, #20]
 8009e48:	9105      	str	r1, [sp, #20]
 8009e4a:	6999      	ldr	r1, [r3, #24]
 8009e4c:	9105      	str	r1, [sp, #20]
 8009e4e:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009e50:	2a03      	cmp	r2, #3
 8009e52:	d849      	bhi.n	8009ee8 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009e54:	2a01      	cmp	r2, #1
 8009e56:	f000 80eb 	beq.w	800a030 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8009e5a:	2a02      	cmp	r2, #2
 8009e5c:	f000 8089 	beq.w	8009f72 <HAL_I2C_Mem_Read+0x21a>
 8009e60:	1c69      	adds	r1, r5, #1
 8009e62:	f040 80bb 	bne.w	8009fdc <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e66:	695a      	ldr	r2, [r3, #20]
 8009e68:	0752      	lsls	r2, r2, #29
 8009e6a:	d5fc      	bpl.n	8009e66 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009e6c:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e6e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009e70:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009e74:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e76:	691b      	ldr	r3, [r3, #16]
 8009e78:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009e7a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009e7c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009e7e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009e80:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009e82:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009e84:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009e86:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009e88:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009e8a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009e8c:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009e8e:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e90:	6822      	ldr	r2, [r4, #0]
 8009e92:	f040 80af 	bne.w	8009ff4 <HAL_I2C_Mem_Read+0x29c>
 8009e96:	6953      	ldr	r3, [r2, #20]
 8009e98:	075b      	lsls	r3, r3, #29
 8009e9a:	d5fc      	bpl.n	8009e96 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e9c:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e9e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ea0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009ea4:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ea6:	6913      	ldr	r3, [r2, #16]
 8009ea8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009eaa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009eac:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009eae:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009eb0:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009eb2:	3b01      	subs	r3, #1
 8009eb4:	b29b      	uxth	r3, r3
 8009eb6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009eb8:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8009eba:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8009ebc:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009ec0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009ec2:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ec6:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009ec8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009eca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009ecc:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009ece:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009ed0:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009ed2:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009ed4:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009ed6:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009ed8:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009eda:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009edc:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009ede:	2a00      	cmp	r2, #0
 8009ee0:	d099      	beq.n	8009e16 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009ee2:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009ee4:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009ee6:	d9b5      	bls.n	8009e54 <HAL_I2C_Mem_Read+0xfc>
 8009ee8:	b95d      	cbnz	r5, 8009f02 <HAL_I2C_Mem_Read+0x1aa>
 8009eea:	e0c5      	b.n	800a078 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009eec:	695a      	ldr	r2, [r3, #20]
 8009eee:	06d0      	lsls	r0, r2, #27
 8009ef0:	f100 80b2 	bmi.w	800a058 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ef4:	f7fe ff34 	bl	8008d60 <HAL_GetTick>
 8009ef8:	1b80      	subs	r0, r0, r6
 8009efa:	4285      	cmp	r5, r0
 8009efc:	f0c0 8086 	bcc.w	800a00c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f00:	6823      	ldr	r3, [r4, #0]
 8009f02:	695a      	ldr	r2, [r3, #20]
 8009f04:	0652      	lsls	r2, r2, #25
 8009f06:	d5f1      	bpl.n	8009eec <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f08:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009f0a:	691b      	ldr	r3, [r3, #16]
 8009f0c:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8009f0e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009f10:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8009f12:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009f14:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009f16:	3b01      	subs	r3, #1
 8009f18:	b29b      	uxth	r3, r3
 8009f1a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009f1c:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8009f1e:	3a01      	subs	r2, #1
 8009f20:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009f22:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009f26:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8009f28:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009f2a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009f2e:	d5d6      	bpl.n	8009ede <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f30:	6903      	ldr	r3, [r0, #16]
 8009f32:	704b      	strb	r3, [r1, #1]
 8009f34:	e036      	b.n	8009fa4 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f36:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f38:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f3c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f40:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f44:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009f46:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f4a:	f043 0320 	orr.w	r3, r3, #32
 8009f4e:	6423      	str	r3, [r4, #64]	; 0x40
 8009f50:	e712      	b.n	8009d78 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009f52:	2701      	movs	r7, #1
}
 8009f54:	4638      	mov	r0, r7
 8009f56:	b007      	add	sp, #28
 8009f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f5c:	695a      	ldr	r2, [r3, #20]
 8009f5e:	0750      	lsls	r0, r2, #29
 8009f60:	d40c      	bmi.n	8009f7c <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f62:	f7fe fefd 	bl	8008d60 <HAL_GetTick>
 8009f66:	1b80      	subs	r0, r0, r6
 8009f68:	4285      	cmp	r5, r0
 8009f6a:	d34f      	bcc.n	800a00c <HAL_I2C_Mem_Read+0x2b4>
 8009f6c:	2d00      	cmp	r5, #0
 8009f6e:	d04d      	beq.n	800a00c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f70:	6823      	ldr	r3, [r4, #0]
 8009f72:	1c69      	adds	r1, r5, #1
 8009f74:	d1f2      	bne.n	8009f5c <HAL_I2C_Mem_Read+0x204>
 8009f76:	695a      	ldr	r2, [r3, #20]
 8009f78:	0752      	lsls	r2, r2, #29
 8009f7a:	d5fc      	bpl.n	8009f76 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f7c:	681a      	ldr	r2, [r3, #0]
 8009f7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009f82:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f84:	691a      	ldr	r2, [r3, #16]
 8009f86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009f88:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8009f8a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009f8c:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009f8e:	3b01      	subs	r3, #1
 8009f90:	b29b      	uxth	r3, r3
 8009f92:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009f94:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009f96:	3b01      	subs	r3, #1
 8009f98:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f9a:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009f9c:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f9e:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8009fa0:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009fa2:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009fa4:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009fa6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009fa8:	3301      	adds	r3, #1
 8009faa:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009fac:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009fae:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009fb0:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8009fb2:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009fb4:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8009fb6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009fb8:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009fba:	e790      	b.n	8009ede <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009fbc:	6823      	ldr	r3, [r4, #0]
 8009fbe:	6819      	ldr	r1, [r3, #0]
 8009fc0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009fc4:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009fc6:	6819      	ldr	r1, [r3, #0]
 8009fc8:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8009fcc:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009fce:	9004      	str	r0, [sp, #16]
 8009fd0:	6959      	ldr	r1, [r3, #20]
 8009fd2:	9104      	str	r1, [sp, #16]
 8009fd4:	6999      	ldr	r1, [r3, #24]
 8009fd6:	9104      	str	r1, [sp, #16]
 8009fd8:	9904      	ldr	r1, [sp, #16]
 8009fda:	e739      	b.n	8009e50 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009fdc:	695a      	ldr	r2, [r3, #20]
 8009fde:	0750      	lsls	r0, r2, #29
 8009fe0:	f53f af44 	bmi.w	8009e6c <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009fe4:	f7fe febc 	bl	8008d60 <HAL_GetTick>
 8009fe8:	1b80      	subs	r0, r0, r6
 8009fea:	4285      	cmp	r5, r0
 8009fec:	d30e      	bcc.n	800a00c <HAL_I2C_Mem_Read+0x2b4>
 8009fee:	b16d      	cbz	r5, 800a00c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ff0:	6823      	ldr	r3, [r4, #0]
 8009ff2:	e735      	b.n	8009e60 <HAL_I2C_Mem_Read+0x108>
 8009ff4:	6953      	ldr	r3, [r2, #20]
 8009ff6:	0758      	lsls	r0, r3, #29
 8009ff8:	f53f af50 	bmi.w	8009e9c <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ffc:	f7fe feb0 	bl	8008d60 <HAL_GetTick>
 800a000:	1b80      	subs	r0, r0, r6
 800a002:	4285      	cmp	r5, r0
 800a004:	d302      	bcc.n	800a00c <HAL_I2C_Mem_Read+0x2b4>
 800a006:	2d00      	cmp	r5, #0
 800a008:	f47f af41 	bne.w	8009e8e <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a00c:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a00e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a010:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a012:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a016:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a01a:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a01c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a020:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a022:	f043 0320 	orr.w	r3, r3, #32
}
 800a026:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a028:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a02a:	b007      	add	sp, #28
 800a02c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a030:	b95d      	cbnz	r5, 800a04a <HAL_I2C_Mem_Read+0x2f2>
 800a032:	e02b      	b.n	800a08c <HAL_I2C_Mem_Read+0x334>
 800a034:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a038:	695a      	ldr	r2, [r3, #20]
 800a03a:	06d2      	lsls	r2, r2, #27
 800a03c:	d40c      	bmi.n	800a058 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a03e:	f7fe fe8f 	bl	8008d60 <HAL_GetTick>
 800a042:	1b80      	subs	r0, r0, r6
 800a044:	4285      	cmp	r5, r0
 800a046:	d3e1      	bcc.n	800a00c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a048:	6823      	ldr	r3, [r4, #0]
 800a04a:	695a      	ldr	r2, [r3, #20]
 800a04c:	0651      	lsls	r1, r2, #25
 800a04e:	d5f3      	bpl.n	800a038 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a050:	691a      	ldr	r2, [r3, #16]
 800a052:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a054:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a056:	e7a5      	b.n	8009fa4 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a058:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a05a:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a05e:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a060:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a062:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a064:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a068:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a06c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a06e:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a070:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a074:	2701      	movs	r7, #1
 800a076:	e680      	b.n	8009d7a <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a078:	695a      	ldr	r2, [r3, #20]
 800a07a:	0652      	lsls	r2, r2, #25
 800a07c:	f53f af44 	bmi.w	8009f08 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a080:	695a      	ldr	r2, [r3, #20]
 800a082:	06d1      	lsls	r1, r2, #27
 800a084:	d4e8      	bmi.n	800a058 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a086:	f7fe fe6b 	bl	8008d60 <HAL_GetTick>
 800a08a:	e7bf      	b.n	800a00c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a08c:	695a      	ldr	r2, [r3, #20]
 800a08e:	0650      	lsls	r0, r2, #25
 800a090:	d5f6      	bpl.n	800a080 <HAL_I2C_Mem_Read+0x328>
 800a092:	e7dd      	b.n	800a050 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a094:	6823      	ldr	r3, [r4, #0]
 800a096:	6819      	ldr	r1, [r3, #0]
 800a098:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a09c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a09e:	9003      	str	r0, [sp, #12]
 800a0a0:	6959      	ldr	r1, [r3, #20]
 800a0a2:	9103      	str	r1, [sp, #12]
 800a0a4:	6999      	ldr	r1, [r3, #24]
 800a0a6:	9103      	str	r1, [sp, #12]
 800a0a8:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a0aa:	6819      	ldr	r1, [r3, #0]
 800a0ac:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a0b0:	6019      	str	r1, [r3, #0]
 800a0b2:	e6cd      	b.n	8009e50 <HAL_I2C_Mem_Read+0xf8>

0800a0b4 <HAL_I2C_MasterTxCpltCallback>:
 800a0b4:	4770      	bx	lr
 800a0b6:	bf00      	nop

0800a0b8 <HAL_I2C_MasterRxCpltCallback>:
 800a0b8:	4770      	bx	lr
 800a0ba:	bf00      	nop

0800a0bc <HAL_I2C_SlaveTxCpltCallback>:
 800a0bc:	4770      	bx	lr
 800a0be:	bf00      	nop

0800a0c0 <HAL_I2C_SlaveRxCpltCallback>:
 800a0c0:	4770      	bx	lr
 800a0c2:	bf00      	nop

0800a0c4 <HAL_I2C_AddrCallback>:
}
 800a0c4:	4770      	bx	lr
 800a0c6:	bf00      	nop

0800a0c8 <HAL_I2C_ListenCpltCallback>:
 800a0c8:	4770      	bx	lr
 800a0ca:	bf00      	nop

0800a0cc <HAL_I2C_MemTxCpltCallback>:
 800a0cc:	4770      	bx	lr
 800a0ce:	bf00      	nop

0800a0d0 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a0d0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a0d4:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a0d6:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a0d8:	b959      	cbnz	r1, 800a0f2 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a0da:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a0dc:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a0de:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a0e0:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a0e2:	d00d      	beq.n	800a100 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a0e4:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a0e8:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a0ea:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a0ec:	3201      	adds	r2, #1
 800a0ee:	6502      	str	r2, [r0, #80]	; 0x50
 800a0f0:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a0f2:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a0f4:	2901      	cmp	r1, #1
 800a0f6:	d009      	beq.n	800a10c <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a0f8:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a0fa:	2902      	cmp	r1, #2
 800a0fc:	d00e      	beq.n	800a11c <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a0fe:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a100:	b2d2      	uxtb	r2, r2
 800a102:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a104:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a106:	3202      	adds	r2, #2
 800a108:	6502      	str	r2, [r0, #80]	; 0x50
 800a10a:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a10c:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a10e:	6801      	ldr	r1, [r0, #0]
 800a110:	b2d2      	uxtb	r2, r2
 800a112:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a114:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a116:	3201      	adds	r2, #1
 800a118:	6502      	str	r2, [r0, #80]	; 0x50
 800a11a:	4770      	bx	lr
 800a11c:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a11e:	2a22      	cmp	r2, #34	; 0x22
 800a120:	d01f      	beq.n	800a162 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a122:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a124:	b289      	uxth	r1, r1
 800a126:	b9c1      	cbnz	r1, 800a15a <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a128:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a12a:	b289      	uxth	r1, r1
 800a12c:	2900      	cmp	r1, #0
 800a12e:	d1e6      	bne.n	800a0fe <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a130:	2a21      	cmp	r2, #33	; 0x21
 800a132:	d1e4      	bne.n	800a0fe <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a134:	6802      	ldr	r2, [r0, #0]
{
 800a136:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a138:	6854      	ldr	r4, [r2, #4]
 800a13a:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a13e:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a140:	6814      	ldr	r4, [r2, #0]
 800a142:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a146:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a148:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a14a:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a14c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a150:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a154:	f7ff ffba 	bl	800a0cc <HAL_I2C_MemTxCpltCallback>
}
 800a158:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a15a:	2a21      	cmp	r2, #33	; 0x21
 800a15c:	d00a      	beq.n	800a174 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a15e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a160:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a162:	6801      	ldr	r1, [r0, #0]
 800a164:	680a      	ldr	r2, [r1, #0]
 800a166:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a16a:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a16c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a16e:	3201      	adds	r2, #1
 800a170:	6502      	str	r2, [r0, #80]	; 0x50
 800a172:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a174:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a176:	6802      	ldr	r2, [r0, #0]
 800a178:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a17c:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a17e:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a180:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a182:	3a01      	subs	r2, #1
 800a184:	b292      	uxth	r2, r2
 800a186:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a188:	4770      	bx	lr
 800a18a:	bf00      	nop

0800a18c <HAL_I2C_MemRxCpltCallback>:
 800a18c:	4770      	bx	lr
 800a18e:	bf00      	nop

0800a190 <HAL_I2C_ErrorCallback>:
 800a190:	4770      	bx	lr
 800a192:	bf00      	nop

0800a194 <HAL_I2C_AbortCpltCallback>:
 800a194:	4770      	bx	lr
 800a196:	bf00      	nop

0800a198 <I2C_DMAAbort>:
{
 800a198:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a19a:	4b3a      	ldr	r3, [pc, #232]	; (800a284 <I2C_DMAAbort+0xec>)
 800a19c:	4a3a      	ldr	r2, [pc, #232]	; (800a288 <I2C_DMAAbort+0xf0>)
 800a19e:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a1a0:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a1a2:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1a4:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a1a6:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1a8:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a1ac:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1ae:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1b0:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a1b4:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1b6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a1ba:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1be:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1c0:	9301      	str	r3, [sp, #4]
 800a1c2:	e005      	b.n	800a1d0 <I2C_DMAAbort+0x38>
    count--;
 800a1c4:	9b01      	ldr	r3, [sp, #4]
 800a1c6:	3b01      	subs	r3, #1
 800a1c8:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a1ca:	6813      	ldr	r3, [r2, #0]
 800a1cc:	059b      	lsls	r3, r3, #22
 800a1ce:	d506      	bpl.n	800a1de <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a1d0:	9b01      	ldr	r3, [sp, #4]
 800a1d2:	2b00      	cmp	r3, #0
 800a1d4:	d1f6      	bne.n	800a1c4 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a1d6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a1d8:	f043 0320 	orr.w	r3, r3, #32
 800a1dc:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a1de:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a1e0:	b34c      	cbz	r4, 800a236 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a1e2:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a1e4:	2500      	movs	r5, #0
 800a1e6:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a1e8:	b1f3      	cbz	r3, 800a228 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a1ea:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a1ec:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a1ee:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a1f2:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a1f4:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a1f6:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a1f8:	2400      	movs	r4, #0
 800a1fa:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a1fc:	6813      	ldr	r3, [r2, #0]
 800a1fe:	f023 0301 	bic.w	r3, r3, #1
 800a202:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a204:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a208:	2b60      	cmp	r3, #96	; 0x60
 800a20a:	d02a      	beq.n	800a262 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a20c:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a210:	2928      	cmp	r1, #40	; 0x28
 800a212:	d019      	beq.n	800a248 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a214:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a216:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a218:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a21c:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a220:	f7ff ffb6 	bl	800a190 <HAL_I2C_ErrorCallback>
}
 800a224:	b002      	add	sp, #8
 800a226:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a228:	6815      	ldr	r5, [r2, #0]
 800a22a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a22e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a230:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a232:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a234:	e7e2      	b.n	800a1fc <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a236:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a238:	b1f3      	cbz	r3, 800a278 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a23a:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a23c:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a23e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a242:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a244:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a246:	e7d7      	b.n	800a1f8 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a248:	6813      	ldr	r3, [r2, #0]
 800a24a:	f043 0301 	orr.w	r3, r3, #1
 800a24e:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a250:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a252:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a254:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a258:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a25a:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a25c:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a260:	e7de      	b.n	800a220 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a262:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a264:	2220      	movs	r2, #32
 800a266:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a26a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a26e:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a270:	f7ff ff90 	bl	800a194 <HAL_I2C_AbortCpltCallback>
}
 800a274:	b002      	add	sp, #8
 800a276:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a278:	6814      	ldr	r4, [r2, #0]
 800a27a:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a27e:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a280:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a282:	e7bb      	b.n	800a1fc <I2C_DMAAbort+0x64>
 800a284:	20000094 	.word	0x20000094
 800a288:	14f8b589 	.word	0x14f8b589

0800a28c <I2C_ITError>:
{
 800a28c:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a28e:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a292:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a296:	2b10      	cmp	r3, #16
{
 800a298:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a29a:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a29c:	d039      	beq.n	800a312 <I2C_ITError+0x86>
 800a29e:	b2d9      	uxtb	r1, r3
 800a2a0:	2940      	cmp	r1, #64	; 0x40
 800a2a2:	d036      	beq.n	800a312 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a2a4:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a2a8:	2928      	cmp	r1, #40	; 0x28
 800a2aa:	d03d      	beq.n	800a328 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a2ac:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a2ae:	6859      	ldr	r1, [r3, #4]
 800a2b0:	0508      	lsls	r0, r1, #20
 800a2b2:	d407      	bmi.n	800a2c4 <I2C_ITError+0x38>
 800a2b4:	2a60      	cmp	r2, #96	; 0x60
 800a2b6:	d005      	beq.n	800a2c4 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a2b8:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a2ba:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a2bc:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a2c0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a2c4:	2200      	movs	r2, #0
 800a2c6:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a2c8:	685a      	ldr	r2, [r3, #4]
 800a2ca:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a2ce:	d134      	bne.n	800a33a <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a2d0:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a2d4:	2960      	cmp	r1, #96	; 0x60
 800a2d6:	d075      	beq.n	800a3c4 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a2d8:	695a      	ldr	r2, [r3, #20]
 800a2da:	0650      	lsls	r0, r2, #25
 800a2dc:	d505      	bpl.n	800a2ea <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2de:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a2e0:	691b      	ldr	r3, [r3, #16]
 800a2e2:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a2e4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a2e6:	3301      	adds	r3, #1
 800a2e8:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a2ea:	4620      	mov	r0, r4
 800a2ec:	f7ff ff50 	bl	800a190 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a2f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a2f2:	0719      	lsls	r1, r3, #28
 800a2f4:	d004      	beq.n	800a300 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a2f6:	6822      	ldr	r2, [r4, #0]
 800a2f8:	6853      	ldr	r3, [r2, #4]
 800a2fa:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a2fe:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a300:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a304:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a306:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a308:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a30a:	d501      	bpl.n	800a310 <I2C_ITError+0x84>
 800a30c:	2b28      	cmp	r3, #40	; 0x28
 800a30e:	d02f      	beq.n	800a370 <I2C_ITError+0xe4>
}
 800a310:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a312:	2a22      	cmp	r2, #34	; 0x22
 800a314:	d1c6      	bne.n	800a2a4 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a316:	6823      	ldr	r3, [r4, #0]
 800a318:	681a      	ldr	r2, [r3, #0]
 800a31a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a31e:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a320:	685a      	ldr	r2, [r3, #4]
 800a322:	0512      	lsls	r2, r2, #20
 800a324:	d5c8      	bpl.n	800a2b8 <I2C_ITError+0x2c>
 800a326:	e7cd      	b.n	800a2c4 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a328:	2300      	movs	r3, #0
 800a32a:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a32c:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a32e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a332:	685a      	ldr	r2, [r3, #4]
 800a334:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a338:	d0ca      	beq.n	800a2d0 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a33a:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a33c:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a33e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a342:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a344:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a348:	2b01      	cmp	r3, #1
 800a34a:	d01e      	beq.n	800a38a <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a34c:	4b28      	ldr	r3, [pc, #160]	; (800a3f0 <I2C_ITError+0x164>)
 800a34e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a350:	f7fe fd90 	bl	8008e74 <HAL_DMA_Abort_IT>
 800a354:	2800      	cmp	r0, #0
 800a356:	d0cb      	beq.n	800a2f0 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a358:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a35a:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a35c:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a35e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a360:	f023 0301 	bic.w	r3, r3, #1
 800a364:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a366:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a36a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a36c:	4798      	blx	r3
 800a36e:	e7bf      	b.n	800a2f0 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a370:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a372:	4920      	ldr	r1, [pc, #128]	; (800a3f4 <I2C_ITError+0x168>)
 800a374:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a376:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a378:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a37a:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a37c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a380:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a384:	f7ff fea0 	bl	800a0c8 <HAL_I2C_ListenCpltCallback>
}
 800a388:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a38a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a38c:	4b18      	ldr	r3, [pc, #96]	; (800a3f0 <I2C_ITError+0x164>)
 800a38e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a390:	f7fe fd70 	bl	8008e74 <HAL_DMA_Abort_IT>
 800a394:	2800      	cmp	r0, #0
 800a396:	d0ab      	beq.n	800a2f0 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a398:	6823      	ldr	r3, [r4, #0]
 800a39a:	695a      	ldr	r2, [r3, #20]
 800a39c:	0651      	lsls	r1, r2, #25
 800a39e:	d506      	bpl.n	800a3ae <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a3a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a3a2:	691b      	ldr	r3, [r3, #16]
 800a3a4:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a3a6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a3a8:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a3aa:	3201      	adds	r2, #1
 800a3ac:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a3ae:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a3b0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a3b2:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a3b6:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a3b8:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a3ba:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a3be:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a3c0:	4798      	blx	r3
 800a3c2:	e795      	b.n	800a2f0 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a3c4:	2120      	movs	r1, #32
 800a3c6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a3ca:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a3cc:	695a      	ldr	r2, [r3, #20]
 800a3ce:	0652      	lsls	r2, r2, #25
 800a3d0:	d506      	bpl.n	800a3e0 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a3d2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a3d4:	691b      	ldr	r3, [r3, #16]
 800a3d6:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a3d8:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a3da:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a3dc:	3201      	adds	r2, #1
 800a3de:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a3e0:	681a      	ldr	r2, [r3, #0]
 800a3e2:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a3e6:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a3e8:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a3ea:	f7ff fed3 	bl	800a194 <HAL_I2C_AbortCpltCallback>
 800a3ee:	e77f      	b.n	800a2f0 <I2C_ITError+0x64>
 800a3f0:	0800a199 	.word	0x0800a199
 800a3f4:	ffff0000 	.word	0xffff0000

0800a3f8 <HAL_I2C_EV_IRQHandler>:
{
 800a3f8:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a3fa:	6803      	ldr	r3, [r0, #0]
{
 800a3fc:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a3fe:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a400:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a402:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a406:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a40a:	2910      	cmp	r1, #16
{
 800a40c:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a40e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a410:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a414:	d022      	beq.n	800a45c <HAL_I2C_EV_IRQHandler+0x64>
 800a416:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a41a:	d01f      	beq.n	800a45c <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a41c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a41e:	2900      	cmp	r1, #0
 800a420:	f000 8094 	beq.w	800a54c <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a424:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a426:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a428:	f011 0602 	ands.w	r6, r1, #2
 800a42c:	d059      	beq.n	800a4e2 <HAL_I2C_EV_IRQHandler+0xea>
 800a42e:	0586      	lsls	r6, r0, #22
 800a430:	d559      	bpl.n	800a4e6 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a432:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a434:	b102      	cbz	r2, 800a438 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a436:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a438:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a43c:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a440:	2a28      	cmp	r2, #40	; 0x28
 800a442:	f000 821e 	beq.w	800a882 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a446:	2200      	movs	r2, #0
 800a448:	920c      	str	r2, [sp, #48]	; 0x30
 800a44a:	6959      	ldr	r1, [r3, #20]
 800a44c:	910c      	str	r1, [sp, #48]	; 0x30
 800a44e:	699b      	ldr	r3, [r3, #24]
 800a450:	930c      	str	r3, [sp, #48]	; 0x30
 800a452:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a454:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a458:	b00e      	add	sp, #56	; 0x38
 800a45a:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a45c:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a45e:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a460:	f011 0f01 	tst.w	r1, #1
 800a464:	d11a      	bne.n	800a49c <HAL_I2C_EV_IRQHandler+0xa4>
 800a466:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a46a:	d0f5      	beq.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a46c:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a470:	d0f2      	beq.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a472:	070d      	lsls	r5, r1, #28
 800a474:	d56d      	bpl.n	800a552 <HAL_I2C_EV_IRQHandler+0x15a>
 800a476:	0585      	lsls	r5, r0, #22
 800a478:	f140 8083 	bpl.w	800a582 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a47c:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a47e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a480:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a482:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a484:	2900      	cmp	r1, #0
 800a486:	f000 81e3 	beq.w	800a850 <HAL_I2C_EV_IRQHandler+0x458>
 800a48a:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a48c:	2a00      	cmp	r2, #0
 800a48e:	f000 81df 	beq.w	800a850 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a492:	685a      	ldr	r2, [r3, #4]
 800a494:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a498:	605a      	str	r2, [r3, #4]
 800a49a:	e7dd      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a49c:	0585      	lsls	r5, r0, #22
 800a49e:	d56e      	bpl.n	800a57e <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a4a0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a4a2:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a4a6:	f000 81e9 	beq.w	800a87c <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a4aa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a4ac:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a4b0:	bf04      	itt	eq
 800a4b2:	2208      	moveq	r2, #8
 800a4b4:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a4b6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a4ba:	2a40      	cmp	r2, #64	; 0x40
 800a4bc:	f000 81d7 	beq.w	800a86e <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a4c0:	6922      	ldr	r2, [r4, #16]
 800a4c2:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a4c6:	f000 81b2 	beq.w	800a82e <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a4ca:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a4cc:	2a00      	cmp	r2, #0
 800a4ce:	f040 81ef 	bne.w	800a8b0 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a4d2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a4d4:	11d2      	asrs	r2, r2, #7
 800a4d6:	f002 0206 	and.w	r2, r2, #6
 800a4da:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a4de:	611a      	str	r2, [r3, #16]
 800a4e0:	e7ba      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a4e2:	06cd      	lsls	r5, r1, #27
 800a4e4:	d47c      	bmi.n	800a5e0 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a4e6:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a4ea:	2a21      	cmp	r2, #33	; 0x21
 800a4ec:	f000 80f5 	beq.w	800a6da <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a4f0:	064e      	lsls	r6, r1, #25
 800a4f2:	f140 8132 	bpl.w	800a75a <HAL_I2C_EV_IRQHandler+0x362>
 800a4f6:	0545      	lsls	r5, r0, #21
 800a4f8:	f140 812f 	bpl.w	800a75a <HAL_I2C_EV_IRQHandler+0x362>
 800a4fc:	0749      	lsls	r1, r1, #29
 800a4fe:	f100 812f 	bmi.w	800a760 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a502:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a506:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a508:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a50a:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a50c:	2a00      	cmp	r2, #0
 800a50e:	d0a3      	beq.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a510:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a512:	691b      	ldr	r3, [r3, #16]
 800a514:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a516:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a518:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a51a:	3b01      	subs	r3, #1
 800a51c:	b29b      	uxth	r3, r3
 800a51e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a520:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a522:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a524:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a526:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a528:	2b00      	cmp	r3, #0
 800a52a:	d195      	bne.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a52c:	292a      	cmp	r1, #42	; 0x2a
 800a52e:	d193      	bne.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a530:	6822      	ldr	r2, [r4, #0]
 800a532:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a534:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a536:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a538:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a53c:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a53e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a540:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a542:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a546:	f7ff fdbb 	bl	800a0c0 <HAL_I2C_SlaveRxCpltCallback>
 800a54a:	e785      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a54c:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a54e:	6959      	ldr	r1, [r3, #20]
 800a550:	e76a      	b.n	800a428 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a552:	078d      	lsls	r5, r1, #30
 800a554:	d515      	bpl.n	800a582 <HAL_I2C_EV_IRQHandler+0x18a>
 800a556:	0585      	lsls	r5, r0, #22
 800a558:	d513      	bpl.n	800a582 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a55a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a55e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a560:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a562:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a566:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a568:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a56a:	f000 81b3 	beq.w	800a8d4 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a56e:	2200      	movs	r2, #0
 800a570:	920a      	str	r2, [sp, #40]	; 0x28
 800a572:	695a      	ldr	r2, [r3, #20]
 800a574:	920a      	str	r2, [sp, #40]	; 0x28
 800a576:	699b      	ldr	r3, [r3, #24]
 800a578:	930a      	str	r3, [sp, #40]	; 0x28
 800a57a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a57c:	e76c      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a57e:	070d      	lsls	r5, r1, #28
 800a580:	d5e7      	bpl.n	800a552 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a582:	0776      	lsls	r6, r6, #29
 800a584:	f140 80f5 	bpl.w	800a772 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a588:	685d      	ldr	r5, [r3, #4]
 800a58a:	052d      	lsls	r5, r5, #20
 800a58c:	f53f af64 	bmi.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a590:	060e      	lsls	r6, r1, #24
 800a592:	f140 8115 	bpl.w	800a7c0 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a596:	0545      	lsls	r5, r0, #21
 800a598:	f140 8112 	bpl.w	800a7c0 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a59c:	074e      	lsls	r6, r1, #29
 800a59e:	f100 8112 	bmi.w	800a7c6 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a5a2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5a6:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a5a8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a5ac:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a5ae:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a5b0:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5b2:	2800      	cmp	r0, #0
 800a5b4:	f040 8235 	bne.w	800aa22 <HAL_I2C_EV_IRQHandler+0x62a>
 800a5b8:	2a21      	cmp	r2, #33	; 0x21
 800a5ba:	f000 8347 	beq.w	800ac4c <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a5be:	2940      	cmp	r1, #64	; 0x40
 800a5c0:	f47f af4a 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a5c4:	2a22      	cmp	r2, #34	; 0x22
 800a5c6:	f47f af47 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a5ca:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a5cc:	b292      	uxth	r2, r2
 800a5ce:	2a00      	cmp	r2, #0
 800a5d0:	f000 8268 	beq.w	800aaa4 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a5d4:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a5d8:	2a40      	cmp	r2, #64	; 0x40
 800a5da:	f040 80b4 	bne.w	800a746 <HAL_I2C_EV_IRQHandler+0x34e>
 800a5de:	e0fc      	b.n	800a7da <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a5e0:	0585      	lsls	r5, r0, #22
 800a5e2:	d580      	bpl.n	800a4e6 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a5e4:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a5e8:	685a      	ldr	r2, [r3, #4]
 800a5ea:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a5ee:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a5f0:	960d      	str	r6, [sp, #52]	; 0x34
 800a5f2:	695a      	ldr	r2, [r3, #20]
 800a5f4:	920d      	str	r2, [sp, #52]	; 0x34
 800a5f6:	681a      	ldr	r2, [r3, #0]
 800a5f8:	f042 0201 	orr.w	r2, r2, #1
 800a5fc:	601a      	str	r2, [r3, #0]
 800a5fe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a600:	681a      	ldr	r2, [r3, #0]
 800a602:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a606:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a608:	685a      	ldr	r2, [r3, #4]
 800a60a:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a60c:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a60e:	d521      	bpl.n	800a654 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a610:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a614:	2a22      	cmp	r2, #34	; 0x22
 800a616:	f000 817a 	beq.w	800a90e <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a61a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a61c:	6802      	ldr	r2, [r0, #0]
 800a61e:	6852      	ldr	r2, [r2, #4]
 800a620:	b292      	uxth	r2, r2
 800a622:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a624:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a626:	b292      	uxth	r2, r2
 800a628:	b11a      	cbz	r2, 800a632 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a62a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a62c:	f042 0204 	orr.w	r2, r2, #4
 800a630:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a632:	685a      	ldr	r2, [r3, #4]
 800a634:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a638:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a63a:	f7fe fc2d 	bl	8008e98 <HAL_DMA_GetState>
 800a63e:	2801      	cmp	r0, #1
 800a640:	d008      	beq.n	800a654 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a642:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a644:	4b99      	ldr	r3, [pc, #612]	; (800a8ac <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a646:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a648:	f7fe fc14 	bl	8008e74 <HAL_DMA_Abort_IT>
 800a64c:	b110      	cbz	r0, 800a654 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a64e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a650:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a652:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a654:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a656:	b29b      	uxth	r3, r3
 800a658:	b313      	cbz	r3, 800a6a0 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a65a:	6823      	ldr	r3, [r4, #0]
 800a65c:	695a      	ldr	r2, [r3, #20]
 800a65e:	0752      	lsls	r2, r2, #29
 800a660:	d50a      	bpl.n	800a678 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a662:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a664:	691b      	ldr	r3, [r3, #16]
 800a666:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a668:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a66a:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a66c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a66e:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a670:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a672:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a674:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a676:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a678:	695a      	ldr	r2, [r3, #20]
 800a67a:	0656      	lsls	r6, r2, #25
 800a67c:	d509      	bpl.n	800a692 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a67e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a680:	691b      	ldr	r3, [r3, #16]
 800a682:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a684:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a686:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a688:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a68a:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a68c:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a68e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a690:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a692:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a694:	b29b      	uxth	r3, r3
 800a696:	b11b      	cbz	r3, 800a6a0 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a698:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a69a:	f043 0304 	orr.w	r3, r3, #4
 800a69e:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a6a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a6a2:	2b00      	cmp	r3, #0
 800a6a4:	f040 80dd 	bne.w	800a862 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a6a8:	2d2a      	cmp	r5, #42	; 0x2a
 800a6aa:	f000 8151 	beq.w	800a950 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a6ae:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a6b2:	2b28      	cmp	r3, #40	; 0x28
 800a6b4:	f000 8154 	beq.w	800a960 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a6b8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a6ba:	2b22      	cmp	r3, #34	; 0x22
 800a6bc:	d002      	beq.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a6be:	2d22      	cmp	r5, #34	; 0x22
 800a6c0:	f47f aeca 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a6c4:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a6c6:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a6c8:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a6ca:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a6cc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6d0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a6d4:	f7ff fcf4 	bl	800a0c0 <HAL_I2C_SlaveRxCpltCallback>
 800a6d8:	e6be      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a6da:	060d      	lsls	r5, r1, #24
 800a6dc:	d528      	bpl.n	800a730 <HAL_I2C_EV_IRQHandler+0x338>
 800a6de:	0546      	lsls	r6, r0, #21
 800a6e0:	d526      	bpl.n	800a730 <HAL_I2C_EV_IRQHandler+0x338>
 800a6e2:	074d      	lsls	r5, r1, #29
 800a6e4:	d427      	bmi.n	800a736 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a6e6:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a6ea:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a6ec:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a6ee:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a6f0:	2900      	cmp	r1, #0
 800a6f2:	f43f aeb1 	beq.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a6f6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a6f8:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a6fc:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a6fe:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a700:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a702:	3901      	subs	r1, #1
 800a704:	b289      	uxth	r1, r1
 800a706:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a708:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a70a:	b289      	uxth	r1, r1
 800a70c:	2900      	cmp	r1, #0
 800a70e:	f47f aea3 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a712:	2829      	cmp	r0, #41	; 0x29
 800a714:	f47f aea0 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a718:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a71a:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a71c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a720:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a722:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a724:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a726:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a72a:	f7ff fcc7 	bl	800a0bc <HAL_I2C_SlaveTxCpltCallback>
 800a72e:	e693      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a730:	0749      	lsls	r1, r1, #29
 800a732:	f57f ae91 	bpl.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a736:	0582      	lsls	r2, r0, #22
 800a738:	f57f ae8e 	bpl.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a73c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a73e:	b292      	uxth	r2, r2
 800a740:	2a00      	cmp	r2, #0
 800a742:	f43f ae89 	beq.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a746:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a748:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a74c:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a74e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a750:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a752:	3b01      	subs	r3, #1
 800a754:	b29b      	uxth	r3, r3
 800a756:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a758:	e67e      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a75a:	074a      	lsls	r2, r1, #29
 800a75c:	f57f ae7c 	bpl.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a760:	0586      	lsls	r6, r0, #22
 800a762:	f57f ae79 	bpl.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a766:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a768:	b292      	uxth	r2, r2
 800a76a:	2a00      	cmp	r2, #0
 800a76c:	f43f ae74 	beq.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a770:	e01b      	b.n	800a7aa <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a772:	685a      	ldr	r2, [r3, #4]
 800a774:	0512      	lsls	r2, r2, #20
 800a776:	f53f ae6f 	bmi.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a77a:	064e      	lsls	r6, r1, #25
 800a77c:	d433      	bmi.n	800a7e6 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a77e:	0749      	lsls	r1, r1, #29
 800a780:	f57f ae6a 	bpl.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a784:	0582      	lsls	r2, r0, #22
 800a786:	f57f ae67 	bpl.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a78a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a78c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a78e:	b292      	uxth	r2, r2
 800a790:	2a04      	cmp	r2, #4
 800a792:	f000 8113 	beq.w	800a9bc <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a796:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a798:	b292      	uxth	r2, r2
 800a79a:	2a03      	cmp	r2, #3
 800a79c:	f000 8153 	beq.w	800aa46 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a7a0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a7a2:	b292      	uxth	r2, r2
 800a7a4:	2a02      	cmp	r2, #2
 800a7a6:	f000 8182 	beq.w	800aaae <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7aa:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a7ac:	691b      	ldr	r3, [r3, #16]
 800a7ae:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a7b0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a7b2:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a7b4:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a7b6:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a7b8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a7ba:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a7bc:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a7be:	e64b      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7c0:	074d      	lsls	r5, r1, #29
 800a7c2:	f57f ae49 	bpl.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a7c6:	0581      	lsls	r1, r0, #22
 800a7c8:	f57f ae46 	bpl.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a7cc:	2a21      	cmp	r2, #33	; 0x21
 800a7ce:	f000 80fd 	beq.w	800a9cc <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a7d2:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a7d6:	f47f ae3f 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a7da:	4620      	mov	r0, r4
}
 800a7dc:	b00e      	add	sp, #56	; 0x38
 800a7de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a7e2:	f7ff bc75 	b.w	800a0d0 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a7e6:	0545      	lsls	r5, r0, #21
 800a7e8:	d5c9      	bpl.n	800a77e <HAL_I2C_EV_IRQHandler+0x386>
 800a7ea:	f011 0104 	ands.w	r1, r1, #4
 800a7ee:	d1c9      	bne.n	800a784 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a7f0:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a7f4:	2a22      	cmp	r2, #34	; 0x22
 800a7f6:	f47f ae2f 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a7fa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a7fc:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a7fe:	2a03      	cmp	r2, #3
 800a800:	f240 81ec 	bls.w	800abdc <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a804:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a806:	691b      	ldr	r3, [r3, #16]
 800a808:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a80a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a80c:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a80e:	3b01      	subs	r3, #1
 800a810:	b29b      	uxth	r3, r3
 800a812:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a814:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a816:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a818:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a81a:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a81c:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a81e:	f47f ae1b 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a822:	6822      	ldr	r2, [r4, #0]
 800a824:	6853      	ldr	r3, [r2, #4]
 800a826:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a82a:	6053      	str	r3, [r2, #4]
 800a82c:	e614      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a82e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a832:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a834:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a836:	bf16      	itet	ne
 800a838:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a83c:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a840:	b2d2      	uxtbne	r2, r2
 800a842:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a844:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a846:	b11a      	cbz	r2, 800a850 <HAL_I2C_EV_IRQHandler+0x458>
 800a848:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a84a:	2a00      	cmp	r2, #0
 800a84c:	f47f ae21 	bne.w	800a492 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a850:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a852:	2a00      	cmp	r2, #0
 800a854:	f43f ae00 	beq.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a858:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a85a:	2a00      	cmp	r2, #0
 800a85c:	f47f ae19 	bne.w	800a492 <HAL_I2C_EV_IRQHandler+0x9a>
 800a860:	e5fa      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a862:	4620      	mov	r0, r4
}
 800a864:	b00e      	add	sp, #56	; 0x38
 800a866:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a86a:	f7ff bd0f 	b.w	800a28c <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a86e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a870:	bb52      	cbnz	r2, 800a8c8 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a872:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a874:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a878:	611a      	str	r2, [r3, #16]
 800a87a:	e5ed      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a87c:	2201      	movs	r2, #1
 800a87e:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a880:	e619      	b.n	800a4b6 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a882:	685a      	ldr	r2, [r3, #4]
 800a884:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a888:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a88a:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a88c:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a890:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a894:	bf54      	ite	pl
 800a896:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a898:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a89a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a89e:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a8a2:	4620      	mov	r0, r4
 800a8a4:	f7ff fc0e 	bl	800a0c4 <HAL_I2C_AddrCallback>
 800a8a8:	e5d6      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800a8aa:	bf00      	nop
 800a8ac:	0800a199 	.word	0x0800a199
      else if (hi2c->EventCount == 1U)
 800a8b0:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a8b2:	2a01      	cmp	r2, #1
 800a8b4:	f47f add0 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a8b8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a8ba:	11d2      	asrs	r2, r2, #7
 800a8bc:	f002 0206 	and.w	r2, r2, #6
 800a8c0:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a8c4:	611a      	str	r2, [r3, #16]
 800a8c6:	e5c7      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a8c8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a8ca:	f042 0201 	orr.w	r2, r2, #1
 800a8ce:	b2d2      	uxtb	r2, r2
 800a8d0:	611a      	str	r2, [r3, #16]
 800a8d2:	e5c1      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a8d4:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a8d6:	b911      	cbnz	r1, 800a8de <HAL_I2C_EV_IRQHandler+0x4e6>
 800a8d8:	2a40      	cmp	r2, #64	; 0x40
 800a8da:	f000 809b 	beq.w	800aa14 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a8de:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a8e0:	b922      	cbnz	r2, 800a8ec <HAL_I2C_EV_IRQHandler+0x4f4>
 800a8e2:	6921      	ldr	r1, [r4, #16]
 800a8e4:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a8e8:	f000 809f 	beq.w	800aa2a <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a8ec:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a8ee:	b292      	uxth	r2, r2
 800a8f0:	2a00      	cmp	r2, #0
 800a8f2:	d142      	bne.n	800a97a <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a8f4:	9203      	str	r2, [sp, #12]
 800a8f6:	695a      	ldr	r2, [r3, #20]
 800a8f8:	9203      	str	r2, [sp, #12]
 800a8fa:	699a      	ldr	r2, [r3, #24]
 800a8fc:	9203      	str	r2, [sp, #12]
 800a8fe:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a900:	681a      	ldr	r2, [r3, #0]
 800a902:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a906:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a908:	2300      	movs	r3, #0
 800a90a:	6523      	str	r3, [r4, #80]	; 0x50
 800a90c:	e5a4      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a90e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a910:	6802      	ldr	r2, [r0, #0]
 800a912:	6852      	ldr	r2, [r2, #4]
 800a914:	b292      	uxth	r2, r2
 800a916:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a918:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a91a:	b292      	uxth	r2, r2
 800a91c:	b11a      	cbz	r2, 800a926 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a91e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a920:	f042 0204 	orr.w	r2, r2, #4
 800a924:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a926:	685a      	ldr	r2, [r3, #4]
 800a928:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a92c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a92e:	f7fe fab3 	bl	8008e98 <HAL_DMA_GetState>
 800a932:	2801      	cmp	r0, #1
 800a934:	f43f ae8e 	beq.w	800a654 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a938:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a93a:	4b98      	ldr	r3, [pc, #608]	; (800ab9c <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a93c:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a93e:	f7fe fa99 	bl	8008e74 <HAL_DMA_Abort_IT>
 800a942:	2800      	cmp	r0, #0
 800a944:	f43f ae86 	beq.w	800a654 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a948:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a94a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a94c:	4798      	blx	r3
 800a94e:	e681      	b.n	800a654 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a950:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a952:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a954:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a956:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a95a:	f7ff fbb1 	bl	800a0c0 <HAL_I2C_SlaveRxCpltCallback>
 800a95e:	e6a6      	b.n	800a6ae <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a960:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a962:	498f      	ldr	r1, [pc, #572]	; (800aba0 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800a964:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800a966:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a968:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800a96a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a96c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a970:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800a974:	f7ff fba8 	bl	800a0c8 <HAL_I2C_ListenCpltCallback>
 800a978:	e56e      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800a97a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a97c:	b292      	uxth	r2, r2
 800a97e:	2a01      	cmp	r2, #1
 800a980:	d070      	beq.n	800aa64 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800a982:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a984:	b292      	uxth	r2, r2
 800a986:	2a02      	cmp	r2, #2
 800a988:	f000 80d6 	beq.w	800ab38 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a98c:	681a      	ldr	r2, [r3, #0]
 800a98e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a992:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a994:	685a      	ldr	r2, [r3, #4]
 800a996:	0511      	lsls	r1, r2, #20
 800a998:	d508      	bpl.n	800a9ac <HAL_I2C_EV_IRQHandler+0x5b4>
 800a99a:	2820      	cmp	r0, #32
 800a99c:	f200 80f8 	bhi.w	800ab90 <HAL_I2C_EV_IRQHandler+0x798>
 800a9a0:	2807      	cmp	r0, #7
 800a9a2:	f200 80ea 	bhi.w	800ab7a <HAL_I2C_EV_IRQHandler+0x782>
 800a9a6:	2801      	cmp	r0, #1
 800a9a8:	f000 80ed 	beq.w	800ab86 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9ac:	2200      	movs	r2, #0
 800a9ae:	9209      	str	r2, [sp, #36]	; 0x24
 800a9b0:	695a      	ldr	r2, [r3, #20]
 800a9b2:	9209      	str	r2, [sp, #36]	; 0x24
 800a9b4:	699b      	ldr	r3, [r3, #24]
 800a9b6:	9309      	str	r3, [sp, #36]	; 0x24
 800a9b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a9ba:	e7a5      	b.n	800a908 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9bc:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9be:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9c0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9c4:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9c6:	691b      	ldr	r3, [r3, #16]
 800a9c8:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800a9ca:	e6f1      	b.n	800a7b0 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a9cc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a9ce:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a9d2:	2a21      	cmp	r2, #33	; 0x21
 800a9d4:	f47f ad40 	bne.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800a9d8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9da:	b292      	uxth	r2, r2
 800a9dc:	2a00      	cmp	r2, #0
 800a9de:	f47f aeb2 	bne.w	800a746 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a9e2:	2908      	cmp	r1, #8
 800a9e4:	f000 80e2 	beq.w	800abac <HAL_I2C_EV_IRQHandler+0x7b4>
 800a9e8:	2920      	cmp	r1, #32
 800a9ea:	f000 80df 	beq.w	800abac <HAL_I2C_EV_IRQHandler+0x7b4>
 800a9ee:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800a9f2:	f000 80db 	beq.w	800abac <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a9f6:	6859      	ldr	r1, [r3, #4]
 800a9f8:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a9fc:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a9fe:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800aa00:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aa02:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa04:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800aa08:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800aa0a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800aa0e:	f7ff fb51 	bl	800a0b4 <HAL_I2C_MasterTxCpltCallback>
 800aa12:	e521      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa14:	9101      	str	r1, [sp, #4]
 800aa16:	695a      	ldr	r2, [r3, #20]
 800aa18:	9201      	str	r2, [sp, #4]
 800aa1a:	699b      	ldr	r3, [r3, #24]
 800aa1c:	9301      	str	r3, [sp, #4]
 800aa1e:	9b01      	ldr	r3, [sp, #4]
 800aa20:	e51a      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800aa22:	2a21      	cmp	r2, #33	; 0x21
 800aa24:	f43f add1 	beq.w	800a5ca <HAL_I2C_EV_IRQHandler+0x1d2>
 800aa28:	e5c9      	b.n	800a5be <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa2a:	9202      	str	r2, [sp, #8]
 800aa2c:	695a      	ldr	r2, [r3, #20]
 800aa2e:	9202      	str	r2, [sp, #8]
 800aa30:	699a      	ldr	r2, [r3, #24]
 800aa32:	9202      	str	r2, [sp, #8]
 800aa34:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aa36:	681a      	ldr	r2, [r3, #0]
 800aa38:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800aa3c:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800aa3e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800aa40:	3301      	adds	r3, #1
 800aa42:	6523      	str	r3, [r4, #80]	; 0x50
 800aa44:	e508      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa46:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aa48:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa4a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa4e:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aa50:	f43f aeab 	beq.w	800a7aa <HAL_I2C_EV_IRQHandler+0x3b2>
 800aa54:	2902      	cmp	r1, #2
 800aa56:	f43f aea8 	beq.w	800a7aa <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa5a:	681a      	ldr	r2, [r3, #0]
 800aa5c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa60:	601a      	str	r2, [r3, #0]
 800aa62:	e6a2      	b.n	800a7aa <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800aa64:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aa68:	f000 811b 	beq.w	800aca2 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800aa6c:	2808      	cmp	r0, #8
 800aa6e:	f000 8108 	beq.w	800ac82 <HAL_I2C_EV_IRQHandler+0x88a>
 800aa72:	2820      	cmp	r0, #32
 800aa74:	f000 8105 	beq.w	800ac82 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800aa78:	2d12      	cmp	r5, #18
 800aa7a:	f000 80ff 	beq.w	800ac7c <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800aa7e:	2810      	cmp	r0, #16
 800aa80:	d804      	bhi.n	800aa8c <HAL_I2C_EV_IRQHandler+0x694>
 800aa82:	4a48      	ldr	r2, [pc, #288]	; (800aba4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800aa84:	40c2      	lsrs	r2, r0
 800aa86:	07d1      	lsls	r1, r2, #31
 800aa88:	f100 814c 	bmi.w	800ad24 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa8c:	681a      	ldr	r2, [r3, #0]
 800aa8e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa92:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa94:	2200      	movs	r2, #0
 800aa96:	9206      	str	r2, [sp, #24]
 800aa98:	695a      	ldr	r2, [r3, #20]
 800aa9a:	9206      	str	r2, [sp, #24]
 800aa9c:	699b      	ldr	r3, [r3, #24]
 800aa9e:	9306      	str	r3, [sp, #24]
 800aaa0:	9b06      	ldr	r3, [sp, #24]
 800aaa2:	e731      	b.n	800a908 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aaa4:	685a      	ldr	r2, [r3, #4]
 800aaa6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aaaa:	605a      	str	r2, [r3, #4]
 800aaac:	e4d4      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800aaae:	3901      	subs	r1, #1
 800aab0:	290f      	cmp	r1, #15
 800aab2:	d809      	bhi.n	800aac8 <HAL_I2C_EV_IRQHandler+0x6d0>
 800aab4:	e8df f001 	tbb	[pc, r1]
 800aab8:	3608363b 	.word	0x3608363b
 800aabc:	08080808 	.word	0x08080808
 800aac0:	08080808 	.word	0x08080808
 800aac4:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aac8:	681a      	ldr	r2, [r3, #0]
 800aaca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aace:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aad0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aad2:	691b      	ldr	r3, [r3, #16]
 800aad4:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800aad6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800aad8:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aada:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800aadc:	3b01      	subs	r3, #1
 800aade:	b29b      	uxth	r3, r3
 800aae0:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aae2:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800aae4:	1c51      	adds	r1, r2, #1
 800aae6:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aae8:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800aaea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aaec:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800aaee:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aaf0:	3b01      	subs	r3, #1
 800aaf2:	b29b      	uxth	r3, r3
 800aaf4:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aaf6:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800aaf8:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aafa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800aafe:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800ab00:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ab02:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800ab04:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ab08:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800ab0c:	2b40      	cmp	r3, #64	; 0x40
 800ab0e:	f000 80f5 	beq.w	800acfc <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab12:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ab14:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab16:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ab1a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ab1c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ab1e:	f7ff facb 	bl	800a0b8 <HAL_I2C_MasterRxCpltCallback>
 800ab22:	e499      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab24:	681a      	ldr	r2, [r3, #0]
 800ab26:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ab2a:	601a      	str	r2, [r3, #0]
 800ab2c:	e7d0      	b.n	800aad0 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab2e:	681a      	ldr	r2, [r3, #0]
 800ab30:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab34:	601a      	str	r2, [r3, #0]
 800ab36:	e7cb      	b.n	800aad0 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ab38:	2810      	cmp	r0, #16
 800ab3a:	d804      	bhi.n	800ab46 <HAL_I2C_EV_IRQHandler+0x74e>
 800ab3c:	4a19      	ldr	r2, [pc, #100]	; (800aba4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800ab3e:	40c2      	lsrs	r2, r0
 800ab40:	07d2      	lsls	r2, r2, #31
 800ab42:	f100 80c2 	bmi.w	800acca <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab46:	681a      	ldr	r2, [r3, #0]
 800ab48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab4c:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ab4e:	681a      	ldr	r2, [r3, #0]
 800ab50:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ab54:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ab56:	685a      	ldr	r2, [r3, #4]
 800ab58:	0516      	lsls	r6, r2, #20
 800ab5a:	d506      	bpl.n	800ab6a <HAL_I2C_EV_IRQHandler+0x772>
 800ab5c:	2820      	cmp	r0, #32
 800ab5e:	f240 80bc 	bls.w	800acda <HAL_I2C_EV_IRQHandler+0x8e2>
 800ab62:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ab66:	f000 80bd 	beq.w	800ace4 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab6a:	2200      	movs	r2, #0
 800ab6c:	9208      	str	r2, [sp, #32]
 800ab6e:	695a      	ldr	r2, [r3, #20]
 800ab70:	9208      	str	r2, [sp, #32]
 800ab72:	699b      	ldr	r3, [r3, #24]
 800ab74:	9308      	str	r3, [sp, #32]
 800ab76:	9b08      	ldr	r3, [sp, #32]
 800ab78:	e6c6      	b.n	800a908 <HAL_I2C_EV_IRQHandler+0x510>
 800ab7a:	4a0b      	ldr	r2, [pc, #44]	; (800aba8 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800ab7c:	3808      	subs	r0, #8
 800ab7e:	40c2      	lsrs	r2, r0
 800ab80:	07d2      	lsls	r2, r2, #31
 800ab82:	f57f af13 	bpl.w	800a9ac <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ab86:	685a      	ldr	r2, [r3, #4]
 800ab88:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800ab8c:	605a      	str	r2, [r3, #4]
 800ab8e:	e70d      	b.n	800a9ac <HAL_I2C_EV_IRQHandler+0x5b4>
 800ab90:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ab94:	f47f af0a 	bne.w	800a9ac <HAL_I2C_EV_IRQHandler+0x5b4>
 800ab98:	e7f5      	b.n	800ab86 <HAL_I2C_EV_IRQHandler+0x78e>
 800ab9a:	bf00      	nop
 800ab9c:	0800a199 	.word	0x0800a199
 800aba0:	ffff0000 	.word	0xffff0000
 800aba4:	00010014 	.word	0x00010014
 800aba8:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800abac:	6859      	ldr	r1, [r3, #4]
 800abae:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800abb2:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abb4:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800abb6:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800abb8:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abba:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800abbe:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800abc0:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800abc2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abc6:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800abca:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abce:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800abd0:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abd2:	f47f af1c 	bne.w	800aa0e <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800abd6:	f7ff fa79 	bl	800a0cc <HAL_I2C_MemTxCpltCallback>
 800abda:	e43d      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800abdc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800abde:	2802      	cmp	r0, #2
 800abe0:	f43f af60 	beq.w	800aaa4 <HAL_I2C_EV_IRQHandler+0x6ac>
 800abe4:	2a01      	cmp	r2, #1
 800abe6:	f63f af5d 	bhi.w	800aaa4 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800abea:	4a62      	ldr	r2, [pc, #392]	; (800ad74 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800abec:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800abee:	6812      	ldr	r2, [r2, #0]
 800abf0:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800abf4:	fbb2 f2f0 	udiv	r2, r2, r0
 800abf8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800abfc:	920b      	str	r2, [sp, #44]	; 0x2c
 800abfe:	e004      	b.n	800ac0a <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ac00:	681a      	ldr	r2, [r3, #0]
 800ac02:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800ac06:	f000 8092 	beq.w	800ad2e <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800ac0a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ac0c:	3a01      	subs	r2, #1
 800ac0e:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800ac10:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ac12:	2900      	cmp	r1, #0
 800ac14:	d1f4      	bne.n	800ac00 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ac16:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac18:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ac1a:	f042 0220 	orr.w	r2, r2, #32
 800ac1e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac20:	685a      	ldr	r2, [r3, #4]
 800ac22:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ac26:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac28:	691b      	ldr	r3, [r3, #16]
 800ac2a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ac2c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ac2e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ac30:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800ac32:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800ac34:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800ac36:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800ac38:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ac3a:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800ac3c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800ac40:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac42:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800ac46:	f7ff faa3 	bl	800a190 <HAL_I2C_ErrorCallback>
 800ac4a:	e405      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ac4c:	2d08      	cmp	r5, #8
 800ac4e:	d0ad      	beq.n	800abac <HAL_I2C_EV_IRQHandler+0x7b4>
 800ac50:	2d20      	cmp	r5, #32
 800ac52:	d0ab      	beq.n	800abac <HAL_I2C_EV_IRQHandler+0x7b4>
 800ac54:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800ac58:	d0a8      	beq.n	800abac <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac5a:	685a      	ldr	r2, [r3, #4]
 800ac5c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ac60:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ac62:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac64:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ac66:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ac68:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac6a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ac6e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800ac70:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ac74:	f7ff fa1e 	bl	800a0b4 <HAL_I2C_MasterTxCpltCallback>
 800ac78:	f7ff bbee 	b.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ac7c:	2801      	cmp	r0, #1
 800ac7e:	f43f af05 	beq.w	800aa8c <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac82:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac84:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac86:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ac8a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac8c:	9107      	str	r1, [sp, #28]
 800ac8e:	695a      	ldr	r2, [r3, #20]
 800ac90:	9207      	str	r2, [sp, #28]
 800ac92:	699a      	ldr	r2, [r3, #24]
 800ac94:	9207      	str	r2, [sp, #28]
 800ac96:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac98:	681a      	ldr	r2, [r3, #0]
 800ac9a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac9e:	601a      	str	r2, [r3, #0]
 800aca0:	e632      	b.n	800a908 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aca2:	681a      	ldr	r2, [r3, #0]
 800aca4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aca8:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800acaa:	685a      	ldr	r2, [r3, #4]
 800acac:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800acb0:	d02d      	beq.n	800ad0e <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acb2:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acb4:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acb6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acba:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acbc:	9104      	str	r1, [sp, #16]
 800acbe:	695a      	ldr	r2, [r3, #20]
 800acc0:	9204      	str	r2, [sp, #16]
 800acc2:	699b      	ldr	r3, [r3, #24]
 800acc4:	9304      	str	r3, [sp, #16]
 800acc6:	9b04      	ldr	r3, [sp, #16]
 800acc8:	e61e      	b.n	800a908 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acca:	681a      	ldr	r2, [r3, #0]
 800accc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800acd0:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800acd2:	685a      	ldr	r2, [r3, #4]
 800acd4:	0515      	lsls	r5, r2, #20
 800acd6:	f57f af48 	bpl.w	800ab6a <HAL_I2C_EV_IRQHandler+0x772>
 800acda:	2807      	cmp	r0, #7
 800acdc:	d807      	bhi.n	800acee <HAL_I2C_EV_IRQHandler+0x8f6>
 800acde:	2801      	cmp	r0, #1
 800ace0:	f47f af43 	bne.w	800ab6a <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ace4:	685a      	ldr	r2, [r3, #4]
 800ace6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800acea:	605a      	str	r2, [r3, #4]
 800acec:	e73d      	b.n	800ab6a <HAL_I2C_EV_IRQHandler+0x772>
 800acee:	4a22      	ldr	r2, [pc, #136]	; (800ad78 <HAL_I2C_EV_IRQHandler+0x980>)
 800acf0:	3808      	subs	r0, #8
 800acf2:	40c2      	lsrs	r2, r0
 800acf4:	07d0      	lsls	r0, r2, #31
 800acf6:	f57f af38 	bpl.w	800ab6a <HAL_I2C_EV_IRQHandler+0x772>
 800acfa:	e7f3      	b.n	800ace4 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800acfc:	2300      	movs	r3, #0
 800acfe:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ad02:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad04:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ad06:	f7ff fa41 	bl	800a18c <HAL_I2C_MemRxCpltCallback>
 800ad0a:	f7ff bba5 	b.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad0e:	9205      	str	r2, [sp, #20]
 800ad10:	695a      	ldr	r2, [r3, #20]
 800ad12:	9205      	str	r2, [sp, #20]
 800ad14:	699a      	ldr	r2, [r3, #24]
 800ad16:	9205      	str	r2, [sp, #20]
 800ad18:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad1a:	681a      	ldr	r2, [r3, #0]
 800ad1c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ad20:	601a      	str	r2, [r3, #0]
 800ad22:	e5f1      	b.n	800a908 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad24:	681a      	ldr	r2, [r3, #0]
 800ad26:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ad2a:	601a      	str	r2, [r3, #0]
 800ad2c:	e6b2      	b.n	800aa94 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad2e:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad30:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad32:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ad36:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad38:	6859      	ldr	r1, [r3, #4]
 800ad3a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ad3e:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad40:	691b      	ldr	r3, [r3, #16]
 800ad42:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ad44:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ad46:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800ad48:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800ad4a:	b29b      	uxth	r3, r3
 800ad4c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800ad4e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800ad52:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ad54:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800ad58:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ad5a:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800ad5c:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ad5e:	f47f aed9 	bne.w	800ab14 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad62:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ad66:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800ad68:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ad6a:	f7ff fa0f 	bl	800a18c <HAL_I2C_MemRxCpltCallback>
 800ad6e:	f7ff bb73 	b.w	800a458 <HAL_I2C_EV_IRQHandler+0x60>
 800ad72:	bf00      	nop
 800ad74:	20000094 	.word	0x20000094
 800ad78:	01000101 	.word	0x01000101

0800ad7c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ad7c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ad80:	2a20      	cmp	r2, #32
{
 800ad82:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ad84:	fa5f fc82 	uxtb.w	ip, r2
 800ad88:	d001      	beq.n	800ad8e <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ad8a:	2002      	movs	r0, #2
  }
}
 800ad8c:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800ad8e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ad90:	2024      	movs	r0, #36	; 0x24
 800ad92:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ad96:	6810      	ldr	r0, [r2, #0]
 800ad98:	f020 0001 	bic.w	r0, r0, #1
 800ad9c:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800ad9e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ada0:	f020 0010 	bic.w	r0, r0, #16
 800ada4:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800ada6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ada8:	4301      	orrs	r1, r0
 800adaa:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800adac:	6811      	ldr	r1, [r2, #0]
 800adae:	f041 0101 	orr.w	r1, r1, #1
 800adb2:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800adb4:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800adb6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800adba:	4770      	bx	lr

0800adbc <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800adbc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800adc0:	2a20      	cmp	r2, #32
 800adc2:	d001      	beq.n	800adc8 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800adc4:	2002      	movs	r0, #2
  }
}
 800adc6:	4770      	bx	lr
{
 800adc8:	b410      	push	{r4}
 800adca:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800adce:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800add0:	2224      	movs	r2, #36	; 0x24
 800add2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800add6:	6822      	ldr	r2, [r4, #0]
 800add8:	f022 0201 	bic.w	r2, r2, #1
 800addc:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800adde:	4603      	mov	r3, r0
 800ade0:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800ade2:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800ade6:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ade8:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800adea:	b289      	uxth	r1, r1
 800adec:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800adee:	6822      	ldr	r2, [r4, #0]
 800adf0:	f042 0201 	orr.w	r2, r2, #1
 800adf4:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800adf6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800adfa:	2000      	movs	r0, #0
}
 800adfc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ae00:	4770      	bx	lr
 800ae02:	bf00      	nop

0800ae04 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ae04:	2800      	cmp	r0, #0
 800ae06:	d069      	beq.n	800aedc <HAL_LTDC_Init+0xd8>
{
 800ae08:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ae0a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ae0e:	4604      	mov	r4, r0
 800ae10:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ae14:	2b00      	cmp	r3, #0
 800ae16:	d05c      	beq.n	800aed2 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ae18:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ae1a:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ae1c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ae20:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ae24:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ae26:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ae28:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ae2c:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ae30:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ae32:	6999      	ldr	r1, [r3, #24]
 800ae34:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ae36:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ae38:	430a      	orrs	r2, r1
 800ae3a:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ae3c:	689a      	ldr	r2, [r3, #8]
 800ae3e:	4928      	ldr	r1, [pc, #160]	; (800aee0 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ae40:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ae42:	400a      	ands	r2, r1
 800ae44:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ae46:	689a      	ldr	r2, [r3, #8]
 800ae48:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ae4c:	69a0      	ldr	r0, [r4, #24]
 800ae4e:	4302      	orrs	r2, r0
 800ae50:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ae52:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ae54:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ae56:	400a      	ands	r2, r1
 800ae58:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ae5a:	68da      	ldr	r2, [r3, #12]
 800ae5c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ae60:	6a20      	ldr	r0, [r4, #32]
 800ae62:	4302      	orrs	r2, r0
 800ae64:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ae66:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ae68:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ae6a:	400a      	ands	r2, r1
 800ae6c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800ae6e:	691a      	ldr	r2, [r3, #16]
 800ae70:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ae74:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ae76:	4302      	orrs	r2, r0
 800ae78:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ae7a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800ae7c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ae7e:	400a      	ands	r2, r1
 800ae80:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800ae82:	695a      	ldr	r2, [r3, #20]
 800ae84:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ae86:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ae8a:	430a      	orrs	r2, r1
 800ae8c:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ae8e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800ae90:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800ae94:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ae98:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800ae9c:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800ae9e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800aea0:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800aea4:	432a      	orrs	r2, r5
 800aea6:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800aeaa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800aeae:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800aeb0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aeb2:	f042 0206 	orr.w	r2, r2, #6
 800aeb6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800aeb8:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800aeba:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800aebe:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800aec0:	ea42 020c 	orr.w	r2, r2, ip
 800aec4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800aec6:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800aeca:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800aece:	4608      	mov	r0, r1
}
 800aed0:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800aed2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800aed6:	f7f6 fbe7 	bl	80016a8 <HAL_LTDC_MspInit>
 800aeda:	e79d      	b.n	800ae18 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800aedc:	2001      	movs	r0, #1
}
 800aede:	4770      	bx	lr
 800aee0:	f000f800 	.word	0xf000f800

0800aee4 <HAL_LTDC_ErrorCallback>:
 800aee4:	4770      	bx	lr
 800aee6:	bf00      	nop

0800aee8 <HAL_LTDC_ReloadEventCallback>:
 800aee8:	4770      	bx	lr
 800aeea:	bf00      	nop

0800aeec <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800aeec:	6803      	ldr	r3, [r0, #0]
{
 800aeee:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800aef0:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800aef2:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800aef4:	076a      	lsls	r2, r5, #29
{
 800aef6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800aef8:	d501      	bpl.n	800aefe <HAL_LTDC_IRQHandler+0x12>
 800aefa:	0771      	lsls	r1, r6, #29
 800aefc:	d41d      	bmi.n	800af3a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800aefe:	07aa      	lsls	r2, r5, #30
 800af00:	d501      	bpl.n	800af06 <HAL_LTDC_IRQHandler+0x1a>
 800af02:	07b3      	lsls	r3, r6, #30
 800af04:	d42d      	bmi.n	800af62 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800af06:	07e8      	lsls	r0, r5, #31
 800af08:	d501      	bpl.n	800af0e <HAL_LTDC_IRQHandler+0x22>
 800af0a:	07f1      	lsls	r1, r6, #31
 800af0c:	d440      	bmi.n	800af90 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800af0e:	072a      	lsls	r2, r5, #28
 800af10:	d501      	bpl.n	800af16 <HAL_LTDC_IRQHandler+0x2a>
 800af12:	0733      	lsls	r3, r6, #28
 800af14:	d400      	bmi.n	800af18 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800af16:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800af18:	6823      	ldr	r3, [r4, #0]
 800af1a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800af1c:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800af1e:	f022 0208 	bic.w	r2, r2, #8
 800af22:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800af24:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800af26:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800af28:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800af2a:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800af2e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800af32:	4620      	mov	r0, r4
 800af34:	f7ff ffd8 	bl	800aee8 <HAL_LTDC_ReloadEventCallback>
}
 800af38:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800af3a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800af3c:	f022 0204 	bic.w	r2, r2, #4
 800af40:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800af42:	2204      	movs	r2, #4
 800af44:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800af46:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800af4a:	f043 0301 	orr.w	r3, r3, #1
 800af4e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800af52:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800af54:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800af58:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800af5c:	f7ff ffc2 	bl	800aee4 <HAL_LTDC_ErrorCallback>
 800af60:	e7cd      	b.n	800aefe <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800af62:	6823      	ldr	r3, [r4, #0]
 800af64:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800af66:	f022 0202 	bic.w	r2, r2, #2
 800af6a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800af6c:	2202      	movs	r2, #2
 800af6e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800af70:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800af74:	f043 0302 	orr.w	r3, r3, #2
 800af78:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800af7c:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800af7e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800af80:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800af84:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800af88:	4620      	mov	r0, r4
 800af8a:	f7ff ffab 	bl	800aee4 <HAL_LTDC_ErrorCallback>
 800af8e:	e7ba      	b.n	800af06 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800af90:	6823      	ldr	r3, [r4, #0]
 800af92:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800af94:	f022 0201 	bic.w	r2, r2, #1
 800af98:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800af9a:	2201      	movs	r2, #1
 800af9c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800af9e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800afa0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800afa4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800afa8:	4620      	mov	r0, r4
 800afaa:	f7f7 fb77 	bl	800269c <HAL_LTDC_LineEventCallback>
 800afae:	e7ae      	b.n	800af0e <HAL_LTDC_IRQHandler+0x22>

0800afb0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800afb0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800afb4:	2b01      	cmp	r3, #1
 800afb6:	f000 80c2 	beq.w	800b13e <HAL_LTDC_ConfigLayer+0x18e>
{
 800afba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800afbe:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800afc2:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800afc6:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800afca:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800afcc:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800afce:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800afd2:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800afd6:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800afda:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800afde:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800afe2:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800afe6:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800afe8:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800afec:	460c      	mov	r4, r1
 800afee:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aff0:	9301      	str	r3, [sp, #4]
 800aff2:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aff4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800aff6:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800affa:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800affe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b000:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b002:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b006:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b008:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b00c:	6823      	ldr	r3, [r4, #0]
 800b00e:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b012:	9b01      	ldr	r3, [sp, #4]
 800b014:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b018:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b01c:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b01e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b020:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b024:	1c51      	adds	r1, r2, #1
 800b026:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b02a:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b02c:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b02e:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b032:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b036:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b03a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b03e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b042:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b046:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b04a:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b04c:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b04e:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b052:	3301      	adds	r3, #1
 800b054:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b058:	4403      	add	r3, r0
 800b05a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b05e:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b062:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b066:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b068:	f023 0307 	bic.w	r3, r3, #7
 800b06c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b070:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b074:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b078:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b07c:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b080:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b084:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b088:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b08c:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b090:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b094:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b098:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b09c:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b0a0:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b0a4:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b0a8:	696b      	ldr	r3, [r5, #20]
 800b0aa:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b0ae:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b0b2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b0b6:	f023 0307 	bic.w	r3, r3, #7
 800b0ba:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b0be:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b0c2:	4303      	orrs	r3, r0
 800b0c4:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b0c8:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b0cc:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b0ce:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b0d2:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b0d6:	bb69      	cbnz	r1, 800b134 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b0d8:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b0da:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b0dc:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b0de:	fb03 f707 	mul.w	r7, r3, r7
 800b0e2:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b0e4:	fb02 f303 	mul.w	r3, r2, r3
 800b0e8:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b0ec:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b0f0:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b0f2:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b0f6:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b0fa:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b0fe:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b102:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b106:	f023 0307 	bic.w	r3, r3, #7
 800b10a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b10e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b112:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b116:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b118:	4313      	orrs	r3, r2
 800b11a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b11e:	2300      	movs	r3, #0
  return HAL_OK;
 800b120:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b122:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b126:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b12a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b12e:	b003      	add	sp, #12
 800b130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b134:	3901      	subs	r1, #1
 800b136:	2906      	cmp	r1, #6
 800b138:	d903      	bls.n	800b142 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b13a:	2301      	movs	r3, #1
 800b13c:	e7cd      	b.n	800b0da <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b13e:	2002      	movs	r0, #2
}
 800b140:	4770      	bx	lr
 800b142:	4b02      	ldr	r3, [pc, #8]	; (800b14c <HAL_LTDC_ConfigLayer+0x19c>)
 800b144:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b148:	e7c7      	b.n	800b0da <HAL_LTDC_ConfigLayer+0x12a>
 800b14a:	bf00      	nop
 800b14c:	0802e4d8 	.word	0x0802e4d8

0800b150 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b150:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b154:	2b01      	cmp	r3, #1
 800b156:	d019      	beq.n	800b18c <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b158:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b15a:	2302      	movs	r3, #2
{
 800b15c:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b15e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b162:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b164:	4c0a      	ldr	r4, [pc, #40]	; (800b190 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b166:	f023 0301 	bic.w	r3, r3, #1
 800b16a:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b16c:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b16e:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b170:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b172:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b176:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b17a:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b17c:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b180:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b184:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b188:	4618      	mov	r0, r3
}
 800b18a:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b18c:	2002      	movs	r0, #2
}
 800b18e:	4770      	bx	lr
 800b190:	40016800 	.word	0x40016800

0800b194 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b194:	2800      	cmp	r0, #0
 800b196:	f000 81a2 	beq.w	800b4de <HAL_RCC_OscConfig+0x34a>
{
 800b19a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b19e:	6803      	ldr	r3, [r0, #0]
 800b1a0:	07dd      	lsls	r5, r3, #31
{
 800b1a2:	b082      	sub	sp, #8
 800b1a4:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b1a6:	d52f      	bpl.n	800b208 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b1a8:	499e      	ldr	r1, [pc, #632]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b1aa:	688a      	ldr	r2, [r1, #8]
 800b1ac:	f002 020c 	and.w	r2, r2, #12
 800b1b0:	2a04      	cmp	r2, #4
 800b1b2:	f000 80ed 	beq.w	800b390 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b1b6:	688a      	ldr	r2, [r1, #8]
 800b1b8:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b1bc:	2a08      	cmp	r2, #8
 800b1be:	f000 80e3 	beq.w	800b388 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b1c2:	6863      	ldr	r3, [r4, #4]
 800b1c4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b1c8:	f000 80ec 	beq.w	800b3a4 <HAL_RCC_OscConfig+0x210>
 800b1cc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b1d0:	f000 8175 	beq.w	800b4be <HAL_RCC_OscConfig+0x32a>
 800b1d4:	4d93      	ldr	r5, [pc, #588]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b1d6:	682a      	ldr	r2, [r5, #0]
 800b1d8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b1dc:	602a      	str	r2, [r5, #0]
 800b1de:	682a      	ldr	r2, [r5, #0]
 800b1e0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b1e4:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b1e6:	2b00      	cmp	r3, #0
 800b1e8:	f040 80e1 	bne.w	800b3ae <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b1ec:	f7fd fdb8 	bl	8008d60 <HAL_GetTick>
 800b1f0:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b1f2:	e005      	b.n	800b200 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b1f4:	f7fd fdb4 	bl	8008d60 <HAL_GetTick>
 800b1f8:	1b80      	subs	r0, r0, r6
 800b1fa:	2864      	cmp	r0, #100	; 0x64
 800b1fc:	f200 8101 	bhi.w	800b402 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b200:	682b      	ldr	r3, [r5, #0]
 800b202:	039b      	lsls	r3, r3, #14
 800b204:	d4f6      	bmi.n	800b1f4 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b206:	6823      	ldr	r3, [r4, #0]
 800b208:	079f      	lsls	r7, r3, #30
 800b20a:	d528      	bpl.n	800b25e <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b20c:	4a85      	ldr	r2, [pc, #532]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b20e:	6891      	ldr	r1, [r2, #8]
 800b210:	f011 0f0c 	tst.w	r1, #12
 800b214:	f000 8090 	beq.w	800b338 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b218:	6891      	ldr	r1, [r2, #8]
 800b21a:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b21e:	2908      	cmp	r1, #8
 800b220:	f000 8086 	beq.w	800b330 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b224:	68e3      	ldr	r3, [r4, #12]
 800b226:	2b00      	cmp	r3, #0
 800b228:	f000 810e 	beq.w	800b448 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b22c:	4b7e      	ldr	r3, [pc, #504]	; (800b428 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b22e:	4e7d      	ldr	r6, [pc, #500]	; (800b424 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b230:	2201      	movs	r2, #1
 800b232:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b234:	f7fd fd94 	bl	8008d60 <HAL_GetTick>
 800b238:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b23a:	e005      	b.n	800b248 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b23c:	f7fd fd90 	bl	8008d60 <HAL_GetTick>
 800b240:	1b40      	subs	r0, r0, r5
 800b242:	2802      	cmp	r0, #2
 800b244:	f200 80dd 	bhi.w	800b402 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b248:	6833      	ldr	r3, [r6, #0]
 800b24a:	0798      	lsls	r0, r3, #30
 800b24c:	d5f6      	bpl.n	800b23c <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b24e:	6833      	ldr	r3, [r6, #0]
 800b250:	6922      	ldr	r2, [r4, #16]
 800b252:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b256:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b25a:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b25c:	6823      	ldr	r3, [r4, #0]
 800b25e:	071a      	lsls	r2, r3, #28
 800b260:	d451      	bmi.n	800b306 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b262:	0758      	lsls	r0, r3, #29
 800b264:	d52f      	bpl.n	800b2c6 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b266:	4a6f      	ldr	r2, [pc, #444]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b268:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b26a:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b26e:	d07f      	beq.n	800b370 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b270:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b272:	4e6e      	ldr	r6, [pc, #440]	; (800b42c <HAL_RCC_OscConfig+0x298>)
 800b274:	6833      	ldr	r3, [r6, #0]
 800b276:	05d9      	lsls	r1, r3, #23
 800b278:	f140 80b3 	bpl.w	800b3e2 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b27c:	68a3      	ldr	r3, [r4, #8]
 800b27e:	2b01      	cmp	r3, #1
 800b280:	f000 80c3 	beq.w	800b40a <HAL_RCC_OscConfig+0x276>
 800b284:	2b05      	cmp	r3, #5
 800b286:	f000 812c 	beq.w	800b4e2 <HAL_RCC_OscConfig+0x34e>
 800b28a:	4e66      	ldr	r6, [pc, #408]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b28c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b28e:	f022 0201 	bic.w	r2, r2, #1
 800b292:	6732      	str	r2, [r6, #112]	; 0x70
 800b294:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b296:	f022 0204 	bic.w	r2, r2, #4
 800b29a:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b29c:	2b00      	cmp	r3, #0
 800b29e:	f040 80b9 	bne.w	800b414 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b2a2:	f7fd fd5d 	bl	8008d60 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2a6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b2aa:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b2ac:	e005      	b.n	800b2ba <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2ae:	f7fd fd57 	bl	8008d60 <HAL_GetTick>
 800b2b2:	1bc0      	subs	r0, r0, r7
 800b2b4:	4540      	cmp	r0, r8
 800b2b6:	f200 80a4 	bhi.w	800b402 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b2ba:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b2bc:	0798      	lsls	r0, r3, #30
 800b2be:	d4f6      	bmi.n	800b2ae <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b2c0:	2d00      	cmp	r5, #0
 800b2c2:	f040 8106 	bne.w	800b4d2 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b2c6:	69a0      	ldr	r0, [r4, #24]
 800b2c8:	b1c8      	cbz	r0, 800b2fe <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b2ca:	4d56      	ldr	r5, [pc, #344]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b2cc:	68ab      	ldr	r3, [r5, #8]
 800b2ce:	f003 030c 	and.w	r3, r3, #12
 800b2d2:	2b08      	cmp	r3, #8
 800b2d4:	f000 80c9 	beq.w	800b46a <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b2d8:	4b53      	ldr	r3, [pc, #332]	; (800b428 <HAL_RCC_OscConfig+0x294>)
 800b2da:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b2dc:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b2de:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b2e0:	f000 8109 	beq.w	800b4f6 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b2e4:	f7fd fd3c 	bl	8008d60 <HAL_GetTick>
 800b2e8:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b2ea:	e005      	b.n	800b2f8 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b2ec:	f7fd fd38 	bl	8008d60 <HAL_GetTick>
 800b2f0:	1b00      	subs	r0, r0, r4
 800b2f2:	2802      	cmp	r0, #2
 800b2f4:	f200 8085 	bhi.w	800b402 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b2f8:	682b      	ldr	r3, [r5, #0]
 800b2fa:	019b      	lsls	r3, r3, #6
 800b2fc:	d4f6      	bmi.n	800b2ec <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b2fe:	2000      	movs	r0, #0
}
 800b300:	b002      	add	sp, #8
 800b302:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b306:	6963      	ldr	r3, [r4, #20]
 800b308:	b30b      	cbz	r3, 800b34e <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b30a:	4b47      	ldr	r3, [pc, #284]	; (800b428 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b30c:	4e45      	ldr	r6, [pc, #276]	; (800b424 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b30e:	2201      	movs	r2, #1
 800b310:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b314:	f7fd fd24 	bl	8008d60 <HAL_GetTick>
 800b318:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b31a:	e004      	b.n	800b326 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b31c:	f7fd fd20 	bl	8008d60 <HAL_GetTick>
 800b320:	1b40      	subs	r0, r0, r5
 800b322:	2802      	cmp	r0, #2
 800b324:	d86d      	bhi.n	800b402 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b326:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b328:	079b      	lsls	r3, r3, #30
 800b32a:	d5f7      	bpl.n	800b31c <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b32c:	6823      	ldr	r3, [r4, #0]
 800b32e:	e798      	b.n	800b262 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b330:	6852      	ldr	r2, [r2, #4]
 800b332:	0256      	lsls	r6, r2, #9
 800b334:	f53f af76 	bmi.w	800b224 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b338:	4a3a      	ldr	r2, [pc, #232]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b33a:	6812      	ldr	r2, [r2, #0]
 800b33c:	0795      	lsls	r5, r2, #30
 800b33e:	d544      	bpl.n	800b3ca <HAL_RCC_OscConfig+0x236>
 800b340:	68e2      	ldr	r2, [r4, #12]
 800b342:	2a01      	cmp	r2, #1
 800b344:	d041      	beq.n	800b3ca <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b346:	2001      	movs	r0, #1
}
 800b348:	b002      	add	sp, #8
 800b34a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b34e:	4a36      	ldr	r2, [pc, #216]	; (800b428 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b350:	4e34      	ldr	r6, [pc, #208]	; (800b424 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b352:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b356:	f7fd fd03 	bl	8008d60 <HAL_GetTick>
 800b35a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b35c:	e004      	b.n	800b368 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b35e:	f7fd fcff 	bl	8008d60 <HAL_GetTick>
 800b362:	1b40      	subs	r0, r0, r5
 800b364:	2802      	cmp	r0, #2
 800b366:	d84c      	bhi.n	800b402 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b368:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b36a:	079f      	lsls	r7, r3, #30
 800b36c:	d4f7      	bmi.n	800b35e <HAL_RCC_OscConfig+0x1ca>
 800b36e:	e7dd      	b.n	800b32c <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b370:	9301      	str	r3, [sp, #4]
 800b372:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b374:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b378:	6413      	str	r3, [r2, #64]	; 0x40
 800b37a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b37c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b380:	9301      	str	r3, [sp, #4]
 800b382:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b384:	2501      	movs	r5, #1
 800b386:	e774      	b.n	800b272 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b388:	684a      	ldr	r2, [r1, #4]
 800b38a:	0250      	lsls	r0, r2, #9
 800b38c:	f57f af19 	bpl.w	800b1c2 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b390:	4a24      	ldr	r2, [pc, #144]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b392:	6812      	ldr	r2, [r2, #0]
 800b394:	0391      	lsls	r1, r2, #14
 800b396:	f57f af37 	bpl.w	800b208 <HAL_RCC_OscConfig+0x74>
 800b39a:	6862      	ldr	r2, [r4, #4]
 800b39c:	2a00      	cmp	r2, #0
 800b39e:	f47f af33 	bne.w	800b208 <HAL_RCC_OscConfig+0x74>
 800b3a2:	e7d0      	b.n	800b346 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b3a4:	4a1f      	ldr	r2, [pc, #124]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b3a6:	6813      	ldr	r3, [r2, #0]
 800b3a8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b3ac:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b3ae:	f7fd fcd7 	bl	8008d60 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b3b2:	4e1c      	ldr	r6, [pc, #112]	; (800b424 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b3b4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b3b6:	e004      	b.n	800b3c2 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b3b8:	f7fd fcd2 	bl	8008d60 <HAL_GetTick>
 800b3bc:	1b40      	subs	r0, r0, r5
 800b3be:	2864      	cmp	r0, #100	; 0x64
 800b3c0:	d81f      	bhi.n	800b402 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b3c2:	6833      	ldr	r3, [r6, #0]
 800b3c4:	039a      	lsls	r2, r3, #14
 800b3c6:	d5f7      	bpl.n	800b3b8 <HAL_RCC_OscConfig+0x224>
 800b3c8:	e71d      	b.n	800b206 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b3ca:	4916      	ldr	r1, [pc, #88]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b3cc:	6920      	ldr	r0, [r4, #16]
 800b3ce:	680a      	ldr	r2, [r1, #0]
 800b3d0:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b3d4:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b3d8:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b3da:	071a      	lsls	r2, r3, #28
 800b3dc:	f57f af41 	bpl.w	800b262 <HAL_RCC_OscConfig+0xce>
 800b3e0:	e791      	b.n	800b306 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b3e2:	6833      	ldr	r3, [r6, #0]
 800b3e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b3e8:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b3ea:	f7fd fcb9 	bl	8008d60 <HAL_GetTick>
 800b3ee:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b3f0:	6833      	ldr	r3, [r6, #0]
 800b3f2:	05da      	lsls	r2, r3, #23
 800b3f4:	f53f af42 	bmi.w	800b27c <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b3f8:	f7fd fcb2 	bl	8008d60 <HAL_GetTick>
 800b3fc:	1bc0      	subs	r0, r0, r7
 800b3fe:	2802      	cmp	r0, #2
 800b400:	d9f6      	bls.n	800b3f0 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b402:	2003      	movs	r0, #3
}
 800b404:	b002      	add	sp, #8
 800b406:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b40a:	4a06      	ldr	r2, [pc, #24]	; (800b424 <HAL_RCC_OscConfig+0x290>)
 800b40c:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b40e:	f043 0301 	orr.w	r3, r3, #1
 800b412:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b414:	f7fd fca4 	bl	8008d60 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b418:	4f02      	ldr	r7, [pc, #8]	; (800b424 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b41a:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b41c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b420:	e00b      	b.n	800b43a <HAL_RCC_OscConfig+0x2a6>
 800b422:	bf00      	nop
 800b424:	40023800 	.word	0x40023800
 800b428:	42470000 	.word	0x42470000
 800b42c:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b430:	f7fd fc96 	bl	8008d60 <HAL_GetTick>
 800b434:	1b80      	subs	r0, r0, r6
 800b436:	4540      	cmp	r0, r8
 800b438:	d8e3      	bhi.n	800b402 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b43a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b43c:	079b      	lsls	r3, r3, #30
 800b43e:	d5f7      	bpl.n	800b430 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b440:	2d00      	cmp	r5, #0
 800b442:	f43f af40 	beq.w	800b2c6 <HAL_RCC_OscConfig+0x132>
 800b446:	e044      	b.n	800b4d2 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b448:	4a42      	ldr	r2, [pc, #264]	; (800b554 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b44a:	4e43      	ldr	r6, [pc, #268]	; (800b558 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b44c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b44e:	f7fd fc87 	bl	8008d60 <HAL_GetTick>
 800b452:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b454:	e004      	b.n	800b460 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b456:	f7fd fc83 	bl	8008d60 <HAL_GetTick>
 800b45a:	1b40      	subs	r0, r0, r5
 800b45c:	2802      	cmp	r0, #2
 800b45e:	d8d0      	bhi.n	800b402 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b460:	6833      	ldr	r3, [r6, #0]
 800b462:	0799      	lsls	r1, r3, #30
 800b464:	d4f7      	bmi.n	800b456 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b466:	6823      	ldr	r3, [r4, #0]
 800b468:	e6f9      	b.n	800b25e <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b46a:	2801      	cmp	r0, #1
 800b46c:	f43f af48 	beq.w	800b300 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b470:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b472:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b474:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b478:	4291      	cmp	r1, r2
 800b47a:	f47f af64 	bne.w	800b346 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b47e:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b480:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b484:	4291      	cmp	r1, r2
 800b486:	f47f af5e 	bne.w	800b346 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b48a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b48c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b490:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b492:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b496:	f47f af56 	bne.w	800b346 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b49a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b49c:	0852      	lsrs	r2, r2, #1
 800b49e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b4a2:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b4a4:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b4a8:	f47f af4d 	bne.w	800b346 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b4ac:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b4ae:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b4b2:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b4b6:	bf14      	ite	ne
 800b4b8:	2001      	movne	r0, #1
 800b4ba:	2000      	moveq	r0, #0
 800b4bc:	e720      	b.n	800b300 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b4be:	4b26      	ldr	r3, [pc, #152]	; (800b558 <HAL_RCC_OscConfig+0x3c4>)
 800b4c0:	681a      	ldr	r2, [r3, #0]
 800b4c2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b4c6:	601a      	str	r2, [r3, #0]
 800b4c8:	681a      	ldr	r2, [r3, #0]
 800b4ca:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b4ce:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b4d0:	e76d      	b.n	800b3ae <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b4d2:	4a21      	ldr	r2, [pc, #132]	; (800b558 <HAL_RCC_OscConfig+0x3c4>)
 800b4d4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b4d6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b4da:	6413      	str	r3, [r2, #64]	; 0x40
 800b4dc:	e6f3      	b.n	800b2c6 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b4de:	2001      	movs	r0, #1
}
 800b4e0:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b4e2:	4b1d      	ldr	r3, [pc, #116]	; (800b558 <HAL_RCC_OscConfig+0x3c4>)
 800b4e4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b4e6:	f042 0204 	orr.w	r2, r2, #4
 800b4ea:	671a      	str	r2, [r3, #112]	; 0x70
 800b4ec:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b4ee:	f042 0201 	orr.w	r2, r2, #1
 800b4f2:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b4f4:	e78e      	b.n	800b414 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b4f6:	f7fd fc33 	bl	8008d60 <HAL_GetTick>
 800b4fa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b4fc:	e005      	b.n	800b50a <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b4fe:	f7fd fc2f 	bl	8008d60 <HAL_GetTick>
 800b502:	1b80      	subs	r0, r0, r6
 800b504:	2802      	cmp	r0, #2
 800b506:	f63f af7c 	bhi.w	800b402 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b50a:	682b      	ldr	r3, [r5, #0]
 800b50c:	0199      	lsls	r1, r3, #6
 800b50e:	d4f6      	bmi.n	800b4fe <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b510:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b514:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b516:	430b      	orrs	r3, r1
 800b518:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b51c:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b520:	0852      	lsrs	r2, r2, #1
 800b522:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b526:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b528:	490a      	ldr	r1, [pc, #40]	; (800b554 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b52a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b52e:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b530:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b532:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b534:	f7fd fc14 	bl	8008d60 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b538:	4d07      	ldr	r5, [pc, #28]	; (800b558 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b53a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b53c:	e005      	b.n	800b54a <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b53e:	f7fd fc0f 	bl	8008d60 <HAL_GetTick>
 800b542:	1b00      	subs	r0, r0, r4
 800b544:	2802      	cmp	r0, #2
 800b546:	f63f af5c 	bhi.w	800b402 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b54a:	682b      	ldr	r3, [r5, #0]
 800b54c:	019a      	lsls	r2, r3, #6
 800b54e:	d5f6      	bpl.n	800b53e <HAL_RCC_OscConfig+0x3aa>
 800b550:	e6d5      	b.n	800b2fe <HAL_RCC_OscConfig+0x16a>
 800b552:	bf00      	nop
 800b554:	42470000 	.word	0x42470000
 800b558:	40023800 	.word	0x40023800

0800b55c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b55c:	4916      	ldr	r1, [pc, #88]	; (800b5b8 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b55e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b560:	688b      	ldr	r3, [r1, #8]
 800b562:	f003 030c 	and.w	r3, r3, #12
 800b566:	2b04      	cmp	r3, #4
 800b568:	d01b      	beq.n	800b5a2 <HAL_RCC_GetSysClockFreq+0x46>
 800b56a:	2b08      	cmp	r3, #8
 800b56c:	d117      	bne.n	800b59e <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b56e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b570:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b572:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b574:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b578:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b57c:	d113      	bne.n	800b5a6 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b57e:	480f      	ldr	r0, [pc, #60]	; (800b5bc <HAL_RCC_GetSysClockFreq+0x60>)
 800b580:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b584:	fba1 0100 	umull	r0, r1, r1, r0
 800b588:	f7f4 fee2 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b58c:	4b0a      	ldr	r3, [pc, #40]	; (800b5b8 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b58e:	685b      	ldr	r3, [r3, #4]
 800b590:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b594:	3301      	adds	r3, #1
 800b596:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b598:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b59c:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b59e:	4807      	ldr	r0, [pc, #28]	; (800b5bc <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b5a0:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b5a2:	4807      	ldr	r0, [pc, #28]	; (800b5c0 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b5a4:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b5a6:	4806      	ldr	r0, [pc, #24]	; (800b5c0 <HAL_RCC_GetSysClockFreq+0x64>)
 800b5a8:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b5ac:	2300      	movs	r3, #0
 800b5ae:	fba1 0100 	umull	r0, r1, r1, r0
 800b5b2:	f7f4 fecd 	bl	8000350 <__aeabi_uldivmod>
 800b5b6:	e7e9      	b.n	800b58c <HAL_RCC_GetSysClockFreq+0x30>
 800b5b8:	40023800 	.word	0x40023800
 800b5bc:	00f42400 	.word	0x00f42400
 800b5c0:	007a1200 	.word	0x007a1200

0800b5c4 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b5c4:	2800      	cmp	r0, #0
 800b5c6:	f000 8087 	beq.w	800b6d8 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b5ca:	4a48      	ldr	r2, [pc, #288]	; (800b6ec <HAL_RCC_ClockConfig+0x128>)
 800b5cc:	6813      	ldr	r3, [r2, #0]
 800b5ce:	f003 030f 	and.w	r3, r3, #15
 800b5d2:	428b      	cmp	r3, r1
{
 800b5d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b5d8:	460d      	mov	r5, r1
 800b5da:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b5dc:	d209      	bcs.n	800b5f2 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b5de:	b2cb      	uxtb	r3, r1
 800b5e0:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b5e2:	6813      	ldr	r3, [r2, #0]
 800b5e4:	f003 030f 	and.w	r3, r3, #15
 800b5e8:	428b      	cmp	r3, r1
 800b5ea:	d002      	beq.n	800b5f2 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b5ec:	2001      	movs	r0, #1
}
 800b5ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b5f2:	6823      	ldr	r3, [r4, #0]
 800b5f4:	0798      	lsls	r0, r3, #30
 800b5f6:	d514      	bpl.n	800b622 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b5f8:	0759      	lsls	r1, r3, #29
 800b5fa:	d504      	bpl.n	800b606 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b5fc:	493c      	ldr	r1, [pc, #240]	; (800b6f0 <HAL_RCC_ClockConfig+0x12c>)
 800b5fe:	688a      	ldr	r2, [r1, #8]
 800b600:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b604:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b606:	071a      	lsls	r2, r3, #28
 800b608:	d504      	bpl.n	800b614 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b60a:	4939      	ldr	r1, [pc, #228]	; (800b6f0 <HAL_RCC_ClockConfig+0x12c>)
 800b60c:	688a      	ldr	r2, [r1, #8]
 800b60e:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b612:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b614:	4936      	ldr	r1, [pc, #216]	; (800b6f0 <HAL_RCC_ClockConfig+0x12c>)
 800b616:	68a0      	ldr	r0, [r4, #8]
 800b618:	688a      	ldr	r2, [r1, #8]
 800b61a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b61e:	4302      	orrs	r2, r0
 800b620:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b622:	07df      	lsls	r7, r3, #31
 800b624:	d521      	bpl.n	800b66a <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b626:	6862      	ldr	r2, [r4, #4]
 800b628:	2a01      	cmp	r2, #1
 800b62a:	d057      	beq.n	800b6dc <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b62c:	1e93      	subs	r3, r2, #2
 800b62e:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b630:	4b2f      	ldr	r3, [pc, #188]	; (800b6f0 <HAL_RCC_ClockConfig+0x12c>)
 800b632:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b634:	d94d      	bls.n	800b6d2 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b636:	0799      	lsls	r1, r3, #30
 800b638:	d5d8      	bpl.n	800b5ec <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b63a:	4e2d      	ldr	r6, [pc, #180]	; (800b6f0 <HAL_RCC_ClockConfig+0x12c>)
 800b63c:	68b3      	ldr	r3, [r6, #8]
 800b63e:	f023 0303 	bic.w	r3, r3, #3
 800b642:	4313      	orrs	r3, r2
 800b644:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b646:	f7fd fb8b 	bl	8008d60 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b64a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b64e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b650:	e004      	b.n	800b65c <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b652:	f7fd fb85 	bl	8008d60 <HAL_GetTick>
 800b656:	1bc0      	subs	r0, r0, r7
 800b658:	4540      	cmp	r0, r8
 800b65a:	d844      	bhi.n	800b6e6 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b65c:	68b3      	ldr	r3, [r6, #8]
 800b65e:	6862      	ldr	r2, [r4, #4]
 800b660:	f003 030c 	and.w	r3, r3, #12
 800b664:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b668:	d1f3      	bne.n	800b652 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b66a:	4a20      	ldr	r2, [pc, #128]	; (800b6ec <HAL_RCC_ClockConfig+0x128>)
 800b66c:	6813      	ldr	r3, [r2, #0]
 800b66e:	f003 030f 	and.w	r3, r3, #15
 800b672:	42ab      	cmp	r3, r5
 800b674:	d906      	bls.n	800b684 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b676:	b2eb      	uxtb	r3, r5
 800b678:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b67a:	6813      	ldr	r3, [r2, #0]
 800b67c:	f003 030f 	and.w	r3, r3, #15
 800b680:	42ab      	cmp	r3, r5
 800b682:	d1b3      	bne.n	800b5ec <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b684:	6823      	ldr	r3, [r4, #0]
 800b686:	075a      	lsls	r2, r3, #29
 800b688:	d506      	bpl.n	800b698 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b68a:	4919      	ldr	r1, [pc, #100]	; (800b6f0 <HAL_RCC_ClockConfig+0x12c>)
 800b68c:	68e0      	ldr	r0, [r4, #12]
 800b68e:	688a      	ldr	r2, [r1, #8]
 800b690:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b694:	4302      	orrs	r2, r0
 800b696:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b698:	071b      	lsls	r3, r3, #28
 800b69a:	d507      	bpl.n	800b6ac <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b69c:	4a14      	ldr	r2, [pc, #80]	; (800b6f0 <HAL_RCC_ClockConfig+0x12c>)
 800b69e:	6921      	ldr	r1, [r4, #16]
 800b6a0:	6893      	ldr	r3, [r2, #8]
 800b6a2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b6a6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b6aa:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b6ac:	f7ff ff56 	bl	800b55c <HAL_RCC_GetSysClockFreq>
 800b6b0:	4a0f      	ldr	r2, [pc, #60]	; (800b6f0 <HAL_RCC_ClockConfig+0x12c>)
 800b6b2:	4c10      	ldr	r4, [pc, #64]	; (800b6f4 <HAL_RCC_ClockConfig+0x130>)
 800b6b4:	6892      	ldr	r2, [r2, #8]
 800b6b6:	4910      	ldr	r1, [pc, #64]	; (800b6f8 <HAL_RCC_ClockConfig+0x134>)
 800b6b8:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b6bc:	4603      	mov	r3, r0
 800b6be:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b6c0:	480e      	ldr	r0, [pc, #56]	; (800b6fc <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b6c2:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b6c4:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b6c6:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b6c8:	f7f6 f9cc 	bl	8001a64 <HAL_InitTick>
  return HAL_OK;
 800b6cc:	2000      	movs	r0, #0
}
 800b6ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b6d2:	0198      	lsls	r0, r3, #6
 800b6d4:	d4b1      	bmi.n	800b63a <HAL_RCC_ClockConfig+0x76>
 800b6d6:	e789      	b.n	800b5ec <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b6d8:	2001      	movs	r0, #1
}
 800b6da:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b6dc:	4b04      	ldr	r3, [pc, #16]	; (800b6f0 <HAL_RCC_ClockConfig+0x12c>)
 800b6de:	681b      	ldr	r3, [r3, #0]
 800b6e0:	039e      	lsls	r6, r3, #14
 800b6e2:	d4aa      	bmi.n	800b63a <HAL_RCC_ClockConfig+0x76>
 800b6e4:	e782      	b.n	800b5ec <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b6e6:	2003      	movs	r0, #3
 800b6e8:	e781      	b.n	800b5ee <HAL_RCC_ClockConfig+0x2a>
 800b6ea:	bf00      	nop
 800b6ec:	40023c00 	.word	0x40023c00
 800b6f0:	40023800 	.word	0x40023800
 800b6f4:	0802e4c0 	.word	0x0802e4c0
 800b6f8:	20000094 	.word	0x20000094
 800b6fc:	2000009c 	.word	0x2000009c

0800b700 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b700:	4b04      	ldr	r3, [pc, #16]	; (800b714 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b702:	4905      	ldr	r1, [pc, #20]	; (800b718 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b704:	689b      	ldr	r3, [r3, #8]
 800b706:	4a05      	ldr	r2, [pc, #20]	; (800b71c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b708:	6808      	ldr	r0, [r1, #0]
 800b70a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b70e:	5cd3      	ldrb	r3, [r2, r3]
}
 800b710:	40d8      	lsrs	r0, r3
 800b712:	4770      	bx	lr
 800b714:	40023800 	.word	0x40023800
 800b718:	20000094 	.word	0x20000094
 800b71c:	0802e4d0 	.word	0x0802e4d0

0800b720 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b720:	4b0e      	ldr	r3, [pc, #56]	; (800b75c <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b722:	220f      	movs	r2, #15
 800b724:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b726:	689a      	ldr	r2, [r3, #8]
 800b728:	f002 0203 	and.w	r2, r2, #3
 800b72c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b72e:	689a      	ldr	r2, [r3, #8]
 800b730:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b734:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b736:	689a      	ldr	r2, [r3, #8]
 800b738:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b73c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b73e:	689b      	ldr	r3, [r3, #8]
 800b740:	08db      	lsrs	r3, r3, #3
{
 800b742:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b744:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b748:	4c05      	ldr	r4, [pc, #20]	; (800b760 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b74a:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b74c:	6823      	ldr	r3, [r4, #0]
}
 800b74e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b752:	f003 030f 	and.w	r3, r3, #15
 800b756:	600b      	str	r3, [r1, #0]
}
 800b758:	4770      	bx	lr
 800b75a:	bf00      	nop
 800b75c:	40023800 	.word	0x40023800
 800b760:	40023c00 	.word	0x40023c00

0800b764 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b764:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b766:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b768:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b76c:	b083      	sub	sp, #12
 800b76e:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b770:	d111      	bne.n	800b796 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b772:	f013 0f0c 	tst.w	r3, #12
 800b776:	d16f      	bne.n	800b858 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b778:	0698      	lsls	r0, r3, #26
 800b77a:	f100 80c2 	bmi.w	800b902 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b77e:	f013 0310 	ands.w	r3, r3, #16
 800b782:	f000 80bb 	beq.w	800b8fc <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b786:	4b89      	ldr	r3, [pc, #548]	; (800b9ac <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b788:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b78c:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b790:	2000      	movs	r0, #0
}
 800b792:	b003      	add	sp, #12
 800b794:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b796:	4b86      	ldr	r3, [pc, #536]	; (800b9b0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b798:	4e86      	ldr	r6, [pc, #536]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b79a:	2200      	movs	r2, #0
 800b79c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b79e:	f7fd fadf 	bl	8008d60 <HAL_GetTick>
 800b7a2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b7a4:	e004      	b.n	800b7b0 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b7a6:	f7fd fadb 	bl	8008d60 <HAL_GetTick>
 800b7aa:	1b43      	subs	r3, r0, r5
 800b7ac:	2b02      	cmp	r3, #2
 800b7ae:	d850      	bhi.n	800b852 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b7b0:	6833      	ldr	r3, [r6, #0]
 800b7b2:	0118      	lsls	r0, r3, #4
 800b7b4:	d4f7      	bmi.n	800b7a6 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b7b6:	6823      	ldr	r3, [r4, #0]
 800b7b8:	07d9      	lsls	r1, r3, #31
 800b7ba:	d506      	bpl.n	800b7ca <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b7bc:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b7c0:	0712      	lsls	r2, r2, #28
 800b7c2:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b7c6:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b7ca:	079a      	lsls	r2, r3, #30
 800b7cc:	d515      	bpl.n	800b7fa <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b7ce:	4979      	ldr	r1, [pc, #484]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b7d0:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b7d2:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b7d6:	6865      	ldr	r5, [r4, #4]
 800b7d8:	0612      	lsls	r2, r2, #24
 800b7da:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b7de:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b7e2:	4302      	orrs	r2, r0
 800b7e4:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b7e8:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b7ec:	69e2      	ldr	r2, [r4, #28]
 800b7ee:	f020 001f 	bic.w	r0, r0, #31
 800b7f2:	3a01      	subs	r2, #1
 800b7f4:	4302      	orrs	r2, r0
 800b7f6:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b7fa:	065b      	lsls	r3, r3, #25
 800b7fc:	d509      	bpl.n	800b812 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b7fe:	1d20      	adds	r0, r4, #4
 800b800:	c80b      	ldmia	r0, {r0, r1, r3}
 800b802:	061b      	lsls	r3, r3, #24
 800b804:	4a6b      	ldr	r2, [pc, #428]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b806:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b80a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b80e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b812:	4b67      	ldr	r3, [pc, #412]	; (800b9b0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b814:	4e67      	ldr	r6, [pc, #412]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b816:	2201      	movs	r2, #1
 800b818:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b81a:	f7fd faa1 	bl	8008d60 <HAL_GetTick>
 800b81e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b820:	e004      	b.n	800b82c <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b822:	f7fd fa9d 	bl	8008d60 <HAL_GetTick>
 800b826:	1b40      	subs	r0, r0, r5
 800b828:	2802      	cmp	r0, #2
 800b82a:	d812      	bhi.n	800b852 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b82c:	6833      	ldr	r3, [r6, #0]
 800b82e:	011f      	lsls	r7, r3, #4
 800b830:	d5f7      	bpl.n	800b822 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b832:	6823      	ldr	r3, [r4, #0]
 800b834:	e79d      	b.n	800b772 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b836:	f7fd fa93 	bl	8008d60 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b83a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b83e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b840:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b842:	079b      	lsls	r3, r3, #30
 800b844:	f100 80a5 	bmi.w	800b992 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b848:	f7fd fa8a 	bl	8008d60 <HAL_GetTick>
 800b84c:	1b80      	subs	r0, r0, r6
 800b84e:	42b8      	cmp	r0, r7
 800b850:	d9f6      	bls.n	800b840 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b852:	2003      	movs	r0, #3
}
 800b854:	b003      	add	sp, #12
 800b856:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b858:	4b55      	ldr	r3, [pc, #340]	; (800b9b0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b85a:	4e56      	ldr	r6, [pc, #344]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b85c:	2200      	movs	r2, #0
 800b85e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b860:	f7fd fa7e 	bl	8008d60 <HAL_GetTick>
 800b864:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b866:	e004      	b.n	800b872 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b868:	f7fd fa7a 	bl	8008d60 <HAL_GetTick>
 800b86c:	1b43      	subs	r3, r0, r5
 800b86e:	2b02      	cmp	r3, #2
 800b870:	d8ef      	bhi.n	800b852 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b872:	6833      	ldr	r3, [r6, #0]
 800b874:	0098      	lsls	r0, r3, #2
 800b876:	d4f7      	bmi.n	800b868 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b878:	6822      	ldr	r2, [r4, #0]
 800b87a:	0751      	lsls	r1, r2, #29
 800b87c:	d515      	bpl.n	800b8aa <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b87e:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b880:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b884:	6920      	ldr	r0, [r4, #16]
 800b886:	061b      	lsls	r3, r3, #24
 800b888:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b88c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b890:	430b      	orrs	r3, r1
 800b892:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b896:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b89a:	6a21      	ldr	r1, [r4, #32]
 800b89c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b8a0:	3901      	subs	r1, #1
 800b8a2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b8a6:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b8aa:	0713      	lsls	r3, r2, #28
 800b8ac:	d514      	bpl.n	800b8d8 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b8ae:	4a41      	ldr	r2, [pc, #260]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b8b0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b8b2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b8b6:	6920      	ldr	r0, [r4, #16]
 800b8b8:	071b      	lsls	r3, r3, #28
 800b8ba:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b8be:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b8c2:	430b      	orrs	r3, r1
 800b8c4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b8c8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b8cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b8ce:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b8d2:	430b      	orrs	r3, r1
 800b8d4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b8d8:	4b35      	ldr	r3, [pc, #212]	; (800b9b0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b8da:	4e36      	ldr	r6, [pc, #216]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b8dc:	2201      	movs	r2, #1
 800b8de:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b8e0:	f7fd fa3e 	bl	8008d60 <HAL_GetTick>
 800b8e4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b8e6:	e004      	b.n	800b8f2 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b8e8:	f7fd fa3a 	bl	8008d60 <HAL_GetTick>
 800b8ec:	1b40      	subs	r0, r0, r5
 800b8ee:	2802      	cmp	r0, #2
 800b8f0:	d8af      	bhi.n	800b852 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b8f2:	6833      	ldr	r3, [r6, #0]
 800b8f4:	009f      	lsls	r7, r3, #2
 800b8f6:	d5f7      	bpl.n	800b8e8 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b8f8:	6823      	ldr	r3, [r4, #0]
 800b8fa:	e73d      	b.n	800b778 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b8fc:	4618      	mov	r0, r3
}
 800b8fe:	b003      	add	sp, #12
 800b900:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b902:	4b2c      	ldr	r3, [pc, #176]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b904:	4d2c      	ldr	r5, [pc, #176]	; (800b9b8 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b906:	2200      	movs	r2, #0
 800b908:	9201      	str	r2, [sp, #4]
 800b90a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b90c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b910:	641a      	str	r2, [r3, #64]	; 0x40
 800b912:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b914:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b918:	9301      	str	r3, [sp, #4]
 800b91a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b91c:	682b      	ldr	r3, [r5, #0]
 800b91e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b922:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b924:	f7fd fa1c 	bl	8008d60 <HAL_GetTick>
 800b928:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b92a:	e004      	b.n	800b936 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b92c:	f7fd fa18 	bl	8008d60 <HAL_GetTick>
 800b930:	1b83      	subs	r3, r0, r6
 800b932:	2b02      	cmp	r3, #2
 800b934:	d88d      	bhi.n	800b852 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b936:	682b      	ldr	r3, [r5, #0]
 800b938:	05d9      	lsls	r1, r3, #23
 800b93a:	d5f7      	bpl.n	800b92c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b93c:	4d1d      	ldr	r5, [pc, #116]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b93e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b940:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b942:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b946:	d111      	bne.n	800b96c <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b948:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b94c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b950:	d021      	beq.n	800b996 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b952:	4918      	ldr	r1, [pc, #96]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b954:	688a      	ldr	r2, [r1, #8]
 800b956:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b95a:	608a      	str	r2, [r1, #8]
 800b95c:	4a15      	ldr	r2, [pc, #84]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b95e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b960:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b964:	430b      	orrs	r3, r1
 800b966:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b968:	6823      	ldr	r3, [r4, #0]
 800b96a:	e708      	b.n	800b77e <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b96c:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800b970:	4291      	cmp	r1, r2
 800b972:	d0eb      	beq.n	800b94c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b974:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800b976:	4a0e      	ldr	r2, [pc, #56]	; (800b9b0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800b978:	2101      	movs	r1, #1
 800b97a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b97e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800b982:	2100      	movs	r1, #0
 800b984:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800b988:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800b98a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b98c:	07da      	lsls	r2, r3, #31
 800b98e:	f53f af52 	bmi.w	800b836 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b992:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b994:	e7d8      	b.n	800b948 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800b996:	4807      	ldr	r0, [pc, #28]	; (800b9b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b998:	6882      	ldr	r2, [r0, #8]
 800b99a:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800b99e:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b9a2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b9a6:	430a      	orrs	r2, r1
 800b9a8:	6082      	str	r2, [r0, #8]
 800b9aa:	e7d7      	b.n	800b95c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800b9ac:	42471000 	.word	0x42471000
 800b9b0:	42470000 	.word	0x42470000
 800b9b4:	40023800 	.word	0x40023800
 800b9b8:	40007000 	.word	0x40007000

0800b9bc <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800b9bc:	b1f0      	cbz	r0, 800b9fc <HAL_SDRAM_Init+0x40>
{
 800b9be:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800b9c0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b9c4:	460d      	mov	r5, r1
 800b9c6:	4604      	mov	r4, r0
 800b9c8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b9cc:	b18b      	cbz	r3, 800b9f2 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b9ce:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b9d0:	2302      	movs	r3, #2
 800b9d2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b9d6:	f851 0b04 	ldr.w	r0, [r1], #4
 800b9da:	f000 ffcd 	bl	800c978 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800b9de:	e9d4 0200 	ldrd	r0, r2, [r4]
 800b9e2:	4629      	mov	r1, r5
 800b9e4:	f001 f806 	bl	800c9f4 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800b9e8:	2301      	movs	r3, #1
 800b9ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800b9ee:	2000      	movs	r0, #0
}
 800b9f0:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800b9f2:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800b9f6:	f7f5 ffcd 	bl	8001994 <HAL_SDRAM_MspInit>
 800b9fa:	e7e8      	b.n	800b9ce <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800b9fc:	2001      	movs	r0, #1
}
 800b9fe:	4770      	bx	lr

0800ba00 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800ba00:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ba02:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800ba06:	2b02      	cmp	r3, #2
{
 800ba08:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ba0a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800ba0c:	d004      	beq.n	800ba18 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800ba0e:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800ba12:	2c01      	cmp	r4, #1
 800ba14:	d001      	beq.n	800ba1a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800ba16:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800ba18:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ba1a:	460e      	mov	r6, r1
 800ba1c:	2302      	movs	r3, #2
 800ba1e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800ba22:	6828      	ldr	r0, [r5, #0]
 800ba24:	f001 f832 	bl	800ca8c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800ba28:	6833      	ldr	r3, [r6, #0]
 800ba2a:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800ba2c:	bf06      	itte	eq
 800ba2e:	2305      	moveq	r3, #5
 800ba30:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800ba34:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800ba38:	2000      	movs	r0, #0
}
 800ba3a:	bd70      	pop	{r4, r5, r6, pc}

0800ba3c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800ba3c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ba3e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ba42:	2b02      	cmp	r3, #2
{
 800ba44:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ba46:	b2d8      	uxtb	r0, r3
 800ba48:	d005      	beq.n	800ba56 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800ba4a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800ba4e:	2b01      	cmp	r3, #1
 800ba50:	b2dd      	uxtb	r5, r3
 800ba52:	d001      	beq.n	800ba58 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800ba54:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800ba56:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ba58:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ba5a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ba5c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ba60:	f001 f83e 	bl	800cae0 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800ba64:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800ba68:	2000      	movs	r0, #0
}
 800ba6a:	bd38      	pop	{r3, r4, r5, pc}

0800ba6c <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800ba6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba70:	b082      	sub	sp, #8
 800ba72:	461d      	mov	r5, r3
 800ba74:	4616      	mov	r6, r2
 800ba76:	460c      	mov	r4, r1
 800ba78:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800ba7a:	f7fd f971 	bl	8008d60 <HAL_GetTick>
 800ba7e:	4435      	add	r5, r6
 800ba80:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800ba82:	f7fd f96d 	bl	8008d60 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800ba86:	4b27      	ldr	r3, [pc, #156]	; (800bb24 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800ba88:	681b      	ldr	r3, [r3, #0]
 800ba8a:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800ba8e:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800ba92:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800ba94:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800ba96:	1c73      	adds	r3, r6, #1
 800ba98:	6839      	ldr	r1, [r7, #0]
 800ba9a:	d107      	bne.n	800baac <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800ba9c:	688b      	ldr	r3, [r1, #8]
 800ba9e:	ea34 0303 	bics.w	r3, r4, r3
 800baa2:	d0fb      	beq.n	800ba9c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800baa4:	2000      	movs	r0, #0
}
 800baa6:	b002      	add	sp, #8
 800baa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800baac:	688b      	ldr	r3, [r1, #8]
 800baae:	ea34 0303 	bics.w	r3, r4, r3
 800bab2:	d1f7      	bne.n	800baa4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800bab4:	f7fd f954 	bl	8008d60 <HAL_GetTick>
 800bab8:	eba0 0008 	sub.w	r0, r0, r8
 800babc:	42a8      	cmp	r0, r5
 800babe:	d208      	bcs.n	800bad2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800bac0:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800bac2:	2b00      	cmp	r3, #0
      count--;
 800bac4:	9b01      	ldr	r3, [sp, #4]
 800bac6:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800baca:	bf08      	it	eq
 800bacc:	2500      	moveq	r5, #0
      count--;
 800bace:	9301      	str	r3, [sp, #4]
 800bad0:	e7e1      	b.n	800ba96 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bad2:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bad6:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bad8:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800badc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800bae0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bae2:	d013      	beq.n	800bb0c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800bae4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800bae6:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800baea:	d107      	bne.n	800bafc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800baec:	681a      	ldr	r2, [r3, #0]
 800baee:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800baf2:	601a      	str	r2, [r3, #0]
 800baf4:	681a      	ldr	r2, [r3, #0]
 800baf6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bafa:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800bafc:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800bafe:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800bb00:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800bb04:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800bb08:	2003      	movs	r0, #3
 800bb0a:	e7cc      	b.n	800baa6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb0c:	68ba      	ldr	r2, [r7, #8]
 800bb0e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bb12:	d002      	beq.n	800bb1a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bb14:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bb18:	d1e4      	bne.n	800bae4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800bb1a:	681a      	ldr	r2, [r3, #0]
 800bb1c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bb20:	601a      	str	r2, [r3, #0]
 800bb22:	e7df      	b.n	800bae4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800bb24:	20000094 	.word	0x20000094

0800bb28 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800bb28:	b538      	push	{r3, r4, r5, lr}
 800bb2a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb2c:	6842      	ldr	r2, [r0, #4]
 800bb2e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800bb32:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb34:	d006      	beq.n	800bb44 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bb36:	460a      	mov	r2, r1
 800bb38:	2101      	movs	r1, #1
 800bb3a:	f7ff ff97 	bl	800ba6c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bb3e:	b978      	cbnz	r0, 800bb60 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800bb40:	2000      	movs	r0, #0
}
 800bb42:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb44:	6882      	ldr	r2, [r0, #8]
 800bb46:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bb4a:	d01c      	beq.n	800bb86 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bb4c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bb50:	d00c      	beq.n	800bb6c <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bb52:	460a      	mov	r2, r1
 800bb54:	4620      	mov	r0, r4
 800bb56:	2180      	movs	r1, #128	; 0x80
 800bb58:	f7ff ff88 	bl	800ba6c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bb5c:	2800      	cmp	r0, #0
 800bb5e:	d0ef      	beq.n	800bb40 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bb60:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800bb62:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800bb66:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bb68:	6563      	str	r3, [r4, #84]	; 0x54
}
 800bb6a:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800bb6c:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bb6e:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800bb70:	6829      	ldr	r1, [r5, #0]
 800bb72:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bb76:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bb78:	2101      	movs	r1, #1
 800bb7a:	f7ff ff77 	bl	800ba6c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bb7e:	2800      	cmp	r0, #0
 800bb80:	d1ee      	bne.n	800bb60 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800bb82:	2000      	movs	r0, #0
 800bb84:	e7dd      	b.n	800bb42 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800bb86:	6800      	ldr	r0, [r0, #0]
 800bb88:	6802      	ldr	r2, [r0, #0]
 800bb8a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bb8e:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bb90:	460a      	mov	r2, r1
 800bb92:	4620      	mov	r0, r4
 800bb94:	2180      	movs	r1, #128	; 0x80
 800bb96:	f7ff ff69 	bl	800ba6c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bb9a:	2800      	cmp	r0, #0
 800bb9c:	d0d0      	beq.n	800bb40 <SPI_EndRxTransaction+0x18>
 800bb9e:	e7df      	b.n	800bb60 <SPI_EndRxTransaction+0x38>

0800bba0 <HAL_SPI_Init>:
  if (hspi == NULL)
 800bba0:	2800      	cmp	r0, #0
 800bba2:	d05c      	beq.n	800bc5e <HAL_SPI_Init+0xbe>
{
 800bba4:	b570      	push	{r4, r5, r6, lr}
 800bba6:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800bba8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800bbaa:	2800      	cmp	r0, #0
 800bbac:	d047      	beq.n	800bc3e <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800bbae:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800bbb0:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bbb4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800bbb8:	2200      	movs	r2, #0
 800bbba:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bbbc:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800bbc0:	2b00      	cmp	r3, #0
 800bbc2:	d042      	beq.n	800bc4a <HAL_SPI_Init+0xaa>
 800bbc4:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800bbc6:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bbc8:	68a5      	ldr	r5, [r4, #8]
 800bbca:	69a2      	ldr	r2, [r4, #24]
 800bbcc:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800bbce:	2302      	movs	r3, #2
 800bbd0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800bbd4:	680b      	ldr	r3, [r1, #0]
 800bbd6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bbda:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bbdc:	6863      	ldr	r3, [r4, #4]
 800bbde:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800bbe2:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800bbe6:	432b      	orrs	r3, r5
 800bbe8:	68e5      	ldr	r5, [r4, #12]
 800bbea:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800bbee:	432b      	orrs	r3, r5
 800bbf0:	6925      	ldr	r5, [r4, #16]
 800bbf2:	f005 0502 	and.w	r5, r5, #2
 800bbf6:	432b      	orrs	r3, r5
 800bbf8:	6965      	ldr	r5, [r4, #20]
 800bbfa:	f005 0501 	and.w	r5, r5, #1
 800bbfe:	432b      	orrs	r3, r5
 800bc00:	69e5      	ldr	r5, [r4, #28]
 800bc02:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800bc06:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800bc0a:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800bc0e:	4333      	orrs	r3, r6
 800bc10:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc12:	0c12      	lsrs	r2, r2, #16
 800bc14:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc18:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc1c:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc20:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc24:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc26:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc28:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bc2a:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bc2c:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bc2e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bc32:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bc34:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bc36:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bc38:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bc3c:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc3e:	6863      	ldr	r3, [r4, #4]
 800bc40:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bc44:	d0b6      	beq.n	800bbb4 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800bc46:	61e0      	str	r0, [r4, #28]
 800bc48:	e7b4      	b.n	800bbb4 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800bc4a:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bc4c:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bc50:	f7f5 fe1a 	bl	8001888 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc54:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc58:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800bc5c:	e7b3      	b.n	800bbc6 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bc5e:	2001      	movs	r0, #1
}
 800bc60:	4770      	bx	lr
 800bc62:	bf00      	nop

0800bc64 <HAL_SPI_Transmit>:
{
 800bc64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc68:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bc6a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bc6e:	2801      	cmp	r0, #1
{
 800bc70:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bc72:	f000 8085 	beq.w	800bd80 <HAL_SPI_Transmit+0x11c>
 800bc76:	461d      	mov	r5, r3
 800bc78:	2301      	movs	r3, #1
 800bc7a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bc7e:	4688      	mov	r8, r1
 800bc80:	4617      	mov	r7, r2
 800bc82:	f7fd f86d 	bl	8008d60 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bc86:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bc8a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bc8c:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bc8e:	b2d8      	uxtb	r0, r3
 800bc90:	d009      	beq.n	800bca6 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bc92:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bc94:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bc96:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bc98:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bc9c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bca0:	b002      	add	sp, #8
 800bca2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bca6:	f1b8 0f00 	cmp.w	r8, #0
 800bcaa:	d0f3      	beq.n	800bc94 <HAL_SPI_Transmit+0x30>
 800bcac:	2f00      	cmp	r7, #0
 800bcae:	d0f1      	beq.n	800bc94 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bcb0:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bcb2:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bcb4:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bcb8:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bcba:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bcbc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bcc0:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bcc4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bcc8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bcca:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bccc:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bcce:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bcd0:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bcd2:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bcd4:	f000 8085 	beq.w	800bde2 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bcd8:	6803      	ldr	r3, [r0, #0]
 800bcda:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bcdc:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bcde:	d403      	bmi.n	800bce8 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bce0:	6803      	ldr	r3, [r0, #0]
 800bce2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bce6:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bce8:	68e3      	ldr	r3, [r4, #12]
 800bcea:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bcee:	d04b      	beq.n	800bd88 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bcf0:	6863      	ldr	r3, [r4, #4]
 800bcf2:	2b00      	cmp	r3, #0
 800bcf4:	f000 8097 	beq.w	800be26 <HAL_SPI_Transmit+0x1c2>
 800bcf8:	2f01      	cmp	r7, #1
 800bcfa:	f000 8094 	beq.w	800be26 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bcfe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd00:	b29b      	uxth	r3, r3
 800bd02:	b1ab      	cbz	r3, 800bd30 <HAL_SPI_Transmit+0xcc>
 800bd04:	1c68      	adds	r0, r5, #1
 800bd06:	f040 8083 	bne.w	800be10 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bd0a:	6823      	ldr	r3, [r4, #0]
 800bd0c:	689a      	ldr	r2, [r3, #8]
 800bd0e:	0791      	lsls	r1, r2, #30
 800bd10:	f140 8094 	bpl.w	800be3c <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bd14:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bd16:	7812      	ldrb	r2, [r2, #0]
 800bd18:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bd1a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd1c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd1e:	3901      	subs	r1, #1
 800bd20:	b289      	uxth	r1, r1
 800bd22:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bd24:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd26:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bd28:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd2a:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bd2c:	2900      	cmp	r1, #0
 800bd2e:	d1ec      	bne.n	800bd0a <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bd30:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bd32:	4b5b      	ldr	r3, [pc, #364]	; (800bea0 <HAL_SPI_Transmit+0x23c>)
 800bd34:	4a5b      	ldr	r2, [pc, #364]	; (800bea4 <HAL_SPI_Transmit+0x240>)
 800bd36:	681b      	ldr	r3, [r3, #0]
 800bd38:	fba2 2303 	umull	r2, r3, r2, r3
 800bd3c:	0d5b      	lsrs	r3, r3, #21
 800bd3e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bd42:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bd46:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bd4a:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bd4c:	d107      	bne.n	800bd5e <HAL_SPI_Transmit+0xfa>
 800bd4e:	e098      	b.n	800be82 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bd50:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bd52:	6822      	ldr	r2, [r4, #0]
      count--;
 800bd54:	3b01      	subs	r3, #1
 800bd56:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bd58:	6893      	ldr	r3, [r2, #8]
 800bd5a:	061b      	lsls	r3, r3, #24
 800bd5c:	d502      	bpl.n	800bd64 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bd5e:	9b01      	ldr	r3, [sp, #4]
 800bd60:	2b00      	cmp	r3, #0
 800bd62:	d1f5      	bne.n	800bd50 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bd64:	68a3      	ldr	r3, [r4, #8]
 800bd66:	b933      	cbnz	r3, 800bd76 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bd68:	6822      	ldr	r2, [r4, #0]
 800bd6a:	9300      	str	r3, [sp, #0]
 800bd6c:	68d3      	ldr	r3, [r2, #12]
 800bd6e:	9300      	str	r3, [sp, #0]
 800bd70:	6893      	ldr	r3, [r2, #8]
 800bd72:	9300      	str	r3, [sp, #0]
 800bd74:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bd76:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bd78:	3800      	subs	r0, #0
 800bd7a:	bf18      	it	ne
 800bd7c:	2001      	movne	r0, #1
error:
 800bd7e:	e789      	b.n	800bc94 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800bd80:	2002      	movs	r0, #2
}
 800bd82:	b002      	add	sp, #8
 800bd84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bd88:	6861      	ldr	r1, [r4, #4]
 800bd8a:	2900      	cmp	r1, #0
 800bd8c:	d176      	bne.n	800be7c <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bd8e:	4643      	mov	r3, r8
 800bd90:	f833 7b02 	ldrh.w	r7, [r3], #2
 800bd94:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bd96:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bd98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd9a:	3b01      	subs	r3, #1
 800bd9c:	b29b      	uxth	r3, r3
 800bd9e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bda0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bda2:	b29b      	uxth	r3, r3
 800bda4:	2b00      	cmp	r3, #0
 800bda6:	d0c4      	beq.n	800bd32 <HAL_SPI_Transmit+0xce>
 800bda8:	1c6b      	adds	r3, r5, #1
 800bdaa:	d15e      	bne.n	800be6a <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bdac:	6883      	ldr	r3, [r0, #8]
 800bdae:	079f      	lsls	r7, r3, #30
 800bdb0:	d50f      	bpl.n	800bdd2 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bdb2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bdb4:	f832 3b02 	ldrh.w	r3, [r2], #2
 800bdb8:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800bdba:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bdbc:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bdbe:	3b01      	subs	r3, #1
 800bdc0:	b29b      	uxth	r3, r3
 800bdc2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bdc4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bdc6:	b29b      	uxth	r3, r3
 800bdc8:	2b00      	cmp	r3, #0
 800bdca:	d0b1      	beq.n	800bd30 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bdcc:	6883      	ldr	r3, [r0, #8]
 800bdce:	079f      	lsls	r7, r3, #30
 800bdd0:	d4ef      	bmi.n	800bdb2 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bdd2:	f7fc ffc5 	bl	8008d60 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bdd6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bdd8:	b29b      	uxth	r3, r3
 800bdda:	2b00      	cmp	r3, #0
 800bddc:	d0a8      	beq.n	800bd30 <HAL_SPI_Transmit+0xcc>
 800bdde:	6820      	ldr	r0, [r4, #0]
 800bde0:	e7e4      	b.n	800bdac <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800bde2:	6803      	ldr	r3, [r0, #0]
 800bde4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bde8:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800bdea:	6803      	ldr	r3, [r0, #0]
 800bdec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800bdf0:	6003      	str	r3, [r0, #0]
 800bdf2:	e771      	b.n	800bcd8 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bdf4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bdf6:	7812      	ldrb	r2, [r2, #0]
 800bdf8:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bdfa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bdfc:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bdfe:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800be00:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800be02:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800be04:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800be06:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800be08:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be0a:	b29b      	uxth	r3, r3
 800be0c:	2b00      	cmp	r3, #0
 800be0e:	d08f      	beq.n	800bd30 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800be10:	6823      	ldr	r3, [r4, #0]
 800be12:	689a      	ldr	r2, [r3, #8]
 800be14:	0792      	lsls	r2, r2, #30
 800be16:	d4ed      	bmi.n	800bdf4 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800be18:	f7fc ffa2 	bl	8008d60 <HAL_GetTick>
 800be1c:	1b80      	subs	r0, r0, r6
 800be1e:	42a8      	cmp	r0, r5
 800be20:	d3f2      	bcc.n	800be08 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800be22:	2003      	movs	r0, #3
 800be24:	e736      	b.n	800bc94 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800be26:	f898 3000 	ldrb.w	r3, [r8]
 800be2a:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800be2c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800be2e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800be30:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800be32:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800be34:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800be36:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800be38:	86e3      	strh	r3, [r4, #54]	; 0x36
 800be3a:	e760      	b.n	800bcfe <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800be3c:	f7fc ff90 	bl	8008d60 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800be40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be42:	b29b      	uxth	r3, r3
 800be44:	2b00      	cmp	r3, #0
 800be46:	f47f af60 	bne.w	800bd0a <HAL_SPI_Transmit+0xa6>
 800be4a:	e771      	b.n	800bd30 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800be4c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800be4e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800be52:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800be54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800be56:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800be58:	3b01      	subs	r3, #1
 800be5a:	b29b      	uxth	r3, r3
 800be5c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800be5e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be60:	b29b      	uxth	r3, r3
 800be62:	2b00      	cmp	r3, #0
 800be64:	f43f af64 	beq.w	800bd30 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800be68:	6822      	ldr	r2, [r4, #0]
 800be6a:	6893      	ldr	r3, [r2, #8]
 800be6c:	0799      	lsls	r1, r3, #30
 800be6e:	d4ed      	bmi.n	800be4c <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800be70:	f7fc ff76 	bl	8008d60 <HAL_GetTick>
 800be74:	1b80      	subs	r0, r0, r6
 800be76:	42a8      	cmp	r0, r5
 800be78:	d3f1      	bcc.n	800be5e <HAL_SPI_Transmit+0x1fa>
 800be7a:	e7d2      	b.n	800be22 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800be7c:	2f01      	cmp	r7, #1
 800be7e:	d18f      	bne.n	800bda0 <HAL_SPI_Transmit+0x13c>
 800be80:	e785      	b.n	800bd8e <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800be82:	4633      	mov	r3, r6
 800be84:	462a      	mov	r2, r5
 800be86:	2180      	movs	r1, #128	; 0x80
 800be88:	4620      	mov	r0, r4
 800be8a:	f7ff fdef 	bl	800ba6c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800be8e:	2800      	cmp	r0, #0
 800be90:	f43f af68 	beq.w	800bd64 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800be94:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800be96:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800be98:	4313      	orrs	r3, r2
 800be9a:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800be9c:	6562      	str	r2, [r4, #84]	; 0x54
 800be9e:	e761      	b.n	800bd64 <HAL_SPI_Transmit+0x100>
 800bea0:	20000094 	.word	0x20000094
 800bea4:	165e9f81 	.word	0x165e9f81

0800bea8 <HAL_SPI_TransmitReceive>:
{
 800bea8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800beac:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800beae:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800beb2:	2801      	cmp	r0, #1
{
 800beb4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800beb6:	f000 80ac 	beq.w	800c012 <HAL_SPI_TransmitReceive+0x16a>
 800beba:	461e      	mov	r6, r3
 800bebc:	2301      	movs	r3, #1
 800bebe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bec2:	4690      	mov	r8, r2
 800bec4:	460f      	mov	r7, r1
 800bec6:	f7fc ff4b 	bl	8008d60 <HAL_GetTick>
 800beca:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800becc:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800bed0:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bed2:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800bed4:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bed6:	d011      	beq.n	800befc <HAL_SPI_TransmitReceive+0x54>
 800bed8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bedc:	d009      	beq.n	800bef2 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800bede:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bee0:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bee2:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bee4:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bee8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800beec:	b002      	add	sp, #8
 800beee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800bef2:	68a1      	ldr	r1, [r4, #8]
 800bef4:	2900      	cmp	r1, #0
 800bef6:	d1f2      	bne.n	800bede <HAL_SPI_TransmitReceive+0x36>
 800bef8:	2a04      	cmp	r2, #4
 800befa:	d1f0      	bne.n	800bede <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800befc:	2f00      	cmp	r7, #0
 800befe:	f000 808c 	beq.w	800c01a <HAL_SPI_TransmitReceive+0x172>
 800bf02:	f1b8 0f00 	cmp.w	r8, #0
 800bf06:	f000 8088 	beq.w	800c01a <HAL_SPI_TransmitReceive+0x172>
 800bf0a:	2e00      	cmp	r6, #0
 800bf0c:	f000 8085 	beq.w	800c01a <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bf10:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800bf14:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bf18:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800bf1a:	bf1c      	itt	ne
 800bf1c:	2205      	movne	r2, #5
 800bf1e:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bf22:	2200      	movs	r2, #0
 800bf24:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800bf26:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf2a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800bf2c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800bf2e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf30:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800bf32:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf34:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800bf36:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800bf38:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf3a:	d403      	bmi.n	800bf44 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800bf3c:	6811      	ldr	r1, [r2, #0]
 800bf3e:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800bf42:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bf44:	68e1      	ldr	r1, [r4, #12]
 800bf46:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800bf4a:	f000 809e 	beq.w	800c08a <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf4e:	2b00      	cmp	r3, #0
 800bf50:	f000 8091 	beq.w	800c076 <HAL_SPI_TransmitReceive+0x1ce>
 800bf54:	2e01      	cmp	r6, #1
 800bf56:	f000 808e 	beq.w	800c076 <HAL_SPI_TransmitReceive+0x1ce>
 800bf5a:	9b08      	ldr	r3, [sp, #32]
 800bf5c:	3301      	adds	r3, #1
        txallowed = 1U;
 800bf5e:	f04f 0601 	mov.w	r6, #1
 800bf62:	d028      	beq.n	800bfb6 <HAL_SPI_TransmitReceive+0x10e>
 800bf64:	e05b      	b.n	800c01e <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bf66:	6821      	ldr	r1, [r4, #0]
 800bf68:	688b      	ldr	r3, [r1, #8]
 800bf6a:	0798      	lsls	r0, r3, #30
 800bf6c:	d50f      	bpl.n	800bf8e <HAL_SPI_TransmitReceive+0xe6>
 800bf6e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf70:	b29b      	uxth	r3, r3
 800bf72:	b163      	cbz	r3, 800bf8e <HAL_SPI_TransmitReceive+0xe6>
 800bf74:	b15e      	cbz	r6, 800bf8e <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bf76:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bf78:	781b      	ldrb	r3, [r3, #0]
 800bf7a:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800bf7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bf7e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf80:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800bf82:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800bf84:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bf86:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800bf88:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800bf8a:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bf8c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf8e:	688a      	ldr	r2, [r1, #8]
 800bf90:	f012 0201 	ands.w	r2, r2, #1
 800bf94:	d00d      	beq.n	800bfb2 <HAL_SPI_TransmitReceive+0x10a>
 800bf96:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bf98:	b29b      	uxth	r3, r3
 800bf9a:	b153      	cbz	r3, 800bfb2 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800bf9c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800bf9e:	68c9      	ldr	r1, [r1, #12]
 800bfa0:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800bfa2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800bfa4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bfa6:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800bfa8:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800bfaa:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800bfac:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bfae:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800bfb0:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bfb2:	f7fc fed5 	bl	8008d60 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bfb6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bfb8:	b292      	uxth	r2, r2
 800bfba:	2a00      	cmp	r2, #0
 800bfbc:	d1d3      	bne.n	800bf66 <HAL_SPI_TransmitReceive+0xbe>
 800bfbe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bfc0:	b29b      	uxth	r3, r3
 800bfc2:	2b00      	cmp	r3, #0
 800bfc4:	d1cf      	bne.n	800bf66 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bfc6:	4b79      	ldr	r3, [pc, #484]	; (800c1ac <HAL_SPI_TransmitReceive+0x304>)
 800bfc8:	4a79      	ldr	r2, [pc, #484]	; (800c1b0 <HAL_SPI_TransmitReceive+0x308>)
 800bfca:	681b      	ldr	r3, [r3, #0]
 800bfcc:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bfd0:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bfd2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800bfd6:	0d5b      	lsrs	r3, r3, #21
 800bfd8:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bfdc:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bfe0:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bfe2:	d107      	bne.n	800bff4 <HAL_SPI_TransmitReceive+0x14c>
 800bfe4:	e0d2      	b.n	800c18c <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800bfe6:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bfe8:	6822      	ldr	r2, [r4, #0]
      count--;
 800bfea:	3b01      	subs	r3, #1
 800bfec:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bfee:	6893      	ldr	r3, [r2, #8]
 800bff0:	061b      	lsls	r3, r3, #24
 800bff2:	d502      	bpl.n	800bffa <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800bff4:	9b01      	ldr	r3, [sp, #4]
 800bff6:	2b00      	cmp	r3, #0
 800bff8:	d1f5      	bne.n	800bfe6 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bffa:	68a0      	ldr	r0, [r4, #8]
 800bffc:	2800      	cmp	r0, #0
 800bffe:	f040 8082 	bne.w	800c106 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c002:	6823      	ldr	r3, [r4, #0]
 800c004:	9000      	str	r0, [sp, #0]
 800c006:	68da      	ldr	r2, [r3, #12]
 800c008:	9200      	str	r2, [sp, #0]
 800c00a:	689b      	ldr	r3, [r3, #8]
 800c00c:	9300      	str	r3, [sp, #0]
 800c00e:	9b00      	ldr	r3, [sp, #0]
 800c010:	e766      	b.n	800bee0 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c012:	2002      	movs	r0, #2
}
 800c014:	b002      	add	sp, #8
 800c016:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c01a:	2001      	movs	r0, #1
 800c01c:	e760      	b.n	800bee0 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c01e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c020:	b29b      	uxth	r3, r3
 800c022:	b91b      	cbnz	r3, 800c02c <HAL_SPI_TransmitReceive+0x184>
 800c024:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c026:	b29b      	uxth	r3, r3
 800c028:	2b00      	cmp	r3, #0
 800c02a:	d0cc      	beq.n	800bfc6 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c02c:	6822      	ldr	r2, [r4, #0]
 800c02e:	6893      	ldr	r3, [r2, #8]
 800c030:	0799      	lsls	r1, r3, #30
 800c032:	d50f      	bpl.n	800c054 <HAL_SPI_TransmitReceive+0x1ac>
 800c034:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c036:	b29b      	uxth	r3, r3
 800c038:	b163      	cbz	r3, 800c054 <HAL_SPI_TransmitReceive+0x1ac>
 800c03a:	b15e      	cbz	r6, 800c054 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c03c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c03e:	781b      	ldrb	r3, [r3, #0]
 800c040:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c042:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c044:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c046:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c048:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c04a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c04c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c04e:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c050:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c052:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c054:	6893      	ldr	r3, [r2, #8]
 800c056:	f013 0301 	ands.w	r3, r3, #1
 800c05a:	d004      	beq.n	800c066 <HAL_SPI_TransmitReceive+0x1be>
 800c05c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c05e:	b289      	uxth	r1, r1
 800c060:	2900      	cmp	r1, #0
 800c062:	f040 8087 	bne.w	800c174 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c066:	f7fc fe7b 	bl	8008d60 <HAL_GetTick>
 800c06a:	9b08      	ldr	r3, [sp, #32]
 800c06c:	1b40      	subs	r0, r0, r5
 800c06e:	4298      	cmp	r0, r3
 800c070:	d3d5      	bcc.n	800c01e <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c072:	2003      	movs	r0, #3
 800c074:	e734      	b.n	800bee0 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c076:	783b      	ldrb	r3, [r7, #0]
 800c078:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c07a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c07c:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c07e:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c080:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c082:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c084:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c086:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c088:	e767      	b.n	800bf5a <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c08a:	2b00      	cmp	r3, #0
 800c08c:	d13d      	bne.n	800c10a <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c08e:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c092:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c094:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c096:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c098:	3b01      	subs	r3, #1
 800c09a:	b29b      	uxth	r3, r3
 800c09c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c09e:	9b08      	ldr	r3, [sp, #32]
 800c0a0:	3301      	adds	r3, #1
{
 800c0a2:	f04f 0601 	mov.w	r6, #1
 800c0a6:	d025      	beq.n	800c0f4 <HAL_SPI_TransmitReceive+0x24c>
 800c0a8:	e032      	b.n	800c110 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c0aa:	6823      	ldr	r3, [r4, #0]
 800c0ac:	689a      	ldr	r2, [r3, #8]
 800c0ae:	0792      	lsls	r2, r2, #30
 800c0b0:	d50d      	bpl.n	800c0ce <HAL_SPI_TransmitReceive+0x226>
 800c0b2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c0b4:	b292      	uxth	r2, r2
 800c0b6:	b152      	cbz	r2, 800c0ce <HAL_SPI_TransmitReceive+0x226>
 800c0b8:	b14e      	cbz	r6, 800c0ce <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c0ba:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c0bc:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c0c0:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c0c2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c0c4:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c0c6:	3a01      	subs	r2, #1
 800c0c8:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c0ca:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c0cc:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c0ce:	689a      	ldr	r2, [r3, #8]
 800c0d0:	f012 0201 	ands.w	r2, r2, #1
 800c0d4:	d00c      	beq.n	800c0f0 <HAL_SPI_TransmitReceive+0x248>
 800c0d6:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c0d8:	b289      	uxth	r1, r1
 800c0da:	b149      	cbz	r1, 800c0f0 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c0dc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c0de:	68db      	ldr	r3, [r3, #12]
 800c0e0:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c0e4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c0e6:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c0e8:	3b01      	subs	r3, #1
 800c0ea:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c0ec:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c0ee:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c0f0:	f7fc fe36 	bl	8008d60 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c0f4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0f6:	b29b      	uxth	r3, r3
 800c0f8:	2b00      	cmp	r3, #0
 800c0fa:	d1d6      	bne.n	800c0aa <HAL_SPI_TransmitReceive+0x202>
 800c0fc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c0fe:	b29b      	uxth	r3, r3
 800c100:	2b00      	cmp	r3, #0
 800c102:	d1d2      	bne.n	800c0aa <HAL_SPI_TransmitReceive+0x202>
 800c104:	e75f      	b.n	800bfc6 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c106:	2000      	movs	r0, #0
 800c108:	e6ea      	b.n	800bee0 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c10a:	2e01      	cmp	r6, #1
 800c10c:	d1c7      	bne.n	800c09e <HAL_SPI_TransmitReceive+0x1f6>
 800c10e:	e7be      	b.n	800c08e <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c110:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c112:	b29b      	uxth	r3, r3
 800c114:	b923      	cbnz	r3, 800c120 <HAL_SPI_TransmitReceive+0x278>
 800c116:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c118:	b29b      	uxth	r3, r3
 800c11a:	2b00      	cmp	r3, #0
 800c11c:	f43f af53 	beq.w	800bfc6 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c120:	6822      	ldr	r2, [r4, #0]
 800c122:	6893      	ldr	r3, [r2, #8]
 800c124:	079f      	lsls	r7, r3, #30
 800c126:	d50d      	bpl.n	800c144 <HAL_SPI_TransmitReceive+0x29c>
 800c128:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c12a:	b29b      	uxth	r3, r3
 800c12c:	b153      	cbz	r3, 800c144 <HAL_SPI_TransmitReceive+0x29c>
 800c12e:	b14e      	cbz	r6, 800c144 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c130:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c132:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c136:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c138:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c13a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c13c:	3b01      	subs	r3, #1
 800c13e:	b29b      	uxth	r3, r3
 800c140:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c142:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c144:	6893      	ldr	r3, [r2, #8]
 800c146:	f013 0301 	ands.w	r3, r3, #1
 800c14a:	d00c      	beq.n	800c166 <HAL_SPI_TransmitReceive+0x2be>
 800c14c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c14e:	b289      	uxth	r1, r1
 800c150:	b149      	cbz	r1, 800c166 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c152:	68d1      	ldr	r1, [r2, #12]
 800c154:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c156:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c15a:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c15c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c15e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c160:	3b01      	subs	r3, #1
 800c162:	b29b      	uxth	r3, r3
 800c164:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c166:	f7fc fdfb 	bl	8008d60 <HAL_GetTick>
 800c16a:	9b08      	ldr	r3, [sp, #32]
 800c16c:	1b40      	subs	r0, r0, r5
 800c16e:	4298      	cmp	r0, r3
 800c170:	d3ce      	bcc.n	800c110 <HAL_SPI_TransmitReceive+0x268>
 800c172:	e77e      	b.n	800c072 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c174:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c176:	68d2      	ldr	r2, [r2, #12]
 800c178:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c17a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c17c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c17e:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c180:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c182:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c184:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c186:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c188:	461e      	mov	r6, r3
 800c18a:	e76c      	b.n	800c066 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c18c:	9a08      	ldr	r2, [sp, #32]
 800c18e:	462b      	mov	r3, r5
 800c190:	2180      	movs	r1, #128	; 0x80
 800c192:	4620      	mov	r0, r4
 800c194:	f7ff fc6a 	bl	800ba6c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c198:	2800      	cmp	r0, #0
 800c19a:	f43f af2e 	beq.w	800bffa <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c19e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c1a0:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c1a2:	4313      	orrs	r3, r2
 800c1a4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c1a6:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c1a8:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c1aa:	e699      	b.n	800bee0 <HAL_SPI_TransmitReceive+0x38>
 800c1ac:	20000094 	.word	0x20000094
 800c1b0:	165e9f81 	.word	0x165e9f81

0800c1b4 <HAL_SPI_Receive>:
{
 800c1b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c1b8:	6846      	ldr	r6, [r0, #4]
 800c1ba:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c1be:	b082      	sub	sp, #8
 800c1c0:	4604      	mov	r4, r0
 800c1c2:	4690      	mov	r8, r2
 800c1c4:	461d      	mov	r5, r3
 800c1c6:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c1c8:	d06e      	beq.n	800c2a8 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c1ca:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c1ce:	2b01      	cmp	r3, #1
 800c1d0:	d076      	beq.n	800c2c0 <HAL_SPI_Receive+0x10c>
 800c1d2:	2301      	movs	r3, #1
 800c1d4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c1d8:	f7fc fdc2 	bl	8008d60 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c1dc:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c1e0:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c1e4:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c1e6:	fa5f f08c 	uxtb.w	r0, ip
 800c1ea:	d009      	beq.n	800c200 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c1ec:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c1ee:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c1f0:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c1f2:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c1f6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c1fa:	b002      	add	sp, #8
 800c1fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c200:	2f00      	cmp	r7, #0
 800c202:	d0f4      	beq.n	800c1ee <HAL_SPI_Receive+0x3a>
 800c204:	f1b8 0f00 	cmp.w	r8, #0
 800c208:	d0f1      	beq.n	800c1ee <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c20a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c20c:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c20e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c212:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c214:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c218:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c21c:	f04f 0104 	mov.w	r1, #4
 800c220:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c224:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c228:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c22a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c22c:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c22e:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c232:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c234:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c236:	d107      	bne.n	800c248 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c238:	6811      	ldr	r1, [r2, #0]
 800c23a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c23e:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c240:	6811      	ldr	r1, [r2, #0]
 800c242:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c246:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c248:	6811      	ldr	r1, [r2, #0]
 800c24a:	0648      	lsls	r0, r1, #25
 800c24c:	d403      	bmi.n	800c256 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c24e:	6811      	ldr	r1, [r2, #0]
 800c250:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c254:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c256:	68e1      	ldr	r1, [r4, #12]
 800c258:	2900      	cmp	r1, #0
 800c25a:	d054      	beq.n	800c306 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c25c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c25e:	b289      	uxth	r1, r1
 800c260:	b1a9      	cbz	r1, 800c28e <HAL_SPI_Receive+0xda>
 800c262:	1c69      	adds	r1, r5, #1
 800c264:	d13e      	bne.n	800c2e4 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c266:	6893      	ldr	r3, [r2, #8]
 800c268:	07db      	lsls	r3, r3, #31
 800c26a:	d544      	bpl.n	800c2f6 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c26c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c26e:	68d1      	ldr	r1, [r2, #12]
 800c270:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c274:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c278:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c27a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c27e:	fa1f fc8c 	uxth.w	ip, ip
 800c282:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c286:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c288:	b29b      	uxth	r3, r3
 800c28a:	2b00      	cmp	r3, #0
 800c28c:	d1eb      	bne.n	800c266 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c28e:	4632      	mov	r2, r6
 800c290:	4629      	mov	r1, r5
 800c292:	4620      	mov	r0, r4
 800c294:	f7ff fc48 	bl	800bb28 <SPI_EndRxTransaction>
 800c298:	b108      	cbz	r0, 800c29e <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c29a:	2320      	movs	r3, #32
 800c29c:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c29e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c2a0:	3800      	subs	r0, #0
 800c2a2:	bf18      	it	ne
 800c2a4:	2001      	movne	r0, #1
error :
 800c2a6:	e7a2      	b.n	800c1ee <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c2a8:	6883      	ldr	r3, [r0, #8]
 800c2aa:	2b00      	cmp	r3, #0
 800c2ac:	d18d      	bne.n	800c1ca <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c2ae:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c2b0:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c2b2:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c2b4:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c2b8:	460a      	mov	r2, r1
 800c2ba:	f7ff fdf5 	bl	800bea8 <HAL_SPI_TransmitReceive>
 800c2be:	e79c      	b.n	800c1fa <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c2c0:	2002      	movs	r0, #2
}
 800c2c2:	b002      	add	sp, #8
 800c2c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c2c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c2ca:	68db      	ldr	r3, [r3, #12]
 800c2cc:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c2d0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c2d2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c2d4:	3b01      	subs	r3, #1
 800c2d6:	b29b      	uxth	r3, r3
 800c2d8:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c2da:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c2dc:	b29b      	uxth	r3, r3
 800c2de:	2b00      	cmp	r3, #0
 800c2e0:	d0d5      	beq.n	800c28e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c2e2:	6823      	ldr	r3, [r4, #0]
 800c2e4:	689a      	ldr	r2, [r3, #8]
 800c2e6:	07d2      	lsls	r2, r2, #31
 800c2e8:	d4ee      	bmi.n	800c2c8 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c2ea:	f7fc fd39 	bl	8008d60 <HAL_GetTick>
 800c2ee:	1b80      	subs	r0, r0, r6
 800c2f0:	42a8      	cmp	r0, r5
 800c2f2:	d243      	bcs.n	800c37c <HAL_SPI_Receive+0x1c8>
 800c2f4:	e7f1      	b.n	800c2da <HAL_SPI_Receive+0x126>
 800c2f6:	f7fc fd33 	bl	8008d60 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c2fa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c2fc:	b29b      	uxth	r3, r3
 800c2fe:	2b00      	cmp	r3, #0
 800c300:	d0c5      	beq.n	800c28e <HAL_SPI_Receive+0xda>
 800c302:	6822      	ldr	r2, [r4, #0]
 800c304:	e7af      	b.n	800c266 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c306:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c308:	b292      	uxth	r2, r2
 800c30a:	2a00      	cmp	r2, #0
 800c30c:	d0bf      	beq.n	800c28e <HAL_SPI_Receive+0xda>
 800c30e:	1c6f      	adds	r7, r5, #1
 800c310:	d013      	beq.n	800c33a <HAL_SPI_Receive+0x186>
 800c312:	e02b      	b.n	800c36c <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c314:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c316:	7b1b      	ldrb	r3, [r3, #12]
 800c318:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c31a:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c31e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c320:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c324:	fa1f fc8c 	uxth.w	ip, ip
 800c328:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c32c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c32e:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c330:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c332:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c334:	2b00      	cmp	r3, #0
 800c336:	d0aa      	beq.n	800c28e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c338:	6823      	ldr	r3, [r4, #0]
 800c33a:	689a      	ldr	r2, [r3, #8]
 800c33c:	07d0      	lsls	r0, r2, #31
 800c33e:	d4e9      	bmi.n	800c314 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c340:	f7fc fd0e 	bl	8008d60 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c344:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c346:	b29b      	uxth	r3, r3
 800c348:	2b00      	cmp	r3, #0
 800c34a:	d1f5      	bne.n	800c338 <HAL_SPI_Receive+0x184>
 800c34c:	e79f      	b.n	800c28e <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c34e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c350:	7b1b      	ldrb	r3, [r3, #12]
 800c352:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c354:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c356:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c358:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c35a:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c35c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c35e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c360:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c362:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c364:	b29b      	uxth	r3, r3
 800c366:	2b00      	cmp	r3, #0
 800c368:	d091      	beq.n	800c28e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c36a:	6823      	ldr	r3, [r4, #0]
 800c36c:	689a      	ldr	r2, [r3, #8]
 800c36e:	07d1      	lsls	r1, r2, #31
 800c370:	d4ed      	bmi.n	800c34e <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c372:	f7fc fcf5 	bl	8008d60 <HAL_GetTick>
 800c376:	1b80      	subs	r0, r0, r6
 800c378:	42a8      	cmp	r0, r5
 800c37a:	d3f2      	bcc.n	800c362 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c37c:	2003      	movs	r0, #3
 800c37e:	e736      	b.n	800c1ee <HAL_SPI_Receive+0x3a>

0800c380 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c380:	2800      	cmp	r0, #0
 800c382:	f000 8087 	beq.w	800c494 <HAL_TIM_Base_Init+0x114>
{
 800c386:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c388:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c38c:	4604      	mov	r4, r0
 800c38e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c392:	2b00      	cmp	r3, #0
 800c394:	d079      	beq.n	800c48a <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c396:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c398:	493f      	ldr	r1, [pc, #252]	; (800c498 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c39a:	2302      	movs	r3, #2
 800c39c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c3a0:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c3a2:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c3a4:	d05d      	beq.n	800c462 <HAL_TIM_Base_Init+0xe2>
 800c3a6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c3aa:	d031      	beq.n	800c410 <HAL_TIM_Base_Init+0x90>
 800c3ac:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c3b0:	428a      	cmp	r2, r1
 800c3b2:	d02d      	beq.n	800c410 <HAL_TIM_Base_Init+0x90>
 800c3b4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c3b8:	428a      	cmp	r2, r1
 800c3ba:	d029      	beq.n	800c410 <HAL_TIM_Base_Init+0x90>
 800c3bc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c3c0:	428a      	cmp	r2, r1
 800c3c2:	d025      	beq.n	800c410 <HAL_TIM_Base_Init+0x90>
 800c3c4:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c3c8:	428a      	cmp	r2, r1
 800c3ca:	d04a      	beq.n	800c462 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c3cc:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c3d0:	428a      	cmp	r2, r1
 800c3d2:	d021      	beq.n	800c418 <HAL_TIM_Base_Init+0x98>
 800c3d4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c3d8:	428a      	cmp	r2, r1
 800c3da:	d01d      	beq.n	800c418 <HAL_TIM_Base_Init+0x98>
 800c3dc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c3e0:	428a      	cmp	r2, r1
 800c3e2:	d019      	beq.n	800c418 <HAL_TIM_Base_Init+0x98>
 800c3e4:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c3e8:	428a      	cmp	r2, r1
 800c3ea:	d015      	beq.n	800c418 <HAL_TIM_Base_Init+0x98>
 800c3ec:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c3f0:	428a      	cmp	r2, r1
 800c3f2:	d011      	beq.n	800c418 <HAL_TIM_Base_Init+0x98>
 800c3f4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c3f8:	428a      	cmp	r2, r1
 800c3fa:	d00d      	beq.n	800c418 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c3fc:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c3fe:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c400:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c404:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c406:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c408:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c40a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c40c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c40e:	e010      	b.n	800c432 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c410:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c412:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c416:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c418:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c41a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c41c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c420:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c422:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c426:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c428:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c42a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c42c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c42e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c430:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c432:	2301      	movs	r3, #1
 800c434:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c436:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c43a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c43e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c442:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c446:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c44a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c44e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c452:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c456:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c45a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c45e:	2000      	movs	r0, #0
}
 800c460:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c462:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c464:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c466:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c46a:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c46c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c470:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c472:	69a1      	ldr	r1, [r4, #24]
 800c474:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c478:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c47a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c47c:	68e3      	ldr	r3, [r4, #12]
 800c47e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c480:	6863      	ldr	r3, [r4, #4]
 800c482:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c484:	6963      	ldr	r3, [r4, #20]
 800c486:	6313      	str	r3, [r2, #48]	; 0x30
 800c488:	e7d3      	b.n	800c432 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c48a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c48e:	f7f5 fa37 	bl	8001900 <HAL_TIM_Base_MspInit>
 800c492:	e780      	b.n	800c396 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c494:	2001      	movs	r0, #1
}
 800c496:	4770      	bx	lr
 800c498:	40010000 	.word	0x40010000

0800c49c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c49c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c4a0:	2b01      	cmp	r3, #1
 800c4a2:	d12f      	bne.n	800c504 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c4a4:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c4a6:	4919      	ldr	r1, [pc, #100]	; (800c50c <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c4a8:	2202      	movs	r2, #2
 800c4aa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c4ae:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c4b0:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c4b2:	f042 0201 	orr.w	r2, r2, #1
 800c4b6:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c4b8:	d019      	beq.n	800c4ee <HAL_TIM_Base_Start_IT+0x52>
 800c4ba:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c4be:	d016      	beq.n	800c4ee <HAL_TIM_Base_Start_IT+0x52>
 800c4c0:	4a13      	ldr	r2, [pc, #76]	; (800c510 <HAL_TIM_Base_Start_IT+0x74>)
 800c4c2:	4293      	cmp	r3, r2
 800c4c4:	d013      	beq.n	800c4ee <HAL_TIM_Base_Start_IT+0x52>
 800c4c6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c4ca:	4293      	cmp	r3, r2
 800c4cc:	d00f      	beq.n	800c4ee <HAL_TIM_Base_Start_IT+0x52>
 800c4ce:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c4d2:	4293      	cmp	r3, r2
 800c4d4:	d00b      	beq.n	800c4ee <HAL_TIM_Base_Start_IT+0x52>
 800c4d6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c4da:	4293      	cmp	r3, r2
 800c4dc:	d007      	beq.n	800c4ee <HAL_TIM_Base_Start_IT+0x52>
 800c4de:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c4e2:	4293      	cmp	r3, r2
 800c4e4:	d003      	beq.n	800c4ee <HAL_TIM_Base_Start_IT+0x52>
 800c4e6:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c4ea:	4293      	cmp	r3, r2
 800c4ec:	d104      	bne.n	800c4f8 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c4ee:	689a      	ldr	r2, [r3, #8]
 800c4f0:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c4f4:	2a06      	cmp	r2, #6
 800c4f6:	d007      	beq.n	800c508 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c4f8:	681a      	ldr	r2, [r3, #0]
 800c4fa:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c4fe:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c500:	601a      	str	r2, [r3, #0]
 800c502:	4770      	bx	lr
    return HAL_ERROR;
 800c504:	2001      	movs	r0, #1
 800c506:	4770      	bx	lr
  return HAL_OK;
 800c508:	2000      	movs	r0, #0
}
 800c50a:	4770      	bx	lr
 800c50c:	40010000 	.word	0x40010000
 800c510:	40000400 	.word	0x40000400

0800c514 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c514:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c518:	2b01      	cmp	r3, #1
 800c51a:	d075      	beq.n	800c608 <HAL_TIM_ConfigClockSource+0xf4>
 800c51c:	4602      	mov	r2, r0
{
 800c51e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c520:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c522:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c524:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c528:	2001      	movs	r0, #1
 800c52a:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c52e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c530:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c534:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c538:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c53a:	680b      	ldr	r3, [r1, #0]
 800c53c:	2b60      	cmp	r3, #96	; 0x60
 800c53e:	d065      	beq.n	800c60c <HAL_TIM_ConfigClockSource+0xf8>
 800c540:	d824      	bhi.n	800c58c <HAL_TIM_ConfigClockSource+0x78>
 800c542:	2b40      	cmp	r3, #64	; 0x40
 800c544:	d07c      	beq.n	800c640 <HAL_TIM_ConfigClockSource+0x12c>
 800c546:	d94b      	bls.n	800c5e0 <HAL_TIM_ConfigClockSource+0xcc>
 800c548:	2b50      	cmp	r3, #80	; 0x50
 800c54a:	d117      	bne.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c54c:	684b      	ldr	r3, [r1, #4]
 800c54e:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c550:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c552:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c556:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c558:	6a23      	ldr	r3, [r4, #32]
 800c55a:	f023 0301 	bic.w	r3, r3, #1
 800c55e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c560:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c562:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c566:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c56a:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c56c:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c56e:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c570:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c574:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c578:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c57a:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c57c:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c57e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c580:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c584:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c588:	bc30      	pop	{r4, r5}
 800c58a:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c58c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c590:	d038      	beq.n	800c604 <HAL_TIM_ConfigClockSource+0xf0>
 800c592:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c596:	d110      	bne.n	800c5ba <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c598:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c59c:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c59e:	432b      	orrs	r3, r5
 800c5a0:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c5a2:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5a6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c5aa:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c5ac:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c5ae:	68a3      	ldr	r3, [r4, #8]
 800c5b0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c5b4:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c5b6:	60a3      	str	r3, [r4, #8]
      break;
 800c5b8:	e7e0      	b.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c5ba:	2b70      	cmp	r3, #112	; 0x70
 800c5bc:	d1de      	bne.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5be:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c5c2:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5c4:	432b      	orrs	r3, r5
 800c5c6:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c5c8:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5cc:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c5d0:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c5d2:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c5d4:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c5d6:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c5da:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c5dc:	60a3      	str	r3, [r4, #8]
      break;
 800c5de:	e7cd      	b.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c5e0:	2b20      	cmp	r3, #32
 800c5e2:	d002      	beq.n	800c5ea <HAL_TIM_ConfigClockSource+0xd6>
 800c5e4:	d90a      	bls.n	800c5fc <HAL_TIM_ConfigClockSource+0xe8>
 800c5e6:	2b30      	cmp	r3, #48	; 0x30
 800c5e8:	d1c8      	bne.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c5ea:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c5ec:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c5f0:	430b      	orrs	r3, r1
 800c5f2:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c5f6:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c5f8:	60a3      	str	r3, [r4, #8]
}
 800c5fa:	e7bf      	b.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c5fc:	f033 0110 	bics.w	r1, r3, #16
 800c600:	d1bc      	bne.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
 800c602:	e7f2      	b.n	800c5ea <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c604:	2000      	movs	r0, #0
 800c606:	e7b9      	b.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c608:	2002      	movs	r0, #2
}
 800c60a:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c60c:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c60e:	6848      	ldr	r0, [r1, #4]
 800c610:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c612:	f023 0310 	bic.w	r3, r3, #16
 800c616:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c618:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c61a:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c61c:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c620:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c624:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c628:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c62c:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c62e:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c630:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c632:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c636:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c63a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c63c:	60a3      	str	r3, [r4, #8]
}
 800c63e:	e79d      	b.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c640:	684b      	ldr	r3, [r1, #4]
 800c642:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c644:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c646:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c64a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c64c:	6a23      	ldr	r3, [r4, #32]
 800c64e:	f023 0301 	bic.w	r3, r3, #1
 800c652:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c654:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c656:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c65a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c65e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c660:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c662:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c664:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c668:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c66c:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c66e:	60a3      	str	r3, [r4, #8]
}
 800c670:	e784      	b.n	800c57c <HAL_TIM_ConfigClockSource+0x68>
 800c672:	bf00      	nop

0800c674 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c674:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c678:	2a01      	cmp	r2, #1
 800c67a:	d050      	beq.n	800c71e <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c67c:	4603      	mov	r3, r0
{
 800c67e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c680:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c682:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c684:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c688:	2001      	movs	r0, #1
 800c68a:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c68e:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c690:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c692:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c694:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c698:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c69a:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c69e:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c6a0:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c6a2:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c6a4:	d060      	beq.n	800c768 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c6a6:	d90f      	bls.n	800c6c8 <HAL_TIM_SlaveConfigSynchro+0x54>
 800c6a8:	2860      	cmp	r0, #96	; 0x60
 800c6aa:	d03a      	beq.n	800c722 <HAL_TIM_SlaveConfigSynchro+0xae>
 800c6ac:	2870      	cmp	r0, #112	; 0x70
 800c6ae:	d10e      	bne.n	800c6ce <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c6b0:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c6b4:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c6b6:	432a      	orrs	r2, r5
 800c6b8:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c6ba:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c6be:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c6c2:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c6c4:	60a2      	str	r2, [r4, #8]
 800c6c6:	e00f      	b.n	800c6e8 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c6c8:	2840      	cmp	r0, #64	; 0x40
 800c6ca:	d03d      	beq.n	800c748 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c6cc:	d907      	bls.n	800c6de <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c6ce:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c6d0:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c6d2:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c6d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c6da:	bc30      	pop	{r4, r5}
 800c6dc:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c6de:	2820      	cmp	r0, #32
 800c6e0:	d002      	beq.n	800c6e8 <HAL_TIM_SlaveConfigSynchro+0x74>
 800c6e2:	d912      	bls.n	800c70a <HAL_TIM_SlaveConfigSynchro+0x96>
 800c6e4:	2830      	cmp	r0, #48	; 0x30
 800c6e6:	d1f2      	bne.n	800c6ce <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800c6e8:	68e2      	ldr	r2, [r4, #12]
 800c6ea:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c6ee:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c6f0:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800c6f2:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800c6f4:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c6f6:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800c6fa:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800c6fc:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c700:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800c704:	4608      	mov	r0, r1
}
 800c706:	bc30      	pop	{r4, r5}
 800c708:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c70a:	f030 0210 	bics.w	r2, r0, #16
 800c70e:	d0eb      	beq.n	800c6e8 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800c710:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c712:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c714:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c718:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800c71c:	e7dd      	b.n	800c6da <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800c71e:	2002      	movs	r0, #2
}
 800c720:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c722:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c724:	6888      	ldr	r0, [r1, #8]
 800c726:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c728:	f022 0210 	bic.w	r2, r2, #16
 800c72c:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c72e:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c730:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c732:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c736:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c73a:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800c73e:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800c742:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c744:	6222      	str	r2, [r4, #32]
 800c746:	e7cf      	b.n	800c6e8 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800c748:	2d05      	cmp	r5, #5
 800c74a:	d0c0      	beq.n	800c6ce <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800c74c:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c74e:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c750:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c752:	f022 0201 	bic.w	r2, r2, #1
 800c756:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800c758:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c75a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c75e:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800c762:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800c764:	6220      	str	r0, [r4, #32]
      break;
 800c766:	e7bf      	b.n	800c6e8 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c768:	688a      	ldr	r2, [r1, #8]
 800c76a:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800c76c:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c76e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c772:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c774:	6a22      	ldr	r2, [r4, #32]
 800c776:	f022 0201 	bic.w	r2, r2, #1
 800c77a:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c77c:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c77e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c782:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c786:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800c788:	6221      	str	r1, [r4, #32]
 800c78a:	e7ad      	b.n	800c6e8 <HAL_TIM_SlaveConfigSynchro+0x74>

0800c78c <HAL_TIM_OC_DelayElapsedCallback>:
 800c78c:	4770      	bx	lr
 800c78e:	bf00      	nop

0800c790 <HAL_TIM_IC_CaptureCallback>:
 800c790:	4770      	bx	lr
 800c792:	bf00      	nop

0800c794 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c794:	4770      	bx	lr
 800c796:	bf00      	nop

0800c798 <HAL_TIM_TriggerCallback>:
 800c798:	4770      	bx	lr
 800c79a:	bf00      	nop

0800c79c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c79c:	6803      	ldr	r3, [r0, #0]
 800c79e:	691a      	ldr	r2, [r3, #16]
 800c7a0:	0791      	lsls	r1, r2, #30
{
 800c7a2:	b510      	push	{r4, lr}
 800c7a4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c7a6:	d502      	bpl.n	800c7ae <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c7a8:	68da      	ldr	r2, [r3, #12]
 800c7aa:	0792      	lsls	r2, r2, #30
 800c7ac:	d45f      	bmi.n	800c86e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c7ae:	691a      	ldr	r2, [r3, #16]
 800c7b0:	0750      	lsls	r0, r2, #29
 800c7b2:	d502      	bpl.n	800c7ba <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c7b4:	68da      	ldr	r2, [r3, #12]
 800c7b6:	0751      	lsls	r1, r2, #29
 800c7b8:	d446      	bmi.n	800c848 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c7ba:	691a      	ldr	r2, [r3, #16]
 800c7bc:	0712      	lsls	r2, r2, #28
 800c7be:	d502      	bpl.n	800c7c6 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c7c0:	68da      	ldr	r2, [r3, #12]
 800c7c2:	0710      	lsls	r0, r2, #28
 800c7c4:	d42e      	bmi.n	800c824 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c7c6:	691a      	ldr	r2, [r3, #16]
 800c7c8:	06d2      	lsls	r2, r2, #27
 800c7ca:	d502      	bpl.n	800c7d2 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c7cc:	68da      	ldr	r2, [r3, #12]
 800c7ce:	06d0      	lsls	r0, r2, #27
 800c7d0:	d418      	bmi.n	800c804 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c7d2:	691a      	ldr	r2, [r3, #16]
 800c7d4:	07d1      	lsls	r1, r2, #31
 800c7d6:	d502      	bpl.n	800c7de <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c7d8:	68da      	ldr	r2, [r3, #12]
 800c7da:	07d2      	lsls	r2, r2, #31
 800c7dc:	d45d      	bmi.n	800c89a <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c7de:	691a      	ldr	r2, [r3, #16]
 800c7e0:	0610      	lsls	r0, r2, #24
 800c7e2:	d502      	bpl.n	800c7ea <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c7e4:	68da      	ldr	r2, [r3, #12]
 800c7e6:	0611      	lsls	r1, r2, #24
 800c7e8:	d45f      	bmi.n	800c8aa <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c7ea:	691a      	ldr	r2, [r3, #16]
 800c7ec:	0652      	lsls	r2, r2, #25
 800c7ee:	d502      	bpl.n	800c7f6 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c7f0:	68da      	ldr	r2, [r3, #12]
 800c7f2:	0650      	lsls	r0, r2, #25
 800c7f4:	d461      	bmi.n	800c8ba <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c7f6:	691a      	ldr	r2, [r3, #16]
 800c7f8:	0691      	lsls	r1, r2, #26
 800c7fa:	d502      	bpl.n	800c802 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c7fc:	68da      	ldr	r2, [r3, #12]
 800c7fe:	0692      	lsls	r2, r2, #26
 800c800:	d443      	bmi.n	800c88a <HAL_TIM_IRQHandler+0xee>
}
 800c802:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c804:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c808:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c80a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c80c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c80e:	69db      	ldr	r3, [r3, #28]
 800c810:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c814:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c816:	d064      	beq.n	800c8e2 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c818:	f7ff ffba 	bl	800c790 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c81c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c81e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c820:	7722      	strb	r2, [r4, #28]
 800c822:	e7d6      	b.n	800c7d2 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c824:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c828:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c82a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c82c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c82e:	69db      	ldr	r3, [r3, #28]
 800c830:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c832:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c834:	d152      	bne.n	800c8dc <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c836:	f7ff ffa9 	bl	800c78c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c83a:	4620      	mov	r0, r4
 800c83c:	f7ff ffaa 	bl	800c794 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c840:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c842:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c844:	7722      	strb	r2, [r4, #28]
 800c846:	e7be      	b.n	800c7c6 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c848:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c84c:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c84e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c850:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c852:	699b      	ldr	r3, [r3, #24]
 800c854:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c858:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c85a:	d13c      	bne.n	800c8d6 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c85c:	f7ff ff96 	bl	800c78c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c860:	4620      	mov	r0, r4
 800c862:	f7ff ff97 	bl	800c794 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c866:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c868:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c86a:	7722      	strb	r2, [r4, #28]
 800c86c:	e7a5      	b.n	800c7ba <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c86e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c872:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c874:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c876:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c878:	699b      	ldr	r3, [r3, #24]
 800c87a:	079b      	lsls	r3, r3, #30
 800c87c:	d025      	beq.n	800c8ca <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c87e:	f7ff ff87 	bl	800c790 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c882:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c884:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c886:	7722      	strb	r2, [r4, #28]
 800c888:	e791      	b.n	800c7ae <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c88a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c88e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c890:	611a      	str	r2, [r3, #16]
}
 800c892:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c896:	f000 b86b 	b.w	800c970 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c89a:	f06f 0201 	mvn.w	r2, #1
 800c89e:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c8a0:	4620      	mov	r0, r4
 800c8a2:	f7f4 fd0d 	bl	80012c0 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c8a6:	6823      	ldr	r3, [r4, #0]
 800c8a8:	e799      	b.n	800c7de <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c8aa:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c8ae:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c8b0:	4620      	mov	r0, r4
 800c8b2:	f000 f85f 	bl	800c974 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c8b6:	6823      	ldr	r3, [r4, #0]
 800c8b8:	e797      	b.n	800c7ea <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c8ba:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c8be:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c8c0:	4620      	mov	r0, r4
 800c8c2:	f7ff ff69 	bl	800c798 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c8c6:	6823      	ldr	r3, [r4, #0]
 800c8c8:	e795      	b.n	800c7f6 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c8ca:	f7ff ff5f 	bl	800c78c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c8ce:	4620      	mov	r0, r4
 800c8d0:	f7ff ff60 	bl	800c794 <HAL_TIM_PWM_PulseFinishedCallback>
 800c8d4:	e7d5      	b.n	800c882 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c8d6:	f7ff ff5b 	bl	800c790 <HAL_TIM_IC_CaptureCallback>
 800c8da:	e7c4      	b.n	800c866 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c8dc:	f7ff ff58 	bl	800c790 <HAL_TIM_IC_CaptureCallback>
 800c8e0:	e7ae      	b.n	800c840 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c8e2:	f7ff ff53 	bl	800c78c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c8e6:	4620      	mov	r0, r4
 800c8e8:	f7ff ff54 	bl	800c794 <HAL_TIM_PWM_PulseFinishedCallback>
 800c8ec:	e796      	b.n	800c81c <HAL_TIM_IRQHandler+0x80>
 800c8ee:	bf00      	nop

0800c8f0 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800c8f0:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c8f4:	2b01      	cmp	r3, #1
 800c8f6:	d037      	beq.n	800c968 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800c8f8:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c8fa:	2202      	movs	r2, #2
{
 800c8fc:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c8fe:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800c902:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c904:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800c906:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800c908:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c90c:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800c90e:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c910:	4a16      	ldr	r2, [pc, #88]	; (800c96c <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800c912:	4293      	cmp	r3, r2
 800c914:	d01a      	beq.n	800c94c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c916:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c91a:	d017      	beq.n	800c94c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c91c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c920:	4293      	cmp	r3, r2
 800c922:	d013      	beq.n	800c94c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c924:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c928:	4293      	cmp	r3, r2
 800c92a:	d00f      	beq.n	800c94c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c92c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c930:	4293      	cmp	r3, r2
 800c932:	d00b      	beq.n	800c94c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c934:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c938:	4293      	cmp	r3, r2
 800c93a:	d007      	beq.n	800c94c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c93c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c940:	4293      	cmp	r3, r2
 800c942:	d003      	beq.n	800c94c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c944:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c948:	4293      	cmp	r3, r2
 800c94a:	d104      	bne.n	800c956 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c94c:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800c94e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c952:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800c954:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800c956:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c958:	2201      	movs	r2, #1
 800c95a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c95e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800c962:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800c964:	4618      	mov	r0, r3
}
 800c966:	4770      	bx	lr
  __HAL_LOCK(htim);
 800c968:	2002      	movs	r0, #2
}
 800c96a:	4770      	bx	lr
 800c96c:	40010000 	.word	0x40010000

0800c970 <HAL_TIMEx_CommutCallback>:
 800c970:	4770      	bx	lr
 800c972:	bf00      	nop

0800c974 <HAL_TIMEx_BreakCallback>:
 800c974:	4770      	bx	lr
 800c976:	bf00      	nop

0800c978 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c978:	680b      	ldr	r3, [r1, #0]
{
 800c97a:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c97c:	b9d3      	cbnz	r3, 800c9b4 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c97e:	6803      	ldr	r3, [r0, #0]
 800c980:	684c      	ldr	r4, [r1, #4]
 800c982:	688a      	ldr	r2, [r1, #8]
 800c984:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c988:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c98c:	4323      	orrs	r3, r4
 800c98e:	4313      	orrs	r3, r2
 800c990:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800c994:	4323      	orrs	r3, r4
 800c996:	4313      	orrs	r3, r2
 800c998:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800c99c:	4323      	orrs	r3, r4
 800c99e:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800c9a2:	4313      	orrs	r3, r2
 800c9a4:	432b      	orrs	r3, r5
 800c9a6:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c9a8:	4323      	orrs	r3, r4
 800c9aa:	4313      	orrs	r3, r2
 800c9ac:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800c9ae:	bc30      	pop	{r4, r5}
 800c9b0:	2000      	movs	r0, #0
 800c9b2:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c9b4:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800c9b8:	6803      	ldr	r3, [r0, #0]
 800c9ba:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800c9be:	4323      	orrs	r3, r4
 800c9c0:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800c9c2:	4313      	orrs	r3, r2
 800c9c4:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c9c6:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c9c8:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c9ca:	6843      	ldr	r3, [r0, #4]
 800c9cc:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c9d0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c9d4:	4313      	orrs	r3, r2
 800c9d6:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c9da:	4323      	orrs	r3, r4
 800c9dc:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c9e0:	4313      	orrs	r3, r2
 800c9e2:	432b      	orrs	r3, r5
 800c9e4:	698a      	ldr	r2, [r1, #24]
 800c9e6:	4323      	orrs	r3, r4
 800c9e8:	4313      	orrs	r3, r2
 800c9ea:	6043      	str	r3, [r0, #4]
}
 800c9ec:	bc30      	pop	{r4, r5}
 800c9ee:	2000      	movs	r0, #0
 800c9f0:	4770      	bx	lr
 800c9f2:	bf00      	nop

0800c9f4 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800c9f4:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c9f6:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800c9f8:	bb02      	cbnz	r2, 800ca3c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c9fa:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c9fe:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ca02:	3c01      	subs	r4, #1
 800ca04:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800ca08:	3a01      	subs	r2, #1
 800ca0a:	4313      	orrs	r3, r2
 800ca0c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800ca10:	3c01      	subs	r4, #1
 800ca12:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800ca16:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800ca1a:	3a01      	subs	r2, #1
 800ca1c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800ca20:	698a      	ldr	r2, [r1, #24]
 800ca22:	1e69      	subs	r1, r5, #1
 800ca24:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800ca28:	1e61      	subs	r1, r4, #1
 800ca2a:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800ca2e:	3a01      	subs	r2, #1
 800ca30:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800ca34:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800ca36:	bc30      	pop	{r4, r5}
 800ca38:	2000      	movs	r0, #0
 800ca3a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ca3c:	68cc      	ldr	r4, [r1, #12]
 800ca3e:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ca40:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ca42:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800ca46:	3c01      	subs	r4, #1
 800ca48:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ca4c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800ca50:	3a01      	subs	r2, #1
 800ca52:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800ca56:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ca58:	e9d1 2400 	ldrd	r2, r4, [r1]
 800ca5c:	68c3      	ldr	r3, [r0, #12]
 800ca5e:	3c01      	subs	r4, #1
 800ca60:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ca64:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800ca68:	3a01      	subs	r2, #1
 800ca6a:	690c      	ldr	r4, [r1, #16]
 800ca6c:	4313      	orrs	r3, r2
 800ca6e:	698a      	ldr	r2, [r1, #24]
 800ca70:	1e69      	subs	r1, r5, #1
 800ca72:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800ca76:	1e61      	subs	r1, r4, #1
 800ca78:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800ca7c:	3a01      	subs	r2, #1
 800ca7e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800ca82:	60c3      	str	r3, [r0, #12]
}
 800ca84:	bc30      	pop	{r4, r5}
 800ca86:	2000      	movs	r0, #0
 800ca88:	4770      	bx	lr
 800ca8a:	bf00      	nop

0800ca8c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800ca8c:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800ca8e:	680b      	ldr	r3, [r1, #0]
{
 800ca90:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800ca92:	684a      	ldr	r2, [r1, #4]
{
 800ca94:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800ca96:	4313      	orrs	r3, r2
 800ca98:	6900      	ldr	r0, [r0, #16]
 800ca9a:	68ca      	ldr	r2, [r1, #12]
 800ca9c:	0d80      	lsrs	r0, r0, #22
 800ca9e:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800caa2:	688a      	ldr	r2, [r1, #8]
 800caa4:	0580      	lsls	r0, r0, #22
 800caa6:	4303      	orrs	r3, r0
 800caa8:	3a01      	subs	r2, #1
 800caaa:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800caae:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cab0:	f7fc f956 	bl	8008d60 <HAL_GetTick>
 800cab4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cab6:	1c6b      	adds	r3, r5, #1
 800cab8:	d105      	bne.n	800cac6 <FMC_SDRAM_SendCommand+0x3a>
 800caba:	69a3      	ldr	r3, [r4, #24]
 800cabc:	f013 0320 	ands.w	r3, r3, #32
 800cac0:	d1fb      	bne.n	800caba <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800cac2:	4618      	mov	r0, r3
}
 800cac4:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cac6:	69a3      	ldr	r3, [r4, #24]
 800cac8:	f013 0320 	ands.w	r3, r3, #32
 800cacc:	d0f9      	beq.n	800cac2 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cace:	b125      	cbz	r5, 800cada <FMC_SDRAM_SendCommand+0x4e>
 800cad0:	f7fc f946 	bl	8008d60 <HAL_GetTick>
 800cad4:	1b80      	subs	r0, r0, r6
 800cad6:	42a8      	cmp	r0, r5
 800cad8:	d9ed      	bls.n	800cab6 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800cada:	2003      	movs	r0, #3
}
 800cadc:	bd70      	pop	{r4, r5, r6, pc}
 800cade:	bf00      	nop

0800cae0 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cae0:	6943      	ldr	r3, [r0, #20]
 800cae2:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800cae6:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cae8:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800caec:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800caf0:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800caf2:	6151      	str	r1, [r2, #20]
}
 800caf4:	4770      	bx	lr
 800caf6:	bf00      	nop

0800caf8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800caf8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cafa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cafe:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cb00:	f002 fb00 	bl	800f104 <xTaskGetSchedulerState>
 800cb04:	2801      	cmp	r0, #1
 800cb06:	d100      	bne.n	800cb0a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cb08:	bd08      	pop	{r3, pc}
 800cb0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cb0e:	f000 bc41 	b.w	800d394 <xPortSysTickHandler>
 800cb12:	bf00      	nop

0800cb14 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cb14:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cb18:	b92b      	cbnz	r3, 800cb26 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cb1a:	4b06      	ldr	r3, [pc, #24]	; (800cb34 <osKernelInitialize+0x20>)
 800cb1c:	6818      	ldr	r0, [r3, #0]
 800cb1e:	b928      	cbnz	r0, 800cb2c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cb20:	2201      	movs	r2, #1
 800cb22:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cb24:	4770      	bx	lr
    stat = osErrorISR;
 800cb26:	f06f 0005 	mvn.w	r0, #5
 800cb2a:	4770      	bx	lr
    } else {
      stat = osError;
 800cb2c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cb30:	4770      	bx	lr
 800cb32:	bf00      	nop
 800cb34:	20002770 	.word	0x20002770

0800cb38 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cb38:	b510      	push	{r4, lr}
 800cb3a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cb3e:	b974      	cbnz	r4, 800cb5e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cb40:	4b08      	ldr	r3, [pc, #32]	; (800cb64 <osKernelStart+0x2c>)
 800cb42:	681a      	ldr	r2, [r3, #0]
 800cb44:	2a01      	cmp	r2, #1
 800cb46:	d107      	bne.n	800cb58 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cb48:	4907      	ldr	r1, [pc, #28]	; (800cb68 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cb4a:	2202      	movs	r2, #2
 800cb4c:	77cc      	strb	r4, [r1, #31]
 800cb4e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cb50:	f002 f8b2 	bl	800ecb8 <vTaskStartScheduler>
      stat = osOK;
 800cb54:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cb56:	bd10      	pop	{r4, pc}
      stat = osError;
 800cb58:	f04f 30ff 	mov.w	r0, #4294967295
}
 800cb5c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cb5e:	f06f 0005 	mvn.w	r0, #5
}
 800cb62:	bd10      	pop	{r4, pc}
 800cb64:	20002770 	.word	0x20002770
 800cb68:	e000ed00 	.word	0xe000ed00

0800cb6c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cb6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb6e:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cb70:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cb72:	4615      	mov	r5, r2
  hTask = NULL;
 800cb74:	9405      	str	r4, [sp, #20]
 800cb76:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cb7a:	b9ea      	cbnz	r2, 800cbb8 <osThreadNew+0x4c>
 800cb7c:	b350      	cbz	r0, 800cbd4 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cb7e:	b1f5      	cbz	r5, 800cbbe <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cb80:	69ab      	ldr	r3, [r5, #24]
 800cb82:	bb5b      	cbnz	r3, 800cbdc <osThreadNew+0x70>
 800cb84:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cb86:	686a      	ldr	r2, [r5, #4]
 800cb88:	07d2      	lsls	r2, r2, #31
 800cb8a:	d423      	bmi.n	800cbd4 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cb8c:	696e      	ldr	r6, [r5, #20]
 800cb8e:	b34e      	cbz	r6, 800cbe4 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cb90:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cb94:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800cb96:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cb98:	b34c      	cbz	r4, 800cbee <osThreadNew+0x82>
 800cb9a:	68ea      	ldr	r2, [r5, #12]
 800cb9c:	2aab      	cmp	r2, #171	; 0xab
 800cb9e:	d919      	bls.n	800cbd4 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cba0:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cba2:	b1bd      	cbz	r5, 800cbd4 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cba4:	b1b6      	cbz	r6, 800cbd4 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cba6:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800cbaa:	9300      	str	r3, [sp, #0]
 800cbac:	4662      	mov	r2, ip
 800cbae:	460b      	mov	r3, r1
 800cbb0:	4639      	mov	r1, r7
 800cbb2:	f001 ffbf 	bl	800eb34 <xTaskCreateStatic>
 800cbb6:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800cbb8:	4620      	mov	r0, r4
 800cbba:	b007      	add	sp, #28
 800cbbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cbbe:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800cbc0:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cbc2:	ac05      	add	r4, sp, #20
 800cbc4:	9300      	str	r3, [sp, #0]
 800cbc6:	9401      	str	r4, [sp, #4]
 800cbc8:	460b      	mov	r3, r1
 800cbca:	4629      	mov	r1, r5
 800cbcc:	f001 ffec 	bl	800eba8 <xTaskCreate>
 800cbd0:	2801      	cmp	r0, #1
 800cbd2:	d00a      	beq.n	800cbea <osThreadNew+0x7e>
        return (NULL);
 800cbd4:	2400      	movs	r4, #0
}
 800cbd6:	4620      	mov	r0, r4
 800cbd8:	b007      	add	sp, #28
 800cbda:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cbdc:	1e5c      	subs	r4, r3, #1
 800cbde:	2c37      	cmp	r4, #55	; 0x37
 800cbe0:	d9d1      	bls.n	800cb86 <osThreadNew+0x1a>
 800cbe2:	e7f7      	b.n	800cbd4 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800cbe4:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800cbe8:	e7d4      	b.n	800cb94 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800cbea:	9c05      	ldr	r4, [sp, #20]
 800cbec:	e7e4      	b.n	800cbb8 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cbee:	68ee      	ldr	r6, [r5, #12]
 800cbf0:	2e00      	cmp	r6, #0
 800cbf2:	d1e1      	bne.n	800cbb8 <osThreadNew+0x4c>
 800cbf4:	692d      	ldr	r5, [r5, #16]
 800cbf6:	2d00      	cmp	r5, #0
 800cbf8:	d1de      	bne.n	800cbb8 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cbfa:	fa1f f28c 	uxth.w	r2, ip
 800cbfe:	463d      	mov	r5, r7
 800cc00:	e7df      	b.n	800cbc2 <osThreadNew+0x56>
 800cc02:	bf00      	nop

0800cc04 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cc04:	b510      	push	{r4, lr}
 800cc06:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cc0a:	b92c      	cbnz	r4, 800cc18 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cc0c:	b900      	cbnz	r0, 800cc10 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800cc0e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800cc10:	f001 fffc 	bl	800ec0c <vTaskDelay>
    stat = osOK;
 800cc14:	4620      	mov	r0, r4
}
 800cc16:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cc18:	f06f 0005 	mvn.w	r0, #5
}
 800cc1c:	bd10      	pop	{r4, pc}
 800cc1e:	bf00      	nop

0800cc20 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cc20:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc22:	b083      	sub	sp, #12
 800cc24:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cc28:	b9fe      	cbnz	r6, 800cc6a <osSemaphoreNew+0x4a>
 800cc2a:	b1f0      	cbz	r0, 800cc6a <osSemaphoreNew+0x4a>
 800cc2c:	4288      	cmp	r0, r1
 800cc2e:	460f      	mov	r7, r1
 800cc30:	d31b      	bcc.n	800cc6a <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800cc32:	4615      	mov	r5, r2
 800cc34:	b192      	cbz	r2, 800cc5c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cc36:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cc3a:	b1d2      	cbz	r2, 800cc72 <osSemaphoreNew+0x52>
 800cc3c:	2b4f      	cmp	r3, #79	; 0x4f
 800cc3e:	d914      	bls.n	800cc6a <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800cc40:	2801      	cmp	r0, #1
 800cc42:	d038      	beq.n	800ccb6 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cc44:	f000 fd8c 	bl	800d760 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cc48:	4604      	mov	r4, r0
 800cc4a:	b170      	cbz	r0, 800cc6a <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cc4c:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800cc4e:	4620      	mov	r0, r4
 800cc50:	4629      	mov	r1, r5
 800cc52:	f001 fc37 	bl	800e4c4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cc56:	4620      	mov	r0, r4
 800cc58:	b003      	add	sp, #12
 800cc5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800cc5c:	2801      	cmp	r0, #1
 800cc5e:	d012      	beq.n	800cc86 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cc60:	f000 fdde 	bl	800d820 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cc64:	4604      	mov	r4, r0
 800cc66:	2800      	cmp	r0, #0
 800cc68:	d1f1      	bne.n	800cc4e <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800cc6a:	2400      	movs	r4, #0
}
 800cc6c:	4620      	mov	r0, r4
 800cc6e:	b003      	add	sp, #12
 800cc70:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cc72:	2b00      	cmp	r3, #0
 800cc74:	d1f9      	bne.n	800cc6a <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800cc76:	2801      	cmp	r0, #1
 800cc78:	d005      	beq.n	800cc86 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cc7a:	f000 fdd1 	bl	800d820 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cc7e:	4604      	mov	r4, r0
 800cc80:	2800      	cmp	r0, #0
 800cc82:	d1e3      	bne.n	800cc4c <osSemaphoreNew+0x2c>
 800cc84:	e7f1      	b.n	800cc6a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800cc86:	2203      	movs	r2, #3
 800cc88:	2100      	movs	r1, #0
 800cc8a:	2001      	movs	r0, #1
 800cc8c:	f000 fd26 	bl	800d6dc <xQueueGenericCreate>
 800cc90:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cc92:	2c00      	cmp	r4, #0
 800cc94:	d0e9      	beq.n	800cc6a <osSemaphoreNew+0x4a>
 800cc96:	b917      	cbnz	r7, 800cc9e <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800cc98:	2d00      	cmp	r5, #0
 800cc9a:	d1d7      	bne.n	800cc4c <osSemaphoreNew+0x2c>
 800cc9c:	e7d7      	b.n	800cc4e <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cc9e:	2300      	movs	r3, #0
 800cca0:	461a      	mov	r2, r3
 800cca2:	4619      	mov	r1, r3
 800cca4:	4620      	mov	r0, r4
 800cca6:	f000 fe01 	bl	800d8ac <xQueueGenericSend>
 800ccaa:	2801      	cmp	r0, #1
 800ccac:	d0f4      	beq.n	800cc98 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800ccae:	4620      	mov	r0, r4
 800ccb0:	f001 fbc2 	bl	800e438 <vQueueDelete>
 800ccb4:	e7d9      	b.n	800cc6a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800ccb6:	4613      	mov	r3, r2
 800ccb8:	2203      	movs	r2, #3
 800ccba:	9200      	str	r2, [sp, #0]
 800ccbc:	4631      	mov	r1, r6
 800ccbe:	4632      	mov	r2, r6
 800ccc0:	f000 fc9e 	bl	800d600 <xQueueGenericCreateStatic>
 800ccc4:	4604      	mov	r4, r0
 800ccc6:	e7e4      	b.n	800cc92 <osSemaphoreNew+0x72>

0800ccc8 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ccc8:	b370      	cbz	r0, 800cd28 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800ccca:	b510      	push	{r4, lr}
 800cccc:	460c      	mov	r4, r1
 800ccce:	b082      	sub	sp, #8
 800ccd0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ccd4:	b1c3      	cbz	r3, 800cd08 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800ccd6:	bb21      	cbnz	r1, 800cd22 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ccd8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ccda:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ccdc:	f001 fb2a 	bl	800e334 <xQueueReceiveFromISR>
 800cce0:	2801      	cmp	r0, #1
 800cce2:	d11a      	bne.n	800cd1a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cce4:	9b01      	ldr	r3, [sp, #4]
 800cce6:	b913      	cbnz	r3, 800ccee <osSemaphoreAcquire+0x26>
  stat = osOK;
 800cce8:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800ccea:	b002      	add	sp, #8
 800ccec:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800ccee:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ccf2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ccf6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ccfa:	f3bf 8f4f 	dsb	sy
 800ccfe:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cd02:	4620      	mov	r0, r4
}
 800cd04:	b002      	add	sp, #8
 800cd06:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800cd08:	f001 f98a 	bl	800e020 <xQueueSemaphoreTake>
 800cd0c:	2801      	cmp	r0, #1
 800cd0e:	d0eb      	beq.n	800cce8 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800cd10:	b11c      	cbz	r4, 800cd1a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800cd12:	f06f 0001 	mvn.w	r0, #1
}
 800cd16:	b002      	add	sp, #8
 800cd18:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800cd1a:	f06f 0002 	mvn.w	r0, #2
}
 800cd1e:	b002      	add	sp, #8
 800cd20:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800cd22:	f06f 0003 	mvn.w	r0, #3
 800cd26:	e7e0      	b.n	800ccea <osSemaphoreAcquire+0x22>
 800cd28:	f06f 0003 	mvn.w	r0, #3
}
 800cd2c:	4770      	bx	lr
 800cd2e:	bf00      	nop

0800cd30 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cd30:	b330      	cbz	r0, 800cd80 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cd32:	b510      	push	{r4, lr}
 800cd34:	b082      	sub	sp, #8
 800cd36:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cd3a:	b1ab      	cbz	r3, 800cd68 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800cd3c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cd3e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800cd40:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cd42:	f000 ff97 	bl	800dc74 <xQueueGiveFromISR>
 800cd46:	2801      	cmp	r0, #1
 800cd48:	d117      	bne.n	800cd7a <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cd4a:	9b01      	ldr	r3, [sp, #4]
 800cd4c:	b193      	cbz	r3, 800cd74 <osSemaphoreRelease+0x44>
 800cd4e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd56:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd5a:	f3bf 8f4f 	dsb	sy
 800cd5e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cd62:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cd64:	b002      	add	sp, #8
 800cd66:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cd68:	461a      	mov	r2, r3
 800cd6a:	4619      	mov	r1, r3
 800cd6c:	f000 fd9e 	bl	800d8ac <xQueueGenericSend>
 800cd70:	2801      	cmp	r0, #1
 800cd72:	d102      	bne.n	800cd7a <osSemaphoreRelease+0x4a>
  stat = osOK;
 800cd74:	2000      	movs	r0, #0
}
 800cd76:	b002      	add	sp, #8
 800cd78:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800cd7a:	f06f 0002 	mvn.w	r0, #2
 800cd7e:	e7fa      	b.n	800cd76 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800cd80:	f06f 0003 	mvn.w	r0, #3
}
 800cd84:	4770      	bx	lr
 800cd86:	bf00      	nop

0800cd88 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cd88:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd8a:	b085      	sub	sp, #20
 800cd8c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cd90:	b987      	cbnz	r7, 800cdb4 <osMessageQueueNew+0x2c>
 800cd92:	4605      	mov	r5, r0
 800cd94:	b170      	cbz	r0, 800cdb4 <osMessageQueueNew+0x2c>
 800cd96:	b169      	cbz	r1, 800cdb4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800cd98:	4614      	mov	r4, r2
 800cd9a:	b1ea      	cbz	r2, 800cdd8 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cd9c:	6893      	ldr	r3, [r2, #8]
 800cd9e:	b163      	cbz	r3, 800cdba <osMessageQueueNew+0x32>
 800cda0:	68d2      	ldr	r2, [r2, #12]
 800cda2:	2a4f      	cmp	r2, #79	; 0x4f
 800cda4:	d906      	bls.n	800cdb4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cda6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cda8:	b122      	cbz	r2, 800cdb4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cdaa:	6966      	ldr	r6, [r4, #20]
 800cdac:	fb01 f505 	mul.w	r5, r1, r5
 800cdb0:	42ae      	cmp	r6, r5
 800cdb2:	d21c      	bcs.n	800cdee <osMessageQueueNew+0x66>
  hQueue = NULL;
 800cdb4:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800cdb6:	b005      	add	sp, #20
 800cdb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800cdba:	68d3      	ldr	r3, [r2, #12]
 800cdbc:	2b00      	cmp	r3, #0
 800cdbe:	d1f9      	bne.n	800cdb4 <osMessageQueueNew+0x2c>
 800cdc0:	6913      	ldr	r3, [r2, #16]
 800cdc2:	2b00      	cmp	r3, #0
 800cdc4:	d1f6      	bne.n	800cdb4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800cdc6:	6952      	ldr	r2, [r2, #20]
 800cdc8:	2a00      	cmp	r2, #0
 800cdca:	d1f3      	bne.n	800cdb4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cdcc:	f000 fc86 	bl	800d6dc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cdd0:	2800      	cmp	r0, #0
 800cdd2:	d0ef      	beq.n	800cdb4 <osMessageQueueNew+0x2c>
        name = attr->name;
 800cdd4:	6824      	ldr	r4, [r4, #0]
 800cdd6:	e003      	b.n	800cde0 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cdd8:	f000 fc80 	bl	800d6dc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cddc:	2800      	cmp	r0, #0
 800cdde:	d0e9      	beq.n	800cdb4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800cde0:	4621      	mov	r1, r4
 800cde2:	9003      	str	r0, [sp, #12]
 800cde4:	f001 fb6e 	bl	800e4c4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800cde8:	9803      	ldr	r0, [sp, #12]
}
 800cdea:	b005      	add	sp, #20
 800cdec:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800cdee:	9700      	str	r7, [sp, #0]
 800cdf0:	f000 fc06 	bl	800d600 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800cdf4:	2800      	cmp	r0, #0
 800cdf6:	d1ed      	bne.n	800cdd4 <osMessageQueueNew+0x4c>
 800cdf8:	e7dc      	b.n	800cdb4 <osMessageQueueNew+0x2c>
 800cdfa:	bf00      	nop

0800cdfc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800cdfc:	b570      	push	{r4, r5, r6, lr}
 800cdfe:	461c      	mov	r4, r3
 800ce00:	b082      	sub	sp, #8
 800ce02:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800ce06:	b1be      	cbz	r6, 800ce38 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800ce08:	b350      	cbz	r0, 800ce60 <osMessageQueuePut+0x64>
 800ce0a:	b349      	cbz	r1, 800ce60 <osMessageQueuePut+0x64>
 800ce0c:	bb43      	cbnz	r3, 800ce60 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ce0e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ce10:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ce12:	f000 fec9 	bl	800dba8 <xQueueGenericSendFromISR>
 800ce16:	2801      	cmp	r0, #1
 800ce18:	d11e      	bne.n	800ce58 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ce1a:	9b01      	ldr	r3, [sp, #4]
 800ce1c:	b1cb      	cbz	r3, 800ce52 <osMessageQueuePut+0x56>
 800ce1e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce22:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce26:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ce2a:	f3bf 8f4f 	dsb	sy
 800ce2e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ce32:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ce34:	b002      	add	sp, #8
 800ce36:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ce38:	b190      	cbz	r0, 800ce60 <osMessageQueuePut+0x64>
 800ce3a:	b189      	cbz	r1, 800ce60 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ce3c:	4633      	mov	r3, r6
 800ce3e:	4622      	mov	r2, r4
 800ce40:	f000 fd34 	bl	800d8ac <xQueueGenericSend>
 800ce44:	2801      	cmp	r0, #1
 800ce46:	d004      	beq.n	800ce52 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800ce48:	b134      	cbz	r4, 800ce58 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800ce4a:	f06f 0001 	mvn.w	r0, #1
}
 800ce4e:	b002      	add	sp, #8
 800ce50:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800ce52:	2000      	movs	r0, #0
}
 800ce54:	b002      	add	sp, #8
 800ce56:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800ce58:	f06f 0002 	mvn.w	r0, #2
}
 800ce5c:	b002      	add	sp, #8
 800ce5e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800ce60:	f06f 0003 	mvn.w	r0, #3
 800ce64:	e7e6      	b.n	800ce34 <osMessageQueuePut+0x38>
 800ce66:	bf00      	nop

0800ce68 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800ce68:	b530      	push	{r4, r5, lr}
 800ce6a:	461c      	mov	r4, r3
 800ce6c:	b083      	sub	sp, #12
 800ce6e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800ce72:	b1bb      	cbz	r3, 800cea4 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800ce74:	b348      	cbz	r0, 800ceca <osMessageQueueGet+0x62>
 800ce76:	b341      	cbz	r1, 800ceca <osMessageQueueGet+0x62>
 800ce78:	bb3c      	cbnz	r4, 800ceca <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ce7a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ce7c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ce7e:	f001 fa59 	bl	800e334 <xQueueReceiveFromISR>
 800ce82:	2801      	cmp	r0, #1
 800ce84:	d11d      	bne.n	800cec2 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ce86:	9b01      	ldr	r3, [sp, #4]
 800ce88:	b1c3      	cbz	r3, 800cebc <osMessageQueueGet+0x54>
 800ce8a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce92:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ce96:	f3bf 8f4f 	dsb	sy
 800ce9a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ce9e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cea0:	b003      	add	sp, #12
 800cea2:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cea4:	b188      	cbz	r0, 800ceca <osMessageQueueGet+0x62>
 800cea6:	b181      	cbz	r1, 800ceca <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cea8:	4622      	mov	r2, r4
 800ceaa:	f000 ff3b 	bl	800dd24 <xQueueReceive>
 800ceae:	2801      	cmp	r0, #1
 800ceb0:	d004      	beq.n	800cebc <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800ceb2:	b134      	cbz	r4, 800cec2 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800ceb4:	f06f 0001 	mvn.w	r0, #1
}
 800ceb8:	b003      	add	sp, #12
 800ceba:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800cebc:	2000      	movs	r0, #0
}
 800cebe:	b003      	add	sp, #12
 800cec0:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800cec2:	f06f 0002 	mvn.w	r0, #2
}
 800cec6:	b003      	add	sp, #12
 800cec8:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800ceca:	f06f 0003 	mvn.w	r0, #3
 800cece:	e7e7      	b.n	800cea0 <osMessageQueueGet+0x38>

0800ced0 <osMessageQueueGetCount>:
 800ced0:	b130      	cbz	r0, 800cee0 <osMessageQueueGetCount+0x10>
 800ced2:	f3ef 8305 	mrs	r3, IPSR
 800ced6:	b10b      	cbz	r3, 800cedc <osMessageQueueGetCount+0xc>
 800ced8:	f001 baa0 	b.w	800e41c <uxQueueMessagesWaitingFromISR>
 800cedc:	f001 ba88 	b.w	800e3f0 <uxQueueMessagesWaiting>
 800cee0:	4770      	bx	lr
 800cee2:	bf00      	nop

0800cee4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800cee4:	4b04      	ldr	r3, [pc, #16]	; (800cef8 <vApplicationGetIdleTaskMemory+0x14>)
 800cee6:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800cee8:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800ceea:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800ceec:	4c03      	ldr	r4, [pc, #12]	; (800cefc <vApplicationGetIdleTaskMemory+0x18>)
 800ceee:	600c      	str	r4, [r1, #0]
}
 800cef0:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cef4:	6013      	str	r3, [r2, #0]
}
 800cef6:	4770      	bx	lr
 800cef8:	200026c4 	.word	0x200026c4
 800cefc:	200024c4 	.word	0x200024c4

0800cf00 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800cf00:	4b05      	ldr	r3, [pc, #20]	; (800cf18 <vApplicationGetTimerTaskMemory+0x18>)
 800cf02:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800cf04:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cf06:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800cf0a:	4c04      	ldr	r4, [pc, #16]	; (800cf1c <vApplicationGetTimerTaskMemory+0x1c>)
 800cf0c:	600c      	str	r4, [r1, #0]
}
 800cf0e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cf12:	6013      	str	r3, [r2, #0]
}
 800cf14:	4770      	bx	lr
 800cf16:	bf00      	nop
 800cf18:	20002b74 	.word	0x20002b74
 800cf1c:	20002774 	.word	0x20002774

0800cf20 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800cf20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf24:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800cf26:	f001 ff43 	bl	800edb0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800cf2a:	4a54      	ldr	r2, [pc, #336]	; (800d07c <pvPortMalloc+0x15c>)
 800cf2c:	6816      	ldr	r6, [r2, #0]
 800cf2e:	2e00      	cmp	r6, #0
 800cf30:	d06e      	beq.n	800d010 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800cf32:	4b53      	ldr	r3, [pc, #332]	; (800d080 <pvPortMalloc+0x160>)
 800cf34:	681f      	ldr	r7, [r3, #0]
 800cf36:	423d      	tst	r5, r7
 800cf38:	d12e      	bne.n	800cf98 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800cf3a:	b36d      	cbz	r5, 800cf98 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800cf3c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800cf40:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800cf42:	bf1c      	itt	ne
 800cf44:	f024 0407 	bicne.w	r4, r4, #7
 800cf48:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800cf4a:	b32c      	cbz	r4, 800cf98 <pvPortMalloc+0x78>
 800cf4c:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d094 <pvPortMalloc+0x174>
 800cf50:	f8dc 5000 	ldr.w	r5, [ip]
 800cf54:	42a5      	cmp	r5, r4
 800cf56:	d31f      	bcc.n	800cf98 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800cf58:	484a      	ldr	r0, [pc, #296]	; (800d084 <pvPortMalloc+0x164>)
 800cf5a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800cf5c:	e003      	b.n	800cf66 <pvPortMalloc+0x46>
 800cf5e:	681a      	ldr	r2, [r3, #0]
 800cf60:	b122      	cbz	r2, 800cf6c <pvPortMalloc+0x4c>
 800cf62:	4618      	mov	r0, r3
 800cf64:	4613      	mov	r3, r2
 800cf66:	6859      	ldr	r1, [r3, #4]
 800cf68:	42a1      	cmp	r1, r4
 800cf6a:	d3f8      	bcc.n	800cf5e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800cf6c:	42b3      	cmp	r3, r6
 800cf6e:	d013      	beq.n	800cf98 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800cf70:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cf72:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800cf74:	f858 eb08 	ldr.w	lr, [r8], #8
 800cf78:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cf7c:	2a10      	cmp	r2, #16
 800cf7e:	d929      	bls.n	800cfd4 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800cf80:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800cf82:	0748      	lsls	r0, r1, #29
 800cf84:	d00f      	beq.n	800cfa6 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800cf86:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf8a:	f383 8811 	msr	BASEPRI, r3
 800cf8e:	f3bf 8f6f 	isb	sy
 800cf92:	f3bf 8f4f 	dsb	sy
 800cf96:	e7fe      	b.n	800cf96 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800cf98:	f001 ff12 	bl	800edc0 <xTaskResumeAll>
 800cf9c:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800cfa0:	4640      	mov	r0, r8
 800cfa2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800cfa6:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cfa8:	4a36      	ldr	r2, [pc, #216]	; (800d084 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800cfaa:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cfac:	4614      	mov	r4, r2
 800cfae:	6812      	ldr	r2, [r2, #0]
 800cfb0:	4291      	cmp	r1, r2
 800cfb2:	d8fb      	bhi.n	800cfac <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cfb4:	6860      	ldr	r0, [r4, #4]
 800cfb6:	eb04 0e00 	add.w	lr, r4, r0
 800cfba:	4571      	cmp	r1, lr
 800cfbc:	d04b      	beq.n	800d056 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cfbe:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cfc2:	eb01 000e 	add.w	r0, r1, lr
 800cfc6:	4282      	cmp	r2, r0
 800cfc8:	d051      	beq.n	800d06e <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800cfca:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cfcc:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cfce:	bf18      	it	ne
 800cfd0:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cfd2:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cfd4:	4a2c      	ldr	r2, [pc, #176]	; (800d088 <pvPortMalloc+0x168>)
 800cfd6:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cfd8:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cfda:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800cfdc:	bf38      	it	cc
 800cfde:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800cfe0:	4a2a      	ldr	r2, [pc, #168]	; (800d08c <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cfe2:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800cfe6:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800cfe8:	2000      	movs	r0, #0
 800cfea:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800cfee:	6813      	ldr	r3, [r2, #0]
 800cff0:	3301      	adds	r3, #1
 800cff2:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800cff4:	f001 fee4 	bl	800edc0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800cff8:	f018 0f07 	tst.w	r8, #7
 800cffc:	d0d0      	beq.n	800cfa0 <pvPortMalloc+0x80>
 800cffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d002:	f383 8811 	msr	BASEPRI, r3
 800d006:	f3bf 8f6f 	isb	sy
 800d00a:	f3bf 8f4f 	dsb	sy
 800d00e:	e7fe      	b.n	800d00e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d010:	4b1f      	ldr	r3, [pc, #124]	; (800d090 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d012:	075e      	lsls	r6, r3, #29
 800d014:	d118      	bne.n	800d048 <pvPortMalloc+0x128>
 800d016:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d01a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d01c:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d01e:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d022:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d024:	4a18      	ldr	r2, [pc, #96]	; (800d088 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d026:	4817      	ldr	r0, [pc, #92]	; (800d084 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d028:	4c15      	ldr	r4, [pc, #84]	; (800d080 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d02a:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d02c:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d02e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d030:	4a18      	ldr	r2, [pc, #96]	; (800d094 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d032:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d036:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d038:	2200      	movs	r2, #0
 800d03a:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d03c:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d03e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d042:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d046:	e776      	b.n	800cf36 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d048:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d04a:	f021 0107 	bic.w	r1, r1, #7
 800d04e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d052:	460b      	mov	r3, r1
 800d054:	e7e2      	b.n	800d01c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d056:	6849      	ldr	r1, [r1, #4]
 800d058:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d05c:	eb04 010e 	add.w	r1, r4, lr
 800d060:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d062:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d066:	d001      	beq.n	800d06c <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d068:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d06a:	e7b2      	b.n	800cfd2 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d06c:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d06e:	42b2      	cmp	r2, r6
 800d070:	d0ab      	beq.n	800cfca <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d072:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d074:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d076:	4470      	add	r0, lr
 800d078:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d07a:	e7a6      	b.n	800cfca <pvPortMalloc+0xaa>
 800d07c:	20002c20 	.word	0x20002c20
 800d080:	20012c24 	.word	0x20012c24
 800d084:	20012c38 	.word	0x20012c38
 800d088:	20012c2c 	.word	0x20012c2c
 800d08c:	20012c30 	.word	0x20012c30
 800d090:	20002c24 	.word	0x20002c24
 800d094:	20012c28 	.word	0x20012c28

0800d098 <vPortFree>:
	if( pv != NULL )
 800d098:	b1d0      	cbz	r0, 800d0d0 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d09a:	4a2c      	ldr	r2, [pc, #176]	; (800d14c <vPortFree+0xb4>)
 800d09c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d0a0:	6812      	ldr	r2, [r2, #0]
 800d0a2:	4213      	tst	r3, r2
 800d0a4:	d00b      	beq.n	800d0be <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d0a6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d0aa:	b191      	cbz	r1, 800d0d2 <vPortFree+0x3a>
 800d0ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0b0:	f383 8811 	msr	BASEPRI, r3
 800d0b4:	f3bf 8f6f 	isb	sy
 800d0b8:	f3bf 8f4f 	dsb	sy
 800d0bc:	e7fe      	b.n	800d0bc <vPortFree+0x24>
 800d0be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0c2:	f383 8811 	msr	BASEPRI, r3
 800d0c6:	f3bf 8f6f 	isb	sy
 800d0ca:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d0ce:	e7fe      	b.n	800d0ce <vPortFree+0x36>
 800d0d0:	4770      	bx	lr
{
 800d0d2:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d0d4:	ea23 0302 	bic.w	r3, r3, r2
{
 800d0d8:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d0da:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d0de:	4c1c      	ldr	r4, [pc, #112]	; (800d150 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d0e0:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d0e2:	f001 fe65 	bl	800edb0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d0e6:	9801      	ldr	r0, [sp, #4]
 800d0e8:	6822      	ldr	r2, [r4, #0]
 800d0ea:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d0ee:	4b19      	ldr	r3, [pc, #100]	; (800d154 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d0f0:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d0f2:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d0f4:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d0f6:	461a      	mov	r2, r3
 800d0f8:	681b      	ldr	r3, [r3, #0]
 800d0fa:	4298      	cmp	r0, r3
 800d0fc:	d8fb      	bhi.n	800d0f6 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d0fe:	6854      	ldr	r4, [r2, #4]
 800d100:	eb02 0e04 	add.w	lr, r2, r4
 800d104:	4570      	cmp	r0, lr
 800d106:	d010      	beq.n	800d12a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d108:	eb00 0c01 	add.w	ip, r0, r1
 800d10c:	4563      	cmp	r3, ip
 800d10e:	d014      	beq.n	800d13a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d110:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d112:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d114:	bf18      	it	ne
 800d116:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d118:	4a0f      	ldr	r2, [pc, #60]	; (800d158 <vPortFree+0xc0>)
 800d11a:	6813      	ldr	r3, [r2, #0]
 800d11c:	3301      	adds	r3, #1
 800d11e:	6013      	str	r3, [r2, #0]
}
 800d120:	b002      	add	sp, #8
 800d122:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d126:	f001 be4b 	b.w	800edc0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d12a:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d12c:	1850      	adds	r0, r2, r1
 800d12e:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d130:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d132:	d001      	beq.n	800d138 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d134:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d136:	e7ef      	b.n	800d118 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d138:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d13a:	4c08      	ldr	r4, [pc, #32]	; (800d15c <vPortFree+0xc4>)
 800d13c:	6824      	ldr	r4, [r4, #0]
 800d13e:	42a3      	cmp	r3, r4
 800d140:	d0e6      	beq.n	800d110 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d142:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d146:	4421      	add	r1, r4
 800d148:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d14a:	e7e1      	b.n	800d110 <vPortFree+0x78>
 800d14c:	20012c24 	.word	0x20012c24
 800d150:	20012c28 	.word	0x20012c28
 800d154:	20012c38 	.word	0x20012c38
 800d158:	20012c34 	.word	0x20012c34
 800d15c:	20002c20 	.word	0x20002c20

0800d160 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d160:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d164:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d168:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d16a:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d16e:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d172:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d174:	4770      	bx	lr
 800d176:	bf00      	nop

0800d178 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d178:	2300      	movs	r3, #0
 800d17a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d17c:	4770      	bx	lr
 800d17e:	bf00      	nop

0800d180 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d180:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d182:	689a      	ldr	r2, [r3, #8]
 800d184:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d186:	6802      	ldr	r2, [r0, #0]
{
 800d188:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d18a:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d18c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d18e:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d190:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d192:	6099      	str	r1, [r3, #8]
}
 800d194:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d198:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d19a:	6002      	str	r2, [r0, #0]
}
 800d19c:	4770      	bx	lr
 800d19e:	bf00      	nop

0800d1a0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d1a0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d1a2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d1a4:	1c6b      	adds	r3, r5, #1
 800d1a6:	d010      	beq.n	800d1ca <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d1a8:	f100 0308 	add.w	r3, r0, #8
 800d1ac:	461c      	mov	r4, r3
 800d1ae:	685b      	ldr	r3, [r3, #4]
 800d1b0:	681a      	ldr	r2, [r3, #0]
 800d1b2:	42aa      	cmp	r2, r5
 800d1b4:	d9fa      	bls.n	800d1ac <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d1b6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d1b8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d1ba:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d1bc:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d1be:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d1c0:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d1c2:	6108      	str	r0, [r1, #16]
}
 800d1c4:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d1c6:	6002      	str	r2, [r0, #0]
}
 800d1c8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d1ca:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d1cc:	6863      	ldr	r3, [r4, #4]
 800d1ce:	e7f2      	b.n	800d1b6 <vListInsert+0x16>

0800d1d0 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d1d0:	6903      	ldr	r3, [r0, #16]
{
 800d1d2:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d1d4:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d1d8:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d1da:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d1dc:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d1de:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d1e0:	bf08      	it	eq
 800d1e2:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d1e4:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d1e6:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d1ea:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d1ec:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d1ee:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d1f0:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d1f2:	6818      	ldr	r0, [r3, #0]
}
 800d1f4:	4770      	bx	lr
 800d1f6:	bf00      	nop

0800d1f8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d1f8:	4808      	ldr	r0, [pc, #32]	; (800d21c <prvPortStartFirstTask+0x24>)
 800d1fa:	6800      	ldr	r0, [r0, #0]
 800d1fc:	6800      	ldr	r0, [r0, #0]
 800d1fe:	f380 8808 	msr	MSP, r0
 800d202:	f04f 0000 	mov.w	r0, #0
 800d206:	f380 8814 	msr	CONTROL, r0
 800d20a:	b662      	cpsie	i
 800d20c:	b661      	cpsie	f
 800d20e:	f3bf 8f4f 	dsb	sy
 800d212:	f3bf 8f6f 	isb	sy
 800d216:	df00      	svc	0
 800d218:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d21a:	0000      	.short	0x0000
 800d21c:	e000ed08 	.word	0xe000ed08

0800d220 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d220:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d230 <vPortEnableVFP+0x10>
 800d224:	6801      	ldr	r1, [r0, #0]
 800d226:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d22a:	6001      	str	r1, [r0, #0]
 800d22c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d22e:	0000      	.short	0x0000
 800d230:	e000ed88 	.word	0xe000ed88

0800d234 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d234:	4b0e      	ldr	r3, [pc, #56]	; (800d270 <prvTaskExitError+0x3c>)
 800d236:	681b      	ldr	r3, [r3, #0]
{
 800d238:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d23a:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d23c:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d23e:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d240:	d008      	beq.n	800d254 <prvTaskExitError+0x20>
 800d242:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d246:	f383 8811 	msr	BASEPRI, r3
 800d24a:	f3bf 8f6f 	isb	sy
 800d24e:	f3bf 8f4f 	dsb	sy
 800d252:	e7fe      	b.n	800d252 <prvTaskExitError+0x1e>
 800d254:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d258:	f383 8811 	msr	BASEPRI, r3
 800d25c:	f3bf 8f6f 	isb	sy
 800d260:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d264:	9b01      	ldr	r3, [sp, #4]
 800d266:	2b00      	cmp	r3, #0
 800d268:	d0fc      	beq.n	800d264 <prvTaskExitError+0x30>
}
 800d26a:	b002      	add	sp, #8
 800d26c:	4770      	bx	lr
 800d26e:	bf00      	nop
 800d270:	200000a0 	.word	0x200000a0

0800d274 <pxPortInitialiseStack>:
{
 800d274:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d276:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d27a:	4c07      	ldr	r4, [pc, #28]	; (800d298 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d27c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d280:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d284:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d288:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d28c:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d290:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d294:	3844      	subs	r0, #68	; 0x44
 800d296:	4770      	bx	lr
 800d298:	0800d235 	.word	0x0800d235
 800d29c:	00000000 	.word	0x00000000

0800d2a0 <SVC_Handler>:
	__asm volatile (
 800d2a0:	4b07      	ldr	r3, [pc, #28]	; (800d2c0 <pxCurrentTCBConst2>)
 800d2a2:	6819      	ldr	r1, [r3, #0]
 800d2a4:	6808      	ldr	r0, [r1, #0]
 800d2a6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2aa:	f380 8809 	msr	PSP, r0
 800d2ae:	f3bf 8f6f 	isb	sy
 800d2b2:	f04f 0000 	mov.w	r0, #0
 800d2b6:	f380 8811 	msr	BASEPRI, r0
 800d2ba:	4770      	bx	lr
 800d2bc:	f3af 8000 	nop.w

0800d2c0 <pxCurrentTCBConst2>:
 800d2c0:	20012c88 	.word	0x20012c88

0800d2c4 <vPortEnterCritical>:
 800d2c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2c8:	f383 8811 	msr	BASEPRI, r3
 800d2cc:	f3bf 8f6f 	isb	sy
 800d2d0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d2d4:	4a0b      	ldr	r2, [pc, #44]	; (800d304 <vPortEnterCritical+0x40>)
 800d2d6:	6813      	ldr	r3, [r2, #0]
 800d2d8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d2da:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d2dc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d2de:	d000      	beq.n	800d2e2 <vPortEnterCritical+0x1e>
}
 800d2e0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d2e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d2e6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d2ea:	b2db      	uxtb	r3, r3
 800d2ec:	2b00      	cmp	r3, #0
 800d2ee:	d0f7      	beq.n	800d2e0 <vPortEnterCritical+0x1c>
 800d2f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2f4:	f383 8811 	msr	BASEPRI, r3
 800d2f8:	f3bf 8f6f 	isb	sy
 800d2fc:	f3bf 8f4f 	dsb	sy
 800d300:	e7fe      	b.n	800d300 <vPortEnterCritical+0x3c>
 800d302:	bf00      	nop
 800d304:	200000a0 	.word	0x200000a0

0800d308 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d308:	4a08      	ldr	r2, [pc, #32]	; (800d32c <vPortExitCritical+0x24>)
 800d30a:	6813      	ldr	r3, [r2, #0]
 800d30c:	b943      	cbnz	r3, 800d320 <vPortExitCritical+0x18>
 800d30e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d312:	f383 8811 	msr	BASEPRI, r3
 800d316:	f3bf 8f6f 	isb	sy
 800d31a:	f3bf 8f4f 	dsb	sy
 800d31e:	e7fe      	b.n	800d31e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d320:	3b01      	subs	r3, #1
 800d322:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d324:	b90b      	cbnz	r3, 800d32a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d326:	f383 8811 	msr	BASEPRI, r3
}
 800d32a:	4770      	bx	lr
 800d32c:	200000a0 	.word	0x200000a0

0800d330 <PendSV_Handler>:
	__asm volatile
 800d330:	f3ef 8009 	mrs	r0, PSP
 800d334:	f3bf 8f6f 	isb	sy
 800d338:	4b15      	ldr	r3, [pc, #84]	; (800d390 <pxCurrentTCBConst>)
 800d33a:	681a      	ldr	r2, [r3, #0]
 800d33c:	f01e 0f10 	tst.w	lr, #16
 800d340:	bf08      	it	eq
 800d342:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d346:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d34a:	6010      	str	r0, [r2, #0]
 800d34c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d350:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d354:	f380 8811 	msr	BASEPRI, r0
 800d358:	f3bf 8f4f 	dsb	sy
 800d35c:	f3bf 8f6f 	isb	sy
 800d360:	f001 fd54 	bl	800ee0c <vTaskSwitchContext>
 800d364:	f04f 0000 	mov.w	r0, #0
 800d368:	f380 8811 	msr	BASEPRI, r0
 800d36c:	bc09      	pop	{r0, r3}
 800d36e:	6819      	ldr	r1, [r3, #0]
 800d370:	6808      	ldr	r0, [r1, #0]
 800d372:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d376:	f01e 0f10 	tst.w	lr, #16
 800d37a:	bf08      	it	eq
 800d37c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d380:	f380 8809 	msr	PSP, r0
 800d384:	f3bf 8f6f 	isb	sy
 800d388:	4770      	bx	lr
 800d38a:	bf00      	nop
 800d38c:	f3af 8000 	nop.w

0800d390 <pxCurrentTCBConst>:
 800d390:	20012c88 	.word	0x20012c88

0800d394 <xPortSysTickHandler>:
{
 800d394:	b508      	push	{r3, lr}
	__asm volatile
 800d396:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d39a:	f383 8811 	msr	BASEPRI, r3
 800d39e:	f3bf 8f6f 	isb	sy
 800d3a2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d3a6:	f001 fd21 	bl	800edec <xTaskIncrementTick>
 800d3aa:	b128      	cbz	r0, 800d3b8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d3ac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d3b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d3b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d3b8:	2300      	movs	r3, #0
 800d3ba:	f383 8811 	msr	BASEPRI, r3
}
 800d3be:	bd08      	pop	{r3, pc}

0800d3c0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d3c0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d3c4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d3c6:	4906      	ldr	r1, [pc, #24]	; (800d3e0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d3c8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d3ca:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d3cc:	680b      	ldr	r3, [r1, #0]
 800d3ce:	4905      	ldr	r1, [pc, #20]	; (800d3e4 <vPortSetupTimerInterrupt+0x24>)
 800d3d0:	fba1 1303 	umull	r1, r3, r1, r3
 800d3d4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d3d6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d3d8:	3b01      	subs	r3, #1
 800d3da:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d3dc:	6110      	str	r0, [r2, #16]
}
 800d3de:	4770      	bx	lr
 800d3e0:	20000094 	.word	0x20000094
 800d3e4:	10624dd3 	.word	0x10624dd3

0800d3e8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d3e8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d3ec:	4a49      	ldr	r2, [pc, #292]	; (800d514 <xPortStartScheduler+0x12c>)
 800d3ee:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d3f2:	4291      	cmp	r1, r2
 800d3f4:	d043      	beq.n	800d47e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d3f6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d3fa:	4b47      	ldr	r3, [pc, #284]	; (800d518 <xPortStartScheduler+0x130>)
 800d3fc:	429a      	cmp	r2, r3
 800d3fe:	d035      	beq.n	800d46c <xPortStartScheduler+0x84>
{
 800d400:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d402:	4b46      	ldr	r3, [pc, #280]	; (800d51c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d404:	4846      	ldr	r0, [pc, #280]	; (800d520 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d406:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d408:	4c46      	ldr	r4, [pc, #280]	; (800d524 <xPortStartScheduler+0x13c>)
{
 800d40a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d40c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d40e:	b2d2      	uxtb	r2, r2
 800d410:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d412:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d414:	781b      	ldrb	r3, [r3, #0]
 800d416:	b2db      	uxtb	r3, r3
 800d418:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d41c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d420:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d424:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d428:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d42a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d42c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d42e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d430:	bf48      	it	mi
 800d432:	2206      	movmi	r2, #6
 800d434:	d511      	bpl.n	800d45a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d436:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d43a:	005b      	lsls	r3, r3, #1
 800d43c:	b2db      	uxtb	r3, r3
 800d43e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d442:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d446:	0609      	lsls	r1, r1, #24
 800d448:	4610      	mov	r0, r2
 800d44a:	f102 32ff 	add.w	r2, r2, #4294967295
 800d44e:	d4f2      	bmi.n	800d436 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d450:	2803      	cmp	r0, #3
 800d452:	6020      	str	r0, [r4, #0]
 800d454:	f88d 3007 	strb.w	r3, [sp, #7]
 800d458:	d01a      	beq.n	800d490 <xPortStartScheduler+0xa8>
	__asm volatile
 800d45a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d45e:	f383 8811 	msr	BASEPRI, r3
 800d462:	f3bf 8f6f 	isb	sy
 800d466:	f3bf 8f4f 	dsb	sy
 800d46a:	e7fe      	b.n	800d46a <xPortStartScheduler+0x82>
 800d46c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d470:	f383 8811 	msr	BASEPRI, r3
 800d474:	f3bf 8f6f 	isb	sy
 800d478:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d47c:	e7fe      	b.n	800d47c <xPortStartScheduler+0x94>
 800d47e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d482:	f383 8811 	msr	BASEPRI, r3
 800d486:	f3bf 8f6f 	isb	sy
 800d48a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d48e:	e7fe      	b.n	800d48e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d490:	9b02      	ldr	r3, [sp, #8]
 800d492:	4a22      	ldr	r2, [pc, #136]	; (800d51c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d494:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d498:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d49c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d49e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d4a0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d4a2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d4a6:	4c20      	ldr	r4, [pc, #128]	; (800d528 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d4a8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d4ac:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d4b0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d4b4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d4b8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d4bc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d4be:	f7ff ff7f 	bl	800d3c0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d4c2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d4c4:	f7ff feac 	bl	800d220 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d4c8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d4cc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d4d0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d4d4:	f7ff fe90 	bl	800d1f8 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d4d8:	f001 fc98 	bl	800ee0c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d4dc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d4de:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d4e0:	3301      	adds	r3, #1
 800d4e2:	d008      	beq.n	800d4f6 <xPortStartScheduler+0x10e>
 800d4e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4e8:	f383 8811 	msr	BASEPRI, r3
 800d4ec:	f3bf 8f6f 	isb	sy
 800d4f0:	f3bf 8f4f 	dsb	sy
 800d4f4:	e7fe      	b.n	800d4f4 <xPortStartScheduler+0x10c>
 800d4f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4fa:	f383 8811 	msr	BASEPRI, r3
 800d4fe:	f3bf 8f6f 	isb	sy
 800d502:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d506:	9b03      	ldr	r3, [sp, #12]
 800d508:	2b00      	cmp	r3, #0
 800d50a:	d0fc      	beq.n	800d506 <xPortStartScheduler+0x11e>
}
 800d50c:	2000      	movs	r0, #0
 800d50e:	b004      	add	sp, #16
 800d510:	bd70      	pop	{r4, r5, r6, pc}
 800d512:	bf00      	nop
 800d514:	410fc271 	.word	0x410fc271
 800d518:	410fc270 	.word	0x410fc270
 800d51c:	e000e400 	.word	0xe000e400
 800d520:	20012c40 	.word	0x20012c40
 800d524:	20012c44 	.word	0x20012c44
 800d528:	200000a0 	.word	0x200000a0

0800d52c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d52c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d530:	2b0f      	cmp	r3, #15
 800d532:	d90e      	bls.n	800d552 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d534:	4911      	ldr	r1, [pc, #68]	; (800d57c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d536:	4a12      	ldr	r2, [pc, #72]	; (800d580 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d538:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d53a:	7812      	ldrb	r2, [r2, #0]
 800d53c:	429a      	cmp	r2, r3
 800d53e:	d908      	bls.n	800d552 <vPortValidateInterruptPriority+0x26>
 800d540:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d544:	f383 8811 	msr	BASEPRI, r3
 800d548:	f3bf 8f6f 	isb	sy
 800d54c:	f3bf 8f4f 	dsb	sy
 800d550:	e7fe      	b.n	800d550 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d552:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d556:	4a0b      	ldr	r2, [pc, #44]	; (800d584 <vPortValidateInterruptPriority+0x58>)
 800d558:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d55c:	6812      	ldr	r2, [r2, #0]
 800d55e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d562:	4293      	cmp	r3, r2
 800d564:	d908      	bls.n	800d578 <vPortValidateInterruptPriority+0x4c>
 800d566:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d56a:	f383 8811 	msr	BASEPRI, r3
 800d56e:	f3bf 8f6f 	isb	sy
 800d572:	f3bf 8f4f 	dsb	sy
 800d576:	e7fe      	b.n	800d576 <vPortValidateInterruptPriority+0x4a>
	}
 800d578:	4770      	bx	lr
 800d57a:	bf00      	nop
 800d57c:	e000e3f0 	.word	0xe000e3f0
 800d580:	20012c40 	.word	0x20012c40
 800d584:	20012c44 	.word	0x20012c44

0800d588 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d588:	b570      	push	{r4, r5, r6, lr}
 800d58a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d58c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d58e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d590:	b920      	cbnz	r0, 800d59c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d592:	6825      	ldr	r5, [r4, #0]
 800d594:	b34d      	cbz	r5, 800d5ea <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d596:	3601      	adds	r6, #1
 800d598:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d59a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d59c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d59e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d5a0:	b97d      	cbnz	r5, 800d5c2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d5a2:	6860      	ldr	r0, [r4, #4]
 800d5a4:	f01d fd67 	bl	802b076 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d5a8:	6863      	ldr	r3, [r4, #4]
 800d5aa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d5ac:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d5ae:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d5b0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d5b2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d5b4:	bf24      	itt	cs
 800d5b6:	6823      	ldrcs	r3, [r4, #0]
 800d5b8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d5ba:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d5bc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d5be:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d5c0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d5c2:	68e0      	ldr	r0, [r4, #12]
 800d5c4:	f01d fd57 	bl	802b076 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d5c8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d5ca:	68e3      	ldr	r3, [r4, #12]
 800d5cc:	4251      	negs	r1, r2
 800d5ce:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d5d0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d5d2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d5d4:	4293      	cmp	r3, r2
 800d5d6:	d202      	bcs.n	800d5de <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d5d8:	68a3      	ldr	r3, [r4, #8]
 800d5da:	440b      	add	r3, r1
 800d5dc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d5de:	2d02      	cmp	r5, #2
 800d5e0:	d008      	beq.n	800d5f4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d5e2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d5e4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d5e6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d5e8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d5ea:	68a0      	ldr	r0, [r4, #8]
 800d5ec:	f001 fde0 	bl	800f1b0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d5f0:	60a5      	str	r5, [r4, #8]
 800d5f2:	e7d0      	b.n	800d596 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d5f4:	2e01      	cmp	r6, #1
 800d5f6:	bf38      	it	cc
 800d5f8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d5fa:	2000      	movs	r0, #0
 800d5fc:	e7cc      	b.n	800d598 <prvCopyDataToQueue+0x10>
 800d5fe:	bf00      	nop

0800d600 <xQueueGenericCreateStatic>:
	{
 800d600:	b530      	push	{r4, r5, lr}
 800d602:	b083      	sub	sp, #12
 800d604:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d608:	b940      	cbnz	r0, 800d61c <xQueueGenericCreateStatic+0x1c>
 800d60a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d60e:	f383 8811 	msr	BASEPRI, r3
 800d612:	f3bf 8f6f 	isb	sy
 800d616:	f3bf 8f4f 	dsb	sy
 800d61a:	e7fe      	b.n	800d61a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d61c:	461d      	mov	r5, r3
 800d61e:	b17b      	cbz	r3, 800d640 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d620:	b302      	cbz	r2, 800d664 <xQueueGenericCreateStatic+0x64>
 800d622:	b1b1      	cbz	r1, 800d652 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d624:	2350      	movs	r3, #80	; 0x50
 800d626:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d628:	9b01      	ldr	r3, [sp, #4]
 800d62a:	2b50      	cmp	r3, #80	; 0x50
 800d62c:	d023      	beq.n	800d676 <xQueueGenericCreateStatic+0x76>
 800d62e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d632:	f383 8811 	msr	BASEPRI, r3
 800d636:	f3bf 8f6f 	isb	sy
 800d63a:	f3bf 8f4f 	dsb	sy
 800d63e:	e7fe      	b.n	800d63e <xQueueGenericCreateStatic+0x3e>
 800d640:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d644:	f383 8811 	msr	BASEPRI, r3
 800d648:	f3bf 8f6f 	isb	sy
 800d64c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d650:	e7fe      	b.n	800d650 <xQueueGenericCreateStatic+0x50>
 800d652:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d656:	f383 8811 	msr	BASEPRI, r3
 800d65a:	f3bf 8f6f 	isb	sy
 800d65e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d662:	e7fe      	b.n	800d662 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d664:	bb89      	cbnz	r1, 800d6ca <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d666:	2250      	movs	r2, #80	; 0x50
 800d668:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d66a:	9a01      	ldr	r2, [sp, #4]
 800d66c:	2a50      	cmp	r2, #80	; 0x50
 800d66e:	d1de      	bne.n	800d62e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d670:	9a01      	ldr	r2, [sp, #4]
 800d672:	462a      	mov	r2, r5
 800d674:	e000      	b.n	800d678 <xQueueGenericCreateStatic+0x78>
 800d676:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d678:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d67a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d67c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d680:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d684:	f7ff fe1e 	bl	800d2c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d688:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d68c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d68e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d690:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d694:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d696:	4401      	add	r1, r0
 800d698:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d69a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d69c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d69e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d6a0:	21ff      	movs	r1, #255	; 0xff
 800d6a2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6a6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d6a8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d6ac:	f105 0010 	add.w	r0, r5, #16
 800d6b0:	f7ff fd56 	bl	800d160 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d6b4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d6b8:	f7ff fd52 	bl	800d160 <vListInitialise>
	taskEXIT_CRITICAL();
 800d6bc:	f7ff fe24 	bl	800d308 <vPortExitCritical>
	}
 800d6c0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d6c2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d6c6:	b003      	add	sp, #12
 800d6c8:	bd30      	pop	{r4, r5, pc}
 800d6ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ce:	f383 8811 	msr	BASEPRI, r3
 800d6d2:	f3bf 8f6f 	isb	sy
 800d6d6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d6da:	e7fe      	b.n	800d6da <xQueueGenericCreateStatic+0xda>

0800d6dc <xQueueGenericCreate>:
	{
 800d6dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d6de:	b940      	cbnz	r0, 800d6f2 <xQueueGenericCreate+0x16>
 800d6e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6e4:	f383 8811 	msr	BASEPRI, r3
 800d6e8:	f3bf 8f6f 	isb	sy
 800d6ec:	f3bf 8f4f 	dsb	sy
 800d6f0:	e7fe      	b.n	800d6f0 <xQueueGenericCreate+0x14>
 800d6f2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d6f4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d6f8:	3050      	adds	r0, #80	; 0x50
 800d6fa:	460e      	mov	r6, r1
 800d6fc:	4617      	mov	r7, r2
 800d6fe:	f7ff fc0f 	bl	800cf20 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d702:	4604      	mov	r4, r0
 800d704:	b340      	cbz	r0, 800d758 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d706:	2300      	movs	r3, #0
 800d708:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d70c:	b336      	cbz	r6, 800d75c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d70e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d712:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d714:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d718:	f7ff fdd4 	bl	800d2c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d71c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d720:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d722:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d724:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d728:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d72a:	440a      	add	r2, r1
 800d72c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d72e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d730:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d732:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d734:	22ff      	movs	r2, #255	; 0xff
 800d736:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d73a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d73c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d740:	f104 0010 	add.w	r0, r4, #16
 800d744:	f7ff fd0c 	bl	800d160 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d748:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d74c:	f7ff fd08 	bl	800d160 <vListInitialise>
	taskEXIT_CRITICAL();
 800d750:	f7ff fdda 	bl	800d308 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d754:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d758:	4620      	mov	r0, r4
 800d75a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d75c:	4603      	mov	r3, r0
 800d75e:	e7d8      	b.n	800d712 <xQueueGenericCreate+0x36>

0800d760 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d760:	b940      	cbnz	r0, 800d774 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d762:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d766:	f383 8811 	msr	BASEPRI, r3
 800d76a:	f3bf 8f6f 	isb	sy
 800d76e:	f3bf 8f4f 	dsb	sy
 800d772:	e7fe      	b.n	800d772 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d774:	4288      	cmp	r0, r1
 800d776:	d208      	bcs.n	800d78a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d778:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d77c:	f383 8811 	msr	BASEPRI, r3
 800d780:	f3bf 8f6f 	isb	sy
 800d784:	f3bf 8f4f 	dsb	sy
 800d788:	e7fe      	b.n	800d788 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d78a:	b530      	push	{r4, r5, lr}
 800d78c:	4615      	mov	r5, r2
 800d78e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d790:	2a00      	cmp	r2, #0
 800d792:	d03c      	beq.n	800d80e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d794:	2350      	movs	r3, #80	; 0x50
 800d796:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d798:	9b03      	ldr	r3, [sp, #12]
 800d79a:	2b50      	cmp	r3, #80	; 0x50
 800d79c:	d008      	beq.n	800d7b0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d79e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7a2:	f383 8811 	msr	BASEPRI, r3
 800d7a6:	f3bf 8f6f 	isb	sy
 800d7aa:	f3bf 8f4f 	dsb	sy
 800d7ae:	e7fe      	b.n	800d7ae <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d7b0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d7b2:	2301      	movs	r3, #1
 800d7b4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d7b8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d7ba:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d7be:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d7c0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d7c2:	f7ff fd7f 	bl	800d2c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7c6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d7ca:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d7cc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7ce:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7d2:	1ac3      	subs	r3, r0, r3
 800d7d4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7d6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d7d8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d7dc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7e0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d7e2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d7e4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7e8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d7ea:	f105 0010 	add.w	r0, r5, #16
 800d7ee:	f7ff fcb7 	bl	800d160 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d7f2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d7f6:	f7ff fcb3 	bl	800d160 <vListInitialise>
	taskEXIT_CRITICAL();
 800d7fa:	f7ff fd85 	bl	800d308 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d7fe:	9901      	ldr	r1, [sp, #4]
 800d800:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d802:	2302      	movs	r3, #2
	}
 800d804:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d806:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d80a:	b005      	add	sp, #20
 800d80c:	bd30      	pop	{r4, r5, pc}
 800d80e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d812:	f383 8811 	msr	BASEPRI, r3
 800d816:	f3bf 8f6f 	isb	sy
 800d81a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d81e:	e7fe      	b.n	800d81e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d820 <xQueueCreateCountingSemaphore>:
	{
 800d820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d822:	b940      	cbnz	r0, 800d836 <xQueueCreateCountingSemaphore+0x16>
 800d824:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d828:	f383 8811 	msr	BASEPRI, r3
 800d82c:	f3bf 8f6f 	isb	sy
 800d830:	f3bf 8f4f 	dsb	sy
 800d834:	e7fe      	b.n	800d834 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d836:	4288      	cmp	r0, r1
 800d838:	460e      	mov	r6, r1
 800d83a:	4604      	mov	r4, r0
 800d83c:	d208      	bcs.n	800d850 <xQueueCreateCountingSemaphore+0x30>
 800d83e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d842:	f383 8811 	msr	BASEPRI, r3
 800d846:	f3bf 8f6f 	isb	sy
 800d84a:	f3bf 8f4f 	dsb	sy
 800d84e:	e7fe      	b.n	800d84e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d850:	2050      	movs	r0, #80	; 0x50
 800d852:	f7ff fb65 	bl	800cf20 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d856:	4605      	mov	r5, r0
 800d858:	b330      	cbz	r0, 800d8a8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d85a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d85c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d860:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d864:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d866:	f7ff fd2d 	bl	800d2c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d86a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d86e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d870:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d872:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d876:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d878:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d87a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d87c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d87e:	22ff      	movs	r2, #255	; 0xff
 800d880:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d884:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d886:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d888:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d88c:	f105 0010 	add.w	r0, r5, #16
 800d890:	f7ff fc66 	bl	800d160 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d894:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d898:	f7ff fc62 	bl	800d160 <vListInitialise>
	taskEXIT_CRITICAL();
 800d89c:	f7ff fd34 	bl	800d308 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d8a0:	2302      	movs	r3, #2
 800d8a2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d8a6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d8a8:	4628      	mov	r0, r5
 800d8aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d8ac <xQueueGenericSend>:
{
 800d8ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d8b0:	b085      	sub	sp, #20
 800d8b2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d8b4:	2800      	cmp	r0, #0
 800d8b6:	f000 80a4 	beq.w	800da02 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d8ba:	4688      	mov	r8, r1
 800d8bc:	461f      	mov	r7, r3
 800d8be:	4604      	mov	r4, r0
 800d8c0:	2900      	cmp	r1, #0
 800d8c2:	f000 8091 	beq.w	800d9e8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d8c6:	2f02      	cmp	r7, #2
 800d8c8:	d10b      	bne.n	800d8e2 <xQueueGenericSend+0x36>
 800d8ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d8cc:	2b01      	cmp	r3, #1
 800d8ce:	d008      	beq.n	800d8e2 <xQueueGenericSend+0x36>
 800d8d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8d4:	f383 8811 	msr	BASEPRI, r3
 800d8d8:	f3bf 8f6f 	isb	sy
 800d8dc:	f3bf 8f4f 	dsb	sy
 800d8e0:	e7fe      	b.n	800d8e0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d8e2:	f001 fc0f 	bl	800f104 <xTaskGetSchedulerState>
 800d8e6:	4605      	mov	r5, r0
 800d8e8:	2800      	cmp	r0, #0
 800d8ea:	f000 8093 	beq.w	800da14 <xQueueGenericSend+0x168>
 800d8ee:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d8f0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d8f4:	f7ff fce6 	bl	800d2c4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d8f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d8fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d8fc:	429a      	cmp	r2, r3
 800d8fe:	f0c0 80ef 	bcc.w	800dae0 <xQueueGenericSend+0x234>
 800d902:	2f02      	cmp	r7, #2
 800d904:	f000 80ec 	beq.w	800dae0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d908:	9801      	ldr	r0, [sp, #4]
 800d90a:	2800      	cmp	r0, #0
 800d90c:	f000 8101 	beq.w	800db12 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d910:	2d00      	cmp	r5, #0
 800d912:	f000 80e1 	beq.w	800dad8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d916:	f7ff fcf7 	bl	800d308 <vPortExitCritical>
		vTaskSuspendAll();
 800d91a:	f001 fa49 	bl	800edb0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d91e:	f7ff fcd1 	bl	800d2c4 <vPortEnterCritical>
 800d922:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d926:	2bff      	cmp	r3, #255	; 0xff
 800d928:	bf04      	itt	eq
 800d92a:	2300      	moveq	r3, #0
 800d92c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d930:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d934:	2bff      	cmp	r3, #255	; 0xff
 800d936:	bf04      	itt	eq
 800d938:	2300      	moveq	r3, #0
 800d93a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d93e:	f7ff fce3 	bl	800d308 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d942:	a901      	add	r1, sp, #4
 800d944:	a802      	add	r0, sp, #8
 800d946:	f001 fb8f 	bl	800f068 <xTaskCheckForTimeOut>
 800d94a:	2800      	cmp	r0, #0
 800d94c:	f040 80e6 	bne.w	800db1c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d950:	f7ff fcb8 	bl	800d2c4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d954:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d956:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d958:	429a      	cmp	r2, r3
 800d95a:	d068      	beq.n	800da2e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d95c:	f7ff fcd4 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d960:	f7ff fcb0 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d964:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d968:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d96a:	2d00      	cmp	r5, #0
 800d96c:	dc04      	bgt.n	800d978 <xQueueGenericSend+0xcc>
 800d96e:	e011      	b.n	800d994 <xQueueGenericSend+0xe8>
			--cTxLock;
 800d970:	1e6a      	subs	r2, r5, #1
 800d972:	b2d3      	uxtb	r3, r2
 800d974:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d976:	b16b      	cbz	r3, 800d994 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d978:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d97a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d97c:	b153      	cbz	r3, 800d994 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d97e:	f001 fb1f 	bl	800efc0 <xTaskRemoveFromEventList>
 800d982:	2800      	cmp	r0, #0
 800d984:	d0f4      	beq.n	800d970 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800d986:	f001 fbb7 	bl	800f0f8 <vTaskMissedYield>
			--cTxLock;
 800d98a:	1e6a      	subs	r2, r5, #1
 800d98c:	b2d3      	uxtb	r3, r2
 800d98e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d990:	2b00      	cmp	r3, #0
 800d992:	d1f1      	bne.n	800d978 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d994:	23ff      	movs	r3, #255	; 0xff
 800d996:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d99a:	f7ff fcb5 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d99e:	f7ff fc91 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d9a2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800d9a6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9a8:	2d00      	cmp	r5, #0
 800d9aa:	dd14      	ble.n	800d9d6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9ac:	f104 0910 	add.w	r9, r4, #16
 800d9b0:	e003      	b.n	800d9ba <xQueueGenericSend+0x10e>
				--cRxLock;
 800d9b2:	1e6a      	subs	r2, r5, #1
 800d9b4:	b2d3      	uxtb	r3, r2
 800d9b6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9b8:	b16b      	cbz	r3, 800d9d6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9ba:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9bc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9be:	b153      	cbz	r3, 800d9d6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9c0:	f001 fafe 	bl	800efc0 <xTaskRemoveFromEventList>
 800d9c4:	2800      	cmp	r0, #0
 800d9c6:	d0f4      	beq.n	800d9b2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800d9c8:	f001 fb96 	bl	800f0f8 <vTaskMissedYield>
				--cRxLock;
 800d9cc:	1e6a      	subs	r2, r5, #1
 800d9ce:	b2d3      	uxtb	r3, r2
 800d9d0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9d2:	2b00      	cmp	r3, #0
 800d9d4:	d1f1      	bne.n	800d9ba <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800d9d6:	23ff      	movs	r3, #255	; 0xff
 800d9d8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d9dc:	f7ff fc94 	bl	800d308 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d9e0:	f001 f9ee 	bl	800edc0 <xTaskResumeAll>
 800d9e4:	2501      	movs	r5, #1
 800d9e6:	e785      	b.n	800d8f4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d9e8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d9ea:	2b00      	cmp	r3, #0
 800d9ec:	f43f af6b 	beq.w	800d8c6 <xQueueGenericSend+0x1a>
 800d9f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9f4:	f383 8811 	msr	BASEPRI, r3
 800d9f8:	f3bf 8f6f 	isb	sy
 800d9fc:	f3bf 8f4f 	dsb	sy
 800da00:	e7fe      	b.n	800da00 <xQueueGenericSend+0x154>
 800da02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da06:	f383 8811 	msr	BASEPRI, r3
 800da0a:	f3bf 8f6f 	isb	sy
 800da0e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800da12:	e7fe      	b.n	800da12 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800da14:	9b01      	ldr	r3, [sp, #4]
 800da16:	2b00      	cmp	r3, #0
 800da18:	f43f af6a 	beq.w	800d8f0 <xQueueGenericSend+0x44>
 800da1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da20:	f383 8811 	msr	BASEPRI, r3
 800da24:	f3bf 8f6f 	isb	sy
 800da28:	f3bf 8f4f 	dsb	sy
 800da2c:	e7fe      	b.n	800da2c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800da2e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800da32:	f7ff fc69 	bl	800d308 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800da36:	9901      	ldr	r1, [sp, #4]
 800da38:	4648      	mov	r0, r9
 800da3a:	f001 fa33 	bl	800eea4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800da3e:	f7ff fc41 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800da42:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800da46:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da48:	2d00      	cmp	r5, #0
 800da4a:	dc04      	bgt.n	800da56 <xQueueGenericSend+0x1aa>
 800da4c:	e011      	b.n	800da72 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800da4e:	1e6b      	subs	r3, r5, #1
 800da50:	b2da      	uxtb	r2, r3
 800da52:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da54:	b16a      	cbz	r2, 800da72 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da56:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da58:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da5a:	b153      	cbz	r3, 800da72 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da5c:	f001 fab0 	bl	800efc0 <xTaskRemoveFromEventList>
 800da60:	2800      	cmp	r0, #0
 800da62:	d0f4      	beq.n	800da4e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800da64:	f001 fb48 	bl	800f0f8 <vTaskMissedYield>
			--cTxLock;
 800da68:	1e6b      	subs	r3, r5, #1
 800da6a:	b2da      	uxtb	r2, r3
 800da6c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da6e:	2a00      	cmp	r2, #0
 800da70:	d1f1      	bne.n	800da56 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800da72:	23ff      	movs	r3, #255	; 0xff
 800da74:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800da78:	f7ff fc46 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800da7c:	f7ff fc22 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800da80:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800da84:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da86:	2d00      	cmp	r5, #0
 800da88:	dc04      	bgt.n	800da94 <xQueueGenericSend+0x1e8>
 800da8a:	e011      	b.n	800dab0 <xQueueGenericSend+0x204>
				--cRxLock;
 800da8c:	1e6b      	subs	r3, r5, #1
 800da8e:	b2da      	uxtb	r2, r3
 800da90:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da92:	b16a      	cbz	r2, 800dab0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da94:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da96:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da98:	b153      	cbz	r3, 800dab0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da9a:	f001 fa91 	bl	800efc0 <xTaskRemoveFromEventList>
 800da9e:	2800      	cmp	r0, #0
 800daa0:	d0f4      	beq.n	800da8c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800daa2:	f001 fb29 	bl	800f0f8 <vTaskMissedYield>
				--cRxLock;
 800daa6:	1e6b      	subs	r3, r5, #1
 800daa8:	b2da      	uxtb	r2, r3
 800daaa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800daac:	2a00      	cmp	r2, #0
 800daae:	d1f1      	bne.n	800da94 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800dab0:	23ff      	movs	r3, #255	; 0xff
 800dab2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dab6:	f7ff fc27 	bl	800d308 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800daba:	f001 f981 	bl	800edc0 <xTaskResumeAll>
 800dabe:	2800      	cmp	r0, #0
 800dac0:	d190      	bne.n	800d9e4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800dac2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dac6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800daca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dace:	f3bf 8f4f 	dsb	sy
 800dad2:	f3bf 8f6f 	isb	sy
 800dad6:	e785      	b.n	800d9e4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dad8:	a802      	add	r0, sp, #8
 800dada:	f001 fab9 	bl	800f050 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800dade:	e71a      	b.n	800d916 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dae0:	463a      	mov	r2, r7
 800dae2:	4641      	mov	r1, r8
 800dae4:	4620      	mov	r0, r4
 800dae6:	f7ff fd4f 	bl	800d588 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800daea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800daec:	2b00      	cmp	r3, #0
 800daee:	d153      	bne.n	800db98 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800daf0:	b148      	cbz	r0, 800db06 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800daf2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800daf6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dafa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dafe:	f3bf 8f4f 	dsb	sy
 800db02:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800db06:	f7ff fbff 	bl	800d308 <vPortExitCritical>
				return pdPASS;
 800db0a:	2001      	movs	r0, #1
}
 800db0c:	b005      	add	sp, #20
 800db0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db12:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800db14:	f7ff fbf8 	bl	800d308 <vPortExitCritical>
					return errQUEUE_FULL;
 800db18:	9800      	ldr	r0, [sp, #0]
 800db1a:	e7f7      	b.n	800db0c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800db1c:	f7ff fbd2 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800db20:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800db24:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db26:	2d00      	cmp	r5, #0
 800db28:	dd10      	ble.n	800db4c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db2a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800db2e:	e003      	b.n	800db38 <xQueueGenericSend+0x28c>
			--cTxLock;
 800db30:	1e6b      	subs	r3, r5, #1
 800db32:	b2da      	uxtb	r2, r3
 800db34:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db36:	b14a      	cbz	r2, 800db4c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db38:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db3a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db3c:	b133      	cbz	r3, 800db4c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db3e:	f001 fa3f 	bl	800efc0 <xTaskRemoveFromEventList>
 800db42:	2800      	cmp	r0, #0
 800db44:	d0f4      	beq.n	800db30 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800db46:	f001 fad7 	bl	800f0f8 <vTaskMissedYield>
 800db4a:	e7f1      	b.n	800db30 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800db4c:	23ff      	movs	r3, #255	; 0xff
 800db4e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800db52:	f7ff fbd9 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800db56:	f7ff fbb5 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800db5a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800db5e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db60:	2d00      	cmp	r5, #0
 800db62:	dd10      	ble.n	800db86 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db64:	f104 0610 	add.w	r6, r4, #16
 800db68:	e003      	b.n	800db72 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800db6a:	1e6b      	subs	r3, r5, #1
 800db6c:	b2da      	uxtb	r2, r3
 800db6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db70:	b14a      	cbz	r2, 800db86 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db72:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db74:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800db76:	b133      	cbz	r3, 800db86 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db78:	f001 fa22 	bl	800efc0 <xTaskRemoveFromEventList>
 800db7c:	2800      	cmp	r0, #0
 800db7e:	d0f4      	beq.n	800db6a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800db80:	f001 faba 	bl	800f0f8 <vTaskMissedYield>
 800db84:	e7f1      	b.n	800db6a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800db86:	23ff      	movs	r3, #255	; 0xff
 800db88:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800db8c:	f7ff fbbc 	bl	800d308 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800db90:	f001 f916 	bl	800edc0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800db94:	2000      	movs	r0, #0
 800db96:	e7b9      	b.n	800db0c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db98:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800db9c:	f001 fa10 	bl	800efc0 <xTaskRemoveFromEventList>
 800dba0:	2800      	cmp	r0, #0
 800dba2:	d0b0      	beq.n	800db06 <xQueueGenericSend+0x25a>
 800dba4:	e7a5      	b.n	800daf2 <xQueueGenericSend+0x246>
 800dba6:	bf00      	nop

0800dba8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800dba8:	2800      	cmp	r0, #0
 800dbaa:	d04b      	beq.n	800dc44 <xQueueGenericSendFromISR+0x9c>
{
 800dbac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbb0:	460e      	mov	r6, r1
 800dbb2:	4617      	mov	r7, r2
 800dbb4:	461d      	mov	r5, r3
 800dbb6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dbb8:	b321      	cbz	r1, 800dc04 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dbba:	2d02      	cmp	r5, #2
 800dbbc:	d10b      	bne.n	800dbd6 <xQueueGenericSendFromISR+0x2e>
 800dbbe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dbc0:	2b01      	cmp	r3, #1
 800dbc2:	d008      	beq.n	800dbd6 <xQueueGenericSendFromISR+0x2e>
 800dbc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbc8:	f383 8811 	msr	BASEPRI, r3
 800dbcc:	f3bf 8f6f 	isb	sy
 800dbd0:	f3bf 8f4f 	dsb	sy
 800dbd4:	e7fe      	b.n	800dbd4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dbd6:	f7ff fca9 	bl	800d52c <vPortValidateInterruptPriority>
	__asm volatile
 800dbda:	f3ef 8811 	mrs	r8, BASEPRI
 800dbde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbe2:	f383 8811 	msr	BASEPRI, r3
 800dbe6:	f3bf 8f6f 	isb	sy
 800dbea:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dbee:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dbf0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dbf2:	429a      	cmp	r2, r3
 800dbf4:	d312      	bcc.n	800dc1c <xQueueGenericSendFromISR+0x74>
 800dbf6:	2d02      	cmp	r5, #2
 800dbf8:	d010      	beq.n	800dc1c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800dbfa:	2000      	movs	r0, #0
	__asm volatile
 800dbfc:	f388 8811 	msr	BASEPRI, r8
}
 800dc00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dc04:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dc06:	2b00      	cmp	r3, #0
 800dc08:	d0d7      	beq.n	800dbba <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800dc0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc0e:	f383 8811 	msr	BASEPRI, r3
 800dc12:	f3bf 8f6f 	isb	sy
 800dc16:	f3bf 8f4f 	dsb	sy
 800dc1a:	e7fe      	b.n	800dc1a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dc1c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800dc1e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dc22:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dc24:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800dc26:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dc28:	4620      	mov	r0, r4
 800dc2a:	f7ff fcad 	bl	800d588 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800dc2e:	1c6b      	adds	r3, r5, #1
 800dc30:	d011      	beq.n	800dc56 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dc32:	1c6b      	adds	r3, r5, #1
 800dc34:	b25b      	sxtb	r3, r3
 800dc36:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800dc3a:	2001      	movs	r0, #1
	__asm volatile
 800dc3c:	f388 8811 	msr	BASEPRI, r8
}
 800dc40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800dc44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc48:	f383 8811 	msr	BASEPRI, r3
 800dc4c:	f3bf 8f6f 	isb	sy
 800dc50:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dc54:	e7fe      	b.n	800dc54 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dc58:	2b00      	cmp	r3, #0
 800dc5a:	d0ee      	beq.n	800dc3a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc5c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dc60:	f001 f9ae 	bl	800efc0 <xTaskRemoveFromEventList>
 800dc64:	2800      	cmp	r0, #0
 800dc66:	d0e8      	beq.n	800dc3a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800dc68:	2f00      	cmp	r7, #0
 800dc6a:	d0e6      	beq.n	800dc3a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dc6c:	2001      	movs	r0, #1
 800dc6e:	6038      	str	r0, [r7, #0]
 800dc70:	e7c4      	b.n	800dbfc <xQueueGenericSendFromISR+0x54>
 800dc72:	bf00      	nop

0800dc74 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800dc74:	b370      	cbz	r0, 800dcd4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dc76:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800dc78:	b570      	push	{r4, r5, r6, lr}
 800dc7a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800dc7c:	b143      	cbz	r3, 800dc90 <xQueueGiveFromISR+0x1c>
 800dc7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc82:	f383 8811 	msr	BASEPRI, r3
 800dc86:	f3bf 8f6f 	isb	sy
 800dc8a:	f3bf 8f4f 	dsb	sy
 800dc8e:	e7fe      	b.n	800dc8e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dc90:	6803      	ldr	r3, [r0, #0]
 800dc92:	460c      	mov	r4, r1
 800dc94:	b33b      	cbz	r3, 800dce6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dc96:	f7ff fc49 	bl	800d52c <vPortValidateInterruptPriority>
	__asm volatile
 800dc9a:	f3ef 8511 	mrs	r5, BASEPRI
 800dc9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dca2:	f383 8811 	msr	BASEPRI, r3
 800dca6:	f3bf 8f6f 	isb	sy
 800dcaa:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dcae:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800dcb0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800dcb2:	429a      	cmp	r2, r3
 800dcb4:	d923      	bls.n	800dcfe <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dcb6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dcba:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800dcbc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dcbe:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dcc0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800dcc2:	d020      	beq.n	800dd06 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dcc4:	3301      	adds	r3, #1
 800dcc6:	b25b      	sxtb	r3, r3
 800dcc8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800dccc:	2001      	movs	r0, #1
	__asm volatile
 800dcce:	f385 8811 	msr	BASEPRI, r5
}
 800dcd2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800dcd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcd8:	f383 8811 	msr	BASEPRI, r3
 800dcdc:	f3bf 8f6f 	isb	sy
 800dce0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dce4:	e7fe      	b.n	800dce4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dce6:	6883      	ldr	r3, [r0, #8]
 800dce8:	2b00      	cmp	r3, #0
 800dcea:	d0d4      	beq.n	800dc96 <xQueueGiveFromISR+0x22>
 800dcec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcf0:	f383 8811 	msr	BASEPRI, r3
 800dcf4:	f3bf 8f6f 	isb	sy
 800dcf8:	f3bf 8f4f 	dsb	sy
 800dcfc:	e7fe      	b.n	800dcfc <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800dcfe:	2000      	movs	r0, #0
	__asm volatile
 800dd00:	f385 8811 	msr	BASEPRI, r5
}
 800dd04:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd06:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800dd08:	2b00      	cmp	r3, #0
 800dd0a:	d0df      	beq.n	800dccc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd0c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800dd10:	f001 f956 	bl	800efc0 <xTaskRemoveFromEventList>
 800dd14:	2800      	cmp	r0, #0
 800dd16:	d0d9      	beq.n	800dccc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800dd18:	2c00      	cmp	r4, #0
 800dd1a:	d0d7      	beq.n	800dccc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dd1c:	2001      	movs	r0, #1
 800dd1e:	6020      	str	r0, [r4, #0]
 800dd20:	e7ee      	b.n	800dd00 <xQueueGiveFromISR+0x8c>
 800dd22:	bf00      	nop

0800dd24 <xQueueReceive>:
{
 800dd24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dd28:	b085      	sub	sp, #20
 800dd2a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dd2c:	2800      	cmp	r0, #0
 800dd2e:	f000 815c 	beq.w	800dfea <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd32:	460f      	mov	r7, r1
 800dd34:	4604      	mov	r4, r0
 800dd36:	2900      	cmp	r1, #0
 800dd38:	d079      	beq.n	800de2e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dd3a:	f001 f9e3 	bl	800f104 <xTaskGetSchedulerState>
 800dd3e:	2800      	cmp	r0, #0
 800dd40:	f000 8081 	beq.w	800de46 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800dd44:	f7ff fabe 	bl	800d2c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd48:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dd4a:	2d00      	cmp	r5, #0
 800dd4c:	f040 8138 	bne.w	800dfc0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dd50:	9b01      	ldr	r3, [sp, #4]
 800dd52:	2b00      	cmp	r3, #0
 800dd54:	f000 80d5 	beq.w	800df02 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dd58:	a802      	add	r0, sp, #8
 800dd5a:	f001 f979 	bl	800f050 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800dd5e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd60:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800dd64:	f7ff fad0 	bl	800d308 <vPortExitCritical>
		vTaskSuspendAll();
 800dd68:	f001 f822 	bl	800edb0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dd6c:	f7ff faaa 	bl	800d2c4 <vPortEnterCritical>
 800dd70:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dd74:	2bff      	cmp	r3, #255	; 0xff
 800dd76:	bf08      	it	eq
 800dd78:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800dd7c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dd80:	2bff      	cmp	r3, #255	; 0xff
 800dd82:	bf08      	it	eq
 800dd84:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800dd88:	f7ff fabe 	bl	800d308 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dd8c:	a901      	add	r1, sp, #4
 800dd8e:	a802      	add	r0, sp, #8
 800dd90:	f001 f96a 	bl	800f068 <xTaskCheckForTimeOut>
 800dd94:	2800      	cmp	r0, #0
 800dd96:	d163      	bne.n	800de60 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800dd98:	f7ff fa94 	bl	800d2c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dd9c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dd9e:	2b00      	cmp	r3, #0
 800dda0:	f000 80b5 	beq.w	800df0e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800dda4:	f7ff fab0 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dda8:	f7ff fa8c 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ddac:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ddb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddb2:	2d00      	cmp	r5, #0
 800ddb4:	dc04      	bgt.n	800ddc0 <xQueueReceive+0x9c>
 800ddb6:	e011      	b.n	800dddc <xQueueReceive+0xb8>
			--cTxLock;
 800ddb8:	1e6b      	subs	r3, r5, #1
 800ddba:	b2da      	uxtb	r2, r3
 800ddbc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddbe:	b16a      	cbz	r2, 800dddc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddc0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddc2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddc4:	b153      	cbz	r3, 800dddc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddc6:	f001 f8fb 	bl	800efc0 <xTaskRemoveFromEventList>
 800ddca:	2800      	cmp	r0, #0
 800ddcc:	d0f4      	beq.n	800ddb8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800ddce:	f001 f993 	bl	800f0f8 <vTaskMissedYield>
			--cTxLock;
 800ddd2:	1e6b      	subs	r3, r5, #1
 800ddd4:	b2da      	uxtb	r2, r3
 800ddd6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddd8:	2a00      	cmp	r2, #0
 800ddda:	d1f1      	bne.n	800ddc0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800dddc:	23ff      	movs	r3, #255	; 0xff
 800ddde:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dde2:	f7ff fa91 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dde6:	f7ff fa6d 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ddea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ddee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddf0:	2d00      	cmp	r5, #0
 800ddf2:	dd14      	ble.n	800de1e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddf4:	f104 0910 	add.w	r9, r4, #16
 800ddf8:	e003      	b.n	800de02 <xQueueReceive+0xde>
				--cRxLock;
 800ddfa:	1e6b      	subs	r3, r5, #1
 800ddfc:	b2da      	uxtb	r2, r3
 800ddfe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de00:	b16a      	cbz	r2, 800de1e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de02:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de04:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de06:	b153      	cbz	r3, 800de1e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de08:	f001 f8da 	bl	800efc0 <xTaskRemoveFromEventList>
 800de0c:	2800      	cmp	r0, #0
 800de0e:	d0f4      	beq.n	800ddfa <xQueueReceive+0xd6>
					vTaskMissedYield();
 800de10:	f001 f972 	bl	800f0f8 <vTaskMissedYield>
				--cRxLock;
 800de14:	1e6b      	subs	r3, r5, #1
 800de16:	b2da      	uxtb	r2, r3
 800de18:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de1a:	2a00      	cmp	r2, #0
 800de1c:	d1f1      	bne.n	800de02 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800de1e:	23ff      	movs	r3, #255	; 0xff
 800de20:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800de24:	f7ff fa70 	bl	800d308 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800de28:	f000 ffca 	bl	800edc0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800de2c:	e060      	b.n	800def0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de2e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800de30:	2b00      	cmp	r3, #0
 800de32:	d082      	beq.n	800dd3a <xQueueReceive+0x16>
	__asm volatile
 800de34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de38:	f383 8811 	msr	BASEPRI, r3
 800de3c:	f3bf 8f6f 	isb	sy
 800de40:	f3bf 8f4f 	dsb	sy
 800de44:	e7fe      	b.n	800de44 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800de46:	9b01      	ldr	r3, [sp, #4]
 800de48:	2b00      	cmp	r3, #0
 800de4a:	f43f af7b 	beq.w	800dd44 <xQueueReceive+0x20>
 800de4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de52:	f383 8811 	msr	BASEPRI, r3
 800de56:	f3bf 8f6f 	isb	sy
 800de5a:	f3bf 8f4f 	dsb	sy
 800de5e:	e7fe      	b.n	800de5e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800de60:	f7ff fa30 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800de64:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800de68:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de6a:	2d00      	cmp	r5, #0
 800de6c:	dc04      	bgt.n	800de78 <xQueueReceive+0x154>
 800de6e:	e011      	b.n	800de94 <xQueueReceive+0x170>
			--cTxLock;
 800de70:	1e6b      	subs	r3, r5, #1
 800de72:	b2da      	uxtb	r2, r3
 800de74:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de76:	b16a      	cbz	r2, 800de94 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de78:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de7a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de7c:	b153      	cbz	r3, 800de94 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de7e:	f001 f89f 	bl	800efc0 <xTaskRemoveFromEventList>
 800de82:	2800      	cmp	r0, #0
 800de84:	d0f4      	beq.n	800de70 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800de86:	f001 f937 	bl	800f0f8 <vTaskMissedYield>
			--cTxLock;
 800de8a:	1e6b      	subs	r3, r5, #1
 800de8c:	b2da      	uxtb	r2, r3
 800de8e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de90:	2a00      	cmp	r2, #0
 800de92:	d1f1      	bne.n	800de78 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800de94:	23ff      	movs	r3, #255	; 0xff
 800de96:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800de9a:	f7ff fa35 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de9e:	f7ff fa11 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dea2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dea6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dea8:	2d00      	cmp	r5, #0
 800deaa:	dd14      	ble.n	800ded6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800deac:	f104 0910 	add.w	r9, r4, #16
 800deb0:	e003      	b.n	800deba <xQueueReceive+0x196>
				--cRxLock;
 800deb2:	1e6b      	subs	r3, r5, #1
 800deb4:	b2da      	uxtb	r2, r3
 800deb6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800deb8:	b16a      	cbz	r2, 800ded6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800deba:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800debc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800debe:	b153      	cbz	r3, 800ded6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dec0:	f001 f87e 	bl	800efc0 <xTaskRemoveFromEventList>
 800dec4:	2800      	cmp	r0, #0
 800dec6:	d0f4      	beq.n	800deb2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800dec8:	f001 f916 	bl	800f0f8 <vTaskMissedYield>
				--cRxLock;
 800decc:	1e6b      	subs	r3, r5, #1
 800dece:	b2da      	uxtb	r2, r3
 800ded0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ded2:	2a00      	cmp	r2, #0
 800ded4:	d1f1      	bne.n	800deba <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800ded6:	23ff      	movs	r3, #255	; 0xff
 800ded8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dedc:	f7ff fa14 	bl	800d308 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dee0:	f000 ff6e 	bl	800edc0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800dee4:	f7ff f9ee 	bl	800d2c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dee8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800deea:	b153      	cbz	r3, 800df02 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800deec:	f7ff fa0c 	bl	800d308 <vPortExitCritical>
		taskENTER_CRITICAL();
 800def0:	f7ff f9e8 	bl	800d2c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800def4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800def6:	2d00      	cmp	r5, #0
 800def8:	d162      	bne.n	800dfc0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800defa:	9b01      	ldr	r3, [sp, #4]
 800defc:	2b00      	cmp	r3, #0
 800defe:	f47f af31 	bne.w	800dd64 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800df02:	f7ff fa01 	bl	800d308 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800df06:	2000      	movs	r0, #0
}
 800df08:	b005      	add	sp, #20
 800df0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800df0e:	f7ff f9fb 	bl	800d308 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800df12:	9901      	ldr	r1, [sp, #4]
 800df14:	4630      	mov	r0, r6
 800df16:	f000 ffc5 	bl	800eea4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800df1a:	f7ff f9d3 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800df1e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df22:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df24:	2d00      	cmp	r5, #0
 800df26:	dc04      	bgt.n	800df32 <xQueueReceive+0x20e>
 800df28:	e011      	b.n	800df4e <xQueueReceive+0x22a>
			--cTxLock;
 800df2a:	1e6b      	subs	r3, r5, #1
 800df2c:	b2da      	uxtb	r2, r3
 800df2e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df30:	b16a      	cbz	r2, 800df4e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df32:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df34:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df36:	b153      	cbz	r3, 800df4e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df38:	f001 f842 	bl	800efc0 <xTaskRemoveFromEventList>
 800df3c:	2800      	cmp	r0, #0
 800df3e:	d0f4      	beq.n	800df2a <xQueueReceive+0x206>
						vTaskMissedYield();
 800df40:	f001 f8da 	bl	800f0f8 <vTaskMissedYield>
			--cTxLock;
 800df44:	1e6b      	subs	r3, r5, #1
 800df46:	b2da      	uxtb	r2, r3
 800df48:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df4a:	2a00      	cmp	r2, #0
 800df4c:	d1f1      	bne.n	800df32 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800df4e:	23ff      	movs	r3, #255	; 0xff
 800df50:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800df54:	f7ff f9d8 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800df58:	f7ff f9b4 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800df5c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800df60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df62:	2d00      	cmp	r5, #0
 800df64:	dd14      	ble.n	800df90 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df66:	f104 0910 	add.w	r9, r4, #16
 800df6a:	e003      	b.n	800df74 <xQueueReceive+0x250>
				--cRxLock;
 800df6c:	1e6b      	subs	r3, r5, #1
 800df6e:	b2da      	uxtb	r2, r3
 800df70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df72:	b16a      	cbz	r2, 800df90 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df74:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df76:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df78:	b153      	cbz	r3, 800df90 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df7a:	f001 f821 	bl	800efc0 <xTaskRemoveFromEventList>
 800df7e:	2800      	cmp	r0, #0
 800df80:	d0f4      	beq.n	800df6c <xQueueReceive+0x248>
					vTaskMissedYield();
 800df82:	f001 f8b9 	bl	800f0f8 <vTaskMissedYield>
				--cRxLock;
 800df86:	1e6b      	subs	r3, r5, #1
 800df88:	b2da      	uxtb	r2, r3
 800df8a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df8c:	2a00      	cmp	r2, #0
 800df8e:	d1f1      	bne.n	800df74 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800df90:	23ff      	movs	r3, #255	; 0xff
 800df92:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800df96:	f7ff f9b7 	bl	800d308 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800df9a:	f000 ff11 	bl	800edc0 <xTaskResumeAll>
 800df9e:	2800      	cmp	r0, #0
 800dfa0:	d1a6      	bne.n	800def0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800dfa2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dfa6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dfaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dfae:	f3bf 8f4f 	dsb	sy
 800dfb2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800dfb6:	f7ff f985 	bl	800d2c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dfba:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dfbc:	2d00      	cmp	r5, #0
 800dfbe:	d09c      	beq.n	800defa <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800dfc0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800dfc2:	b152      	cbz	r2, 800dfda <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dfc4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800dfc6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dfc8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800dfca:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dfcc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800dfce:	bf24      	itt	cs
 800dfd0:	6821      	ldrcs	r1, [r4, #0]
 800dfd2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800dfd4:	4638      	mov	r0, r7
 800dfd6:	f01d f84e 	bl	802b076 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dfda:	3d01      	subs	r5, #1
 800dfdc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dfde:	6923      	ldr	r3, [r4, #16]
 800dfe0:	b963      	cbnz	r3, 800dffc <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800dfe2:	f7ff f991 	bl	800d308 <vPortExitCritical>
				return pdPASS;
 800dfe6:	2001      	movs	r0, #1
 800dfe8:	e78e      	b.n	800df08 <xQueueReceive+0x1e4>
 800dfea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfee:	f383 8811 	msr	BASEPRI, r3
 800dff2:	f3bf 8f6f 	isb	sy
 800dff6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800dffa:	e7fe      	b.n	800dffa <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dffc:	f104 0010 	add.w	r0, r4, #16
 800e000:	f000 ffde 	bl	800efc0 <xTaskRemoveFromEventList>
 800e004:	2800      	cmp	r0, #0
 800e006:	d0ec      	beq.n	800dfe2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e008:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e00c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e010:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e014:	f3bf 8f4f 	dsb	sy
 800e018:	f3bf 8f6f 	isb	sy
 800e01c:	e7e1      	b.n	800dfe2 <xQueueReceive+0x2be>
 800e01e:	bf00      	nop

0800e020 <xQueueSemaphoreTake>:
{
 800e020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e024:	b084      	sub	sp, #16
 800e026:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e028:	2800      	cmp	r0, #0
 800e02a:	d05c      	beq.n	800e0e6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e02c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e02e:	4604      	mov	r4, r0
 800e030:	b147      	cbz	r7, 800e044 <xQueueSemaphoreTake+0x24>
 800e032:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e036:	f383 8811 	msr	BASEPRI, r3
 800e03a:	f3bf 8f6f 	isb	sy
 800e03e:	f3bf 8f4f 	dsb	sy
 800e042:	e7fe      	b.n	800e042 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e044:	f001 f85e 	bl	800f104 <xTaskGetSchedulerState>
 800e048:	4605      	mov	r5, r0
 800e04a:	2800      	cmp	r0, #0
 800e04c:	d054      	beq.n	800e0f8 <xQueueSemaphoreTake+0xd8>
 800e04e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e050:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e054:	f7ff f936 	bl	800d2c4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e058:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e05a:	2b00      	cmp	r3, #0
 800e05c:	f040 8148 	bne.w	800e2f0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e060:	9b01      	ldr	r3, [sp, #4]
 800e062:	2b00      	cmp	r3, #0
 800e064:	f000 813a 	beq.w	800e2dc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e068:	2d00      	cmp	r5, #0
 800e06a:	f000 809d 	beq.w	800e1a8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e06e:	f7ff f94b 	bl	800d308 <vPortExitCritical>
		vTaskSuspendAll();
 800e072:	f000 fe9d 	bl	800edb0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e076:	f7ff f925 	bl	800d2c4 <vPortEnterCritical>
 800e07a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e07e:	2bff      	cmp	r3, #255	; 0xff
 800e080:	bf04      	itt	eq
 800e082:	2300      	moveq	r3, #0
 800e084:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e088:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e08c:	2bff      	cmp	r3, #255	; 0xff
 800e08e:	bf04      	itt	eq
 800e090:	2300      	moveq	r3, #0
 800e092:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e096:	f7ff f937 	bl	800d308 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e09a:	a901      	add	r1, sp, #4
 800e09c:	a802      	add	r0, sp, #8
 800e09e:	f000 ffe3 	bl	800f068 <xTaskCheckForTimeOut>
 800e0a2:	2800      	cmp	r0, #0
 800e0a4:	d135      	bne.n	800e112 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e0a6:	f7ff f90d 	bl	800d2c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e0aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e0ac:	2b00      	cmp	r3, #0
 800e0ae:	f000 80a4 	beq.w	800e1fa <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e0b2:	f7ff f929 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e0b6:	f7ff f905 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e0ba:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e0be:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0c0:	2d00      	cmp	r5, #0
 800e0c2:	dc05      	bgt.n	800e0d0 <xQueueSemaphoreTake+0xb0>
 800e0c4:	e074      	b.n	800e1b0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e0c6:	1e6b      	subs	r3, r5, #1
 800e0c8:	b2da      	uxtb	r2, r3
 800e0ca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0cc:	2a00      	cmp	r2, #0
 800e0ce:	d06f      	beq.n	800e1b0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0d2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0d4:	2b00      	cmp	r3, #0
 800e0d6:	d06b      	beq.n	800e1b0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0d8:	f000 ff72 	bl	800efc0 <xTaskRemoveFromEventList>
 800e0dc:	2800      	cmp	r0, #0
 800e0de:	d0f2      	beq.n	800e0c6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e0e0:	f001 f80a 	bl	800f0f8 <vTaskMissedYield>
 800e0e4:	e7ef      	b.n	800e0c6 <xQueueSemaphoreTake+0xa6>
 800e0e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0ea:	f383 8811 	msr	BASEPRI, r3
 800e0ee:	f3bf 8f6f 	isb	sy
 800e0f2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e0f6:	e7fe      	b.n	800e0f6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e0f8:	9b01      	ldr	r3, [sp, #4]
 800e0fa:	2b00      	cmp	r3, #0
 800e0fc:	f000 80d4 	beq.w	800e2a8 <xQueueSemaphoreTake+0x288>
 800e100:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e104:	f383 8811 	msr	BASEPRI, r3
 800e108:	f3bf 8f6f 	isb	sy
 800e10c:	f3bf 8f4f 	dsb	sy
 800e110:	e7fe      	b.n	800e110 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e112:	f7ff f8d7 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e116:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e11a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e11c:	2d00      	cmp	r5, #0
 800e11e:	dc04      	bgt.n	800e12a <xQueueSemaphoreTake+0x10a>
 800e120:	e011      	b.n	800e146 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e122:	1e6b      	subs	r3, r5, #1
 800e124:	b2da      	uxtb	r2, r3
 800e126:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e128:	b16a      	cbz	r2, 800e146 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e12a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e12c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e12e:	b153      	cbz	r3, 800e146 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e130:	f000 ff46 	bl	800efc0 <xTaskRemoveFromEventList>
 800e134:	2800      	cmp	r0, #0
 800e136:	d0f4      	beq.n	800e122 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e138:	f000 ffde 	bl	800f0f8 <vTaskMissedYield>
			--cTxLock;
 800e13c:	1e6b      	subs	r3, r5, #1
 800e13e:	b2da      	uxtb	r2, r3
 800e140:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e142:	2a00      	cmp	r2, #0
 800e144:	d1f1      	bne.n	800e12a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e146:	23ff      	movs	r3, #255	; 0xff
 800e148:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e14c:	f7ff f8dc 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e150:	f7ff f8b8 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e154:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e158:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e15a:	2d00      	cmp	r5, #0
 800e15c:	dd14      	ble.n	800e188 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e15e:	f104 0810 	add.w	r8, r4, #16
 800e162:	e003      	b.n	800e16c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e164:	1e6b      	subs	r3, r5, #1
 800e166:	b2da      	uxtb	r2, r3
 800e168:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e16a:	b16a      	cbz	r2, 800e188 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e16c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e16e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e170:	b153      	cbz	r3, 800e188 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e172:	f000 ff25 	bl	800efc0 <xTaskRemoveFromEventList>
 800e176:	2800      	cmp	r0, #0
 800e178:	d0f4      	beq.n	800e164 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e17a:	f000 ffbd 	bl	800f0f8 <vTaskMissedYield>
				--cRxLock;
 800e17e:	1e6b      	subs	r3, r5, #1
 800e180:	b2da      	uxtb	r2, r3
 800e182:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e184:	2a00      	cmp	r2, #0
 800e186:	d1f1      	bne.n	800e16c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e188:	23ff      	movs	r3, #255	; 0xff
 800e18a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e18e:	f7ff f8bb 	bl	800d308 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e192:	f000 fe15 	bl	800edc0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e196:	f7ff f895 	bl	800d2c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e19a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e19c:	2b00      	cmp	r3, #0
 800e19e:	d07c      	beq.n	800e29a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e1a0:	f7ff f8b2 	bl	800d308 <vPortExitCritical>
	return xReturn;
 800e1a4:	2501      	movs	r5, #1
 800e1a6:	e755      	b.n	800e054 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e1a8:	a802      	add	r0, sp, #8
 800e1aa:	f000 ff51 	bl	800f050 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e1ae:	e75e      	b.n	800e06e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e1b0:	23ff      	movs	r3, #255	; 0xff
 800e1b2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e1b6:	f7ff f8a7 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e1ba:	f7ff f883 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e1be:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e1c2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1c4:	2d00      	cmp	r5, #0
 800e1c6:	dd10      	ble.n	800e1ea <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1c8:	f104 0810 	add.w	r8, r4, #16
 800e1cc:	e003      	b.n	800e1d6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e1ce:	1e6b      	subs	r3, r5, #1
 800e1d0:	b2da      	uxtb	r2, r3
 800e1d2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1d4:	b14a      	cbz	r2, 800e1ea <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1d6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1d8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1da:	b133      	cbz	r3, 800e1ea <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1dc:	f000 fef0 	bl	800efc0 <xTaskRemoveFromEventList>
 800e1e0:	2800      	cmp	r0, #0
 800e1e2:	d0f4      	beq.n	800e1ce <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e1e4:	f000 ff88 	bl	800f0f8 <vTaskMissedYield>
 800e1e8:	e7f1      	b.n	800e1ce <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e1ea:	23ff      	movs	r3, #255	; 0xff
 800e1ec:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e1f0:	f7ff f88a 	bl	800d308 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e1f4:	f000 fde4 	bl	800edc0 <xTaskResumeAll>
 800e1f8:	e7d4      	b.n	800e1a4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e1fa:	f7ff f885 	bl	800d308 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e1fe:	6823      	ldr	r3, [r4, #0]
 800e200:	2b00      	cmp	r3, #0
 800e202:	d062      	beq.n	800e2ca <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e204:	9901      	ldr	r1, [sp, #4]
 800e206:	4630      	mov	r0, r6
 800e208:	f000 fe4c 	bl	800eea4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e20c:	f7ff f85a 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e210:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e214:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e216:	2d00      	cmp	r5, #0
 800e218:	dc04      	bgt.n	800e224 <xQueueSemaphoreTake+0x204>
 800e21a:	e00d      	b.n	800e238 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e21c:	1e6b      	subs	r3, r5, #1
 800e21e:	b2da      	uxtb	r2, r3
 800e220:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e222:	b14a      	cbz	r2, 800e238 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e224:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e226:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e228:	b133      	cbz	r3, 800e238 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e22a:	f000 fec9 	bl	800efc0 <xTaskRemoveFromEventList>
 800e22e:	2800      	cmp	r0, #0
 800e230:	d0f4      	beq.n	800e21c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e232:	f000 ff61 	bl	800f0f8 <vTaskMissedYield>
 800e236:	e7f1      	b.n	800e21c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e238:	23ff      	movs	r3, #255	; 0xff
 800e23a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e23e:	f7ff f863 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e242:	f7ff f83f 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e246:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e24a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e24c:	2d00      	cmp	r5, #0
 800e24e:	dd10      	ble.n	800e272 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e250:	f104 0810 	add.w	r8, r4, #16
 800e254:	e003      	b.n	800e25e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e256:	1e6b      	subs	r3, r5, #1
 800e258:	b2da      	uxtb	r2, r3
 800e25a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e25c:	b14a      	cbz	r2, 800e272 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e25e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e260:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e262:	b133      	cbz	r3, 800e272 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e264:	f000 feac 	bl	800efc0 <xTaskRemoveFromEventList>
 800e268:	2800      	cmp	r0, #0
 800e26a:	d0f4      	beq.n	800e256 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e26c:	f000 ff44 	bl	800f0f8 <vTaskMissedYield>
 800e270:	e7f1      	b.n	800e256 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e272:	23ff      	movs	r3, #255	; 0xff
 800e274:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e278:	f7ff f846 	bl	800d308 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e27c:	f000 fda0 	bl	800edc0 <xTaskResumeAll>
 800e280:	2800      	cmp	r0, #0
 800e282:	d18f      	bne.n	800e1a4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e284:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e288:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e28c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e290:	f3bf 8f4f 	dsb	sy
 800e294:	f3bf 8f6f 	isb	sy
 800e298:	e784      	b.n	800e1a4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e29a:	f7ff f835 	bl	800d308 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e29e:	b92f      	cbnz	r7, 800e2ac <xQueueSemaphoreTake+0x28c>
}
 800e2a0:	4638      	mov	r0, r7
 800e2a2:	b004      	add	sp, #16
 800e2a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e2a8:	4607      	mov	r7, r0
 800e2aa:	e6d1      	b.n	800e050 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e2ac:	f7ff f80a 	bl	800d2c4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e2b0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e2b2:	b119      	cbz	r1, 800e2bc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e2b4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e2b6:	6819      	ldr	r1, [r3, #0]
 800e2b8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e2bc:	68a0      	ldr	r0, [r4, #8]
 800e2be:	f000 ffbd 	bl	800f23c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e2c2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e2c4:	f7ff f820 	bl	800d308 <vPortExitCritical>
 800e2c8:	e7ea      	b.n	800e2a0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e2ca:	f7fe fffb 	bl	800d2c4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e2ce:	68a0      	ldr	r0, [r4, #8]
 800e2d0:	f000 ff28 	bl	800f124 <xTaskPriorityInherit>
 800e2d4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e2d6:	f7ff f817 	bl	800d308 <vPortExitCritical>
 800e2da:	e793      	b.n	800e204 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e2dc:	b197      	cbz	r7, 800e304 <xQueueSemaphoreTake+0x2e4>
 800e2de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2e2:	f383 8811 	msr	BASEPRI, r3
 800e2e6:	f3bf 8f6f 	isb	sy
 800e2ea:	f3bf 8f4f 	dsb	sy
 800e2ee:	e7fe      	b.n	800e2ee <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e2f0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e2f2:	3b01      	subs	r3, #1
 800e2f4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e2f6:	b1ca      	cbz	r2, 800e32c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2f8:	6923      	ldr	r3, [r4, #16]
 800e2fa:	b933      	cbnz	r3, 800e30a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e2fc:	f7ff f804 	bl	800d308 <vPortExitCritical>
				return pdPASS;
 800e300:	2701      	movs	r7, #1
 800e302:	e7cd      	b.n	800e2a0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e304:	f7ff f800 	bl	800d308 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e308:	e7ca      	b.n	800e2a0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e30a:	f104 0010 	add.w	r0, r4, #16
 800e30e:	f000 fe57 	bl	800efc0 <xTaskRemoveFromEventList>
 800e312:	2800      	cmp	r0, #0
 800e314:	d0f2      	beq.n	800e2fc <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e316:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e31a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e31e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e322:	f3bf 8f4f 	dsb	sy
 800e326:	f3bf 8f6f 	isb	sy
 800e32a:	e7e7      	b.n	800e2fc <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e32c:	f000 ffda 	bl	800f2e4 <pvTaskIncrementMutexHeldCount>
 800e330:	60a0      	str	r0, [r4, #8]
 800e332:	e7e1      	b.n	800e2f8 <xQueueSemaphoreTake+0x2d8>

0800e334 <xQueueReceiveFromISR>:
{
 800e334:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e338:	b310      	cbz	r0, 800e380 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e33a:	460e      	mov	r6, r1
 800e33c:	4617      	mov	r7, r2
 800e33e:	4604      	mov	r4, r0
 800e340:	b191      	cbz	r1, 800e368 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e342:	f7ff f8f3 	bl	800d52c <vPortValidateInterruptPriority>
	__asm volatile
 800e346:	f3ef 8911 	mrs	r9, BASEPRI
 800e34a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e34e:	f383 8811 	msr	BASEPRI, r3
 800e352:	f3bf 8f6f 	isb	sy
 800e356:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e35a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e35c:	b9cd      	cbnz	r5, 800e392 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e35e:	4628      	mov	r0, r5
	__asm volatile
 800e360:	f389 8811 	msr	BASEPRI, r9
}
 800e364:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e368:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e36a:	2b00      	cmp	r3, #0
 800e36c:	d0e9      	beq.n	800e342 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e36e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e372:	f383 8811 	msr	BASEPRI, r3
 800e376:	f3bf 8f6f 	isb	sy
 800e37a:	f3bf 8f4f 	dsb	sy
 800e37e:	e7fe      	b.n	800e37e <xQueueReceiveFromISR+0x4a>
 800e380:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e384:	f383 8811 	msr	BASEPRI, r3
 800e388:	f3bf 8f6f 	isb	sy
 800e38c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e390:	e7fe      	b.n	800e390 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e392:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e396:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e398:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e39c:	b152      	cbz	r2, 800e3b4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e39e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e3a0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e3a2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e3a4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e3a6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e3a8:	bf24      	itt	cs
 800e3aa:	6821      	ldrcs	r1, [r4, #0]
 800e3ac:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e3ae:	4630      	mov	r0, r6
 800e3b0:	f01c fe61 	bl	802b076 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e3b4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e3b6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e3ba:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e3bc:	d009      	beq.n	800e3d2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e3be:	f108 0301 	add.w	r3, r8, #1
 800e3c2:	b25b      	sxtb	r3, r3
 800e3c4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e3c8:	2001      	movs	r0, #1
	__asm volatile
 800e3ca:	f389 8811 	msr	BASEPRI, r9
}
 800e3ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3d2:	6923      	ldr	r3, [r4, #16]
 800e3d4:	2b00      	cmp	r3, #0
 800e3d6:	d0f7      	beq.n	800e3c8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3d8:	f104 0010 	add.w	r0, r4, #16
 800e3dc:	f000 fdf0 	bl	800efc0 <xTaskRemoveFromEventList>
 800e3e0:	2800      	cmp	r0, #0
 800e3e2:	d0f1      	beq.n	800e3c8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e3e4:	2f00      	cmp	r7, #0
 800e3e6:	d0ef      	beq.n	800e3c8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e3e8:	2001      	movs	r0, #1
 800e3ea:	6038      	str	r0, [r7, #0]
 800e3ec:	e7b8      	b.n	800e360 <xQueueReceiveFromISR+0x2c>
 800e3ee:	bf00      	nop

0800e3f0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e3f0:	b158      	cbz	r0, 800e40a <uxQueueMessagesWaiting+0x1a>
{
 800e3f2:	b510      	push	{r4, lr}
 800e3f4:	4604      	mov	r4, r0
 800e3f6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e3f8:	f7fe ff64 	bl	800d2c4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e3fc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e3fe:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e400:	f7fe ff82 	bl	800d308 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e404:	9801      	ldr	r0, [sp, #4]
 800e406:	b002      	add	sp, #8
 800e408:	bd10      	pop	{r4, pc}
	__asm volatile
 800e40a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e40e:	f383 8811 	msr	BASEPRI, r3
 800e412:	f3bf 8f6f 	isb	sy
 800e416:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e41a:	e7fe      	b.n	800e41a <uxQueueMessagesWaiting+0x2a>

0800e41c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e41c:	b108      	cbz	r0, 800e422 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e41e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e420:	4770      	bx	lr
 800e422:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e426:	f383 8811 	msr	BASEPRI, r3
 800e42a:	f3bf 8f6f 	isb	sy
 800e42e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e432:	e7fe      	b.n	800e432 <uxQueueMessagesWaitingFromISR+0x16>
 800e434:	0000      	movs	r0, r0
	...

0800e438 <vQueueDelete>:
	configASSERT( pxQueue );
 800e438:	b1f0      	cbz	r0, 800e478 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e43a:	4b21      	ldr	r3, [pc, #132]	; (800e4c0 <vQueueDelete+0x88>)
 800e43c:	685a      	ldr	r2, [r3, #4]
 800e43e:	4290      	cmp	r0, r2
 800e440:	d025      	beq.n	800e48e <vQueueDelete+0x56>
 800e442:	68da      	ldr	r2, [r3, #12]
 800e444:	4290      	cmp	r0, r2
 800e446:	d02c      	beq.n	800e4a2 <vQueueDelete+0x6a>
 800e448:	695a      	ldr	r2, [r3, #20]
 800e44a:	4290      	cmp	r0, r2
 800e44c:	d02b      	beq.n	800e4a6 <vQueueDelete+0x6e>
 800e44e:	69da      	ldr	r2, [r3, #28]
 800e450:	4290      	cmp	r0, r2
 800e452:	d02a      	beq.n	800e4aa <vQueueDelete+0x72>
 800e454:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e456:	4290      	cmp	r0, r2
 800e458:	d029      	beq.n	800e4ae <vQueueDelete+0x76>
 800e45a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e45c:	4290      	cmp	r0, r2
 800e45e:	d01e      	beq.n	800e49e <vQueueDelete+0x66>
 800e460:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e462:	4290      	cmp	r0, r2
 800e464:	d025      	beq.n	800e4b2 <vQueueDelete+0x7a>
 800e466:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e468:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e46a:	bf08      	it	eq
 800e46c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e46e:	d00f      	beq.n	800e490 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e470:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e474:	b14b      	cbz	r3, 800e48a <vQueueDelete+0x52>
}
 800e476:	4770      	bx	lr
 800e478:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e47c:	f383 8811 	msr	BASEPRI, r3
 800e480:	f3bf 8f6f 	isb	sy
 800e484:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e488:	e7fe      	b.n	800e488 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e48a:	f7fe be05 	b.w	800d098 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e48e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e490:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e4b8 <vQueueDelete+0x80>
 800e494:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e498:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e49c:	e7e8      	b.n	800e470 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e49e:	2205      	movs	r2, #5
 800e4a0:	e7f6      	b.n	800e490 <vQueueDelete+0x58>
 800e4a2:	2201      	movs	r2, #1
 800e4a4:	e7f4      	b.n	800e490 <vQueueDelete+0x58>
 800e4a6:	2202      	movs	r2, #2
 800e4a8:	e7f2      	b.n	800e490 <vQueueDelete+0x58>
 800e4aa:	2203      	movs	r2, #3
 800e4ac:	e7f0      	b.n	800e490 <vQueueDelete+0x58>
 800e4ae:	2204      	movs	r2, #4
 800e4b0:	e7ee      	b.n	800e490 <vQueueDelete+0x58>
 800e4b2:	2206      	movs	r2, #6
 800e4b4:	e7ec      	b.n	800e490 <vQueueDelete+0x58>
 800e4b6:	bf00      	nop
	...
 800e4c0:	20012c48 	.word	0x20012c48

0800e4c4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e4c4:	4b12      	ldr	r3, [pc, #72]	; (800e510 <vQueueAddToRegistry+0x4c>)
 800e4c6:	681a      	ldr	r2, [r3, #0]
 800e4c8:	b17a      	cbz	r2, 800e4ea <vQueueAddToRegistry+0x26>
 800e4ca:	689a      	ldr	r2, [r3, #8]
 800e4cc:	b162      	cbz	r2, 800e4e8 <vQueueAddToRegistry+0x24>
 800e4ce:	691a      	ldr	r2, [r3, #16]
 800e4d0:	b192      	cbz	r2, 800e4f8 <vQueueAddToRegistry+0x34>
 800e4d2:	699a      	ldr	r2, [r3, #24]
 800e4d4:	b192      	cbz	r2, 800e4fc <vQueueAddToRegistry+0x38>
 800e4d6:	6a1a      	ldr	r2, [r3, #32]
 800e4d8:	b192      	cbz	r2, 800e500 <vQueueAddToRegistry+0x3c>
 800e4da:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e4dc:	b192      	cbz	r2, 800e504 <vQueueAddToRegistry+0x40>
 800e4de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e4e0:	b192      	cbz	r2, 800e508 <vQueueAddToRegistry+0x44>
 800e4e2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e4e4:	b192      	cbz	r2, 800e50c <vQueueAddToRegistry+0x48>
	}
 800e4e6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e4e8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e4ea:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e4ee:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e4f2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e4f6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e4f8:	2202      	movs	r2, #2
 800e4fa:	e7f6      	b.n	800e4ea <vQueueAddToRegistry+0x26>
 800e4fc:	2203      	movs	r2, #3
 800e4fe:	e7f4      	b.n	800e4ea <vQueueAddToRegistry+0x26>
 800e500:	2204      	movs	r2, #4
 800e502:	e7f2      	b.n	800e4ea <vQueueAddToRegistry+0x26>
 800e504:	2205      	movs	r2, #5
 800e506:	e7f0      	b.n	800e4ea <vQueueAddToRegistry+0x26>
 800e508:	2206      	movs	r2, #6
 800e50a:	e7ee      	b.n	800e4ea <vQueueAddToRegistry+0x26>
 800e50c:	2207      	movs	r2, #7
 800e50e:	e7ec      	b.n	800e4ea <vQueueAddToRegistry+0x26>
 800e510:	20012c48 	.word	0x20012c48

0800e514 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e514:	b570      	push	{r4, r5, r6, lr}
 800e516:	4605      	mov	r5, r0
 800e518:	460e      	mov	r6, r1
 800e51a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e51c:	f7fe fed2 	bl	800d2c4 <vPortEnterCritical>
 800e520:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e524:	2bff      	cmp	r3, #255	; 0xff
 800e526:	bf04      	itt	eq
 800e528:	2300      	moveq	r3, #0
 800e52a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e52e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e532:	2bff      	cmp	r3, #255	; 0xff
 800e534:	bf04      	itt	eq
 800e536:	2300      	moveq	r3, #0
 800e538:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e53c:	f7fe fee4 	bl	800d308 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e540:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e542:	2b00      	cmp	r3, #0
 800e544:	d043      	beq.n	800e5ce <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e546:	f7fe febd 	bl	800d2c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e54a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e54e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e550:	2c00      	cmp	r4, #0
 800e552:	dd14      	ble.n	800e57e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e554:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e558:	e003      	b.n	800e562 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e55a:	1e63      	subs	r3, r4, #1
 800e55c:	b2da      	uxtb	r2, r3
 800e55e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e560:	b16a      	cbz	r2, 800e57e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e562:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e564:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e566:	b153      	cbz	r3, 800e57e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e568:	f000 fd2a 	bl	800efc0 <xTaskRemoveFromEventList>
 800e56c:	2800      	cmp	r0, #0
 800e56e:	d0f4      	beq.n	800e55a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e570:	f000 fdc2 	bl	800f0f8 <vTaskMissedYield>
			--cTxLock;
 800e574:	1e63      	subs	r3, r4, #1
 800e576:	b2da      	uxtb	r2, r3
 800e578:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e57a:	2a00      	cmp	r2, #0
 800e57c:	d1f1      	bne.n	800e562 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e57e:	23ff      	movs	r3, #255	; 0xff
 800e580:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e584:	f7fe fec0 	bl	800d308 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e588:	f7fe fe9c 	bl	800d2c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e58c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e590:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e592:	2c00      	cmp	r4, #0
 800e594:	dd14      	ble.n	800e5c0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e596:	f105 0610 	add.w	r6, r5, #16
 800e59a:	e003      	b.n	800e5a4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e59c:	1e63      	subs	r3, r4, #1
 800e59e:	b2da      	uxtb	r2, r3
 800e5a0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5a2:	b16a      	cbz	r2, 800e5c0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5a4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5a6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5a8:	b153      	cbz	r3, 800e5c0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5aa:	f000 fd09 	bl	800efc0 <xTaskRemoveFromEventList>
 800e5ae:	2800      	cmp	r0, #0
 800e5b0:	d0f4      	beq.n	800e59c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e5b2:	f000 fda1 	bl	800f0f8 <vTaskMissedYield>
				--cRxLock;
 800e5b6:	1e63      	subs	r3, r4, #1
 800e5b8:	b2da      	uxtb	r2, r3
 800e5ba:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5bc:	2a00      	cmp	r2, #0
 800e5be:	d1f1      	bne.n	800e5a4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e5c0:	23ff      	movs	r3, #255	; 0xff
 800e5c2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e5c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e5ca:	f7fe be9d 	b.w	800d308 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e5ce:	4622      	mov	r2, r4
 800e5d0:	4631      	mov	r1, r6
 800e5d2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e5d6:	f000 fca9 	bl	800ef2c <vTaskPlaceOnEventListRestricted>
 800e5da:	e7b4      	b.n	800e546 <vQueueWaitForMessageRestricted+0x32>

0800e5dc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e5dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e5e0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e5e2:	f7fe fe6f 	bl	800d2c4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e5e6:	4a34      	ldr	r2, [pc, #208]	; (800e6b8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e5e8:	4e34      	ldr	r6, [pc, #208]	; (800e6bc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e5ea:	6813      	ldr	r3, [r2, #0]
 800e5ec:	3301      	adds	r3, #1
 800e5ee:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e5f0:	6833      	ldr	r3, [r6, #0]
 800e5f2:	2b00      	cmp	r3, #0
 800e5f4:	d032      	beq.n	800e65c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e5f6:	4c32      	ldr	r4, [pc, #200]	; (800e6c0 <prvAddNewTaskToReadyList+0xe4>)
 800e5f8:	6823      	ldr	r3, [r4, #0]
 800e5fa:	b33b      	cbz	r3, 800e64c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e5fc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e5fe:	4f31      	ldr	r7, [pc, #196]	; (800e6c4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e600:	4a31      	ldr	r2, [pc, #196]	; (800e6c8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e602:	4932      	ldr	r1, [pc, #200]	; (800e6cc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e604:	6813      	ldr	r3, [r2, #0]
 800e606:	3301      	adds	r3, #1
 800e608:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e60a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e60c:	680b      	ldr	r3, [r1, #0]
 800e60e:	4283      	cmp	r3, r0
 800e610:	bf38      	it	cc
 800e612:	6008      	strcc	r0, [r1, #0]
 800e614:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e618:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e61c:	1d29      	adds	r1, r5, #4
 800e61e:	f7fe fdaf 	bl	800d180 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e622:	f7fe fe71 	bl	800d308 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e626:	6823      	ldr	r3, [r4, #0]
 800e628:	b173      	cbz	r3, 800e648 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e62a:	6832      	ldr	r2, [r6, #0]
 800e62c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e62e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e630:	429a      	cmp	r2, r3
 800e632:	d209      	bcs.n	800e648 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e634:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e638:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e63c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e640:	f3bf 8f4f 	dsb	sy
 800e644:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e648:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e64c:	6833      	ldr	r3, [r6, #0]
 800e64e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e650:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e652:	4f1c      	ldr	r7, [pc, #112]	; (800e6c4 <prvAddNewTaskToReadyList+0xe8>)
 800e654:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e656:	bf98      	it	ls
 800e658:	6035      	strls	r5, [r6, #0]
 800e65a:	e7d1      	b.n	800e600 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e65c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e65e:	6813      	ldr	r3, [r2, #0]
 800e660:	2b01      	cmp	r3, #1
 800e662:	d003      	beq.n	800e66c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e664:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e666:	4f17      	ldr	r7, [pc, #92]	; (800e6c4 <prvAddNewTaskToReadyList+0xe8>)
 800e668:	4c15      	ldr	r4, [pc, #84]	; (800e6c0 <prvAddNewTaskToReadyList+0xe4>)
 800e66a:	e7c9      	b.n	800e600 <prvAddNewTaskToReadyList+0x24>
 800e66c:	4f15      	ldr	r7, [pc, #84]	; (800e6c4 <prvAddNewTaskToReadyList+0xe8>)
 800e66e:	463c      	mov	r4, r7
 800e670:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e674:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e676:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e678:	f7fe fd72 	bl	800d160 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e67c:	45a0      	cmp	r8, r4
 800e67e:	d1f9      	bne.n	800e674 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e680:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e6e4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e684:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e6e8 <prvAddNewTaskToReadyList+0x10c>
 800e688:	4c0d      	ldr	r4, [pc, #52]	; (800e6c0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e68a:	4648      	mov	r0, r9
 800e68c:	f7fe fd68 	bl	800d160 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e690:	4640      	mov	r0, r8
 800e692:	f7fe fd65 	bl	800d160 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e696:	480e      	ldr	r0, [pc, #56]	; (800e6d0 <prvAddNewTaskToReadyList+0xf4>)
 800e698:	f7fe fd62 	bl	800d160 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e69c:	480d      	ldr	r0, [pc, #52]	; (800e6d4 <prvAddNewTaskToReadyList+0xf8>)
 800e69e:	f7fe fd5f 	bl	800d160 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e6a2:	480d      	ldr	r0, [pc, #52]	; (800e6d8 <prvAddNewTaskToReadyList+0xfc>)
 800e6a4:	f7fe fd5c 	bl	800d160 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e6a8:	4b0c      	ldr	r3, [pc, #48]	; (800e6dc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e6aa:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e6ac:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e6b0:	4b0b      	ldr	r3, [pc, #44]	; (800e6e0 <prvAddNewTaskToReadyList+0x104>)
 800e6b2:	f8c3 8000 	str.w	r8, [r3]
}
 800e6b6:	e7a3      	b.n	800e600 <prvAddNewTaskToReadyList+0x24>
 800e6b8:	200130f4 	.word	0x200130f4
 800e6bc:	20012c88 	.word	0x20012c88
 800e6c0:	20013150 	.word	0x20013150
 800e6c4:	20012c94 	.word	0x20012c94
 800e6c8:	20013100 	.word	0x20013100
 800e6cc:	20013104 	.word	0x20013104
 800e6d0:	2001313c 	.word	0x2001313c
 800e6d4:	20013168 	.word	0x20013168
 800e6d8:	20013154 	.word	0x20013154
 800e6dc:	20012c8c 	.word	0x20012c8c
 800e6e0:	20012c90 	.word	0x20012c90
 800e6e4:	20013108 	.word	0x20013108
 800e6e8:	2001311c 	.word	0x2001311c

0800e6ec <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e6ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e6f0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e6f2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e6f6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e6fa:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e6fc:	4606      	mov	r6, r0
 800e6fe:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e700:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e702:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e704:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e706:	f01c fb90 	bl	802ae2a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e70a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e70c:	f1a9 0904 	sub.w	r9, r9, #4
 800e710:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e712:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e716:	2d00      	cmp	r5, #0
 800e718:	d079      	beq.n	800e80e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e71a:	782b      	ldrb	r3, [r5, #0]
 800e71c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e720:	2b00      	cmp	r3, #0
 800e722:	d03b      	beq.n	800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e724:	786b      	ldrb	r3, [r5, #1]
 800e726:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e72a:	2b00      	cmp	r3, #0
 800e72c:	d036      	beq.n	800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e72e:	78ab      	ldrb	r3, [r5, #2]
 800e730:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e734:	b393      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e736:	78eb      	ldrb	r3, [r5, #3]
 800e738:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e73c:	b373      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e73e:	792b      	ldrb	r3, [r5, #4]
 800e740:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e744:	b353      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e746:	796b      	ldrb	r3, [r5, #5]
 800e748:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e74c:	b333      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e74e:	79ab      	ldrb	r3, [r5, #6]
 800e750:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e754:	b313      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e756:	79eb      	ldrb	r3, [r5, #7]
 800e758:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e75c:	b1f3      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e75e:	7a2b      	ldrb	r3, [r5, #8]
 800e760:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e764:	b1d3      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e766:	7a6b      	ldrb	r3, [r5, #9]
 800e768:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e76c:	b1b3      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e76e:	7aab      	ldrb	r3, [r5, #10]
 800e770:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e774:	b193      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e776:	7aeb      	ldrb	r3, [r5, #11]
 800e778:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e77c:	b173      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e77e:	7b2b      	ldrb	r3, [r5, #12]
 800e780:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e784:	b153      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e786:	7b6b      	ldrb	r3, [r5, #13]
 800e788:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e78c:	b133      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e78e:	7bab      	ldrb	r3, [r5, #14]
 800e790:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e794:	b113      	cbz	r3, 800e79c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e796:	7beb      	ldrb	r3, [r5, #15]
 800e798:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e79c:	2300      	movs	r3, #0
 800e79e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e7a2:	9d08      	ldr	r5, [sp, #32]
 800e7a4:	2d37      	cmp	r5, #55	; 0x37
 800e7a6:	bf28      	it	cs
 800e7a8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e7aa:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e7ae:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e7b0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e7b2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e7b4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e7b8:	f7fe fcde 	bl	800d178 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e7bc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e7c0:	f104 0018 	add.w	r0, r4, #24
 800e7c4:	f7fe fcd8 	bl	800d178 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e7c8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e7ca:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e7ce:	4651      	mov	r1, sl
 800e7d0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e7d2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e7d4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e7d6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e7da:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e7de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e7e2:	f01c fb22 	bl	802ae2a <memset>
 800e7e6:	4b0b      	ldr	r3, [pc, #44]	; (800e814 <prvInitialiseNewTask.constprop.0+0x128>)
 800e7e8:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e7ea:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e7ee:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e7f0:	463a      	mov	r2, r7
 800e7f2:	4631      	mov	r1, r6
 800e7f4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e7f6:	6625      	str	r5, [r4, #96]	; 0x60
 800e7f8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e7fa:	f7fe fd3b 	bl	800d274 <pxPortInitialiseStack>
 800e7fe:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e800:	f1b8 0f00 	cmp.w	r8, #0
 800e804:	d001      	beq.n	800e80a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e806:	f8c8 4000 	str.w	r4, [r8]
}
 800e80a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e80e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e812:	e7c6      	b.n	800e7a2 <prvInitialiseNewTask.constprop.0+0xb6>
 800e814:	20013c18 	.word	0x20013c18

0800e818 <prvIdleTask>:
{
 800e818:	b580      	push	{r7, lr}
 800e81a:	4d23      	ldr	r5, [pc, #140]	; (800e8a8 <prvIdleTask+0x90>)
 800e81c:	4f23      	ldr	r7, [pc, #140]	; (800e8ac <prvIdleTask+0x94>)
 800e81e:	4e24      	ldr	r6, [pc, #144]	; (800e8b0 <prvIdleTask+0x98>)
 800e820:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e8b4 <prvIdleTask+0x9c>
				taskYIELD();
 800e824:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e828:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e82c:	682b      	ldr	r3, [r5, #0]
 800e82e:	b35b      	cbz	r3, 800e888 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e830:	f7fe fd48 	bl	800d2c4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e834:	68fb      	ldr	r3, [r7, #12]
 800e836:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e838:	1d20      	adds	r0, r4, #4
 800e83a:	f7fe fcc9 	bl	800d1d0 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e83e:	6833      	ldr	r3, [r6, #0]
 800e840:	3b01      	subs	r3, #1
 800e842:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e844:	682b      	ldr	r3, [r5, #0]
 800e846:	3b01      	subs	r3, #1
 800e848:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e84a:	f7fe fd5d 	bl	800d308 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e84e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e852:	f01c fb33 	bl	802aebc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e856:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e85a:	b163      	cbz	r3, 800e876 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e85c:	2b01      	cmp	r3, #1
 800e85e:	d01e      	beq.n	800e89e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e860:	2b02      	cmp	r3, #2
 800e862:	d0e3      	beq.n	800e82c <prvIdleTask+0x14>
 800e864:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e868:	f383 8811 	msr	BASEPRI, r3
 800e86c:	f3bf 8f6f 	isb	sy
 800e870:	f3bf 8f4f 	dsb	sy
 800e874:	e7fe      	b.n	800e874 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e876:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e878:	f7fe fc0e 	bl	800d098 <vPortFree>
				vPortFree( pxTCB );
 800e87c:	4620      	mov	r0, r4
 800e87e:	f7fe fc0b 	bl	800d098 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e882:	682b      	ldr	r3, [r5, #0]
 800e884:	2b00      	cmp	r3, #0
 800e886:	d1d3      	bne.n	800e830 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e888:	f8d8 3000 	ldr.w	r3, [r8]
 800e88c:	2b01      	cmp	r3, #1
 800e88e:	d9cd      	bls.n	800e82c <prvIdleTask+0x14>
				taskYIELD();
 800e890:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e894:	f3bf 8f4f 	dsb	sy
 800e898:	f3bf 8f6f 	isb	sy
 800e89c:	e7c6      	b.n	800e82c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e89e:	4620      	mov	r0, r4
 800e8a0:	f7fe fbfa 	bl	800d098 <vPortFree>
 800e8a4:	e7c2      	b.n	800e82c <prvIdleTask+0x14>
 800e8a6:	bf00      	nop
 800e8a8:	200130f8 	.word	0x200130f8
 800e8ac:	20013168 	.word	0x20013168
 800e8b0:	200130f4 	.word	0x200130f4
 800e8b4:	20012c94 	.word	0x20012c94

0800e8b8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e8b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e8bc:	4b47      	ldr	r3, [pc, #284]	; (800e9dc <xTaskIncrementTick.part.0+0x124>)
 800e8be:	681e      	ldr	r6, [r3, #0]
 800e8c0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e8c2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e8c4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e8c6:	2e00      	cmp	r6, #0
 800e8c8:	d040      	beq.n	800e94c <xTaskIncrementTick.part.0+0x94>
 800e8ca:	f8df b124 	ldr.w	fp, [pc, #292]	; 800e9f0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e8ce:	f8db 3000 	ldr.w	r3, [fp]
 800e8d2:	429e      	cmp	r6, r3
 800e8d4:	d347      	bcc.n	800e966 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e8d6:	4f42      	ldr	r7, [pc, #264]	; (800e9e0 <xTaskIncrementTick.part.0+0x128>)
 800e8d8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800e9f4 <xTaskIncrementTick.part.0+0x13c>
 800e8dc:	683b      	ldr	r3, [r7, #0]
 800e8de:	f8df a118 	ldr.w	sl, [pc, #280]	; 800e9f8 <xTaskIncrementTick.part.0+0x140>
 800e8e2:	681d      	ldr	r5, [r3, #0]
 800e8e4:	2d00      	cmp	r5, #0
 800e8e6:	d073      	beq.n	800e9d0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e8e8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800e9fc <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e8ec:	2500      	movs	r5, #0
 800e8ee:	e022      	b.n	800e936 <xTaskIncrementTick.part.0+0x7e>
 800e8f0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e8f2:	f7fe fc6d 	bl	800d1d0 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e8f6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e8f8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e8fa:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e8fe:	b113      	cbz	r3, 800e906 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e900:	f7fe fc66 	bl	800d1d0 <uxListRemove>
 800e904:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e906:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e908:	f8d8 2000 	ldr.w	r2, [r8]
 800e90c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e910:	4293      	cmp	r3, r2
 800e912:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e916:	bf88      	it	hi
 800e918:	f8c8 3000 	strhi.w	r3, [r8]
 800e91c:	f7fe fc30 	bl	800d180 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e920:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e924:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e926:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e928:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e92a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e92c:	4291      	cmp	r1, r2
 800e92e:	bf28      	it	cs
 800e930:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e932:	2b00      	cmp	r3, #0
 800e934:	d04c      	beq.n	800e9d0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e936:	683b      	ldr	r3, [r7, #0]
 800e938:	68db      	ldr	r3, [r3, #12]
 800e93a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e93c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e93e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e940:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e942:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e944:	d2d4      	bcs.n	800e8f0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e946:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e94a:	e011      	b.n	800e970 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e94c:	4b24      	ldr	r3, [pc, #144]	; (800e9e0 <xTaskIncrementTick.part.0+0x128>)
 800e94e:	681a      	ldr	r2, [r3, #0]
 800e950:	6812      	ldr	r2, [r2, #0]
 800e952:	b30a      	cbz	r2, 800e998 <xTaskIncrementTick.part.0+0xe0>
 800e954:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e958:	f383 8811 	msr	BASEPRI, r3
 800e95c:	f3bf 8f6f 	isb	sy
 800e960:	f3bf 8f4f 	dsb	sy
 800e964:	e7fe      	b.n	800e964 <xTaskIncrementTick.part.0+0xac>
 800e966:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800e9f4 <xTaskIncrementTick.part.0+0x13c>
 800e96a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800e9f8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800e96e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e970:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800e974:	491b      	ldr	r1, [pc, #108]	; (800e9e4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e976:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e978:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e97c:	009b      	lsls	r3, r3, #2
 800e97e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800e982:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800e984:	2a02      	cmp	r2, #2
 800e986:	bf28      	it	cs
 800e988:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800e98a:	2b00      	cmp	r3, #0
}
 800e98c:	bf0c      	ite	eq
 800e98e:	4628      	moveq	r0, r5
 800e990:	2001      	movne	r0, #1
 800e992:	b003      	add	sp, #12
 800e994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800e998:	4a13      	ldr	r2, [pc, #76]	; (800e9e8 <xTaskIncrementTick.part.0+0x130>)
 800e99a:	6818      	ldr	r0, [r3, #0]
 800e99c:	6811      	ldr	r1, [r2, #0]
 800e99e:	6019      	str	r1, [r3, #0]
 800e9a0:	4912      	ldr	r1, [pc, #72]	; (800e9ec <xTaskIncrementTick.part.0+0x134>)
 800e9a2:	6010      	str	r0, [r2, #0]
 800e9a4:	680a      	ldr	r2, [r1, #0]
 800e9a6:	3201      	adds	r2, #1
 800e9a8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e9aa:	681a      	ldr	r2, [r3, #0]
 800e9ac:	6812      	ldr	r2, [r2, #0]
 800e9ae:	b932      	cbnz	r2, 800e9be <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e9b0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800e9f0 <xTaskIncrementTick.part.0+0x138>
 800e9b4:	f04f 33ff 	mov.w	r3, #4294967295
 800e9b8:	f8cb 3000 	str.w	r3, [fp]
 800e9bc:	e787      	b.n	800e8ce <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9be:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e9c0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800e9f0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9c4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e9c6:	68db      	ldr	r3, [r3, #12]
 800e9c8:	685b      	ldr	r3, [r3, #4]
 800e9ca:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800e9ce:	e77e      	b.n	800e8ce <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e9d0:	f04f 33ff 	mov.w	r3, #4294967295
 800e9d4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800e9d8:	e7ca      	b.n	800e970 <xTaskIncrementTick.part.0+0xb8>
 800e9da:	bf00      	nop
 800e9dc:	2001317c 	.word	0x2001317c
 800e9e0:	20012c8c 	.word	0x20012c8c
 800e9e4:	20013180 	.word	0x20013180
 800e9e8:	20012c90 	.word	0x20012c90
 800e9ec:	20013134 	.word	0x20013134
 800e9f0:	20013130 	.word	0x20013130
 800e9f4:	20012c94 	.word	0x20012c94
 800e9f8:	20012c88 	.word	0x20012c88
 800e9fc:	20013104 	.word	0x20013104

0800ea00 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800ea00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800ea04:	4d41      	ldr	r5, [pc, #260]	; (800eb0c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800ea06:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800ea08:	f7fe fc5c 	bl	800d2c4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800ea0c:	682b      	ldr	r3, [r5, #0]
 800ea0e:	3b01      	subs	r3, #1
 800ea10:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ea12:	682b      	ldr	r3, [r5, #0]
 800ea14:	2b00      	cmp	r3, #0
 800ea16:	d161      	bne.n	800eadc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800ea18:	4b3d      	ldr	r3, [pc, #244]	; (800eb10 <xTaskResumeAll.part.0+0x110>)
 800ea1a:	681b      	ldr	r3, [r3, #0]
 800ea1c:	2b00      	cmp	r3, #0
 800ea1e:	d05d      	beq.n	800eadc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ea20:	4e3c      	ldr	r6, [pc, #240]	; (800eb14 <xTaskResumeAll.part.0+0x114>)
 800ea22:	6833      	ldr	r3, [r6, #0]
 800ea24:	2b00      	cmp	r3, #0
 800ea26:	d06e      	beq.n	800eb06 <xTaskResumeAll.part.0+0x106>
 800ea28:	4f3b      	ldr	r7, [pc, #236]	; (800eb18 <xTaskResumeAll.part.0+0x118>)
 800ea2a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800eb28 <xTaskResumeAll.part.0+0x128>
 800ea2e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800eb2c <xTaskResumeAll.part.0+0x12c>
 800ea32:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800eb30 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea36:	68f3      	ldr	r3, [r6, #12]
 800ea38:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ea3a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ea3e:	f104 0018 	add.w	r0, r4, #24
 800ea42:	f7fe fbc5 	bl	800d1d0 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ea46:	4658      	mov	r0, fp
 800ea48:	f7fe fbc2 	bl	800d1d0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800ea4c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ea4e:	683a      	ldr	r2, [r7, #0]
 800ea50:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ea54:	4293      	cmp	r3, r2
 800ea56:	4659      	mov	r1, fp
 800ea58:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ea5c:	bf88      	it	hi
 800ea5e:	603b      	strhi	r3, [r7, #0]
 800ea60:	f7fe fb8e 	bl	800d180 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ea64:	f8d8 3000 	ldr.w	r3, [r8]
 800ea68:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ea6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea6c:	429a      	cmp	r2, r3
 800ea6e:	d33d      	bcc.n	800eaec <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800ea70:	2301      	movs	r3, #1
 800ea72:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ea76:	6833      	ldr	r3, [r6, #0]
 800ea78:	2b00      	cmp	r3, #0
 800ea7a:	d1dc      	bne.n	800ea36 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ea7c:	4b27      	ldr	r3, [pc, #156]	; (800eb1c <xTaskResumeAll.part.0+0x11c>)
 800ea7e:	681a      	ldr	r2, [r3, #0]
 800ea80:	6812      	ldr	r2, [r2, #0]
 800ea82:	2a00      	cmp	r2, #0
 800ea84:	d03a      	beq.n	800eafc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea86:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ea88:	4b25      	ldr	r3, [pc, #148]	; (800eb20 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea8a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ea8c:	68d2      	ldr	r2, [r2, #12]
 800ea8e:	6852      	ldr	r2, [r2, #4]
 800ea90:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800ea92:	4e24      	ldr	r6, [pc, #144]	; (800eb24 <xTaskResumeAll.part.0+0x124>)
 800ea94:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800ea96:	b194      	cbz	r4, 800eabe <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800ea98:	2701      	movs	r7, #1
 800ea9a:	e006      	b.n	800eaaa <xTaskResumeAll.part.0+0xaa>
 800ea9c:	f7ff ff0c 	bl	800e8b8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800eaa0:	b108      	cbz	r0, 800eaa6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800eaa2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800eaa6:	3c01      	subs	r4, #1
 800eaa8:	d008      	beq.n	800eabc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eaaa:	682b      	ldr	r3, [r5, #0]
 800eaac:	2b00      	cmp	r3, #0
 800eaae:	d0f5      	beq.n	800ea9c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800eab0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800eab2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800eab4:	f103 0301 	add.w	r3, r3, #1
 800eab8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800eaba:	d1f6      	bne.n	800eaaa <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800eabc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800eabe:	f8da 3000 	ldr.w	r3, [sl]
 800eac2:	b15b      	cbz	r3, 800eadc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800eac4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eac8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eacc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ead0:	f3bf 8f4f 	dsb	sy
 800ead4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800ead8:	2001      	movs	r0, #1
 800eada:	e000      	b.n	800eade <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800eadc:	2000      	movs	r0, #0
 800eade:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800eae0:	f7fe fc12 	bl	800d308 <vPortExitCritical>
}
 800eae4:	9801      	ldr	r0, [sp, #4]
 800eae6:	b003      	add	sp, #12
 800eae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800eaec:	6833      	ldr	r3, [r6, #0]
 800eaee:	2b00      	cmp	r3, #0
 800eaf0:	d1a1      	bne.n	800ea36 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eaf2:	4b0a      	ldr	r3, [pc, #40]	; (800eb1c <xTaskResumeAll.part.0+0x11c>)
 800eaf4:	681a      	ldr	r2, [r3, #0]
 800eaf6:	6812      	ldr	r2, [r2, #0]
 800eaf8:	2a00      	cmp	r2, #0
 800eafa:	d1c4      	bne.n	800ea86 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800eafc:	4b08      	ldr	r3, [pc, #32]	; (800eb20 <xTaskResumeAll.part.0+0x120>)
 800eafe:	f04f 32ff 	mov.w	r2, #4294967295
 800eb02:	601a      	str	r2, [r3, #0]
 800eb04:	e7c5      	b.n	800ea92 <xTaskResumeAll.part.0+0x92>
 800eb06:	f8df a028 	ldr.w	sl, [pc, #40]	; 800eb30 <xTaskResumeAll.part.0+0x130>
 800eb0a:	e7c2      	b.n	800ea92 <xTaskResumeAll.part.0+0x92>
 800eb0c:	200130fc 	.word	0x200130fc
 800eb10:	200130f4 	.word	0x200130f4
 800eb14:	2001313c 	.word	0x2001313c
 800eb18:	20013104 	.word	0x20013104
 800eb1c:	20012c8c 	.word	0x20012c8c
 800eb20:	20013130 	.word	0x20013130
 800eb24:	20013138 	.word	0x20013138
 800eb28:	20012c94 	.word	0x20012c94
 800eb2c:	20012c88 	.word	0x20012c88
 800eb30:	20013180 	.word	0x20013180

0800eb34 <xTaskCreateStatic>:
	{
 800eb34:	b530      	push	{r4, r5, lr}
 800eb36:	b087      	sub	sp, #28
 800eb38:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800eb3a:	b1c4      	cbz	r4, 800eb6e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800eb3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800eb3e:	b16d      	cbz	r5, 800eb5c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800eb40:	25ac      	movs	r5, #172	; 0xac
 800eb42:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800eb44:	9d05      	ldr	r5, [sp, #20]
 800eb46:	2dac      	cmp	r5, #172	; 0xac
 800eb48:	d01a      	beq.n	800eb80 <xTaskCreateStatic+0x4c>
 800eb4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb4e:	f383 8811 	msr	BASEPRI, r3
 800eb52:	f3bf 8f6f 	isb	sy
 800eb56:	f3bf 8f4f 	dsb	sy
 800eb5a:	e7fe      	b.n	800eb5a <xTaskCreateStatic+0x26>
 800eb5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb60:	f383 8811 	msr	BASEPRI, r3
 800eb64:	f3bf 8f6f 	isb	sy
 800eb68:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800eb6c:	e7fe      	b.n	800eb6c <xTaskCreateStatic+0x38>
 800eb6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb72:	f383 8811 	msr	BASEPRI, r3
 800eb76:	f3bf 8f6f 	isb	sy
 800eb7a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800eb7e:	e7fe      	b.n	800eb7e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800eb80:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800eb82:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800eb84:	2402      	movs	r4, #2
 800eb86:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eb8a:	ac04      	add	r4, sp, #16
 800eb8c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800eb90:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800eb92:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800eb94:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eb96:	f7ff fda9 	bl	800e6ec <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800eb9a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800eb9c:	f7ff fd1e 	bl	800e5dc <prvAddNewTaskToReadyList>
	}
 800eba0:	9804      	ldr	r0, [sp, #16]
 800eba2:	b007      	add	sp, #28
 800eba4:	bd30      	pop	{r4, r5, pc}
 800eba6:	bf00      	nop

0800eba8 <xTaskCreate>:
	{
 800eba8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ebac:	4607      	mov	r7, r0
 800ebae:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ebb0:	0090      	lsls	r0, r2, #2
	{
 800ebb2:	4615      	mov	r5, r2
 800ebb4:	4688      	mov	r8, r1
 800ebb6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ebb8:	f7fe f9b2 	bl	800cf20 <pvPortMalloc>
			if( pxStack != NULL )
 800ebbc:	b1d8      	cbz	r0, 800ebf6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ebbe:	4604      	mov	r4, r0
 800ebc0:	20ac      	movs	r0, #172	; 0xac
 800ebc2:	f7fe f9ad 	bl	800cf20 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ebc6:	4606      	mov	r6, r0
 800ebc8:	b1d0      	cbz	r0, 800ec00 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800ebca:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ebcc:	2400      	movs	r4, #0
 800ebce:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ebd2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ebd4:	9401      	str	r4, [sp, #4]
 800ebd6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ebd8:	9602      	str	r6, [sp, #8]
 800ebda:	464b      	mov	r3, r9
 800ebdc:	462a      	mov	r2, r5
 800ebde:	4641      	mov	r1, r8
 800ebe0:	4638      	mov	r0, r7
 800ebe2:	9400      	str	r4, [sp, #0]
 800ebe4:	f7ff fd82 	bl	800e6ec <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ebe8:	4630      	mov	r0, r6
 800ebea:	f7ff fcf7 	bl	800e5dc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ebee:	2001      	movs	r0, #1
	}
 800ebf0:	b005      	add	sp, #20
 800ebf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ebf6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800ebfa:	b005      	add	sp, #20
 800ebfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ec00:	4620      	mov	r0, r4
 800ec02:	f7fe fa49 	bl	800d098 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ec06:	f04f 30ff 	mov.w	r0, #4294967295
 800ec0a:	e7f1      	b.n	800ebf0 <xTaskCreate+0x48>

0800ec0c <vTaskDelay>:
	{
 800ec0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800ec0e:	b950      	cbnz	r0, 800ec26 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800ec10:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec14:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec18:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec1c:	f3bf 8f4f 	dsb	sy
 800ec20:	f3bf 8f6f 	isb	sy
	}
 800ec24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800ec26:	4d1e      	ldr	r5, [pc, #120]	; (800eca0 <vTaskDelay+0x94>)
 800ec28:	682b      	ldr	r3, [r5, #0]
 800ec2a:	b143      	cbz	r3, 800ec3e <vTaskDelay+0x32>
 800ec2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec30:	f383 8811 	msr	BASEPRI, r3
 800ec34:	f3bf 8f6f 	isb	sy
 800ec38:	f3bf 8f4f 	dsb	sy
 800ec3c:	e7fe      	b.n	800ec3c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800ec3e:	682b      	ldr	r3, [r5, #0]
 800ec40:	3301      	adds	r3, #1
 800ec42:	4604      	mov	r4, r0
 800ec44:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800ec46:	4b17      	ldr	r3, [pc, #92]	; (800eca4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec48:	4e17      	ldr	r6, [pc, #92]	; (800eca8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800ec4a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec4c:	6830      	ldr	r0, [r6, #0]
 800ec4e:	3004      	adds	r0, #4
 800ec50:	f7fe fabe 	bl	800d1d0 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ec54:	6833      	ldr	r3, [r6, #0]
 800ec56:	19e4      	adds	r4, r4, r7
 800ec58:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800ec5a:	d310      	bcc.n	800ec7e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ec5c:	4b13      	ldr	r3, [pc, #76]	; (800ecac <vTaskDelay+0xa0>)
 800ec5e:	6818      	ldr	r0, [r3, #0]
 800ec60:	6831      	ldr	r1, [r6, #0]
 800ec62:	3104      	adds	r1, #4
 800ec64:	f7fe fa9c 	bl	800d1a0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800ec68:	682b      	ldr	r3, [r5, #0]
 800ec6a:	b9a3      	cbnz	r3, 800ec96 <vTaskDelay+0x8a>
 800ec6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec70:	f383 8811 	msr	BASEPRI, r3
 800ec74:	f3bf 8f6f 	isb	sy
 800ec78:	f3bf 8f4f 	dsb	sy
 800ec7c:	e7fe      	b.n	800ec7c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ec7e:	4b0c      	ldr	r3, [pc, #48]	; (800ecb0 <vTaskDelay+0xa4>)
 800ec80:	6818      	ldr	r0, [r3, #0]
 800ec82:	6831      	ldr	r1, [r6, #0]
 800ec84:	3104      	adds	r1, #4
 800ec86:	f7fe fa8b 	bl	800d1a0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800ec8a:	4b0a      	ldr	r3, [pc, #40]	; (800ecb4 <vTaskDelay+0xa8>)
 800ec8c:	681a      	ldr	r2, [r3, #0]
 800ec8e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800ec90:	bf38      	it	cc
 800ec92:	601c      	strcc	r4, [r3, #0]
 800ec94:	e7e8      	b.n	800ec68 <vTaskDelay+0x5c>
 800ec96:	f7ff feb3 	bl	800ea00 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800ec9a:	2800      	cmp	r0, #0
 800ec9c:	d0b8      	beq.n	800ec10 <vTaskDelay+0x4>
	}
 800ec9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eca0:	200130fc 	.word	0x200130fc
 800eca4:	2001317c 	.word	0x2001317c
 800eca8:	20012c88 	.word	0x20012c88
 800ecac:	20012c90 	.word	0x20012c90
 800ecb0:	20012c8c 	.word	0x20012c8c
 800ecb4:	20013130 	.word	0x20013130

0800ecb8 <vTaskStartScheduler>:
{
 800ecb8:	b530      	push	{r4, r5, lr}
 800ecba:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ecbc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ecbe:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ecc0:	a906      	add	r1, sp, #24
 800ecc2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ecc4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ecc8:	f7fe f90c 	bl	800cee4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800eccc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ecd0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800ecd2:	b1bb      	cbz	r3, 800ed04 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800ecd4:	b16d      	cbz	r5, 800ecf2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ecd6:	21ac      	movs	r1, #172	; 0xac
 800ecd8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800ecda:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ecdc:	29ac      	cmp	r1, #172	; 0xac
 800ecde:	d01a      	beq.n	800ed16 <vTaskStartScheduler+0x5e>
 800ece0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ece4:	f383 8811 	msr	BASEPRI, r3
 800ece8:	f3bf 8f6f 	isb	sy
 800ecec:	f3bf 8f4f 	dsb	sy
 800ecf0:	e7fe      	b.n	800ecf0 <vTaskStartScheduler+0x38>
 800ecf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecf6:	f383 8811 	msr	BASEPRI, r3
 800ecfa:	f3bf 8f6f 	isb	sy
 800ecfe:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ed02:	e7fe      	b.n	800ed02 <vTaskStartScheduler+0x4a>
 800ed04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed08:	f383 8811 	msr	BASEPRI, r3
 800ed0c:	f3bf 8f6f 	isb	sy
 800ed10:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ed14:	e7fe      	b.n	800ed14 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ed16:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ed18:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ed1a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ed1c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ed20:	4623      	mov	r3, r4
 800ed22:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800ed26:	491b      	ldr	r1, [pc, #108]	; (800ed94 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ed28:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ed2a:	9400      	str	r4, [sp, #0]
 800ed2c:	481a      	ldr	r0, [pc, #104]	; (800ed98 <vTaskStartScheduler+0xe0>)
 800ed2e:	f7ff fcdd 	bl	800e6ec <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ed32:	4628      	mov	r0, r5
 800ed34:	f7ff fc52 	bl	800e5dc <prvAddNewTaskToReadyList>
		return xReturn;
 800ed38:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800ed3a:	b1eb      	cbz	r3, 800ed78 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800ed3c:	f000 fc6e 	bl	800f61c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800ed40:	2801      	cmp	r0, #1
 800ed42:	d11b      	bne.n	800ed7c <vTaskStartScheduler+0xc4>
 800ed44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed48:	f383 8811 	msr	BASEPRI, r3
 800ed4c:	f3bf 8f6f 	isb	sy
 800ed50:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ed54:	4b11      	ldr	r3, [pc, #68]	; (800ed9c <vTaskStartScheduler+0xe4>)
 800ed56:	4a12      	ldr	r2, [pc, #72]	; (800eda0 <vTaskStartScheduler+0xe8>)
 800ed58:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800ed5a:	4912      	ldr	r1, [pc, #72]	; (800eda4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ed5c:	3358      	adds	r3, #88	; 0x58
 800ed5e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800ed60:	4a11      	ldr	r2, [pc, #68]	; (800eda8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ed62:	4b12      	ldr	r3, [pc, #72]	; (800edac <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800ed64:	f04f 35ff 	mov.w	r5, #4294967295
 800ed68:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800ed6a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ed6c:	601c      	str	r4, [r3, #0]
}
 800ed6e:	b00b      	add	sp, #44	; 0x2c
 800ed70:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800ed74:	f7fe bb38 	b.w	800d3e8 <xPortStartScheduler>
}
 800ed78:	b00b      	add	sp, #44	; 0x2c
 800ed7a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ed7c:	3001      	adds	r0, #1
 800ed7e:	d1fb      	bne.n	800ed78 <vTaskStartScheduler+0xc0>
 800ed80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed84:	f383 8811 	msr	BASEPRI, r3
 800ed88:	f3bf 8f6f 	isb	sy
 800ed8c:	f3bf 8f4f 	dsb	sy
 800ed90:	e7fe      	b.n	800ed90 <vTaskStartScheduler+0xd8>
 800ed92:	bf00      	nop
 800ed94:	0802e4f4 	.word	0x0802e4f4
 800ed98:	0800e819 	.word	0x0800e819
 800ed9c:	20012c88 	.word	0x20012c88
 800eda0:	2000017c 	.word	0x2000017c
 800eda4:	20013130 	.word	0x20013130
 800eda8:	20013150 	.word	0x20013150
 800edac:	2001317c 	.word	0x2001317c

0800edb0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800edb0:	4a02      	ldr	r2, [pc, #8]	; (800edbc <vTaskSuspendAll+0xc>)
 800edb2:	6813      	ldr	r3, [r2, #0]
 800edb4:	3301      	adds	r3, #1
 800edb6:	6013      	str	r3, [r2, #0]
}
 800edb8:	4770      	bx	lr
 800edba:	bf00      	nop
 800edbc:	200130fc 	.word	0x200130fc

0800edc0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800edc0:	4b06      	ldr	r3, [pc, #24]	; (800eddc <xTaskResumeAll+0x1c>)
 800edc2:	681b      	ldr	r3, [r3, #0]
 800edc4:	b943      	cbnz	r3, 800edd8 <xTaskResumeAll+0x18>
 800edc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edca:	f383 8811 	msr	BASEPRI, r3
 800edce:	f3bf 8f6f 	isb	sy
 800edd2:	f3bf 8f4f 	dsb	sy
 800edd6:	e7fe      	b.n	800edd6 <xTaskResumeAll+0x16>
 800edd8:	f7ff be12 	b.w	800ea00 <xTaskResumeAll.part.0>
 800eddc:	200130fc 	.word	0x200130fc

0800ede0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ede0:	4b01      	ldr	r3, [pc, #4]	; (800ede8 <xTaskGetTickCount+0x8>)
 800ede2:	6818      	ldr	r0, [r3, #0]
}
 800ede4:	4770      	bx	lr
 800ede6:	bf00      	nop
 800ede8:	2001317c 	.word	0x2001317c

0800edec <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800edec:	4b05      	ldr	r3, [pc, #20]	; (800ee04 <xTaskIncrementTick+0x18>)
 800edee:	681b      	ldr	r3, [r3, #0]
 800edf0:	b90b      	cbnz	r3, 800edf6 <xTaskIncrementTick+0xa>
 800edf2:	f7ff bd61 	b.w	800e8b8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800edf6:	4a04      	ldr	r2, [pc, #16]	; (800ee08 <xTaskIncrementTick+0x1c>)
 800edf8:	6813      	ldr	r3, [r2, #0]
 800edfa:	3301      	adds	r3, #1
}
 800edfc:	2000      	movs	r0, #0
		++xPendedTicks;
 800edfe:	6013      	str	r3, [r2, #0]
}
 800ee00:	4770      	bx	lr
 800ee02:	bf00      	nop
 800ee04:	200130fc 	.word	0x200130fc
 800ee08:	20013138 	.word	0x20013138

0800ee0c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ee0c:	4b1f      	ldr	r3, [pc, #124]	; (800ee8c <vTaskSwitchContext+0x80>)
 800ee0e:	681b      	ldr	r3, [r3, #0]
 800ee10:	b11b      	cbz	r3, 800ee1a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800ee12:	4b1f      	ldr	r3, [pc, #124]	; (800ee90 <vTaskSwitchContext+0x84>)
 800ee14:	2201      	movs	r2, #1
 800ee16:	601a      	str	r2, [r3, #0]
 800ee18:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800ee1a:	4a1d      	ldr	r2, [pc, #116]	; (800ee90 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee1c:	491d      	ldr	r1, [pc, #116]	; (800ee94 <vTaskSwitchContext+0x88>)
{
 800ee1e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee20:	4c1d      	ldr	r4, [pc, #116]	; (800ee98 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800ee22:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee24:	6823      	ldr	r3, [r4, #0]
 800ee26:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ee2a:	0092      	lsls	r2, r2, #2
 800ee2c:	0098      	lsls	r0, r3, #2
 800ee2e:	588a      	ldr	r2, [r1, r2]
 800ee30:	b942      	cbnz	r2, 800ee44 <vTaskSwitchContext+0x38>
 800ee32:	b313      	cbz	r3, 800ee7a <vTaskSwitchContext+0x6e>
 800ee34:	3b01      	subs	r3, #1
 800ee36:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ee3a:	0098      	lsls	r0, r3, #2
 800ee3c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800ee40:	2a00      	cmp	r2, #0
 800ee42:	d0f6      	beq.n	800ee32 <vTaskSwitchContext+0x26>
 800ee44:	4418      	add	r0, r3
 800ee46:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800ee4a:	4662      	mov	r2, ip
 800ee4c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800ee50:	6849      	ldr	r1, [r1, #4]
 800ee52:	f8cc 1004 	str.w	r1, [ip, #4]
 800ee56:	3208      	adds	r2, #8
 800ee58:	4291      	cmp	r1, r2
 800ee5a:	bf08      	it	eq
 800ee5c:	6849      	ldreq	r1, [r1, #4]
 800ee5e:	4a0f      	ldr	r2, [pc, #60]	; (800ee9c <vTaskSwitchContext+0x90>)
 800ee60:	bf08      	it	eq
 800ee62:	f8cc 1004 	streq.w	r1, [ip, #4]
 800ee66:	68c9      	ldr	r1, [r1, #12]
 800ee68:	6011      	str	r1, [r2, #0]
 800ee6a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ee6c:	6813      	ldr	r3, [r2, #0]
 800ee6e:	4a0c      	ldr	r2, [pc, #48]	; (800eea0 <vTaskSwitchContext+0x94>)
}
 800ee70:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ee74:	3358      	adds	r3, #88	; 0x58
 800ee76:	6013      	str	r3, [r2, #0]
}
 800ee78:	4770      	bx	lr
 800ee7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee7e:	f383 8811 	msr	BASEPRI, r3
 800ee82:	f3bf 8f6f 	isb	sy
 800ee86:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee8a:	e7fe      	b.n	800ee8a <vTaskSwitchContext+0x7e>
 800ee8c:	200130fc 	.word	0x200130fc
 800ee90:	20013180 	.word	0x20013180
 800ee94:	20012c94 	.word	0x20012c94
 800ee98:	20013104 	.word	0x20013104
 800ee9c:	20012c88 	.word	0x20012c88
 800eea0:	2000017c 	.word	0x2000017c

0800eea4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800eea4:	b1d0      	cbz	r0, 800eedc <vTaskPlaceOnEventList+0x38>
{
 800eea6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800eea8:	4d1a      	ldr	r5, [pc, #104]	; (800ef14 <vTaskPlaceOnEventList+0x70>)
 800eeaa:	460c      	mov	r4, r1
 800eeac:	6829      	ldr	r1, [r5, #0]
 800eeae:	3118      	adds	r1, #24
 800eeb0:	f7fe f976 	bl	800d1a0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800eeb4:	4b18      	ldr	r3, [pc, #96]	; (800ef18 <vTaskPlaceOnEventList+0x74>)
 800eeb6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eeb8:	6828      	ldr	r0, [r5, #0]
 800eeba:	3004      	adds	r0, #4
 800eebc:	f7fe f988 	bl	800d1d0 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800eec0:	1c63      	adds	r3, r4, #1
 800eec2:	d014      	beq.n	800eeee <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800eec4:	682b      	ldr	r3, [r5, #0]
 800eec6:	19a4      	adds	r4, r4, r6
 800eec8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800eeca:	d317      	bcc.n	800eefc <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eecc:	4b13      	ldr	r3, [pc, #76]	; (800ef1c <vTaskPlaceOnEventList+0x78>)
 800eece:	6818      	ldr	r0, [r3, #0]
 800eed0:	6829      	ldr	r1, [r5, #0]
}
 800eed2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eed6:	3104      	adds	r1, #4
 800eed8:	f7fe b962 	b.w	800d1a0 <vListInsert>
 800eedc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eee0:	f383 8811 	msr	BASEPRI, r3
 800eee4:	f3bf 8f6f 	isb	sy
 800eee8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800eeec:	e7fe      	b.n	800eeec <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eeee:	6829      	ldr	r1, [r5, #0]
 800eef0:	480b      	ldr	r0, [pc, #44]	; (800ef20 <vTaskPlaceOnEventList+0x7c>)
}
 800eef2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eef6:	3104      	adds	r1, #4
 800eef8:	f7fe b942 	b.w	800d180 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eefc:	4b09      	ldr	r3, [pc, #36]	; (800ef24 <vTaskPlaceOnEventList+0x80>)
 800eefe:	6818      	ldr	r0, [r3, #0]
 800ef00:	6829      	ldr	r1, [r5, #0]
 800ef02:	3104      	adds	r1, #4
 800ef04:	f7fe f94c 	bl	800d1a0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ef08:	4b07      	ldr	r3, [pc, #28]	; (800ef28 <vTaskPlaceOnEventList+0x84>)
 800ef0a:	681a      	ldr	r2, [r3, #0]
 800ef0c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ef0e:	bf38      	it	cc
 800ef10:	601c      	strcc	r4, [r3, #0]
}
 800ef12:	bd70      	pop	{r4, r5, r6, pc}
 800ef14:	20012c88 	.word	0x20012c88
 800ef18:	2001317c 	.word	0x2001317c
 800ef1c:	20012c90 	.word	0x20012c90
 800ef20:	20013154 	.word	0x20013154
 800ef24:	20012c8c 	.word	0x20012c8c
 800ef28:	20013130 	.word	0x20013130

0800ef2c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800ef2c:	b330      	cbz	r0, 800ef7c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800ef2e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ef30:	4e1d      	ldr	r6, [pc, #116]	; (800efa8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800ef32:	460c      	mov	r4, r1
 800ef34:	6831      	ldr	r1, [r6, #0]
 800ef36:	4615      	mov	r5, r2
 800ef38:	3118      	adds	r1, #24
 800ef3a:	f7fe f921 	bl	800d180 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800ef3e:	4b1b      	ldr	r3, [pc, #108]	; (800efac <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800ef40:	b985      	cbnz	r5, 800ef64 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800ef42:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ef44:	6830      	ldr	r0, [r6, #0]
 800ef46:	3004      	adds	r0, #4
 800ef48:	f7fe f942 	bl	800d1d0 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ef4c:	6833      	ldr	r3, [r6, #0]
 800ef4e:	1964      	adds	r4, r4, r5
 800ef50:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ef52:	d31c      	bcc.n	800ef8e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef54:	4b16      	ldr	r3, [pc, #88]	; (800efb0 <vTaskPlaceOnEventListRestricted+0x84>)
 800ef56:	6818      	ldr	r0, [r3, #0]
 800ef58:	6831      	ldr	r1, [r6, #0]
	}
 800ef5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef5e:	3104      	adds	r1, #4
 800ef60:	f7fe b91e 	b.w	800d1a0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ef64:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ef66:	6830      	ldr	r0, [r6, #0]
 800ef68:	3004      	adds	r0, #4
 800ef6a:	f7fe f931 	bl	800d1d0 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef6e:	6831      	ldr	r1, [r6, #0]
 800ef70:	4810      	ldr	r0, [pc, #64]	; (800efb4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800ef72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef76:	3104      	adds	r1, #4
 800ef78:	f7fe b902 	b.w	800d180 <vListInsertEnd>
 800ef7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef80:	f383 8811 	msr	BASEPRI, r3
 800ef84:	f3bf 8f6f 	isb	sy
 800ef88:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800ef8c:	e7fe      	b.n	800ef8c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef8e:	4b0a      	ldr	r3, [pc, #40]	; (800efb8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800ef90:	6818      	ldr	r0, [r3, #0]
 800ef92:	6831      	ldr	r1, [r6, #0]
 800ef94:	3104      	adds	r1, #4
 800ef96:	f7fe f903 	bl	800d1a0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ef9a:	4b08      	ldr	r3, [pc, #32]	; (800efbc <vTaskPlaceOnEventListRestricted+0x90>)
 800ef9c:	681a      	ldr	r2, [r3, #0]
 800ef9e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800efa0:	bf38      	it	cc
 800efa2:	601c      	strcc	r4, [r3, #0]
	}
 800efa4:	bd70      	pop	{r4, r5, r6, pc}
 800efa6:	bf00      	nop
 800efa8:	20012c88 	.word	0x20012c88
 800efac:	2001317c 	.word	0x2001317c
 800efb0:	20012c90 	.word	0x20012c90
 800efb4:	20013154 	.word	0x20013154
 800efb8:	20012c8c 	.word	0x20012c8c
 800efbc:	20013130 	.word	0x20013130

0800efc0 <xTaskRemoveFromEventList>:
{
 800efc0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800efc2:	68c3      	ldr	r3, [r0, #12]
 800efc4:	68dc      	ldr	r4, [r3, #12]
{
 800efc6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800efc8:	2c00      	cmp	r4, #0
 800efca:	d02b      	beq.n	800f024 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800efcc:	f104 0518 	add.w	r5, r4, #24
 800efd0:	4628      	mov	r0, r5
 800efd2:	f7fe f8fd 	bl	800d1d0 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800efd6:	4b18      	ldr	r3, [pc, #96]	; (800f038 <xTaskRemoveFromEventList+0x78>)
 800efd8:	681b      	ldr	r3, [r3, #0]
 800efda:	b17b      	cbz	r3, 800effc <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800efdc:	4817      	ldr	r0, [pc, #92]	; (800f03c <xTaskRemoveFromEventList+0x7c>)
 800efde:	4629      	mov	r1, r5
 800efe0:	f7fe f8ce 	bl	800d180 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800efe4:	4b16      	ldr	r3, [pc, #88]	; (800f040 <xTaskRemoveFromEventList+0x80>)
 800efe6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800efe8:	681b      	ldr	r3, [r3, #0]
 800efea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800efec:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800efee:	bf85      	ittet	hi
 800eff0:	4b14      	ldrhi	r3, [pc, #80]	; (800f044 <xTaskRemoveFromEventList+0x84>)
 800eff2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800eff4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800eff6:	6018      	strhi	r0, [r3, #0]
}
 800eff8:	b003      	add	sp, #12
 800effa:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800effc:	1d21      	adds	r1, r4, #4
 800effe:	4608      	mov	r0, r1
 800f000:	9101      	str	r1, [sp, #4]
 800f002:	f7fe f8e5 	bl	800d1d0 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f006:	4a10      	ldr	r2, [pc, #64]	; (800f048 <xTaskRemoveFromEventList+0x88>)
 800f008:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f00a:	6810      	ldr	r0, [r2, #0]
 800f00c:	9901      	ldr	r1, [sp, #4]
 800f00e:	4283      	cmp	r3, r0
 800f010:	480e      	ldr	r0, [pc, #56]	; (800f04c <xTaskRemoveFromEventList+0x8c>)
 800f012:	bf88      	it	hi
 800f014:	6013      	strhi	r3, [r2, #0]
 800f016:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f01a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f01e:	f7fe f8af 	bl	800d180 <vListInsertEnd>
 800f022:	e7df      	b.n	800efe4 <xTaskRemoveFromEventList+0x24>
 800f024:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f028:	f383 8811 	msr	BASEPRI, r3
 800f02c:	f3bf 8f6f 	isb	sy
 800f030:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f034:	e7fe      	b.n	800f034 <xTaskRemoveFromEventList+0x74>
 800f036:	bf00      	nop
 800f038:	200130fc 	.word	0x200130fc
 800f03c:	2001313c 	.word	0x2001313c
 800f040:	20012c88 	.word	0x20012c88
 800f044:	20013180 	.word	0x20013180
 800f048:	20013104 	.word	0x20013104
 800f04c:	20012c94 	.word	0x20012c94

0800f050 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f050:	4a03      	ldr	r2, [pc, #12]	; (800f060 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f052:	4b04      	ldr	r3, [pc, #16]	; (800f064 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f054:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f056:	681b      	ldr	r3, [r3, #0]
 800f058:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f05c:	4770      	bx	lr
 800f05e:	bf00      	nop
 800f060:	20013134 	.word	0x20013134
 800f064:	2001317c 	.word	0x2001317c

0800f068 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f068:	b328      	cbz	r0, 800f0b6 <xTaskCheckForTimeOut+0x4e>
{
 800f06a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f06c:	460d      	mov	r5, r1
 800f06e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f070:	b1c1      	cbz	r1, 800f0a4 <xTaskCheckForTimeOut+0x3c>
 800f072:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f074:	f7fe f926 	bl	800d2c4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f078:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f07a:	4a1d      	ldr	r2, [pc, #116]	; (800f0f0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f07c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f07e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f080:	d030      	beq.n	800f0e4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f082:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f0f4 <xTaskCheckForTimeOut+0x8c>
 800f086:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f08a:	f8dc 7000 	ldr.w	r7, [ip]
 800f08e:	42be      	cmp	r6, r7
 800f090:	d01a      	beq.n	800f0c8 <xTaskCheckForTimeOut+0x60>
 800f092:	4288      	cmp	r0, r1
 800f094:	d818      	bhi.n	800f0c8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f096:	2001      	movs	r0, #1
 800f098:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f09a:	f7fe f935 	bl	800d308 <vPortExitCritical>
}
 800f09e:	9801      	ldr	r0, [sp, #4]
 800f0a0:	b003      	add	sp, #12
 800f0a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f0a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0a8:	f383 8811 	msr	BASEPRI, r3
 800f0ac:	f3bf 8f6f 	isb	sy
 800f0b0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f0b4:	e7fe      	b.n	800f0b4 <xTaskCheckForTimeOut+0x4c>
 800f0b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0ba:	f383 8811 	msr	BASEPRI, r3
 800f0be:	f3bf 8f6f 	isb	sy
 800f0c2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f0c6:	e7fe      	b.n	800f0c6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f0c8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f0cc:	4573      	cmp	r3, lr
 800f0ce:	d90b      	bls.n	800f0e8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f0d0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f0d2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f0d6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f0d8:	4403      	add	r3, r0
 800f0da:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f0dc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f0de:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f0e2:	e7d9      	b.n	800f098 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f0e4:	2000      	movs	r0, #0
 800f0e6:	e7d7      	b.n	800f098 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f0e8:	2300      	movs	r3, #0
 800f0ea:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f0ec:	2001      	movs	r0, #1
 800f0ee:	e7d3      	b.n	800f098 <xTaskCheckForTimeOut+0x30>
 800f0f0:	2001317c 	.word	0x2001317c
 800f0f4:	20013134 	.word	0x20013134

0800f0f8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f0f8:	4b01      	ldr	r3, [pc, #4]	; (800f100 <vTaskMissedYield+0x8>)
 800f0fa:	2201      	movs	r2, #1
 800f0fc:	601a      	str	r2, [r3, #0]
}
 800f0fe:	4770      	bx	lr
 800f100:	20013180 	.word	0x20013180

0800f104 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f104:	4b05      	ldr	r3, [pc, #20]	; (800f11c <xTaskGetSchedulerState+0x18>)
 800f106:	681b      	ldr	r3, [r3, #0]
 800f108:	b133      	cbz	r3, 800f118 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f10a:	4b05      	ldr	r3, [pc, #20]	; (800f120 <xTaskGetSchedulerState+0x1c>)
 800f10c:	6818      	ldr	r0, [r3, #0]
 800f10e:	fab0 f080 	clz	r0, r0
 800f112:	0940      	lsrs	r0, r0, #5
 800f114:	0040      	lsls	r0, r0, #1
 800f116:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f118:	2001      	movs	r0, #1
	}
 800f11a:	4770      	bx	lr
 800f11c:	20013150 	.word	0x20013150
 800f120:	200130fc 	.word	0x200130fc

0800f124 <xTaskPriorityInherit>:
	{
 800f124:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f126:	4604      	mov	r4, r0
	{
 800f128:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f12a:	b1c8      	cbz	r0, 800f160 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f12c:	4d1d      	ldr	r5, [pc, #116]	; (800f1a4 <xTaskPriorityInherit+0x80>)
 800f12e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f130:	682a      	ldr	r2, [r5, #0]
 800f132:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f134:	4293      	cmp	r3, r2
 800f136:	d215      	bcs.n	800f164 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f138:	6982      	ldr	r2, [r0, #24]
 800f13a:	2a00      	cmp	r2, #0
 800f13c:	db04      	blt.n	800f148 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f13e:	682a      	ldr	r2, [r5, #0]
 800f140:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f142:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f146:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f148:	4e17      	ldr	r6, [pc, #92]	; (800f1a8 <xTaskPriorityInherit+0x84>)
 800f14a:	6962      	ldr	r2, [r4, #20]
 800f14c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f150:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f154:	429a      	cmp	r2, r3
 800f156:	d00e      	beq.n	800f176 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f158:	682b      	ldr	r3, [r5, #0]
 800f15a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f15c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f15e:	2001      	movs	r0, #1
	}
 800f160:	b002      	add	sp, #8
 800f162:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f164:	682b      	ldr	r3, [r5, #0]
 800f166:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f168:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f16a:	4298      	cmp	r0, r3
 800f16c:	bf2c      	ite	cs
 800f16e:	2000      	movcs	r0, #0
 800f170:	2001      	movcc	r0, #1
	}
 800f172:	b002      	add	sp, #8
 800f174:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f176:	1d21      	adds	r1, r4, #4
 800f178:	4608      	mov	r0, r1
 800f17a:	9101      	str	r1, [sp, #4]
 800f17c:	f7fe f828 	bl	800d1d0 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f180:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f182:	4b0a      	ldr	r3, [pc, #40]	; (800f1ac <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f184:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f186:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f188:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f18a:	4290      	cmp	r0, r2
 800f18c:	bf88      	it	hi
 800f18e:	6018      	strhi	r0, [r3, #0]
 800f190:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f194:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f198:	9901      	ldr	r1, [sp, #4]
 800f19a:	f7fd fff1 	bl	800d180 <vListInsertEnd>
				xReturn = pdTRUE;
 800f19e:	2001      	movs	r0, #1
 800f1a0:	e7de      	b.n	800f160 <xTaskPriorityInherit+0x3c>
 800f1a2:	bf00      	nop
 800f1a4:	20012c88 	.word	0x20012c88
 800f1a8:	20012c94 	.word	0x20012c94
 800f1ac:	20013104 	.word	0x20013104

0800f1b0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f1b0:	b318      	cbz	r0, 800f1fa <xTaskPriorityDisinherit+0x4a>
	{
 800f1b2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f1b4:	4b1e      	ldr	r3, [pc, #120]	; (800f230 <xTaskPriorityDisinherit+0x80>)
 800f1b6:	681c      	ldr	r4, [r3, #0]
 800f1b8:	4284      	cmp	r4, r0
	{
 800f1ba:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f1bc:	d008      	beq.n	800f1d0 <xTaskPriorityDisinherit+0x20>
 800f1be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1c2:	f383 8811 	msr	BASEPRI, r3
 800f1c6:	f3bf 8f6f 	isb	sy
 800f1ca:	f3bf 8f4f 	dsb	sy
 800f1ce:	e7fe      	b.n	800f1ce <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f1d0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f1d2:	b14b      	cbz	r3, 800f1e8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f1d4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f1d6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f1d8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f1da:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f1dc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f1de:	d000      	beq.n	800f1e2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f1e0:	b16b      	cbz	r3, 800f1fe <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f1e2:	2000      	movs	r0, #0
	}
 800f1e4:	b002      	add	sp, #8
 800f1e6:	bd10      	pop	{r4, pc}
 800f1e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1ec:	f383 8811 	msr	BASEPRI, r3
 800f1f0:	f3bf 8f6f 	isb	sy
 800f1f4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f1f8:	e7fe      	b.n	800f1f8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f1fa:	2000      	movs	r0, #0
	}
 800f1fc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f1fe:	1d21      	adds	r1, r4, #4
 800f200:	4608      	mov	r0, r1
 800f202:	9101      	str	r1, [sp, #4]
 800f204:	f7fd ffe4 	bl	800d1d0 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f208:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f20a:	4a0a      	ldr	r2, [pc, #40]	; (800f234 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f20c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f20e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f212:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f214:	6810      	ldr	r0, [r2, #0]
 800f216:	9901      	ldr	r1, [sp, #4]
 800f218:	4283      	cmp	r3, r0
 800f21a:	4807      	ldr	r0, [pc, #28]	; (800f238 <xTaskPriorityDisinherit+0x88>)
 800f21c:	bf88      	it	hi
 800f21e:	6013      	strhi	r3, [r2, #0]
 800f220:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f224:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f228:	f7fd ffaa 	bl	800d180 <vListInsertEnd>
					xReturn = pdTRUE;
 800f22c:	2001      	movs	r0, #1
		return xReturn;
 800f22e:	e7d9      	b.n	800f1e4 <xTaskPriorityDisinherit+0x34>
 800f230:	20012c88 	.word	0x20012c88
 800f234:	20013104 	.word	0x20013104
 800f238:	20012c94 	.word	0x20012c94

0800f23c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f23c:	2800      	cmp	r0, #0
 800f23e:	d041      	beq.n	800f2c4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f240:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f242:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f244:	b083      	sub	sp, #12
 800f246:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f248:	b153      	cbz	r3, 800f260 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f24a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f24c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f24e:	4281      	cmp	r1, r0
 800f250:	bf38      	it	cc
 800f252:	4601      	movcc	r1, r0
 800f254:	428a      	cmp	r2, r1
 800f256:	d001      	beq.n	800f25c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f258:	2b01      	cmp	r3, #1
 800f25a:	d00a      	beq.n	800f272 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f25c:	b003      	add	sp, #12
 800f25e:	bd30      	pop	{r4, r5, pc}
 800f260:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f264:	f383 8811 	msr	BASEPRI, r3
 800f268:	f3bf 8f6f 	isb	sy
 800f26c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f270:	e7fe      	b.n	800f270 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f272:	4b19      	ldr	r3, [pc, #100]	; (800f2d8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f274:	681b      	ldr	r3, [r3, #0]
 800f276:	42a3      	cmp	r3, r4
 800f278:	d025      	beq.n	800f2c6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f27a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f27c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f27e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f280:	bfa8      	it	ge
 800f282:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f286:	4d15      	ldr	r5, [pc, #84]	; (800f2dc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f288:	bfa8      	it	ge
 800f28a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f28c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f290:	6961      	ldr	r1, [r4, #20]
 800f292:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f296:	4299      	cmp	r1, r3
 800f298:	d1e0      	bne.n	800f25c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f29a:	1d21      	adds	r1, r4, #4
 800f29c:	4608      	mov	r0, r1
 800f29e:	9101      	str	r1, [sp, #4]
 800f2a0:	f7fd ff96 	bl	800d1d0 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f2a4:	4b0e      	ldr	r3, [pc, #56]	; (800f2e0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f2a6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f2a8:	681a      	ldr	r2, [r3, #0]
 800f2aa:	9901      	ldr	r1, [sp, #4]
 800f2ac:	4290      	cmp	r0, r2
 800f2ae:	bf88      	it	hi
 800f2b0:	6018      	strhi	r0, [r3, #0]
 800f2b2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f2b6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f2ba:	b003      	add	sp, #12
 800f2bc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f2c0:	f7fd bf5e 	b.w	800d180 <vListInsertEnd>
 800f2c4:	4770      	bx	lr
 800f2c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2ca:	f383 8811 	msr	BASEPRI, r3
 800f2ce:	f3bf 8f6f 	isb	sy
 800f2d2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f2d6:	e7fe      	b.n	800f2d6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f2d8:	20012c88 	.word	0x20012c88
 800f2dc:	20012c94 	.word	0x20012c94
 800f2e0:	20013104 	.word	0x20013104

0800f2e4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f2e4:	4b04      	ldr	r3, [pc, #16]	; (800f2f8 <pvTaskIncrementMutexHeldCount+0x14>)
 800f2e6:	681a      	ldr	r2, [r3, #0]
 800f2e8:	b11a      	cbz	r2, 800f2f2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f2ea:	6819      	ldr	r1, [r3, #0]
 800f2ec:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f2ee:	3201      	adds	r2, #1
 800f2f0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f2f2:	6818      	ldr	r0, [r3, #0]
	}
 800f2f4:	4770      	bx	lr
 800f2f6:	bf00      	nop
 800f2f8:	20012c88 	.word	0x20012c88

0800f2fc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f2fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f300:	4e22      	ldr	r6, [pc, #136]	; (800f38c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f302:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f394 <prvSwitchTimerLists+0x98>
{
 800f306:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f308:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f30c:	e00d      	b.n	800f32a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f30e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f310:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f312:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f314:	1d25      	adds	r5, r4, #4
 800f316:	4628      	mov	r0, r5
 800f318:	f7fd ff5a 	bl	800d1d0 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f31c:	6a23      	ldr	r3, [r4, #32]
 800f31e:	4620      	mov	r0, r4
 800f320:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f322:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f326:	075b      	lsls	r3, r3, #29
 800f328:	d40a      	bmi.n	800f340 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f32a:	6833      	ldr	r3, [r6, #0]
 800f32c:	681a      	ldr	r2, [r3, #0]
 800f32e:	2a00      	cmp	r2, #0
 800f330:	d1ed      	bne.n	800f30e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f332:	4a17      	ldr	r2, [pc, #92]	; (800f390 <prvSwitchTimerLists+0x94>)
 800f334:	6811      	ldr	r1, [r2, #0]
 800f336:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f338:	6013      	str	r3, [r2, #0]
}
 800f33a:	b005      	add	sp, #20
 800f33c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f340:	69a3      	ldr	r3, [r4, #24]
 800f342:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f344:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f346:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f348:	d205      	bcs.n	800f356 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f34a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f34c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f34e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f350:	f7fd ff26 	bl	800d1a0 <vListInsert>
 800f354:	e7e9      	b.n	800f32a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f356:	f8d9 3000 	ldr.w	r3, [r9]
 800f35a:	b16b      	cbz	r3, 800f378 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f35c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f360:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f362:	f7ff fecf 	bl	800f104 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f366:	2300      	movs	r3, #0
 800f368:	f8d9 0000 	ldr.w	r0, [r9]
 800f36c:	461a      	mov	r2, r3
 800f36e:	4669      	mov	r1, sp
 800f370:	f7fe fa9c 	bl	800d8ac <xQueueGenericSend>
				configASSERT( xResult );
 800f374:	2800      	cmp	r0, #0
 800f376:	d1d8      	bne.n	800f32a <prvSwitchTimerLists+0x2e>
 800f378:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f37c:	f383 8811 	msr	BASEPRI, r3
 800f380:	f3bf 8f6f 	isb	sy
 800f384:	f3bf 8f4f 	dsb	sy
 800f388:	e7fe      	b.n	800f388 <prvSwitchTimerLists+0x8c>
 800f38a:	bf00      	nop
 800f38c:	20013184 	.word	0x20013184
 800f390:	20013188 	.word	0x20013188
 800f394:	200132a8 	.word	0x200132a8

0800f398 <prvTimerTask>:
{
 800f398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f39c:	4e9b      	ldr	r6, [pc, #620]	; (800f60c <prvTimerTask+0x274>)
 800f39e:	4d9c      	ldr	r5, [pc, #624]	; (800f610 <prvTimerTask+0x278>)
 800f3a0:	4c9c      	ldr	r4, [pc, #624]	; (800f614 <prvTimerTask+0x27c>)
 800f3a2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f3a4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f3a8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f3ac:	6833      	ldr	r3, [r6, #0]
 800f3ae:	681f      	ldr	r7, [r3, #0]
 800f3b0:	2f00      	cmp	r7, #0
 800f3b2:	f000 80a8 	beq.w	800f506 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f3b6:	68db      	ldr	r3, [r3, #12]
 800f3b8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f3ba:	f7ff fcf9 	bl	800edb0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f3be:	f7ff fd0f 	bl	800ede0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f3c2:	682a      	ldr	r2, [r5, #0]
 800f3c4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f3c6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f3c8:	f0c0 80ae 	bcc.w	800f528 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f3cc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f3ce:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f3d0:	f240 80b4 	bls.w	800f53c <prvTimerTask+0x1a4>
 800f3d4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f3d6:	6820      	ldr	r0, [r4, #0]
 800f3d8:	eba7 010a 	sub.w	r1, r7, sl
 800f3dc:	f7ff f89a 	bl	800e514 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f3e0:	f7ff fcee 	bl	800edc0 <xTaskResumeAll>
 800f3e4:	b928      	cbnz	r0, 800f3f2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f3e6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f3ea:	f3bf 8f4f 	dsb	sy
 800f3ee:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f3f2:	6820      	ldr	r0, [r4, #0]
 800f3f4:	2200      	movs	r2, #0
 800f3f6:	a902      	add	r1, sp, #8
 800f3f8:	f7fe fc94 	bl	800dd24 <xQueueReceive>
 800f3fc:	2800      	cmp	r0, #0
 800f3fe:	d0d5      	beq.n	800f3ac <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f400:	9b02      	ldr	r3, [sp, #8]
 800f402:	2b00      	cmp	r3, #0
 800f404:	db76      	blt.n	800f4f4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f406:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f408:	697b      	ldr	r3, [r7, #20]
 800f40a:	b113      	cbz	r3, 800f412 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f40c:	1d38      	adds	r0, r7, #4
 800f40e:	f7fd fedf 	bl	800d1d0 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f412:	f7ff fce5 	bl	800ede0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f416:	682b      	ldr	r3, [r5, #0]
 800f418:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f41a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f41c:	f0c0 808b 	bcc.w	800f536 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f420:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f422:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f426:	2b09      	cmp	r3, #9
 800f428:	d8e3      	bhi.n	800f3f2 <prvTimerTask+0x5a>
 800f42a:	e8df f003 	tbb	[pc, r3]
 800f42e:	0505      	.short	0x0505
 800f430:	5a3d5305 	.word	0x5a3d5305
 800f434:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f438:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f43c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f43e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f440:	f043 0301 	orr.w	r3, r3, #1
 800f444:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f448:	9b03      	ldr	r3, [sp, #12]
 800f44a:	1899      	adds	r1, r3, r2
 800f44c:	bf2c      	ite	cs
 800f44e:	2001      	movcs	r0, #1
 800f450:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f452:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f454:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f456:	f200 808c 	bhi.w	800f572 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f45a:	ebaa 0303 	sub.w	r3, sl, r3
 800f45e:	429a      	cmp	r2, r3
 800f460:	d832      	bhi.n	800f4c8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f462:	6a3b      	ldr	r3, [r7, #32]
 800f464:	4638      	mov	r0, r7
 800f466:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f468:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f46c:	075b      	lsls	r3, r3, #29
 800f46e:	d5c0      	bpl.n	800f3f2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f470:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f472:	9903      	ldr	r1, [sp, #12]
 800f474:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f476:	b172      	cbz	r2, 800f496 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f478:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f47a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f47e:	2300      	movs	r3, #0
 800f480:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f482:	f7ff fe3f 	bl	800f104 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f486:	2300      	movs	r3, #0
 800f488:	6820      	ldr	r0, [r4, #0]
 800f48a:	461a      	mov	r2, r3
 800f48c:	a906      	add	r1, sp, #24
 800f48e:	f7fe fa0d 	bl	800d8ac <xQueueGenericSend>
							configASSERT( xResult );
 800f492:	2800      	cmp	r0, #0
 800f494:	d1ad      	bne.n	800f3f2 <prvTimerTask+0x5a>
 800f496:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f49a:	f383 8811 	msr	BASEPRI, r3
 800f49e:	f3bf 8f6f 	isb	sy
 800f4a2:	f3bf 8f4f 	dsb	sy
 800f4a6:	e7fe      	b.n	800f4a6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f4a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f4ac:	f043 0301 	orr.w	r3, r3, #1
 800f4b0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f4b4:	9b03      	ldr	r3, [sp, #12]
 800f4b6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f4b8:	2b00      	cmp	r3, #0
 800f4ba:	f000 809d 	beq.w	800f5f8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f4be:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f4c0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f4c2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f4c4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f4c6:	d85e      	bhi.n	800f586 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f4c8:	4b53      	ldr	r3, [pc, #332]	; (800f618 <prvTimerTask+0x280>)
 800f4ca:	1d39      	adds	r1, r7, #4
 800f4cc:	6818      	ldr	r0, [r3, #0]
 800f4ce:	f7fd fe67 	bl	800d1a0 <vListInsert>
	return xProcessTimerNow;
 800f4d2:	e78e      	b.n	800f3f2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f4d4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f4d8:	f023 0301 	bic.w	r3, r3, #1
 800f4dc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f4e0:	e787      	b.n	800f3f2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f4e2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f4e6:	079a      	lsls	r2, r3, #30
 800f4e8:	d552      	bpl.n	800f590 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f4ea:	f023 0301 	bic.w	r3, r3, #1
 800f4ee:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f4f2:	e77e      	b.n	800f3f2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f4f4:	9b03      	ldr	r3, [sp, #12]
 800f4f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f4fa:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f4fc:	9b02      	ldr	r3, [sp, #8]
 800f4fe:	2b00      	cmp	r3, #0
 800f500:	f6ff af77 	blt.w	800f3f2 <prvTimerTask+0x5a>
 800f504:	e77f      	b.n	800f406 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f506:	f7ff fc53 	bl	800edb0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f50a:	f7ff fc69 	bl	800ede0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f50e:	682a      	ldr	r2, [r5, #0]
 800f510:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f512:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f514:	d808      	bhi.n	800f528 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f516:	4b40      	ldr	r3, [pc, #256]	; (800f618 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f518:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f51c:	681a      	ldr	r2, [r3, #0]
 800f51e:	6812      	ldr	r2, [r2, #0]
 800f520:	fab2 f282 	clz	r2, r2
 800f524:	0952      	lsrs	r2, r2, #5
 800f526:	e756      	b.n	800f3d6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f528:	f7ff fee8 	bl	800f2fc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f52c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f530:	f7ff fc46 	bl	800edc0 <xTaskResumeAll>
 800f534:	e75d      	b.n	800f3f2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f536:	f7ff fee1 	bl	800f2fc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f53a:	e771      	b.n	800f420 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f53c:	f7ff fc40 	bl	800edc0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f540:	6832      	ldr	r2, [r6, #0]
 800f542:	68d2      	ldr	r2, [r2, #12]
 800f544:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f548:	f10b 0104 	add.w	r1, fp, #4
 800f54c:	4608      	mov	r0, r1
 800f54e:	9101      	str	r1, [sp, #4]
 800f550:	f7fd fe3e 	bl	800d1d0 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f554:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f558:	9901      	ldr	r1, [sp, #4]
 800f55a:	f010 0f04 	tst.w	r0, #4
 800f55e:	d11b      	bne.n	800f598 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f560:	f020 0001 	bic.w	r0, r0, #1
 800f564:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f568:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f56c:	4658      	mov	r0, fp
 800f56e:	4798      	blx	r3
}
 800f570:	e73f      	b.n	800f3f2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f572:	4553      	cmp	r3, sl
 800f574:	d902      	bls.n	800f57c <prvTimerTask+0x1e4>
 800f576:	2800      	cmp	r0, #0
 800f578:	f43f af73 	beq.w	800f462 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f57c:	6830      	ldr	r0, [r6, #0]
 800f57e:	1d39      	adds	r1, r7, #4
 800f580:	f7fd fe0e 	bl	800d1a0 <vListInsert>
	return xProcessTimerNow;
 800f584:	e735      	b.n	800f3f2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f586:	6830      	ldr	r0, [r6, #0]
 800f588:	1d39      	adds	r1, r7, #4
 800f58a:	f7fd fe09 	bl	800d1a0 <vListInsert>
 800f58e:	e730      	b.n	800f3f2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f590:	4638      	mov	r0, r7
 800f592:	f7fd fd81 	bl	800d098 <vPortFree>
 800f596:	e72c      	b.n	800f3f2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f598:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f59c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f5a0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f5a2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f5a4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f5a8:	d903      	bls.n	800f5b2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f5aa:	6830      	ldr	r0, [r6, #0]
 800f5ac:	f7fd fdf8 	bl	800d1a0 <vListInsert>
	return xProcessTimerNow;
 800f5b0:	e7da      	b.n	800f568 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5b2:	ebaa 0307 	sub.w	r3, sl, r7
 800f5b6:	429a      	cmp	r2, r3
 800f5b8:	d819      	bhi.n	800f5ee <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f5ba:	6823      	ldr	r3, [r4, #0]
 800f5bc:	b173      	cbz	r3, 800f5dc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f5be:	2300      	movs	r3, #0
 800f5c0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f5c2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f5c4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f5c8:	f7ff fd9c 	bl	800f104 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f5cc:	2300      	movs	r3, #0
 800f5ce:	6820      	ldr	r0, [r4, #0]
 800f5d0:	461a      	mov	r2, r3
 800f5d2:	a906      	add	r1, sp, #24
 800f5d4:	f7fe f96a 	bl	800d8ac <xQueueGenericSend>
			configASSERT( xResult );
 800f5d8:	2800      	cmp	r0, #0
 800f5da:	d1c5      	bne.n	800f568 <prvTimerTask+0x1d0>
 800f5dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5e0:	f383 8811 	msr	BASEPRI, r3
 800f5e4:	f3bf 8f6f 	isb	sy
 800f5e8:	f3bf 8f4f 	dsb	sy
 800f5ec:	e7fe      	b.n	800f5ec <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f5ee:	4b0a      	ldr	r3, [pc, #40]	; (800f618 <prvTimerTask+0x280>)
 800f5f0:	6818      	ldr	r0, [r3, #0]
 800f5f2:	f7fd fdd5 	bl	800d1a0 <vListInsert>
	return xProcessTimerNow;
 800f5f6:	e7b7      	b.n	800f568 <prvTimerTask+0x1d0>
 800f5f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5fc:	f383 8811 	msr	BASEPRI, r3
 800f600:	f3bf 8f6f 	isb	sy
 800f604:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f608:	e7fe      	b.n	800f608 <prvTimerTask+0x270>
 800f60a:	bf00      	nop
 800f60c:	20013184 	.word	0x20013184
 800f610:	20013254 	.word	0x20013254
 800f614:	200132a8 	.word	0x200132a8
 800f618:	20013188 	.word	0x20013188

0800f61c <xTimerCreateTimerTask>:
{
 800f61c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f61e:	4c23      	ldr	r4, [pc, #140]	; (800f6ac <xTimerCreateTimerTask+0x90>)
{
 800f620:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f622:	f7fd fe4f 	bl	800d2c4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f626:	6825      	ldr	r5, [r4, #0]
 800f628:	b335      	cbz	r5, 800f678 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f62a:	f7fd fe6d 	bl	800d308 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f62e:	6823      	ldr	r3, [r4, #0]
 800f630:	b1cb      	cbz	r3, 800f666 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f632:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f634:	aa07      	add	r2, sp, #28
 800f636:	a906      	add	r1, sp, #24
 800f638:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f63a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f63e:	f7fd fc5f 	bl	800cf00 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f642:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f646:	2302      	movs	r3, #2
 800f648:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f64c:	9300      	str	r3, [sp, #0]
 800f64e:	9a07      	ldr	r2, [sp, #28]
 800f650:	4917      	ldr	r1, [pc, #92]	; (800f6b0 <xTimerCreateTimerTask+0x94>)
 800f652:	4818      	ldr	r0, [pc, #96]	; (800f6b4 <xTimerCreateTimerTask+0x98>)
 800f654:	4623      	mov	r3, r4
 800f656:	f7ff fa6d 	bl	800eb34 <xTaskCreateStatic>
 800f65a:	4b17      	ldr	r3, [pc, #92]	; (800f6b8 <xTimerCreateTimerTask+0x9c>)
 800f65c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f65e:	b110      	cbz	r0, 800f666 <xTimerCreateTimerTask+0x4a>
}
 800f660:	2001      	movs	r0, #1
 800f662:	b009      	add	sp, #36	; 0x24
 800f664:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f666:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f66a:	f383 8811 	msr	BASEPRI, r3
 800f66e:	f3bf 8f6f 	isb	sy
 800f672:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f676:	e7fe      	b.n	800f676 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f678:	4f10      	ldr	r7, [pc, #64]	; (800f6bc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f67a:	4e11      	ldr	r6, [pc, #68]	; (800f6c0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f67c:	4638      	mov	r0, r7
 800f67e:	f7fd fd6f 	bl	800d160 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f682:	4630      	mov	r0, r6
 800f684:	f7fd fd6c 	bl	800d160 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f688:	4a0e      	ldr	r2, [pc, #56]	; (800f6c4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f68a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f68c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f68e:	4a0e      	ldr	r2, [pc, #56]	; (800f6c8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f690:	4b0e      	ldr	r3, [pc, #56]	; (800f6cc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f692:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f694:	2110      	movs	r1, #16
 800f696:	4a0e      	ldr	r2, [pc, #56]	; (800f6d0 <xTimerCreateTimerTask+0xb4>)
 800f698:	200a      	movs	r0, #10
 800f69a:	f7fd ffb1 	bl	800d600 <xQueueGenericCreateStatic>
 800f69e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f6a0:	2800      	cmp	r0, #0
 800f6a2:	d0c2      	beq.n	800f62a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f6a4:	490b      	ldr	r1, [pc, #44]	; (800f6d4 <xTimerCreateTimerTask+0xb8>)
 800f6a6:	f7fe ff0d 	bl	800e4c4 <vQueueAddToRegistry>
 800f6aa:	e7be      	b.n	800f62a <xTimerCreateTimerTask+0xe>
 800f6ac:	200132a8 	.word	0x200132a8
 800f6b0:	0802e504 	.word	0x0802e504
 800f6b4:	0800f399 	.word	0x0800f399
 800f6b8:	200132ac 	.word	0x200132ac
 800f6bc:	2001322c 	.word	0x2001322c
 800f6c0:	20013240 	.word	0x20013240
 800f6c4:	20013184 	.word	0x20013184
 800f6c8:	20013188 	.word	0x20013188
 800f6cc:	20013258 	.word	0x20013258
 800f6d0:	2001318c 	.word	0x2001318c
 800f6d4:	0802e4fc 	.word	0x0802e4fc

0800f6d8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f6d8:	8880      	ldrh	r0, [r0, #4]
 800f6da:	4770      	bx	lr

0800f6dc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f6dc:	b570      	push	{r4, r5, r6, lr}
 800f6de:	6803      	ldr	r3, [r0, #0]
 800f6e0:	4605      	mov	r5, r0
 800f6e2:	460c      	mov	r4, r1
 800f6e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f6e6:	2100      	movs	r1, #0
 800f6e8:	4798      	blx	r3
 800f6ea:	682b      	ldr	r3, [r5, #0]
 800f6ec:	4606      	mov	r6, r0
 800f6ee:	6a1b      	ldr	r3, [r3, #32]
 800f6f0:	4628      	mov	r0, r5
 800f6f2:	4798      	blx	r3
 800f6f4:	1ba4      	subs	r4, r4, r6
 800f6f6:	b2a4      	uxth	r4, r4
 800f6f8:	fbb4 f0f0 	udiv	r0, r4, r0
 800f6fc:	bd70      	pop	{r4, r5, r6, pc}

0800f6fe <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f6fe:	2300      	movs	r3, #0
 800f700:	8083      	strh	r3, [r0, #4]
 800f702:	4770      	bx	lr

0800f704 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f704:	b510      	push	{r4, lr}
 800f706:	6803      	ldr	r3, [r0, #0]
 800f708:	8881      	ldrh	r1, [r0, #4]
 800f70a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f70c:	4604      	mov	r4, r0
 800f70e:	4798      	blx	r3
 800f710:	88a3      	ldrh	r3, [r4, #4]
 800f712:	3301      	adds	r3, #1
 800f714:	80a3      	strh	r3, [r4, #4]
 800f716:	bd10      	pop	{r4, pc}

0800f718 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f718:	6803      	ldr	r3, [r0, #0]
 800f71a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f71c:	4718      	bx	r3

0800f71e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f71e:	4770      	bx	lr

0800f720 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f720:	4a02      	ldr	r2, [pc, #8]	; (800f72c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f722:	6002      	str	r2, [r0, #0]
 800f724:	2200      	movs	r2, #0
 800f726:	8082      	strh	r2, [r0, #4]
 800f728:	4770      	bx	lr
 800f72a:	bf00      	nop
 800f72c:	0802e514 	.word	0x0802e514

0800f730 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f730:	b510      	push	{r4, lr}
 800f732:	6803      	ldr	r3, [r0, #0]
 800f734:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f738:	4604      	mov	r4, r0
 800f73a:	4798      	blx	r3
 800f73c:	b110      	cbz	r0, 800f744 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f73e:	4620      	mov	r0, r4
 800f740:	f7f2 ff24 	bl	800258c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f744:	bd10      	pop	{r4, pc}

0800f746 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f746:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f74a:	4770      	bx	lr

0800f74c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f74c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f750:	4770      	bx	lr

0800f752 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f752:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f756:	4770      	bx	lr

0800f758 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f758:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f75c:	4770      	bx	lr

0800f75e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f75e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f760:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f764:	461e      	mov	r6, r3
 800f766:	6803      	ldr	r3, [r0, #0]
 800f768:	460f      	mov	r7, r1
 800f76a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f76e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f772:	4604      	mov	r4, r0
 800f774:	4615      	mov	r5, r2
 800f776:	4798      	blx	r3
 800f778:	b93e      	cbnz	r6, 800f78a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f77a:	1bed      	subs	r5, r5, r7
 800f77c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f780:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f784:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f788:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f78a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f78e:	e7f7      	b.n	800f780 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f790 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f790:	b510      	push	{r4, lr}
 800f792:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f796:	600c      	str	r4, [r1, #0]
 800f798:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f79c:	6011      	str	r1, [r2, #0]
 800f79e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f7a2:	801a      	strh	r2, [r3, #0]
 800f7a4:	9b02      	ldr	r3, [sp, #8]
 800f7a6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f7aa:	801a      	strh	r2, [r3, #0]
 800f7ac:	bd10      	pop	{r4, pc}

0800f7ae <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f7ae:	b510      	push	{r4, lr}
 800f7b0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f7b4:	600c      	str	r4, [r1, #0]
 800f7b6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f7ba:	6011      	str	r1, [r2, #0]
 800f7bc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f7c0:	801a      	strh	r2, [r3, #0]
 800f7c2:	bd10      	pop	{r4, pc}

0800f7c4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f7c4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f7c8:	600b      	str	r3, [r1, #0]
 800f7ca:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f7ce:	6013      	str	r3, [r2, #0]
 800f7d0:	4770      	bx	lr

0800f7d2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f7d2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f7d6:	4770      	bx	lr

0800f7d8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f7d8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f7dc:	4770      	bx	lr

0800f7de <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f7de:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f7e2:	4770      	bx	lr

0800f7e4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f7e4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f7e8:	4770      	bx	lr

0800f7ea <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f7ea:	4770      	bx	lr

0800f7ec <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f7ec:	b510      	push	{r4, lr}
 800f7ee:	21b4      	movs	r1, #180	; 0xb4
 800f7f0:	4604      	mov	r4, r0
 800f7f2:	f01a fb02 	bl	8029dfa <_ZdlPvj>
 800f7f6:	4620      	mov	r0, r4
 800f7f8:	bd10      	pop	{r4, pc}

0800f7fa <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f7fa:	b570      	push	{r4, r5, r6, lr}
 800f7fc:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f800:	428d      	cmp	r5, r1
 800f802:	bfb8      	it	lt
 800f804:	460d      	movlt	r5, r1
 800f806:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f80a:	428d      	cmp	r5, r1
 800f80c:	4604      	mov	r4, r0
 800f80e:	bfa8      	it	ge
 800f810:	460d      	movge	r5, r1
 800f812:	4616      	mov	r6, r2
 800f814:	b99a      	cbnz	r2, 800f83e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f816:	6803      	ldr	r3, [r0, #0]
 800f818:	4629      	mov	r1, r5
 800f81a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f81e:	4798      	blx	r3
 800f820:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f824:	b368      	cbz	r0, 800f882 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f826:	6803      	ldr	r3, [r0, #0]
 800f828:	68db      	ldr	r3, [r3, #12]
 800f82a:	4798      	blx	r3
 800f82c:	b348      	cbz	r0, 800f882 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f82e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f832:	6803      	ldr	r3, [r0, #0]
 800f834:	4621      	mov	r1, r4
 800f836:	689b      	ldr	r3, [r3, #8]
 800f838:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f83c:	4718      	bx	r3
 800f83e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f842:	2b00      	cmp	r3, #0
 800f844:	dd08      	ble.n	800f858 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f846:	f006 fa23 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 800f84a:	4621      	mov	r1, r4
 800f84c:	3004      	adds	r0, #4
 800f84e:	f006 fa6c 	bl	8015d2a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f852:	2300      	movs	r3, #0
 800f854:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f858:	6823      	ldr	r3, [r4, #0]
 800f85a:	4620      	mov	r0, r4
 800f85c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f860:	4798      	blx	r3
 800f862:	2300      	movs	r3, #0
 800f864:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f868:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f86c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f870:	f006 fa0e 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 800f874:	4621      	mov	r1, r4
 800f876:	3004      	adds	r0, #4
 800f878:	f006 fb00 	bl	8015e7c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f87c:	2301      	movs	r3, #1
 800f87e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f882:	bd70      	pop	{r4, r5, r6, pc}

0800f884 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f884:	b510      	push	{r4, lr}
 800f886:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f88a:	4299      	cmp	r1, r3
 800f88c:	bfb8      	it	lt
 800f88e:	4619      	movlt	r1, r3
 800f890:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f894:	4299      	cmp	r1, r3
 800f896:	bfa8      	it	ge
 800f898:	4619      	movge	r1, r3
 800f89a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f89e:	428b      	cmp	r3, r1
 800f8a0:	4604      	mov	r4, r0
 800f8a2:	d010      	beq.n	800f8c6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f8a4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f8a8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f8ac:	b158      	cbz	r0, 800f8c6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f8ae:	6803      	ldr	r3, [r0, #0]
 800f8b0:	68db      	ldr	r3, [r3, #12]
 800f8b2:	4798      	blx	r3
 800f8b4:	b138      	cbz	r0, 800f8c6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f8b6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f8ba:	6803      	ldr	r3, [r0, #0]
 800f8bc:	4621      	mov	r1, r4
 800f8be:	689b      	ldr	r3, [r3, #8]
 800f8c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f8c4:	4718      	bx	r3
 800f8c6:	bd10      	pop	{r4, pc}

0800f8c8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f8c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f8ca:	4604      	mov	r4, r0
 800f8cc:	460d      	mov	r5, r1
 800f8ce:	b1a9      	cbz	r1, 800f8fc <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f8d0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f8d4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f8d8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f8dc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f8e0:	ab01      	add	r3, sp, #4
 800f8e2:	1a12      	subs	r2, r2, r0
 800f8e4:	1b89      	subs	r1, r1, r6
 800f8e6:	1a38      	subs	r0, r7, r0
 800f8e8:	f007 fc88 	bl	80171fc <_ZN8touchgfx6muldivElllRl>
 800f8ec:	4629      	mov	r1, r5
 800f8ee:	ab01      	add	r3, sp, #4
 800f8f0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f8f4:	4430      	add	r0, r6
 800f8f6:	f007 fc81 	bl	80171fc <_ZN8touchgfx6muldivElllRl>
 800f8fa:	b285      	uxth	r5, r0
 800f8fc:	4628      	mov	r0, r5
 800f8fe:	b003      	add	sp, #12
 800f900:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f902 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f902:	b570      	push	{r4, r5, r6, lr}
 800f904:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f908:	4604      	mov	r4, r0
 800f90a:	2b00      	cmp	r3, #0
 800f90c:	d035      	beq.n	800f97a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f90e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f912:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f916:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f91a:	3001      	adds	r0, #1
 800f91c:	1ad2      	subs	r2, r2, r3
 800f91e:	b212      	sxth	r2, r2
 800f920:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f924:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f928:	2100      	movs	r1, #0
 800f92a:	b280      	uxth	r0, r0
 800f92c:	47a8      	blx	r5
 800f92e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f932:	6823      	ldr	r3, [r4, #0]
 800f934:	4401      	add	r1, r0
 800f936:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f93a:	4620      	mov	r0, r4
 800f93c:	4798      	blx	r3
 800f93e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f942:	429a      	cmp	r2, r3
 800f944:	db19      	blt.n	800f97a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f946:	2500      	movs	r5, #0
 800f948:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f94c:	f006 f9a0 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 800f950:	4621      	mov	r1, r4
 800f952:	3004      	adds	r0, #4
 800f954:	f006 f9e9 	bl	8015d2a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f958:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f95c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f960:	b158      	cbz	r0, 800f97a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f962:	6803      	ldr	r3, [r0, #0]
 800f964:	68db      	ldr	r3, [r3, #12]
 800f966:	4798      	blx	r3
 800f968:	b138      	cbz	r0, 800f97a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f96a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f96e:	6803      	ldr	r3, [r0, #0]
 800f970:	4621      	mov	r1, r4
 800f972:	689b      	ldr	r3, [r3, #8]
 800f974:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f978:	4718      	bx	r3
 800f97a:	bd70      	pop	{r4, r5, r6, pc}

0800f97c <_ZN8touchgfx8DrawableC1Ev>:
 800f97c:	4a0a      	ldr	r2, [pc, #40]	; (800f9a8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800f97e:	6002      	str	r2, [r0, #0]
 800f980:	2200      	movs	r2, #0
 800f982:	8082      	strh	r2, [r0, #4]
 800f984:	80c2      	strh	r2, [r0, #6]
 800f986:	8102      	strh	r2, [r0, #8]
 800f988:	8142      	strh	r2, [r0, #10]
 800f98a:	8182      	strh	r2, [r0, #12]
 800f98c:	81c2      	strh	r2, [r0, #14]
 800f98e:	8202      	strh	r2, [r0, #16]
 800f990:	8242      	strh	r2, [r0, #18]
 800f992:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f996:	61c2      	str	r2, [r0, #28]
 800f998:	8402      	strh	r2, [r0, #32]
 800f99a:	8442      	strh	r2, [r0, #34]	; 0x22
 800f99c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f9a0:	2201      	movs	r2, #1
 800f9a2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f9a6:	4770      	bx	lr
 800f9a8:	0802ee94 	.word	0x0802ee94

0800f9ac <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f9ac:	b570      	push	{r4, r5, r6, lr}
 800f9ae:	6803      	ldr	r3, [r0, #0]
 800f9b0:	4604      	mov	r4, r0
 800f9b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f9b4:	4615      	mov	r5, r2
 800f9b6:	4798      	blx	r3
 800f9b8:	6823      	ldr	r3, [r4, #0]
 800f9ba:	4629      	mov	r1, r5
 800f9bc:	4620      	mov	r0, r4
 800f9be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f9c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f9c4:	4718      	bx	r3

0800f9c6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f9c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f9ca:	4604      	mov	r4, r0
 800f9cc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f9d0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f9d4:	460e      	mov	r6, r1
 800f9d6:	4615      	mov	r5, r2
 800f9d8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f9dc:	4619      	mov	r1, r3
 800f9de:	463a      	mov	r2, r7
 800f9e0:	3058      	adds	r0, #88	; 0x58
 800f9e2:	4698      	mov	r8, r3
 800f9e4:	f7ff ffe2 	bl	800f9ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f9e8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f9ec:	4446      	add	r6, r8
 800f9ee:	42b3      	cmp	r3, r6
 800f9f0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f9f4:	bfb8      	it	lt
 800f9f6:	8126      	strhlt	r6, [r4, #8]
 800f9f8:	443d      	add	r5, r7
 800f9fa:	42ab      	cmp	r3, r5
 800f9fc:	bfb8      	it	lt
 800f9fe:	8165      	strhlt	r5, [r4, #10]
 800fa00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fa04 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800fa04:	b510      	push	{r4, lr}
 800fa06:	4604      	mov	r4, r0
 800fa08:	302c      	adds	r0, #44	; 0x2c
 800fa0a:	f003 fc42 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fa0e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800fa12:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fa16:	4620      	mov	r0, r4
 800fa18:	f7ff ffc8 	bl	800f9ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fa1c:	bd10      	pop	{r4, pc}
	...

0800fa20 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800fa20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fa22:	4604      	mov	r4, r0
 800fa24:	4626      	mov	r6, r4
 800fa26:	2500      	movs	r5, #0
 800fa28:	f7ff ffa8 	bl	800f97c <_ZN8touchgfx8DrawableC1Ev>
 800fa2c:	4b23      	ldr	r3, [pc, #140]	; (800fabc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800fa2e:	62a5      	str	r5, [r4, #40]	; 0x28
 800fa30:	f846 3b2c 	str.w	r3, [r6], #44
 800fa34:	2226      	movs	r2, #38	; 0x26
 800fa36:	4629      	mov	r1, r5
 800fa38:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fa3c:	4630      	mov	r0, r6
 800fa3e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fa42:	f01b f9f2 	bl	802ae2a <memset>
 800fa46:	4630      	mov	r0, r6
 800fa48:	f7ff ff98 	bl	800f97c <_ZN8touchgfx8DrawableC1Ev>
 800fa4c:	a902      	add	r1, sp, #8
 800fa4e:	4b1c      	ldr	r3, [pc, #112]	; (800fac0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800fa50:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fa52:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800fa56:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fa5a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800fa5e:	4630      	mov	r0, r6
 800fa60:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800fa64:	f003 fc15 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fa68:	4638      	mov	r0, r7
 800fa6a:	f7ff ff87 	bl	800f97c <_ZN8touchgfx8DrawableC1Ev>
 800fa6e:	4b15      	ldr	r3, [pc, #84]	; (800fac4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800fa70:	65a3      	str	r3, [r4, #88]	; 0x58
 800fa72:	2364      	movs	r3, #100	; 0x64
 800fa74:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800fa78:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800fa7c:	4b12      	ldr	r3, [pc, #72]	; (800fac8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800fa7e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800fa82:	4629      	mov	r1, r5
 800fa84:	4630      	mov	r0, r6
 800fa86:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800fa8a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fa8e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800fa92:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fa96:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800fa9a:	f7f2 fcd3 	bl	8002444 <_ZN8touchgfx8Drawable4setXEs>
 800fa9e:	4629      	mov	r1, r5
 800faa0:	4630      	mov	r0, r6
 800faa2:	f7f2 fcd1 	bl	8002448 <_ZN8touchgfx8Drawable4setYEs>
 800faa6:	4631      	mov	r1, r6
 800faa8:	4620      	mov	r0, r4
 800faaa:	f000 f819 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800faae:	4620      	mov	r0, r4
 800fab0:	4639      	mov	r1, r7
 800fab2:	f000 f815 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fab6:	4620      	mov	r0, r4
 800fab8:	b003      	add	sp, #12
 800faba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fabc:	0802e548 	.word	0x0802e548
 800fac0:	0802ed50 	.word	0x0802ed50
 800fac4:	0802e61c 	.word	0x0802e61c
 800fac8:	080179d7 	.word	0x080179d7

0800facc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800facc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800face:	2000      	movs	r0, #0
 800fad0:	b12b      	cbz	r3, 800fade <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fad2:	b920      	cbnz	r0, 800fade <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fad4:	1a5a      	subs	r2, r3, r1
 800fad6:	4250      	negs	r0, r2
 800fad8:	4150      	adcs	r0, r2
 800fada:	699b      	ldr	r3, [r3, #24]
 800fadc:	e7f8      	b.n	800fad0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800fade:	4770      	bx	lr

0800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800fae0:	2300      	movs	r3, #0
 800fae2:	6148      	str	r0, [r1, #20]
 800fae4:	618b      	str	r3, [r1, #24]
 800fae6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fae8:	b913      	cbnz	r3, 800faf0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800faea:	6281      	str	r1, [r0, #40]	; 0x28
 800faec:	4770      	bx	lr
 800faee:	4613      	mov	r3, r2
 800faf0:	699a      	ldr	r2, [r3, #24]
 800faf2:	2a00      	cmp	r2, #0
 800faf4:	d1fb      	bne.n	800faee <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800faf6:	6199      	str	r1, [r3, #24]
 800faf8:	4770      	bx	lr

0800fafa <_ZN8touchgfx9Container9removeAllEv>:
 800fafa:	2200      	movs	r2, #0
 800fafc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fafe:	b123      	cbz	r3, 800fb0a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800fb00:	6999      	ldr	r1, [r3, #24]
 800fb02:	6281      	str	r1, [r0, #40]	; 0x28
 800fb04:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800fb08:	e7f8      	b.n	800fafc <_ZN8touchgfx9Container9removeAllEv+0x2>
 800fb0a:	4770      	bx	lr

0800fb0c <_ZN8touchgfx9Container6unlinkEv>:
 800fb0c:	2300      	movs	r3, #0
 800fb0e:	6283      	str	r3, [r0, #40]	; 0x28
 800fb10:	4770      	bx	lr

0800fb12 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800fb12:	2200      	movs	r2, #0
 800fb14:	8002      	strh	r2, [r0, #0]
 800fb16:	8042      	strh	r2, [r0, #2]
 800fb18:	8082      	strh	r2, [r0, #4]
 800fb1a:	80c2      	strh	r2, [r0, #6]
 800fb1c:	4770      	bx	lr

0800fb1e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800fb1e:	b570      	push	{r4, r5, r6, lr}
 800fb20:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fb22:	460d      	mov	r5, r1
 800fb24:	4616      	mov	r6, r2
 800fb26:	b13c      	cbz	r4, 800fb38 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800fb28:	6823      	ldr	r3, [r4, #0]
 800fb2a:	4620      	mov	r0, r4
 800fb2c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fb2e:	4632      	mov	r2, r6
 800fb30:	4629      	mov	r1, r5
 800fb32:	4798      	blx	r3
 800fb34:	69a4      	ldr	r4, [r4, #24]
 800fb36:	e7f6      	b.n	800fb26 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800fb38:	bd70      	pop	{r4, r5, r6, pc}

0800fb3a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800fb3a:	b538      	push	{r3, r4, r5, lr}
 800fb3c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fb3e:	460d      	mov	r5, r1
 800fb40:	b134      	cbz	r4, 800fb50 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800fb42:	682b      	ldr	r3, [r5, #0]
 800fb44:	4621      	mov	r1, r4
 800fb46:	689b      	ldr	r3, [r3, #8]
 800fb48:	4628      	mov	r0, r5
 800fb4a:	4798      	blx	r3
 800fb4c:	69a4      	ldr	r4, [r4, #24]
 800fb4e:	e7f7      	b.n	800fb40 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800fb50:	bd38      	pop	{r3, r4, r5, pc}

0800fb52 <_ZN8touchgfx9ContainerD1Ev>:
 800fb52:	4770      	bx	lr

0800fb54 <_ZN8touchgfx9ContainerD0Ev>:
 800fb54:	b510      	push	{r4, lr}
 800fb56:	212c      	movs	r1, #44	; 0x2c
 800fb58:	4604      	mov	r4, r0
 800fb5a:	f01a f94e 	bl	8029dfa <_ZdlPvj>
 800fb5e:	4620      	mov	r0, r4
 800fb60:	bd10      	pop	{r4, pc}

0800fb62 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800fb62:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fb64:	b19b      	cbz	r3, 800fb8e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fb66:	428b      	cmp	r3, r1
 800fb68:	d109      	bne.n	800fb7e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800fb6a:	699a      	ldr	r2, [r3, #24]
 800fb6c:	2100      	movs	r1, #0
 800fb6e:	6159      	str	r1, [r3, #20]
 800fb70:	6282      	str	r2, [r0, #40]	; 0x28
 800fb72:	b902      	cbnz	r2, 800fb76 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800fb74:	4770      	bx	lr
 800fb76:	6199      	str	r1, [r3, #24]
 800fb78:	4770      	bx	lr
 800fb7a:	4613      	mov	r3, r2
 800fb7c:	b13a      	cbz	r2, 800fb8e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fb7e:	699a      	ldr	r2, [r3, #24]
 800fb80:	428a      	cmp	r2, r1
 800fb82:	d1fa      	bne.n	800fb7a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800fb84:	698a      	ldr	r2, [r1, #24]
 800fb86:	619a      	str	r2, [r3, #24]
 800fb88:	2300      	movs	r3, #0
 800fb8a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800fb8e:	4770      	bx	lr

0800fb90 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800fb90:	b410      	push	{r4}
 800fb92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fb94:	4604      	mov	r4, r0
 800fb96:	b92b      	cbnz	r3, 800fba4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800fb98:	6803      	ldr	r3, [r0, #0]
 800fb9a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fb9e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800fba0:	4611      	mov	r1, r2
 800fba2:	4718      	bx	r3
 800fba4:	b941      	cbnz	r1, 800fbb8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800fba6:	6193      	str	r3, [r2, #24]
 800fba8:	6282      	str	r2, [r0, #40]	; 0x28
 800fbaa:	6154      	str	r4, [r2, #20]
 800fbac:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fbb0:	4770      	bx	lr
 800fbb2:	4603      	mov	r3, r0
 800fbb4:	2800      	cmp	r0, #0
 800fbb6:	d0f9      	beq.n	800fbac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800fbb8:	4299      	cmp	r1, r3
 800fbba:	6998      	ldr	r0, [r3, #24]
 800fbbc:	d1f9      	bne.n	800fbb2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800fbbe:	6190      	str	r0, [r2, #24]
 800fbc0:	618a      	str	r2, [r1, #24]
 800fbc2:	e7f2      	b.n	800fbaa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800fbc4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800fbc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fbc8:	461f      	mov	r7, r3
 800fbca:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800fbce:	460d      	mov	r5, r1
 800fbd0:	4616      	mov	r6, r2
 800fbd2:	b103      	cbz	r3, 800fbd6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800fbd4:	6038      	str	r0, [r7, #0]
 800fbd6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fbd8:	b314      	cbz	r4, 800fc20 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800fbda:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fbde:	b1eb      	cbz	r3, 800fc1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fbe0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800fbe4:	428d      	cmp	r5, r1
 800fbe6:	db19      	blt.n	800fc1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fbe8:	8923      	ldrh	r3, [r4, #8]
 800fbea:	b289      	uxth	r1, r1
 800fbec:	440b      	add	r3, r1
 800fbee:	b21b      	sxth	r3, r3
 800fbf0:	429d      	cmp	r5, r3
 800fbf2:	da13      	bge.n	800fc1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fbf4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fbf8:	4296      	cmp	r6, r2
 800fbfa:	db0f      	blt.n	800fc1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fbfc:	8963      	ldrh	r3, [r4, #10]
 800fbfe:	b292      	uxth	r2, r2
 800fc00:	4413      	add	r3, r2
 800fc02:	b21b      	sxth	r3, r3
 800fc04:	429e      	cmp	r6, r3
 800fc06:	da09      	bge.n	800fc1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fc08:	6823      	ldr	r3, [r4, #0]
 800fc0a:	1ab2      	subs	r2, r6, r2
 800fc0c:	1a69      	subs	r1, r5, r1
 800fc0e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800fc12:	b212      	sxth	r2, r2
 800fc14:	463b      	mov	r3, r7
 800fc16:	b209      	sxth	r1, r1
 800fc18:	4620      	mov	r0, r4
 800fc1a:	47c0      	blx	r8
 800fc1c:	69a4      	ldr	r4, [r4, #24]
 800fc1e:	e7db      	b.n	800fbd8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800fc20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fc24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800fc24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc28:	4c6e      	ldr	r4, [pc, #440]	; (800fde4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800fc2a:	b0a1      	sub	sp, #132	; 0x84
 800fc2c:	6824      	ldr	r4, [r4, #0]
 800fc2e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800fc30:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800fc34:	9303      	str	r3, [sp, #12]
 800fc36:	2400      	movs	r4, #0
 800fc38:	802c      	strh	r4, [r5, #0]
 800fc3a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800fc3c:	802c      	strh	r4, [r5, #0]
 800fc3e:	601c      	str	r4, [r3, #0]
 800fc40:	4606      	mov	r6, r0
 800fc42:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800fc46:	f7ff ffbd 	bl	800fbc4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fc4a:	f1b9 0f03 	cmp.w	r9, #3
 800fc4e:	f340 80c2 	ble.w	800fdd6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800fc52:	4631      	mov	r1, r6
 800fc54:	a80c      	add	r0, sp, #48	; 0x30
 800fc56:	f007 f99f 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc5a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800fc5e:	9306      	str	r3, [sp, #24]
 800fc60:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fc64:	9307      	str	r3, [sp, #28]
 800fc66:	9b03      	ldr	r3, [sp, #12]
 800fc68:	f8d3 a000 	ldr.w	sl, [r3]
 800fc6c:	f1ba 0f00 	cmp.w	sl, #0
 800fc70:	f000 80b4 	beq.w	800fddc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800fc74:	4651      	mov	r1, sl
 800fc76:	a810      	add	r0, sp, #64	; 0x40
 800fc78:	f007 f98e 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc7c:	9b01      	ldr	r3, [sp, #4]
 800fc7e:	9a06      	ldr	r2, [sp, #24]
 800fc80:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800fc84:	189d      	adds	r5, r3, r2
 800fc86:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800fc8a:	9a07      	ldr	r2, [sp, #28]
 800fc8c:	2002      	movs	r0, #2
 800fc8e:	fb91 f1f0 	sdiv	r1, r1, r0
 800fc92:	4419      	add	r1, r3
 800fc94:	1a6d      	subs	r5, r5, r1
 800fc96:	9b02      	ldr	r3, [sp, #8]
 800fc98:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800fc9c:	4413      	add	r3, r2
 800fc9e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800fca2:	fb92 f2f0 	sdiv	r2, r2, r0
 800fca6:	440a      	add	r2, r1
 800fca8:	1a9b      	subs	r3, r3, r2
 800fcaa:	435b      	muls	r3, r3
 800fcac:	fb05 3505 	mla	r5, r5, r5, r3
 800fcb0:	4f4d      	ldr	r7, [pc, #308]	; (800fde8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800fcb2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fcb4:	ac10      	add	r4, sp, #64	; 0x40
 800fcb6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fcb8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fcba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fcbc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fcbe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fcc0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800fcc4:	f1b9 0f0c 	cmp.w	r9, #12
 800fcc8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800fccc:	f04f 0303 	mov.w	r3, #3
 800fcd0:	bfc8      	it	gt
 800fcd2:	4698      	movgt	r8, r3
 800fcd4:	f8cd 9000 	str.w	r9, [sp]
 800fcd8:	f04f 0400 	mov.w	r4, #0
 800fcdc:	bfdc      	itt	le
 800fcde:	f109 32ff 	addle.w	r2, r9, #4294967295
 800fce2:	fb92 f8f3 	sdivle	r8, r2, r3
 800fce6:	1c63      	adds	r3, r4, #1
 800fce8:	aa10      	add	r2, sp, #64	; 0x40
 800fcea:	f004 0401 	and.w	r4, r4, #1
 800fcee:	9308      	str	r3, [sp, #32]
 800fcf0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800fcf4:	9b00      	ldr	r3, [sp, #0]
 800fcf6:	fb93 f3f8 	sdiv	r3, r3, r8
 800fcfa:	b29b      	uxth	r3, r3
 800fcfc:	3404      	adds	r4, #4
 800fcfe:	f04f 0b00 	mov.w	fp, #0
 800fd02:	9304      	str	r3, [sp, #16]
 800fd04:	9a04      	ldr	r2, [sp, #16]
 800fd06:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800fd0a:	fb13 f302 	smulbb	r3, r3, r2
 800fd0e:	9a01      	ldr	r2, [sp, #4]
 800fd10:	b29b      	uxth	r3, r3
 800fd12:	1899      	adds	r1, r3, r2
 800fd14:	9305      	str	r3, [sp, #20]
 800fd16:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fd1a:	b209      	sxth	r1, r1
 800fd1c:	4299      	cmp	r1, r3
 800fd1e:	db4d      	blt.n	800fdbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fd20:	8932      	ldrh	r2, [r6, #8]
 800fd22:	4413      	add	r3, r2
 800fd24:	b21b      	sxth	r3, r3
 800fd26:	4299      	cmp	r1, r3
 800fd28:	da48      	bge.n	800fdbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fd2a:	9b04      	ldr	r3, [sp, #16]
 800fd2c:	6827      	ldr	r7, [r4, #0]
 800fd2e:	fb17 f703 	smulbb	r7, r7, r3
 800fd32:	9b02      	ldr	r3, [sp, #8]
 800fd34:	b2bf      	uxth	r7, r7
 800fd36:	18fa      	adds	r2, r7, r3
 800fd38:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fd3c:	b212      	sxth	r2, r2
 800fd3e:	429a      	cmp	r2, r3
 800fd40:	db3c      	blt.n	800fdbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fd42:	8970      	ldrh	r0, [r6, #10]
 800fd44:	4403      	add	r3, r0
 800fd46:	b21b      	sxth	r3, r3
 800fd48:	429a      	cmp	r2, r3
 800fd4a:	da37      	bge.n	800fdbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fd4c:	2300      	movs	r3, #0
 800fd4e:	930b      	str	r3, [sp, #44]	; 0x2c
 800fd50:	4630      	mov	r0, r6
 800fd52:	ab0b      	add	r3, sp, #44	; 0x2c
 800fd54:	f7ff ff36 	bl	800fbc4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fd58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fd5a:	b37a      	cbz	r2, 800fdbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fd5c:	4552      	cmp	r2, sl
 800fd5e:	d02d      	beq.n	800fdbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fd60:	4611      	mov	r1, r2
 800fd62:	a80e      	add	r0, sp, #56	; 0x38
 800fd64:	9209      	str	r2, [sp, #36]	; 0x24
 800fd66:	f007 f917 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fd6a:	9a06      	ldr	r2, [sp, #24]
 800fd6c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800fd70:	9b01      	ldr	r3, [sp, #4]
 800fd72:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800fd76:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800fd7a:	4413      	add	r3, r2
 800fd7c:	f04f 0e02 	mov.w	lr, #2
 800fd80:	fb91 f1fe 	sdiv	r1, r1, lr
 800fd84:	4401      	add	r1, r0
 800fd86:	1a58      	subs	r0, r3, r1
 800fd88:	9a07      	ldr	r2, [sp, #28]
 800fd8a:	9b02      	ldr	r3, [sp, #8]
 800fd8c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800fd90:	fb9c fcfe 	sdiv	ip, ip, lr
 800fd94:	4413      	add	r3, r2
 800fd96:	448c      	add	ip, r1
 800fd98:	eba3 030c 	sub.w	r3, r3, ip
 800fd9c:	435b      	muls	r3, r3
 800fd9e:	fb00 3300 	mla	r3, r0, r0, r3
 800fda2:	42ab      	cmp	r3, r5
 800fda4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fda6:	d208      	bcs.n	800fdba <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800fda8:	9803      	ldr	r0, [sp, #12]
 800fdaa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fdac:	6001      	str	r1, [r0, #0]
 800fdae:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800fdb0:	9805      	ldr	r0, [sp, #20]
 800fdb2:	8008      	strh	r0, [r1, #0]
 800fdb4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fdb6:	461d      	mov	r5, r3
 800fdb8:	800f      	strh	r7, [r1, #0]
 800fdba:	4692      	mov	sl, r2
 800fdbc:	f10b 0b01 	add.w	fp, fp, #1
 800fdc0:	f1bb 0f04 	cmp.w	fp, #4
 800fdc4:	f104 0408 	add.w	r4, r4, #8
 800fdc8:	d19c      	bne.n	800fd04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800fdca:	9b00      	ldr	r3, [sp, #0]
 800fdcc:	9c08      	ldr	r4, [sp, #32]
 800fdce:	444b      	add	r3, r9
 800fdd0:	4544      	cmp	r4, r8
 800fdd2:	9300      	str	r3, [sp, #0]
 800fdd4:	d187      	bne.n	800fce6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800fdd6:	b021      	add	sp, #132	; 0x84
 800fdd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fddc:	f04f 35ff 	mov.w	r5, #4294967295
 800fde0:	e766      	b.n	800fcb0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800fde2:	bf00      	nop
 800fde4:	200132bc 	.word	0x200132bc
 800fde8:	0802bb38 	.word	0x0802bb38

0800fdec <_ZN8touchgfx4RectaNERKS0_>:
 800fdec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fdf0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800fdf4:	888c      	ldrh	r4, [r1, #4]
 800fdf6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fdfa:	443c      	add	r4, r7
 800fdfc:	b2a4      	uxth	r4, r4
 800fdfe:	fa0f f884 	sxth.w	r8, r4
 800fe02:	45c1      	cmp	r9, r8
 800fe04:	da2f      	bge.n	800fe66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fe06:	8882      	ldrh	r2, [r0, #4]
 800fe08:	444a      	add	r2, r9
 800fe0a:	b292      	uxth	r2, r2
 800fe0c:	fa0f fe82 	sxth.w	lr, r2
 800fe10:	4577      	cmp	r7, lr
 800fe12:	da28      	bge.n	800fe66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fe14:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800fe18:	88cb      	ldrh	r3, [r1, #6]
 800fe1a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800fe1e:	442b      	add	r3, r5
 800fe20:	b21b      	sxth	r3, r3
 800fe22:	429e      	cmp	r6, r3
 800fe24:	da1f      	bge.n	800fe66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fe26:	88c3      	ldrh	r3, [r0, #6]
 800fe28:	4433      	add	r3, r6
 800fe2a:	b29b      	uxth	r3, r3
 800fe2c:	fa0f fc83 	sxth.w	ip, r3
 800fe30:	4565      	cmp	r5, ip
 800fe32:	da18      	bge.n	800fe66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fe34:	454f      	cmp	r7, r9
 800fe36:	bfb8      	it	lt
 800fe38:	464f      	movlt	r7, r9
 800fe3a:	42b5      	cmp	r5, r6
 800fe3c:	bfb8      	it	lt
 800fe3e:	4635      	movlt	r5, r6
 800fe40:	45f0      	cmp	r8, lr
 800fe42:	bfd8      	it	le
 800fe44:	4622      	movle	r2, r4
 800fe46:	1bd2      	subs	r2, r2, r7
 800fe48:	8082      	strh	r2, [r0, #4]
 800fe4a:	884a      	ldrh	r2, [r1, #2]
 800fe4c:	88c9      	ldrh	r1, [r1, #6]
 800fe4e:	8007      	strh	r7, [r0, #0]
 800fe50:	440a      	add	r2, r1
 800fe52:	b292      	uxth	r2, r2
 800fe54:	b211      	sxth	r1, r2
 800fe56:	458c      	cmp	ip, r1
 800fe58:	bfa8      	it	ge
 800fe5a:	4613      	movge	r3, r2
 800fe5c:	1b5b      	subs	r3, r3, r5
 800fe5e:	80c3      	strh	r3, [r0, #6]
 800fe60:	8045      	strh	r5, [r0, #2]
 800fe62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fe66:	2300      	movs	r3, #0
 800fe68:	8003      	strh	r3, [r0, #0]
 800fe6a:	8043      	strh	r3, [r0, #2]
 800fe6c:	8083      	strh	r3, [r0, #4]
 800fe6e:	80c3      	strh	r3, [r0, #6]
 800fe70:	e7f7      	b.n	800fe62 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800fe72:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fe76:	2b00      	cmp	r3, #0
 800fe78:	dd06      	ble.n	800fe88 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800fe7a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800fe7e:	2800      	cmp	r0, #0
 800fe80:	bfcc      	ite	gt
 800fe82:	2000      	movgt	r0, #0
 800fe84:	2001      	movle	r0, #1
 800fe86:	4770      	bx	lr
 800fe88:	2001      	movs	r0, #1
 800fe8a:	4770      	bx	lr

0800fe8c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800fe8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe90:	2300      	movs	r3, #0
 800fe92:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fe94:	8003      	strh	r3, [r0, #0]
 800fe96:	4604      	mov	r4, r0
 800fe98:	8043      	strh	r3, [r0, #2]
 800fe9a:	8083      	strh	r3, [r0, #4]
 800fe9c:	80c3      	strh	r3, [r0, #6]
 800fe9e:	2d00      	cmp	r5, #0
 800fea0:	d040      	beq.n	800ff24 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800fea2:	1d28      	adds	r0, r5, #4
 800fea4:	f7ff ffe5 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fea8:	b988      	cbnz	r0, 800fece <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800feaa:	4620      	mov	r0, r4
 800feac:	f7ff ffe1 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800feb0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800feb4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800feb8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800febc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800fec0:	b138      	cbz	r0, 800fed2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800fec2:	8022      	strh	r2, [r4, #0]
 800fec4:	8063      	strh	r3, [r4, #2]
 800fec6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800feca:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fece:	69ad      	ldr	r5, [r5, #24]
 800fed0:	e7e5      	b.n	800fe9e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800fed2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fed6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800feda:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800fede:	4290      	cmp	r0, r2
 800fee0:	4607      	mov	r7, r0
 800fee2:	bfa8      	it	ge
 800fee4:	4617      	movge	r7, r2
 800fee6:	4472      	add	r2, lr
 800fee8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800feec:	8027      	strh	r7, [r4, #0]
 800feee:	4299      	cmp	r1, r3
 800fef0:	460e      	mov	r6, r1
 800fef2:	4440      	add	r0, r8
 800fef4:	bfa8      	it	ge
 800fef6:	461e      	movge	r6, r3
 800fef8:	4471      	add	r1, lr
 800fefa:	4463      	add	r3, ip
 800fefc:	b200      	sxth	r0, r0
 800fefe:	b212      	sxth	r2, r2
 800ff00:	b209      	sxth	r1, r1
 800ff02:	b21b      	sxth	r3, r3
 800ff04:	4290      	cmp	r0, r2
 800ff06:	bfac      	ite	ge
 800ff08:	ebc7 0200 	rsbge	r2, r7, r0
 800ff0c:	ebc7 0202 	rsblt	r2, r7, r2
 800ff10:	4299      	cmp	r1, r3
 800ff12:	bfac      	ite	ge
 800ff14:	ebc6 0301 	rsbge	r3, r6, r1
 800ff18:	ebc6 0303 	rsblt	r3, r6, r3
 800ff1c:	8066      	strh	r6, [r4, #2]
 800ff1e:	80a2      	strh	r2, [r4, #4]
 800ff20:	80e3      	strh	r3, [r4, #6]
 800ff22:	e7d4      	b.n	800fece <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ff24:	4620      	mov	r0, r4
 800ff26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ff2a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ff2a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ff2e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ff32:	b383      	cbz	r3, 800ff96 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ff34:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ff36:	b374      	cbz	r4, 800ff96 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ff38:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ff3c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ff40:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ff44:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ff48:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ff4c:	b303      	cbz	r3, 800ff90 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ff4e:	4668      	mov	r0, sp
 800ff50:	1d21      	adds	r1, r4, #4
 800ff52:	f8ad 5000 	strh.w	r5, [sp]
 800ff56:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ff5a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ff5e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ff62:	f7ff ff43 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 800ff66:	4668      	mov	r0, sp
 800ff68:	f7ff ff83 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff6c:	b980      	cbnz	r0, 800ff90 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ff6e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ff72:	88a2      	ldrh	r2, [r4, #4]
 800ff74:	1a9b      	subs	r3, r3, r2
 800ff76:	f8ad 3000 	strh.w	r3, [sp]
 800ff7a:	88e2      	ldrh	r2, [r4, #6]
 800ff7c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ff80:	1a9b      	subs	r3, r3, r2
 800ff82:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ff86:	6823      	ldr	r3, [r4, #0]
 800ff88:	4669      	mov	r1, sp
 800ff8a:	689b      	ldr	r3, [r3, #8]
 800ff8c:	4620      	mov	r0, r4
 800ff8e:	4798      	blx	r3
 800ff90:	69a4      	ldr	r4, [r4, #24]
 800ff92:	2c00      	cmp	r4, #0
 800ff94:	d1d8      	bne.n	800ff48 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ff96:	b002      	add	sp, #8
 800ff98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ff9c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ff9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ff9e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ffa2:	460d      	mov	r5, r1
 800ffa4:	4616      	mov	r6, r2
 800ffa6:	b323      	cbz	r3, 800fff2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ffa8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ffaa:	b314      	cbz	r4, 800fff2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ffac:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ffb0:	b1eb      	cbz	r3, 800ffee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ffb2:	6828      	ldr	r0, [r5, #0]
 800ffb4:	6869      	ldr	r1, [r5, #4]
 800ffb6:	466b      	mov	r3, sp
 800ffb8:	c303      	stmia	r3!, {r0, r1}
 800ffba:	4668      	mov	r0, sp
 800ffbc:	1d21      	adds	r1, r4, #4
 800ffbe:	f7ff ff15 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 800ffc2:	4668      	mov	r0, sp
 800ffc4:	f7ff ff55 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ffc8:	b988      	cbnz	r0, 800ffee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ffca:	f8bd 3000 	ldrh.w	r3, [sp]
 800ffce:	88a2      	ldrh	r2, [r4, #4]
 800ffd0:	1a9b      	subs	r3, r3, r2
 800ffd2:	f8ad 3000 	strh.w	r3, [sp]
 800ffd6:	88e2      	ldrh	r2, [r4, #6]
 800ffd8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ffdc:	1a9b      	subs	r3, r3, r2
 800ffde:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ffe2:	6823      	ldr	r3, [r4, #0]
 800ffe4:	4632      	mov	r2, r6
 800ffe6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ffe8:	4669      	mov	r1, sp
 800ffea:	4620      	mov	r0, r4
 800ffec:	4798      	blx	r3
 800ffee:	69a4      	ldr	r4, [r4, #24]
 800fff0:	e7db      	b.n	800ffaa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800fff2:	b002      	add	sp, #8
 800fff4:	bd70      	pop	{r4, r5, r6, pc}

0800fff6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 800fff6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800fff8:	4770      	bx	lr
	...

0800fffc <_ZN8touchgfx14SwipeContainerD1Ev>:
 800fffc:	4b05      	ldr	r3, [pc, #20]	; (8010014 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 800fffe:	b510      	push	{r4, lr}
 8010000:	6003      	str	r3, [r0, #0]
 8010002:	4604      	mov	r4, r0
 8010004:	f005 fe44 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 8010008:	4621      	mov	r1, r4
 801000a:	3004      	adds	r0, #4
 801000c:	f005 fe8d 	bl	8015d2a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010010:	4620      	mov	r0, r4
 8010012:	bd10      	pop	{r4, pc}
 8010014:	0802e6ac 	.word	0x0802e6ac

08010018 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8010018:	b510      	push	{r4, lr}
 801001a:	4604      	mov	r4, r0
 801001c:	f7ff ffee 	bl	800fffc <_ZN8touchgfx14SwipeContainerD1Ev>
 8010020:	4620      	mov	r0, r4
 8010022:	21f4      	movs	r1, #244	; 0xf4
 8010024:	f019 fee9 	bl	8029dfa <_ZdlPvj>
 8010028:	4620      	mov	r0, r4
 801002a:	bd10      	pop	{r4, pc}

0801002c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 801002c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010030:	2b04      	cmp	r3, #4
 8010032:	d117      	bne.n	8010064 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8010034:	790b      	ldrb	r3, [r1, #4]
 8010036:	2b01      	cmp	r3, #1
 8010038:	d114      	bne.n	8010064 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801003a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 801003e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8010040:	8643      	strh	r3, [r0, #50]	; 0x32
 8010042:	2b00      	cmp	r3, #0
 8010044:	8682      	strh	r2, [r0, #52]	; 0x34
 8010046:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801004a:	da0e      	bge.n	801006a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 801004c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010050:	3a01      	subs	r2, #1
 8010052:	4291      	cmp	r1, r2
 8010054:	d007      	beq.n	8010066 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8010056:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010058:	4252      	negs	r2, r2
 801005a:	4293      	cmp	r3, r2
 801005c:	dc03      	bgt.n	8010066 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 801005e:	2302      	movs	r3, #2
 8010060:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010064:	4770      	bx	lr
 8010066:	2300      	movs	r3, #0
 8010068:	e7fa      	b.n	8010060 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 801006a:	d0fb      	beq.n	8010064 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801006c:	b111      	cbz	r1, 8010074 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 801006e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010070:	4293      	cmp	r3, r2
 8010072:	da01      	bge.n	8010078 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8010074:	2301      	movs	r3, #1
 8010076:	e7f3      	b.n	8010060 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8010078:	2303      	movs	r3, #3
 801007a:	e7f1      	b.n	8010060 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

0801007c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 801007c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010080:	2b04      	cmp	r3, #4
 8010082:	d113      	bne.n	80100ac <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010084:	790b      	ldrb	r3, [r1, #4]
 8010086:	b98b      	cbnz	r3, 80100ac <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010088:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801008a:	8643      	strh	r3, [r0, #50]	; 0x32
 801008c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801008e:	8683      	strh	r3, [r0, #52]	; 0x34
 8010090:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010094:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8010098:	2b00      	cmp	r3, #0
 801009a:	da08      	bge.n	80100ae <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 801009c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80100a0:	3b01      	subs	r3, #1
 80100a2:	429a      	cmp	r2, r3
 80100a4:	da02      	bge.n	80100ac <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80100a6:	2302      	movs	r3, #2
 80100a8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80100ac:	4770      	bx	lr
 80100ae:	d0fd      	beq.n	80100ac <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80100b0:	2a00      	cmp	r2, #0
 80100b2:	d0fb      	beq.n	80100ac <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80100b4:	2303      	movs	r3, #3
 80100b6:	e7f7      	b.n	80100a8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

080100b8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 80100b8:	b538      	push	{r3, r4, r5, lr}
 80100ba:	2226      	movs	r2, #38	; 0x26
 80100bc:	4604      	mov	r4, r0
 80100be:	460d      	mov	r5, r1
 80100c0:	2100      	movs	r1, #0
 80100c2:	f01a feb2 	bl	802ae2a <memset>
 80100c6:	4620      	mov	r0, r4
 80100c8:	f7ff fc58 	bl	800f97c <_ZN8touchgfx8DrawableC1Ev>
 80100cc:	4b06      	ldr	r3, [pc, #24]	; (80100e8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 80100ce:	6023      	str	r3, [r4, #0]
 80100d0:	882b      	ldrh	r3, [r5, #0]
 80100d2:	84e3      	strh	r3, [r4, #38]	; 0x26
 80100d4:	23ff      	movs	r3, #255	; 0xff
 80100d6:	4620      	mov	r0, r4
 80100d8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80100dc:	4629      	mov	r1, r5
 80100de:	f003 f8d8 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80100e2:	4620      	mov	r0, r4
 80100e4:	bd38      	pop	{r3, r4, r5, pc}
 80100e6:	bf00      	nop
 80100e8:	0802ed50 	.word	0x0802ed50

080100ec <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 80100ec:	86c1      	strh	r1, [r0, #54]	; 0x36
 80100ee:	4770      	bx	lr

080100f0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 80100f0:	b508      	push	{r3, lr}
 80100f2:	3068      	adds	r0, #104	; 0x68
 80100f4:	f7f2 fc30 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 80100f8:	bd08      	pop	{r3, pc}

080100fa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 80100fa:	b508      	push	{r3, lr}
 80100fc:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 80100fe:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8010102:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010106:	fb03 2111 	mls	r1, r3, r1, r2
 801010a:	b209      	sxth	r1, r1
 801010c:	2200      	movs	r2, #0
 801010e:	3038      	adds	r0, #56	; 0x38
 8010110:	f7f2 f9a5 	bl	800245e <_ZN8touchgfx8Drawable6moveToEss>
 8010114:	bd08      	pop	{r3, pc}

08010116 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8010116:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801011a:	2b04      	cmp	r3, #4
 801011c:	d119      	bne.n	8010152 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 801011e:	88ca      	ldrh	r2, [r1, #6]
 8010120:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8010122:	1a9b      	subs	r3, r3, r2
 8010124:	894a      	ldrh	r2, [r1, #10]
 8010126:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801012a:	4413      	add	r3, r2
 801012c:	b21b      	sxth	r3, r3
 801012e:	8603      	strh	r3, [r0, #48]	; 0x30
 8010130:	b921      	cbnz	r1, 801013c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010132:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010134:	4293      	cmp	r3, r2
 8010136:	dd01      	ble.n	801013c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010138:	8602      	strh	r2, [r0, #48]	; 0x30
 801013a:	e008      	b.n	801014e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 801013c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010140:	3a01      	subs	r2, #1
 8010142:	4291      	cmp	r1, r2
 8010144:	d103      	bne.n	801014e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8010146:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010148:	4252      	negs	r2, r2
 801014a:	4293      	cmp	r3, r2
 801014c:	dbf4      	blt.n	8010138 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 801014e:	f7ff bfd4 	b.w	80100fa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010152:	4770      	bx	lr

08010154 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8010154:	b538      	push	{r3, r4, r5, lr}
 8010156:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801015a:	2d0e      	cmp	r5, #14
 801015c:	4604      	mov	r4, r0
 801015e:	d813      	bhi.n	8010188 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8010160:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8010162:	4252      	negs	r2, r2
 8010164:	230e      	movs	r3, #14
 8010166:	b212      	sxth	r2, r2
 8010168:	2100      	movs	r1, #0
 801016a:	4628      	mov	r0, r5
 801016c:	f007 fbc2 	bl	80178f4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010170:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010172:	4418      	add	r0, r3
 8010174:	8620      	strh	r0, [r4, #48]	; 0x30
 8010176:	4620      	mov	r0, r4
 8010178:	f7ff ffbf 	bl	80100fa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801017c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010180:	3301      	adds	r3, #1
 8010182:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010186:	bd38      	pop	{r3, r4, r5, pc}
 8010188:	2304      	movs	r3, #4
 801018a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801018e:	2300      	movs	r3, #0
 8010190:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010194:	8603      	strh	r3, [r0, #48]	; 0x30
 8010196:	e7ef      	b.n	8010178 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08010198 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8010198:	b538      	push	{r3, r4, r5, lr}
 801019a:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801019e:	2d0e      	cmp	r5, #14
 80101a0:	4604      	mov	r4, r0
 80101a2:	d812      	bhi.n	80101ca <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 80101a4:	230e      	movs	r3, #14
 80101a6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 80101aa:	2100      	movs	r1, #0
 80101ac:	4628      	mov	r0, r5
 80101ae:	f007 fba1 	bl	80178f4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 80101b2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80101b4:	1a18      	subs	r0, r3, r0
 80101b6:	8620      	strh	r0, [r4, #48]	; 0x30
 80101b8:	4620      	mov	r0, r4
 80101ba:	f7ff ff9e 	bl	80100fa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80101be:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80101c2:	3301      	adds	r3, #1
 80101c4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80101c8:	bd38      	pop	{r3, r4, r5, pc}
 80101ca:	2304      	movs	r3, #4
 80101cc:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80101d0:	2300      	movs	r3, #0
 80101d2:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 80101d6:	8603      	strh	r3, [r0, #48]	; 0x30
 80101d8:	e7ef      	b.n	80101ba <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

080101dc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 80101dc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80101e0:	4604      	mov	r4, r0
 80101e2:	4626      	mov	r6, r4
 80101e4:	af02      	add	r7, sp, #8
 80101e6:	f7ff fbc9 	bl	800f97c <_ZN8touchgfx8DrawableC1Ev>
 80101ea:	2500      	movs	r5, #0
 80101ec:	4b18      	ldr	r3, [pc, #96]	; (8010250 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 80101ee:	62a5      	str	r5, [r4, #40]	; 0x28
 80101f0:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80101f4:	f846 3b2c 	str.w	r3, [r6], #44
 80101f8:	f827 9d04 	strh.w	r9, [r7, #-4]!
 80101fc:	4630      	mov	r0, r6
 80101fe:	4639      	mov	r1, r7
 8010200:	f7ff ff5a 	bl	80100b8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010204:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8010208:	4b12      	ldr	r3, [pc, #72]	; (8010254 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 801020a:	62e3      	str	r3, [r4, #44]	; 0x2c
 801020c:	4639      	mov	r1, r7
 801020e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8010212:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8010216:	4640      	mov	r0, r8
 8010218:	f8ad 9004 	strh.w	r9, [sp, #4]
 801021c:	f7ff ff4c 	bl	80100b8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010220:	462a      	mov	r2, r5
 8010222:	4629      	mov	r1, r5
 8010224:	4630      	mov	r0, r6
 8010226:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 801022a:	f7f2 fb95 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 801022e:	462a      	mov	r2, r5
 8010230:	4629      	mov	r1, r5
 8010232:	4640      	mov	r0, r8
 8010234:	f7f2 fb90 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8010238:	4631      	mov	r1, r6
 801023a:	4620      	mov	r0, r4
 801023c:	f7ff fc50 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010240:	4620      	mov	r0, r4
 8010242:	4641      	mov	r1, r8
 8010244:	f7ff fc4c 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010248:	4620      	mov	r0, r4
 801024a:	b003      	add	sp, #12
 801024c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010250:	0802c5c0 	.word	0x0802c5c0
 8010254:	0802eb6c 	.word	0x0802eb6c

08010258 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8010258:	b570      	push	{r4, r5, r6, lr}
 801025a:	4604      	mov	r4, r0
 801025c:	f7ff fb8e 	bl	800f97c <_ZN8touchgfx8DrawableC1Ev>
 8010260:	4b1a      	ldr	r3, [pc, #104]	; (80102cc <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8010262:	6023      	str	r3, [r4, #0]
 8010264:	2304      	movs	r3, #4
 8010266:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801026a:	2350      	movs	r3, #80	; 0x50
 801026c:	2500      	movs	r5, #0
 801026e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8010270:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8010274:	231e      	movs	r3, #30
 8010276:	62a5      	str	r5, [r4, #40]	; 0x28
 8010278:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 801027c:	8625      	strh	r5, [r4, #48]	; 0x30
 801027e:	8665      	strh	r5, [r4, #50]	; 0x32
 8010280:	86a5      	strh	r5, [r4, #52]	; 0x34
 8010282:	86e3      	strh	r3, [r4, #54]	; 0x36
 8010284:	4630      	mov	r0, r6
 8010286:	f7ff fb79 	bl	800f97c <_ZN8touchgfx8DrawableC1Ev>
 801028a:	4b11      	ldr	r3, [pc, #68]	; (80102d0 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 801028c:	6625      	str	r5, [r4, #96]	; 0x60
 801028e:	63a3      	str	r3, [r4, #56]	; 0x38
 8010290:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8010294:	2302      	movs	r3, #2
 8010296:	f104 0568 	add.w	r5, r4, #104	; 0x68
 801029a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801029e:	4628      	mov	r0, r5
 80102a0:	f7ff ff9c 	bl	80101dc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 80102a4:	f005 fcf4 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 80102a8:	4621      	mov	r1, r4
 80102aa:	3004      	adds	r0, #4
 80102ac:	f005 fde6 	bl	8015e7c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80102b0:	2301      	movs	r3, #1
 80102b2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80102b6:	4631      	mov	r1, r6
 80102b8:	4620      	mov	r0, r4
 80102ba:	f7ff fc11 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80102be:	4620      	mov	r0, r4
 80102c0:	4629      	mov	r1, r5
 80102c2:	f7ff fc0d 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80102c6:	4620      	mov	r0, r4
 80102c8:	bd70      	pop	{r4, r5, r6, pc}
 80102ca:	bf00      	nop
 80102cc:	0802e6ac 	.word	0x0802e6ac
 80102d0:	0802e770 	.word	0x0802e770

080102d4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 80102d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80102d6:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 80102da:	428b      	cmp	r3, r1
 80102dc:	4604      	mov	r4, r0
 80102de:	460d      	mov	r5, r1
 80102e0:	d915      	bls.n	801030e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 80102e2:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 80102e6:	428b      	cmp	r3, r1
 80102e8:	d011      	beq.n	801030e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 80102ea:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 80102ee:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 80102f2:	a802      	add	r0, sp, #8
 80102f4:	f820 3d04 	strh.w	r3, [r0, #-4]!
 80102f8:	f009 f91a 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80102fc:	fb15 f100 	smulbb	r1, r5, r0
 8010300:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8010304:	b209      	sxth	r1, r1
 8010306:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801030a:	f7f2 f8a8 	bl	800245e <_ZN8touchgfx8Drawable6moveToEss>
 801030e:	b003      	add	sp, #12
 8010310:	bd30      	pop	{r4, r5, pc}

08010312 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8010312:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010314:	4604      	mov	r4, r0
 8010316:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801031a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 801031e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010322:	4293      	cmp	r3, r2
 8010324:	460d      	mov	r5, r1
 8010326:	d01e      	beq.n	8010366 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8010328:	a802      	add	r0, sp, #8
 801032a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801032e:	f009 f8ff 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010332:	6823      	ldr	r3, [r4, #0]
 8010334:	fb15 f000 	smulbb	r0, r5, r0
 8010338:	86a0      	strh	r0, [r4, #52]	; 0x34
 801033a:	695b      	ldr	r3, [r3, #20]
 801033c:	4620      	mov	r0, r4
 801033e:	4798      	blx	r3
 8010340:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010344:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010348:	4620      	mov	r0, r4
 801034a:	f7ff fb2f 	bl	800f9ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801034e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8010352:	42a9      	cmp	r1, r5
 8010354:	4620      	mov	r0, r4
 8010356:	bf28      	it	cs
 8010358:	4629      	movcs	r1, r5
 801035a:	f7ff ffbb 	bl	80102d4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801035e:	6823      	ldr	r3, [r4, #0]
 8010360:	4620      	mov	r0, r4
 8010362:	695b      	ldr	r3, [r3, #20]
 8010364:	4798      	blx	r3
 8010366:	b003      	add	sp, #12
 8010368:	bd30      	pop	{r4, r5, pc}

0801036a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801036a:	b538      	push	{r3, r4, r5, lr}
 801036c:	4604      	mov	r4, r0
 801036e:	460d      	mov	r5, r1
 8010370:	305c      	adds	r0, #92	; 0x5c
 8010372:	4611      	mov	r1, r2
 8010374:	f002 ff8d 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010378:	4629      	mov	r1, r5
 801037a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801037e:	f002 fa53 	bl	8012828 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8010382:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8010386:	b121      	cbz	r1, 8010392 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8010388:	4620      	mov	r0, r4
 801038a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801038e:	f7ff bfc0 	b.w	8010312 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010392:	bd38      	pop	{r3, r4, r5, pc}

08010394 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8010394:	3068      	adds	r0, #104	; 0x68
 8010396:	f7ff bfe8 	b.w	801036a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

0801039a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 801039a:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 801039e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80103a2:	3101      	adds	r1, #1
 80103a4:	fb91 f3f2 	sdiv	r3, r1, r2
 80103a8:	fb02 1113 	mls	r1, r2, r3, r1
 80103ac:	b2c9      	uxtb	r1, r1
 80103ae:	f7ff bf91 	b.w	80102d4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080103b2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 80103b2:	b510      	push	{r4, lr}
 80103b4:	4604      	mov	r4, r0
 80103b6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80103ba:	280a      	cmp	r0, #10
 80103bc:	d813      	bhi.n	80103e6 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 80103be:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80103c0:	8922      	ldrh	r2, [r4, #8]
 80103c2:	441a      	add	r2, r3
 80103c4:	b212      	sxth	r2, r2
 80103c6:	230a      	movs	r3, #10
 80103c8:	2100      	movs	r1, #0
 80103ca:	f007 fad1 	bl	8017970 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80103ce:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80103d0:	1a18      	subs	r0, r3, r0
 80103d2:	8620      	strh	r0, [r4, #48]	; 0x30
 80103d4:	4620      	mov	r0, r4
 80103d6:	f7ff fe90 	bl	80100fa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80103da:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80103de:	3301      	adds	r3, #1
 80103e0:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80103e4:	bd10      	pop	{r4, pc}
 80103e6:	2304      	movs	r3, #4
 80103e8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80103ec:	2300      	movs	r3, #0
 80103ee:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80103f2:	8623      	strh	r3, [r4, #48]	; 0x30
 80103f4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80103f8:	f7ff ffcf 	bl	801039a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 80103fc:	e7ea      	b.n	80103d4 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

080103fe <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 80103fe:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8010402:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8010406:	4411      	add	r1, r2
 8010408:	3901      	subs	r1, #1
 801040a:	fb91 f3f2 	sdiv	r3, r1, r2
 801040e:	fb02 1113 	mls	r1, r2, r3, r1
 8010412:	b2c9      	uxtb	r1, r1
 8010414:	f7ff bf5e 	b.w	80102d4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08010418 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8010418:	b510      	push	{r4, lr}
 801041a:	4604      	mov	r4, r0
 801041c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8010420:	280a      	cmp	r0, #10
 8010422:	d813      	bhi.n	801044c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8010424:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010426:	8922      	ldrh	r2, [r4, #8]
 8010428:	1ad2      	subs	r2, r2, r3
 801042a:	b212      	sxth	r2, r2
 801042c:	230a      	movs	r3, #10
 801042e:	2100      	movs	r1, #0
 8010430:	f007 fa9e 	bl	8017970 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8010434:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010436:	4418      	add	r0, r3
 8010438:	8620      	strh	r0, [r4, #48]	; 0x30
 801043a:	4620      	mov	r0, r4
 801043c:	f7ff fe5d 	bl	80100fa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010440:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010444:	3301      	adds	r3, #1
 8010446:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801044a:	bd10      	pop	{r4, pc}
 801044c:	2304      	movs	r3, #4
 801044e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010452:	2300      	movs	r3, #0
 8010454:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010458:	8623      	strh	r3, [r4, #48]	; 0x30
 801045a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801045e:	f7ff ffce 	bl	80103fe <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8010462:	e7ea      	b.n	801043a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08010464 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8010464:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010468:	b90b      	cbnz	r3, 801046e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801046a:	f7ff be73 	b.w	8010154 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801046e:	2b01      	cmp	r3, #1
 8010470:	d101      	bne.n	8010476 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8010472:	f7ff be91 	b.w	8010198 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8010476:	2b02      	cmp	r3, #2
 8010478:	d101      	bne.n	801047e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801047a:	f7ff bf9a 	b.w	80103b2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801047e:	2b03      	cmp	r3, #3
 8010480:	d101      	bne.n	8010486 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8010482:	f7ff bfc9 	b.w	8010418 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8010486:	4770      	bx	lr

08010488 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8010488:	b510      	push	{r4, lr}
 801048a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 801048e:	428b      	cmp	r3, r1
 8010490:	4604      	mov	r4, r0
 8010492:	d907      	bls.n	80104a4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8010494:	3068      	adds	r0, #104	; 0x68
 8010496:	f7ff ff1d 	bl	80102d4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801049a:	4620      	mov	r0, r4
 801049c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80104a0:	f7ff be2b 	b.w	80100fa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80104a4:	bd10      	pop	{r4, pc}

080104a6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 80104a6:	b538      	push	{r3, r4, r5, lr}
 80104a8:	4604      	mov	r4, r0
 80104aa:	3038      	adds	r0, #56	; 0x38
 80104ac:	460d      	mov	r5, r1
 80104ae:	f000 f963 	bl	8010778 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80104b2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80104b6:	3101      	adds	r1, #1
 80104b8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80104bc:	b2c9      	uxtb	r1, r1
 80104be:	f7ff ff28 	bl	8010312 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80104c2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80104c6:	4620      	mov	r0, r4
 80104c8:	f7ff ffde 	bl	8010488 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80104cc:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 80104d0:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 80104d4:	4620      	mov	r0, r4
 80104d6:	f7ff fa69 	bl	800f9ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80104da:	bd38      	pop	{r3, r4, r5, pc}

080104dc <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 80104dc:	b538      	push	{r3, r4, r5, lr}
 80104de:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80104e2:	4604      	mov	r4, r0
 80104e4:	b1e3      	cbz	r3, 8010520 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80104e6:	6e03      	ldr	r3, [r0, #96]	; 0x60
 80104e8:	b1d3      	cbz	r3, 8010520 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80104ea:	428b      	cmp	r3, r1
 80104ec:	d125      	bne.n	801053a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 80104ee:	4619      	mov	r1, r3
 80104f0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80104f4:	f000 f9c0 	bl	8010878 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 80104f8:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80104fc:	3901      	subs	r1, #1
 80104fe:	b2c9      	uxtb	r1, r1
 8010500:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010504:	f7ff ff05 	bl	8010312 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010508:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801050c:	b94d      	cbnz	r5, 8010522 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801050e:	6823      	ldr	r3, [r4, #0]
 8010510:	4620      	mov	r0, r4
 8010512:	695b      	ldr	r3, [r3, #20]
 8010514:	4798      	blx	r3
 8010516:	462a      	mov	r2, r5
 8010518:	4629      	mov	r1, r5
 801051a:	4620      	mov	r0, r4
 801051c:	f7ff fa46 	bl	800f9ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010520:	bd38      	pop	{r3, r4, r5, pc}
 8010522:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8010526:	3d01      	subs	r5, #1
 8010528:	42a9      	cmp	r1, r5
 801052a:	bfa8      	it	ge
 801052c:	4629      	movge	r1, r5
 801052e:	4620      	mov	r0, r4
 8010530:	b2c9      	uxtb	r1, r1
 8010532:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010536:	f7ff bfa7 	b.w	8010488 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801053a:	699b      	ldr	r3, [r3, #24]
 801053c:	e7d4      	b.n	80104e8 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801053e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801053e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8010542:	4770      	bx	lr

08010544 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8010544:	b538      	push	{r3, r4, r5, lr}
 8010546:	7882      	ldrb	r2, [r0, #2]
 8010548:	6843      	ldr	r3, [r0, #4]
 801054a:	4604      	mov	r4, r0
 801054c:	460d      	mov	r5, r1
 801054e:	b98a      	cbnz	r2, 8010574 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8010550:	4299      	cmp	r1, r3
 8010552:	d101      	bne.n	8010558 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010554:	2301      	movs	r3, #1
 8010556:	7083      	strb	r3, [r0, #2]
 8010558:	6863      	ldr	r3, [r4, #4]
 801055a:	42ab      	cmp	r3, r5
 801055c:	d009      	beq.n	8010572 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801055e:	7a23      	ldrb	r3, [r4, #8]
 8010560:	2b01      	cmp	r3, #1
 8010562:	d11b      	bne.n	801059c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8010564:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8010568:	f9b4 2000 	ldrsh.w	r2, [r4]
 801056c:	429a      	cmp	r2, r3
 801056e:	bfb8      	it	lt
 8010570:	8023      	strhlt	r3, [r4, #0]
 8010572:	bd38      	pop	{r3, r4, r5, pc}
 8010574:	7a02      	ldrb	r2, [r0, #8]
 8010576:	2a01      	cmp	r2, #1
 8010578:	d108      	bne.n	801058c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801057a:	895b      	ldrh	r3, [r3, #10]
 801057c:	88c9      	ldrh	r1, [r1, #6]
 801057e:	1ac9      	subs	r1, r1, r3
 8010580:	682b      	ldr	r3, [r5, #0]
 8010582:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010584:	b209      	sxth	r1, r1
 8010586:	4628      	mov	r0, r5
 8010588:	4798      	blx	r3
 801058a:	e7e5      	b.n	8010558 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 801058c:	2a02      	cmp	r2, #2
 801058e:	d1e3      	bne.n	8010558 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010590:	891b      	ldrh	r3, [r3, #8]
 8010592:	8889      	ldrh	r1, [r1, #4]
 8010594:	1ac9      	subs	r1, r1, r3
 8010596:	682b      	ldr	r3, [r5, #0]
 8010598:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801059a:	e7f3      	b.n	8010584 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 801059c:	2b02      	cmp	r3, #2
 801059e:	d1e8      	bne.n	8010572 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80105a0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80105a4:	e7e0      	b.n	8010568 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080105a6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80105a6:	4770      	bx	lr

080105a8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80105a8:	4770      	bx	lr

080105aa <_ZN8touchgfx10ListLayoutD1Ev>:
 80105aa:	4770      	bx	lr

080105ac <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80105ac:	b430      	push	{r4, r5}
 80105ae:	68c5      	ldr	r5, [r0, #12]
 80105b0:	6844      	ldr	r4, [r0, #4]
 80105b2:	106a      	asrs	r2, r5, #1
 80105b4:	4603      	mov	r3, r0
 80105b6:	07ed      	lsls	r5, r5, #31
 80105b8:	eb04 0002 	add.w	r0, r4, r2
 80105bc:	689b      	ldr	r3, [r3, #8]
 80105be:	bf48      	it	mi
 80105c0:	58a2      	ldrmi	r2, [r4, r2]
 80105c2:	bc30      	pop	{r4, r5}
 80105c4:	bf48      	it	mi
 80105c6:	58d3      	ldrmi	r3, [r2, r3]
 80105c8:	4718      	bx	r3

080105ca <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80105ca:	6843      	ldr	r3, [r0, #4]
 80105cc:	b12b      	cbz	r3, 80105da <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80105ce:	6883      	ldr	r3, [r0, #8]
 80105d0:	b92b      	cbnz	r3, 80105de <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 80105d2:	68c0      	ldr	r0, [r0, #12]
 80105d4:	f000 0001 	and.w	r0, r0, #1
 80105d8:	4770      	bx	lr
 80105da:	4618      	mov	r0, r3
 80105dc:	4770      	bx	lr
 80105de:	2001      	movs	r0, #1
 80105e0:	4770      	bx	lr

080105e2 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 80105e2:	b430      	push	{r4, r5}
 80105e4:	68c5      	ldr	r5, [r0, #12]
 80105e6:	6844      	ldr	r4, [r0, #4]
 80105e8:	106a      	asrs	r2, r5, #1
 80105ea:	4603      	mov	r3, r0
 80105ec:	07ed      	lsls	r5, r5, #31
 80105ee:	eb04 0002 	add.w	r0, r4, r2
 80105f2:	689b      	ldr	r3, [r3, #8]
 80105f4:	bf48      	it	mi
 80105f6:	58a2      	ldrmi	r2, [r4, r2]
 80105f8:	bc30      	pop	{r4, r5}
 80105fa:	bf48      	it	mi
 80105fc:	58d3      	ldrmi	r3, [r2, r3]
 80105fe:	4718      	bx	r3

08010600 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8010600:	6843      	ldr	r3, [r0, #4]
 8010602:	b12b      	cbz	r3, 8010610 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8010604:	6883      	ldr	r3, [r0, #8]
 8010606:	b92b      	cbnz	r3, 8010614 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8010608:	68c0      	ldr	r0, [r0, #12]
 801060a:	f000 0001 	and.w	r0, r0, #1
 801060e:	4770      	bx	lr
 8010610:	4618      	mov	r0, r3
 8010612:	4770      	bx	lr
 8010614:	2001      	movs	r0, #1
 8010616:	4770      	bx	lr

08010618 <_ZN8touchgfx10ListLayoutD0Ev>:
 8010618:	b510      	push	{r4, lr}
 801061a:	2130      	movs	r1, #48	; 0x30
 801061c:	4604      	mov	r4, r0
 801061e:	f019 fbec 	bl	8029dfa <_ZdlPvj>
 8010622:	4620      	mov	r0, r4
 8010624:	bd10      	pop	{r4, pc}

08010626 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8010626:	b510      	push	{r4, lr}
 8010628:	2110      	movs	r1, #16
 801062a:	4604      	mov	r4, r0
 801062c:	f019 fbe5 	bl	8029dfa <_ZdlPvj>
 8010630:	4620      	mov	r0, r4
 8010632:	bd10      	pop	{r4, pc}

08010634 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8010634:	b510      	push	{r4, lr}
 8010636:	2110      	movs	r1, #16
 8010638:	4604      	mov	r4, r0
 801063a:	f019 fbde 	bl	8029dfa <_ZdlPvj>
 801063e:	4620      	mov	r0, r4
 8010640:	bd10      	pop	{r4, pc}

08010642 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8010642:	4603      	mov	r3, r0
 8010644:	4608      	mov	r0, r1
 8010646:	789a      	ldrb	r2, [r3, #2]
 8010648:	b992      	cbnz	r2, 8010670 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801064a:	685a      	ldr	r2, [r3, #4]
 801064c:	428a      	cmp	r2, r1
 801064e:	d102      	bne.n	8010656 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8010650:	2201      	movs	r2, #1
 8010652:	709a      	strb	r2, [r3, #2]
 8010654:	4770      	bx	lr
 8010656:	7a1a      	ldrb	r2, [r3, #8]
 8010658:	2a01      	cmp	r2, #1
 801065a:	d104      	bne.n	8010666 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801065c:	88ca      	ldrh	r2, [r1, #6]
 801065e:	8949      	ldrh	r1, [r1, #10]
 8010660:	440a      	add	r2, r1
 8010662:	801a      	strh	r2, [r3, #0]
 8010664:	4770      	bx	lr
 8010666:	2a02      	cmp	r2, #2
 8010668:	d116      	bne.n	8010698 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801066a:	888a      	ldrh	r2, [r1, #4]
 801066c:	8909      	ldrh	r1, [r1, #8]
 801066e:	e7f7      	b.n	8010660 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8010670:	7a1a      	ldrb	r2, [r3, #8]
 8010672:	2a01      	cmp	r2, #1
 8010674:	d107      	bne.n	8010686 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8010676:	685b      	ldr	r3, [r3, #4]
 8010678:	8959      	ldrh	r1, [r3, #10]
 801067a:	88c3      	ldrh	r3, [r0, #6]
 801067c:	4419      	add	r1, r3
 801067e:	6803      	ldr	r3, [r0, #0]
 8010680:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010682:	b209      	sxth	r1, r1
 8010684:	4718      	bx	r3
 8010686:	2a02      	cmp	r2, #2
 8010688:	d106      	bne.n	8010698 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801068a:	685b      	ldr	r3, [r3, #4]
 801068c:	8919      	ldrh	r1, [r3, #8]
 801068e:	8883      	ldrh	r3, [r0, #4]
 8010690:	4419      	add	r1, r3
 8010692:	6803      	ldr	r3, [r0, #0]
 8010694:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010696:	e7f4      	b.n	8010682 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8010698:	4770      	bx	lr

0801069a <_ZN8touchgfx10ListLayout9removeAllEv>:
 801069a:	2200      	movs	r2, #0
 801069c:	b510      	push	{r4, lr}
 801069e:	4611      	mov	r1, r2
 80106a0:	4604      	mov	r4, r0
 80106a2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 80106a4:	f7ff f982 	bl	800f9ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80106a8:	4620      	mov	r0, r4
 80106aa:	f7ff fa26 	bl	800fafa <_ZN8touchgfx9Container9removeAllEv>
 80106ae:	6960      	ldr	r0, [r4, #20]
 80106b0:	b120      	cbz	r0, 80106bc <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80106b2:	6803      	ldr	r3, [r0, #0]
 80106b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80106b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80106ba:	4718      	bx	r3
 80106bc:	bd10      	pop	{r4, pc}
	...

080106c0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 80106c0:	b530      	push	{r4, r5, lr}
 80106c2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80106c6:	428b      	cmp	r3, r1
 80106c8:	b085      	sub	sp, #20
 80106ca:	4604      	mov	r4, r0
 80106cc:	d017      	beq.n	80106fe <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80106ce:	2500      	movs	r5, #0
 80106d0:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 80106d4:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80106d6:	462a      	mov	r2, r5
 80106d8:	4629      	mov	r1, r5
 80106da:	f7ff f967 	bl	800f9ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80106de:	4b09      	ldr	r3, [pc, #36]	; (8010704 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 80106e0:	e9cd 3400 	strd	r3, r4, [sp]
 80106e4:	4b08      	ldr	r3, [pc, #32]	; (8010708 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 80106e6:	e9cd 3502 	strd	r3, r5, [sp, #8]
 80106ea:	6823      	ldr	r3, [r4, #0]
 80106ec:	4620      	mov	r0, r4
 80106ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80106f0:	4669      	mov	r1, sp
 80106f2:	4798      	blx	r3
 80106f4:	6960      	ldr	r0, [r4, #20]
 80106f6:	b110      	cbz	r0, 80106fe <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80106f8:	6803      	ldr	r3, [r0, #0]
 80106fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80106fc:	4798      	blx	r3
 80106fe:	b005      	add	sp, #20
 8010700:	bd30      	pop	{r4, r5, pc}
 8010702:	bf00      	nop
 8010704:	0802e740 	.word	0x0802e740
 8010708:	08010771 	.word	0x08010771

0801070c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801070c:	b538      	push	{r3, r4, r5, lr}
 801070e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010712:	2b01      	cmp	r3, #1
 8010714:	460d      	mov	r5, r1
 8010716:	4604      	mov	r4, r0
 8010718:	4611      	mov	r1, r2
 801071a:	d002      	beq.n	8010722 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801071c:	2b02      	cmp	r3, #2
 801071e:	d015      	beq.n	801074c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8010720:	bd38      	pop	{r3, r4, r5, pc}
 8010722:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8010726:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801072a:	429a      	cmp	r2, r3
 801072c:	bfb8      	it	lt
 801072e:	8103      	strhlt	r3, [r0, #8]
 8010730:	896a      	ldrh	r2, [r5, #10]
 8010732:	8943      	ldrh	r3, [r0, #10]
 8010734:	4413      	add	r3, r2
 8010736:	8143      	strh	r3, [r0, #10]
 8010738:	460a      	mov	r2, r1
 801073a:	4628      	mov	r0, r5
 801073c:	2100      	movs	r1, #0
 801073e:	f7f2 f90b 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8010742:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010744:	896a      	ldrh	r2, [r5, #10]
 8010746:	4413      	add	r3, r2
 8010748:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801074a:	e7e9      	b.n	8010720 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801074c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8010750:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010754:	429a      	cmp	r2, r3
 8010756:	bfb8      	it	lt
 8010758:	8143      	strhlt	r3, [r0, #10]
 801075a:	892a      	ldrh	r2, [r5, #8]
 801075c:	8903      	ldrh	r3, [r0, #8]
 801075e:	4413      	add	r3, r2
 8010760:	8103      	strh	r3, [r0, #8]
 8010762:	2200      	movs	r2, #0
 8010764:	4628      	mov	r0, r5
 8010766:	f7f2 f8f7 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 801076a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801076c:	892a      	ldrh	r2, [r5, #8]
 801076e:	e7ea      	b.n	8010746 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08010770 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8010770:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8010774:	f7ff bfca 	b.w	801070c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08010778 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8010778:	b570      	push	{r4, r5, r6, lr}
 801077a:	4604      	mov	r4, r0
 801077c:	460d      	mov	r5, r1
 801077e:	f7ff fff7 	bl	8010770 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8010782:	4620      	mov	r0, r4
 8010784:	4629      	mov	r1, r5
 8010786:	f7ff f9ab 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801078a:	6960      	ldr	r0, [r4, #20]
 801078c:	b120      	cbz	r0, 8010798 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 801078e:	6803      	ldr	r3, [r0, #0]
 8010790:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010794:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010796:	4718      	bx	r3
 8010798:	bd70      	pop	{r4, r5, r6, pc}
	...

0801079c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 801079c:	b530      	push	{r4, r5, lr}
 801079e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80107a0:	b089      	sub	sp, #36	; 0x24
 80107a2:	4604      	mov	r4, r0
 80107a4:	4615      	mov	r5, r2
 80107a6:	b92b      	cbnz	r3, 80107b4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80107a8:	6803      	ldr	r3, [r0, #0]
 80107aa:	4611      	mov	r1, r2
 80107ac:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80107ae:	4798      	blx	r3
 80107b0:	b009      	add	sp, #36	; 0x24
 80107b2:	bd30      	pop	{r4, r5, pc}
 80107b4:	f7ff f9ec 	bl	800fb90 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80107b8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80107bc:	f88d 200c 	strb.w	r2, [sp, #12]
 80107c0:	4a0f      	ldr	r2, [pc, #60]	; (8010800 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 80107c2:	9204      	str	r2, [sp, #16]
 80107c4:	aa01      	add	r2, sp, #4
 80107c6:	9205      	str	r2, [sp, #20]
 80107c8:	4a0e      	ldr	r2, [pc, #56]	; (8010804 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 80107ca:	9502      	str	r5, [sp, #8]
 80107cc:	2300      	movs	r3, #0
 80107ce:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80107d2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80107d6:	f88d 3006 	strb.w	r3, [sp, #6]
 80107da:	6823      	ldr	r3, [r4, #0]
 80107dc:	a904      	add	r1, sp, #16
 80107de:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80107e0:	4620      	mov	r0, r4
 80107e2:	4798      	blx	r3
 80107e4:	4620      	mov	r0, r4
 80107e6:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80107ea:	4629      	mov	r1, r5
 80107ec:	f7ff ff8e 	bl	801070c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 80107f0:	6960      	ldr	r0, [r4, #20]
 80107f2:	2800      	cmp	r0, #0
 80107f4:	d0dc      	beq.n	80107b0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80107f6:	6803      	ldr	r3, [r0, #0]
 80107f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80107fa:	4798      	blx	r3
 80107fc:	e7d8      	b.n	80107b0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80107fe:	bf00      	nop
 8010800:	0802e758 	.word	0x0802e758
 8010804:	08010643 	.word	0x08010643

08010808 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8010808:	b538      	push	{r3, r4, r5, lr}
 801080a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801080e:	2b01      	cmp	r3, #1
 8010810:	4604      	mov	r4, r0
 8010812:	460d      	mov	r5, r1
 8010814:	d002      	beq.n	801081c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8010816:	2b02      	cmp	r3, #2
 8010818:	d018      	beq.n	801084c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801081a:	bd38      	pop	{r3, r4, r5, pc}
 801081c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010820:	4293      	cmp	r3, r2
 8010822:	bfc8      	it	gt
 8010824:	8102      	strhgt	r2, [r0, #8]
 8010826:	894a      	ldrh	r2, [r1, #10]
 8010828:	8943      	ldrh	r3, [r0, #10]
 801082a:	1a9b      	subs	r3, r3, r2
 801082c:	8143      	strh	r3, [r0, #10]
 801082e:	680b      	ldr	r3, [r1, #0]
 8010830:	4628      	mov	r0, r5
 8010832:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010834:	2100      	movs	r1, #0
 8010836:	4798      	blx	r3
 8010838:	682b      	ldr	r3, [r5, #0]
 801083a:	2100      	movs	r1, #0
 801083c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801083e:	4628      	mov	r0, r5
 8010840:	4798      	blx	r3
 8010842:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010844:	896a      	ldrh	r2, [r5, #10]
 8010846:	1a9b      	subs	r3, r3, r2
 8010848:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801084a:	e7e6      	b.n	801081a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801084c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010850:	4293      	cmp	r3, r2
 8010852:	bfc8      	it	gt
 8010854:	8142      	strhgt	r2, [r0, #10]
 8010856:	890a      	ldrh	r2, [r1, #8]
 8010858:	8903      	ldrh	r3, [r0, #8]
 801085a:	1a9b      	subs	r3, r3, r2
 801085c:	8103      	strh	r3, [r0, #8]
 801085e:	680b      	ldr	r3, [r1, #0]
 8010860:	4628      	mov	r0, r5
 8010862:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010864:	2100      	movs	r1, #0
 8010866:	4798      	blx	r3
 8010868:	682b      	ldr	r3, [r5, #0]
 801086a:	2100      	movs	r1, #0
 801086c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801086e:	4628      	mov	r0, r5
 8010870:	4798      	blx	r3
 8010872:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010874:	892a      	ldrh	r2, [r5, #8]
 8010876:	e7e6      	b.n	8010846 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08010878 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8010878:	b530      	push	{r4, r5, lr}
 801087a:	b089      	sub	sp, #36	; 0x24
 801087c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8010880:	f88d 200c 	strb.w	r2, [sp, #12]
 8010884:	4a13      	ldr	r2, [pc, #76]	; (80108d4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8010886:	9204      	str	r2, [sp, #16]
 8010888:	aa01      	add	r2, sp, #4
 801088a:	9205      	str	r2, [sp, #20]
 801088c:	4a12      	ldr	r2, [pc, #72]	; (80108d8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801088e:	9102      	str	r1, [sp, #8]
 8010890:	2300      	movs	r3, #0
 8010892:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010896:	f88d 3006 	strb.w	r3, [sp, #6]
 801089a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801089e:	6803      	ldr	r3, [r0, #0]
 80108a0:	460d      	mov	r5, r1
 80108a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80108a4:	a904      	add	r1, sp, #16
 80108a6:	4604      	mov	r4, r0
 80108a8:	4798      	blx	r3
 80108aa:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80108ae:	b14b      	cbz	r3, 80108c4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80108b0:	4629      	mov	r1, r5
 80108b2:	4620      	mov	r0, r4
 80108b4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80108b8:	f7ff ffa6 	bl	8010808 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80108bc:	4629      	mov	r1, r5
 80108be:	4620      	mov	r0, r4
 80108c0:	f7ff f94f 	bl	800fb62 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80108c4:	6960      	ldr	r0, [r4, #20]
 80108c6:	b110      	cbz	r0, 80108ce <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80108c8:	6803      	ldr	r3, [r0, #0]
 80108ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80108cc:	4798      	blx	r3
 80108ce:	b009      	add	sp, #36	; 0x24
 80108d0:	bd30      	pop	{r4, r5, pc}
 80108d2:	bf00      	nop
 80108d4:	0802e758 	.word	0x0802e758
 80108d8:	08010545 	.word	0x08010545

080108dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80108dc:	b513      	push	{r0, r1, r4, lr}
 80108de:	6803      	ldr	r3, [r0, #0]
 80108e0:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80108e4:	2300      	movs	r3, #0
 80108e6:	e9cd 3300 	strd	r3, r3, [sp]
 80108ea:	466b      	mov	r3, sp
 80108ec:	47a0      	blx	r4
 80108ee:	b002      	add	sp, #8
 80108f0:	bd10      	pop	{r4, pc}

080108f2 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80108f2:	2301      	movs	r3, #1
 80108f4:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80108f8:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80108fc:	4770      	bx	lr

080108fe <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80108fe:	2301      	movs	r3, #1
 8010900:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010904:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010908:	4770      	bx	lr

0801090a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801090a:	6843      	ldr	r3, [r0, #4]
 801090c:	2201      	movs	r2, #1
 801090e:	725a      	strb	r2, [r3, #9]
 8010910:	6840      	ldr	r0, [r0, #4]
 8010912:	6803      	ldr	r3, [r0, #0]
 8010914:	691b      	ldr	r3, [r3, #16]
 8010916:	4718      	bx	r3

08010918 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010918:	6840      	ldr	r0, [r0, #4]
 801091a:	6803      	ldr	r3, [r0, #0]
 801091c:	689b      	ldr	r3, [r3, #8]
 801091e:	4718      	bx	r3

08010920 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010920:	b530      	push	{r4, r5, lr}
 8010922:	b08b      	sub	sp, #44	; 0x2c
 8010924:	6804      	ldr	r4, [r0, #0]
 8010926:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801092a:	9509      	str	r5, [sp, #36]	; 0x24
 801092c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010930:	9508      	str	r5, [sp, #32]
 8010932:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010936:	9507      	str	r5, [sp, #28]
 8010938:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801093c:	9506      	str	r5, [sp, #24]
 801093e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010942:	9505      	str	r5, [sp, #20]
 8010944:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010948:	9504      	str	r5, [sp, #16]
 801094a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801094e:	9503      	str	r5, [sp, #12]
 8010950:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010954:	9502      	str	r5, [sp, #8]
 8010956:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801095a:	e9cd 3500 	strd	r3, r5, [sp]
 801095e:	4613      	mov	r3, r2
 8010960:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010962:	2200      	movs	r2, #0
 8010964:	47a0      	blx	r4
 8010966:	b00b      	add	sp, #44	; 0x2c
 8010968:	bd30      	pop	{r4, r5, pc}
	...

0801096c <_ZN8touchgfx3HAL10beginFrameEv>:
 801096c:	4b04      	ldr	r3, [pc, #16]	; (8010980 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801096e:	781b      	ldrb	r3, [r3, #0]
 8010970:	b123      	cbz	r3, 801097c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010972:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010976:	f080 0001 	eor.w	r0, r0, #1
 801097a:	4770      	bx	lr
 801097c:	2001      	movs	r0, #1
 801097e:	4770      	bx	lr
 8010980:	200132ba 	.word	0x200132ba

08010984 <_ZN8touchgfx3HAL8endFrameEv>:
 8010984:	b510      	push	{r4, lr}
 8010986:	4604      	mov	r4, r0
 8010988:	6840      	ldr	r0, [r0, #4]
 801098a:	6803      	ldr	r3, [r0, #0]
 801098c:	689b      	ldr	r3, [r3, #8]
 801098e:	4798      	blx	r3
 8010990:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010994:	b113      	cbz	r3, 801099c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010996:	2301      	movs	r3, #1
 8010998:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801099c:	bd10      	pop	{r4, pc}

0801099e <_ZN8touchgfx3HAL10initializeEv>:
 801099e:	b510      	push	{r4, lr}
 80109a0:	4604      	mov	r4, r0
 80109a2:	f7f1 fb3d 	bl	8002020 <_ZN8touchgfx10OSWrappers10initializeEv>
 80109a6:	f7f1 fa49 	bl	8001e3c <_ZN8touchgfx4GPIO4initEv>
 80109aa:	6860      	ldr	r0, [r4, #4]
 80109ac:	6803      	ldr	r3, [r0, #0]
 80109ae:	68db      	ldr	r3, [r3, #12]
 80109b0:	4798      	blx	r3
 80109b2:	68e0      	ldr	r0, [r4, #12]
 80109b4:	6803      	ldr	r3, [r0, #0]
 80109b6:	689b      	ldr	r3, [r3, #8]
 80109b8:	4798      	blx	r3
 80109ba:	6823      	ldr	r3, [r4, #0]
 80109bc:	4620      	mov	r0, r4
 80109be:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80109c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109c4:	4718      	bx	r3
	...

080109c8 <_ZN8touchgfx3HAL4tickEv>:
 80109c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80109ca:	6803      	ldr	r3, [r0, #0]
 80109cc:	4d5b      	ldr	r5, [pc, #364]	; (8010b3c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80109ce:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80109d2:	4604      	mov	r4, r0
 80109d4:	4798      	blx	r3
 80109d6:	2800      	cmp	r0, #0
 80109d8:	f000 8095 	beq.w	8010b06 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80109dc:	2001      	movs	r0, #1
 80109de:	f7f1 f9df 	bl	8001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80109e2:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80109e6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80109ea:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80109ee:	2600      	movs	r6, #0
 80109f0:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 80109f4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80109f8:	b133      	cbz	r3, 8010a08 <_ZN8touchgfx3HAL4tickEv+0x40>
 80109fa:	6823      	ldr	r3, [r4, #0]
 80109fc:	4620      	mov	r0, r4
 80109fe:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010a02:	4798      	blx	r3
 8010a04:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010a08:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010a0c:	6862      	ldr	r2, [r4, #4]
 8010a0e:	f083 0301 	eor.w	r3, r3, #1
 8010a12:	7253      	strb	r3, [r2, #9]
 8010a14:	2601      	movs	r6, #1
 8010a16:	702e      	strb	r6, [r5, #0]
 8010a18:	f005 f93a 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 8010a1c:	6803      	ldr	r3, [r0, #0]
 8010a1e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010a20:	4798      	blx	r3
 8010a22:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010a26:	b90b      	cbnz	r3, 8010a2c <_ZN8touchgfx3HAL4tickEv+0x64>
 8010a28:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010a2c:	f005 f930 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 8010a30:	6803      	ldr	r3, [r0, #0]
 8010a32:	695b      	ldr	r3, [r3, #20]
 8010a34:	4798      	blx	r3
 8010a36:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010a38:	6803      	ldr	r3, [r0, #0]
 8010a3a:	691b      	ldr	r3, [r3, #16]
 8010a3c:	4798      	blx	r3
 8010a3e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010a42:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8010a46:	3b01      	subs	r3, #1
 8010a48:	b2db      	uxtb	r3, r3
 8010a4a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010a4e:	b10a      	cbz	r2, 8010a54 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010a50:	2b00      	cmp	r3, #0
 8010a52:	d1eb      	bne.n	8010a2c <_ZN8touchgfx3HAL4tickEv+0x64>
 8010a54:	4a3a      	ldr	r2, [pc, #232]	; (8010b40 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010a56:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010a5a:	7813      	ldrb	r3, [r2, #0]
 8010a5c:	3301      	adds	r3, #1
 8010a5e:	b25b      	sxtb	r3, r3
 8010a60:	4299      	cmp	r1, r3
 8010a62:	7013      	strb	r3, [r2, #0]
 8010a64:	dc10      	bgt.n	8010a88 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010a66:	68e0      	ldr	r0, [r4, #12]
 8010a68:	2300      	movs	r3, #0
 8010a6a:	7013      	strb	r3, [r2, #0]
 8010a6c:	6803      	ldr	r3, [r0, #0]
 8010a6e:	aa03      	add	r2, sp, #12
 8010a70:	68db      	ldr	r3, [r3, #12]
 8010a72:	a902      	add	r1, sp, #8
 8010a74:	4798      	blx	r3
 8010a76:	6823      	ldr	r3, [r4, #0]
 8010a78:	2800      	cmp	r0, #0
 8010a7a:	d050      	beq.n	8010b1e <_ZN8touchgfx3HAL4tickEv+0x156>
 8010a7c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010a80:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010a84:	4620      	mov	r0, r4
 8010a86:	4798      	blx	r3
 8010a88:	6960      	ldr	r0, [r4, #20]
 8010a8a:	2300      	movs	r3, #0
 8010a8c:	f88d 3007 	strb.w	r3, [sp, #7]
 8010a90:	b158      	cbz	r0, 8010aaa <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010a92:	6803      	ldr	r3, [r0, #0]
 8010a94:	f10d 0107 	add.w	r1, sp, #7
 8010a98:	68db      	ldr	r3, [r3, #12]
 8010a9a:	4798      	blx	r3
 8010a9c:	b128      	cbz	r0, 8010aaa <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010a9e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010aa0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010aa4:	6803      	ldr	r3, [r0, #0]
 8010aa6:	68db      	ldr	r3, [r3, #12]
 8010aa8:	4798      	blx	r3
 8010aaa:	f104 001c 	add.w	r0, r4, #28
 8010aae:	f016 f8c3 	bl	8026c38 <_ZN8touchgfx8Gestures4tickEv>
 8010ab2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8010ab6:	b30b      	cbz	r3, 8010afc <_ZN8touchgfx3HAL4tickEv+0x134>
 8010ab8:	6920      	ldr	r0, [r4, #16]
 8010aba:	6803      	ldr	r3, [r0, #0]
 8010abc:	691b      	ldr	r3, [r3, #16]
 8010abe:	4798      	blx	r3
 8010ac0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010ac2:	4606      	mov	r6, r0
 8010ac4:	b903      	cbnz	r3, 8010ac8 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010ac6:	6760      	str	r0, [r4, #116]	; 0x74
 8010ac8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010aca:	4a1e      	ldr	r2, [pc, #120]	; (8010b44 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010acc:	1af3      	subs	r3, r6, r3
 8010ace:	4293      	cmp	r3, r2
 8010ad0:	d914      	bls.n	8010afc <_ZN8touchgfx3HAL4tickEv+0x134>
 8010ad2:	6920      	ldr	r0, [r4, #16]
 8010ad4:	6803      	ldr	r3, [r0, #0]
 8010ad6:	699b      	ldr	r3, [r3, #24]
 8010ad8:	4798      	blx	r3
 8010ada:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010adc:	2264      	movs	r2, #100	; 0x64
 8010ade:	1af3      	subs	r3, r6, r3
 8010ae0:	fbb3 f3f2 	udiv	r3, r3, r2
 8010ae4:	fbb0 f0f3 	udiv	r0, r0, r3
 8010ae8:	2800      	cmp	r0, #0
 8010aea:	dc1d      	bgt.n	8010b28 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010aec:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010af0:	6920      	ldr	r0, [r4, #16]
 8010af2:	6803      	ldr	r3, [r0, #0]
 8010af4:	2100      	movs	r1, #0
 8010af6:	69db      	ldr	r3, [r3, #28]
 8010af8:	4798      	blx	r3
 8010afa:	6766      	str	r6, [r4, #116]	; 0x74
 8010afc:	f005 f8c8 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 8010b00:	6803      	ldr	r3, [r0, #0]
 8010b02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010b04:	4798      	blx	r3
 8010b06:	6823      	ldr	r3, [r4, #0]
 8010b08:	4620      	mov	r0, r4
 8010b0a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010b0e:	4798      	blx	r3
 8010b10:	2001      	movs	r0, #1
 8010b12:	f7f1 f95d 	bl	8001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010b16:	2300      	movs	r3, #0
 8010b18:	702b      	strb	r3, [r5, #0]
 8010b1a:	b004      	add	sp, #16
 8010b1c:	bd70      	pop	{r4, r5, r6, pc}
 8010b1e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010b22:	4620      	mov	r0, r4
 8010b24:	4798      	blx	r3
 8010b26:	e7af      	b.n	8010a88 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010b28:	2863      	cmp	r0, #99	; 0x63
 8010b2a:	bfcb      	itete	gt
 8010b2c:	2300      	movgt	r3, #0
 8010b2e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010b32:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8010b36:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010b3a:	e7d9      	b.n	8010af0 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010b3c:	200132c0 	.word	0x200132c0
 8010b40:	200132c1 	.word	0x200132c1
 8010b44:	05f5e100 	.word	0x05f5e100

08010b48 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010b48:	b510      	push	{r4, lr}
 8010b4a:	4604      	mov	r4, r0
 8010b4c:	f7f1 fa98 	bl	8002080 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010b50:	6863      	ldr	r3, [r4, #4]
 8010b52:	2200      	movs	r2, #0
 8010b54:	729a      	strb	r2, [r3, #10]
 8010b56:	bd10      	pop	{r4, pc}

08010b58 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010b58:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010b5a:	301c      	adds	r0, #28
 8010b5c:	f016 b86a 	b.w	8026c34 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010b60 <_ZN8touchgfx3HAL5touchEll>:
 8010b60:	b530      	push	{r4, r5, lr}
 8010b62:	b087      	sub	sp, #28
 8010b64:	4604      	mov	r4, r0
 8010b66:	a804      	add	r0, sp, #16
 8010b68:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010b6c:	f004 fe5c 	bl	8015828 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010b70:	9b04      	ldr	r3, [sp, #16]
 8010b72:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010b76:	a906      	add	r1, sp, #24
 8010b78:	9b05      	ldr	r3, [sp, #20]
 8010b7a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010b7e:	a803      	add	r0, sp, #12
 8010b80:	f004 fea4 	bl	80158cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010b84:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010b88:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010b8c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010b90:	f104 001c 	add.w	r0, r4, #28
 8010b94:	b189      	cbz	r1, 8010bba <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010b96:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010b9a:	9300      	str	r3, [sp, #0]
 8010b9c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010ba0:	4613      	mov	r3, r2
 8010ba2:	462a      	mov	r2, r5
 8010ba4:	f016 f856 	bl	8026c54 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010ba8:	b128      	cbz	r0, 8010bb6 <_ZN8touchgfx3HAL5touchEll+0x56>
 8010baa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010bae:	6623      	str	r3, [r4, #96]	; 0x60
 8010bb0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010bb4:	6663      	str	r3, [r4, #100]	; 0x64
 8010bb6:	b007      	add	sp, #28
 8010bb8:	bd30      	pop	{r4, r5, pc}
 8010bba:	f016 f88b 	bl	8026cd4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010bbe:	2301      	movs	r3, #1
 8010bc0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010bc4:	e7f1      	b.n	8010baa <_ZN8touchgfx3HAL5touchEll+0x4a>

08010bc6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010bc6:	b510      	push	{r4, lr}
 8010bc8:	2b00      	cmp	r3, #0
 8010bca:	d046      	beq.n	8010c5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010bcc:	ea81 0002 	eor.w	r0, r1, r2
 8010bd0:	07c4      	lsls	r4, r0, #31
 8010bd2:	d508      	bpl.n	8010be6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010bd4:	440b      	add	r3, r1
 8010bd6:	3a01      	subs	r2, #1
 8010bd8:	428b      	cmp	r3, r1
 8010bda:	d93e      	bls.n	8010c5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010bdc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010be0:	f801 0b01 	strb.w	r0, [r1], #1
 8010be4:	e7f8      	b.n	8010bd8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010be6:	07d0      	lsls	r0, r2, #31
 8010be8:	bf42      	ittt	mi
 8010bea:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010bee:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010bf2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010bf6:	2b01      	cmp	r3, #1
 8010bf8:	d911      	bls.n	8010c1e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010bfa:	ea81 0402 	eor.w	r4, r1, r2
 8010bfe:	07a4      	lsls	r4, r4, #30
 8010c00:	4610      	mov	r0, r2
 8010c02:	d022      	beq.n	8010c4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010c04:	f023 0401 	bic.w	r4, r3, #1
 8010c08:	440c      	add	r4, r1
 8010c0a:	428c      	cmp	r4, r1
 8010c0c:	4602      	mov	r2, r0
 8010c0e:	d904      	bls.n	8010c1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010c10:	8812      	ldrh	r2, [r2, #0]
 8010c12:	f821 2b02 	strh.w	r2, [r1], #2
 8010c16:	3002      	adds	r0, #2
 8010c18:	e7f7      	b.n	8010c0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010c1a:	f003 0301 	and.w	r3, r3, #1
 8010c1e:	f023 0003 	bic.w	r0, r3, #3
 8010c22:	4408      	add	r0, r1
 8010c24:	4288      	cmp	r0, r1
 8010c26:	4614      	mov	r4, r2
 8010c28:	d904      	bls.n	8010c34 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010c2a:	6824      	ldr	r4, [r4, #0]
 8010c2c:	f841 4b04 	str.w	r4, [r1], #4
 8010c30:	3204      	adds	r2, #4
 8010c32:	e7f7      	b.n	8010c24 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010c34:	f003 0303 	and.w	r3, r3, #3
 8010c38:	440b      	add	r3, r1
 8010c3a:	3a01      	subs	r2, #1
 8010c3c:	428b      	cmp	r3, r1
 8010c3e:	d90c      	bls.n	8010c5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010c40:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010c44:	f801 0b01 	strb.w	r0, [r1], #1
 8010c48:	e7f8      	b.n	8010c3c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010c4a:	0790      	lsls	r0, r2, #30
 8010c4c:	d0e7      	beq.n	8010c1e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010c4e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010c52:	f821 0b02 	strh.w	r0, [r1], #2
 8010c56:	3b02      	subs	r3, #2
 8010c58:	e7e1      	b.n	8010c1e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010c5a:	2001      	movs	r0, #1
 8010c5c:	bd10      	pop	{r4, pc}

08010c5e <_ZN8touchgfx3HAL7noTouchEv>:
 8010c5e:	b510      	push	{r4, lr}
 8010c60:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8010c64:	4604      	mov	r4, r0
 8010c66:	b153      	cbz	r3, 8010c7e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010c68:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010c6c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010c70:	2101      	movs	r1, #1
 8010c72:	301c      	adds	r0, #28
 8010c74:	f016 f82e 	bl	8026cd4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010c78:	2300      	movs	r3, #0
 8010c7a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010c7e:	bd10      	pop	{r4, pc}

08010c80 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010c80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010c84:	b085      	sub	sp, #20
 8010c86:	ad04      	add	r5, sp, #16
 8010c88:	4604      	mov	r4, r0
 8010c8a:	2000      	movs	r0, #0
 8010c8c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010c90:	69a0      	ldr	r0, [r4, #24]
 8010c92:	6806      	ldr	r6, [r0, #0]
 8010c94:	9501      	str	r5, [sp, #4]
 8010c96:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010c9a:	9500      	str	r5, [sp, #0]
 8010c9c:	6835      	ldr	r5, [r6, #0]
 8010c9e:	4699      	mov	r9, r3
 8010ca0:	460f      	mov	r7, r1
 8010ca2:	4690      	mov	r8, r2
 8010ca4:	47a8      	blx	r5
 8010ca6:	4d10      	ldr	r5, [pc, #64]	; (8010ce8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010ca8:	4606      	mov	r6, r0
 8010caa:	f8a5 9000 	strh.w	r9, [r5]
 8010cae:	f7f3 f84d 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8010cb2:	6803      	ldr	r3, [r0, #0]
 8010cb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010cb6:	4798      	blx	r3
 8010cb8:	b128      	cbz	r0, 8010cc6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010cba:	2801      	cmp	r0, #1
 8010cbc:	d00b      	beq.n	8010cd6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010cbe:	4630      	mov	r0, r6
 8010cc0:	b005      	add	sp, #20
 8010cc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010cc6:	882b      	ldrh	r3, [r5, #0]
 8010cc8:	fb08 7203 	mla	r2, r8, r3, r7
 8010ccc:	9b03      	ldr	r3, [sp, #12]
 8010cce:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010cd2:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010cd4:	e7f3      	b.n	8010cbe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010cd6:	882a      	ldrh	r2, [r5, #0]
 8010cd8:	9b03      	ldr	r3, [sp, #12]
 8010cda:	fb08 7202 	mla	r2, r8, r2, r7
 8010cde:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010ce2:	1a9a      	subs	r2, r3, r2
 8010ce4:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010ce6:	e7ea      	b.n	8010cbe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010ce8:	200132b6 	.word	0x200132b6

08010cec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010cec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010cee:	b08b      	sub	sp, #44	; 0x2c
 8010cf0:	4617      	mov	r7, r2
 8010cf2:	4604      	mov	r4, r0
 8010cf4:	460e      	mov	r6, r1
 8010cf6:	461d      	mov	r5, r3
 8010cf8:	f7f3 f828 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8010cfc:	6803      	ldr	r3, [r0, #0]
 8010cfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d00:	4798      	blx	r3
 8010d02:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010d06:	9007      	str	r0, [sp, #28]
 8010d08:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010d0c:	4b0d      	ldr	r3, [pc, #52]	; (8010d44 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010d0e:	6822      	ldr	r2, [r4, #0]
 8010d10:	881b      	ldrh	r3, [r3, #0]
 8010d12:	9306      	str	r3, [sp, #24]
 8010d14:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010d18:	9305      	str	r3, [sp, #20]
 8010d1a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010d1e:	9304      	str	r3, [sp, #16]
 8010d20:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010d24:	9303      	str	r3, [sp, #12]
 8010d26:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010d2a:	9302      	str	r3, [sp, #8]
 8010d2c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010d30:	e9cd 5300 	strd	r5, r3, [sp]
 8010d34:	4631      	mov	r1, r6
 8010d36:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010d38:	463b      	mov	r3, r7
 8010d3a:	2200      	movs	r2, #0
 8010d3c:	4620      	mov	r0, r4
 8010d3e:	47a8      	blx	r5
 8010d40:	b00b      	add	sp, #44	; 0x2c
 8010d42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d44:	200132b6 	.word	0x200132b6

08010d48 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010d48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010d4c:	4698      	mov	r8, r3
 8010d4e:	6803      	ldr	r3, [r0, #0]
 8010d50:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8010d52:	4b15      	ldr	r3, [pc, #84]	; (8010da8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010d54:	b08b      	sub	sp, #44	; 0x2c
 8010d56:	4617      	mov	r7, r2
 8010d58:	f8b3 9000 	ldrh.w	r9, [r3]
 8010d5c:	460e      	mov	r6, r1
 8010d5e:	4604      	mov	r4, r0
 8010d60:	f7f2 fff4 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8010d64:	6803      	ldr	r3, [r0, #0]
 8010d66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d68:	4798      	blx	r3
 8010d6a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010d6e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010d72:	2302      	movs	r3, #2
 8010d74:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010d78:	2301      	movs	r3, #1
 8010d7a:	9305      	str	r3, [sp, #20]
 8010d7c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010d80:	9304      	str	r3, [sp, #16]
 8010d82:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010d86:	9303      	str	r3, [sp, #12]
 8010d88:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010d8c:	9302      	str	r3, [sp, #8]
 8010d8e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010d92:	2200      	movs	r2, #0
 8010d94:	e9cd 8300 	strd	r8, r3, [sp]
 8010d98:	4631      	mov	r1, r6
 8010d9a:	463b      	mov	r3, r7
 8010d9c:	4620      	mov	r0, r4
 8010d9e:	47a8      	blx	r5
 8010da0:	b00b      	add	sp, #44	; 0x2c
 8010da2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010da6:	bf00      	nop
 8010da8:	200132b6 	.word	0x200132b6

08010dac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010dac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010db0:	4698      	mov	r8, r3
 8010db2:	6803      	ldr	r3, [r0, #0]
 8010db4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8010db6:	4b11      	ldr	r3, [pc, #68]	; (8010dfc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010db8:	b087      	sub	sp, #28
 8010dba:	f8b3 9000 	ldrh.w	r9, [r3]
 8010dbe:	460e      	mov	r6, r1
 8010dc0:	4617      	mov	r7, r2
 8010dc2:	4604      	mov	r4, r0
 8010dc4:	f7f2 ffc2 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8010dc8:	6803      	ldr	r3, [r0, #0]
 8010dca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010dcc:	4798      	blx	r3
 8010dce:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010dd2:	f8cd 900c 	str.w	r9, [sp, #12]
 8010dd6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010dda:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010dde:	9302      	str	r3, [sp, #8]
 8010de0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010de4:	9301      	str	r3, [sp, #4]
 8010de6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010dea:	9300      	str	r3, [sp, #0]
 8010dec:	463a      	mov	r2, r7
 8010dee:	4643      	mov	r3, r8
 8010df0:	4631      	mov	r1, r6
 8010df2:	4620      	mov	r0, r4
 8010df4:	47a8      	blx	r5
 8010df6:	b007      	add	sp, #28
 8010df8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010dfc:	200132b6 	.word	0x200132b6

08010e00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e04:	4604      	mov	r4, r0
 8010e06:	b08f      	sub	sp, #60	; 0x3c
 8010e08:	4610      	mov	r0, r2
 8010e0a:	460d      	mov	r5, r1
 8010e0c:	4691      	mov	r9, r2
 8010e0e:	461e      	mov	r6, r3
 8010e10:	f008 fafa 	bl	8019408 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010e14:	2800      	cmp	r0, #0
 8010e16:	f000 809d 	beq.w	8010f54 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010e1a:	6823      	ldr	r3, [r4, #0]
 8010e1c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010fb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010e20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010e22:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010fbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8010e26:	4f61      	ldr	r7, [pc, #388]	; (8010fac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010e28:	4620      	mov	r0, r4
 8010e2a:	4798      	blx	r3
 8010e2c:	6823      	ldr	r3, [r4, #0]
 8010e2e:	4620      	mov	r0, r4
 8010e30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010e32:	4798      	blx	r3
 8010e34:	f8bb 3000 	ldrh.w	r3, [fp]
 8010e38:	9301      	str	r3, [sp, #4]
 8010e3a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010e3e:	f8ba 3000 	ldrh.w	r3, [sl]
 8010e42:	9302      	str	r3, [sp, #8]
 8010e44:	883b      	ldrh	r3, [r7, #0]
 8010e46:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010e4a:	9303      	str	r3, [sp, #12]
 8010e4c:	4b58      	ldr	r3, [pc, #352]	; (8010fb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010e4e:	9305      	str	r3, [sp, #20]
 8010e50:	881a      	ldrh	r2, [r3, #0]
 8010e52:	9204      	str	r2, [sp, #16]
 8010e54:	4640      	mov	r0, r8
 8010e56:	f008 fb6b 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010e5a:	8038      	strh	r0, [r7, #0]
 8010e5c:	4640      	mov	r0, r8
 8010e5e:	f008 fb9b 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010e62:	9b05      	ldr	r3, [sp, #20]
 8010e64:	b280      	uxth	r0, r0
 8010e66:	8018      	strh	r0, [r3, #0]
 8010e68:	4b52      	ldr	r3, [pc, #328]	; (8010fb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010e6a:	781b      	ldrb	r3, [r3, #0]
 8010e6c:	2b00      	cmp	r3, #0
 8010e6e:	d174      	bne.n	8010f5a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010e70:	883b      	ldrh	r3, [r7, #0]
 8010e72:	f8ab 3000 	strh.w	r3, [fp]
 8010e76:	f8aa 0000 	strh.w	r0, [sl]
 8010e7a:	4648      	mov	r0, r9
 8010e7c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010e80:	f008 fac2 	bl	8019408 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010e84:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010e88:	2200      	movs	r2, #0
 8010e8a:	4611      	mov	r1, r2
 8010e8c:	4628      	mov	r0, r5
 8010e8e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8010e92:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8010e96:	f7f1 fd5f 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8010e9a:	2301      	movs	r3, #1
 8010e9c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010ea0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8010ea4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010ea8:	2b00      	cmp	r3, #0
 8010eaa:	dd5c      	ble.n	8010f66 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010eac:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010eb0:	2b00      	cmp	r3, #0
 8010eb2:	dd58      	ble.n	8010f66 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010eb4:	462a      	mov	r2, r5
 8010eb6:	ab0a      	add	r3, sp, #40	; 0x28
 8010eb8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010ebc:	6851      	ldr	r1, [r2, #4]
 8010ebe:	c303      	stmia	r3!, {r0, r1}
 8010ec0:	4631      	mov	r1, r6
 8010ec2:	a80a      	add	r0, sp, #40	; 0x28
 8010ec4:	f7fe ff92 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 8010ec8:	4b38      	ldr	r3, [pc, #224]	; (8010fac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010eca:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010ece:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010ed2:	2100      	movs	r1, #0
 8010ed4:	aa0a      	add	r2, sp, #40	; 0x28
 8010ed6:	4b36      	ldr	r3, [pc, #216]	; (8010fb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010ed8:	910c      	str	r1, [sp, #48]	; 0x30
 8010eda:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010ede:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ee2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010ee6:	ab08      	add	r3, sp, #32
 8010ee8:	e883 0003 	stmia.w	r3, {r0, r1}
 8010eec:	4618      	mov	r0, r3
 8010eee:	a90c      	add	r1, sp, #48	; 0x30
 8010ef0:	f7fe ff7c 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 8010ef4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8010ef6:	2b00      	cmp	r3, #0
 8010ef8:	d13c      	bne.n	8010f74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010efa:	2000      	movs	r0, #0
 8010efc:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010f00:	2600      	movs	r6, #0
 8010f02:	682a      	ldr	r2, [r5, #0]
 8010f04:	696b      	ldr	r3, [r5, #20]
 8010f06:	616e      	str	r6, [r5, #20]
 8010f08:	9305      	str	r3, [sp, #20]
 8010f0a:	6892      	ldr	r2, [r2, #8]
 8010f0c:	a908      	add	r1, sp, #32
 8010f0e:	4628      	mov	r0, r5
 8010f10:	4790      	blx	r2
 8010f12:	9b05      	ldr	r3, [sp, #20]
 8010f14:	616b      	str	r3, [r5, #20]
 8010f16:	4652      	mov	r2, sl
 8010f18:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010f1c:	4649      	mov	r1, r9
 8010f1e:	4628      	mov	r0, r5
 8010f20:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8010f24:	f7f1 fd18 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8010f28:	4b23      	ldr	r3, [pc, #140]	; (8010fb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010f2a:	9a01      	ldr	r2, [sp, #4]
 8010f2c:	801a      	strh	r2, [r3, #0]
 8010f2e:	4b23      	ldr	r3, [pc, #140]	; (8010fbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010f30:	9a02      	ldr	r2, [sp, #8]
 8010f32:	801a      	strh	r2, [r3, #0]
 8010f34:	4b1d      	ldr	r3, [pc, #116]	; (8010fac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010f36:	9a03      	ldr	r2, [sp, #12]
 8010f38:	801a      	strh	r2, [r3, #0]
 8010f3a:	4b1d      	ldr	r3, [pc, #116]	; (8010fb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010f3c:	9a04      	ldr	r2, [sp, #16]
 8010f3e:	801a      	strh	r2, [r3, #0]
 8010f40:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8010f44:	6823      	ldr	r3, [r4, #0]
 8010f46:	4620      	mov	r0, r4
 8010f48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010f4a:	4798      	blx	r3
 8010f4c:	6823      	ldr	r3, [r4, #0]
 8010f4e:	4620      	mov	r0, r4
 8010f50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f52:	4798      	blx	r3
 8010f54:	b00f      	add	sp, #60	; 0x3c
 8010f56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f5a:	883b      	ldrh	r3, [r7, #0]
 8010f5c:	f8ab 0000 	strh.w	r0, [fp]
 8010f60:	f8aa 3000 	strh.w	r3, [sl]
 8010f64:	e789      	b.n	8010e7a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8010f66:	462a      	mov	r2, r5
 8010f68:	ab0a      	add	r3, sp, #40	; 0x28
 8010f6a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010f6e:	6851      	ldr	r1, [r2, #4]
 8010f70:	c303      	stmia	r3!, {r0, r1}
 8010f72:	e7a9      	b.n	8010ec8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8010f74:	a807      	add	r0, sp, #28
 8010f76:	f008 fc4b 	bl	8019810 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010f7a:	4606      	mov	r6, r0
 8010f7c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010f7e:	6803      	ldr	r3, [r0, #0]
 8010f80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f82:	4798      	blx	r3
 8010f84:	4286      	cmp	r6, r0
 8010f86:	d1b8      	bne.n	8010efa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010f88:	f7f2 fee0 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8010f8c:	6803      	ldr	r3, [r0, #0]
 8010f8e:	4606      	mov	r6, r0
 8010f90:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010f92:	9305      	str	r3, [sp, #20]
 8010f94:	a807      	add	r0, sp, #28
 8010f96:	f008 fc3b 	bl	8019810 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010f9a:	9b05      	ldr	r3, [sp, #20]
 8010f9c:	4601      	mov	r1, r0
 8010f9e:	4630      	mov	r0, r6
 8010fa0:	4798      	blx	r3
 8010fa2:	f080 0001 	eor.w	r0, r0, #1
 8010fa6:	b2c0      	uxtb	r0, r0
 8010fa8:	e7a8      	b.n	8010efc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010faa:	bf00      	nop
 8010fac:	200132b0 	.word	0x200132b0
 8010fb0:	200132b2 	.word	0x200132b2
 8010fb4:	200132b4 	.word	0x200132b4
 8010fb8:	200132b6 	.word	0x200132b6
 8010fbc:	200132b8 	.word	0x200132b8

08010fc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010fc0:	b510      	push	{r4, lr}
 8010fc2:	4b07      	ldr	r3, [pc, #28]	; (8010fe0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8010fc4:	781b      	ldrb	r3, [r3, #0]
 8010fc6:	4604      	mov	r4, r0
 8010fc8:	b13b      	cbz	r3, 8010fda <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010fca:	6803      	ldr	r3, [r0, #0]
 8010fcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010fce:	4798      	blx	r3
 8010fd0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010fd2:	4283      	cmp	r3, r0
 8010fd4:	d101      	bne.n	8010fda <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010fd6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010fd8:	bd10      	pop	{r4, pc}
 8010fda:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010fdc:	e7fc      	b.n	8010fd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010fde:	bf00      	nop
 8010fe0:	200132ba 	.word	0x200132ba

08010fe4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8010fe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010fe8:	b08a      	sub	sp, #40	; 0x28
 8010fea:	461d      	mov	r5, r3
 8010fec:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010ff0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010ff4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010ff8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010ffc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011000:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011004:	2400      	movs	r4, #0
 8011006:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801100a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801100e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011012:	4690      	mov	r8, r2
 8011014:	4607      	mov	r7, r0
 8011016:	9404      	str	r4, [sp, #16]
 8011018:	f88d 4020 	strb.w	r4, [sp, #32]
 801101c:	f7ff ffd0 	bl	8010fc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011020:	fb06 8505 	mla	r5, r6, r5, r8
 8011024:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011028:	6878      	ldr	r0, [r7, #4]
 801102a:	9505      	str	r5, [sp, #20]
 801102c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011030:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011034:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011038:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801103c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011040:	6803      	ldr	r3, [r0, #0]
 8011042:	a901      	add	r1, sp, #4
 8011044:	685b      	ldr	r3, [r3, #4]
 8011046:	4798      	blx	r3
 8011048:	b00a      	add	sp, #40	; 0x28
 801104a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801104e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801104e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011052:	b08b      	sub	sp, #44	; 0x2c
 8011054:	2400      	movs	r4, #0
 8011056:	461d      	mov	r5, r3
 8011058:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801105c:	4688      	mov	r8, r1
 801105e:	4691      	mov	r9, r2
 8011060:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8011064:	9404      	str	r4, [sp, #16]
 8011066:	4607      	mov	r7, r0
 8011068:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801106c:	f7ff ffa8 	bl	8010fc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011070:	fb06 9505 	mla	r5, r6, r5, r9
 8011074:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011078:	f8ad 3018 	strh.w	r3, [sp, #24]
 801107c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011080:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011084:	6878      	ldr	r0, [r7, #4]
 8011086:	9505      	str	r5, [sp, #20]
 8011088:	f8ad 301a 	strh.w	r3, [sp, #26]
 801108c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011090:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011094:	f8cd 8010 	str.w	r8, [sp, #16]
 8011098:	f8ad 4020 	strh.w	r4, [sp, #32]
 801109c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80110a0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80110a4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80110a8:	6803      	ldr	r3, [r0, #0]
 80110aa:	a901      	add	r1, sp, #4
 80110ac:	685b      	ldr	r3, [r3, #4]
 80110ae:	4798      	blx	r3
 80110b0:	b00b      	add	sp, #44	; 0x2c
 80110b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080110b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80110b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80110bc:	b08a      	sub	sp, #40	; 0x28
 80110be:	4698      	mov	r8, r3
 80110c0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80110c4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80110c8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80110cc:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80110d0:	2300      	movs	r3, #0
 80110d2:	2d0b      	cmp	r5, #11
 80110d4:	4606      	mov	r6, r0
 80110d6:	9304      	str	r3, [sp, #16]
 80110d8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80110dc:	d138      	bne.n	8011150 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80110de:	2380      	movs	r3, #128	; 0x80
 80110e0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80110e4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80110e8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80110ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80110f0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80110f4:	f88d 0020 	strb.w	r0, [sp, #32]
 80110f8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80110fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011100:	4630      	mov	r0, r6
 8011102:	9203      	str	r2, [sp, #12]
 8011104:	f7ff ff5c 	bl	8010fc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011108:	2c0b      	cmp	r4, #11
 801110a:	bf98      	it	ls
 801110c:	4b1b      	ldrls	r3, [pc, #108]	; (801117c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801110e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8011112:	bf98      	it	ls
 8011114:	5d19      	ldrbls	r1, [r3, r4]
 8011116:	f8ad 701e 	strh.w	r7, [sp, #30]
 801111a:	bf88      	it	hi
 801111c:	2100      	movhi	r1, #0
 801111e:	fb02 8307 	mla	r3, r2, r7, r8
 8011122:	10c9      	asrs	r1, r1, #3
 8011124:	fb01 0003 	mla	r0, r1, r3, r0
 8011128:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 801112c:	9005      	str	r0, [sp, #20]
 801112e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011132:	6870      	ldr	r0, [r6, #4]
 8011134:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011138:	2300      	movs	r3, #0
 801113a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801113e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011142:	6803      	ldr	r3, [r0, #0]
 8011144:	a901      	add	r1, sp, #4
 8011146:	685b      	ldr	r3, [r3, #4]
 8011148:	4798      	blx	r3
 801114a:	b00a      	add	sp, #40	; 0x28
 801114c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011150:	2d02      	cmp	r5, #2
 8011152:	d109      	bne.n	8011168 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011154:	28ff      	cmp	r0, #255	; 0xff
 8011156:	d105      	bne.n	8011164 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011158:	f1bc 0f00 	cmp.w	ip, #0
 801115c:	bf14      	ite	ne
 801115e:	2340      	movne	r3, #64	; 0x40
 8011160:	2320      	moveq	r3, #32
 8011162:	e7bd      	b.n	80110e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011164:	2340      	movs	r3, #64	; 0x40
 8011166:	e7bb      	b.n	80110e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011168:	28ff      	cmp	r0, #255	; 0xff
 801116a:	d105      	bne.n	8011178 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801116c:	f1bc 0f00 	cmp.w	ip, #0
 8011170:	bf14      	ite	ne
 8011172:	2304      	movne	r3, #4
 8011174:	2301      	moveq	r3, #1
 8011176:	e7b3      	b.n	80110e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011178:	2304      	movs	r3, #4
 801117a:	e7b1      	b.n	80110e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801117c:	0802e800 	.word	0x0802e800

08011180 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011184:	b08b      	sub	sp, #44	; 0x2c
 8011186:	461d      	mov	r5, r3
 8011188:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801118c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011190:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8011194:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011198:	bf14      	ite	ne
 801119a:	2308      	movne	r3, #8
 801119c:	2302      	moveq	r3, #2
 801119e:	2400      	movs	r4, #0
 80111a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80111a4:	4688      	mov	r8, r1
 80111a6:	4693      	mov	fp, r2
 80111a8:	9404      	str	r4, [sp, #16]
 80111aa:	4607      	mov	r7, r0
 80111ac:	f7ff ff08 	bl	8010fc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80111b0:	2e0b      	cmp	r6, #11
 80111b2:	bf98      	it	ls
 80111b4:	4b15      	ldrls	r3, [pc, #84]	; (801120c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80111b6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80111ba:	bf98      	it	ls
 80111bc:	5d9c      	ldrbls	r4, [r3, r6]
 80111be:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80111c2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80111c6:	fb05 b50a 	mla	r5, r5, sl, fp
 80111ca:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80111ce:	f8ad 301a 	strh.w	r3, [sp, #26]
 80111d2:	10e4      	asrs	r4, r4, #3
 80111d4:	fb04 0405 	mla	r4, r4, r5, r0
 80111d8:	2300      	movs	r3, #0
 80111da:	6878      	ldr	r0, [r7, #4]
 80111dc:	9405      	str	r4, [sp, #20]
 80111de:	f8ad 301c 	strh.w	r3, [sp, #28]
 80111e2:	f8ad a01e 	strh.w	sl, [sp, #30]
 80111e6:	f8cd 8010 	str.w	r8, [sp, #16]
 80111ea:	f88d 9020 	strb.w	r9, [sp, #32]
 80111ee:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 80111f2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80111f6:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80111fa:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80111fe:	6803      	ldr	r3, [r0, #0]
 8011200:	a901      	add	r1, sp, #4
 8011202:	685b      	ldr	r3, [r3, #4]
 8011204:	4798      	blx	r3
 8011206:	b00b      	add	sp, #44	; 0x2c
 8011208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801120c:	0802e800 	.word	0x0802e800

08011210 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011210:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011214:	461e      	mov	r6, r3
 8011216:	4b0a      	ldr	r3, [pc, #40]	; (8011240 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011218:	460f      	mov	r7, r1
 801121a:	881d      	ldrh	r5, [r3, #0]
 801121c:	4690      	mov	r8, r2
 801121e:	f7f2 fd95 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8011222:	6803      	ldr	r3, [r0, #0]
 8011224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011226:	4798      	blx	r3
 8011228:	280b      	cmp	r0, #11
 801122a:	bf9a      	itte	ls
 801122c:	4b05      	ldrls	r3, [pc, #20]	; (8011244 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801122e:	5c1c      	ldrbls	r4, [r3, r0]
 8011230:	2400      	movhi	r4, #0
 8011232:	fb08 7005 	mla	r0, r8, r5, r7
 8011236:	10e4      	asrs	r4, r4, #3
 8011238:	fb04 6000 	mla	r0, r4, r0, r6
 801123c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011240:	200132b6 	.word	0x200132b6
 8011244:	0802e800 	.word	0x0802e800

08011248 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011248:	b5f0      	push	{r4, r5, r6, r7, lr}
 801124a:	b08b      	sub	sp, #44	; 0x2c
 801124c:	461f      	mov	r7, r3
 801124e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011252:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011256:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801125a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801125e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011262:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011266:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801126a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801126e:	2500      	movs	r5, #0
 8011270:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011274:	f88d 3020 	strb.w	r3, [sp, #32]
 8011278:	4604      	mov	r4, r0
 801127a:	4616      	mov	r6, r2
 801127c:	9504      	str	r5, [sp, #16]
 801127e:	f7ff fe9f 	bl	8010fc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011282:	463a      	mov	r2, r7
 8011284:	4631      	mov	r1, r6
 8011286:	4603      	mov	r3, r0
 8011288:	4620      	mov	r0, r4
 801128a:	f7ff ffc1 	bl	8011210 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801128e:	4b0e      	ldr	r3, [pc, #56]	; (80112c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011290:	9005      	str	r0, [sp, #20]
 8011292:	881b      	ldrh	r3, [r3, #0]
 8011294:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011298:	f7f2 fd58 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 801129c:	6803      	ldr	r3, [r0, #0]
 801129e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112a0:	4798      	blx	r3
 80112a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80112a4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80112a8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80112ac:	9304      	str	r3, [sp, #16]
 80112ae:	6860      	ldr	r0, [r4, #4]
 80112b0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80112b4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80112b8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80112bc:	6803      	ldr	r3, [r0, #0]
 80112be:	a901      	add	r1, sp, #4
 80112c0:	685b      	ldr	r3, [r3, #4]
 80112c2:	4798      	blx	r3
 80112c4:	b00b      	add	sp, #44	; 0x2c
 80112c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80112c8:	200132b6 	.word	0x200132b6

080112cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80112cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112ce:	b08d      	sub	sp, #52	; 0x34
 80112d0:	466b      	mov	r3, sp
 80112d2:	e883 0006 	stmia.w	r3, {r1, r2}
 80112d6:	2300      	movs	r3, #0
 80112d8:	9306      	str	r3, [sp, #24]
 80112da:	6803      	ldr	r3, [r0, #0]
 80112dc:	f8bd 6000 	ldrh.w	r6, [sp]
 80112e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80112e2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80112e6:	2501      	movs	r5, #1
 80112e8:	9503      	str	r5, [sp, #12]
 80112ea:	4604      	mov	r4, r0
 80112ec:	4798      	blx	r3
 80112ee:	463a      	mov	r2, r7
 80112f0:	4631      	mov	r1, r6
 80112f2:	4603      	mov	r3, r0
 80112f4:	4620      	mov	r0, r4
 80112f6:	f7ff ff8b 	bl	8011210 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80112fa:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80112fc:	9307      	str	r3, [sp, #28]
 80112fe:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011302:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011306:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801130a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801130e:	4b0f      	ldr	r3, [pc, #60]	; (801134c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011310:	9004      	str	r0, [sp, #16]
 8011312:	881b      	ldrh	r3, [r3, #0]
 8011314:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011318:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801131c:	f7f2 fd16 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8011320:	6803      	ldr	r3, [r0, #0]
 8011322:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011324:	4798      	blx	r3
 8011326:	23ff      	movs	r3, #255	; 0xff
 8011328:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801132c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011330:	6860      	ldr	r0, [r4, #4]
 8011332:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011336:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801133a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801133e:	6803      	ldr	r3, [r0, #0]
 8011340:	a903      	add	r1, sp, #12
 8011342:	685b      	ldr	r3, [r3, #4]
 8011344:	4798      	blx	r3
 8011346:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011348:	b00d      	add	sp, #52	; 0x34
 801134a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801134c:	200132b6 	.word	0x200132b6

08011350 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011350:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011354:	b08c      	sub	sp, #48	; 0x30
 8011356:	461e      	mov	r6, r3
 8011358:	466d      	mov	r5, sp
 801135a:	2300      	movs	r3, #0
 801135c:	e885 0006 	stmia.w	r5, {r1, r2}
 8011360:	9306      	str	r3, [sp, #24]
 8011362:	6803      	ldr	r3, [r0, #0]
 8011364:	f8bd 7000 	ldrh.w	r7, [sp]
 8011368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801136a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801136e:	2501      	movs	r5, #1
 8011370:	9503      	str	r5, [sp, #12]
 8011372:	4604      	mov	r4, r0
 8011374:	4798      	blx	r3
 8011376:	4642      	mov	r2, r8
 8011378:	4639      	mov	r1, r7
 801137a:	4603      	mov	r3, r0
 801137c:	4620      	mov	r0, r4
 801137e:	f7ff ff47 	bl	8011210 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011382:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011386:	f8ad 3020 	strh.w	r3, [sp, #32]
 801138a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801138e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011392:	4b11      	ldr	r3, [pc, #68]	; (80113d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011394:	9004      	str	r0, [sp, #16]
 8011396:	881b      	ldrh	r3, [r3, #0]
 8011398:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801139c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801139e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80113a2:	9607      	str	r6, [sp, #28]
 80113a4:	f7f2 fcd2 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 80113a8:	6803      	ldr	r3, [r0, #0]
 80113aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80113ac:	4798      	blx	r3
 80113ae:	23ff      	movs	r3, #255	; 0xff
 80113b0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80113b4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80113b8:	6860      	ldr	r0, [r4, #4]
 80113ba:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80113be:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80113c2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80113c6:	6803      	ldr	r3, [r0, #0]
 80113c8:	a903      	add	r1, sp, #12
 80113ca:	685b      	ldr	r3, [r3, #4]
 80113cc:	4798      	blx	r3
 80113ce:	4630      	mov	r0, r6
 80113d0:	b00c      	add	sp, #48	; 0x30
 80113d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113d6:	bf00      	nop
 80113d8:	200132b6 	.word	0x200132b6

080113dc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80113dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80113de:	b085      	sub	sp, #20
 80113e0:	ac02      	add	r4, sp, #8
 80113e2:	e884 0006 	stmia.w	r4, {r1, r2}
 80113e6:	4605      	mov	r5, r0
 80113e8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80113ec:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80113f0:	f7ff fde6 	bl	8010fc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80113f4:	463a      	mov	r2, r7
 80113f6:	4603      	mov	r3, r0
 80113f8:	4631      	mov	r1, r6
 80113fa:	4628      	mov	r0, r5
 80113fc:	f7ff ff08 	bl	8011210 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011400:	4a05      	ldr	r2, [pc, #20]	; (8011418 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8011402:	682b      	ldr	r3, [r5, #0]
 8011404:	8812      	ldrh	r2, [r2, #0]
 8011406:	9200      	str	r2, [sp, #0]
 8011408:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801140a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801140e:	4603      	mov	r3, r0
 8011410:	4628      	mov	r0, r5
 8011412:	47b0      	blx	r6
 8011414:	b005      	add	sp, #20
 8011416:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011418:	200132b6 	.word	0x200132b6

0801141c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801141c:	b570      	push	{r4, r5, r6, lr}
 801141e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8011422:	4604      	mov	r4, r0
 8011424:	b19b      	cbz	r3, 801144e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8011426:	2002      	movs	r0, #2
 8011428:	f7f0 fcea 	bl	8001e00 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801142c:	2300      	movs	r3, #0
 801142e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8011432:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8011436:	6823      	ldr	r3, [r4, #0]
 8011438:	4620      	mov	r0, r4
 801143a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801143e:	f7ff fdbf 	bl	8010fc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011442:	462b      	mov	r3, r5
 8011444:	4601      	mov	r1, r0
 8011446:	4620      	mov	r0, r4
 8011448:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801144c:	4718      	bx	r3
 801144e:	bd70      	pop	{r4, r5, r6, pc}

08011450 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011450:	b538      	push	{r3, r4, r5, lr}
 8011452:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8011456:	428b      	cmp	r3, r1
 8011458:	4604      	mov	r4, r0
 801145a:	460d      	mov	r5, r1
 801145c:	d006      	beq.n	801146c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801145e:	6803      	ldr	r3, [r0, #0]
 8011460:	b929      	cbnz	r1, 801146e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011462:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011466:	4798      	blx	r3
 8011468:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801146c:	bd38      	pop	{r3, r4, r5, pc}
 801146e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011472:	e7f8      	b.n	8011466 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011474 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011474:	b510      	push	{r4, lr}
 8011476:	4b0d      	ldr	r3, [pc, #52]	; (80114ac <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011478:	781b      	ldrb	r3, [r3, #0]
 801147a:	4604      	mov	r4, r0
 801147c:	b95b      	cbnz	r3, 8011496 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801147e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8011482:	2b02      	cmp	r3, #2
 8011484:	d007      	beq.n	8011496 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011486:	6840      	ldr	r0, [r0, #4]
 8011488:	f000 f92c 	bl	80116e4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801148c:	b118      	cbz	r0, 8011496 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801148e:	6862      	ldr	r2, [r4, #4]
 8011490:	7a53      	ldrb	r3, [r2, #9]
 8011492:	2b00      	cmp	r3, #0
 8011494:	d0fc      	beq.n	8011490 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8011496:	f7f0 fdeb 	bl	8002070 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801149a:	4620      	mov	r0, r4
 801149c:	2100      	movs	r1, #0
 801149e:	f7ff ffd7 	bl	8011450 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80114a2:	4620      	mov	r0, r4
 80114a4:	f7ff fd8c 	bl	8010fc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80114a8:	bd10      	pop	{r4, pc}
 80114aa:	bf00      	nop
 80114ac:	200132ba 	.word	0x200132ba

080114b0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80114b0:	b570      	push	{r4, r5, r6, lr}
 80114b2:	4604      	mov	r4, r0
 80114b4:	6803      	ldr	r3, [r0, #0]
 80114b6:	b919      	cbnz	r1, 80114c0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80114b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80114ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114be:	4718      	bx	r3
 80114c0:	2200      	movs	r2, #0
 80114c2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80114c6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80114ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80114cc:	4798      	blx	r3
 80114ce:	6863      	ldr	r3, [r4, #4]
 80114d0:	2101      	movs	r1, #1
 80114d2:	4605      	mov	r5, r0
 80114d4:	7299      	strb	r1, [r3, #10]
 80114d6:	4620      	mov	r0, r4
 80114d8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80114dc:	f7ff ffb8 	bl	8011450 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80114e0:	4628      	mov	r0, r5
 80114e2:	bd70      	pop	{r4, r5, r6, pc}

080114e4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80114e4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80114e8:	1a13      	subs	r3, r2, r0
 80114ea:	4258      	negs	r0, r3
 80114ec:	4158      	adcs	r0, r3
 80114ee:	4770      	bx	lr

080114f0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80114f0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80114f4:	1a9b      	subs	r3, r3, r2
 80114f6:	2b00      	cmp	r3, #0
 80114f8:	bfdc      	itt	le
 80114fa:	6882      	ldrle	r2, [r0, #8]
 80114fc:	189b      	addle	r3, r3, r2
 80114fe:	2b01      	cmp	r3, #1
 8011500:	bfcc      	ite	gt
 8011502:	2000      	movgt	r0, #0
 8011504:	2001      	movle	r0, #1
 8011506:	4770      	bx	lr

08011508 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011508:	6902      	ldr	r2, [r0, #16]
 801150a:	6843      	ldr	r3, [r0, #4]
 801150c:	2024      	movs	r0, #36	; 0x24
 801150e:	fb00 3002 	mla	r0, r0, r2, r3
 8011512:	4770      	bx	lr

08011514 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011514:	6803      	ldr	r3, [r0, #0]
 8011516:	691b      	ldr	r3, [r3, #16]
 8011518:	4718      	bx	r3

0801151a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801151a:	b570      	push	{r4, r5, r6, lr}
 801151c:	2301      	movs	r3, #1
 801151e:	7203      	strb	r3, [r0, #8]
 8011520:	4604      	mov	r4, r0
 8011522:	6840      	ldr	r0, [r0, #4]
 8011524:	6803      	ldr	r3, [r0, #0]
 8011526:	699b      	ldr	r3, [r3, #24]
 8011528:	4798      	blx	r3
 801152a:	6803      	ldr	r3, [r0, #0]
 801152c:	2b40      	cmp	r3, #64	; 0x40
 801152e:	4605      	mov	r5, r0
 8011530:	d00c      	beq.n	801154c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011532:	d810      	bhi.n	8011556 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8011534:	2b04      	cmp	r3, #4
 8011536:	d01d      	beq.n	8011574 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011538:	d804      	bhi.n	8011544 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801153a:	2b01      	cmp	r3, #1
 801153c:	d006      	beq.n	801154c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801153e:	2b02      	cmp	r3, #2
 8011540:	d02c      	beq.n	801159c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011542:	bd70      	pop	{r4, r5, r6, pc}
 8011544:	2b08      	cmp	r3, #8
 8011546:	d01d      	beq.n	8011584 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011548:	2b20      	cmp	r3, #32
 801154a:	d1fa      	bne.n	8011542 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801154c:	6823      	ldr	r3, [r4, #0]
 801154e:	4620      	mov	r0, r4
 8011550:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011552:	4798      	blx	r3
 8011554:	e013      	b.n	801157e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011556:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801155a:	d0f7      	beq.n	801154c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801155c:	d804      	bhi.n	8011568 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801155e:	2b80      	cmp	r3, #128	; 0x80
 8011560:	d0f4      	beq.n	801154c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011562:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011566:	e7f0      	b.n	801154a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011568:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801156c:	d0ee      	beq.n	801154c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801156e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011572:	e7e5      	b.n	8011540 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011574:	6823      	ldr	r3, [r4, #0]
 8011576:	7f01      	ldrb	r1, [r0, #28]
 8011578:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801157a:	4620      	mov	r0, r4
 801157c:	4798      	blx	r3
 801157e:	6823      	ldr	r3, [r4, #0]
 8011580:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011582:	e006      	b.n	8011592 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011584:	6823      	ldr	r3, [r4, #0]
 8011586:	7f01      	ldrb	r1, [r0, #28]
 8011588:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801158a:	4620      	mov	r0, r4
 801158c:	4798      	blx	r3
 801158e:	6823      	ldr	r3, [r4, #0]
 8011590:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011592:	4629      	mov	r1, r5
 8011594:	4620      	mov	r0, r4
 8011596:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801159a:	4718      	bx	r3
 801159c:	6823      	ldr	r3, [r4, #0]
 801159e:	4620      	mov	r0, r4
 80115a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80115a2:	4798      	blx	r3
 80115a4:	e7f3      	b.n	801158e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080115a6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80115a6:	4770      	bx	lr

080115a8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80115a8:	4770      	bx	lr

080115aa <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80115aa:	4770      	bx	lr

080115ac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80115ac:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80115b0:	1ad2      	subs	r2, r2, r3
 80115b2:	2a00      	cmp	r2, #0
 80115b4:	b510      	push	{r4, lr}
 80115b6:	bfdc      	itt	le
 80115b8:	6884      	ldrle	r4, [r0, #8]
 80115ba:	1912      	addle	r2, r2, r4
 80115bc:	2a01      	cmp	r2, #1
 80115be:	dd16      	ble.n	80115ee <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80115c0:	6842      	ldr	r2, [r0, #4]
 80115c2:	2424      	movs	r4, #36	; 0x24
 80115c4:	fb04 2303 	mla	r3, r4, r3, r2
 80115c8:	f101 0220 	add.w	r2, r1, #32
 80115cc:	f851 4b04 	ldr.w	r4, [r1], #4
 80115d0:	f843 4b04 	str.w	r4, [r3], #4
 80115d4:	4291      	cmp	r1, r2
 80115d6:	d1f9      	bne.n	80115cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80115d8:	780a      	ldrb	r2, [r1, #0]
 80115da:	701a      	strb	r2, [r3, #0]
 80115dc:	68c3      	ldr	r3, [r0, #12]
 80115de:	6882      	ldr	r2, [r0, #8]
 80115e0:	f3bf 8f5b 	dmb	ish
 80115e4:	3301      	adds	r3, #1
 80115e6:	429a      	cmp	r2, r3
 80115e8:	bfd8      	it	le
 80115ea:	1a9b      	suble	r3, r3, r2
 80115ec:	60c3      	str	r3, [r0, #12]
 80115ee:	bd10      	pop	{r4, pc}

080115f0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80115f0:	6903      	ldr	r3, [r0, #16]
 80115f2:	6882      	ldr	r2, [r0, #8]
 80115f4:	f3bf 8f5b 	dmb	ish
 80115f8:	3301      	adds	r3, #1
 80115fa:	429a      	cmp	r2, r3
 80115fc:	bfd8      	it	le
 80115fe:	1a9b      	suble	r3, r3, r2
 8011600:	6103      	str	r3, [r0, #16]
 8011602:	4770      	bx	lr

08011604 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011604:	b570      	push	{r4, r5, r6, lr}
 8011606:	4604      	mov	r4, r0
 8011608:	460e      	mov	r6, r1
 801160a:	6860      	ldr	r0, [r4, #4]
 801160c:	6803      	ldr	r3, [r0, #0]
 801160e:	685b      	ldr	r3, [r3, #4]
 8011610:	4798      	blx	r3
 8011612:	2800      	cmp	r0, #0
 8011614:	d1f9      	bne.n	801160a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011616:	4d0d      	ldr	r5, [pc, #52]	; (801164c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011618:	6828      	ldr	r0, [r5, #0]
 801161a:	6803      	ldr	r3, [r0, #0]
 801161c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801161e:	4798      	blx	r3
 8011620:	f7f0 fd34 	bl	800208c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011624:	6828      	ldr	r0, [r5, #0]
 8011626:	2101      	movs	r1, #1
 8011628:	f7ff ff12 	bl	8011450 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801162c:	6860      	ldr	r0, [r4, #4]
 801162e:	6803      	ldr	r3, [r0, #0]
 8011630:	4631      	mov	r1, r6
 8011632:	689b      	ldr	r3, [r3, #8]
 8011634:	4798      	blx	r3
 8011636:	6823      	ldr	r3, [r4, #0]
 8011638:	4620      	mov	r0, r4
 801163a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801163c:	4798      	blx	r3
 801163e:	6828      	ldr	r0, [r5, #0]
 8011640:	6803      	ldr	r3, [r0, #0]
 8011642:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011646:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011648:	4718      	bx	r3
 801164a:	bf00      	nop
 801164c:	200132bc 	.word	0x200132bc

08011650 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011650:	b508      	push	{r3, lr}
 8011652:	f7f0 fd0d 	bl	8002070 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011656:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801165a:	f7f0 bd11 	b.w	8002080 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801165e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801165e:	b510      	push	{r4, lr}
 8011660:	2114      	movs	r1, #20
 8011662:	4604      	mov	r4, r0
 8011664:	f018 fbc9 	bl	8029dfa <_ZdlPvj>
 8011668:	4620      	mov	r0, r4
 801166a:	bd10      	pop	{r4, pc}

0801166c <_ZN8touchgfx13DMA_Interface5startEv>:
 801166c:	b510      	push	{r4, lr}
 801166e:	4604      	mov	r4, r0
 8011670:	6840      	ldr	r0, [r0, #4]
 8011672:	6803      	ldr	r3, [r0, #0]
 8011674:	681b      	ldr	r3, [r3, #0]
 8011676:	4798      	blx	r3
 8011678:	b948      	cbnz	r0, 801168e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801167a:	7a63      	ldrb	r3, [r4, #9]
 801167c:	b13b      	cbz	r3, 801168e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801167e:	7a23      	ldrb	r3, [r4, #8]
 8011680:	b92b      	cbnz	r3, 801168e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011682:	6823      	ldr	r3, [r4, #0]
 8011684:	4620      	mov	r0, r4
 8011686:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011688:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801168c:	4718      	bx	r3
 801168e:	bd10      	pop	{r4, pc}

08011690 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011690:	b570      	push	{r4, r5, r6, lr}
 8011692:	4604      	mov	r4, r0
 8011694:	6840      	ldr	r0, [r0, #4]
 8011696:	6803      	ldr	r3, [r0, #0]
 8011698:	681b      	ldr	r3, [r3, #0]
 801169a:	4798      	blx	r3
 801169c:	4605      	mov	r5, r0
 801169e:	b930      	cbnz	r0, 80116ae <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80116a0:	7a23      	ldrb	r3, [r4, #8]
 80116a2:	b123      	cbz	r3, 80116ae <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80116a4:	6860      	ldr	r0, [r4, #4]
 80116a6:	6803      	ldr	r3, [r0, #0]
 80116a8:	695b      	ldr	r3, [r3, #20]
 80116aa:	4798      	blx	r3
 80116ac:	7225      	strb	r5, [r4, #8]
 80116ae:	6860      	ldr	r0, [r4, #4]
 80116b0:	6803      	ldr	r3, [r0, #0]
 80116b2:	681b      	ldr	r3, [r3, #0]
 80116b4:	4798      	blx	r3
 80116b6:	b928      	cbnz	r0, 80116c4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80116b8:	6823      	ldr	r3, [r4, #0]
 80116ba:	4620      	mov	r0, r4
 80116bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80116be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116c2:	4718      	bx	r3
 80116c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116c8:	f7f0 bce8 	b.w	800209c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080116cc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80116cc:	b510      	push	{r4, lr}
 80116ce:	4c04      	ldr	r4, [pc, #16]	; (80116e0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80116d0:	6082      	str	r2, [r0, #8]
 80116d2:	2200      	movs	r2, #0
 80116d4:	e9c0 4100 	strd	r4, r1, [r0]
 80116d8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80116dc:	bd10      	pop	{r4, pc}
 80116de:	bf00      	nop
 80116e0:	0802e814 	.word	0x0802e814

080116e4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80116e4:	6840      	ldr	r0, [r0, #4]
 80116e6:	6803      	ldr	r3, [r0, #0]
 80116e8:	681b      	ldr	r3, [r3, #0]
 80116ea:	4718      	bx	r3

080116ec <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80116ec:	4b06      	ldr	r3, [pc, #24]	; (8011708 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80116ee:	60c1      	str	r1, [r0, #12]
 80116f0:	094a      	lsrs	r2, r1, #5
 80116f2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80116f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80116fa:	4313      	orrs	r3, r2
 80116fc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011700:	4319      	orrs	r1, r3
 8011702:	8201      	strh	r1, [r0, #16]
 8011704:	4770      	bx	lr
 8011706:	bf00      	nop
 8011708:	fffff800 	.word	0xfffff800

0801170c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801170c:	f1a0 0008 	sub.w	r0, r0, #8
 8011710:	e7ec      	b.n	80116ec <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8011712:	bf00      	nop

08011714 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8011714:	b508      	push	{r3, lr}
 8011716:	4b05      	ldr	r3, [pc, #20]	; (801172c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011718:	6818      	ldr	r0, [r3, #0]
 801171a:	6803      	ldr	r3, [r0, #0]
 801171c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011720:	4798      	blx	r3
 8011722:	1e43      	subs	r3, r0, #1
 8011724:	4258      	negs	r0, r3
 8011726:	4158      	adcs	r0, r3
 8011728:	bd08      	pop	{r3, pc}
 801172a:	bf00      	nop
 801172c:	200132bc 	.word	0x200132bc

08011730 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011730:	4770      	bx	lr

08011732 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8011732:	3808      	subs	r0, #8
 8011734:	4770      	bx	lr

08011736 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8011736:	b430      	push	{r4, r5}
 8011738:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801173c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011740:	8a02      	ldrh	r2, [r0, #16]
 8011742:	9202      	str	r2, [sp, #8]
 8011744:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011748:	68c2      	ldr	r2, [r0, #12]
 801174a:	4629      	mov	r1, r5
 801174c:	4620      	mov	r0, r4
 801174e:	bc30      	pop	{r4, r5}
 8011750:	f7f0 bf64 	b.w	800261c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08011754 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8011754:	f7f0 bf60 	b.w	8002618 <_ZN8touchgfx5paint8tearDownEv>

08011758 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011758:	b510      	push	{r4, lr}
 801175a:	2114      	movs	r1, #20
 801175c:	4604      	mov	r4, r0
 801175e:	f018 fb4c 	bl	8029dfa <_ZdlPvj>
 8011762:	4620      	mov	r0, r4
 8011764:	bd10      	pop	{r4, pc}

08011766 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011766:	f1a0 0008 	sub.w	r0, r0, #8
 801176a:	e7f5      	b.n	8011758 <_ZN8touchgfx13PainterRGB565D0Ev>

0801176c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801176c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801176e:	6803      	ldr	r3, [r0, #0]
 8011770:	460d      	mov	r5, r1
 8011772:	4604      	mov	r4, r0
 8011774:	4601      	mov	r1, r0
 8011776:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011778:	a802      	add	r0, sp, #8
 801177a:	4798      	blx	r3
 801177c:	6828      	ldr	r0, [r5, #0]
 801177e:	6869      	ldr	r1, [r5, #4]
 8011780:	466b      	mov	r3, sp
 8011782:	c303      	stmia	r3!, {r0, r1}
 8011784:	4668      	mov	r0, sp
 8011786:	4619      	mov	r1, r3
 8011788:	f7fe fb30 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 801178c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801178e:	b188      	cbz	r0, 80117b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011790:	6803      	ldr	r3, [r0, #0]
 8011792:	1d21      	adds	r1, r4, #4
 8011794:	68db      	ldr	r3, [r3, #12]
 8011796:	4798      	blx	r3
 8011798:	b160      	cbz	r0, 80117b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801179a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801179e:	2b00      	cmp	r3, #0
 80117a0:	dd08      	ble.n	80117b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80117a2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80117a6:	2d00      	cmp	r5, #0
 80117a8:	dd04      	ble.n	80117b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80117aa:	4a2b      	ldr	r2, [pc, #172]	; (8011858 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80117ac:	7812      	ldrb	r2, [r2, #0]
 80117ae:	b11a      	cbz	r2, 80117b8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80117b0:	2a01      	cmp	r2, #1
 80117b2:	d029      	beq.n	8011808 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80117b4:	b004      	add	sp, #16
 80117b6:	bd70      	pop	{r4, r5, r6, pc}
 80117b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80117bc:	441d      	add	r5, r3
 80117be:	b2ad      	uxth	r5, r5
 80117c0:	b22e      	sxth	r6, r5
 80117c2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80117c6:	42b3      	cmp	r3, r6
 80117c8:	daf4      	bge.n	80117b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80117ca:	6823      	ldr	r3, [r4, #0]
 80117cc:	4669      	mov	r1, sp
 80117ce:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80117d0:	4620      	mov	r0, r4
 80117d2:	4798      	blx	r3
 80117d4:	b940      	cbnz	r0, 80117e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80117d6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80117da:	2b01      	cmp	r3, #1
 80117dc:	d004      	beq.n	80117e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80117de:	3301      	adds	r3, #1
 80117e0:	105b      	asrs	r3, r3, #1
 80117e2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80117e6:	e7f0      	b.n	80117ca <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80117e8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80117ec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80117f0:	4413      	add	r3, r2
 80117f2:	b29b      	uxth	r3, r3
 80117f4:	441a      	add	r2, r3
 80117f6:	b212      	sxth	r2, r2
 80117f8:	4296      	cmp	r6, r2
 80117fa:	f8ad 3002 	strh.w	r3, [sp, #2]
 80117fe:	dae0      	bge.n	80117c2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011800:	1aeb      	subs	r3, r5, r3
 8011802:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011806:	e7dc      	b.n	80117c2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011808:	f8bd 5000 	ldrh.w	r5, [sp]
 801180c:	441d      	add	r5, r3
 801180e:	b2ad      	uxth	r5, r5
 8011810:	b22e      	sxth	r6, r5
 8011812:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011816:	42b3      	cmp	r3, r6
 8011818:	dacc      	bge.n	80117b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801181a:	6823      	ldr	r3, [r4, #0]
 801181c:	4669      	mov	r1, sp
 801181e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011820:	4620      	mov	r0, r4
 8011822:	4798      	blx	r3
 8011824:	b940      	cbnz	r0, 8011838 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011826:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801182a:	2b01      	cmp	r3, #1
 801182c:	d004      	beq.n	8011838 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801182e:	3301      	adds	r3, #1
 8011830:	105b      	asrs	r3, r3, #1
 8011832:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011836:	e7f0      	b.n	801181a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011838:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801183c:	f8bd 3000 	ldrh.w	r3, [sp]
 8011840:	4413      	add	r3, r2
 8011842:	b29b      	uxth	r3, r3
 8011844:	441a      	add	r2, r3
 8011846:	b212      	sxth	r2, r2
 8011848:	4296      	cmp	r6, r2
 801184a:	f8ad 3000 	strh.w	r3, [sp]
 801184e:	dae0      	bge.n	8011812 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011850:	1aeb      	subs	r3, r5, r3
 8011852:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011856:	e7dc      	b.n	8011812 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011858:	200132b4 	.word	0x200132b4

0801185c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801185c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801185e:	6803      	ldr	r3, [r0, #0]
 8011860:	4604      	mov	r4, r0
 8011862:	4601      	mov	r1, r0
 8011864:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011866:	4668      	mov	r0, sp
 8011868:	4798      	blx	r3
 801186a:	2100      	movs	r1, #0
 801186c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011870:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011874:	9102      	str	r1, [sp, #8]
 8011876:	4668      	mov	r0, sp
 8011878:	a902      	add	r1, sp, #8
 801187a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801187e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011882:	f7fe fab3 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 8011886:	6823      	ldr	r3, [r4, #0]
 8011888:	4669      	mov	r1, sp
 801188a:	691b      	ldr	r3, [r3, #16]
 801188c:	4620      	mov	r0, r4
 801188e:	4798      	blx	r3
 8011890:	b004      	add	sp, #16
 8011892:	bd10      	pop	{r4, pc}

08011894 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011894:	2101      	movs	r1, #1
 8011896:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801189a:	490b      	ldr	r1, [pc, #44]	; (80118c8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 801189c:	6001      	str	r1, [r0, #0]
 801189e:	2200      	movs	r2, #0
 80118a0:	21ff      	movs	r1, #255	; 0xff
 80118a2:	8082      	strh	r2, [r0, #4]
 80118a4:	80c2      	strh	r2, [r0, #6]
 80118a6:	8102      	strh	r2, [r0, #8]
 80118a8:	8142      	strh	r2, [r0, #10]
 80118aa:	8182      	strh	r2, [r0, #12]
 80118ac:	81c2      	strh	r2, [r0, #14]
 80118ae:	8202      	strh	r2, [r0, #16]
 80118b0:	8242      	strh	r2, [r0, #18]
 80118b2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80118b6:	61c2      	str	r2, [r0, #28]
 80118b8:	8402      	strh	r2, [r0, #32]
 80118ba:	8442      	strh	r2, [r0, #34]	; 0x22
 80118bc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80118c0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80118c4:	6282      	str	r2, [r0, #40]	; 0x28
 80118c6:	4770      	bx	lr
 80118c8:	0802e870 	.word	0x0802e870

080118cc <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80118cc:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80118d0:	4602      	mov	r2, r0
 80118d2:	cb03      	ldmia	r3!, {r0, r1}
 80118d4:	6010      	str	r0, [r2, #0]
 80118d6:	6051      	str	r1, [r2, #4]
 80118d8:	4610      	mov	r0, r2
 80118da:	4770      	bx	lr

080118dc <_ZN8touchgfx4LineD1Ev>:
 80118dc:	4770      	bx	lr

080118de <_ZN8touchgfx4LineD0Ev>:
 80118de:	b510      	push	{r4, lr}
 80118e0:	2170      	movs	r1, #112	; 0x70
 80118e2:	4604      	mov	r4, r0
 80118e4:	f018 fa89 	bl	8029dfa <_ZdlPvj>
 80118e8:	4620      	mov	r0, r4
 80118ea:	bd10      	pop	{r4, pc}

080118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80118ec:	b507      	push	{r0, r1, r2, lr}
 80118ee:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80118f2:	ab01      	add	r3, sp, #4
 80118f4:	6809      	ldr	r1, [r1, #0]
 80118f6:	6800      	ldr	r0, [r0, #0]
 80118f8:	f005 fc80 	bl	80171fc <_ZN8touchgfx6muldivElllRl>
 80118fc:	b003      	add	sp, #12
 80118fe:	f85d fb04 	ldr.w	pc, [sp], #4

08011902 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011902:	6800      	ldr	r0, [r0, #0]
 8011904:	2800      	cmp	r0, #0
 8011906:	bfb9      	ittee	lt
 8011908:	2320      	movlt	r3, #32
 801190a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801190e:	301f      	addge	r0, #31
 8011910:	1140      	asrge	r0, r0, #5
 8011912:	4770      	bx	lr

08011914 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011918:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801191c:	b089      	sub	sp, #36	; 0x24
 801191e:	4604      	mov	r4, r0
 8011920:	b353      	cbz	r3, 8011978 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011922:	6803      	ldr	r3, [r0, #0]
 8011924:	4601      	mov	r1, r0
 8011926:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011928:	a802      	add	r0, sp, #8
 801192a:	4798      	blx	r3
 801192c:	2220      	movs	r2, #32
 801192e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8011932:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011934:	fb9a f0f2 	sdiv	r0, sl, r2
 8011938:	fb91 f5f2 	sdiv	r5, r1, r2
 801193c:	1b40      	subs	r0, r0, r5
 801193e:	2800      	cmp	r0, #0
 8011940:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011942:	fb93 f6f2 	sdiv	r6, r3, r2
 8011946:	bfb8      	it	lt
 8011948:	4240      	neglt	r0, r0
 801194a:	0076      	lsls	r6, r6, #1
 801194c:	4286      	cmp	r6, r0
 801194e:	f8d4 b000 	ldr.w	fp, [r4]
 8011952:	dc0c      	bgt.n	801196e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011954:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8011956:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801195a:	fb95 f0f2 	sdiv	r0, r5, r2
 801195e:	fb98 f7f2 	sdiv	r7, r8, r2
 8011962:	1bc0      	subs	r0, r0, r7
 8011964:	2800      	cmp	r0, #0
 8011966:	bfb8      	it	lt
 8011968:	4240      	neglt	r0, r0
 801196a:	4286      	cmp	r6, r0
 801196c:	dd07      	ble.n	801197e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801196e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011972:	a902      	add	r1, sp, #8
 8011974:	4620      	mov	r0, r4
 8011976:	4798      	blx	r3
 8011978:	b009      	add	sp, #36	; 0x24
 801197a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801197e:	3301      	adds	r3, #1
 8011980:	2002      	movs	r0, #2
 8011982:	f10d 0920 	add.w	r9, sp, #32
 8011986:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801198a:	4103      	asrs	r3, r0
 801198c:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011990:	eb01 060a 	add.w	r6, r1, sl
 8011994:	eb08 0705 	add.w	r7, r8, r5
 8011998:	fb96 f6f0 	sdiv	r6, r6, r0
 801199c:	fb97 f7f0 	sdiv	r7, r7, r0
 80119a0:	4648      	mov	r0, r9
 80119a2:	9101      	str	r1, [sp, #4]
 80119a4:	b236      	sxth	r6, r6
 80119a6:	b23f      	sxth	r7, r7
 80119a8:	fb96 f6f2 	sdiv	r6, r6, r2
 80119ac:	fb97 f7f2 	sdiv	r7, r7, r2
 80119b0:	f7ff ffa7 	bl	8011902 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80119b4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80119b8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80119bc:	9901      	ldr	r1, [sp, #4]
 80119be:	4293      	cmp	r3, r2
 80119c0:	fa1f fe87 	uxth.w	lr, r7
 80119c4:	fa1f fc86 	uxth.w	ip, r6
 80119c8:	eba1 0a0a 	sub.w	sl, r1, sl
 80119cc:	b280      	uxth	r0, r0
 80119ce:	da54      	bge.n	8011a7a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80119d0:	ebac 0100 	sub.w	r1, ip, r0
 80119d4:	b289      	uxth	r1, r1
 80119d6:	4460      	add	r0, ip
 80119d8:	f1ba 0f00 	cmp.w	sl, #0
 80119dc:	b20e      	sxth	r6, r1
 80119de:	b280      	uxth	r0, r0
 80119e0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80119e4:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80119e8:	da29      	bge.n	8011a3e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80119ea:	eba8 0505 	sub.w	r5, r8, r5
 80119ee:	2d00      	cmp	r5, #0
 80119f0:	da2a      	bge.n	8011a48 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80119f2:	fa1f f88a 	uxth.w	r8, sl
 80119f6:	eba0 0008 	sub.w	r0, r0, r8
 80119fa:	fa1f f58c 	uxth.w	r5, ip
 80119fe:	4443      	add	r3, r8
 8011a00:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011a04:	1a59      	subs	r1, r3, r1
 8011a06:	ebae 0005 	sub.w	r0, lr, r5
 8011a0a:	f8ad a010 	strh.w	sl, [sp, #16]
 8011a0e:	f8ad c012 	strh.w	ip, [sp, #18]
 8011a12:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011a16:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011a1a:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011a1e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011a22:	442a      	add	r2, r5
 8011a24:	eba2 0e0e 	sub.w	lr, r2, lr
 8011a28:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011a2c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011a30:	a904      	add	r1, sp, #16
 8011a32:	4620      	mov	r0, r4
 8011a34:	4798      	blx	r3
 8011a36:	6823      	ldr	r3, [r4, #0]
 8011a38:	4649      	mov	r1, r9
 8011a3a:	691b      	ldr	r3, [r3, #16]
 8011a3c:	e79a      	b.n	8011974 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011a3e:	d003      	beq.n	8011a48 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011a40:	eba8 0505 	sub.w	r5, r8, r5
 8011a44:	2d00      	cmp	r5, #0
 8011a46:	dcd4      	bgt.n	80119f2 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011a48:	fa1f f88a 	uxth.w	r8, sl
 8011a4c:	4443      	add	r3, r8
 8011a4e:	fa1f f58c 	uxth.w	r5, ip
 8011a52:	1a59      	subs	r1, r3, r1
 8011a54:	eba0 0008 	sub.w	r0, r0, r8
 8011a58:	ebae 0305 	sub.w	r3, lr, r5
 8011a5c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011a60:	f8ad c012 	strh.w	ip, [sp, #18]
 8011a64:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011a68:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011a6c:	f8ad a018 	strh.w	sl, [sp, #24]
 8011a70:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011a74:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011a78:	e7d3      	b.n	8011a22 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011a7a:	ebae 0100 	sub.w	r1, lr, r0
 8011a7e:	b289      	uxth	r1, r1
 8011a80:	4470      	add	r0, lr
 8011a82:	f1ba 0f00 	cmp.w	sl, #0
 8011a86:	b20f      	sxth	r7, r1
 8011a88:	b280      	uxth	r0, r0
 8011a8a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011a8e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011a92:	da20      	bge.n	8011ad6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011a94:	eba8 0505 	sub.w	r5, r8, r5
 8011a98:	2d00      	cmp	r5, #0
 8011a9a:	da21      	bge.n	8011ae0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011a9c:	fa1f f88e 	uxth.w	r8, lr
 8011aa0:	fa1f f58a 	uxth.w	r5, sl
 8011aa4:	4443      	add	r3, r8
 8011aa6:	442a      	add	r2, r5
 8011aa8:	f8ad e010 	strh.w	lr, [sp, #16]
 8011aac:	1b40      	subs	r0, r0, r5
 8011aae:	ebac 0e08 	sub.w	lr, ip, r8
 8011ab2:	1a51      	subs	r1, r2, r1
 8011ab4:	eba3 0c0c 	sub.w	ip, r3, ip
 8011ab8:	f8ad a012 	strh.w	sl, [sp, #18]
 8011abc:	f8ad e014 	strh.w	lr, [sp, #20]
 8011ac0:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011ac4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011ac8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011acc:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011ad0:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011ad4:	e7aa      	b.n	8011a2c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011ad6:	d003      	beq.n	8011ae0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011ad8:	eba8 0505 	sub.w	r5, r8, r5
 8011adc:	2d00      	cmp	r5, #0
 8011ade:	dcdd      	bgt.n	8011a9c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011ae0:	fa1f f58e 	uxth.w	r5, lr
 8011ae4:	fa1f f88a 	uxth.w	r8, sl
 8011ae8:	4442      	add	r2, r8
 8011aea:	442b      	add	r3, r5
 8011aec:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011af0:	1a51      	subs	r1, r2, r1
 8011af2:	ebac 0705 	sub.w	r7, ip, r5
 8011af6:	eba0 0008 	sub.w	r0, r0, r8
 8011afa:	eba3 0c0c 	sub.w	ip, r3, ip
 8011afe:	f8ad e010 	strh.w	lr, [sp, #16]
 8011b02:	f8ad 7014 	strh.w	r7, [sp, #20]
 8011b06:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011b0a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011b0e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8011b12:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011b16:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011b1a:	e787      	b.n	8011a2c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011b1c <_ZN8touchgfx7CWRUtil4sineEi>:
 8011b1c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011b20:	fb90 f2f3 	sdiv	r2, r0, r3
 8011b24:	fb02 0013 	mls	r0, r2, r3, r0
 8011b28:	2800      	cmp	r0, #0
 8011b2a:	bfb8      	it	lt
 8011b2c:	18c0      	addlt	r0, r0, r3
 8011b2e:	285a      	cmp	r0, #90	; 0x5a
 8011b30:	4b09      	ldr	r3, [pc, #36]	; (8011b58 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011b32:	dc02      	bgt.n	8011b3a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011b34:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011b38:	4770      	bx	lr
 8011b3a:	28b4      	cmp	r0, #180	; 0xb4
 8011b3c:	dc02      	bgt.n	8011b44 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011b3e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8011b42:	e7f7      	b.n	8011b34 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8011b44:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011b48:	bfd4      	ite	le
 8011b4a:	38b4      	suble	r0, #180	; 0xb4
 8011b4c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011b50:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011b54:	4240      	negs	r0, r0
 8011b56:	4770      	bx	lr
 8011b58:	0802e93c 	.word	0x0802e93c

08011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011b5c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011b60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011b62:	fb90 f2f3 	sdiv	r2, r0, r3
 8011b66:	fb02 0013 	mls	r0, r2, r3, r0
 8011b6a:	2800      	cmp	r0, #0
 8011b6c:	bfb8      	it	lt
 8011b6e:	18c0      	addlt	r0, r0, r3
 8011b70:	1144      	asrs	r4, r0, #5
 8011b72:	f000 061f 	and.w	r6, r0, #31
 8011b76:	4620      	mov	r0, r4
 8011b78:	f7ff ffd0 	bl	8011b1c <_ZN8touchgfx7CWRUtil4sineEi>
 8011b7c:	4605      	mov	r5, r0
 8011b7e:	b90e      	cbnz	r6, 8011b84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011b80:	b002      	add	sp, #8
 8011b82:	bd70      	pop	{r4, r5, r6, pc}
 8011b84:	1c60      	adds	r0, r4, #1
 8011b86:	f7ff ffc9 	bl	8011b1c <_ZN8touchgfx7CWRUtil4sineEi>
 8011b8a:	ab01      	add	r3, sp, #4
 8011b8c:	2220      	movs	r2, #32
 8011b8e:	4631      	mov	r1, r6
 8011b90:	1b40      	subs	r0, r0, r5
 8011b92:	f005 fb33 	bl	80171fc <_ZN8touchgfx6muldivElllRl>
 8011b96:	4428      	add	r0, r5
 8011b98:	e7f2      	b.n	8011b80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011b9a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011b9a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011b9e:	bf2c      	ite	cs
 8011ba0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8011ba4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011ba8:	2300      	movs	r3, #0
 8011baa:	1899      	adds	r1, r3, r2
 8011bac:	4288      	cmp	r0, r1
 8011bae:	bf24      	itt	cs
 8011bb0:	1853      	addcs	r3, r2, r1
 8011bb2:	1a40      	subcs	r0, r0, r1
 8011bb4:	0892      	lsrs	r2, r2, #2
 8011bb6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011bba:	d1f6      	bne.n	8011baa <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011bbc:	4618      	mov	r0, r3
 8011bbe:	4770      	bx	lr

08011bc0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011bc0:	b510      	push	{r4, lr}
 8011bc2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8011bc6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011bca:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011bce:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8011bd2:	13a4      	asrs	r4, r4, #14
 8011bd4:	139b      	asrs	r3, r3, #14
 8011bd6:	429c      	cmp	r4, r3
 8011bd8:	bfb8      	it	lt
 8011bda:	461c      	movlt	r4, r3
 8011bdc:	2c01      	cmp	r4, #1
 8011bde:	dd07      	ble.n	8011bf0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011be0:	fb91 f1f4 	sdiv	r1, r1, r4
 8011be4:	fb90 f0f4 	sdiv	r0, r0, r4
 8011be8:	f7ff ffea 	bl	8011bc0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011bec:	4360      	muls	r0, r4
 8011bee:	bd10      	pop	{r4, pc}
 8011bf0:	4340      	muls	r0, r0
 8011bf2:	fb01 0001 	mla	r0, r1, r1, r0
 8011bf6:	f7ff ffd0 	bl	8011b9a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011bfa:	e7f8      	b.n	8011bee <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011bfc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011bfc:	2800      	cmp	r0, #0
 8011bfe:	b508      	push	{r3, lr}
 8011c00:	da05      	bge.n	8011c0e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8011c02:	4240      	negs	r0, r0
 8011c04:	f7ff fffa 	bl	8011bfc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011c08:	4240      	negs	r0, r0
 8011c0a:	b240      	sxtb	r0, r0
 8011c0c:	bd08      	pop	{r3, pc}
 8011c0e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8011c12:	dc11      	bgt.n	8011c38 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8011c14:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011c18:	dd09      	ble.n	8011c2e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011c1a:	4340      	muls	r0, r0
 8011c1c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011c20:	f7ff ffbb 	bl	8011b9a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011c24:	f7ff ffea 	bl	8011bfc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011c28:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011c2c:	e7ed      	b.n	8011c0a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011c2e:	3003      	adds	r0, #3
 8011c30:	10c0      	asrs	r0, r0, #3
 8011c32:	4b02      	ldr	r3, [pc, #8]	; (8011c3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8011c34:	5618      	ldrsb	r0, [r3, r0]
 8011c36:	e7e9      	b.n	8011c0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011c38:	2000      	movs	r0, #0
 8011c3a:	e7e7      	b.n	8011c0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011c3c:	0802e8e0 	.word	0x0802e8e0

08011c40 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011c40:	4281      	cmp	r1, r0
 8011c42:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011c44:	460c      	mov	r4, r1
 8011c46:	4615      	mov	r5, r2
 8011c48:	dd07      	ble.n	8011c5a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8011c4a:	4601      	mov	r1, r0
 8011c4c:	4620      	mov	r0, r4
 8011c4e:	f7ff fff7 	bl	8011c40 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011c52:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011c56:	b003      	add	sp, #12
 8011c58:	bd30      	pop	{r4, r5, pc}
 8011c5a:	f7ff ffb1 	bl	8011bc0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011c5e:	6028      	str	r0, [r5, #0]
 8011c60:	2800      	cmp	r0, #0
 8011c62:	d0f8      	beq.n	8011c56 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8011c64:	4602      	mov	r2, r0
 8011c66:	ab01      	add	r3, sp, #4
 8011c68:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011c6c:	4620      	mov	r0, r4
 8011c6e:	f005 fac5 	bl	80171fc <_ZN8touchgfx6muldivElllRl>
 8011c72:	f7ff ffc3 	bl	8011bfc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011c76:	e7ee      	b.n	8011c56 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011c78 <_ZN8touchgfx4LineC1Ev>:
 8011c78:	b510      	push	{r4, lr}
 8011c7a:	4604      	mov	r4, r0
 8011c7c:	f7ff fe0a 	bl	8011894 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011c80:	4b0c      	ldr	r3, [pc, #48]	; (8011cb4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8011c82:	6023      	str	r3, [r4, #0]
 8011c84:	2220      	movs	r2, #32
 8011c86:	2300      	movs	r3, #0
 8011c88:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011c8a:	2212      	movs	r2, #18
 8011c8c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011c90:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8011c94:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011c98:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011c9c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011ca0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8011ca4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011ca8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011cac:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011cae:	60a3      	str	r3, [r4, #8]
 8011cb0:	4620      	mov	r0, r4
 8011cb2:	bd10      	pop	{r4, pc}
 8011cb4:	0802e9fc 	.word	0x0802e9fc

08011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011cb8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011cbc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011cbe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011cc0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8011cc2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8011cc4:	1aff      	subs	r7, r7, r3
 8011cc6:	4604      	mov	r4, r0
 8011cc8:	eba5 0502 	sub.w	r5, r5, r2
 8011ccc:	d142      	bne.n	8011d54 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011cce:	b955      	cbnz	r5, 8011ce6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011cd0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8011cd4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011cd8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011cdc:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011ce0:	b002      	add	sp, #8
 8011ce2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011ce6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011cea:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011cee:	4629      	mov	r1, r5
 8011cf0:	4642      	mov	r2, r8
 8011cf2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011cf4:	f005 faa1 	bl	801723a <_ZN8touchgfx6muldivElll>
 8011cf8:	2502      	movs	r5, #2
 8011cfa:	4642      	mov	r2, r8
 8011cfc:	fb90 f6f5 	sdiv	r6, r0, r5
 8011d00:	4639      	mov	r1, r7
 8011d02:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011d04:	f005 fa99 	bl	801723a <_ZN8touchgfx6muldivElll>
 8011d08:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011d0c:	fb90 f5f5 	sdiv	r5, r0, r5
 8011d10:	f1b9 0f00 	cmp.w	r9, #0
 8011d14:	d067      	beq.n	8011de6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8011d16:	f1b9 0f02 	cmp.w	r9, #2
 8011d1a:	d878      	bhi.n	8011e0e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011d1c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011d1e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011d20:	1b93      	subs	r3, r2, r6
 8011d22:	1b5b      	subs	r3, r3, r5
 8011d24:	6463      	str	r3, [r4, #68]	; 0x44
 8011d26:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011d28:	18e9      	adds	r1, r5, r3
 8011d2a:	1b89      	subs	r1, r1, r6
 8011d2c:	6561      	str	r1, [r4, #84]	; 0x54
 8011d2e:	1b81      	subs	r1, r0, r6
 8011d30:	4429      	add	r1, r5
 8011d32:	64a1      	str	r1, [r4, #72]	; 0x48
 8011d34:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011d36:	4430      	add	r0, r6
 8011d38:	186f      	adds	r7, r5, r1
 8011d3a:	4432      	add	r2, r6
 8011d3c:	1b49      	subs	r1, r1, r5
 8011d3e:	4437      	add	r7, r6
 8011d40:	4428      	add	r0, r5
 8011d42:	4431      	add	r1, r6
 8011d44:	1b52      	subs	r2, r2, r5
 8011d46:	1b5b      	subs	r3, r3, r5
 8011d48:	65a7      	str	r7, [r4, #88]	; 0x58
 8011d4a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011d4c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011d4e:	6522      	str	r2, [r4, #80]	; 0x50
 8011d50:	1b9b      	subs	r3, r3, r6
 8011d52:	e05b      	b.n	8011e0c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8011d54:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8011d58:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8011d5c:	2d00      	cmp	r5, #0
 8011d5e:	d0c6      	beq.n	8011cee <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011d60:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8011d64:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011d68:	fb93 f2f8 	sdiv	r2, r3, r8
 8011d6c:	fb08 3312 	mls	r3, r8, r2, r3
 8011d70:	b353      	cbz	r3, 8011dc8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8011d72:	fb98 f2f3 	sdiv	r2, r8, r3
 8011d76:	fb03 8812 	mls	r8, r3, r2, r8
 8011d7a:	f1b8 0f00 	cmp.w	r8, #0
 8011d7e:	d1f3      	bne.n	8011d68 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8011d80:	2b01      	cmp	r3, #1
 8011d82:	bf1c      	itt	ne
 8011d84:	fb95 f5f3 	sdivne	r5, r5, r3
 8011d88:	fb97 f7f3 	sdivne	r7, r7, r3
 8011d8c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011d90:	f24b 5104 	movw	r1, #46340	; 0xb504
 8011d94:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011d98:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011d9c:	428b      	cmp	r3, r1
 8011d9e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8011da2:	4608      	mov	r0, r1
 8011da4:	dd01      	ble.n	8011daa <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8011da6:	428a      	cmp	r2, r1
 8011da8:	dc10      	bgt.n	8011dcc <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011daa:	fb90 f3f3 	sdiv	r3, r0, r3
 8011dae:	fb90 f2f2 	sdiv	r2, r0, r2
 8011db2:	4293      	cmp	r3, r2
 8011db4:	bfa8      	it	ge
 8011db6:	4613      	movge	r3, r2
 8011db8:	435f      	muls	r7, r3
 8011dba:	435d      	muls	r5, r3
 8011dbc:	4629      	mov	r1, r5
 8011dbe:	4638      	mov	r0, r7
 8011dc0:	f7ff fefe 	bl	8011bc0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011dc4:	4680      	mov	r8, r0
 8011dc6:	e792      	b.n	8011cee <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011dc8:	4643      	mov	r3, r8
 8011dca:	e7d9      	b.n	8011d80 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011dcc:	fb93 f3f1 	sdiv	r3, r3, r1
 8011dd0:	fb92 f2f1 	sdiv	r2, r2, r1
 8011dd4:	4293      	cmp	r3, r2
 8011dd6:	bfcc      	ite	gt
 8011dd8:	3301      	addgt	r3, #1
 8011dda:	1c53      	addle	r3, r2, #1
 8011ddc:	fb97 f7f3 	sdiv	r7, r7, r3
 8011de0:	fb95 f5f3 	sdiv	r5, r5, r3
 8011de4:	e7ea      	b.n	8011dbc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8011de6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011de8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011dea:	1b93      	subs	r3, r2, r6
 8011dec:	6463      	str	r3, [r4, #68]	; 0x44
 8011dee:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011df0:	18e9      	adds	r1, r5, r3
 8011df2:	6561      	str	r1, [r4, #84]	; 0x54
 8011df4:	1b81      	subs	r1, r0, r6
 8011df6:	64a1      	str	r1, [r4, #72]	; 0x48
 8011df8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011dfa:	4430      	add	r0, r6
 8011dfc:	186f      	adds	r7, r5, r1
 8011dfe:	4432      	add	r2, r6
 8011e00:	1b49      	subs	r1, r1, r5
 8011e02:	65a7      	str	r7, [r4, #88]	; 0x58
 8011e04:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011e06:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011e08:	6522      	str	r2, [r4, #80]	; 0x50
 8011e0a:	1b5b      	subs	r3, r3, r5
 8011e0c:	6623      	str	r3, [r4, #96]	; 0x60
 8011e0e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8011e10:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8011e12:	9200      	str	r2, [sp, #0]
 8011e14:	9301      	str	r3, [sp, #4]
 8011e16:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8011e1a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8011e1e:	680f      	ldr	r7, [r1, #0]
 8011e20:	9800      	ldr	r0, [sp, #0]
 8011e22:	42ba      	cmp	r2, r7
 8011e24:	bfa8      	it	ge
 8011e26:	463a      	movge	r2, r7
 8011e28:	4287      	cmp	r7, r0
 8011e2a:	bfc8      	it	gt
 8011e2c:	9700      	strgt	r7, [sp, #0]
 8011e2e:	690f      	ldr	r7, [r1, #16]
 8011e30:	9801      	ldr	r0, [sp, #4]
 8011e32:	42bb      	cmp	r3, r7
 8011e34:	bfa8      	it	ge
 8011e36:	463b      	movge	r3, r7
 8011e38:	3104      	adds	r1, #4
 8011e3a:	4287      	cmp	r7, r0
 8011e3c:	bfc8      	it	gt
 8011e3e:	9701      	strgt	r7, [sp, #4]
 8011e40:	458c      	cmp	ip, r1
 8011e42:	d1ec      	bne.n	8011e1e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8011e44:	4668      	mov	r0, sp
 8011e46:	2720      	movs	r7, #32
 8011e48:	fb92 f8f7 	sdiv	r8, r2, r7
 8011e4c:	fb93 f7f7 	sdiv	r7, r3, r7
 8011e50:	f7ff fd57 	bl	8011902 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011e54:	4682      	mov	sl, r0
 8011e56:	a801      	add	r0, sp, #4
 8011e58:	f7ff fd53 	bl	8011902 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011e5c:	ebaa 0208 	sub.w	r2, sl, r8
 8011e60:	1bc0      	subs	r0, r0, r7
 8011e62:	f1b9 0f01 	cmp.w	r9, #1
 8011e66:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8011e6a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8011e6e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8011e72:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8011e76:	f47f af33 	bne.w	8011ce0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011e7a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011e7c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011e7e:	1b83      	subs	r3, r0, r6
 8011e80:	6463      	str	r3, [r4, #68]	; 0x44
 8011e82:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011e84:	18ea      	adds	r2, r5, r3
 8011e86:	6562      	str	r2, [r4, #84]	; 0x54
 8011e88:	1b8a      	subs	r2, r1, r6
 8011e8a:	64a2      	str	r2, [r4, #72]	; 0x48
 8011e8c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011e8e:	4431      	add	r1, r6
 8011e90:	18af      	adds	r7, r5, r2
 8011e92:	4406      	add	r6, r0
 8011e94:	1b52      	subs	r2, r2, r5
 8011e96:	1b5d      	subs	r5, r3, r5
 8011e98:	65a7      	str	r7, [r4, #88]	; 0x58
 8011e9a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011e9c:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011e9e:	6526      	str	r6, [r4, #80]	; 0x50
 8011ea0:	6625      	str	r5, [r4, #96]	; 0x60
 8011ea2:	e71d      	b.n	8011ce0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08011ea4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8011ea4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011ea6:	428b      	cmp	r3, r1
 8011ea8:	d102      	bne.n	8011eb0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011eaa:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011eac:	4293      	cmp	r3, r2
 8011eae:	d003      	beq.n	8011eb8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011eb0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8011eb4:	f7ff bf00 	b.w	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011eb8:	4770      	bx	lr

08011eba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011eba:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011ebc:	428b      	cmp	r3, r1
 8011ebe:	d102      	bne.n	8011ec6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011ec0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8011ec2:	4293      	cmp	r3, r2
 8011ec4:	d003      	beq.n	8011ece <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8011ec6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011eca:	f7ff bef5 	b.w	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011ece:	4770      	bx	lr

08011ed0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011ed0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8011ed4:	f7ff bef0 	b.w	8011cb8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011ed8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011ed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011edc:	b0a0      	sub	sp, #128	; 0x80
 8011ede:	4604      	mov	r4, r0
 8011ee0:	460a      	mov	r2, r1
 8011ee2:	4601      	mov	r1, r0
 8011ee4:	a804      	add	r0, sp, #16
 8011ee6:	f015 f845 	bl	8026f74 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011eea:	2300      	movs	r3, #0
 8011eec:	9301      	str	r3, [sp, #4]
 8011eee:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8011ef2:	2b01      	cmp	r3, #1
 8011ef4:	d17c      	bne.n	8011ff0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8011ef6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011ef8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011efa:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011efc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011efe:	1ac0      	subs	r0, r0, r3
 8011f00:	eba1 0102 	sub.w	r1, r1, r2
 8011f04:	d437      	bmi.n	8011f76 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8011f06:	2900      	cmp	r1, #0
 8011f08:	aa01      	add	r2, sp, #4
 8011f0a:	db2e      	blt.n	8011f6a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011f0c:	f7ff fe98 	bl	8011c40 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011f10:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8011f14:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8011f16:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011f18:	a804      	add	r0, sp, #16
 8011f1a:	f015 f9ab 	bl	8027274 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011f1e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011f20:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011f22:	a804      	add	r0, sp, #16
 8011f24:	f015 f9f3 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011f28:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011f2a:	2db3      	cmp	r5, #179	; 0xb3
 8011f2c:	dc33      	bgt.n	8011f96 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8011f2e:	eba6 0805 	sub.w	r8, r6, r5
 8011f32:	4640      	mov	r0, r8
 8011f34:	f7ff fdf2 	bl	8011b1c <_ZN8touchgfx7CWRUtil4sineEi>
 8011f38:	a902      	add	r1, sp, #8
 8011f3a:	9002      	str	r0, [sp, #8]
 8011f3c:	a801      	add	r0, sp, #4
 8011f3e:	f7ff fcd5 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011f42:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011f44:	1847      	adds	r7, r0, r1
 8011f46:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011f4a:	f7ff fde7 	bl	8011b1c <_ZN8touchgfx7CWRUtil4sineEi>
 8011f4e:	a903      	add	r1, sp, #12
 8011f50:	9003      	str	r0, [sp, #12]
 8011f52:	a801      	add	r0, sp, #4
 8011f54:	f7ff fcca 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011f58:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011f5a:	4639      	mov	r1, r7
 8011f5c:	1a12      	subs	r2, r2, r0
 8011f5e:	a804      	add	r0, sp, #16
 8011f60:	f015 f9d5 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011f64:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011f66:	441d      	add	r5, r3
 8011f68:	e7df      	b.n	8011f2a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011f6a:	4249      	negs	r1, r1
 8011f6c:	f7ff fe68 	bl	8011c40 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011f70:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8011f74:	e7ce      	b.n	8011f14 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011f76:	2900      	cmp	r1, #0
 8011f78:	f1c0 0000 	rsb	r0, r0, #0
 8011f7c:	aa01      	add	r2, sp, #4
 8011f7e:	db04      	blt.n	8011f8a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8011f80:	f7ff fe5e 	bl	8011c40 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011f84:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011f88:	e7c4      	b.n	8011f14 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011f8a:	4249      	negs	r1, r1
 8011f8c:	f7ff fe58 	bl	8011c40 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011f90:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8011f94:	e7be      	b.n	8011f14 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011f96:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011f98:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011f9a:	a804      	add	r0, sp, #16
 8011f9c:	f015 f9b7 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011fa0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011fa2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8011fa4:	a804      	add	r0, sp, #16
 8011fa6:	f015 f9b2 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011faa:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011fac:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011fb0:	2d00      	cmp	r5, #0
 8011fb2:	dd31      	ble.n	8012018 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8011fb4:	eb05 0806 	add.w	r8, r5, r6
 8011fb8:	4640      	mov	r0, r8
 8011fba:	f7ff fdaf 	bl	8011b1c <_ZN8touchgfx7CWRUtil4sineEi>
 8011fbe:	a902      	add	r1, sp, #8
 8011fc0:	9002      	str	r0, [sp, #8]
 8011fc2:	a801      	add	r0, sp, #4
 8011fc4:	f7ff fc92 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011fc8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011fca:	1847      	adds	r7, r0, r1
 8011fcc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011fd0:	f7ff fda4 	bl	8011b1c <_ZN8touchgfx7CWRUtil4sineEi>
 8011fd4:	a903      	add	r1, sp, #12
 8011fd6:	9003      	str	r0, [sp, #12]
 8011fd8:	a801      	add	r0, sp, #4
 8011fda:	f7ff fc87 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011fde:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011fe0:	4639      	mov	r1, r7
 8011fe2:	1a12      	subs	r2, r2, r0
 8011fe4:	a804      	add	r0, sp, #16
 8011fe6:	f015 f992 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011fea:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011fec:	1aed      	subs	r5, r5, r3
 8011fee:	e7df      	b.n	8011fb0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011ff0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8011ff2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011ff4:	a804      	add	r0, sp, #16
 8011ff6:	f015 f93d 	bl	8027274 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011ffa:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011ffc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011ffe:	a804      	add	r0, sp, #16
 8012000:	f015 f985 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012004:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012006:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012008:	a804      	add	r0, sp, #16
 801200a:	f015 f980 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801200e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012010:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012012:	a804      	add	r0, sp, #16
 8012014:	f015 f97b 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012018:	21ff      	movs	r1, #255	; 0xff
 801201a:	a804      	add	r0, sp, #16
 801201c:	f015 f866 	bl	80270ec <_ZN8touchgfx6Canvas6renderEh>
 8012020:	4b04      	ldr	r3, [pc, #16]	; (8012034 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8012022:	9304      	str	r3, [sp, #16]
 8012024:	4604      	mov	r4, r0
 8012026:	a80c      	add	r0, sp, #48	; 0x30
 8012028:	f001 fa98 	bl	801355c <_ZN8touchgfx7OutlineD1Ev>
 801202c:	4620      	mov	r0, r4
 801202e:	b020      	add	sp, #128	; 0x80
 8012030:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012034:	0802f2a8 	.word	0x0802f2a8

08012038 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012038:	2000      	movs	r0, #0
 801203a:	4770      	bx	lr

0801203c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801203c:	4b07      	ldr	r3, [pc, #28]	; (801205c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801203e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012040:	881b      	ldrh	r3, [r3, #0]
 8012042:	4293      	cmp	r3, r2
 8012044:	bf81      	itttt	hi
 8012046:	4b06      	ldrhi	r3, [pc, #24]	; (8012060 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012048:	681b      	ldrhi	r3, [r3, #0]
 801204a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801204e:	7858      	ldrbhi	r0, [r3, #1]
 8012050:	bf8c      	ite	hi
 8012052:	f000 0003 	andhi.w	r0, r0, #3
 8012056:	2000      	movls	r0, #0
 8012058:	4770      	bx	lr
 801205a:	bf00      	nop
 801205c:	20013318 	.word	0x20013318
 8012060:	20013314 	.word	0x20013314

08012064 <_ZN8touchgfx8TextAreaD1Ev>:
 8012064:	4770      	bx	lr
	...

08012068 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012068:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801206c:	4b10      	ldr	r3, [pc, #64]	; (80120b0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801206e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012070:	881b      	ldrh	r3, [r3, #0]
 8012072:	428b      	cmp	r3, r1
 8012074:	4604      	mov	r4, r0
 8012076:	d918      	bls.n	80120aa <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012078:	6803      	ldr	r3, [r0, #0]
 801207a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801207c:	4b0d      	ldr	r3, [pc, #52]	; (80120b4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801207e:	6818      	ldr	r0, [r3, #0]
 8012080:	f7f5 feec 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8012084:	6823      	ldr	r3, [r4, #0]
 8012086:	4606      	mov	r6, r0
 8012088:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801208a:	4620      	mov	r0, r4
 801208c:	4798      	blx	r3
 801208e:	6823      	ldr	r3, [r4, #0]
 8012090:	4607      	mov	r7, r0
 8012092:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012096:	4620      	mov	r0, r4
 8012098:	4798      	blx	r3
 801209a:	463a      	mov	r2, r7
 801209c:	4603      	mov	r3, r0
 801209e:	4631      	mov	r1, r6
 80120a0:	4620      	mov	r0, r4
 80120a2:	46ac      	mov	ip, r5
 80120a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80120a8:	4760      	bx	ip
 80120aa:	2000      	movs	r0, #0
 80120ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80120b0:	20013318 	.word	0x20013318
 80120b4:	20013320 	.word	0x20013320

080120b8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80120b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80120bc:	4b17      	ldr	r3, [pc, #92]	; (801211c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80120be:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80120c0:	881b      	ldrh	r3, [r3, #0]
 80120c2:	428b      	cmp	r3, r1
 80120c4:	4604      	mov	r4, r0
 80120c6:	d926      	bls.n	8012116 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80120c8:	4b15      	ldr	r3, [pc, #84]	; (8012120 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80120ca:	681b      	ldr	r3, [r3, #0]
 80120cc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80120d0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80120d4:	4b13      	ldr	r3, [pc, #76]	; (8012124 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80120d6:	7855      	ldrb	r5, [r2, #1]
 80120d8:	681b      	ldr	r3, [r3, #0]
 80120da:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80120de:	6833      	ldr	r3, [r6, #0]
 80120e0:	69df      	ldr	r7, [r3, #28]
 80120e2:	4b11      	ldr	r3, [pc, #68]	; (8012128 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80120e4:	6818      	ldr	r0, [r3, #0]
 80120e6:	f7f5 feb9 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 80120ea:	6823      	ldr	r3, [r4, #0]
 80120ec:	4680      	mov	r8, r0
 80120ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80120f0:	4620      	mov	r0, r4
 80120f2:	4798      	blx	r3
 80120f4:	6823      	ldr	r3, [r4, #0]
 80120f6:	4681      	mov	r9, r0
 80120f8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80120fc:	4620      	mov	r0, r4
 80120fe:	4798      	blx	r3
 8012100:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8012104:	9000      	str	r0, [sp, #0]
 8012106:	464b      	mov	r3, r9
 8012108:	4642      	mov	r2, r8
 801210a:	4629      	mov	r1, r5
 801210c:	4630      	mov	r0, r6
 801210e:	47b8      	blx	r7
 8012110:	b003      	add	sp, #12
 8012112:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012116:	2000      	movs	r0, #0
 8012118:	e7fa      	b.n	8012110 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801211a:	bf00      	nop
 801211c:	20013318 	.word	0x20013318
 8012120:	20013314 	.word	0x20013314
 8012124:	2001331c 	.word	0x2001331c
 8012128:	20013320 	.word	0x20013320

0801212c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801212c:	b40e      	push	{r1, r2, r3}
 801212e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012132:	4b2f      	ldr	r3, [pc, #188]	; (80121f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8012134:	881a      	ldrh	r2, [r3, #0]
 8012136:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012138:	429a      	cmp	r2, r3
 801213a:	b09d      	sub	sp, #116	; 0x74
 801213c:	4604      	mov	r4, r0
 801213e:	d954      	bls.n	80121ea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012140:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80121f4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8012144:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80121f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012148:	aa26      	add	r2, sp, #152	; 0x98
 801214a:	9202      	str	r2, [sp, #8]
 801214c:	f8d9 2000 	ldr.w	r2, [r9]
 8012150:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012154:	f8d8 3000 	ldr.w	r3, [r8]
 8012158:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801215c:	682b      	ldr	r3, [r5, #0]
 801215e:	4628      	mov	r0, r5
 8012160:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012162:	4798      	blx	r3
 8012164:	b207      	sxth	r7, r0
 8012166:	4606      	mov	r6, r0
 8012168:	a803      	add	r0, sp, #12
 801216a:	f005 fc61 	bl	8017a30 <_ZN8touchgfx12TextProviderC1Ev>
 801216e:	682b      	ldr	r3, [r5, #0]
 8012170:	4628      	mov	r0, r5
 8012172:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012174:	4798      	blx	r3
 8012176:	682b      	ldr	r3, [r5, #0]
 8012178:	4682      	mov	sl, r0
 801217a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801217c:	4628      	mov	r0, r5
 801217e:	4798      	blx	r3
 8012180:	4653      	mov	r3, sl
 8012182:	9000      	str	r0, [sp, #0]
 8012184:	9a02      	ldr	r2, [sp, #8]
 8012186:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012188:	a803      	add	r0, sp, #12
 801218a:	f005 fcac 	bl	8017ae6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801218e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012190:	f8d9 3000 	ldr.w	r3, [r9]
 8012194:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012198:	8925      	ldrh	r5, [r4, #8]
 801219a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801219e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80121a2:	eba5 050c 	sub.w	r5, r5, ip
 80121a6:	784a      	ldrb	r2, [r1, #1]
 80121a8:	f8d8 3000 	ldr.w	r3, [r8]
 80121ac:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80121b0:	b22d      	sxth	r5, r5
 80121b2:	9500      	str	r5, [sp, #0]
 80121b4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80121b8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80121bc:	a803      	add	r0, sp, #12
 80121be:	f003 f8b9 	bl	8015334 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80121c2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80121c6:	18b9      	adds	r1, r7, r2
 80121c8:	2900      	cmp	r1, #0
 80121ca:	b203      	sxth	r3, r0
 80121cc:	dd0b      	ble.n	80121e6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80121ce:	3b01      	subs	r3, #1
 80121d0:	fb13 f302 	smulbb	r3, r3, r2
 80121d4:	fb16 3300 	smlabb	r3, r6, r0, r3
 80121d8:	b21f      	sxth	r7, r3
 80121da:	4638      	mov	r0, r7
 80121dc:	b01d      	add	sp, #116	; 0x74
 80121de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80121e2:	b003      	add	sp, #12
 80121e4:	4770      	bx	lr
 80121e6:	2b00      	cmp	r3, #0
 80121e8:	dcf7      	bgt.n	80121da <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80121ea:	2700      	movs	r7, #0
 80121ec:	e7f5      	b.n	80121da <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80121ee:	bf00      	nop
 80121f0:	20013318 	.word	0x20013318
 80121f4:	20013314 	.word	0x20013314
 80121f8:	2001331c 	.word	0x2001331c

080121fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80121fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012200:	4bbc      	ldr	r3, [pc, #752]	; (80124f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8012202:	460c      	mov	r4, r1
 8012204:	881b      	ldrh	r3, [r3, #0]
 8012206:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012208:	428b      	cmp	r3, r1
 801220a:	b0a9      	sub	sp, #164	; 0xa4
 801220c:	4680      	mov	r8, r0
 801220e:	d809      	bhi.n	8012224 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012210:	2300      	movs	r3, #0
 8012212:	f04f 32ff 	mov.w	r2, #4294967295
 8012216:	e9c0 3200 	strd	r3, r2, [r0]
 801221a:	6083      	str	r3, [r0, #8]
 801221c:	4640      	mov	r0, r8
 801221e:	b029      	add	sp, #164	; 0xa4
 8012220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012224:	4eb4      	ldr	r6, [pc, #720]	; (80124f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8012226:	6833      	ldr	r3, [r6, #0]
 8012228:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801222c:	4bb3      	ldr	r3, [pc, #716]	; (80124fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801222e:	681b      	ldr	r3, [r3, #0]
 8012230:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012234:	4bb2      	ldr	r3, [pc, #712]	; (8012500 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012236:	6818      	ldr	r0, [r3, #0]
 8012238:	f7f5 fe10 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 801223c:	682b      	ldr	r3, [r5, #0]
 801223e:	4681      	mov	r9, r0
 8012240:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012242:	4628      	mov	r0, r5
 8012244:	4798      	blx	r3
 8012246:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8012248:	b203      	sxth	r3, r0
 801224a:	4407      	add	r7, r0
 801224c:	9304      	str	r3, [sp, #16]
 801224e:	b2bb      	uxth	r3, r7
 8012250:	9303      	str	r3, [sp, #12]
 8012252:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012256:	4682      	mov	sl, r0
 8012258:	a80f      	add	r0, sp, #60	; 0x3c
 801225a:	2b00      	cmp	r3, #0
 801225c:	f040 80a6 	bne.w	80123ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012260:	f005 fbe6 	bl	8017a30 <_ZN8touchgfx12TextProviderC1Ev>
 8012264:	682b      	ldr	r3, [r5, #0]
 8012266:	4628      	mov	r0, r5
 8012268:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801226a:	4798      	blx	r3
 801226c:	682b      	ldr	r3, [r5, #0]
 801226e:	4606      	mov	r6, r0
 8012270:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012272:	4628      	mov	r0, r5
 8012274:	4798      	blx	r3
 8012276:	6823      	ldr	r3, [r4, #0]
 8012278:	4607      	mov	r7, r0
 801227a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801227c:	4620      	mov	r0, r4
 801227e:	4798      	blx	r3
 8012280:	6823      	ldr	r3, [r4, #0]
 8012282:	4683      	mov	fp, r0
 8012284:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012288:	4620      	mov	r0, r4
 801228a:	4798      	blx	r3
 801228c:	463b      	mov	r3, r7
 801228e:	e9cd b000 	strd	fp, r0, [sp]
 8012292:	4649      	mov	r1, r9
 8012294:	4632      	mov	r2, r6
 8012296:	a80f      	add	r0, sp, #60	; 0x3c
 8012298:	f005 fc3a 	bl	8017b10 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801229c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80122a0:	f8df b254 	ldr.w	fp, [pc, #596]	; 80124f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80122a4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80122a8:	f04f 0600 	mov.w	r6, #0
 80122ac:	bf0c      	ite	eq
 80122ae:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80122b2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80122b6:	4637      	mov	r7, r6
 80122b8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80122ba:	f8db 3000 	ldr.w	r3, [fp]
 80122be:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80122c2:	4629      	mov	r1, r5
 80122c4:	785b      	ldrb	r3, [r3, #1]
 80122c6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80122ca:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80122ce:	a80f      	add	r0, sp, #60	; 0x3c
 80122d0:	f002 fd4b 	bl	8014d6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80122d4:	9b03      	ldr	r3, [sp, #12]
 80122d6:	4286      	cmp	r6, r0
 80122d8:	bfb8      	it	lt
 80122da:	4606      	movlt	r6, r0
 80122dc:	3701      	adds	r7, #1
 80122de:	eba9 0903 	sub.w	r9, r9, r3
 80122e2:	a80f      	add	r0, sp, #60	; 0x3c
 80122e4:	b236      	sxth	r6, r6
 80122e6:	b2bf      	uxth	r7, r7
 80122e8:	fa0f f989 	sxth.w	r9, r9
 80122ec:	f005 fbc7 	bl	8017a7e <_ZN8touchgfx12TextProvider11endOfStringEv>
 80122f0:	b918      	cbnz	r0, 80122fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80122f2:	7a2b      	ldrb	r3, [r5, #8]
 80122f4:	444b      	add	r3, r9
 80122f6:	2b00      	cmp	r3, #0
 80122f8:	dcde      	bgt.n	80122b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80122fa:	9b03      	ldr	r3, [sp, #12]
 80122fc:	9a04      	ldr	r2, [sp, #16]
 80122fe:	f895 9009 	ldrb.w	r9, [r5, #9]
 8012302:	fb13 f707 	smulbb	r7, r3, r7
 8012306:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012308:	1aff      	subs	r7, r7, r3
 801230a:	b2bf      	uxth	r7, r7
 801230c:	b23b      	sxth	r3, r7
 801230e:	429a      	cmp	r2, r3
 8012310:	bfa8      	it	ge
 8012312:	4657      	movge	r7, sl
 8012314:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012318:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801231c:	6823      	ldr	r3, [r4, #0]
 801231e:	bf08      	it	eq
 8012320:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8012324:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012326:	bf18      	it	ne
 8012328:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801232c:	4620      	mov	r0, r4
 801232e:	4798      	blx	r3
 8012330:	444f      	add	r7, r9
 8012332:	fa1f f987 	uxth.w	r9, r7
 8012336:	2801      	cmp	r0, #1
 8012338:	fa0f f789 	sxth.w	r7, r9
 801233c:	b2b3      	uxth	r3, r6
 801233e:	f000 80e1 	beq.w	8012504 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8012342:	2802      	cmp	r0, #2
 8012344:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8012348:	f000 80e2 	beq.w	8012510 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801234c:	7aea      	ldrb	r2, [r5, #11]
 801234e:	7b2d      	ldrb	r5, [r5, #12]
 8012350:	b236      	sxth	r6, r6
 8012352:	1ab6      	subs	r6, r6, r2
 8012354:	442a      	add	r2, r5
 8012356:	4413      	add	r3, r2
 8012358:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801235c:	fa1f fa86 	uxth.w	sl, r6
 8012360:	b29b      	uxth	r3, r3
 8012362:	2a02      	cmp	r2, #2
 8012364:	fa0f fb8a 	sxth.w	fp, sl
 8012368:	b21e      	sxth	r6, r3
 801236a:	f000 80d5 	beq.w	8012518 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801236e:	2a03      	cmp	r2, #3
 8012370:	f000 80dd 	beq.w	801252e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8012374:	2a01      	cmp	r2, #1
 8012376:	f040 80e5 	bne.w	8012544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801237a:	8925      	ldrh	r5, [r4, #8]
 801237c:	4633      	mov	r3, r6
 801237e:	eba5 0909 	sub.w	r9, r5, r9
 8012382:	463e      	mov	r6, r7
 8012384:	465d      	mov	r5, fp
 8012386:	461f      	mov	r7, r3
 8012388:	fa0f fb89 	sxth.w	fp, r9
 801238c:	4b5c      	ldr	r3, [pc, #368]	; (8012500 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801238e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012390:	6818      	ldr	r0, [r3, #0]
 8012392:	f7f5 fd63 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8012396:	f8a8 b000 	strh.w	fp, [r8]
 801239a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801239e:	f8a8 6004 	strh.w	r6, [r8, #4]
 80123a2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80123a6:	f8c8 0008 	str.w	r0, [r8, #8]
 80123aa:	e737      	b.n	801221c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80123ac:	f005 fb40 	bl	8017a30 <_ZN8touchgfx12TextProviderC1Ev>
 80123b0:	682b      	ldr	r3, [r5, #0]
 80123b2:	4628      	mov	r0, r5
 80123b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80123b6:	4798      	blx	r3
 80123b8:	682b      	ldr	r3, [r5, #0]
 80123ba:	4607      	mov	r7, r0
 80123bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80123be:	4628      	mov	r0, r5
 80123c0:	4798      	blx	r3
 80123c2:	6823      	ldr	r3, [r4, #0]
 80123c4:	4683      	mov	fp, r0
 80123c6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80123c8:	4620      	mov	r0, r4
 80123ca:	4798      	blx	r3
 80123cc:	6822      	ldr	r2, [r4, #0]
 80123ce:	9005      	str	r0, [sp, #20]
 80123d0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80123d4:	4620      	mov	r0, r4
 80123d6:	4790      	blx	r2
 80123d8:	9b05      	ldr	r3, [sp, #20]
 80123da:	9001      	str	r0, [sp, #4]
 80123dc:	463a      	mov	r2, r7
 80123de:	4649      	mov	r1, r9
 80123e0:	9300      	str	r3, [sp, #0]
 80123e2:	a80f      	add	r0, sp, #60	; 0x3c
 80123e4:	465b      	mov	r3, fp
 80123e6:	f005 fb93 	bl	8017b10 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80123ea:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80123ee:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80123f2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80123f4:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80123f8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80123fc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012400:	bf0a      	itet	eq
 8012402:	464a      	moveq	r2, r9
 8012404:	461a      	movne	r2, r3
 8012406:	4699      	moveq	r9, r3
 8012408:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801240c:	1ad2      	subs	r2, r2, r3
 801240e:	6833      	ldr	r3, [r6, #0]
 8012410:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8012414:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012418:	af0f      	add	r7, sp, #60	; 0x3c
 801241a:	7859      	ldrb	r1, [r3, #1]
 801241c:	9707      	str	r7, [sp, #28]
 801241e:	2300      	movs	r3, #0
 8012420:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8012424:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012428:	f88d 1020 	strb.w	r1, [sp, #32]
 801242c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012430:	9509      	str	r5, [sp, #36]	; 0x24
 8012432:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012436:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801243a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801243e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012442:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012446:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801244a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801244e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012452:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012456:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801245a:	b350      	cbz	r0, 80124b2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801245c:	682b      	ldr	r3, [r5, #0]
 801245e:	4628      	mov	r0, r5
 8012460:	695b      	ldr	r3, [r3, #20]
 8012462:	4798      	blx	r3
 8012464:	4607      	mov	r7, r0
 8012466:	b320      	cbz	r0, 80124b2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012468:	9809      	ldr	r0, [sp, #36]	; 0x24
 801246a:	6803      	ldr	r3, [r0, #0]
 801246c:	4639      	mov	r1, r7
 801246e:	68db      	ldr	r3, [r3, #12]
 8012470:	4798      	blx	r3
 8012472:	4606      	mov	r6, r0
 8012474:	b1e8      	cbz	r0, 80124b2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012476:	7b43      	ldrb	r3, [r0, #13]
 8012478:	7a82      	ldrb	r2, [r0, #10]
 801247a:	005b      	lsls	r3, r3, #1
 801247c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012480:	4313      	orrs	r3, r2
 8012482:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012486:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801248a:	2b06      	cmp	r3, #6
 801248c:	d111      	bne.n	80124b2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801248e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012490:	6803      	ldr	r3, [r0, #0]
 8012492:	4632      	mov	r2, r6
 8012494:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012496:	4639      	mov	r1, r7
 8012498:	4798      	blx	r3
 801249a:	7b73      	ldrb	r3, [r6, #13]
 801249c:	005b      	lsls	r3, r3, #1
 801249e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80124a2:	7ab3      	ldrb	r3, [r6, #10]
 80124a4:	4313      	orrs	r3, r2
 80124a6:	4418      	add	r0, r3
 80124a8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80124ac:	4418      	add	r0, r3
 80124ae:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80124b2:	2600      	movs	r6, #0
 80124b4:	4637      	mov	r7, r6
 80124b6:	a806      	add	r0, sp, #24
 80124b8:	f002 fe38 	bl	801512c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80124bc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80124c0:	9b03      	ldr	r3, [sp, #12]
 80124c2:	4286      	cmp	r6, r0
 80124c4:	eba9 0903 	sub.w	r9, r9, r3
 80124c8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80124cc:	bfb8      	it	lt
 80124ce:	4606      	movlt	r6, r0
 80124d0:	3701      	adds	r7, #1
 80124d2:	b236      	sxth	r6, r6
 80124d4:	b2bf      	uxth	r7, r7
 80124d6:	fa0f f989 	sxth.w	r9, r9
 80124da:	2b00      	cmp	r3, #0
 80124dc:	f43f af0d 	beq.w	80122fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80124e0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80124e4:	2b00      	cmp	r3, #0
 80124e6:	f47f af08 	bne.w	80122fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80124ea:	7a2b      	ldrb	r3, [r5, #8]
 80124ec:	444b      	add	r3, r9
 80124ee:	2b00      	cmp	r3, #0
 80124f0:	dce1      	bgt.n	80124b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80124f2:	e702      	b.n	80122fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80124f4:	20013318 	.word	0x20013318
 80124f8:	20013314 	.word	0x20013314
 80124fc:	2001331c 	.word	0x2001331c
 8012500:	20013320 	.word	0x20013320
 8012504:	ebaa 0606 	sub.w	r6, sl, r6
 8012508:	2002      	movs	r0, #2
 801250a:	fb96 f6f0 	sdiv	r6, r6, r0
 801250e:	e71d      	b.n	801234c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012510:	441e      	add	r6, r3
 8012512:	ebaa 0606 	sub.w	r6, sl, r6
 8012516:	e719      	b.n	801234c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012518:	8925      	ldrh	r5, [r4, #8]
 801251a:	1aed      	subs	r5, r5, r3
 801251c:	eba5 050a 	sub.w	r5, r5, sl
 8012520:	fa0f fb85 	sxth.w	fp, r5
 8012524:	8965      	ldrh	r5, [r4, #10]
 8012526:	eba5 0509 	sub.w	r5, r5, r9
 801252a:	b22d      	sxth	r5, r5
 801252c:	e72e      	b.n	801238c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801252e:	8965      	ldrh	r5, [r4, #10]
 8012530:	1aed      	subs	r5, r5, r3
 8012532:	eba5 050a 	sub.w	r5, r5, sl
 8012536:	4633      	mov	r3, r6
 8012538:	b22d      	sxth	r5, r5
 801253a:	463e      	mov	r6, r7
 801253c:	f04f 0b00 	mov.w	fp, #0
 8012540:	461f      	mov	r7, r3
 8012542:	e723      	b.n	801238c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012544:	2500      	movs	r5, #0
 8012546:	e721      	b.n	801238c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08012548 <_ZN8touchgfx8TextAreaD0Ev>:
 8012548:	b510      	push	{r4, lr}
 801254a:	2148      	movs	r1, #72	; 0x48
 801254c:	4604      	mov	r4, r0
 801254e:	f017 fc54 	bl	8029dfa <_ZdlPvj>
 8012552:	4620      	mov	r0, r4
 8012554:	bd10      	pop	{r4, pc}
	...

08012558 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012558:	b513      	push	{r0, r1, r4, lr}
 801255a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801255e:	4604      	mov	r4, r0
 8012560:	b1fb      	cbz	r3, 80125a2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012562:	4b16      	ldr	r3, [pc, #88]	; (80125bc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8012564:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012566:	881b      	ldrh	r3, [r3, #0]
 8012568:	428b      	cmp	r3, r1
 801256a:	d91a      	bls.n	80125a2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801256c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012570:	2b00      	cmp	r3, #0
 8012572:	dd16      	ble.n	80125a2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012574:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012578:	2b00      	cmp	r3, #0
 801257a:	dd12      	ble.n	80125a2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801257c:	4b10      	ldr	r3, [pc, #64]	; (80125c0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801257e:	6818      	ldr	r0, [r3, #0]
 8012580:	f7f5 fc6c 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8012584:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012588:	6822      	ldr	r2, [r4, #0]
 801258a:	2b00      	cmp	r3, #0
 801258c:	db06      	blt.n	801259c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801258e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012592:	2b00      	cmp	r3, #0
 8012594:	db02      	blt.n	801259c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012596:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012598:	4298      	cmp	r0, r3
 801259a:	d004      	beq.n	80125a6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801259c:	6953      	ldr	r3, [r2, #20]
 801259e:	4620      	mov	r0, r4
 80125a0:	4798      	blx	r3
 80125a2:	b002      	add	sp, #8
 80125a4:	bd10      	pop	{r4, pc}
 80125a6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80125aa:	c903      	ldmia	r1, {r0, r1}
 80125ac:	466b      	mov	r3, sp
 80125ae:	e883 0003 	stmia.w	r3, {r0, r1}
 80125b2:	6912      	ldr	r2, [r2, #16]
 80125b4:	4619      	mov	r1, r3
 80125b6:	4620      	mov	r0, r4
 80125b8:	4790      	blx	r2
 80125ba:	e7f2      	b.n	80125a2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80125bc:	20013318 	.word	0x20013318
 80125c0:	20013320 	.word	0x20013320

080125c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80125c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125c8:	4b44      	ldr	r3, [pc, #272]	; (80126dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80125ca:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80125cc:	881b      	ldrh	r3, [r3, #0]
 80125ce:	4293      	cmp	r3, r2
 80125d0:	b08e      	sub	sp, #56	; 0x38
 80125d2:	4604      	mov	r4, r0
 80125d4:	d97e      	bls.n	80126d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80125d6:	6808      	ldr	r0, [r1, #0]
 80125d8:	4d41      	ldr	r5, [pc, #260]	; (80126e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80125da:	6849      	ldr	r1, [r1, #4]
 80125dc:	ab05      	add	r3, sp, #20
 80125de:	c303      	stmia	r3!, {r0, r1}
 80125e0:	4611      	mov	r1, r2
 80125e2:	6828      	ldr	r0, [r5, #0]
 80125e4:	f7f5 fc3a 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 80125e8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80125ec:	2b00      	cmp	r3, #0
 80125ee:	db11      	blt.n	8012614 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80125f0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80125f4:	2b00      	cmp	r3, #0
 80125f6:	db0d      	blt.n	8012614 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80125f8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80125fa:	4298      	cmp	r0, r3
 80125fc:	d10a      	bne.n	8012614 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80125fe:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8012602:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012606:	ab09      	add	r3, sp, #36	; 0x24
 8012608:	e883 0003 	stmia.w	r3, {r0, r1}
 801260c:	4619      	mov	r1, r3
 801260e:	a805      	add	r0, sp, #20
 8012610:	f7fd fbec 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 8012614:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012618:	2b00      	cmp	r3, #0
 801261a:	dd5b      	ble.n	80126d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801261c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012620:	2b00      	cmp	r3, #0
 8012622:	dd57      	ble.n	80126d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012624:	4f2f      	ldr	r7, [pc, #188]	; (80126e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8012626:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012628:	683b      	ldr	r3, [r7, #0]
 801262a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801262e:	4b2e      	ldr	r3, [pc, #184]	; (80126e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012630:	681b      	ldr	r3, [r3, #0]
 8012632:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012636:	2e00      	cmp	r6, #0
 8012638:	d04c      	beq.n	80126d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801263a:	6823      	ldr	r3, [r4, #0]
 801263c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012640:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012642:	4620      	mov	r0, r4
 8012644:	4798      	blx	r3
 8012646:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012648:	683b      	ldr	r3, [r7, #0]
 801264a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801264e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8012652:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8012656:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012658:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801265c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012660:	785b      	ldrb	r3, [r3, #1]
 8012662:	9609      	str	r6, [sp, #36]	; 0x24
 8012664:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012668:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801266c:	4b1f      	ldr	r3, [pc, #124]	; (80126ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801266e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8012672:	681b      	ldr	r3, [r3, #0]
 8012674:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012678:	910b      	str	r1, [sp, #44]	; 0x2c
 801267a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801267e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8012682:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8012686:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801268a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801268e:	b10a      	cbz	r2, 8012694 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012690:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012692:	b906      	cbnz	r6, 8012696 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012694:	689e      	ldr	r6, [r3, #8]
 8012696:	af07      	add	r7, sp, #28
 8012698:	4621      	mov	r1, r4
 801269a:	4638      	mov	r0, r7
 801269c:	f004 fc7c 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80126a0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80126a2:	6828      	ldr	r0, [r5, #0]
 80126a4:	f7f5 fbda 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 80126a8:	6823      	ldr	r3, [r4, #0]
 80126aa:	4605      	mov	r5, r0
 80126ac:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80126ae:	4620      	mov	r0, r4
 80126b0:	4798      	blx	r3
 80126b2:	6823      	ldr	r3, [r4, #0]
 80126b4:	4680      	mov	r8, r0
 80126b6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80126ba:	4620      	mov	r0, r4
 80126bc:	4798      	blx	r3
 80126be:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80126c2:	ab09      	add	r3, sp, #36	; 0x24
 80126c4:	9300      	str	r3, [sp, #0]
 80126c6:	9501      	str	r5, [sp, #4]
 80126c8:	ab05      	add	r3, sp, #20
 80126ca:	e897 0006 	ldmia.w	r7, {r1, r2}
 80126ce:	4630      	mov	r0, r6
 80126d0:	f7f5 fb76 	bl	8007dc0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80126d4:	b00e      	add	sp, #56	; 0x38
 80126d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80126da:	bf00      	nop
 80126dc:	20013318 	.word	0x20013318
 80126e0:	20013320 	.word	0x20013320
 80126e4:	20013314 	.word	0x20013314
 80126e8:	2001331c 	.word	0x2001331c
 80126ec:	200132bc 	.word	0x200132bc

080126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80126f0:	b538      	push	{r3, r4, r5, lr}
 80126f2:	4b0e      	ldr	r3, [pc, #56]	; (801272c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80126f4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80126f6:	881b      	ldrh	r3, [r3, #0]
 80126f8:	429a      	cmp	r2, r3
 80126fa:	4604      	mov	r4, r0
 80126fc:	d214      	bcs.n	8012728 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80126fe:	6803      	ldr	r3, [r0, #0]
 8012700:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012702:	4798      	blx	r3
 8012704:	6823      	ldr	r3, [r4, #0]
 8012706:	4605      	mov	r5, r0
 8012708:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801270a:	4620      	mov	r0, r4
 801270c:	4798      	blx	r3
 801270e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012712:	b22d      	sxth	r5, r5
 8012714:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012718:	4601      	mov	r1, r0
 801271a:	bf06      	itte	eq
 801271c:	4602      	moveq	r2, r0
 801271e:	4629      	moveq	r1, r5
 8012720:	462a      	movne	r2, r5
 8012722:	4620      	mov	r0, r4
 8012724:	f7fd f942 	bl	800f9ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012728:	bd38      	pop	{r3, r4, r5, pc}
 801272a:	bf00      	nop
 801272c:	20013318 	.word	0x20013318

08012730 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012730:	b530      	push	{r4, r5, lr}
 8012732:	888b      	ldrh	r3, [r1, #4]
 8012734:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012736:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801273a:	b085      	sub	sp, #20
 801273c:	4604      	mov	r4, r0
 801273e:	b923      	cbnz	r3, 801274a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012740:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012744:	b90b      	cbnz	r3, 801274a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012746:	f7ff ffd3 	bl	80126f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801274a:	6823      	ldr	r3, [r4, #0]
 801274c:	466d      	mov	r5, sp
 801274e:	4621      	mov	r1, r4
 8012750:	4628      	mov	r0, r5
 8012752:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012756:	4798      	blx	r3
 8012758:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801275c:	343c      	adds	r4, #60	; 0x3c
 801275e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012762:	b005      	add	sp, #20
 8012764:	bd30      	pop	{r4, r5, pc}

08012766 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012766:	2300      	movs	r3, #0
 8012768:	8083      	strh	r3, [r0, #4]
 801276a:	80c3      	strh	r3, [r0, #6]
 801276c:	8003      	strh	r3, [r0, #0]
 801276e:	8043      	strh	r3, [r0, #2]
 8012770:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012774:	2bff      	cmp	r3, #255	; 0xff
 8012776:	bf01      	itttt	eq
 8012778:	890b      	ldrheq	r3, [r1, #8]
 801277a:	8083      	strheq	r3, [r0, #4]
 801277c:	894b      	ldrheq	r3, [r1, #10]
 801277e:	80c3      	strheq	r3, [r0, #6]
 8012780:	4770      	bx	lr
	...

08012784 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012784:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012786:	4604      	mov	r4, r0
 8012788:	6808      	ldr	r0, [r1, #0]
 801278a:	6849      	ldr	r1, [r1, #4]
 801278c:	466b      	mov	r3, sp
 801278e:	c303      	stmia	r3!, {r0, r1}
 8012790:	6823      	ldr	r3, [r4, #0]
 8012792:	4669      	mov	r1, sp
 8012794:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012796:	4620      	mov	r0, r4
 8012798:	4798      	blx	r3
 801279a:	4b08      	ldr	r3, [pc, #32]	; (80127bc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801279c:	681b      	ldr	r3, [r3, #0]
 801279e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80127a2:	b10a      	cbz	r2, 80127a8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80127a4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80127a6:	b900      	cbnz	r0, 80127aa <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80127a8:	6898      	ldr	r0, [r3, #8]
 80127aa:	6803      	ldr	r3, [r0, #0]
 80127ac:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80127ae:	6a1d      	ldr	r5, [r3, #32]
 80127b0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80127b4:	4669      	mov	r1, sp
 80127b6:	47a8      	blx	r5
 80127b8:	b003      	add	sp, #12
 80127ba:	bd30      	pop	{r4, r5, pc}
 80127bc:	200132bc 	.word	0x200132bc

080127c0 <_ZN8touchgfx3BoxD1Ev>:
 80127c0:	4770      	bx	lr

080127c2 <_ZN8touchgfx3BoxD0Ev>:
 80127c2:	b510      	push	{r4, lr}
 80127c4:	212c      	movs	r1, #44	; 0x2c
 80127c6:	4604      	mov	r4, r0
 80127c8:	f017 fb17 	bl	8029dfa <_ZdlPvj>
 80127cc:	4620      	mov	r0, r4
 80127ce:	bd10      	pop	{r4, pc}

080127d0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80127d0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80127d4:	b12a      	cbz	r2, 80127e2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80127d6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80127da:	b112      	cbz	r2, 80127e2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80127dc:	6803      	ldr	r3, [r0, #0]
 80127de:	695b      	ldr	r3, [r3, #20]
 80127e0:	4718      	bx	r3
 80127e2:	4770      	bx	lr

080127e4 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 80127e4:	b570      	push	{r4, r5, r6, lr}
 80127e6:	6803      	ldr	r3, [r0, #0]
 80127e8:	4604      	mov	r4, r0
 80127ea:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80127ec:	4615      	mov	r5, r2
 80127ee:	4798      	blx	r3
 80127f0:	6823      	ldr	r3, [r4, #0]
 80127f2:	4629      	mov	r1, r5
 80127f4:	4620      	mov	r0, r4
 80127f6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80127f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80127fc:	4718      	bx	r3

080127fe <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 80127fe:	b570      	push	{r4, r5, r6, lr}
 8012800:	6803      	ldr	r3, [r0, #0]
 8012802:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012804:	4604      	mov	r4, r0
 8012806:	460e      	mov	r6, r1
 8012808:	4615      	mov	r5, r2
 801280a:	4798      	blx	r3
 801280c:	8030      	strh	r0, [r6, #0]
 801280e:	6823      	ldr	r3, [r4, #0]
 8012810:	4620      	mov	r0, r4
 8012812:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012814:	4798      	blx	r3
 8012816:	8028      	strh	r0, [r5, #0]
 8012818:	bd70      	pop	{r4, r5, r6, pc}

0801281a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801281a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801281e:	4770      	bx	lr

08012820 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8012820:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8012824:	4770      	bx	lr

08012826 <_ZN8touchgfx10TiledImageD1Ev>:
 8012826:	4770      	bx	lr

08012828 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8012828:	b510      	push	{r4, lr}
 801282a:	4604      	mov	r4, r0
 801282c:	f000 fd31 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012830:	6823      	ldr	r3, [r4, #0]
 8012832:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8012836:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801283a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801283c:	4620      	mov	r0, r4
 801283e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012842:	4718      	bx	r3

08012844 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8012844:	b538      	push	{r3, r4, r5, lr}
 8012846:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801284a:	4604      	mov	r4, r0
 801284c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801284e:	4628      	mov	r0, r5
 8012850:	f006 fe6e 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012854:	b188      	cbz	r0, 801287a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8012856:	4628      	mov	r0, r5
 8012858:	f006 fe6a 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801285c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8012860:	fb92 f3f0 	sdiv	r3, r2, r0
 8012864:	fb03 2010 	mls	r0, r3, r0, r2
 8012868:	2800      	cmp	r0, #0
 801286a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801286c:	da05      	bge.n	801287a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801286e:	4628      	mov	r0, r5
 8012870:	f006 fe5e 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012874:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8012876:	4418      	add	r0, r3
 8012878:	8560      	strh	r0, [r4, #42]	; 0x2a
 801287a:	bd38      	pop	{r3, r4, r5, pc}

0801287c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801287c:	b538      	push	{r3, r4, r5, lr}
 801287e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8012882:	4604      	mov	r4, r0
 8012884:	8581      	strh	r1, [r0, #44]	; 0x2c
 8012886:	4628      	mov	r0, r5
 8012888:	f006 fe86 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801288c:	b188      	cbz	r0, 80128b2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 801288e:	4628      	mov	r0, r5
 8012890:	f006 fe82 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012894:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8012898:	fb92 f3f0 	sdiv	r3, r2, r0
 801289c:	fb03 2010 	mls	r0, r3, r0, r2
 80128a0:	2800      	cmp	r0, #0
 80128a2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80128a4:	da05      	bge.n	80128b2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80128a6:	4628      	mov	r0, r5
 80128a8:	f006 fe76 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80128ac:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80128ae:	4418      	add	r0, r3
 80128b0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80128b2:	bd38      	pop	{r3, r4, r5, pc}

080128b4 <_ZN8touchgfx10TiledImageD0Ev>:
 80128b4:	b510      	push	{r4, lr}
 80128b6:	2130      	movs	r1, #48	; 0x30
 80128b8:	4604      	mov	r4, r0
 80128ba:	f017 fa9e 	bl	8029dfa <_ZdlPvj>
 80128be:	4620      	mov	r0, r4
 80128c0:	bd10      	pop	{r4, pc}
	...

080128c4 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80128c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128c8:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 80128cc:	b093      	sub	sp, #76	; 0x4c
 80128ce:	4607      	mov	r7, r0
 80128d0:	4658      	mov	r0, fp
 80128d2:	460e      	mov	r6, r1
 80128d4:	f006 fe2c 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80128d8:	4681      	mov	r9, r0
 80128da:	4658      	mov	r0, fp
 80128dc:	f006 fe5c 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80128e0:	4605      	mov	r5, r0
 80128e2:	f1b9 0f00 	cmp.w	r9, #0
 80128e6:	f000 80c4 	beq.w	8012a72 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80128ea:	2800      	cmp	r0, #0
 80128ec:	f000 80c1 	beq.w	8012a72 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80128f0:	2300      	movs	r3, #0
 80128f2:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 80128f6:	683b      	ldr	r3, [r7, #0]
 80128f8:	a90e      	add	r1, sp, #56	; 0x38
 80128fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80128fc:	4638      	mov	r0, r7
 80128fe:	4798      	blx	r3
 8012900:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8012904:	f9b6 3000 	ldrsh.w	r3, [r6]
 8012908:	88b1      	ldrh	r1, [r6, #4]
 801290a:	fa1f f889 	uxth.w	r8, r9
 801290e:	189c      	adds	r4, r3, r2
 8012910:	440b      	add	r3, r1
 8012912:	fa02 f383 	sxtah	r3, r2, r3
 8012916:	fb94 f4f9 	sdiv	r4, r4, r9
 801291a:	fb14 f408 	smulbb	r4, r4, r8
 801291e:	1aa4      	subs	r4, r4, r2
 8012920:	3b01      	subs	r3, #1
 8012922:	b2aa      	uxth	r2, r5
 8012924:	fb93 f3f9 	sdiv	r3, r3, r9
 8012928:	fb13 f308 	smulbb	r3, r3, r8
 801292c:	b21b      	sxth	r3, r3
 801292e:	9205      	str	r2, [sp, #20]
 8012930:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8012934:	9805      	ldr	r0, [sp, #20]
 8012936:	930b      	str	r3, [sp, #44]	; 0x2c
 8012938:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801293c:	185a      	adds	r2, r3, r1
 801293e:	fb92 f2f5 	sdiv	r2, r2, r5
 8012942:	fb12 f200 	smulbb	r2, r2, r0
 8012946:	1a52      	subs	r2, r2, r1
 8012948:	b212      	sxth	r2, r2
 801294a:	920c      	str	r2, [sp, #48]	; 0x30
 801294c:	88f2      	ldrh	r2, [r6, #6]
 801294e:	4413      	add	r3, r2
 8012950:	fa01 f383 	sxtah	r3, r1, r3
 8012954:	3b01      	subs	r3, #1
 8012956:	fb93 f3f5 	sdiv	r3, r3, r5
 801295a:	fb13 f300 	smulbb	r3, r3, r0
 801295e:	b2a4      	uxth	r4, r4
 8012960:	b21b      	sxth	r3, r3
 8012962:	930d      	str	r3, [sp, #52]	; 0x34
 8012964:	eb08 0504 	add.w	r5, r8, r4
 8012968:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801296a:	b223      	sxth	r3, r4
 801296c:	4293      	cmp	r3, r2
 801296e:	b2ad      	uxth	r5, r5
 8012970:	9306      	str	r3, [sp, #24]
 8012972:	dc7e      	bgt.n	8012a72 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8012974:	b22b      	sxth	r3, r5
 8012976:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801297a:	930a      	str	r3, [sp, #40]	; 0x28
 801297c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801297e:	4599      	cmp	r9, r3
 8012980:	dd03      	ble.n	801298a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8012982:	4444      	add	r4, r8
 8012984:	b2a4      	uxth	r4, r4
 8012986:	4445      	add	r5, r8
 8012988:	e7ee      	b.n	8012968 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 801298a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801298e:	88b2      	ldrh	r2, [r6, #4]
 8012990:	9806      	ldr	r0, [sp, #24]
 8012992:	9905      	ldr	r1, [sp, #20]
 8012994:	4462      	add	r2, ip
 8012996:	b292      	uxth	r2, r2
 8012998:	b213      	sxth	r3, r2
 801299a:	9308      	str	r3, [sp, #32]
 801299c:	fa1f f389 	uxth.w	r3, r9
 80129a0:	4419      	add	r1, r3
 80129a2:	9307      	str	r3, [sp, #28]
 80129a4:	4603      	mov	r3, r0
 80129a6:	9808      	ldr	r0, [sp, #32]
 80129a8:	b289      	uxth	r1, r1
 80129aa:	4283      	cmp	r3, r0
 80129ac:	fa0f fa81 	sxth.w	sl, r1
 80129b0:	da5b      	bge.n	8012a6a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80129b2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80129b4:	4584      	cmp	ip, r0
 80129b6:	da58      	bge.n	8012a6a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80129b8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80129bc:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80129c0:	4486      	add	lr, r0
 80129c2:	fa1f fe8e 	uxth.w	lr, lr
 80129c6:	fa0f f38e 	sxth.w	r3, lr
 80129ca:	4599      	cmp	r9, r3
 80129cc:	9309      	str	r3, [sp, #36]	; 0x24
 80129ce:	da4c      	bge.n	8012a6a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80129d0:	4550      	cmp	r0, sl
 80129d2:	da4a      	bge.n	8012a6a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80129d4:	9b06      	ldr	r3, [sp, #24]
 80129d6:	459c      	cmp	ip, r3
 80129d8:	bfb8      	it	lt
 80129da:	469c      	movlt	ip, r3
 80129dc:	9b08      	ldr	r3, [sp, #32]
 80129de:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 80129e2:	4548      	cmp	r0, r9
 80129e4:	bfb8      	it	lt
 80129e6:	4648      	movlt	r0, r9
 80129e8:	4699      	mov	r9, r3
 80129ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80129ec:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 80129f0:	4599      	cmp	r9, r3
 80129f2:	bfc8      	it	gt
 80129f4:	462a      	movgt	r2, r5
 80129f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80129f8:	4553      	cmp	r3, sl
 80129fa:	bfd8      	it	le
 80129fc:	4671      	movle	r1, lr
 80129fe:	eba2 020c 	sub.w	r2, r2, ip
 8012a02:	1a09      	subs	r1, r1, r0
 8012a04:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8012a08:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 8012a0c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8012a10:	9b07      	ldr	r3, [sp, #28]
 8012a12:	1b12      	subs	r2, r2, r4
 8012a14:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012a18:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012a1c:	1ad2      	subs	r2, r2, r3
 8012a1e:	4b16      	ldr	r3, [pc, #88]	; (8012a78 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8012a20:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8012a24:	681a      	ldr	r2, [r3, #0]
 8012a26:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 8012a2a:	b109      	cbz	r1, 8012a30 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 8012a2c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 8012a2e:	b900      	cbnz	r0, 8012a32 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8012a30:	6890      	ldr	r0, [r2, #8]
 8012a32:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012a36:	9b07      	ldr	r3, [sp, #28]
 8012a38:	6801      	ldr	r1, [r0, #0]
 8012a3a:	f04f 0c01 	mov.w	ip, #1
 8012a3e:	f8cd c008 	str.w	ip, [sp, #8]
 8012a42:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8012a46:	f8cd c004 	str.w	ip, [sp, #4]
 8012a4a:	4413      	add	r3, r2
 8012a4c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8012a50:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8012a54:	f8cd c000 	str.w	ip, [sp]
 8012a58:	4422      	add	r2, r4
 8012a5a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 8012a5e:	b21b      	sxth	r3, r3
 8012a60:	b212      	sxth	r2, r2
 8012a62:	4659      	mov	r1, fp
 8012a64:	47c8      	blx	r9
 8012a66:	46d1      	mov	r9, sl
 8012a68:	e788      	b.n	801297c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 8012a6a:	2300      	movs	r3, #0
 8012a6c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8012a70:	e7cc      	b.n	8012a0c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8012a72:	b013      	add	sp, #76	; 0x4c
 8012a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a78:	200132bc 	.word	0x200132bc

08012a7c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 8012a7c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a80:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8012a84:	2bff      	cmp	r3, #255	; 0xff
 8012a86:	4606      	mov	r6, r0
 8012a88:	4689      	mov	r9, r1
 8012a8a:	d008      	beq.n	8012a9e <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 8012a8c:	2300      	movs	r3, #0
 8012a8e:	8003      	strh	r3, [r0, #0]
 8012a90:	8043      	strh	r3, [r0, #2]
 8012a92:	8083      	strh	r3, [r0, #4]
 8012a94:	4630      	mov	r0, r6
 8012a96:	80f3      	strh	r3, [r6, #6]
 8012a98:	b003      	add	sp, #12
 8012a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a9e:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8012aa2:	4659      	mov	r1, fp
 8012aa4:	4668      	mov	r0, sp
 8012aa6:	f006 fdab 	bl	8019600 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012aaa:	4658      	mov	r0, fp
 8012aac:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8012ab0:	f9bd 7000 	ldrsh.w	r7, [sp]
 8012ab4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8012ab8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 8012abc:	f006 fd38 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012ac0:	4284      	cmp	r4, r0
 8012ac2:	d10d      	bne.n	8012ae0 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8012ac4:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8012ac8:	4658      	mov	r0, fp
 8012aca:	f006 fd65 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012ace:	4580      	cmp	r8, r0
 8012ad0:	d129      	bne.n	8012b26 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8012ad2:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8012ad6:	8037      	strh	r7, [r6, #0]
 8012ad8:	f8a6 a002 	strh.w	sl, [r6, #2]
 8012adc:	80b5      	strh	r5, [r6, #4]
 8012ade:	e7d9      	b.n	8012a94 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8012ae0:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8012ae4:	4658      	mov	r0, fp
 8012ae6:	f006 fd23 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012aea:	1b7f      	subs	r7, r7, r5
 8012aec:	b2bd      	uxth	r5, r7
 8012aee:	b22f      	sxth	r7, r5
 8012af0:	4428      	add	r0, r5
 8012af2:	2f00      	cmp	r7, #0
 8012af4:	b2a3      	uxth	r3, r4
 8012af6:	b280      	uxth	r0, r0
 8012af8:	bfb8      	it	lt
 8012afa:	18ed      	addlt	r5, r5, r3
 8012afc:	4403      	add	r3, r0
 8012afe:	b29b      	uxth	r3, r3
 8012b00:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8012b04:	bfb8      	it	lt
 8012b06:	b22d      	sxthlt	r5, r5
 8012b08:	b219      	sxth	r1, r3
 8012b0a:	bfae      	itee	ge
 8012b0c:	4625      	movge	r5, r4
 8012b0e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8012b12:	2700      	movlt	r7, #0
 8012b14:	4291      	cmp	r1, r2
 8012b16:	bfc4      	itt	gt
 8012b18:	1a9c      	subgt	r4, r3, r2
 8012b1a:	b224      	sxthgt	r4, r4
 8012b1c:	42ac      	cmp	r4, r5
 8012b1e:	bfc4      	itt	gt
 8012b20:	b207      	sxthgt	r7, r0
 8012b22:	4625      	movgt	r5, r4
 8012b24:	e7d0      	b.n	8012ac8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8012b26:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 8012b2a:	4658      	mov	r0, fp
 8012b2c:	f006 fd34 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012b30:	ebaa 0404 	sub.w	r4, sl, r4
 8012b34:	b2a4      	uxth	r4, r4
 8012b36:	fa0f fa84 	sxth.w	sl, r4
 8012b3a:	4420      	add	r0, r4
 8012b3c:	f1ba 0f00 	cmp.w	sl, #0
 8012b40:	fa1f f288 	uxth.w	r2, r8
 8012b44:	b280      	uxth	r0, r0
 8012b46:	bfb8      	it	lt
 8012b48:	18a3      	addlt	r3, r4, r2
 8012b4a:	4402      	add	r2, r0
 8012b4c:	b292      	uxth	r2, r2
 8012b4e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8012b52:	bfb8      	it	lt
 8012b54:	b21b      	sxthlt	r3, r3
 8012b56:	b214      	sxth	r4, r2
 8012b58:	bfae      	itee	ge
 8012b5a:	4643      	movge	r3, r8
 8012b5c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012b60:	f04f 0a00 	movlt.w	sl, #0
 8012b64:	428c      	cmp	r4, r1
 8012b66:	bfc4      	itt	gt
 8012b68:	eba2 0801 	subgt.w	r8, r2, r1
 8012b6c:	fa0f f888 	sxthgt.w	r8, r8
 8012b70:	4598      	cmp	r8, r3
 8012b72:	bfc4      	itt	gt
 8012b74:	fa0f fa80 	sxthgt.w	sl, r0
 8012b78:	4643      	movgt	r3, r8
 8012b7a:	e7ac      	b.n	8012ad6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

08012b7c <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012b7c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8012b80:	b12a      	cbz	r2, 8012b8e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012b82:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012b86:	b112      	cbz	r2, 8012b8e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012b88:	6803      	ldr	r3, [r0, #0]
 8012b8a:	695b      	ldr	r3, [r3, #20]
 8012b8c:	4718      	bx	r3
 8012b8e:	4770      	bx	lr

08012b90 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012b90:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012b94:	600b      	str	r3, [r1, #0]
 8012b96:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012b9a:	6013      	str	r3, [r2, #0]
 8012b9c:	4770      	bx	lr

08012b9e <_ZN8touchgfx5Gauge8setWidthEs>:
 8012b9e:	8101      	strh	r1, [r0, #8]
 8012ba0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012ba4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012ba8:	4770      	bx	lr

08012baa <_ZN8touchgfx5Gauge9setHeightEs>:
 8012baa:	8141      	strh	r1, [r0, #10]
 8012bac:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012bb0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012bb4:	4770      	bx	lr

08012bb6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012bb6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012bba:	4770      	bx	lr

08012bbc <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012bbc:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012bc0:	4770      	bx	lr

08012bc2 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012bc2:	4770      	bx	lr

08012bc4 <_ZN8touchgfx5GaugeD1Ev>:
 8012bc4:	4770      	bx	lr

08012bc6 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012bc6:	b538      	push	{r3, r4, r5, lr}
 8012bc8:	4604      	mov	r4, r0
 8012bca:	460d      	mov	r5, r1
 8012bcc:	f7fc fe07 	bl	800f7de <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012bd0:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012bd4:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012bd8:	bd38      	pop	{r3, r4, r5, pc}

08012bda <_ZN8touchgfx5GaugeD0Ev>:
 8012bda:	b510      	push	{r4, lr}
 8012bdc:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012be0:	4604      	mov	r4, r0
 8012be2:	f017 f90a 	bl	8029dfa <_ZdlPvj>
 8012be6:	4620      	mov	r0, r4
 8012be8:	bd10      	pop	{r4, pc}

08012bea <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012bea:	b510      	push	{r4, lr}
 8012bec:	6803      	ldr	r3, [r0, #0]
 8012bee:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012bf2:	4604      	mov	r4, r0
 8012bf4:	4798      	blx	r3
 8012bf6:	b170      	cbz	r0, 8012c16 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012bf8:	6823      	ldr	r3, [r4, #0]
 8012bfa:	4620      	mov	r0, r4
 8012bfc:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012c00:	4798      	blx	r3
 8012c02:	b140      	cbz	r0, 8012c16 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012c04:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012c08:	b12b      	cbz	r3, 8012c16 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012c0a:	6823      	ldr	r3, [r4, #0]
 8012c0c:	4620      	mov	r0, r4
 8012c0e:	695b      	ldr	r3, [r3, #20]
 8012c10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012c14:	4718      	bx	r3
 8012c16:	bd10      	pop	{r4, pc}

08012c18 <_ZN8touchgfx5GaugeC1Ev>:
 8012c18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012c1a:	4604      	mov	r4, r0
 8012c1c:	4626      	mov	r6, r4
 8012c1e:	f7fc feff 	bl	800fa20 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012c22:	4b18      	ldr	r3, [pc, #96]	; (8012c84 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012c24:	f846 3bb4 	str.w	r3, [r6], #180
 8012c28:	a902      	add	r1, sp, #8
 8012c2a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012c2e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012c32:	4630      	mov	r0, r6
 8012c34:	f015 f9a4 	bl	8027f80 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012c38:	2500      	movs	r5, #0
 8012c3a:	2301      	movs	r3, #1
 8012c3c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012c40:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012c44:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012c48:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012c4c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012c50:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012c54:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012c58:	4638      	mov	r0, r7
 8012c5a:	f014 fbd5 	bl	8027408 <_ZN8touchgfx6CircleC1Ev>
 8012c5e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012c62:	4620      	mov	r0, r4
 8012c64:	f7fc ff7d 	bl	800fb62 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012c68:	4639      	mov	r1, r7
 8012c6a:	4620      	mov	r0, r4
 8012c6c:	f7fc ff38 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012c70:	4620      	mov	r0, r4
 8012c72:	4631      	mov	r1, r6
 8012c74:	f7fc ff34 	bl	800fae0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012c78:	4620      	mov	r0, r4
 8012c7a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012c7e:	b003      	add	sp, #12
 8012c80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c82:	bf00      	nop
 8012c84:	0802ebf0 	.word	0x0802ebf0

08012c88 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012c88:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012c8c:	4770      	bx	lr

08012c8e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012c8e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012c92:	4770      	bx	lr

08012c94 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012c94:	b538      	push	{r3, r4, r5, lr}
 8012c96:	8902      	ldrh	r2, [r0, #8]
 8012c98:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012c9c:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012ca0:	4604      	mov	r4, r0
 8012ca2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012ca6:	2200      	movs	r2, #0
 8012ca8:	4611      	mov	r1, r2
 8012caa:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012cae:	4628      	mov	r0, r5
 8012cb0:	f7ef fe52 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8012cb4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012cb8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012cbc:	1a9b      	subs	r3, r3, r2
 8012cbe:	ee07 3a90 	vmov	s15, r3
 8012cc2:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012cc6:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012cca:	1a9b      	subs	r3, r3, r2
 8012ccc:	ee07 3a10 	vmov	s14, r3
 8012cd0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012cd4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012cd8:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012cdc:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012ce0:	4628      	mov	r0, r5
 8012ce2:	f015 f999 	bl	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012ce6:	4b16      	ldr	r3, [pc, #88]	; (8012d40 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012ce8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012cec:	4628      	mov	r0, r5
 8012cee:	f015 f993 	bl	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012cf2:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012cf6:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012cfa:	ee07 3a90 	vmov	s15, r3
 8012cfe:	ee07 2a10 	vmov	s14, r2
 8012d02:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012d06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d0a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012d0e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012d12:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012d16:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012d1a:	4628      	mov	r0, r5
 8012d1c:	f015 f97c 	bl	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012d20:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012d24:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012d28:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012d2c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8012d30:	4628      	mov	r0, r5
 8012d32:	f015 f971 	bl	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012d36:	2301      	movs	r3, #1
 8012d38:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012d3c:	bd38      	pop	{r3, r4, r5, pc}
 8012d3e:	bf00      	nop
 8012d40:	43960000 	.word	0x43960000

08012d44 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012d44:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012d46:	4604      	mov	r4, r0
 8012d48:	a802      	add	r0, sp, #8
 8012d4a:	4616      	mov	r6, r2
 8012d4c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8012d50:	461d      	mov	r5, r3
 8012d52:	4601      	mov	r1, r0
 8012d54:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012d58:	f015 fab4 	bl	80282c4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012d5c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8012d60:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012d64:	4620      	mov	r0, r4
 8012d66:	f7ff ff95 	bl	8012c94 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012d6a:	b002      	add	sp, #8
 8012d6c:	bd70      	pop	{r4, r5, r6, pc}

08012d6e <_ZN8touchgfx5Gauge9setCenterEii>:
 8012d6e:	b570      	push	{r4, r5, r6, lr}
 8012d70:	4606      	mov	r6, r0
 8012d72:	460d      	mov	r5, r1
 8012d74:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012d78:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012d7c:	4614      	mov	r4, r2
 8012d7e:	f7ff ff89 	bl	8012c94 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012d82:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012d86:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012d8a:	1aa4      	subs	r4, r4, r2
 8012d8c:	1a6d      	subs	r5, r5, r1
 8012d8e:	0164      	lsls	r4, r4, #5
 8012d90:	016d      	lsls	r5, r5, #5
 8012d92:	3410      	adds	r4, #16
 8012d94:	3510      	adds	r5, #16
 8012d96:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012d9a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8012d9e:	bd70      	pop	{r4, r5, r6, pc}

08012da0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8012da0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012da2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012da4:	0149      	lsls	r1, r1, #5
 8012da6:	4299      	cmp	r1, r3
 8012da8:	4604      	mov	r4, r0
 8012daa:	9101      	str	r1, [sp, #4]
 8012dac:	d00b      	beq.n	8012dc6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8012dae:	4601      	mov	r1, r0
 8012db0:	aa01      	add	r2, sp, #4
 8012db2:	a802      	add	r0, sp, #8
 8012db4:	f014 fd26 	bl	8027804 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012db8:	9b01      	ldr	r3, [sp, #4]
 8012dba:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012dbc:	6823      	ldr	r3, [r4, #0]
 8012dbe:	a902      	add	r1, sp, #8
 8012dc0:	691b      	ldr	r3, [r3, #16]
 8012dc2:	4620      	mov	r0, r4
 8012dc4:	4798      	blx	r3
 8012dc6:	b004      	add	sp, #16
 8012dc8:	bd10      	pop	{r4, pc}
	...

08012dcc <_ZN8touchgfx5Gauge8setValueEi>:
 8012dcc:	b570      	push	{r4, r5, r6, lr}
 8012dce:	4604      	mov	r4, r0
 8012dd0:	f7fc fd58 	bl	800f884 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012dd4:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012dd8:	429a      	cmp	r2, r3
 8012dda:	bfac      	ite	ge
 8012ddc:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8012de0:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012de4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012de8:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012dec:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012df0:	1ac9      	subs	r1, r1, r3
 8012df2:	2900      	cmp	r1, #0
 8012df4:	bfb8      	it	lt
 8012df6:	4249      	neglt	r1, r1
 8012df8:	b289      	uxth	r1, r1
 8012dfa:	4620      	mov	r0, r4
 8012dfc:	f7fc fd64 	bl	800f8c8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012e00:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012e04:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012e08:	eddf 6a19 	vldr	s13, [pc, #100]	; 8012e70 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012e0c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012e74 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8012e10:	429a      	cmp	r2, r3
 8012e12:	4605      	mov	r5, r0
 8012e14:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012e18:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012e1c:	da15      	bge.n	8012e4a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8012e1e:	1b5b      	subs	r3, r3, r5
 8012e20:	ee07 3a90 	vmov	s15, r3
 8012e24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e28:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012e2c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012e30:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012e34:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012e38:	f015 f85d 	bl	8027ef6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012e3c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012e40:	1b49      	subs	r1, r1, r5
 8012e42:	4630      	mov	r0, r6
 8012e44:	f7ff ffac 	bl	8012da0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012e48:	bd70      	pop	{r4, r5, r6, pc}
 8012e4a:	442b      	add	r3, r5
 8012e4c:	ee07 3a90 	vmov	s15, r3
 8012e50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e54:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012e58:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012e5c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012e60:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012e64:	f015 f847 	bl	8027ef6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012e68:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012e6c:	4429      	add	r1, r5
 8012e6e:	e7e8      	b.n	8012e42 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8012e70:	43340000 	.word	0x43340000
 8012e74:	40490fdb 	.word	0x40490fdb

08012e78 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012e78:	b510      	push	{r4, lr}
 8012e7a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8012e7e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8012e82:	0149      	lsls	r1, r1, #5
 8012e84:	0152      	lsls	r2, r2, #5
 8012e86:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012e8a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8012e8e:	4604      	mov	r4, r0
 8012e90:	f7fc fca2 	bl	800f7d8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012e94:	4601      	mov	r1, r0
 8012e96:	4620      	mov	r0, r4
 8012e98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012e9c:	f7ff bf96 	b.w	8012dcc <_ZN8touchgfx5Gauge8setValueEi>

08012ea0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012ea0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012ea4:	4770      	bx	lr

08012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012ea6:	b570      	push	{r4, r5, r6, lr}
 8012ea8:	880b      	ldrh	r3, [r1, #0]
 8012eaa:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012eac:	4605      	mov	r5, r0
 8012eae:	8813      	ldrh	r3, [r2, #0]
 8012eb0:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012eb4:	4604      	mov	r4, r0
 8012eb6:	4628      	mov	r0, r5
 8012eb8:	f006 fb3a 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012ebc:	4606      	mov	r6, r0
 8012ebe:	4628      	mov	r0, r5
 8012ec0:	f006 fb6a 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012ec4:	6823      	ldr	r3, [r4, #0]
 8012ec6:	4605      	mov	r5, r0
 8012ec8:	4631      	mov	r1, r6
 8012eca:	4620      	mov	r0, r4
 8012ecc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ece:	4798      	blx	r3
 8012ed0:	6823      	ldr	r3, [r4, #0]
 8012ed2:	4629      	mov	r1, r5
 8012ed4:	4620      	mov	r0, r4
 8012ed6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012ed8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012edc:	4718      	bx	r3

08012ede <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012ede:	b510      	push	{r4, lr}
 8012ee0:	4604      	mov	r4, r0
 8012ee2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012ee4:	b150      	cbz	r0, 8012efc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012ee6:	6803      	ldr	r3, [r0, #0]
 8012ee8:	68db      	ldr	r3, [r3, #12]
 8012eea:	4798      	blx	r3
 8012eec:	b130      	cbz	r0, 8012efc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012eee:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012ef0:	6803      	ldr	r3, [r0, #0]
 8012ef2:	4621      	mov	r1, r4
 8012ef4:	689b      	ldr	r3, [r3, #8]
 8012ef6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012efa:	4718      	bx	r3
 8012efc:	bd10      	pop	{r4, pc}

08012efe <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012efe:	b510      	push	{r4, lr}
 8012f00:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012f04:	2bff      	cmp	r3, #255	; 0xff
 8012f06:	4604      	mov	r4, r0
 8012f08:	d006      	beq.n	8012f18 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012f0a:	2300      	movs	r3, #0
 8012f0c:	8003      	strh	r3, [r0, #0]
 8012f0e:	8043      	strh	r3, [r0, #2]
 8012f10:	8083      	strh	r3, [r0, #4]
 8012f12:	80c3      	strh	r3, [r0, #6]
 8012f14:	4620      	mov	r0, r4
 8012f16:	bd10      	pop	{r4, pc}
 8012f18:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012f1c:	b11b      	cbz	r3, 8012f26 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012f1e:	3130      	adds	r1, #48	; 0x30
 8012f20:	f006 fb6e 	bl	8019600 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012f24:	e7f6      	b.n	8012f14 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012f26:	312e      	adds	r1, #46	; 0x2e
 8012f28:	e7fa      	b.n	8012f20 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012f2c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f30:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012f34:	b08a      	sub	sp, #40	; 0x28
 8012f36:	4604      	mov	r4, r0
 8012f38:	4688      	mov	r8, r1
 8012f3a:	2b00      	cmp	r3, #0
 8012f3c:	d066      	beq.n	801300c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8012f3e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012f40:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012f44:	a805      	add	r0, sp, #20
 8012f46:	f006 faf3 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012f4a:	4607      	mov	r7, r0
 8012f4c:	a805      	add	r0, sp, #20
 8012f4e:	f006 fb23 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012f52:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012f56:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012f5a:	4432      	add	r2, r6
 8012f5c:	b292      	uxth	r2, r2
 8012f5e:	2300      	movs	r3, #0
 8012f60:	fa0f fc82 	sxth.w	ip, r2
 8012f64:	459c      	cmp	ip, r3
 8012f66:	9306      	str	r3, [sp, #24]
 8012f68:	dd52      	ble.n	8013010 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012f6a:	42b7      	cmp	r7, r6
 8012f6c:	dd50      	ble.n	8013010 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012f6e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8012f72:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012f76:	442b      	add	r3, r5
 8012f78:	b29b      	uxth	r3, r3
 8012f7a:	b219      	sxth	r1, r3
 8012f7c:	2900      	cmp	r1, #0
 8012f7e:	dd47      	ble.n	8013010 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012f80:	42a8      	cmp	r0, r5
 8012f82:	dd45      	ble.n	8013010 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012f84:	4567      	cmp	r7, ip
 8012f86:	bfb8      	it	lt
 8012f88:	b2ba      	uxthlt	r2, r7
 8012f8a:	4288      	cmp	r0, r1
 8012f8c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012f90:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012f94:	bfb8      	it	lt
 8012f96:	b283      	uxthlt	r3, r0
 8012f98:	1b92      	subs	r2, r2, r6
 8012f9a:	1b5b      	subs	r3, r3, r5
 8012f9c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012fa0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012fa4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012fa8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012fac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012fb0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012fb4:	429a      	cmp	r2, r3
 8012fb6:	d026      	beq.n	8013006 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012fb8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012fbc:	2b00      	cmp	r3, #0
 8012fbe:	dd22      	ble.n	8013006 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012fc0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012fc4:	2b00      	cmp	r3, #0
 8012fc6:	dd1e      	ble.n	8013006 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012fc8:	2300      	movs	r3, #0
 8012fca:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8012fce:	6823      	ldr	r3, [r4, #0]
 8012fd0:	a908      	add	r1, sp, #32
 8012fd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012fd4:	4620      	mov	r0, r4
 8012fd6:	4798      	blx	r3
 8012fd8:	4b0f      	ldr	r3, [pc, #60]	; (8013018 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8012fda:	681b      	ldr	r3, [r3, #0]
 8012fdc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012fe0:	b10a      	cbz	r2, 8012fe6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012fe2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012fe4:	b900      	cbnz	r0, 8012fe8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012fe6:	6898      	ldr	r0, [r3, #8]
 8012fe8:	6801      	ldr	r1, [r0, #0]
 8012fea:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012fee:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012ff2:	2501      	movs	r5, #1
 8012ff4:	9502      	str	r5, [sp, #8]
 8012ff6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012ffa:	9401      	str	r4, [sp, #4]
 8012ffc:	ac06      	add	r4, sp, #24
 8012ffe:	9400      	str	r4, [sp, #0]
 8013000:	688c      	ldr	r4, [r1, #8]
 8013002:	a905      	add	r1, sp, #20
 8013004:	47a0      	blx	r4
 8013006:	b00a      	add	sp, #40	; 0x28
 8013008:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801300c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801300e:	e797      	b.n	8012f40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013010:	2300      	movs	r3, #0
 8013012:	9307      	str	r3, [sp, #28]
 8013014:	e7ca      	b.n	8012fac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013016:	bf00      	nop
 8013018:	200132bc 	.word	0x200132bc

0801301c <_ZNK8touchgfx6Button17invalidateContentEv>:
 801301c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8013020:	b12a      	cbz	r2, 801302e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013022:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013026:	b112      	cbz	r2, 801302e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013028:	6803      	ldr	r3, [r0, #0]
 801302a:	695b      	ldr	r3, [r3, #20]
 801302c:	4718      	bx	r3
 801302e:	4770      	bx	lr

08013030 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013030:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013034:	4b2f      	ldr	r3, [pc, #188]	; (80130f4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013036:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013038:	881b      	ldrh	r3, [r3, #0]
 801303a:	4293      	cmp	r3, r2
 801303c:	b08d      	sub	sp, #52	; 0x34
 801303e:	4604      	mov	r4, r0
 8013040:	460f      	mov	r7, r1
 8013042:	d954      	bls.n	80130ee <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013044:	4b2c      	ldr	r3, [pc, #176]	; (80130f8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013046:	6819      	ldr	r1, [r3, #0]
 8013048:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801304c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013050:	4a2a      	ldr	r2, [pc, #168]	; (80130fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013052:	6812      	ldr	r2, [r2, #0]
 8013054:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013058:	2900      	cmp	r1, #0
 801305a:	d048      	beq.n	80130ee <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801305c:	785a      	ldrb	r2, [r3, #1]
 801305e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013062:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013066:	4b26      	ldr	r3, [pc, #152]	; (8013100 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013068:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801306c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8013070:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013074:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013076:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801307a:	9107      	str	r1, [sp, #28]
 801307c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8013080:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013084:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013088:	681a      	ldr	r2, [r3, #0]
 801308a:	f88d 8020 	strb.w	r8, [sp, #32]
 801308e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8013092:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013096:	9609      	str	r6, [sp, #36]	; 0x24
 8013098:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 801309c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80130a0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80130a4:	b10b      	cbz	r3, 80130aa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80130a6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80130a8:	b905      	cbnz	r5, 80130ac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80130aa:	6895      	ldr	r5, [r2, #8]
 80130ac:	ae05      	add	r6, sp, #20
 80130ae:	4621      	mov	r1, r4
 80130b0:	4630      	mov	r0, r6
 80130b2:	f003 ff71 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80130b6:	4b13      	ldr	r3, [pc, #76]	; (8013104 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80130b8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80130ba:	6818      	ldr	r0, [r3, #0]
 80130bc:	f7f4 fece 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 80130c0:	6823      	ldr	r3, [r4, #0]
 80130c2:	4680      	mov	r8, r0
 80130c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80130c6:	4620      	mov	r0, r4
 80130c8:	4798      	blx	r3
 80130ca:	6823      	ldr	r3, [r4, #0]
 80130cc:	4681      	mov	r9, r0
 80130ce:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80130d2:	4620      	mov	r0, r4
 80130d4:	4798      	blx	r3
 80130d6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80130da:	ab07      	add	r3, sp, #28
 80130dc:	9300      	str	r3, [sp, #0]
 80130de:	f8cd 8004 	str.w	r8, [sp, #4]
 80130e2:	463b      	mov	r3, r7
 80130e4:	e896 0006 	ldmia.w	r6, {r1, r2}
 80130e8:	4628      	mov	r0, r5
 80130ea:	f7f4 fe69 	bl	8007dc0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80130ee:	b00d      	add	sp, #52	; 0x34
 80130f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80130f4:	20013318 	.word	0x20013318
 80130f8:	20013314 	.word	0x20013314
 80130fc:	2001331c 	.word	0x2001331c
 8013100:	200132bc 	.word	0x200132bc
 8013104:	20013320 	.word	0x20013320

08013108 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8013108:	4770      	bx	lr

0801310a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 801310a:	4770      	bx	lr

0801310c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 801310c:	b510      	push	{r4, lr}
 801310e:	213c      	movs	r1, #60	; 0x3c
 8013110:	4604      	mov	r4, r0
 8013112:	f016 fe72 	bl	8029dfa <_ZdlPvj>
 8013116:	4620      	mov	r0, r4
 8013118:	bd10      	pop	{r4, pc}

0801311a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 801311a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801311e:	461c      	mov	r4, r3
 8013120:	4606      	mov	r6, r0
 8013122:	9f06      	ldr	r7, [sp, #24]
 8013124:	f7ff febf 	bl	8012ea6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013128:	8823      	ldrh	r3, [r4, #0]
 801312a:	86b3      	strh	r3, [r6, #52]	; 0x34
 801312c:	883b      	ldrh	r3, [r7, #0]
 801312e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8013130:	4638      	mov	r0, r7
 8013132:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013136:	f006 f9fb 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801313a:	f04f 0802 	mov.w	r8, #2
 801313e:	fb95 f5f8 	sdiv	r5, r5, r8
 8013142:	b2ad      	uxth	r5, r5
 8013144:	fb90 f0f8 	sdiv	r0, r0, r8
 8013148:	1a2d      	subs	r5, r5, r0
 801314a:	8735      	strh	r5, [r6, #56]	; 0x38
 801314c:	4638      	mov	r0, r7
 801314e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8013152:	fb94 f4f8 	sdiv	r4, r4, r8
 8013156:	f006 fa1f 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801315a:	b2a4      	uxth	r4, r4
 801315c:	fb90 f0f8 	sdiv	r0, r0, r8
 8013160:	1a24      	subs	r4, r4, r0
 8013162:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013168 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801316c:	4604      	mov	r4, r0
 801316e:	b08c      	sub	sp, #48	; 0x30
 8013170:	460d      	mov	r5, r1
 8013172:	f7ff fedb 	bl	8012f2c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013176:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801317a:	2b00      	cmp	r3, #0
 801317c:	d05d      	beq.n	801323a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801317e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013180:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013184:	a805      	add	r0, sp, #20
 8013186:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 801318a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801318e:	f006 f9cf 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013192:	4606      	mov	r6, r0
 8013194:	a805      	add	r0, sp, #20
 8013196:	f006 f9ff 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801319a:	6869      	ldr	r1, [r5, #4]
 801319c:	f8ad 001e 	strh.w	r0, [sp, #30]
 80131a0:	6828      	ldr	r0, [r5, #0]
 80131a2:	f8ad 8018 	strh.w	r8, [sp, #24]
 80131a6:	ab08      	add	r3, sp, #32
 80131a8:	ad08      	add	r5, sp, #32
 80131aa:	c303      	stmia	r3!, {r0, r1}
 80131ac:	a906      	add	r1, sp, #24
 80131ae:	4628      	mov	r0, r5
 80131b0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80131b4:	f8ad 601c 	strh.w	r6, [sp, #28]
 80131b8:	f7fc fe18 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 80131bc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80131c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80131c4:	429a      	cmp	r2, r3
 80131c6:	d035      	beq.n	8013234 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80131c8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80131cc:	2b00      	cmp	r3, #0
 80131ce:	dd31      	ble.n	8013234 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80131d0:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80131d4:	2b00      	cmp	r3, #0
 80131d6:	dd2d      	ble.n	8013234 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80131d8:	2300      	movs	r3, #0
 80131da:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80131de:	6823      	ldr	r3, [r4, #0]
 80131e0:	a90a      	add	r1, sp, #40	; 0x28
 80131e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131e4:	4620      	mov	r0, r4
 80131e6:	4798      	blx	r3
 80131e8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80131ec:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80131ee:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80131f2:	1a9b      	subs	r3, r3, r2
 80131f4:	f8ad 3020 	strh.w	r3, [sp, #32]
 80131f8:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80131fa:	1ac9      	subs	r1, r1, r3
 80131fc:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8013200:	490f      	ldr	r1, [pc, #60]	; (8013240 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8013202:	6809      	ldr	r1, [r1, #0]
 8013204:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8013208:	b108      	cbz	r0, 801320e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 801320a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 801320c:	b900      	cbnz	r0, 8013210 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801320e:	6888      	ldr	r0, [r1, #8]
 8013210:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013214:	440b      	add	r3, r1
 8013216:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801321a:	2601      	movs	r6, #1
 801321c:	440a      	add	r2, r1
 801321e:	6801      	ldr	r1, [r0, #0]
 8013220:	9602      	str	r6, [sp, #8]
 8013222:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013226:	e9cd 5400 	strd	r5, r4, [sp]
 801322a:	b21b      	sxth	r3, r3
 801322c:	688c      	ldr	r4, [r1, #8]
 801322e:	b212      	sxth	r2, r2
 8013230:	a905      	add	r1, sp, #20
 8013232:	47a0      	blx	r4
 8013234:	b00c      	add	sp, #48	; 0x30
 8013236:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801323a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801323c:	e7a0      	b.n	8013180 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801323e:	bf00      	nop
 8013240:	200132bc 	.word	0x200132bc

08013244 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013244:	b510      	push	{r4, lr}
 8013246:	2101      	movs	r1, #1
 8013248:	2200      	movs	r2, #0
 801324a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801324e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013252:	4c0e      	ldr	r4, [pc, #56]	; (801328c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013254:	8082      	strh	r2, [r0, #4]
 8013256:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801325a:	80c2      	strh	r2, [r0, #6]
 801325c:	8102      	strh	r2, [r0, #8]
 801325e:	8142      	strh	r2, [r0, #10]
 8013260:	8182      	strh	r2, [r0, #12]
 8013262:	81c2      	strh	r2, [r0, #14]
 8013264:	8202      	strh	r2, [r0, #16]
 8013266:	8242      	strh	r2, [r0, #18]
 8013268:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801326c:	61c2      	str	r2, [r0, #28]
 801326e:	8402      	strh	r2, [r0, #32]
 8013270:	8442      	strh	r2, [r0, #34]	; 0x22
 8013272:	6282      	str	r2, [r0, #40]	; 0x28
 8013274:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013278:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801327a:	8601      	strh	r1, [r0, #48]	; 0x30
 801327c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013280:	6004      	str	r4, [r0, #0]
 8013282:	8681      	strh	r1, [r0, #52]	; 0x34
 8013284:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013286:	8702      	strh	r2, [r0, #56]	; 0x38
 8013288:	8742      	strh	r2, [r0, #58]	; 0x3a
 801328a:	bd10      	pop	{r4, pc}
 801328c:	0802ecd8 	.word	0x0802ecd8

08013290 <_ZN8touchgfx5ImageD1Ev>:
 8013290:	4770      	bx	lr

08013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013292:	b570      	push	{r4, r5, r6, lr}
 8013294:	880b      	ldrh	r3, [r1, #0]
 8013296:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013298:	4604      	mov	r4, r0
 801329a:	4608      	mov	r0, r1
 801329c:	460d      	mov	r5, r1
 801329e:	f006 f947 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80132a2:	4606      	mov	r6, r0
 80132a4:	4628      	mov	r0, r5
 80132a6:	f006 f977 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80132aa:	6823      	ldr	r3, [r4, #0]
 80132ac:	4605      	mov	r5, r0
 80132ae:	4631      	mov	r1, r6
 80132b0:	4620      	mov	r0, r4
 80132b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80132b4:	4798      	blx	r3
 80132b6:	6823      	ldr	r3, [r4, #0]
 80132b8:	4629      	mov	r1, r5
 80132ba:	4620      	mov	r0, r4
 80132bc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80132be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80132c2:	4718      	bx	r3

080132c4 <_ZN8touchgfx5ImageD0Ev>:
 80132c4:	b510      	push	{r4, lr}
 80132c6:	212c      	movs	r1, #44	; 0x2c
 80132c8:	4604      	mov	r4, r0
 80132ca:	f016 fd96 	bl	8029dfa <_ZdlPvj>
 80132ce:	4620      	mov	r0, r4
 80132d0:	bd10      	pop	{r4, pc}

080132d2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80132d2:	b510      	push	{r4, lr}
 80132d4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80132d8:	2bff      	cmp	r3, #255	; 0xff
 80132da:	4604      	mov	r4, r0
 80132dc:	d006      	beq.n	80132ec <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80132de:	2300      	movs	r3, #0
 80132e0:	8003      	strh	r3, [r0, #0]
 80132e2:	8043      	strh	r3, [r0, #2]
 80132e4:	8083      	strh	r3, [r0, #4]
 80132e6:	80c3      	strh	r3, [r0, #6]
 80132e8:	4620      	mov	r0, r4
 80132ea:	bd10      	pop	{r4, pc}
 80132ec:	3126      	adds	r1, #38	; 0x26
 80132ee:	f006 f987 	bl	8019600 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80132f2:	e7f9      	b.n	80132e8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080132f4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80132f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80132f8:	4604      	mov	r4, r0
 80132fa:	b088      	sub	sp, #32
 80132fc:	f854 3b26 	ldr.w	r3, [r4], #38
 8013300:	2500      	movs	r5, #0
 8013302:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013304:	460f      	mov	r7, r1
 8013306:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801330a:	a904      	add	r1, sp, #16
 801330c:	4606      	mov	r6, r0
 801330e:	4798      	blx	r3
 8013310:	4620      	mov	r0, r4
 8013312:	f006 f90d 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013316:	4680      	mov	r8, r0
 8013318:	4620      	mov	r0, r4
 801331a:	f006 f93d 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801331e:	9506      	str	r5, [sp, #24]
 8013320:	ad06      	add	r5, sp, #24
 8013322:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013326:	4639      	mov	r1, r7
 8013328:	4628      	mov	r0, r5
 801332a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801332e:	f7fc fd5d 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 8013332:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013336:	2b00      	cmp	r3, #0
 8013338:	dd19      	ble.n	801336e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801333a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801333e:	2b00      	cmp	r3, #0
 8013340:	dd15      	ble.n	801336e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013342:	4b0c      	ldr	r3, [pc, #48]	; (8013374 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013344:	681b      	ldr	r3, [r3, #0]
 8013346:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801334a:	b10a      	cbz	r2, 8013350 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801334c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801334e:	b900      	cbnz	r0, 8013352 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013350:	6898      	ldr	r0, [r3, #8]
 8013352:	6801      	ldr	r1, [r0, #0]
 8013354:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013358:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801335c:	2701      	movs	r7, #1
 801335e:	9702      	str	r7, [sp, #8]
 8013360:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013364:	e9cd 5600 	strd	r5, r6, [sp]
 8013368:	688d      	ldr	r5, [r1, #8]
 801336a:	4621      	mov	r1, r4
 801336c:	47a8      	blx	r5
 801336e:	b008      	add	sp, #32
 8013370:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013374:	200132bc 	.word	0x200132bc

08013378 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013378:	4770      	bx	lr

0801337a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801337a:	b510      	push	{r4, lr}
 801337c:	2148      	movs	r1, #72	; 0x48
 801337e:	4604      	mov	r4, r0
 8013380:	f016 fd3b 	bl	8029dfa <_ZdlPvj>
 8013384:	4620      	mov	r0, r4
 8013386:	bd10      	pop	{r4, pc}

08013388 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013388:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801338c:	b08d      	sub	sp, #52	; 0x34
 801338e:	4604      	mov	r4, r0
 8013390:	460f      	mov	r7, r1
 8013392:	f7ff fdcb 	bl	8012f2c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013396:	4a55      	ldr	r2, [pc, #340]	; (80134ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013398:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801339a:	8812      	ldrh	r2, [r2, #0]
 801339c:	429a      	cmp	r2, r3
 801339e:	f240 8082 	bls.w	80134a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80133a2:	4d53      	ldr	r5, [pc, #332]	; (80134f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80133a4:	682a      	ldr	r2, [r5, #0]
 80133a6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80133aa:	4b52      	ldr	r3, [pc, #328]	; (80134f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80133ac:	681b      	ldr	r3, [r3, #0]
 80133ae:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80133b2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80133b6:	2200      	movs	r2, #0
 80133b8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80133bc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80133c0:	2a03      	cmp	r2, #3
 80133c2:	d811      	bhi.n	80133e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80133c4:	e8df f002 	tbb	[pc, r2]
 80133c8:	89727902 	.word	0x89727902
 80133cc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80133d0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80133d4:	1ad2      	subs	r2, r2, r3
 80133d6:	2002      	movs	r0, #2
 80133d8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80133dc:	fb92 f2f0 	sdiv	r2, r2, r0
 80133e0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80133e4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80133e8:	f10d 080c 	add.w	r8, sp, #12
 80133ec:	e898 0003 	ldmia.w	r8, {r0, r1}
 80133f0:	f10d 0914 	add.w	r9, sp, #20
 80133f4:	e889 0003 	stmia.w	r9, {r0, r1}
 80133f8:	4639      	mov	r1, r7
 80133fa:	4648      	mov	r0, r9
 80133fc:	f7fc fcf6 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 8013400:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013404:	2b00      	cmp	r3, #0
 8013406:	dd4e      	ble.n	80134a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013408:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801340c:	2b00      	cmp	r3, #0
 801340e:	dd4a      	ble.n	80134a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013410:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013414:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013418:	1a9b      	subs	r3, r3, r2
 801341a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801341e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013422:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013426:	1a9b      	subs	r3, r3, r2
 8013428:	f8ad 3016 	strh.w	r3, [sp, #22]
 801342c:	6823      	ldr	r3, [r4, #0]
 801342e:	4641      	mov	r1, r8
 8013430:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013432:	4620      	mov	r0, r4
 8013434:	4798      	blx	r3
 8013436:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801343a:	2b00      	cmp	r3, #0
 801343c:	d053      	beq.n	80134e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801343e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013440:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013442:	682b      	ldr	r3, [r5, #0]
 8013444:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013448:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801344c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013450:	785b      	ldrb	r3, [r3, #1]
 8013452:	9209      	str	r2, [sp, #36]	; 0x24
 8013454:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013458:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801345c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013460:	2300      	movs	r3, #0
 8013462:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013466:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801346a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801346e:	4b22      	ldr	r3, [pc, #136]	; (80134f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013470:	9607      	str	r6, [sp, #28]
 8013472:	681b      	ldr	r3, [r3, #0]
 8013474:	f88d 5020 	strb.w	r5, [sp, #32]
 8013478:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801347c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013480:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013484:	b10a      	cbz	r2, 801348a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013486:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013488:	b904      	cbnz	r4, 801348c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801348a:	689c      	ldr	r4, [r3, #8]
 801348c:	4b1b      	ldr	r3, [pc, #108]	; (80134fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801348e:	6818      	ldr	r0, [r3, #0]
 8013490:	f7f4 fce4 	bl	8007e5c <_ZNK8touchgfx5Texts7getTextEt>
 8013494:	ab07      	add	r3, sp, #28
 8013496:	9001      	str	r0, [sp, #4]
 8013498:	9300      	str	r3, [sp, #0]
 801349a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801349e:	464b      	mov	r3, r9
 80134a0:	4620      	mov	r0, r4
 80134a2:	f7f4 fc8d 	bl	8007dc0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80134a6:	b00d      	add	sp, #52	; 0x34
 80134a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80134ac:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80134b0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80134b4:	1ad2      	subs	r2, r2, r3
 80134b6:	3201      	adds	r2, #1
 80134b8:	e78d      	b.n	80133d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80134ba:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80134be:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80134c2:	1ad2      	subs	r2, r2, r3
 80134c4:	3201      	adds	r2, #1
 80134c6:	2002      	movs	r0, #2
 80134c8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80134cc:	fb92 f2f0 	sdiv	r2, r2, r0
 80134d0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80134d4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80134d8:	e786      	b.n	80133e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80134da:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80134de:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80134e2:	1ad2      	subs	r2, r2, r3
 80134e4:	e7ef      	b.n	80134c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80134e6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80134e8:	e7aa      	b.n	8013440 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80134ea:	bf00      	nop
 80134ec:	20013318 	.word	0x20013318
 80134f0:	20013314 	.word	0x20013314
 80134f4:	2001331c 	.word	0x2001331c
 80134f8:	200132bc 	.word	0x200132bc
 80134fc:	20013320 	.word	0x20013320

08013500 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013500:	b510      	push	{r4, lr}
 8013502:	2101      	movs	r1, #1
 8013504:	4c13      	ldr	r4, [pc, #76]	; (8013554 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013506:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801350a:	2200      	movs	r2, #0
 801350c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013510:	6004      	str	r4, [r0, #0]
 8013512:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013516:	4c10      	ldr	r4, [pc, #64]	; (8013558 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013518:	8082      	strh	r2, [r0, #4]
 801351a:	80c2      	strh	r2, [r0, #6]
 801351c:	8102      	strh	r2, [r0, #8]
 801351e:	8142      	strh	r2, [r0, #10]
 8013520:	8182      	strh	r2, [r0, #12]
 8013522:	81c2      	strh	r2, [r0, #14]
 8013524:	8202      	strh	r2, [r0, #16]
 8013526:	8242      	strh	r2, [r0, #18]
 8013528:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801352c:	61c2      	str	r2, [r0, #28]
 801352e:	8402      	strh	r2, [r0, #32]
 8013530:	8442      	strh	r2, [r0, #34]	; 0x22
 8013532:	6282      	str	r2, [r0, #40]	; 0x28
 8013534:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013538:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801353a:	8601      	strh	r1, [r0, #48]	; 0x30
 801353c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013540:	6344      	str	r4, [r0, #52]	; 0x34
 8013542:	8701      	strh	r1, [r0, #56]	; 0x38
 8013544:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013548:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801354c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8013550:	bd10      	pop	{r4, pc}
 8013552:	bf00      	nop
 8013554:	0802edbc 	.word	0x0802edbc
 8013558:	0802c5b0 	.word	0x0802c5b0

0801355c <_ZN8touchgfx7OutlineD1Ev>:
 801355c:	4770      	bx	lr

0801355e <_ZN8touchgfx7OutlineD0Ev>:
 801355e:	b510      	push	{r4, lr}
 8013560:	2130      	movs	r1, #48	; 0x30
 8013562:	4604      	mov	r4, r0
 8013564:	f016 fc49 	bl	8029dfa <_ZdlPvj>
 8013568:	4620      	mov	r0, r4
 801356a:	bd10      	pop	{r4, pc}

0801356c <_ZN8touchgfx7Outline5resetEv>:
 801356c:	b510      	push	{r4, lr}
 801356e:	4604      	mov	r4, r0
 8013570:	f000 fe96 	bl	80142a0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013574:	60e0      	str	r0, [r4, #12]
 8013576:	f000 fe99 	bl	80142ac <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801357a:	68e3      	ldr	r3, [r4, #12]
 801357c:	6123      	str	r3, [r4, #16]
 801357e:	08c0      	lsrs	r0, r0, #3
 8013580:	2200      	movs	r2, #0
 8013582:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013586:	3801      	subs	r0, #1
 8013588:	6060      	str	r0, [r4, #4]
 801358a:	60a2      	str	r2, [r4, #8]
 801358c:	8019      	strh	r1, [r3, #0]
 801358e:	8059      	strh	r1, [r3, #2]
 8013590:	809a      	strh	r2, [r3, #4]
 8013592:	80da      	strh	r2, [r3, #6]
 8013594:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013596:	f023 0301 	bic.w	r3, r3, #1
 801359a:	f043 0302 	orr.w	r3, r3, #2
 801359e:	6263      	str	r3, [r4, #36]	; 0x24
 80135a0:	bd10      	pop	{r4, pc}
	...

080135a4 <_ZN8touchgfx7OutlineC1Ev>:
 80135a4:	b510      	push	{r4, lr}
 80135a6:	4b0a      	ldr	r3, [pc, #40]	; (80135d0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80135a8:	6003      	str	r3, [r0, #0]
 80135aa:	2300      	movs	r3, #0
 80135ac:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80135b0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80135b4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80135b8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80135bc:	6243      	str	r3, [r0, #36]	; 0x24
 80135be:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80135c2:	4604      	mov	r4, r0
 80135c4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80135c8:	f7ff ffd0 	bl	801356c <_ZN8touchgfx7Outline5resetEv>
 80135cc:	4620      	mov	r0, r4
 80135ce:	bd10      	pop	{r4, pc}
 80135d0:	0802ee30 	.word	0x0802ee30

080135d4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80135d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135d8:	b093      	sub	sp, #76	; 0x4c
 80135da:	1156      	asrs	r6, r2, #5
 80135dc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80135de:	9305      	str	r3, [sp, #20]
 80135e0:	f004 051f 	and.w	r5, r4, #31
 80135e4:	1153      	asrs	r3, r2, #5
 80135e6:	9504      	str	r5, [sp, #16]
 80135e8:	1165      	asrs	r5, r4, #5
 80135ea:	9303      	str	r3, [sp, #12]
 80135ec:	42ae      	cmp	r6, r5
 80135ee:	ea4f 1364 	mov.w	r3, r4, asr #5
 80135f2:	9306      	str	r3, [sp, #24]
 80135f4:	f002 031f 	and.w	r3, r2, #31
 80135f8:	f040 80f8 	bne.w	80137ec <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80135fc:	9c04      	ldr	r4, [sp, #16]
 80135fe:	9a05      	ldr	r2, [sp, #20]
 8013600:	42a3      	cmp	r3, r4
 8013602:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8013606:	6902      	ldr	r2, [r0, #16]
 8013608:	d125      	bne.n	8013656 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801360a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801360e:	459e      	cmp	lr, r3
 8013610:	d103      	bne.n	801361a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8013612:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013616:	429e      	cmp	r6, r3
 8013618:	d035      	beq.n	8013686 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801361a:	88d1      	ldrh	r1, [r2, #6]
 801361c:	8893      	ldrh	r3, [r2, #4]
 801361e:	430b      	orrs	r3, r1
 8013620:	d010      	beq.n	8013644 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013622:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013626:	2b00      	cmp	r3, #0
 8013628:	db0c      	blt.n	8013644 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801362a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801362c:	428b      	cmp	r3, r1
 801362e:	da09      	bge.n	8013644 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013630:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013634:	428b      	cmp	r3, r1
 8013636:	bf38      	it	cc
 8013638:	3208      	addcc	r2, #8
 801363a:	f103 0301 	add.w	r3, r3, #1
 801363e:	bf38      	it	cc
 8013640:	6102      	strcc	r2, [r0, #16]
 8013642:	6083      	str	r3, [r0, #8]
 8013644:	6903      	ldr	r3, [r0, #16]
 8013646:	9a03      	ldr	r2, [sp, #12]
 8013648:	f8a3 e000 	strh.w	lr, [r3]
 801364c:	805a      	strh	r2, [r3, #2]
 801364e:	2200      	movs	r2, #0
 8013650:	809a      	strh	r2, [r3, #4]
 8013652:	80da      	strh	r2, [r3, #6]
 8013654:	e017      	b.n	8013686 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013656:	9c05      	ldr	r4, [sp, #20]
 8013658:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801365c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8013660:	f004 041f 	and.w	r4, r4, #31
 8013664:	114e      	asrs	r6, r1, #5
 8013666:	9402      	str	r4, [sp, #8]
 8013668:	9c04      	ldr	r4, [sp, #16]
 801366a:	4576      	cmp	r6, lr
 801366c:	f001 0c1f 	and.w	ip, r1, #31
 8013670:	eba4 0403 	sub.w	r4, r4, r3
 8013674:	d10a      	bne.n	801368c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8013676:	9b02      	ldr	r3, [sp, #8]
 8013678:	449c      	add	ip, r3
 801367a:	44a0      	add	r8, r4
 801367c:	fb04 a40c 	mla	r4, r4, ip, sl
 8013680:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013684:	80d4      	strh	r4, [r2, #6]
 8013686:	b013      	add	sp, #76	; 0x4c
 8013688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801368c:	9d05      	ldr	r5, [sp, #20]
 801368e:	1a69      	subs	r1, r5, r1
 8013690:	bf5b      	ittet	pl
 8013692:	f1cc 0520 	rsbpl	r5, ip, #32
 8013696:	436c      	mulpl	r4, r5
 8013698:	2500      	movmi	r5, #0
 801369a:	2520      	movpl	r5, #32
 801369c:	bf44      	itt	mi
 801369e:	fb04 f40c 	mulmi.w	r4, r4, ip
 80136a2:	4249      	negmi	r1, r1
 80136a4:	9501      	str	r5, [sp, #4]
 80136a6:	9f01      	ldr	r7, [sp, #4]
 80136a8:	fb94 f5f1 	sdiv	r5, r4, r1
 80136ac:	fb01 4415 	mls	r4, r1, r5, r4
 80136b0:	bf54      	ite	pl
 80136b2:	f04f 0901 	movpl.w	r9, #1
 80136b6:	f04f 39ff 	movmi.w	r9, #4294967295
 80136ba:	2c00      	cmp	r4, #0
 80136bc:	bfb8      	it	lt
 80136be:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80136c2:	44bc      	add	ip, r7
 80136c4:	44a8      	add	r8, r5
 80136c6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80136ca:	f8a2 8004 	strh.w	r8, [r2, #4]
 80136ce:	f8a2 c006 	strh.w	ip, [r2, #6]
 80136d2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80136d6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80136da:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80136de:	bfb8      	it	lt
 80136e0:	1864      	addlt	r4, r4, r1
 80136e2:	ea58 0202 	orrs.w	r2, r8, r2
 80136e6:	444e      	add	r6, r9
 80136e8:	d011      	beq.n	801370e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80136ea:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80136ee:	f1b8 0f00 	cmp.w	r8, #0
 80136f2:	db0c      	blt.n	801370e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80136f4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80136f6:	4590      	cmp	r8, r2
 80136f8:	da09      	bge.n	801370e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80136fa:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80136fe:	4590      	cmp	r8, r2
 8013700:	bf3c      	itt	cc
 8013702:	f10c 0208 	addcc.w	r2, ip, #8
 8013706:	6102      	strcc	r2, [r0, #16]
 8013708:	f108 0201 	add.w	r2, r8, #1
 801370c:	6082      	str	r2, [r0, #8]
 801370e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013712:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013716:	f8ac 6000 	strh.w	r6, [ip]
 801371a:	2700      	movs	r7, #0
 801371c:	45b6      	cmp	lr, r6
 801371e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8013722:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013726:	f8ac 7006 	strh.w	r7, [ip, #6]
 801372a:	442b      	add	r3, r5
 801372c:	d04d      	beq.n	80137ca <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801372e:	9f04      	ldr	r7, [sp, #16]
 8013730:	1aff      	subs	r7, r7, r3
 8013732:	443d      	add	r5, r7
 8013734:	016d      	lsls	r5, r5, #5
 8013736:	fb95 f8f1 	sdiv	r8, r5, r1
 801373a:	fb01 5518 	mls	r5, r1, r8, r5
 801373e:	2d00      	cmp	r5, #0
 8013740:	bfb8      	it	lt
 8013742:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013746:	f108 0701 	add.w	r7, r8, #1
 801374a:	bfb8      	it	lt
 801374c:	186d      	addlt	r5, r5, r1
 801374e:	1a64      	subs	r4, r4, r1
 8013750:	9703      	str	r7, [sp, #12]
 8013752:	f04f 0a00 	mov.w	sl, #0
 8013756:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801375a:	1964      	adds	r4, r4, r5
 801375c:	bf58      	it	pl
 801375e:	9f03      	ldrpl	r7, [sp, #12]
 8013760:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013764:	bf48      	it	mi
 8013766:	4647      	movmi	r7, r8
 8013768:	44bb      	add	fp, r7
 801376a:	f8ac b004 	strh.w	fp, [ip, #4]
 801376e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013772:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013776:	f8ac b006 	strh.w	fp, [ip, #6]
 801377a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801377e:	443b      	add	r3, r7
 8013780:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013784:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013788:	bf58      	it	pl
 801378a:	1a64      	subpl	r4, r4, r1
 801378c:	ea5b 0707 	orrs.w	r7, fp, r7
 8013790:	444e      	add	r6, r9
 8013792:	d011      	beq.n	80137b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013794:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013798:	f1bb 0f00 	cmp.w	fp, #0
 801379c:	db0c      	blt.n	80137b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801379e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80137a0:	45bb      	cmp	fp, r7
 80137a2:	da09      	bge.n	80137b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80137a4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80137a8:	45bb      	cmp	fp, r7
 80137aa:	bf3c      	itt	cc
 80137ac:	f10c 0708 	addcc.w	r7, ip, #8
 80137b0:	6107      	strcc	r7, [r0, #16]
 80137b2:	f10b 0701 	add.w	r7, fp, #1
 80137b6:	6087      	str	r7, [r0, #8]
 80137b8:	6907      	ldr	r7, [r0, #16]
 80137ba:	45b6      	cmp	lr, r6
 80137bc:	803e      	strh	r6, [r7, #0]
 80137be:	807a      	strh	r2, [r7, #2]
 80137c0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80137c4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80137c8:	d1c5      	bne.n	8013756 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80137ca:	9a04      	ldr	r2, [sp, #16]
 80137cc:	1ad3      	subs	r3, r2, r3
 80137ce:	6902      	ldr	r2, [r0, #16]
 80137d0:	8891      	ldrh	r1, [r2, #4]
 80137d2:	88d6      	ldrh	r6, [r2, #6]
 80137d4:	4419      	add	r1, r3
 80137d6:	8091      	strh	r1, [r2, #4]
 80137d8:	9902      	ldr	r1, [sp, #8]
 80137da:	f101 0c20 	add.w	ip, r1, #32
 80137de:	9901      	ldr	r1, [sp, #4]
 80137e0:	ebac 0c01 	sub.w	ip, ip, r1
 80137e4:	fb03 630c 	mla	r3, r3, ip, r6
 80137e8:	80d3      	strh	r3, [r2, #6]
 80137ea:	e74c      	b.n	8013686 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80137ec:	9d05      	ldr	r5, [sp, #20]
 80137ee:	1aa2      	subs	r2, r4, r2
 80137f0:	eba5 0501 	sub.w	r5, r5, r1
 80137f4:	9508      	str	r5, [sp, #32]
 80137f6:	9202      	str	r2, [sp, #8]
 80137f8:	f140 8128 	bpl.w	8013a4c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80137fc:	9a03      	ldr	r2, [sp, #12]
 80137fe:	2a00      	cmp	r2, #0
 8013800:	f6ff af41 	blt.w	8013686 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013804:	9a02      	ldr	r2, [sp, #8]
 8013806:	4252      	negs	r2, r2
 8013808:	9202      	str	r2, [sp, #8]
 801380a:	9a06      	ldr	r2, [sp, #24]
 801380c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013810:	f04f 34ff 	mov.w	r4, #4294967295
 8013814:	9206      	str	r2, [sp, #24]
 8013816:	462a      	mov	r2, r5
 8013818:	940b      	str	r4, [sp, #44]	; 0x2c
 801381a:	435a      	muls	r2, r3
 801381c:	2400      	movs	r4, #0
 801381e:	9d02      	ldr	r5, [sp, #8]
 8013820:	9401      	str	r4, [sp, #4]
 8013822:	9c02      	ldr	r4, [sp, #8]
 8013824:	fb92 f4f4 	sdiv	r4, r2, r4
 8013828:	fb05 2214 	mls	r2, r5, r4, r2
 801382c:	2a00      	cmp	r2, #0
 801382e:	9207      	str	r2, [sp, #28]
 8013830:	bfbc      	itt	lt
 8013832:	1952      	addlt	r2, r2, r5
 8013834:	9207      	strlt	r2, [sp, #28]
 8013836:	9a01      	ldr	r2, [sp, #4]
 8013838:	6905      	ldr	r5, [r0, #16]
 801383a:	bfb8      	it	lt
 801383c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013840:	eb04 0901 	add.w	r9, r4, r1
 8013844:	429a      	cmp	r2, r3
 8013846:	ea4f 1669 	mov.w	r6, r9, asr #5
 801384a:	f040 8112 	bne.w	8013a72 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801384e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8013852:	429e      	cmp	r6, r3
 8013854:	d104      	bne.n	8013860 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8013856:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801385a:	9a03      	ldr	r2, [sp, #12]
 801385c:	429a      	cmp	r2, r3
 801385e:	d01b      	beq.n	8013898 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013860:	88ea      	ldrh	r2, [r5, #6]
 8013862:	88ab      	ldrh	r3, [r5, #4]
 8013864:	4313      	orrs	r3, r2
 8013866:	d010      	beq.n	801388a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013868:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801386c:	2a00      	cmp	r2, #0
 801386e:	db0c      	blt.n	801388a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013870:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013872:	429a      	cmp	r2, r3
 8013874:	da09      	bge.n	801388a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013876:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801387a:	429a      	cmp	r2, r3
 801387c:	bf38      	it	cc
 801387e:	3508      	addcc	r5, #8
 8013880:	f102 0201 	add.w	r2, r2, #1
 8013884:	bf38      	it	cc
 8013886:	6105      	strcc	r5, [r0, #16]
 8013888:	6082      	str	r2, [r0, #8]
 801388a:	6903      	ldr	r3, [r0, #16]
 801388c:	9a03      	ldr	r2, [sp, #12]
 801388e:	805a      	strh	r2, [r3, #2]
 8013890:	2200      	movs	r2, #0
 8013892:	801e      	strh	r6, [r3, #0]
 8013894:	809a      	strh	r2, [r3, #4]
 8013896:	80da      	strh	r2, [r3, #6]
 8013898:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801389a:	9a03      	ldr	r2, [sp, #12]
 801389c:	6901      	ldr	r1, [r0, #16]
 801389e:	441a      	add	r2, r3
 80138a0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80138a4:	42b3      	cmp	r3, r6
 80138a6:	d103      	bne.n	80138b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80138a8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80138ac:	429a      	cmp	r2, r3
 80138ae:	d01a      	beq.n	80138e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80138b0:	88cc      	ldrh	r4, [r1, #6]
 80138b2:	888b      	ldrh	r3, [r1, #4]
 80138b4:	4323      	orrs	r3, r4
 80138b6:	d010      	beq.n	80138da <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80138b8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80138bc:	2c00      	cmp	r4, #0
 80138be:	db0c      	blt.n	80138da <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80138c0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80138c2:	429c      	cmp	r4, r3
 80138c4:	da09      	bge.n	80138da <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80138c6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80138ca:	429c      	cmp	r4, r3
 80138cc:	bf38      	it	cc
 80138ce:	3108      	addcc	r1, #8
 80138d0:	f104 0401 	add.w	r4, r4, #1
 80138d4:	bf38      	it	cc
 80138d6:	6101      	strcc	r1, [r0, #16]
 80138d8:	6084      	str	r4, [r0, #8]
 80138da:	6903      	ldr	r3, [r0, #16]
 80138dc:	2100      	movs	r1, #0
 80138de:	801e      	strh	r6, [r3, #0]
 80138e0:	805a      	strh	r2, [r3, #2]
 80138e2:	8099      	strh	r1, [r3, #4]
 80138e4:	80d9      	strh	r1, [r3, #6]
 80138e6:	9b06      	ldr	r3, [sp, #24]
 80138e8:	4293      	cmp	r3, r2
 80138ea:	f000 8082 	beq.w	80139f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80138ee:	9b08      	ldr	r3, [sp, #32]
 80138f0:	9c02      	ldr	r4, [sp, #8]
 80138f2:	9902      	ldr	r1, [sp, #8]
 80138f4:	015b      	lsls	r3, r3, #5
 80138f6:	fb93 f1f1 	sdiv	r1, r3, r1
 80138fa:	fb04 3311 	mls	r3, r4, r1, r3
 80138fe:	2b00      	cmp	r3, #0
 8013900:	9103      	str	r1, [sp, #12]
 8013902:	9308      	str	r3, [sp, #32]
 8013904:	da04      	bge.n	8013910 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8013906:	1e4b      	subs	r3, r1, #1
 8013908:	9303      	str	r3, [sp, #12]
 801390a:	9b08      	ldr	r3, [sp, #32]
 801390c:	4423      	add	r3, r4
 801390e:	9308      	str	r3, [sp, #32]
 8013910:	9b07      	ldr	r3, [sp, #28]
 8013912:	9902      	ldr	r1, [sp, #8]
 8013914:	1a5b      	subs	r3, r3, r1
 8013916:	9307      	str	r3, [sp, #28]
 8013918:	9b01      	ldr	r3, [sp, #4]
 801391a:	f1c3 0320 	rsb	r3, r3, #32
 801391e:	930e      	str	r3, [sp, #56]	; 0x38
 8013920:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013922:	9b01      	ldr	r3, [sp, #4]
 8013924:	1a5b      	subs	r3, r3, r1
 8013926:	464f      	mov	r7, r9
 8013928:	930a      	str	r3, [sp, #40]	; 0x28
 801392a:	2600      	movs	r6, #0
 801392c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013930:	185b      	adds	r3, r3, r1
 8013932:	bf58      	it	pl
 8013934:	9902      	ldrpl	r1, [sp, #8]
 8013936:	9307      	str	r3, [sp, #28]
 8013938:	bf5d      	ittte	pl
 801393a:	1a5b      	subpl	r3, r3, r1
 801393c:	9307      	strpl	r3, [sp, #28]
 801393e:	9b03      	ldrpl	r3, [sp, #12]
 8013940:	9903      	ldrmi	r1, [sp, #12]
 8013942:	bf58      	it	pl
 8013944:	1c59      	addpl	r1, r3, #1
 8013946:	4489      	add	r9, r1
 8013948:	2a00      	cmp	r2, #0
 801394a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801394e:	db2e      	blt.n	80139ae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013950:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013952:	4293      	cmp	r3, r2
 8013954:	dd2b      	ble.n	80139ae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013956:	9c01      	ldr	r4, [sp, #4]
 8013958:	6905      	ldr	r5, [r0, #16]
 801395a:	46a0      	mov	r8, r4
 801395c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801395e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013962:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013966:	45a0      	cmp	r8, r4
 8013968:	f040 814f 	bne.w	8013c0a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801396c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013970:	4551      	cmp	r1, sl
 8013972:	d103      	bne.n	801397c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013974:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013978:	4291      	cmp	r1, r2
 801397a:	d018      	beq.n	80139ae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801397c:	ea5c 010e 	orrs.w	r1, ip, lr
 8013980:	d00f      	beq.n	80139a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013982:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013986:	2900      	cmp	r1, #0
 8013988:	db0b      	blt.n	80139a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801398a:	428b      	cmp	r3, r1
 801398c:	dd09      	ble.n	80139a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801398e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013992:	4299      	cmp	r1, r3
 8013994:	bf38      	it	cc
 8013996:	3508      	addcc	r5, #8
 8013998:	f101 0101 	add.w	r1, r1, #1
 801399c:	bf38      	it	cc
 801399e:	6105      	strcc	r5, [r0, #16]
 80139a0:	6081      	str	r1, [r0, #8]
 80139a2:	6903      	ldr	r3, [r0, #16]
 80139a4:	f8a3 a000 	strh.w	sl, [r3]
 80139a8:	805a      	strh	r2, [r3, #2]
 80139aa:	809e      	strh	r6, [r3, #4]
 80139ac:	80de      	strh	r6, [r3, #6]
 80139ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80139b0:	6901      	ldr	r1, [r0, #16]
 80139b2:	441a      	add	r2, r3
 80139b4:	88cc      	ldrh	r4, [r1, #6]
 80139b6:	888b      	ldrh	r3, [r1, #4]
 80139b8:	4323      	orrs	r3, r4
 80139ba:	d010      	beq.n	80139de <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80139bc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80139c0:	2c00      	cmp	r4, #0
 80139c2:	db0c      	blt.n	80139de <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80139c4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80139c6:	429c      	cmp	r4, r3
 80139c8:	da09      	bge.n	80139de <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80139ca:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80139ce:	429c      	cmp	r4, r3
 80139d0:	bf38      	it	cc
 80139d2:	3108      	addcc	r1, #8
 80139d4:	f104 0401 	add.w	r4, r4, #1
 80139d8:	bf38      	it	cc
 80139da:	6101      	strcc	r1, [r0, #16]
 80139dc:	6084      	str	r4, [r0, #8]
 80139de:	6903      	ldr	r3, [r0, #16]
 80139e0:	f8a3 a000 	strh.w	sl, [r3]
 80139e4:	805a      	strh	r2, [r3, #2]
 80139e6:	809e      	strh	r6, [r3, #4]
 80139e8:	80de      	strh	r6, [r3, #6]
 80139ea:	9b06      	ldr	r3, [sp, #24]
 80139ec:	4293      	cmp	r3, r2
 80139ee:	464f      	mov	r7, r9
 80139f0:	d19c      	bne.n	801392c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80139f2:	9b01      	ldr	r3, [sp, #4]
 80139f4:	6907      	ldr	r7, [r0, #16]
 80139f6:	f1c3 0620 	rsb	r6, r3, #32
 80139fa:	9b05      	ldr	r3, [sp, #20]
 80139fc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013a00:	9b04      	ldr	r3, [sp, #16]
 8013a02:	429e      	cmp	r6, r3
 8013a04:	f040 81cc 	bne.w	8013da0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013a08:	f9b7 3000 	ldrsh.w	r3, [r7]
 8013a0c:	459e      	cmp	lr, r3
 8013a0e:	d104      	bne.n	8013a1a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013a10:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013a14:	429a      	cmp	r2, r3
 8013a16:	f43f ae36 	beq.w	8013686 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013a1a:	88f9      	ldrh	r1, [r7, #6]
 8013a1c:	88bb      	ldrh	r3, [r7, #4]
 8013a1e:	430b      	orrs	r3, r1
 8013a20:	d010      	beq.n	8013a44 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013a22:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013a26:	2b00      	cmp	r3, #0
 8013a28:	db0c      	blt.n	8013a44 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013a2a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013a2c:	428b      	cmp	r3, r1
 8013a2e:	da09      	bge.n	8013a44 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013a30:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013a34:	428b      	cmp	r3, r1
 8013a36:	bf38      	it	cc
 8013a38:	3708      	addcc	r7, #8
 8013a3a:	f103 0301 	add.w	r3, r3, #1
 8013a3e:	bf38      	it	cc
 8013a40:	6107      	strcc	r7, [r0, #16]
 8013a42:	6083      	str	r3, [r0, #8]
 8013a44:	6903      	ldr	r3, [r0, #16]
 8013a46:	f8a3 e000 	strh.w	lr, [r3]
 8013a4a:	e5ff      	b.n	801364c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8013a4c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013a4e:	9c03      	ldr	r4, [sp, #12]
 8013a50:	42a2      	cmp	r2, r4
 8013a52:	f6ff ae18 	blt.w	8013686 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013a56:	9c06      	ldr	r4, [sp, #24]
 8013a58:	42a2      	cmp	r2, r4
 8013a5a:	bfb8      	it	lt
 8013a5c:	3201      	addlt	r2, #1
 8013a5e:	9c08      	ldr	r4, [sp, #32]
 8013a60:	bfb8      	it	lt
 8013a62:	9206      	strlt	r2, [sp, #24]
 8013a64:	f1c3 0220 	rsb	r2, r3, #32
 8013a68:	4362      	muls	r2, r4
 8013a6a:	2401      	movs	r4, #1
 8013a6c:	940b      	str	r4, [sp, #44]	; 0x2c
 8013a6e:	2420      	movs	r4, #32
 8013a70:	e6d5      	b.n	801381e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013a72:	f009 021f 	and.w	r2, r9, #31
 8013a76:	ea4f 1861 	mov.w	r8, r1, asr #5
 8013a7a:	920c      	str	r2, [sp, #48]	; 0x30
 8013a7c:	9a01      	ldr	r2, [sp, #4]
 8013a7e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013a82:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013a86:	45b0      	cmp	r8, r6
 8013a88:	f001 011f 	and.w	r1, r1, #31
 8013a8c:	eba2 0203 	sub.w	r2, r2, r3
 8013a90:	d108      	bne.n	8013aa4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013a92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013a94:	4419      	add	r1, r3
 8013a96:	4496      	add	lr, r2
 8013a98:	fb02 a101 	mla	r1, r2, r1, sl
 8013a9c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013aa0:	80e9      	strh	r1, [r5, #6]
 8013aa2:	e6f9      	b.n	8013898 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013aa4:	2c00      	cmp	r4, #0
 8013aa6:	f2c0 80a9 	blt.w	8013bfc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8013aaa:	2701      	movs	r7, #1
 8013aac:	f1c1 0c20 	rsb	ip, r1, #32
 8013ab0:	970a      	str	r7, [sp, #40]	; 0x28
 8013ab2:	fb02 f20c 	mul.w	r2, r2, ip
 8013ab6:	2720      	movs	r7, #32
 8013ab8:	9709      	str	r7, [sp, #36]	; 0x24
 8013aba:	fb92 fcf4 	sdiv	ip, r2, r4
 8013abe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013ac0:	fb04 221c 	mls	r2, r4, ip, r2
 8013ac4:	2a00      	cmp	r2, #0
 8013ac6:	bfb8      	it	lt
 8013ac8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8013acc:	4439      	add	r1, r7
 8013ace:	fb0c a101 	mla	r1, ip, r1, sl
 8013ad2:	80e9      	strh	r1, [r5, #6]
 8013ad4:	44e6      	add	lr, ip
 8013ad6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013ad8:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013adc:	eb08 0501 	add.w	r5, r8, r1
 8013ae0:	6901      	ldr	r1, [r0, #16]
 8013ae2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013ae6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8013aea:	bfb8      	it	lt
 8013aec:	1912      	addlt	r2, r2, r4
 8013aee:	ea58 070e 	orrs.w	r7, r8, lr
 8013af2:	d010      	beq.n	8013b16 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013af4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013af8:	f1be 0f00 	cmp.w	lr, #0
 8013afc:	db0b      	blt.n	8013b16 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013afe:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013b00:	45be      	cmp	lr, r7
 8013b02:	da08      	bge.n	8013b16 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013b04:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013b08:	45be      	cmp	lr, r7
 8013b0a:	bf3c      	itt	cc
 8013b0c:	3108      	addcc	r1, #8
 8013b0e:	6101      	strcc	r1, [r0, #16]
 8013b10:	f10e 0101 	add.w	r1, lr, #1
 8013b14:	6081      	str	r1, [r0, #8]
 8013b16:	6901      	ldr	r1, [r0, #16]
 8013b18:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013b1c:	800d      	strh	r5, [r1, #0]
 8013b1e:	f04f 0e00 	mov.w	lr, #0
 8013b22:	42ae      	cmp	r6, r5
 8013b24:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013b28:	f8a1 e004 	strh.w	lr, [r1, #4]
 8013b2c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013b30:	4463      	add	r3, ip
 8013b32:	d054      	beq.n	8013bde <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013b34:	9901      	ldr	r1, [sp, #4]
 8013b36:	1ac9      	subs	r1, r1, r3
 8013b38:	4461      	add	r1, ip
 8013b3a:	0149      	lsls	r1, r1, #5
 8013b3c:	fb91 fef4 	sdiv	lr, r1, r4
 8013b40:	fb04 111e 	mls	r1, r4, lr, r1
 8013b44:	2900      	cmp	r1, #0
 8013b46:	bfb8      	it	lt
 8013b48:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8013b4c:	f10e 0701 	add.w	r7, lr, #1
 8013b50:	bfb8      	it	lt
 8013b52:	1909      	addlt	r1, r1, r4
 8013b54:	1b12      	subs	r2, r2, r4
 8013b56:	970d      	str	r7, [sp, #52]	; 0x34
 8013b58:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8013b5c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013b5e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013b62:	1852      	adds	r2, r2, r1
 8013b64:	bf54      	ite	pl
 8013b66:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8013b6a:	46f4      	movmi	ip, lr
 8013b6c:	44e3      	add	fp, ip
 8013b6e:	f8aa b004 	strh.w	fp, [sl, #4]
 8013b72:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013b76:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013b7a:	f8aa b006 	strh.w	fp, [sl, #6]
 8013b7e:	4463      	add	r3, ip
 8013b80:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013b84:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013b88:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013b8c:	bf58      	it	pl
 8013b8e:	1b12      	subpl	r2, r2, r4
 8013b90:	443d      	add	r5, r7
 8013b92:	ea5b 070a 	orrs.w	r7, fp, sl
 8013b96:	d014      	beq.n	8013bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013b98:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013b9c:	f1ba 0f00 	cmp.w	sl, #0
 8013ba0:	db0f      	blt.n	8013bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013ba2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013ba4:	45ba      	cmp	sl, r7
 8013ba6:	da0c      	bge.n	8013bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013ba8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013bac:	45ba      	cmp	sl, r7
 8013bae:	bf38      	it	cc
 8013bb0:	f10c 0c08 	addcc.w	ip, ip, #8
 8013bb4:	f10a 0a01 	add.w	sl, sl, #1
 8013bb8:	bf38      	it	cc
 8013bba:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013bbe:	f8c0 a008 	str.w	sl, [r0, #8]
 8013bc2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013bc6:	f04f 0700 	mov.w	r7, #0
 8013bca:	42ae      	cmp	r6, r5
 8013bcc:	f8ac 5000 	strh.w	r5, [ip]
 8013bd0:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013bd4:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013bd8:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013bdc:	d1bc      	bne.n	8013b58 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013bde:	6904      	ldr	r4, [r0, #16]
 8013be0:	9a01      	ldr	r2, [sp, #4]
 8013be2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013be4:	1ad3      	subs	r3, r2, r3
 8013be6:	88a2      	ldrh	r2, [r4, #4]
 8013be8:	441a      	add	r2, r3
 8013bea:	80a2      	strh	r2, [r4, #4]
 8013bec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013bee:	3120      	adds	r1, #32
 8013bf0:	1a89      	subs	r1, r1, r2
 8013bf2:	88e2      	ldrh	r2, [r4, #6]
 8013bf4:	fb03 2301 	mla	r3, r3, r1, r2
 8013bf8:	80e3      	strh	r3, [r4, #6]
 8013bfa:	e64d      	b.n	8013898 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013bfc:	f04f 37ff 	mov.w	r7, #4294967295
 8013c00:	970a      	str	r7, [sp, #40]	; 0x28
 8013c02:	434a      	muls	r2, r1
 8013c04:	4264      	negs	r4, r4
 8013c06:	2700      	movs	r7, #0
 8013c08:	e756      	b.n	8013ab8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013c0a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013c0e:	f009 031f 	and.w	r3, r9, #31
 8013c12:	45d0      	cmp	r8, sl
 8013c14:	f007 071f 	and.w	r7, r7, #31
 8013c18:	930f      	str	r3, [sp, #60]	; 0x3c
 8013c1a:	fa1f fc8c 	uxth.w	ip, ip
 8013c1e:	fa1f fe8e 	uxth.w	lr, lr
 8013c22:	d10a      	bne.n	8013c3a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013c24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013c26:	449c      	add	ip, r3
 8013c28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013c2a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013c2e:	441f      	add	r7, r3
 8013c30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013c32:	fb03 e707 	mla	r7, r3, r7, lr
 8013c36:	80ef      	strh	r7, [r5, #6]
 8013c38:	e6b9      	b.n	80139ae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013c3a:	2900      	cmp	r1, #0
 8013c3c:	f2c0 80a8 	blt.w	8013d90 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013c40:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013c42:	f1c7 0320 	rsb	r3, r7, #32
 8013c46:	4363      	muls	r3, r4
 8013c48:	2401      	movs	r4, #1
 8013c4a:	940d      	str	r4, [sp, #52]	; 0x34
 8013c4c:	2420      	movs	r4, #32
 8013c4e:	940c      	str	r4, [sp, #48]	; 0x30
 8013c50:	fb93 f4f1 	sdiv	r4, r3, r1
 8013c54:	fb01 3b14 	mls	fp, r1, r4, r3
 8013c58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013c5a:	f1bb 0f00 	cmp.w	fp, #0
 8013c5e:	bfb8      	it	lt
 8013c60:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013c64:	441f      	add	r7, r3
 8013c66:	fb04 e707 	mla	r7, r4, r7, lr
 8013c6a:	44a4      	add	ip, r4
 8013c6c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013c70:	80ef      	strh	r7, [r5, #6]
 8013c72:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013c76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c78:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013c7c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013c80:	bfb8      	it	lt
 8013c82:	448b      	addlt	fp, r1
 8013c84:	eb08 0503 	add.w	r5, r8, r3
 8013c88:	ea5e 0307 	orrs.w	r3, lr, r7
 8013c8c:	d011      	beq.n	8013cb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013c8e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013c92:	f1be 0f00 	cmp.w	lr, #0
 8013c96:	db0c      	blt.n	8013cb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013c98:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013c9a:	45be      	cmp	lr, r7
 8013c9c:	da09      	bge.n	8013cb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013c9e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013ca2:	45be      	cmp	lr, r7
 8013ca4:	bf3c      	itt	cc
 8013ca6:	f10c 0708 	addcc.w	r7, ip, #8
 8013caa:	6107      	strcc	r7, [r0, #16]
 8013cac:	f10e 0701 	add.w	r7, lr, #1
 8013cb0:	6087      	str	r7, [r0, #8]
 8013cb2:	6907      	ldr	r7, [r0, #16]
 8013cb4:	b213      	sxth	r3, r2
 8013cb6:	9310      	str	r3, [sp, #64]	; 0x40
 8013cb8:	807b      	strh	r3, [r7, #2]
 8013cba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013cbc:	803d      	strh	r5, [r7, #0]
 8013cbe:	4555      	cmp	r5, sl
 8013cc0:	80be      	strh	r6, [r7, #4]
 8013cc2:	80fe      	strh	r6, [r7, #6]
 8013cc4:	eb04 0c03 	add.w	ip, r4, r3
 8013cc8:	d051      	beq.n	8013d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013cca:	9b01      	ldr	r3, [sp, #4]
 8013ccc:	eba3 070c 	sub.w	r7, r3, ip
 8013cd0:	443c      	add	r4, r7
 8013cd2:	0164      	lsls	r4, r4, #5
 8013cd4:	fb94 f8f1 	sdiv	r8, r4, r1
 8013cd8:	fb01 4418 	mls	r4, r1, r8, r4
 8013cdc:	2c00      	cmp	r4, #0
 8013cde:	bfb8      	it	lt
 8013ce0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013ce4:	ebab 0301 	sub.w	r3, fp, r1
 8013ce8:	f108 0701 	add.w	r7, r8, #1
 8013cec:	bfb8      	it	lt
 8013cee:	1864      	addlt	r4, r4, r1
 8013cf0:	9309      	str	r3, [sp, #36]	; 0x24
 8013cf2:	9711      	str	r7, [sp, #68]	; 0x44
 8013cf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013cf6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013cfa:	191b      	adds	r3, r3, r4
 8013cfc:	bf58      	it	pl
 8013cfe:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013d00:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013d04:	9309      	str	r3, [sp, #36]	; 0x24
 8013d06:	bf48      	it	mi
 8013d08:	4647      	movmi	r7, r8
 8013d0a:	44bb      	add	fp, r7
 8013d0c:	f8ae b004 	strh.w	fp, [lr, #4]
 8013d10:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013d14:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013d18:	f8ae b006 	strh.w	fp, [lr, #6]
 8013d1c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013d20:	44bc      	add	ip, r7
 8013d22:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013d24:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013d28:	443d      	add	r5, r7
 8013d2a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8013d2e:	bf5c      	itt	pl
 8013d30:	1a5b      	subpl	r3, r3, r1
 8013d32:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013d34:	ea5b 0307 	orrs.w	r3, fp, r7
 8013d38:	d011      	beq.n	8013d5e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013d3a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8013d3e:	f1bb 0f00 	cmp.w	fp, #0
 8013d42:	db0c      	blt.n	8013d5e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013d44:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013d46:	45bb      	cmp	fp, r7
 8013d48:	da09      	bge.n	8013d5e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013d4a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013d4e:	45bb      	cmp	fp, r7
 8013d50:	bf3c      	itt	cc
 8013d52:	f10e 0708 	addcc.w	r7, lr, #8
 8013d56:	6107      	strcc	r7, [r0, #16]
 8013d58:	f10b 0701 	add.w	r7, fp, #1
 8013d5c:	6087      	str	r7, [r0, #8]
 8013d5e:	6907      	ldr	r7, [r0, #16]
 8013d60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d62:	803d      	strh	r5, [r7, #0]
 8013d64:	4555      	cmp	r5, sl
 8013d66:	807b      	strh	r3, [r7, #2]
 8013d68:	80be      	strh	r6, [r7, #4]
 8013d6a:	80fe      	strh	r6, [r7, #6]
 8013d6c:	d1c2      	bne.n	8013cf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8013d6e:	9b01      	ldr	r3, [sp, #4]
 8013d70:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013d72:	eba3 0c0c 	sub.w	ip, r3, ip
 8013d76:	6903      	ldr	r3, [r0, #16]
 8013d78:	8899      	ldrh	r1, [r3, #4]
 8013d7a:	4461      	add	r1, ip
 8013d7c:	8099      	strh	r1, [r3, #4]
 8013d7e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013d80:	3720      	adds	r7, #32
 8013d82:	1a7f      	subs	r7, r7, r1
 8013d84:	88d9      	ldrh	r1, [r3, #6]
 8013d86:	fb0c 1c07 	mla	ip, ip, r7, r1
 8013d8a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8013d8e:	e60e      	b.n	80139ae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013d90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013d92:	f04f 34ff 	mov.w	r4, #4294967295
 8013d96:	940d      	str	r4, [sp, #52]	; 0x34
 8013d98:	437b      	muls	r3, r7
 8013d9a:	4249      	negs	r1, r1
 8013d9c:	2400      	movs	r4, #0
 8013d9e:	e756      	b.n	8013c4e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013da0:	9905      	ldr	r1, [sp, #20]
 8013da2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013da6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8013daa:	f001 011f 	and.w	r1, r1, #31
 8013dae:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013db2:	9102      	str	r1, [sp, #8]
 8013db4:	9904      	ldr	r1, [sp, #16]
 8013db6:	45f3      	cmp	fp, lr
 8013db8:	f009 0c1f 	and.w	ip, r9, #31
 8013dbc:	eba1 0406 	sub.w	r4, r1, r6
 8013dc0:	d108      	bne.n	8013dd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013dc2:	9b02      	ldr	r3, [sp, #8]
 8013dc4:	449c      	add	ip, r3
 8013dc6:	44a0      	add	r8, r4
 8013dc8:	fb04 a40c 	mla	r4, r4, ip, sl
 8013dcc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013dd0:	80fc      	strh	r4, [r7, #6]
 8013dd2:	e458      	b.n	8013686 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013dd4:	9905      	ldr	r1, [sp, #20]
 8013dd6:	ebb1 0109 	subs.w	r1, r1, r9
 8013dda:	bf5b      	ittet	pl
 8013ddc:	f1cc 0520 	rsbpl	r5, ip, #32
 8013de0:	436c      	mulpl	r4, r5
 8013de2:	2500      	movmi	r5, #0
 8013de4:	2520      	movpl	r5, #32
 8013de6:	bf44      	itt	mi
 8013de8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013dec:	4249      	negmi	r1, r1
 8013dee:	9501      	str	r5, [sp, #4]
 8013df0:	9b01      	ldr	r3, [sp, #4]
 8013df2:	fb94 f5f1 	sdiv	r5, r4, r1
 8013df6:	fb01 4415 	mls	r4, r1, r5, r4
 8013dfa:	bf54      	ite	pl
 8013dfc:	f04f 0901 	movpl.w	r9, #1
 8013e00:	f04f 39ff 	movmi.w	r9, #4294967295
 8013e04:	2c00      	cmp	r4, #0
 8013e06:	bfb8      	it	lt
 8013e08:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013e0c:	449c      	add	ip, r3
 8013e0e:	44a8      	add	r8, r5
 8013e10:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013e14:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013e18:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013e1c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013e20:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013e24:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013e28:	bfb8      	it	lt
 8013e2a:	1864      	addlt	r4, r4, r1
 8013e2c:	ea58 0707 	orrs.w	r7, r8, r7
 8013e30:	eb0b 0309 	add.w	r3, fp, r9
 8013e34:	d011      	beq.n	8013e5a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013e36:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013e3a:	f1b8 0f00 	cmp.w	r8, #0
 8013e3e:	db0c      	blt.n	8013e5a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013e40:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013e42:	45b8      	cmp	r8, r7
 8013e44:	da09      	bge.n	8013e5a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013e46:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013e4a:	45b8      	cmp	r8, r7
 8013e4c:	bf3c      	itt	cc
 8013e4e:	f10c 0708 	addcc.w	r7, ip, #8
 8013e52:	6107      	strcc	r7, [r0, #16]
 8013e54:	f108 0701 	add.w	r7, r8, #1
 8013e58:	6087      	str	r7, [r0, #8]
 8013e5a:	6907      	ldr	r7, [r0, #16]
 8013e5c:	f04f 0c00 	mov.w	ip, #0
 8013e60:	b212      	sxth	r2, r2
 8013e62:	459e      	cmp	lr, r3
 8013e64:	803b      	strh	r3, [r7, #0]
 8013e66:	807a      	strh	r2, [r7, #2]
 8013e68:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013e6c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013e70:	442e      	add	r6, r5
 8013e72:	d04d      	beq.n	8013f10 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013e74:	9f04      	ldr	r7, [sp, #16]
 8013e76:	1bbf      	subs	r7, r7, r6
 8013e78:	443d      	add	r5, r7
 8013e7a:	016d      	lsls	r5, r5, #5
 8013e7c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013e80:	fb01 5518 	mls	r5, r1, r8, r5
 8013e84:	4565      	cmp	r5, ip
 8013e86:	bfb8      	it	lt
 8013e88:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013e8c:	f108 0701 	add.w	r7, r8, #1
 8013e90:	bfb8      	it	lt
 8013e92:	186d      	addlt	r5, r5, r1
 8013e94:	1a64      	subs	r4, r4, r1
 8013e96:	9703      	str	r7, [sp, #12]
 8013e98:	f04f 0a00 	mov.w	sl, #0
 8013e9c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013ea0:	1964      	adds	r4, r4, r5
 8013ea2:	bf58      	it	pl
 8013ea4:	9f03      	ldrpl	r7, [sp, #12]
 8013ea6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013eaa:	bf48      	it	mi
 8013eac:	4647      	movmi	r7, r8
 8013eae:	44bb      	add	fp, r7
 8013eb0:	f8ac b004 	strh.w	fp, [ip, #4]
 8013eb4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013eb8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013ebc:	f8ac b006 	strh.w	fp, [ip, #6]
 8013ec0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013ec4:	443e      	add	r6, r7
 8013ec6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013eca:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013ece:	bf58      	it	pl
 8013ed0:	1a64      	subpl	r4, r4, r1
 8013ed2:	ea5b 0707 	orrs.w	r7, fp, r7
 8013ed6:	444b      	add	r3, r9
 8013ed8:	d011      	beq.n	8013efe <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013eda:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013ede:	f1bb 0f00 	cmp.w	fp, #0
 8013ee2:	db0c      	blt.n	8013efe <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013ee4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013ee6:	45bb      	cmp	fp, r7
 8013ee8:	da09      	bge.n	8013efe <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013eea:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013eee:	45bb      	cmp	fp, r7
 8013ef0:	bf3c      	itt	cc
 8013ef2:	f10c 0708 	addcc.w	r7, ip, #8
 8013ef6:	6107      	strcc	r7, [r0, #16]
 8013ef8:	f10b 0701 	add.w	r7, fp, #1
 8013efc:	6087      	str	r7, [r0, #8]
 8013efe:	6907      	ldr	r7, [r0, #16]
 8013f00:	459e      	cmp	lr, r3
 8013f02:	803b      	strh	r3, [r7, #0]
 8013f04:	807a      	strh	r2, [r7, #2]
 8013f06:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013f0a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013f0e:	d1c5      	bne.n	8013e9c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013f10:	9b04      	ldr	r3, [sp, #16]
 8013f12:	1b9e      	subs	r6, r3, r6
 8013f14:	6903      	ldr	r3, [r0, #16]
 8013f16:	889a      	ldrh	r2, [r3, #4]
 8013f18:	4432      	add	r2, r6
 8013f1a:	809a      	strh	r2, [r3, #4]
 8013f1c:	9a02      	ldr	r2, [sp, #8]
 8013f1e:	f102 0c20 	add.w	ip, r2, #32
 8013f22:	9a01      	ldr	r2, [sp, #4]
 8013f24:	ebac 0c02 	sub.w	ip, ip, r2
 8013f28:	88da      	ldrh	r2, [r3, #6]
 8013f2a:	fb06 260c 	mla	r6, r6, ip, r2
 8013f2e:	80de      	strh	r6, [r3, #6]
 8013f30:	f7ff bba9 	b.w	8013686 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013f34 <_ZN8touchgfx7Outline6lineToEii>:
 8013f34:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013f36:	079b      	lsls	r3, r3, #30
 8013f38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013f3a:	460e      	mov	r6, r1
 8013f3c:	4615      	mov	r5, r2
 8013f3e:	d511      	bpl.n	8013f64 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013f40:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013f44:	ea86 0701 	eor.w	r7, r6, r1
 8013f48:	ea85 0302 	eor.w	r3, r5, r2
 8013f4c:	433b      	orrs	r3, r7
 8013f4e:	d009      	beq.n	8013f64 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013f50:	4633      	mov	r3, r6
 8013f52:	9500      	str	r5, [sp, #0]
 8013f54:	f7ff fb3e 	bl	80135d4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013f58:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013f5a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8013f5e:	f043 0301 	orr.w	r3, r3, #1
 8013f62:	6243      	str	r3, [r0, #36]	; 0x24
 8013f64:	b003      	add	sp, #12
 8013f66:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013f68 <_ZN8touchgfx7Outline6moveToEii>:
 8013f68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013f6a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013f6c:	4615      	mov	r5, r2
 8013f6e:	079a      	lsls	r2, r3, #30
 8013f70:	4604      	mov	r4, r0
 8013f72:	460e      	mov	r6, r1
 8013f74:	d401      	bmi.n	8013f7a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013f76:	f7ff faf9 	bl	801356c <_ZN8touchgfx7Outline5resetEv>
 8013f7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013f7c:	07db      	lsls	r3, r3, #31
 8013f7e:	d504      	bpl.n	8013f8a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013f80:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013f84:	4620      	mov	r0, r4
 8013f86:	f7ff ffd5 	bl	8013f34 <_ZN8touchgfx7Outline6lineToEii>
 8013f8a:	6923      	ldr	r3, [r4, #16]
 8013f8c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f90:	1170      	asrs	r0, r6, #5
 8013f92:	4290      	cmp	r0, r2
 8013f94:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013f98:	d103      	bne.n	8013fa2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8013f9a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013f9e:	4291      	cmp	r1, r2
 8013fa0:	d01a      	beq.n	8013fd8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013fa2:	88df      	ldrh	r7, [r3, #6]
 8013fa4:	889a      	ldrh	r2, [r3, #4]
 8013fa6:	433a      	orrs	r2, r7
 8013fa8:	d010      	beq.n	8013fcc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013faa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013fae:	2a00      	cmp	r2, #0
 8013fb0:	db0c      	blt.n	8013fcc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013fb2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8013fb4:	42ba      	cmp	r2, r7
 8013fb6:	da09      	bge.n	8013fcc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013fb8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8013fbc:	42ba      	cmp	r2, r7
 8013fbe:	bf38      	it	cc
 8013fc0:	3308      	addcc	r3, #8
 8013fc2:	f102 0201 	add.w	r2, r2, #1
 8013fc6:	bf38      	it	cc
 8013fc8:	6123      	strcc	r3, [r4, #16]
 8013fca:	60a2      	str	r2, [r4, #8]
 8013fcc:	6923      	ldr	r3, [r4, #16]
 8013fce:	2200      	movs	r2, #0
 8013fd0:	8018      	strh	r0, [r3, #0]
 8013fd2:	8059      	strh	r1, [r3, #2]
 8013fd4:	809a      	strh	r2, [r3, #4]
 8013fd6:	80da      	strh	r2, [r3, #6]
 8013fd8:	6166      	str	r6, [r4, #20]
 8013fda:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8013fde:	6225      	str	r5, [r4, #32]
 8013fe0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013fe2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8013fe2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013fe6:	b0d0      	sub	sp, #320	; 0x140
 8013fe8:	466c      	mov	r4, sp
 8013fea:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8013fee:	4627      	mov	r7, r4
 8013ff0:	1a0d      	subs	r5, r1, r0
 8013ff2:	2d48      	cmp	r5, #72	; 0x48
 8013ff4:	f100 0308 	add.w	r3, r0, #8
 8013ff8:	f340 80d5 	ble.w	80141a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013ffc:	112d      	asrs	r5, r5, #4
 8013ffe:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014002:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014006:	6816      	ldr	r6, [r2, #0]
 8014008:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801400c:	6006      	str	r6, [r0, #0]
 801400e:	6856      	ldr	r6, [r2, #4]
 8014010:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014014:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014018:	6046      	str	r6, [r0, #4]
 801401a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801401e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8014022:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014026:	f8a2 c006 	strh.w	ip, [r2, #6]
 801402a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801402e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014032:	4565      	cmp	r5, ip
 8014034:	f1a1 0208 	sub.w	r2, r1, #8
 8014038:	db06      	blt.n	8014048 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801403a:	d119      	bne.n	8014070 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801403c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014040:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014044:	42ae      	cmp	r6, r5
 8014046:	dd13      	ble.n	8014070 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014048:	460e      	mov	r6, r1
 801404a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801404e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014052:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014056:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801405a:	601d      	str	r5, [r3, #0]
 801405c:	6875      	ldr	r5, [r6, #4]
 801405e:	605d      	str	r5, [r3, #4]
 8014060:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014064:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014068:	f821 8c04 	strh.w	r8, [r1, #-4]
 801406c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014070:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014074:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014078:	42ae      	cmp	r6, r5
 801407a:	db06      	blt.n	801408a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801407c:	d116      	bne.n	80140ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801407e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014082:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014086:	45ac      	cmp	ip, r5
 8014088:	da10      	bge.n	80140ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801408a:	681d      	ldr	r5, [r3, #0]
 801408c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014090:	6005      	str	r5, [r0, #0]
 8014092:	685d      	ldr	r5, [r3, #4]
 8014094:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014098:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801409c:	f8a0 8008 	strh.w	r8, [r0, #8]
 80140a0:	6045      	str	r5, [r0, #4]
 80140a2:	8146      	strh	r6, [r0, #10]
 80140a4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80140a8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80140ac:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80140b0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80140b4:	4565      	cmp	r5, ip
 80140b6:	db06      	blt.n	80140c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80140b8:	d119      	bne.n	80140ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80140ba:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80140be:	f9b0 5000 	ldrsh.w	r5, [r0]
 80140c2:	42ae      	cmp	r6, r5
 80140c4:	da13      	bge.n	80140ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80140c6:	460e      	mov	r6, r1
 80140c8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80140cc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80140d0:	6005      	str	r5, [r0, #0]
 80140d2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80140d6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80140da:	6875      	ldr	r5, [r6, #4]
 80140dc:	6045      	str	r5, [r0, #4]
 80140de:	f821 9c08 	strh.w	r9, [r1, #-8]
 80140e2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80140e6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80140ea:	f821 ec02 	strh.w	lr, [r1, #-2]
 80140ee:	3308      	adds	r3, #8
 80140f0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80140f4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80140f8:	45e6      	cmp	lr, ip
 80140fa:	dbf8      	blt.n	80140ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80140fc:	d105      	bne.n	801410a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80140fe:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014102:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014106:	42ae      	cmp	r6, r5
 8014108:	dbf1      	blt.n	80140ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801410a:	4615      	mov	r5, r2
 801410c:	3a08      	subs	r2, #8
 801410e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014112:	45b4      	cmp	ip, r6
 8014114:	dbf9      	blt.n	801410a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014116:	d105      	bne.n	8014124 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014118:	f9b0 8000 	ldrsh.w	r8, [r0]
 801411c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014120:	45b0      	cmp	r8, r6
 8014122:	dbf2      	blt.n	801410a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014124:	4293      	cmp	r3, r2
 8014126:	f1a5 0608 	sub.w	r6, r5, #8
 801412a:	d816      	bhi.n	801415a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801412c:	f8d6 c000 	ldr.w	ip, [r6]
 8014130:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014134:	f8c3 c000 	str.w	ip, [r3]
 8014138:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801413c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014140:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014144:	f8c3 c004 	str.w	ip, [r3, #4]
 8014148:	f825 ac08 	strh.w	sl, [r5, #-8]
 801414c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014150:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014154:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014158:	e7c9      	b.n	80140ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801415a:	f8d6 e000 	ldr.w	lr, [r6]
 801415e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014162:	f8c0 e000 	str.w	lr, [r0]
 8014166:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801416a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801416e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014172:	f8c0 e004 	str.w	lr, [r0, #4]
 8014176:	f825 ac08 	strh.w	sl, [r5, #-8]
 801417a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801417e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014182:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014186:	1acd      	subs	r5, r1, r3
 8014188:	1a16      	subs	r6, r2, r0
 801418a:	10ed      	asrs	r5, r5, #3
 801418c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014190:	bfb5      	itete	lt
 8014192:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014196:	e9c4 3100 	strdge	r3, r1, [r4]
 801419a:	460a      	movlt	r2, r1
 801419c:	4603      	movge	r3, r0
 801419e:	3408      	adds	r4, #8
 80141a0:	4618      	mov	r0, r3
 80141a2:	4611      	mov	r1, r2
 80141a4:	e724      	b.n	8013ff0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80141a6:	4299      	cmp	r1, r3
 80141a8:	d928      	bls.n	80141fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80141aa:	f1a3 0210 	sub.w	r2, r3, #16
 80141ae:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80141b2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80141b6:	45ac      	cmp	ip, r5
 80141b8:	db06      	blt.n	80141c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80141ba:	d11d      	bne.n	80141f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80141bc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80141c0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80141c4:	42ae      	cmp	r6, r5
 80141c6:	da17      	bge.n	80141f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80141c8:	4615      	mov	r5, r2
 80141ca:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80141ce:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80141d2:	6116      	str	r6, [r2, #16]
 80141d4:	686e      	ldr	r6, [r5, #4]
 80141d6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80141da:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80141de:	f8a2 9008 	strh.w	r9, [r2, #8]
 80141e2:	42a8      	cmp	r0, r5
 80141e4:	6156      	str	r6, [r2, #20]
 80141e6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80141ea:	f8a2 800c 	strh.w	r8, [r2, #12]
 80141ee:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80141f2:	f1a2 0208 	sub.w	r2, r2, #8
 80141f6:	d1da      	bne.n	80141ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80141f8:	3308      	adds	r3, #8
 80141fa:	e7d4      	b.n	80141a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80141fc:	42bc      	cmp	r4, r7
 80141fe:	d903      	bls.n	8014208 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014200:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014204:	3c08      	subs	r4, #8
 8014206:	e6f3      	b.n	8013ff0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014208:	b050      	add	sp, #320	; 0x140
 801420a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801420e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801420e:	b510      	push	{r4, lr}
 8014210:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014212:	07da      	lsls	r2, r3, #31
 8014214:	4604      	mov	r4, r0
 8014216:	d507      	bpl.n	8014228 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014218:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801421c:	f7ff fe8a 	bl	8013f34 <_ZN8touchgfx7Outline6lineToEii>
 8014220:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014222:	f023 0301 	bic.w	r3, r3, #1
 8014226:	6243      	str	r3, [r0, #36]	; 0x24
 8014228:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801422a:	079b      	lsls	r3, r3, #30
 801422c:	d521      	bpl.n	8014272 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801422e:	6923      	ldr	r3, [r4, #16]
 8014230:	88d9      	ldrh	r1, [r3, #6]
 8014232:	889a      	ldrh	r2, [r3, #4]
 8014234:	430a      	orrs	r2, r1
 8014236:	d010      	beq.n	801425a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014238:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801423c:	2a00      	cmp	r2, #0
 801423e:	db0c      	blt.n	801425a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014240:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014242:	428a      	cmp	r2, r1
 8014244:	da09      	bge.n	801425a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014246:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801424a:	4291      	cmp	r1, r2
 801424c:	bf88      	it	hi
 801424e:	3308      	addhi	r3, #8
 8014250:	f102 0201 	add.w	r2, r2, #1
 8014254:	bf88      	it	hi
 8014256:	6123      	strhi	r3, [r4, #16]
 8014258:	60a2      	str	r2, [r4, #8]
 801425a:	68a1      	ldr	r1, [r4, #8]
 801425c:	b129      	cbz	r1, 801426a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801425e:	6863      	ldr	r3, [r4, #4]
 8014260:	4299      	cmp	r1, r3
 8014262:	d802      	bhi.n	801426a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014264:	68e0      	ldr	r0, [r4, #12]
 8014266:	f7ff febc 	bl	8013fe2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801426a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801426c:	f023 0302 	bic.w	r3, r3, #2
 8014270:	6263      	str	r3, [r4, #36]	; 0x24
 8014272:	68e0      	ldr	r0, [r4, #12]
 8014274:	bd10      	pop	{r4, pc}
	...

08014278 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014278:	4b02      	ldr	r3, [pc, #8]	; (8014284 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801427a:	6018      	str	r0, [r3, #0]
 801427c:	4b02      	ldr	r3, [pc, #8]	; (8014288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801427e:	6019      	str	r1, [r3, #0]
 8014280:	4770      	bx	lr
 8014282:	bf00      	nop
 8014284:	200132c4 	.word	0x200132c4
 8014288:	200132c8 	.word	0x200132c8

0801428c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801428c:	4a02      	ldr	r2, [pc, #8]	; (8014298 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801428e:	2300      	movs	r3, #0
 8014290:	6013      	str	r3, [r2, #0]
 8014292:	4a02      	ldr	r2, [pc, #8]	; (801429c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014294:	6013      	str	r3, [r2, #0]
 8014296:	4770      	bx	lr
 8014298:	200132c4 	.word	0x200132c4
 801429c:	200132c8 	.word	0x200132c8

080142a0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80142a0:	4b01      	ldr	r3, [pc, #4]	; (80142a8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80142a2:	6818      	ldr	r0, [r3, #0]
 80142a4:	4770      	bx	lr
 80142a6:	bf00      	nop
 80142a8:	200132c4 	.word	0x200132c4

080142ac <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80142ac:	4b01      	ldr	r3, [pc, #4]	; (80142b4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80142ae:	6818      	ldr	r0, [r3, #0]
 80142b0:	4770      	bx	lr
 80142b2:	bf00      	nop
 80142b4:	200132c8 	.word	0x200132c8

080142b8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80142b8:	b510      	push	{r4, lr}
 80142ba:	6803      	ldr	r3, [r0, #0]
 80142bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80142be:	460c      	mov	r4, r1
 80142c0:	4798      	blx	r3
 80142c2:	1b03      	subs	r3, r0, r4
 80142c4:	4258      	negs	r0, r3
 80142c6:	4158      	adcs	r0, r3
 80142c8:	bd10      	pop	{r4, pc}
	...

080142cc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80142cc:	4b01      	ldr	r3, [pc, #4]	; (80142d4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80142ce:	6019      	str	r1, [r3, #0]
 80142d0:	4770      	bx	lr
 80142d2:	bf00      	nop
 80142d4:	200132cc 	.word	0x200132cc

080142d8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80142d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142dc:	4696      	mov	lr, r2
 80142de:	4605      	mov	r5, r0
 80142e0:	4614      	mov	r4, r2
 80142e2:	460e      	mov	r6, r1
 80142e4:	461f      	mov	r7, r3
 80142e6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80142ea:	b097      	sub	sp, #92	; 0x5c
 80142ec:	f10d 0c1c 	add.w	ip, sp, #28
 80142f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80142f4:	f8de 3000 	ldr.w	r3, [lr]
 80142f8:	f8cc 3000 	str.w	r3, [ip]
 80142fc:	f104 0e14 	add.w	lr, r4, #20
 8014300:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014304:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014308:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801430c:	f8de 3000 	ldr.w	r3, [lr]
 8014310:	f8cc 3000 	str.w	r3, [ip]
 8014314:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014318:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801431c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014320:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014324:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014328:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801432c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014330:	f8de 3000 	ldr.w	r3, [lr]
 8014334:	f8cc 3000 	str.w	r3, [ip]
 8014338:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801433a:	682b      	ldr	r3, [r5, #0]
 801433c:	9201      	str	r2, [sp, #4]
 801433e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014342:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014344:	9200      	str	r2, [sp, #0]
 8014346:	f8cd 8008 	str.w	r8, [sp, #8]
 801434a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801434e:	aa07      	add	r2, sp, #28
 8014350:	463b      	mov	r3, r7
 8014352:	4631      	mov	r1, r6
 8014354:	4628      	mov	r0, r5
 8014356:	47d8      	blx	fp
 8014358:	46a6      	mov	lr, r4
 801435a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801435e:	f10d 0c1c 	add.w	ip, sp, #28
 8014362:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014366:	f8de 3000 	ldr.w	r3, [lr]
 801436a:	f8cc 3000 	str.w	r3, [ip]
 801436e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014372:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014376:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801437a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801437e:	343c      	adds	r4, #60	; 0x3c
 8014380:	f8de 3000 	ldr.w	r3, [lr]
 8014384:	f8cc 3000 	str.w	r3, [ip]
 8014388:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801438a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801438e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014392:	6823      	ldr	r3, [r4, #0]
 8014394:	f8cc 3000 	str.w	r3, [ip]
 8014398:	682b      	ldr	r3, [r5, #0]
 801439a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801439e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80143a0:	9201      	str	r2, [sp, #4]
 80143a2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80143a4:	9200      	str	r2, [sp, #0]
 80143a6:	f8cd 8008 	str.w	r8, [sp, #8]
 80143aa:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80143ac:	aa07      	add	r2, sp, #28
 80143ae:	463b      	mov	r3, r7
 80143b0:	4631      	mov	r1, r6
 80143b2:	4628      	mov	r0, r5
 80143b4:	47a0      	blx	r4
 80143b6:	b017      	add	sp, #92	; 0x5c
 80143b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080143bc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80143bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143c0:	b08d      	sub	sp, #52	; 0x34
 80143c2:	4688      	mov	r8, r1
 80143c4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80143c6:	f8d3 c000 	ldr.w	ip, [r3]
 80143ca:	680f      	ldr	r7, [r1, #0]
 80143cc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80143d0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80143d4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80143d8:	edd3 6a07 	vldr	s13, [r3, #28]
 80143dc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80143de:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80143e2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80143e6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80143ea:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80143ee:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80143f2:	eba7 070c 	sub.w	r7, r7, ip
 80143f6:	42bc      	cmp	r4, r7
 80143f8:	bfa8      	it	ge
 80143fa:	463c      	movge	r4, r7
 80143fc:	ee07 4a90 	vmov	s15, r4
 8014400:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014404:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014408:	ee25 4a04 	vmul.f32	s8, s10, s8
 801440c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014410:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014414:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014418:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801441c:	eb09 0e0c 	add.w	lr, r9, ip
 8014420:	4571      	cmp	r1, lr
 8014422:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014426:	ee32 1a05 	vadd.f32	s2, s4, s10
 801442a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801442e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014432:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014436:	f340 808d 	ble.w	8014554 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801443a:	eba1 060e 	sub.w	r6, r1, lr
 801443e:	fb96 f5f4 	sdiv	r5, r6, r4
 8014442:	ee07 5a10 	vmov	s14, r5
 8014446:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801444a:	2d00      	cmp	r5, #0
 801444c:	fb04 6615 	mls	r6, r4, r5, r6
 8014450:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014454:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014458:	eea7 1a05 	vfma.f32	s2, s14, s10
 801445c:	dd13      	ble.n	8014486 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801445e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014462:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014466:	eef5 6a40 	vcmp.f32	s13, #0.0
 801446a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801446e:	bf18      	it	ne
 8014470:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014474:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014478:	bf08      	it	eq
 801447a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801447e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014482:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014486:	fb05 f204 	mul.w	r2, r5, r4
 801448a:	1abf      	subs	r7, r7, r2
 801448c:	4494      	add	ip, r2
 801448e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014492:	4411      	add	r1, r2
 8014494:	eb09 020c 	add.w	r2, r9, ip
 8014498:	443a      	add	r2, r7
 801449a:	b209      	sxth	r1, r1
 801449c:	428a      	cmp	r2, r1
 801449e:	bfc4      	itt	gt
 80144a0:	eba1 0209 	subgt.w	r2, r1, r9
 80144a4:	eba2 070c 	subgt.w	r7, r2, ip
 80144a8:	2f00      	cmp	r7, #0
 80144aa:	dd50      	ble.n	801454e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80144ac:	fb97 f1f4 	sdiv	r1, r7, r4
 80144b0:	fb04 7211 	mls	r2, r4, r1, r7
 80144b4:	b90a      	cbnz	r2, 80144ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80144b6:	3901      	subs	r1, #1
 80144b8:	4622      	mov	r2, r4
 80144ba:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80144be:	6840      	ldr	r0, [r0, #4]
 80144c0:	900b      	str	r0, [sp, #44]	; 0x2c
 80144c2:	f8d0 a000 	ldr.w	sl, [r0]
 80144c6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80144c8:	9008      	str	r0, [sp, #32]
 80144ca:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80144ce:	9818      	ldr	r0, [sp, #96]	; 0x60
 80144d0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80144d4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80144d8:	695b      	ldr	r3, [r3, #20]
 80144da:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80144dc:	445b      	add	r3, fp
 80144de:	eef0 6a42 	vmov.f32	s13, s4
 80144e2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80144e6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80144ea:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80144ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80144f2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80144f6:	9307      	str	r3, [sp, #28]
 80144f8:	ee17 7a90 	vmov	r7, s15
 80144fc:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014500:	eeb0 7a61 	vmov.f32	s14, s3
 8014504:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014508:	ee16 3a90 	vmov	r3, s13
 801450c:	fb97 f7f4 	sdiv	r7, r7, r4
 8014510:	ee17 ca90 	vmov	ip, s15
 8014514:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014518:	fb9c fcf4 	sdiv	ip, ip, r4
 801451c:	fb0c 3306 	mla	r3, ip, r6, r3
 8014520:	9302      	str	r3, [sp, #8]
 8014522:	ee17 3a10 	vmov	r3, s14
 8014526:	44b6      	add	lr, r6
 8014528:	fb04 e505 	mla	r5, r4, r5, lr
 801452c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014530:	fb07 3706 	mla	r7, r7, r6, r3
 8014534:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014538:	e9cd 4700 	strd	r4, r7, [sp]
 801453c:	2900      	cmp	r1, #0
 801453e:	bfcc      	ite	gt
 8014540:	46a1      	movgt	r9, r4
 8014542:	4691      	movle	r9, r2
 8014544:	eba9 0306 	sub.w	r3, r9, r6
 8014548:	f8da 4008 	ldr.w	r4, [sl, #8]
 801454c:	47a0      	blx	r4
 801454e:	b00d      	add	sp, #52	; 0x34
 8014550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014554:	2500      	movs	r5, #0
 8014556:	462e      	mov	r6, r5
 8014558:	e799      	b.n	801448e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801455c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801455c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014560:	b0db      	sub	sp, #364	; 0x16c
 8014562:	461d      	mov	r5, r3
 8014564:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014568:	930a      	str	r3, [sp, #40]	; 0x28
 801456a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801456e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014570:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014574:	9310      	str	r3, [sp, #64]	; 0x40
 8014576:	6803      	ldr	r3, [r0, #0]
 8014578:	910f      	str	r1, [sp, #60]	; 0x3c
 801457a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801457c:	9009      	str	r0, [sp, #36]	; 0x24
 801457e:	4614      	mov	r4, r2
 8014580:	4629      	mov	r1, r5
 8014582:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014586:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801458a:	47b8      	blx	r7
 801458c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801458e:	6058      	str	r0, [r3, #4]
 8014590:	2800      	cmp	r0, #0
 8014592:	f000 83a1 	beq.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014596:	682b      	ldr	r3, [r5, #0]
 8014598:	9314      	str	r3, [sp, #80]	; 0x50
 801459a:	686b      	ldr	r3, [r5, #4]
 801459c:	9315      	str	r3, [sp, #84]	; 0x54
 801459e:	4bc4      	ldr	r3, [pc, #784]	; (80148b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80145a0:	ed94 7a02 	vldr	s14, [r4, #8]
 80145a4:	7819      	ldrb	r1, [r3, #0]
 80145a6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80145aa:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80145ae:	2900      	cmp	r1, #0
 80145b0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80145b4:	bf16      	itet	ne
 80145b6:	4619      	movne	r1, r3
 80145b8:	4611      	moveq	r1, r2
 80145ba:	4613      	movne	r3, r2
 80145bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145c0:	9116      	str	r1, [sp, #88]	; 0x58
 80145c2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80145c6:	f240 8387 	bls.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145ca:	ed94 7a07 	vldr	s14, [r4, #28]
 80145ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80145d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145d6:	f240 837f 	bls.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145da:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80145de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80145e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145e6:	f240 8377 	bls.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145ea:	6822      	ldr	r2, [r4, #0]
 80145ec:	4bb1      	ldr	r3, [pc, #708]	; (80148b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80145ee:	429a      	cmp	r2, r3
 80145f0:	f2c0 8372 	blt.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145f4:	49b0      	ldr	r1, [pc, #704]	; (80148b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80145f6:	6963      	ldr	r3, [r4, #20]
 80145f8:	428a      	cmp	r2, r1
 80145fa:	f300 836d 	bgt.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80145fe:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014602:	48ae      	ldr	r0, [pc, #696]	; (80148bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014604:	33ff      	adds	r3, #255	; 0xff
 8014606:	4283      	cmp	r3, r0
 8014608:	f200 8366 	bhi.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801460c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801460e:	4dac      	ldr	r5, [pc, #688]	; (80148c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014610:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014614:	33ff      	adds	r3, #255	; 0xff
 8014616:	42ab      	cmp	r3, r5
 8014618:	f200 835e 	bhi.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801461c:	6862      	ldr	r2, [r4, #4]
 801461e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8014622:	33ff      	adds	r3, #255	; 0xff
 8014624:	4283      	cmp	r3, r0
 8014626:	f200 8357 	bhi.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801462a:	69a1      	ldr	r1, [r4, #24]
 801462c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8014630:	33ff      	adds	r3, #255	; 0xff
 8014632:	4283      	cmp	r3, r0
 8014634:	f200 8350 	bhi.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014638:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801463a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801463e:	30ff      	adds	r0, #255	; 0xff
 8014640:	42a8      	cmp	r0, r5
 8014642:	f200 8349 	bhi.w	8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014646:	428a      	cmp	r2, r1
 8014648:	f280 8110 	bge.w	801486c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801464c:	429a      	cmp	r2, r3
 801464e:	f300 8119 	bgt.w	8014884 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8014652:	4299      	cmp	r1, r3
 8014654:	f280 811d 	bge.w	8014892 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8014658:	2502      	movs	r5, #2
 801465a:	2701      	movs	r7, #1
 801465c:	46a9      	mov	r9, r5
 801465e:	46b8      	mov	r8, r7
 8014660:	f04f 0a00 	mov.w	sl, #0
 8014664:	4621      	mov	r1, r4
 8014666:	a849      	add	r0, sp, #292	; 0x124
 8014668:	f003 ff2a 	bl	80184c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801466c:	4622      	mov	r2, r4
 801466e:	4653      	mov	r3, sl
 8014670:	a949      	add	r1, sp, #292	; 0x124
 8014672:	f8cd 9000 	str.w	r9, [sp]
 8014676:	a819      	add	r0, sp, #100	; 0x64
 8014678:	f004 f852 	bl	8018720 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801467c:	4622      	mov	r2, r4
 801467e:	4653      	mov	r3, sl
 8014680:	a949      	add	r1, sp, #292	; 0x124
 8014682:	f8cd 8000 	str.w	r8, [sp]
 8014686:	a829      	add	r0, sp, #164	; 0xa4
 8014688:	f004 f84a 	bl	8018720 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801468c:	4643      	mov	r3, r8
 801468e:	4622      	mov	r2, r4
 8014690:	a949      	add	r1, sp, #292	; 0x124
 8014692:	f8cd 9000 	str.w	r9, [sp]
 8014696:	a839      	add	r0, sp, #228	; 0xe4
 8014698:	f004 f842 	bl	8018720 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801469c:	42af      	cmp	r7, r5
 801469e:	bfb5      	itete	lt
 80146a0:	2300      	movlt	r3, #0
 80146a2:	2301      	movge	r3, #1
 80146a4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80146a6:	930e      	strge	r3, [sp, #56]	; 0x38
 80146a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80146aa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80146ae:	af12      	add	r7, sp, #72	; 0x48
 80146b0:	bfb9      	ittee	lt
 80146b2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80146b4:	ac19      	addlt	r4, sp, #100	; 0x64
 80146b6:	ad19      	addge	r5, sp, #100	; 0x64
 80146b8:	ac29      	addge	r4, sp, #164	; 0xa4
 80146ba:	e887 0003 	stmia.w	r7, {r0, r1}
 80146be:	b928      	cbnz	r0, 80146cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80146c0:	4b80      	ldr	r3, [pc, #512]	; (80148c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80146c2:	6818      	ldr	r0, [r3, #0]
 80146c4:	6803      	ldr	r3, [r0, #0]
 80146c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80146c8:	4798      	blx	r3
 80146ca:	6038      	str	r0, [r7, #0]
 80146cc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80146ce:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80146d2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80146d6:	930c      	str	r3, [sp, #48]	; 0x30
 80146d8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80146da:	6963      	ldr	r3, [r4, #20]
 80146dc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80146de:	440b      	add	r3, r1
 80146e0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80146e4:	4408      	add	r0, r1
 80146e6:	b200      	sxth	r0, r0
 80146e8:	4283      	cmp	r3, r0
 80146ea:	900d      	str	r0, [sp, #52]	; 0x34
 80146ec:	f280 80dd 	bge.w	80148aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80146f0:	428b      	cmp	r3, r1
 80146f2:	da08      	bge.n	8014706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80146f4:	2a00      	cmp	r2, #0
 80146f6:	dd06      	ble.n	8014706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80146f8:	1acb      	subs	r3, r1, r3
 80146fa:	429a      	cmp	r2, r3
 80146fc:	f2c0 80e4 	blt.w	80148c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8014700:	2b00      	cmp	r3, #0
 8014702:	f300 80e2 	bgt.w	80148ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8014706:	6967      	ldr	r7, [r4, #20]
 8014708:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801470a:	443b      	add	r3, r7
 801470c:	461f      	mov	r7, r3
 801470e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014710:	1bdf      	subs	r7, r3, r7
 8014712:	4297      	cmp	r7, r2
 8014714:	bfa8      	it	ge
 8014716:	4617      	movge	r7, r2
 8014718:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801471c:	2f00      	cmp	r7, #0
 801471e:	f340 8166 	ble.w	80149ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8014722:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014724:	6829      	ldr	r1, [r5, #0]
 8014726:	f9b3 2000 	ldrsh.w	r2, [r3]
 801472a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801472e:	6820      	ldr	r0, [r4, #0]
 8014730:	4411      	add	r1, r2
 8014732:	4299      	cmp	r1, r3
 8014734:	dd1a      	ble.n	801476c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014736:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801473a:	440b      	add	r3, r1
 801473c:	4402      	add	r2, r0
 801473e:	b21b      	sxth	r3, r3
 8014740:	429a      	cmp	r2, r3
 8014742:	dc13      	bgt.n	801476c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014744:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014746:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014748:	681b      	ldr	r3, [r3, #0]
 801474a:	9206      	str	r2, [sp, #24]
 801474c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801474e:	9205      	str	r2, [sp, #20]
 8014750:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014752:	9500      	str	r5, [sp, #0]
 8014754:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014758:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801475a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801475c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014760:	a912      	add	r1, sp, #72	; 0x48
 8014762:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014766:	aa49      	add	r2, sp, #292	; 0x124
 8014768:	4623      	mov	r3, r4
 801476a:	47c8      	blx	r9
 801476c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014770:	441a      	add	r2, r3
 8014772:	6963      	ldr	r3, [r4, #20]
 8014774:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014778:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801477c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014780:	68a1      	ldr	r1, [r4, #8]
 8014782:	ed94 6a08 	vldr	s12, [r4, #32]
 8014786:	6022      	str	r2, [r4, #0]
 8014788:	3301      	adds	r3, #1
 801478a:	6163      	str	r3, [r4, #20]
 801478c:	69a3      	ldr	r3, [r4, #24]
 801478e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014792:	3b01      	subs	r3, #1
 8014794:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014798:	61a3      	str	r3, [r4, #24]
 801479a:	6923      	ldr	r3, [r4, #16]
 801479c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80147a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80147a4:	edd4 6a07 	vldr	s13, [r4, #28]
 80147a8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80147ac:	440b      	add	r3, r1
 80147ae:	68e1      	ldr	r1, [r4, #12]
 80147b0:	6123      	str	r3, [r4, #16]
 80147b2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80147b6:	428b      	cmp	r3, r1
 80147b8:	edc4 6a07 	vstr	s13, [r4, #28]
 80147bc:	db15      	blt.n	80147ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80147be:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80147c2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80147c6:	3201      	adds	r2, #1
 80147c8:	edc4 6a07 	vstr	s13, [r4, #28]
 80147cc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80147d0:	6022      	str	r2, [r4, #0]
 80147d2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80147d6:	1a5b      	subs	r3, r3, r1
 80147d8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80147dc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80147e0:	6123      	str	r3, [r4, #16]
 80147e2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80147e6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80147ea:	e9d5 2300 	ldrd	r2, r3, [r5]
 80147ee:	441a      	add	r2, r3
 80147f0:	696b      	ldr	r3, [r5, #20]
 80147f2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80147f6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80147fa:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80147fe:	68a9      	ldr	r1, [r5, #8]
 8014800:	ed95 6a08 	vldr	s12, [r5, #32]
 8014804:	602a      	str	r2, [r5, #0]
 8014806:	3301      	adds	r3, #1
 8014808:	616b      	str	r3, [r5, #20]
 801480a:	69ab      	ldr	r3, [r5, #24]
 801480c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014810:	3b01      	subs	r3, #1
 8014812:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014816:	61ab      	str	r3, [r5, #24]
 8014818:	692b      	ldr	r3, [r5, #16]
 801481a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801481e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014822:	edd5 6a07 	vldr	s13, [r5, #28]
 8014826:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801482a:	440b      	add	r3, r1
 801482c:	68e9      	ldr	r1, [r5, #12]
 801482e:	612b      	str	r3, [r5, #16]
 8014830:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014834:	428b      	cmp	r3, r1
 8014836:	edc5 6a07 	vstr	s13, [r5, #28]
 801483a:	db15      	blt.n	8014868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801483c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014840:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014844:	3201      	adds	r2, #1
 8014846:	edc5 6a07 	vstr	s13, [r5, #28]
 801484a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801484e:	602a      	str	r2, [r5, #0]
 8014850:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014854:	1a5b      	subs	r3, r3, r1
 8014856:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801485a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801485e:	612b      	str	r3, [r5, #16]
 8014860:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014864:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014868:	3f01      	subs	r7, #1
 801486a:	e757      	b.n	801471c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801486c:	4299      	cmp	r1, r3
 801486e:	dc13      	bgt.n	8014898 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8014870:	429a      	cmp	r2, r3
 8014872:	da14      	bge.n	801489e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014874:	2502      	movs	r5, #2
 8014876:	2703      	movs	r7, #3
 8014878:	46a9      	mov	r9, r5
 801487a:	f04f 0800 	mov.w	r8, #0
 801487e:	f04f 0a01 	mov.w	sl, #1
 8014882:	e6ef      	b.n	8014664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014884:	2501      	movs	r5, #1
 8014886:	2700      	movs	r7, #0
 8014888:	46a9      	mov	r9, r5
 801488a:	46b8      	mov	r8, r7
 801488c:	f04f 0a02 	mov.w	sl, #2
 8014890:	e6e8      	b.n	8014664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014892:	2501      	movs	r5, #1
 8014894:	2702      	movs	r7, #2
 8014896:	e6e1      	b.n	801465c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014898:	2500      	movs	r5, #0
 801489a:	2701      	movs	r7, #1
 801489c:	e7f4      	b.n	8014888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801489e:	2702      	movs	r7, #2
 80148a0:	2503      	movs	r5, #3
 80148a2:	f04f 0900 	mov.w	r9, #0
 80148a6:	46b8      	mov	r8, r7
 80148a8:	e7e9      	b.n	801487e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80148aa:	4613      	mov	r3, r2
 80148ac:	e728      	b.n	8014700 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80148ae:	bf00      	nop
 80148b0:	200132b4 	.word	0x200132b4
 80148b4:	fffd8f01 	.word	0xfffd8f01
 80148b8:	00027100 	.word	0x00027100
 80148bc:	0004e1ff 	.word	0x0004e1ff
 80148c0:	0004e1fe 	.word	0x0004e1fe
 80148c4:	200132bc 	.word	0x200132bc
 80148c8:	4613      	mov	r3, r2
 80148ca:	992b      	ldr	r1, [sp, #172]	; 0xac
 80148cc:	9111      	str	r1, [sp, #68]	; 0x44
 80148ce:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80148d2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80148d6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80148d8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80148dc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80148e0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80148e4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80148e8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80148ec:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80148f0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80148f4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80148f8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80148fc:	469e      	mov	lr, r3
 80148fe:	469c      	mov	ip, r3
 8014900:	f04f 0900 	mov.w	r9, #0
 8014904:	f1bc 0f00 	cmp.w	ip, #0
 8014908:	d147      	bne.n	801499a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801490a:	eb03 0c07 	add.w	ip, r3, r7
 801490e:	1ad7      	subs	r7, r2, r3
 8014910:	f1b9 0f00 	cmp.w	r9, #0
 8014914:	d009      	beq.n	801492a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014916:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801491a:	9029      	str	r0, [sp, #164]	; 0xa4
 801491c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014920:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014924:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014928:	912d      	str	r1, [sp, #180]	; 0xb4
 801492a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801492c:	9111      	str	r1, [sp, #68]	; 0x44
 801492e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014932:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014936:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801493a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801493e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014942:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014946:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801494a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801494e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014952:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014956:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801495a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801495e:	f04f 0800 	mov.w	r8, #0
 8014962:	f1be 0f00 	cmp.w	lr, #0
 8014966:	d031      	beq.n	80149cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014968:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801496a:	4431      	add	r1, r6
 801496c:	4549      	cmp	r1, r9
 801496e:	4450      	add	r0, sl
 8014970:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014974:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014978:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801497c:	db08      	blt.n	8014990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801497e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014982:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014986:	ee37 7a06 	vadd.f32	s14, s14, s12
 801498a:	3001      	adds	r0, #1
 801498c:	eba1 0109 	sub.w	r1, r1, r9
 8014990:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014994:	f04f 0801 	mov.w	r8, #1
 8014998:	e7e3      	b.n	8014962 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801499a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801499c:	4431      	add	r1, r6
 801499e:	4541      	cmp	r1, r8
 80149a0:	4450      	add	r0, sl
 80149a2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80149a6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80149aa:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80149ae:	db08      	blt.n	80149c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80149b0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80149b4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80149b8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80149bc:	3001      	adds	r0, #1
 80149be:	eba1 0108 	sub.w	r1, r1, r8
 80149c2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80149c6:	f04f 0901 	mov.w	r9, #1
 80149ca:	e79b      	b.n	8014904 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80149cc:	449c      	add	ip, r3
 80149ce:	1aff      	subs	r7, r7, r3
 80149d0:	f1b8 0f00 	cmp.w	r8, #0
 80149d4:	d009      	beq.n	80149ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80149d6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80149da:	9019      	str	r0, [sp, #100]	; 0x64
 80149dc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80149e0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80149e4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80149e8:	911d      	str	r1, [sp, #116]	; 0x74
 80149ea:	1ad2      	subs	r2, r2, r3
 80149ec:	e68b      	b.n	8014706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80149ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149f0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80149f2:	2b00      	cmp	r3, #0
 80149f4:	f000 80d1 	beq.w	8014b9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80149f8:	ad19      	add	r5, sp, #100	; 0x64
 80149fa:	ac39      	add	r4, sp, #228	; 0xe4
 80149fc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80149fe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014a02:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014a06:	930c      	str	r3, [sp, #48]	; 0x30
 8014a08:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014a0a:	6963      	ldr	r3, [r4, #20]
 8014a0c:	440b      	add	r3, r1
 8014a0e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014a12:	4408      	add	r0, r1
 8014a14:	b200      	sxth	r0, r0
 8014a16:	4283      	cmp	r3, r0
 8014a18:	900d      	str	r0, [sp, #52]	; 0x34
 8014a1a:	f280 80c1 	bge.w	8014ba0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8014a1e:	428b      	cmp	r3, r1
 8014a20:	da08      	bge.n	8014a34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014a22:	2a00      	cmp	r2, #0
 8014a24:	dd06      	ble.n	8014a34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014a26:	1acb      	subs	r3, r1, r3
 8014a28:	429a      	cmp	r2, r3
 8014a2a:	f2c0 80bb 	blt.w	8014ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8014a2e:	2b00      	cmp	r3, #0
 8014a30:	f300 80b9 	bgt.w	8014ba6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014a34:	6967      	ldr	r7, [r4, #20]
 8014a36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014a38:	443b      	add	r3, r7
 8014a3a:	461f      	mov	r7, r3
 8014a3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014a3e:	1bdf      	subs	r7, r3, r7
 8014a40:	4297      	cmp	r7, r2
 8014a42:	bfa8      	it	ge
 8014a44:	4617      	movge	r7, r2
 8014a46:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014a4a:	2f00      	cmp	r7, #0
 8014a4c:	f340 813c 	ble.w	8014cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014a50:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014a52:	6829      	ldr	r1, [r5, #0]
 8014a54:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014a58:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014a5c:	6820      	ldr	r0, [r4, #0]
 8014a5e:	4411      	add	r1, r2
 8014a60:	4299      	cmp	r1, r3
 8014a62:	dd1a      	ble.n	8014a9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014a64:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014a68:	440b      	add	r3, r1
 8014a6a:	4402      	add	r2, r0
 8014a6c:	b21b      	sxth	r3, r3
 8014a6e:	429a      	cmp	r2, r3
 8014a70:	dc13      	bgt.n	8014a9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014a72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a74:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014a76:	681b      	ldr	r3, [r3, #0]
 8014a78:	9206      	str	r2, [sp, #24]
 8014a7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014a7c:	9205      	str	r2, [sp, #20]
 8014a7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014a80:	9500      	str	r5, [sp, #0]
 8014a82:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014a86:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014a88:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014a8a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014a8e:	a912      	add	r1, sp, #72	; 0x48
 8014a90:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014a94:	aa49      	add	r2, sp, #292	; 0x124
 8014a96:	4623      	mov	r3, r4
 8014a98:	47c8      	blx	r9
 8014a9a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014a9e:	441a      	add	r2, r3
 8014aa0:	6963      	ldr	r3, [r4, #20]
 8014aa2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014aa6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014aaa:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014aae:	68a1      	ldr	r1, [r4, #8]
 8014ab0:	ed94 6a08 	vldr	s12, [r4, #32]
 8014ab4:	6022      	str	r2, [r4, #0]
 8014ab6:	3301      	adds	r3, #1
 8014ab8:	6163      	str	r3, [r4, #20]
 8014aba:	69a3      	ldr	r3, [r4, #24]
 8014abc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014ac0:	3b01      	subs	r3, #1
 8014ac2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014ac6:	61a3      	str	r3, [r4, #24]
 8014ac8:	6923      	ldr	r3, [r4, #16]
 8014aca:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014ace:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014ad2:	edd4 6a07 	vldr	s13, [r4, #28]
 8014ad6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014ada:	440b      	add	r3, r1
 8014adc:	68e1      	ldr	r1, [r4, #12]
 8014ade:	6123      	str	r3, [r4, #16]
 8014ae0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014ae4:	428b      	cmp	r3, r1
 8014ae6:	edc4 6a07 	vstr	s13, [r4, #28]
 8014aea:	db15      	blt.n	8014b18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014aec:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014af0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014af4:	3201      	adds	r2, #1
 8014af6:	edc4 6a07 	vstr	s13, [r4, #28]
 8014afa:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014afe:	6022      	str	r2, [r4, #0]
 8014b00:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014b04:	1a5b      	subs	r3, r3, r1
 8014b06:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014b0a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014b0e:	6123      	str	r3, [r4, #16]
 8014b10:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014b14:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014b18:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014b1c:	441a      	add	r2, r3
 8014b1e:	696b      	ldr	r3, [r5, #20]
 8014b20:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014b24:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014b28:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014b2c:	68a9      	ldr	r1, [r5, #8]
 8014b2e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014b32:	602a      	str	r2, [r5, #0]
 8014b34:	3301      	adds	r3, #1
 8014b36:	616b      	str	r3, [r5, #20]
 8014b38:	69ab      	ldr	r3, [r5, #24]
 8014b3a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014b3e:	3b01      	subs	r3, #1
 8014b40:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014b44:	61ab      	str	r3, [r5, #24]
 8014b46:	692b      	ldr	r3, [r5, #16]
 8014b48:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014b4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014b50:	edd5 6a07 	vldr	s13, [r5, #28]
 8014b54:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014b58:	440b      	add	r3, r1
 8014b5a:	68e9      	ldr	r1, [r5, #12]
 8014b5c:	612b      	str	r3, [r5, #16]
 8014b5e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014b62:	428b      	cmp	r3, r1
 8014b64:	edc5 6a07 	vstr	s13, [r5, #28]
 8014b68:	db15      	blt.n	8014b96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014b6a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014b6e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014b72:	3201      	adds	r2, #1
 8014b74:	edc5 6a07 	vstr	s13, [r5, #28]
 8014b78:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014b7c:	602a      	str	r2, [r5, #0]
 8014b7e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014b82:	1a5b      	subs	r3, r3, r1
 8014b84:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014b88:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014b8c:	612b      	str	r3, [r5, #16]
 8014b8e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014b92:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014b96:	3f01      	subs	r7, #1
 8014b98:	e757      	b.n	8014a4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014b9a:	ad39      	add	r5, sp, #228	; 0xe4
 8014b9c:	ac19      	add	r4, sp, #100	; 0x64
 8014b9e:	e72d      	b.n	80149fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014ba0:	4613      	mov	r3, r2
 8014ba2:	e744      	b.n	8014a2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014ba4:	4613      	mov	r3, r2
 8014ba6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014baa:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014bac:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014bb0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014bb4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014bb8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014bbc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014bc0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014bc4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014bc8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014bca:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014bce:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014bd2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014bd6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014bda:	960e      	str	r6, [sp, #56]	; 0x38
 8014bdc:	469e      	mov	lr, r3
 8014bde:	461f      	mov	r7, r3
 8014be0:	f04f 0900 	mov.w	r9, #0
 8014be4:	2f00      	cmp	r7, #0
 8014be6:	d146      	bne.n	8014c76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014be8:	449c      	add	ip, r3
 8014bea:	1ad7      	subs	r7, r2, r3
 8014bec:	f1b9 0f00 	cmp.w	r9, #0
 8014bf0:	d009      	beq.n	8014c06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014bf2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014bf6:	9039      	str	r0, [sp, #228]	; 0xe4
 8014bf8:	913d      	str	r1, [sp, #244]	; 0xf4
 8014bfa:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014bfe:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014c02:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014c06:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014c08:	910e      	str	r1, [sp, #56]	; 0x38
 8014c0a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014c0e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014c12:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014c16:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014c1a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014c1e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014c22:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014c26:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014c2a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014c2e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014c32:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014c36:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014c3a:	f04f 0800 	mov.w	r8, #0
 8014c3e:	f1be 0f00 	cmp.w	lr, #0
 8014c42:	d030      	beq.n	8014ca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014c44:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014c46:	4431      	add	r1, r6
 8014c48:	4549      	cmp	r1, r9
 8014c4a:	4450      	add	r0, sl
 8014c4c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014c50:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014c54:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014c58:	db08      	blt.n	8014c6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014c5a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014c5e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014c62:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014c66:	3001      	adds	r0, #1
 8014c68:	eba1 0109 	sub.w	r1, r1, r9
 8014c6c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014c70:	f04f 0801 	mov.w	r8, #1
 8014c74:	e7e3      	b.n	8014c3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014c76:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014c78:	4431      	add	r1, r6
 8014c7a:	4541      	cmp	r1, r8
 8014c7c:	4450      	add	r0, sl
 8014c7e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014c82:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014c86:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014c8a:	db08      	blt.n	8014c9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014c8c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014c90:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014c94:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014c98:	3001      	adds	r0, #1
 8014c9a:	eba1 0108 	sub.w	r1, r1, r8
 8014c9e:	3f01      	subs	r7, #1
 8014ca0:	f04f 0901 	mov.w	r9, #1
 8014ca4:	e79e      	b.n	8014be4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014ca6:	449c      	add	ip, r3
 8014ca8:	1aff      	subs	r7, r7, r3
 8014caa:	f1b8 0f00 	cmp.w	r8, #0
 8014cae:	d009      	beq.n	8014cc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014cb0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014cb4:	9019      	str	r0, [sp, #100]	; 0x64
 8014cb6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014cba:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014cbe:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014cc2:	911d      	str	r1, [sp, #116]	; 0x74
 8014cc4:	1ad2      	subs	r2, r2, r3
 8014cc6:	e6b5      	b.n	8014a34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014cc8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014cca:	681b      	ldr	r3, [r3, #0]
 8014ccc:	b923      	cbnz	r3, 8014cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014cce:	4b04      	ldr	r3, [pc, #16]	; (8014ce0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014cd0:	6818      	ldr	r0, [r3, #0]
 8014cd2:	6803      	ldr	r3, [r0, #0]
 8014cd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014cd6:	4798      	blx	r3
 8014cd8:	b05b      	add	sp, #364	; 0x16c
 8014cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014cde:	bf00      	nop
 8014ce0:	200132bc 	.word	0x200132bc

08014ce4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014ce4:	b570      	push	{r4, r5, r6, lr}
 8014ce6:	4604      	mov	r4, r0
 8014ce8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014cec:	9805      	ldr	r0, [sp, #20]
 8014cee:	6061      	str	r1, [r4, #4]
 8014cf0:	2500      	movs	r5, #0
 8014cf2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014cf6:	8263      	strh	r3, [r4, #18]
 8014cf8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014cfc:	8025      	strh	r5, [r4, #0]
 8014cfe:	7221      	strb	r1, [r4, #8]
 8014d00:	7266      	strb	r6, [r4, #9]
 8014d02:	60e0      	str	r0, [r4, #12]
 8014d04:	8222      	strh	r2, [r4, #16]
 8014d06:	82a3      	strh	r3, [r4, #20]
 8014d08:	82e5      	strh	r5, [r4, #22]
 8014d0a:	8325      	strh	r5, [r4, #24]
 8014d0c:	8365      	strh	r5, [r4, #26]
 8014d0e:	83a5      	strh	r5, [r4, #28]
 8014d10:	83e5      	strh	r5, [r4, #30]
 8014d12:	8425      	strh	r5, [r4, #32]
 8014d14:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014d18:	b32e      	cbz	r6, 8014d66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014d1a:	6803      	ldr	r3, [r0, #0]
 8014d1c:	695b      	ldr	r3, [r3, #20]
 8014d1e:	4798      	blx	r3
 8014d20:	4606      	mov	r6, r0
 8014d22:	b300      	cbz	r0, 8014d66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014d24:	68e0      	ldr	r0, [r4, #12]
 8014d26:	6803      	ldr	r3, [r0, #0]
 8014d28:	4631      	mov	r1, r6
 8014d2a:	68db      	ldr	r3, [r3, #12]
 8014d2c:	4798      	blx	r3
 8014d2e:	4605      	mov	r5, r0
 8014d30:	b1c8      	cbz	r0, 8014d66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014d32:	7b43      	ldrb	r3, [r0, #13]
 8014d34:	7a82      	ldrb	r2, [r0, #10]
 8014d36:	005b      	lsls	r3, r3, #1
 8014d38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014d3c:	4313      	orrs	r3, r2
 8014d3e:	8423      	strh	r3, [r4, #32]
 8014d40:	7a63      	ldrb	r3, [r4, #9]
 8014d42:	2b06      	cmp	r3, #6
 8014d44:	d10f      	bne.n	8014d66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014d46:	68e0      	ldr	r0, [r4, #12]
 8014d48:	6803      	ldr	r3, [r0, #0]
 8014d4a:	462a      	mov	r2, r5
 8014d4c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014d4e:	4631      	mov	r1, r6
 8014d50:	4798      	blx	r3
 8014d52:	7b6b      	ldrb	r3, [r5, #13]
 8014d54:	005b      	lsls	r3, r3, #1
 8014d56:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014d5a:	7aab      	ldrb	r3, [r5, #10]
 8014d5c:	4313      	orrs	r3, r2
 8014d5e:	4418      	add	r0, r3
 8014d60:	8c23      	ldrh	r3, [r4, #32]
 8014d62:	4418      	add	r0, r3
 8014d64:	8420      	strh	r0, [r4, #32]
 8014d66:	4620      	mov	r0, r4
 8014d68:	bd70      	pop	{r4, r5, r6, pc}

08014d6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014d6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d6e:	2400      	movs	r4, #0
 8014d70:	b085      	sub	sp, #20
 8014d72:	4681      	mov	r9, r0
 8014d74:	4688      	mov	r8, r1
 8014d76:	4692      	mov	sl, r2
 8014d78:	469b      	mov	fp, r3
 8014d7a:	4627      	mov	r7, r4
 8014d7c:	4625      	mov	r5, r4
 8014d7e:	4626      	mov	r6, r4
 8014d80:	4554      	cmp	r4, sl
 8014d82:	da2a      	bge.n	8014dda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014d84:	2300      	movs	r3, #0
 8014d86:	9303      	str	r3, [sp, #12]
 8014d88:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014d8c:	429d      	cmp	r5, r3
 8014d8e:	d004      	beq.n	8014d9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014d90:	f242 030b 	movw	r3, #8203	; 0x200b
 8014d94:	429d      	cmp	r5, r3
 8014d96:	bf18      	it	ne
 8014d98:	462f      	movne	r7, r5
 8014d9a:	ab03      	add	r3, sp, #12
 8014d9c:	4642      	mov	r2, r8
 8014d9e:	4659      	mov	r1, fp
 8014da0:	4648      	mov	r0, r9
 8014da2:	f003 f9a3 	bl	80180ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014da6:	4605      	mov	r5, r0
 8014da8:	b1b8      	cbz	r0, 8014dda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014daa:	280a      	cmp	r0, #10
 8014dac:	d015      	beq.n	8014dda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014dae:	9a03      	ldr	r2, [sp, #12]
 8014db0:	b18a      	cbz	r2, 8014dd6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014db2:	7b50      	ldrb	r0, [r2, #13]
 8014db4:	7a93      	ldrb	r3, [r2, #10]
 8014db6:	8895      	ldrh	r5, [r2, #4]
 8014db8:	0040      	lsls	r0, r0, #1
 8014dba:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014dbe:	4303      	orrs	r3, r0
 8014dc0:	9301      	str	r3, [sp, #4]
 8014dc2:	f8d8 3000 	ldr.w	r3, [r8]
 8014dc6:	4639      	mov	r1, r7
 8014dc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014dca:	4640      	mov	r0, r8
 8014dcc:	4798      	blx	r3
 8014dce:	9b01      	ldr	r3, [sp, #4]
 8014dd0:	4418      	add	r0, r3
 8014dd2:	4406      	add	r6, r0
 8014dd4:	b2b6      	uxth	r6, r6
 8014dd6:	3401      	adds	r4, #1
 8014dd8:	e7d2      	b.n	8014d80 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014dda:	4630      	mov	r0, r6
 8014ddc:	b005      	add	sp, #20
 8014dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014de2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014de2:	2a02      	cmp	r2, #2
 8014de4:	b530      	push	{r4, r5, lr}
 8014de6:	d011      	beq.n	8014e0c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014de8:	2a03      	cmp	r2, #3
 8014dea:	d01c      	beq.n	8014e26 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014dec:	2a01      	cmp	r2, #1
 8014dee:	d10c      	bne.n	8014e0a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014df0:	888b      	ldrh	r3, [r1, #4]
 8014df2:	8801      	ldrh	r1, [r0, #0]
 8014df4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014df8:	8844      	ldrh	r4, [r0, #2]
 8014dfa:	8004      	strh	r4, [r0, #0]
 8014dfc:	1a5b      	subs	r3, r3, r1
 8014dfe:	1a9b      	subs	r3, r3, r2
 8014e00:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014e04:	8043      	strh	r3, [r0, #2]
 8014e06:	8081      	strh	r1, [r0, #4]
 8014e08:	80c2      	strh	r2, [r0, #6]
 8014e0a:	bd30      	pop	{r4, r5, pc}
 8014e0c:	88cb      	ldrh	r3, [r1, #6]
 8014e0e:	8842      	ldrh	r2, [r0, #2]
 8014e10:	1a9b      	subs	r3, r3, r2
 8014e12:	88c2      	ldrh	r2, [r0, #6]
 8014e14:	1a9b      	subs	r3, r3, r2
 8014e16:	888a      	ldrh	r2, [r1, #4]
 8014e18:	8801      	ldrh	r1, [r0, #0]
 8014e1a:	8043      	strh	r3, [r0, #2]
 8014e1c:	1a52      	subs	r2, r2, r1
 8014e1e:	8881      	ldrh	r1, [r0, #4]
 8014e20:	1a52      	subs	r2, r2, r1
 8014e22:	8002      	strh	r2, [r0, #0]
 8014e24:	e7f1      	b.n	8014e0a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014e26:	88cb      	ldrh	r3, [r1, #6]
 8014e28:	8841      	ldrh	r1, [r0, #2]
 8014e2a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014e2e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014e32:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014e36:	8045      	strh	r5, [r0, #2]
 8014e38:	1a5b      	subs	r3, r3, r1
 8014e3a:	1a9b      	subs	r3, r3, r2
 8014e3c:	8003      	strh	r3, [r0, #0]
 8014e3e:	8082      	strh	r2, [r0, #4]
 8014e40:	80c4      	strh	r4, [r0, #6]
 8014e42:	e7e2      	b.n	8014e0a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014e44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e48:	b09f      	sub	sp, #124	; 0x7c
 8014e4a:	9116      	str	r1, [sp, #88]	; 0x58
 8014e4c:	9317      	str	r3, [sp, #92]	; 0x5c
 8014e4e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014e50:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014e52:	8809      	ldrh	r1, [r1, #0]
 8014e54:	889b      	ldrh	r3, [r3, #4]
 8014e56:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014e5a:	9212      	str	r2, [sp, #72]	; 0x48
 8014e5c:	440b      	add	r3, r1
 8014e5e:	b21b      	sxth	r3, r3
 8014e60:	9310      	str	r3, [sp, #64]	; 0x40
 8014e62:	f8d8 3000 	ldr.w	r3, [r8]
 8014e66:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014e6a:	7b19      	ldrb	r1, [r3, #12]
 8014e6c:	7adb      	ldrb	r3, [r3, #11]
 8014e6e:	9011      	str	r0, [sp, #68]	; 0x44
 8014e70:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014e74:	9114      	str	r1, [sp, #80]	; 0x50
 8014e76:	9315      	str	r3, [sp, #84]	; 0x54
 8014e78:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014e7c:	2a00      	cmp	r2, #0
 8014e7e:	d06a      	beq.n	8014f56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014e80:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014e84:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014e86:	2b06      	cmp	r3, #6
 8014e88:	bf14      	ite	ne
 8014e8a:	2301      	movne	r3, #1
 8014e8c:	2302      	moveq	r3, #2
 8014e8e:	4413      	add	r3, r2
 8014e90:	f04f 0900 	mov.w	r9, #0
 8014e94:	930f      	str	r3, [sp, #60]	; 0x3c
 8014e96:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014e9a:	464c      	mov	r4, r9
 8014e9c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014ea0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014ea4:	4293      	cmp	r3, r2
 8014ea6:	f280 808f 	bge.w	8014fc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014eaa:	2300      	movs	r3, #0
 8014eac:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014eb0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014eb4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014eb8:	429c      	cmp	r4, r3
 8014eba:	d006      	beq.n	8014eca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8014ebc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014ebe:	f242 020b 	movw	r2, #8203	; 0x200b
 8014ec2:	4294      	cmp	r4, r2
 8014ec4:	bf18      	it	ne
 8014ec6:	4623      	movne	r3, r4
 8014ec8:	930d      	str	r3, [sp, #52]	; 0x34
 8014eca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ecc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014ece:	f8d8 2000 	ldr.w	r2, [r8]
 8014ed2:	428b      	cmp	r3, r1
 8014ed4:	db41      	blt.n	8014f5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014ed6:	6813      	ldr	r3, [r2, #0]
 8014ed8:	4610      	mov	r0, r2
 8014eda:	695b      	ldr	r3, [r3, #20]
 8014edc:	4798      	blx	r3
 8014ede:	4604      	mov	r4, r0
 8014ee0:	f8d8 0000 	ldr.w	r0, [r8]
 8014ee4:	6803      	ldr	r3, [r0, #0]
 8014ee6:	aa1d      	add	r2, sp, #116	; 0x74
 8014ee8:	689d      	ldr	r5, [r3, #8]
 8014eea:	4621      	mov	r1, r4
 8014eec:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014ef0:	47a8      	blx	r5
 8014ef2:	901c      	str	r0, [sp, #112]	; 0x70
 8014ef4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014ef8:	429c      	cmp	r4, r3
 8014efa:	f000 80eb 	beq.w	80150d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014efe:	f242 030b 	movw	r3, #8203	; 0x200b
 8014f02:	429c      	cmp	r4, r3
 8014f04:	f000 80e6 	beq.w	80150d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f08:	2c00      	cmp	r4, #0
 8014f0a:	f000 80f8 	beq.w	80150fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014f0e:	2c0a      	cmp	r4, #10
 8014f10:	d060      	beq.n	8014fd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014f12:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014f14:	b36a      	cbz	r2, 8014f72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014f16:	8894      	ldrh	r4, [r2, #4]
 8014f18:	f1bb 0f00 	cmp.w	fp, #0
 8014f1c:	d03b      	beq.n	8014f96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014f1e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014f22:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014f26:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014f2a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014f2e:	f1bb 0f01 	cmp.w	fp, #1
 8014f32:	ea49 0903 	orr.w	r9, r9, r3
 8014f36:	d134      	bne.n	8014fa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014f38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014f3a:	eba6 0609 	sub.w	r6, r6, r9
 8014f3e:	2b00      	cmp	r3, #0
 8014f40:	d14f      	bne.n	8014fe2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014f42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014f44:	eb09 0306 	add.w	r3, r9, r6
 8014f48:	4413      	add	r3, r2
 8014f4a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014f4c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014f50:	4293      	cmp	r3, r2
 8014f52:	da51      	bge.n	8014ff8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014f54:	e038      	b.n	8014fc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014f56:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014f58:	e79a      	b.n	8014e90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014f5a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014f5e:	9301      	str	r3, [sp, #4]
 8014f60:	ab1d      	add	r3, sp, #116	; 0x74
 8014f62:	9300      	str	r3, [sp, #0]
 8014f64:	4659      	mov	r1, fp
 8014f66:	ab1c      	add	r3, sp, #112	; 0x70
 8014f68:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014f6a:	f003 f908 	bl	801817e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8014f6e:	4604      	mov	r4, r0
 8014f70:	e7c0      	b.n	8014ef4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014f72:	f8d8 0000 	ldr.w	r0, [r8]
 8014f76:	6803      	ldr	r3, [r0, #0]
 8014f78:	691b      	ldr	r3, [r3, #16]
 8014f7a:	4798      	blx	r3
 8014f7c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014f80:	4298      	cmp	r0, r3
 8014f82:	f000 80a7 	beq.w	80150d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f86:	f242 030b 	movw	r3, #8203	; 0x200b
 8014f8a:	4298      	cmp	r0, r3
 8014f8c:	f000 80a2 	beq.w	80150d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f90:	f1bb 0f00 	cmp.w	fp, #0
 8014f94:	d100      	bne.n	8014f98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014f96:	444e      	add	r6, r9
 8014f98:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014f9a:	2a00      	cmp	r2, #0
 8014f9c:	d1bf      	bne.n	8014f1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8014f9e:	4691      	mov	r9, r2
 8014fa0:	e098      	b.n	80150d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014fa2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014fa4:	2b00      	cmp	r3, #0
 8014fa6:	f000 80ac 	beq.w	8015102 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8014faa:	f1bb 0f00 	cmp.w	fp, #0
 8014fae:	d118      	bne.n	8014fe2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014fb0:	f8d8 0000 	ldr.w	r0, [r8]
 8014fb4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014fb6:	6803      	ldr	r3, [r0, #0]
 8014fb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014fba:	4798      	blx	r3
 8014fbc:	4406      	add	r6, r0
 8014fbe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014fc0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014fc2:	1af3      	subs	r3, r6, r3
 8014fc4:	4293      	cmp	r3, r2
 8014fc6:	dd17      	ble.n	8014ff8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014fc8:	2c00      	cmp	r4, #0
 8014fca:	f000 8098 	beq.w	80150fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014fce:	2c0a      	cmp	r4, #10
 8014fd0:	f040 8086 	bne.w	80150e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8014fd4:	240a      	movs	r4, #10
 8014fd6:	fab4 f084 	clz	r0, r4
 8014fda:	0940      	lsrs	r0, r0, #5
 8014fdc:	b01f      	add	sp, #124	; 0x7c
 8014fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fe2:	f8d8 0000 	ldr.w	r0, [r8]
 8014fe6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014fe8:	6803      	ldr	r3, [r0, #0]
 8014fea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014fec:	4798      	blx	r3
 8014fee:	f1bb 0f01 	cmp.w	fp, #1
 8014ff2:	eba6 0600 	sub.w	r6, r6, r0
 8014ff6:	d0a4      	beq.n	8014f42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014ff8:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014ffa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ffc:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015000:	f9b3 7000 	ldrsh.w	r7, [r3]
 8015004:	7b43      	ldrb	r3, [r0, #13]
 8015006:	015b      	lsls	r3, r3, #5
 8015008:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801500c:	7983      	ldrb	r3, [r0, #6]
 801500e:	4431      	add	r1, r6
 8015010:	4313      	orrs	r3, r2
 8015012:	440b      	add	r3, r1
 8015014:	42bb      	cmp	r3, r7
 8015016:	db5d      	blt.n	80150d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015018:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801501a:	4299      	cmp	r1, r3
 801501c:	da5a      	bge.n	80150d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801501e:	f8d8 0000 	ldr.w	r0, [r8]
 8015022:	6803      	ldr	r3, [r0, #0]
 8015024:	42b7      	cmp	r7, r6
 8015026:	bfc8      	it	gt
 8015028:	1bbf      	subgt	r7, r7, r6
 801502a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801502c:	bfcc      	ite	gt
 801502e:	b2bf      	uxthgt	r7, r7
 8015030:	2700      	movle	r7, #0
 8015032:	4798      	blx	r3
 8015034:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015036:	7b5a      	ldrb	r2, [r3, #13]
 8015038:	00d1      	lsls	r1, r2, #3
 801503a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801503e:	7a19      	ldrb	r1, [r3, #8]
 8015040:	4329      	orrs	r1, r5
 8015042:	0655      	lsls	r5, r2, #25
 8015044:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015046:	bf44      	itt	mi
 8015048:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801504c:	b209      	sxthmi	r1, r1
 801504e:	1945      	adds	r5, r0, r5
 8015050:	1a6d      	subs	r5, r5, r1
 8015052:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015054:	b2ad      	uxth	r5, r5
 8015056:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801505a:	fa0f fa85 	sxth.w	sl, r5
 801505e:	4551      	cmp	r1, sl
 8015060:	dd3c      	ble.n	80150dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8015062:	0112      	lsls	r2, r2, #4
 8015064:	79d8      	ldrb	r0, [r3, #7]
 8015066:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801506a:	4302      	orrs	r2, r0
 801506c:	4492      	add	sl, r2
 801506e:	4551      	cmp	r1, sl
 8015070:	dc30      	bgt.n	80150d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015072:	1b4d      	subs	r5, r1, r5
 8015074:	b22d      	sxth	r5, r5
 8015076:	468a      	mov	sl, r1
 8015078:	9319      	str	r3, [sp, #100]	; 0x64
 801507a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801507c:	f8d8 0000 	ldr.w	r0, [r8]
 8015080:	681a      	ldr	r2, [r3, #0]
 8015082:	6801      	ldr	r1, [r0, #0]
 8015084:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015086:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015088:	9313      	str	r3, [sp, #76]	; 0x4c
 801508a:	9218      	str	r2, [sp, #96]	; 0x60
 801508c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801508e:	4788      	blx	r1
 8015090:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015094:	910b      	str	r1, [sp, #44]	; 0x2c
 8015096:	f898 100e 	ldrb.w	r1, [r8, #14]
 801509a:	910a      	str	r1, [sp, #40]	; 0x28
 801509c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80150a0:	9109      	str	r1, [sp, #36]	; 0x24
 80150a2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80150a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80150a8:	9305      	str	r3, [sp, #20]
 80150aa:	b2ad      	uxth	r5, r5
 80150ac:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80150b0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80150b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80150b6:	9304      	str	r3, [sp, #16]
 80150b8:	4437      	add	r7, r6
 80150ba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80150bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80150be:	9206      	str	r2, [sp, #24]
 80150c0:	b23f      	sxth	r7, r7
 80150c2:	f8cd a004 	str.w	sl, [sp, #4]
 80150c6:	9700      	str	r7, [sp, #0]
 80150c8:	681a      	ldr	r2, [r3, #0]
 80150ca:	9916      	ldr	r1, [sp, #88]	; 0x58
 80150cc:	685b      	ldr	r3, [r3, #4]
 80150ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 80150d0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80150d2:	47a8      	blx	r5
 80150d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80150d6:	3301      	adds	r3, #1
 80150d8:	930e      	str	r3, [sp, #56]	; 0x38
 80150da:	e6e1      	b.n	8014ea0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80150dc:	2500      	movs	r5, #0
 80150de:	e7cb      	b.n	8015078 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80150e0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80150e2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80150e4:	3501      	adds	r5, #1
 80150e6:	429d      	cmp	r5, r3
 80150e8:	f6bf af75 	bge.w	8014fd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80150ec:	4659      	mov	r1, fp
 80150ee:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80150f0:	f7f2 fe22 	bl	8007d38 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80150f4:	4604      	mov	r4, r0
 80150f6:	b110      	cbz	r0, 80150fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80150f8:	280a      	cmp	r0, #10
 80150fa:	d1f2      	bne.n	80150e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80150fc:	e76a      	b.n	8014fd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80150fe:	2400      	movs	r4, #0
 8015100:	e769      	b.n	8014fd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015102:	f1bb 0f00 	cmp.w	fp, #0
 8015106:	f43f af5a 	beq.w	8014fbe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801510a:	e775      	b.n	8014ff8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801510c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801510c:	b530      	push	{r4, r5, lr}
 801510e:	8ac4      	ldrh	r4, [r0, #22]
 8015110:	8b45      	ldrh	r5, [r0, #26]
 8015112:	8343      	strh	r3, [r0, #26]
 8015114:	442c      	add	r4, r5
 8015116:	1ae4      	subs	r4, r4, r3
 8015118:	82c4      	strh	r4, [r0, #22]
 801511a:	8b83      	ldrh	r3, [r0, #28]
 801511c:	8b04      	ldrh	r4, [r0, #24]
 801511e:	4422      	add	r2, r4
 8015120:	440c      	add	r4, r1
 8015122:	1a59      	subs	r1, r3, r1
 8015124:	83c2      	strh	r2, [r0, #30]
 8015126:	8304      	strh	r4, [r0, #24]
 8015128:	8381      	strh	r1, [r0, #28]
 801512a:	bd30      	pop	{r4, r5, pc}

0801512c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801512c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015130:	4604      	mov	r4, r0
 8015132:	8a47      	ldrh	r7, [r0, #18]
 8015134:	68c0      	ldr	r0, [r0, #12]
 8015136:	6803      	ldr	r3, [r0, #0]
 8015138:	b085      	sub	sp, #20
 801513a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801513c:	4798      	blx	r3
 801513e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015142:	7a63      	ldrb	r3, [r4, #9]
 8015144:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015148:	42b7      	cmp	r7, r6
 801514a:	f103 33ff 	add.w	r3, r3, #4294967295
 801514e:	bfac      	ite	ge
 8015150:	f04f 0900 	movge.w	r9, #0
 8015154:	f04f 0901 	movlt.w	r9, #1
 8015158:	2b05      	cmp	r3, #5
 801515a:	d804      	bhi.n	8015166 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801515c:	e8df f003 	tbb	[pc, r3]
 8015160:	470e0854 	.word	0x470e0854
 8015164:	4c4c      	.short	0x4c4c
 8015166:	2500      	movs	r5, #0
 8015168:	46a9      	mov	r9, r5
 801516a:	462e      	mov	r6, r5
 801516c:	462f      	mov	r7, r5
 801516e:	e00d      	b.n	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015170:	42b7      	cmp	r7, r6
 8015172:	bfb4      	ite	lt
 8015174:	2600      	movlt	r6, #0
 8015176:	2601      	movge	r6, #1
 8015178:	2500      	movs	r5, #0
 801517a:	e7f7      	b.n	801516c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801517c:	42b7      	cmp	r7, r6
 801517e:	464d      	mov	r5, r9
 8015180:	f04f 0900 	mov.w	r9, #0
 8015184:	bfb4      	ite	lt
 8015186:	2600      	movlt	r6, #0
 8015188:	2601      	movge	r6, #1
 801518a:	464f      	mov	r7, r9
 801518c:	f04f 0800 	mov.w	r8, #0
 8015190:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015194:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015198:	f8cd 8004 	str.w	r8, [sp, #4]
 801519c:	2300      	movs	r3, #0
 801519e:	9303      	str	r3, [sp, #12]
 80151a0:	8823      	ldrh	r3, [r4, #0]
 80151a2:	2b20      	cmp	r3, #32
 80151a4:	d034      	beq.n	8015210 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80151a6:	f242 010b 	movw	r1, #8203	; 0x200b
 80151aa:	1a5a      	subs	r2, r3, r1
 80151ac:	f1d2 0a00 	rsbs	sl, r2, #0
 80151b0:	eb4a 0a02 	adc.w	sl, sl, r2
 80151b4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80151b8:	4293      	cmp	r3, r2
 80151ba:	d009      	beq.n	80151d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80151bc:	428b      	cmp	r3, r1
 80151be:	9a01      	ldr	r2, [sp, #4]
 80151c0:	bf18      	it	ne
 80151c2:	461a      	movne	r2, r3
 80151c4:	9201      	str	r2, [sp, #4]
 80151c6:	bf0c      	ite	eq
 80151c8:	f04f 0a01 	moveq.w	sl, #1
 80151cc:	f04f 0a00 	movne.w	sl, #0
 80151d0:	ab03      	add	r3, sp, #12
 80151d2:	68e2      	ldr	r2, [r4, #12]
 80151d4:	7a21      	ldrb	r1, [r4, #8]
 80151d6:	6860      	ldr	r0, [r4, #4]
 80151d8:	f002 ff88 	bl	80180ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80151dc:	8020      	strh	r0, [r4, #0]
 80151de:	b9d8      	cbnz	r0, 8015218 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80151e0:	8ba2      	ldrh	r2, [r4, #28]
 80151e2:	2300      	movs	r3, #0
 80151e4:	4611      	mov	r1, r2
 80151e6:	4620      	mov	r0, r4
 80151e8:	f7ff ff90 	bl	801510c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80151ec:	e06e      	b.n	80152cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80151ee:	2500      	movs	r5, #0
 80151f0:	46a9      	mov	r9, r5
 80151f2:	462e      	mov	r6, r5
 80151f4:	2701      	movs	r7, #1
 80151f6:	e7c9      	b.n	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80151f8:	42b7      	cmp	r7, r6
 80151fa:	f04f 0500 	mov.w	r5, #0
 80151fe:	bfb4      	ite	lt
 8015200:	2700      	movlt	r7, #0
 8015202:	2701      	movge	r7, #1
 8015204:	462e      	mov	r6, r5
 8015206:	e7c1      	b.n	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015208:	2500      	movs	r5, #0
 801520a:	46a9      	mov	r9, r5
 801520c:	2601      	movs	r6, #1
 801520e:	e7ad      	b.n	801516c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015210:	9301      	str	r3, [sp, #4]
 8015212:	f04f 0a01 	mov.w	sl, #1
 8015216:	e7db      	b.n	80151d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015218:	8b63      	ldrh	r3, [r4, #26]
 801521a:	280a      	cmp	r0, #10
 801521c:	f103 0301 	add.w	r3, r3, #1
 8015220:	8363      	strh	r3, [r4, #26]
 8015222:	d0dd      	beq.n	80151e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015224:	9a03      	ldr	r2, [sp, #12]
 8015226:	bb62      	cbnz	r2, 8015282 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015228:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801522c:	4298      	cmp	r0, r3
 801522e:	d003      	beq.n	8015238 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015230:	f242 030b 	movw	r3, #8203	; 0x200b
 8015234:	4298      	cmp	r0, r3
 8015236:	d1b1      	bne.n	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015238:	8823      	ldrh	r3, [r4, #0]
 801523a:	8ba1      	ldrh	r1, [r4, #28]
 801523c:	2b20      	cmp	r3, #32
 801523e:	d003      	beq.n	8015248 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015240:	f242 000b 	movw	r0, #8203	; 0x200b
 8015244:	4283      	cmp	r3, r0
 8015246:	d131      	bne.n	80152ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015248:	f1ba 0f00 	cmp.w	sl, #0
 801524c:	bf0a      	itet	eq
 801524e:	4688      	moveq	r8, r1
 8015250:	4650      	movne	r0, sl
 8015252:	2001      	moveq	r0, #1
 8015254:	440a      	add	r2, r1
 8015256:	8b23      	ldrh	r3, [r4, #24]
 8015258:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801525c:	b292      	uxth	r2, r2
 801525e:	83a2      	strh	r2, [r4, #28]
 8015260:	4413      	add	r3, r2
 8015262:	f1b9 0f00 	cmp.w	r9, #0
 8015266:	d102      	bne.n	801526e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015268:	2d00      	cmp	r5, #0
 801526a:	d042      	beq.n	80152f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801526c:	b300      	cbz	r0, 80152b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801526e:	8c21      	ldrh	r1, [r4, #32]
 8015270:	4419      	add	r1, r3
 8015272:	458c      	cmp	ip, r1
 8015274:	da37      	bge.n	80152e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015276:	8ae1      	ldrh	r1, [r4, #22]
 8015278:	2900      	cmp	r1, #0
 801527a:	d034      	beq.n	80152e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801527c:	4563      	cmp	r3, ip
 801527e:	dd8d      	ble.n	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015280:	e01d      	b.n	80152be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015282:	8893      	ldrh	r3, [r2, #4]
 8015284:	8023      	strh	r3, [r4, #0]
 8015286:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801528a:	9901      	ldr	r1, [sp, #4]
 801528c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015290:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015294:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015298:	ea4b 0b00 	orr.w	fp, fp, r0
 801529c:	68e0      	ldr	r0, [r4, #12]
 801529e:	6803      	ldr	r3, [r0, #0]
 80152a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80152a2:	4798      	blx	r3
 80152a4:	eb0b 0200 	add.w	r2, fp, r0
 80152a8:	b292      	uxth	r2, r2
 80152aa:	e7c5      	b.n	8015238 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80152ac:	2000      	movs	r0, #0
 80152ae:	e7d1      	b.n	8015254 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80152b0:	4563      	cmp	r3, ip
 80152b2:	f77f af73 	ble.w	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152b6:	8ae3      	ldrh	r3, [r4, #22]
 80152b8:	2b00      	cmp	r3, #0
 80152ba:	f43f af6f 	beq.w	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152be:	2301      	movs	r3, #1
 80152c0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80152c4:	8c22      	ldrh	r2, [r4, #32]
 80152c6:	8be3      	ldrh	r3, [r4, #30]
 80152c8:	4413      	add	r3, r2
 80152ca:	83e3      	strh	r3, [r4, #30]
 80152cc:	68e0      	ldr	r0, [r4, #12]
 80152ce:	6803      	ldr	r3, [r0, #0]
 80152d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80152d2:	4798      	blx	r3
 80152d4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80152d8:	4418      	add	r0, r3
 80152da:	8a63      	ldrh	r3, [r4, #18]
 80152dc:	1a18      	subs	r0, r3, r0
 80152de:	8260      	strh	r0, [r4, #18]
 80152e0:	b005      	add	sp, #20
 80152e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152e6:	2300      	movs	r3, #0
 80152e8:	4611      	mov	r1, r2
 80152ea:	4620      	mov	r0, r4
 80152ec:	f7ff ff0e 	bl	801510c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80152f0:	e754      	b.n	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152f2:	4563      	cmp	r3, ip
 80152f4:	dd14      	ble.n	8015320 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80152f6:	b117      	cbz	r7, 80152fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80152f8:	2301      	movs	r3, #1
 80152fa:	460a      	mov	r2, r1
 80152fc:	e772      	b.n	80151e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80152fe:	2e00      	cmp	r6, #0
 8015300:	f43f af4c 	beq.w	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015304:	2800      	cmp	r0, #0
 8015306:	f47f af49 	bne.w	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801530a:	f1ba 0f00 	cmp.w	sl, #0
 801530e:	d002      	beq.n	8015316 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015310:	2301      	movs	r3, #1
 8015312:	4642      	mov	r2, r8
 8015314:	e767      	b.n	80151e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015316:	8ae3      	ldrh	r3, [r4, #22]
 8015318:	2b00      	cmp	r3, #0
 801531a:	f43f af3f 	beq.w	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801531e:	e7d5      	b.n	80152cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015320:	2800      	cmp	r0, #0
 8015322:	f47f af3b 	bne.w	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015326:	f1ba 0f00 	cmp.w	sl, #0
 801532a:	f43f af37 	beq.w	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801532e:	2301      	movs	r3, #1
 8015330:	4642      	mov	r2, r8
 8015332:	e7da      	b.n	80152ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015334 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015334:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015336:	4605      	mov	r5, r0
 8015338:	b08f      	sub	sp, #60	; 0x3c
 801533a:	4617      	mov	r7, r2
 801533c:	461c      	mov	r4, r3
 801533e:	460e      	mov	r6, r1
 8015340:	b1d1      	cbz	r1, 8015378 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015342:	681b      	ldr	r3, [r3, #0]
 8015344:	4620      	mov	r0, r4
 8015346:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015348:	4798      	blx	r3
 801534a:	4240      	negs	r0, r0
 801534c:	b200      	sxth	r0, r0
 801534e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015352:	9603      	str	r6, [sp, #12]
 8015354:	9700      	str	r7, [sp, #0]
 8015356:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801535a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801535e:	4629      	mov	r1, r5
 8015360:	a805      	add	r0, sp, #20
 8015362:	f7ff fcbf 	bl	8014ce4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015366:	2401      	movs	r4, #1
 8015368:	a805      	add	r0, sp, #20
 801536a:	f7ff fedf 	bl	801512c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801536e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015372:	b163      	cbz	r3, 801538e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015374:	3401      	adds	r4, #1
 8015376:	e7f7      	b.n	8015368 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015378:	f002 ff86 	bl	8018288 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801537c:	2401      	movs	r4, #1
 801537e:	280a      	cmp	r0, #10
 8015380:	4628      	mov	r0, r5
 8015382:	bf08      	it	eq
 8015384:	3401      	addeq	r4, #1
 8015386:	f002 ff7f 	bl	8018288 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801538a:	2800      	cmp	r0, #0
 801538c:	d1f7      	bne.n	801537e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801538e:	b2a0      	uxth	r0, r4
 8015390:	b00f      	add	sp, #60	; 0x3c
 8015392:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015394 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015398:	b0e3      	sub	sp, #396	; 0x18c
 801539a:	461c      	mov	r4, r3
 801539c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801539e:	4683      	mov	fp, r0
 80153a0:	4688      	mov	r8, r1
 80153a2:	2b00      	cmp	r3, #0
 80153a4:	f000 8112 	beq.w	80155cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80153a8:	6823      	ldr	r3, [r4, #0]
 80153aa:	2b00      	cmp	r3, #0
 80153ac:	f000 810e 	beq.w	80155cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80153b0:	7ba3      	ldrb	r3, [r4, #14]
 80153b2:	2b00      	cmp	r3, #0
 80153b4:	f000 810a 	beq.w	80155cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80153b8:	6810      	ldr	r0, [r2, #0]
 80153ba:	6851      	ldr	r1, [r2, #4]
 80153bc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80153c0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80153c4:	ad0a      	add	r5, sp, #40	; 0x28
 80153c6:	462b      	mov	r3, r5
 80153c8:	c303      	stmia	r3!, {r0, r1}
 80153ca:	2100      	movs	r1, #0
 80153cc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80153d0:	910c      	str	r1, [sp, #48]	; 0x30
 80153d2:	79a2      	ldrb	r2, [r4, #6]
 80153d4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80153d8:	a90c      	add	r1, sp, #48	; 0x30
 80153da:	4628      	mov	r0, r5
 80153dc:	f7ff fd01 	bl	8014de2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80153e0:	a90c      	add	r1, sp, #48	; 0x30
 80153e2:	4608      	mov	r0, r1
 80153e4:	79a2      	ldrb	r2, [r4, #6]
 80153e6:	f7ff fcfc 	bl	8014de2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80153ea:	a817      	add	r0, sp, #92	; 0x5c
 80153ec:	f002 fb20 	bl	8017a30 <_ZN8touchgfx12TextProviderC1Ev>
 80153f0:	6820      	ldr	r0, [r4, #0]
 80153f2:	6803      	ldr	r3, [r0, #0]
 80153f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80153f6:	4798      	blx	r3
 80153f8:	4606      	mov	r6, r0
 80153fa:	6820      	ldr	r0, [r4, #0]
 80153fc:	6803      	ldr	r3, [r0, #0]
 80153fe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015400:	4798      	blx	r3
 8015402:	4633      	mov	r3, r6
 8015404:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015406:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015408:	9000      	str	r0, [sp, #0]
 801540a:	a817      	add	r0, sp, #92	; 0x5c
 801540c:	f002 fb6b 	bl	8017ae6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015410:	6820      	ldr	r0, [r4, #0]
 8015412:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015416:	6803      	ldr	r3, [r0, #0]
 8015418:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801541a:	4798      	blx	r3
 801541c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015420:	6823      	ldr	r3, [r4, #0]
 8015422:	4607      	mov	r7, r0
 8015424:	4406      	add	r6, r0
 8015426:	a830      	add	r0, sp, #192	; 0xc0
 8015428:	f893 9009 	ldrb.w	r9, [r3, #9]
 801542c:	f002 fb00 	bl	8017a30 <_ZN8touchgfx12TextProviderC1Ev>
 8015430:	7c23      	ldrb	r3, [r4, #16]
 8015432:	b17b      	cbz	r3, 8015454 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015434:	6820      	ldr	r0, [r4, #0]
 8015436:	6803      	ldr	r3, [r0, #0]
 8015438:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801543a:	4798      	blx	r3
 801543c:	9009      	str	r0, [sp, #36]	; 0x24
 801543e:	6820      	ldr	r0, [r4, #0]
 8015440:	6802      	ldr	r2, [r0, #0]
 8015442:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8015444:	4790      	blx	r2
 8015446:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015448:	9000      	str	r0, [sp, #0]
 801544a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801544c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801544e:	a830      	add	r0, sp, #192	; 0xc0
 8015450:	f002 fb49 	bl	8017ae6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015454:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015458:	7be2      	ldrb	r2, [r4, #15]
 801545a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801545e:	1a8a      	subs	r2, r1, r2
 8015460:	7c21      	ldrb	r1, [r4, #16]
 8015462:	9103      	str	r1, [sp, #12]
 8015464:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015468:	9102      	str	r1, [sp, #8]
 801546a:	6821      	ldr	r1, [r4, #0]
 801546c:	9101      	str	r1, [sp, #4]
 801546e:	7961      	ldrb	r1, [r4, #5]
 8015470:	9100      	str	r1, [sp, #0]
 8015472:	b292      	uxth	r2, r2
 8015474:	a930      	add	r1, sp, #192	; 0xc0
 8015476:	a80e      	add	r0, sp, #56	; 0x38
 8015478:	f7ff fc34 	bl	8014ce4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801547c:	2e00      	cmp	r6, #0
 801547e:	dc5b      	bgt.n	8015538 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015480:	af17      	add	r7, sp, #92	; 0x5c
 8015482:	f04f 0900 	mov.w	r9, #0
 8015486:	7c23      	ldrb	r3, [r4, #16]
 8015488:	2b00      	cmp	r3, #0
 801548a:	f000 80b1 	beq.w	80155f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801548e:	a80e      	add	r0, sp, #56	; 0x38
 8015490:	f7ff fe4c 	bl	801512c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015494:	f1ba 0f00 	cmp.w	sl, #0
 8015498:	f000 80a5 	beq.w	80155e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801549c:	7c23      	ldrb	r3, [r4, #16]
 801549e:	9309      	str	r3, [sp, #36]	; 0x24
 80154a0:	2264      	movs	r2, #100	; 0x64
 80154a2:	4639      	mov	r1, r7
 80154a4:	a849      	add	r0, sp, #292	; 0x124
 80154a6:	f015 fde6 	bl	802b076 <memcpy>
 80154aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154ac:	2b00      	cmp	r3, #0
 80154ae:	f000 80a7 	beq.w	8015600 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80154b2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80154b6:	7922      	ldrb	r2, [r4, #4]
 80154b8:	2a01      	cmp	r2, #1
 80154ba:	f040 808a 	bne.w	80155d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80154be:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80154c2:	1ac0      	subs	r0, r0, r3
 80154c4:	2302      	movs	r3, #2
 80154c6:	fb90 f0f3 	sdiv	r0, r0, r3
 80154ca:	b200      	sxth	r0, r0
 80154cc:	7c23      	ldrb	r3, [r4, #16]
 80154ce:	2b00      	cmp	r3, #0
 80154d0:	f000 808b 	beq.w	80155ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80154d4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80154d8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80154dc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80154e0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80154e4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80154e8:	4410      	add	r0, r2
 80154ea:	b200      	sxth	r0, r0
 80154ec:	9000      	str	r0, [sp, #0]
 80154ee:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80154f2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80154f6:	4642      	mov	r2, r8
 80154f8:	2100      	movs	r1, #0
 80154fa:	4658      	mov	r0, fp
 80154fc:	f7ff fca2 	bl	8014e44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015500:	2800      	cmp	r0, #0
 8015502:	d163      	bne.n	80155cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015504:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015508:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801550c:	b2b2      	uxth	r2, r6
 801550e:	4413      	add	r3, r2
 8015510:	1a8a      	subs	r2, r1, r2
 8015512:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015516:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801551a:	b21b      	sxth	r3, r3
 801551c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015520:	2a00      	cmp	r2, #0
 8015522:	d153      	bne.n	80155cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015524:	6822      	ldr	r2, [r4, #0]
 8015526:	8869      	ldrh	r1, [r5, #2]
 8015528:	7a12      	ldrb	r2, [r2, #8]
 801552a:	1a9b      	subs	r3, r3, r2
 801552c:	88ea      	ldrh	r2, [r5, #6]
 801552e:	440a      	add	r2, r1
 8015530:	b212      	sxth	r2, r2
 8015532:	4293      	cmp	r3, r2
 8015534:	dda7      	ble.n	8015486 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015536:	e049      	b.n	80155cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015538:	7c23      	ldrb	r3, [r4, #16]
 801553a:	444f      	add	r7, r9
 801553c:	b1c3      	cbz	r3, 8015570 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801553e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8015542:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015546:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801554a:	443b      	add	r3, r7
 801554c:	4293      	cmp	r3, r2
 801554e:	da97      	bge.n	8015480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015550:	a80e      	add	r0, sp, #56	; 0x38
 8015552:	f7ff fdeb 	bl	801512c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015556:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801555a:	3b01      	subs	r3, #1
 801555c:	b29b      	uxth	r3, r3
 801555e:	454b      	cmp	r3, r9
 8015560:	9309      	str	r3, [sp, #36]	; 0x24
 8015562:	d021      	beq.n	80155a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015564:	7961      	ldrb	r1, [r4, #5]
 8015566:	a817      	add	r0, sp, #92	; 0x5c
 8015568:	f7f2 fbe6 	bl	8007d38 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801556c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801556e:	e7f4      	b.n	801555a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015570:	fa1f f986 	uxth.w	r9, r6
 8015574:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015578:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801557c:	443b      	add	r3, r7
 801557e:	4293      	cmp	r3, r2
 8015580:	f6bf af7e 	bge.w	8015480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015584:	a817      	add	r0, sp, #92	; 0x5c
 8015586:	f002 fe7f 	bl	8018288 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801558a:	b1f8      	cbz	r0, 80155cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801558c:	280a      	cmp	r0, #10
 801558e:	d1f1      	bne.n	8015574 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015590:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015594:	444b      	add	r3, r9
 8015596:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801559a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801559e:	eba3 0309 	sub.w	r3, r3, r9
 80155a2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80155a6:	e7e5      	b.n	8015574 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80155a8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80155ac:	b2b3      	uxth	r3, r6
 80155ae:	441a      	add	r2, r3
 80155b0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80155b4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80155b8:	1ad3      	subs	r3, r2, r3
 80155ba:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80155be:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80155c2:	b11b      	cbz	r3, 80155cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80155c4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80155c8:	2b00      	cmp	r3, #0
 80155ca:	d0ba      	beq.n	8015542 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80155cc:	b063      	add	sp, #396	; 0x18c
 80155ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155d2:	2a02      	cmp	r2, #2
 80155d4:	d105      	bne.n	80155e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80155d6:	7be2      	ldrb	r2, [r4, #15]
 80155d8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80155dc:	1a80      	subs	r0, r0, r2
 80155de:	1ac0      	subs	r0, r0, r3
 80155e0:	e773      	b.n	80154ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80155e2:	2000      	movs	r0, #0
 80155e4:	e772      	b.n	80154cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80155e6:	7be0      	ldrb	r0, [r4, #15]
 80155e8:	e770      	b.n	80154cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80155ea:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80155ee:	e773      	b.n	80154d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80155f0:	f1ba 0f00 	cmp.w	sl, #0
 80155f4:	d0f7      	beq.n	80155e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80155f6:	2264      	movs	r2, #100	; 0x64
 80155f8:	4639      	mov	r1, r7
 80155fa:	a849      	add	r0, sp, #292	; 0x124
 80155fc:	f015 fd3b 	bl	802b076 <memcpy>
 8015600:	2300      	movs	r3, #0
 8015602:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015606:	6821      	ldr	r1, [r4, #0]
 8015608:	a849      	add	r0, sp, #292	; 0x124
 801560a:	f7ff fbae 	bl	8014d6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801560e:	b203      	sxth	r3, r0
 8015610:	e751      	b.n	80154b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015612 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015612:	2b03      	cmp	r3, #3
 8015614:	d818      	bhi.n	8015648 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015616:	e8df f003 	tbb	[pc, r3]
 801561a:	0602      	.short	0x0602
 801561c:	130d      	.short	0x130d
 801561e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015622:	1850      	adds	r0, r2, r1
 8015624:	4770      	bx	lr
 8015626:	8803      	ldrh	r3, [r0, #0]
 8015628:	8880      	ldrh	r0, [r0, #4]
 801562a:	4418      	add	r0, r3
 801562c:	b200      	sxth	r0, r0
 801562e:	1a80      	subs	r0, r0, r2
 8015630:	3801      	subs	r0, #1
 8015632:	4770      	bx	lr
 8015634:	8803      	ldrh	r3, [r0, #0]
 8015636:	8880      	ldrh	r0, [r0, #4]
 8015638:	4418      	add	r0, r3
 801563a:	b200      	sxth	r0, r0
 801563c:	1a40      	subs	r0, r0, r1
 801563e:	e7f7      	b.n	8015630 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015640:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015644:	4410      	add	r0, r2
 8015646:	4770      	bx	lr
 8015648:	2000      	movs	r0, #0
 801564a:	4770      	bx	lr

0801564c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801564c:	2b03      	cmp	r3, #3
 801564e:	d817      	bhi.n	8015680 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015650:	e8df f003 	tbb	[pc, r3]
 8015654:	10090602 	.word	0x10090602
 8015658:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801565c:	1850      	adds	r0, r2, r1
 801565e:	4770      	bx	lr
 8015660:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015664:	e7fa      	b.n	801565c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015666:	8843      	ldrh	r3, [r0, #2]
 8015668:	88c0      	ldrh	r0, [r0, #6]
 801566a:	4418      	add	r0, r3
 801566c:	b200      	sxth	r0, r0
 801566e:	1a80      	subs	r0, r0, r2
 8015670:	3801      	subs	r0, #1
 8015672:	4770      	bx	lr
 8015674:	8843      	ldrh	r3, [r0, #2]
 8015676:	88c0      	ldrh	r0, [r0, #6]
 8015678:	4418      	add	r0, r3
 801567a:	b200      	sxth	r0, r0
 801567c:	1a40      	subs	r0, r0, r1
 801567e:	e7f7      	b.n	8015670 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015680:	2000      	movs	r0, #0
 8015682:	4770      	bx	lr

08015684 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015684:	4b01      	ldr	r3, [pc, #4]	; (801568c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015686:	2200      	movs	r2, #0
 8015688:	601a      	str	r2, [r3, #0]
 801568a:	4770      	bx	lr
 801568c:	200132cc 	.word	0x200132cc

08015690 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015690:	4603      	mov	r3, r0
 8015692:	b1c8      	cbz	r0, 80156c8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015694:	0c02      	lsrs	r2, r0, #16
 8015696:	0412      	lsls	r2, r2, #16
 8015698:	b9a2      	cbnz	r2, 80156c4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801569a:	0403      	lsls	r3, r0, #16
 801569c:	2010      	movs	r0, #16
 801569e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80156a2:	bf04      	itt	eq
 80156a4:	021b      	lsleq	r3, r3, #8
 80156a6:	3008      	addeq	r0, #8
 80156a8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80156ac:	bf04      	itt	eq
 80156ae:	011b      	lsleq	r3, r3, #4
 80156b0:	3004      	addeq	r0, #4
 80156b2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80156b6:	bf04      	itt	eq
 80156b8:	009b      	lsleq	r3, r3, #2
 80156ba:	3002      	addeq	r0, #2
 80156bc:	2b00      	cmp	r3, #0
 80156be:	db04      	blt.n	80156ca <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80156c0:	3001      	adds	r0, #1
 80156c2:	4770      	bx	lr
 80156c4:	2000      	movs	r0, #0
 80156c6:	e7ea      	b.n	801569e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80156c8:	2020      	movs	r0, #32
 80156ca:	4770      	bx	lr

080156cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80156cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156d0:	b087      	sub	sp, #28
 80156d2:	460d      	mov	r5, r1
 80156d4:	4616      	mov	r6, r2
 80156d6:	4698      	mov	r8, r3
 80156d8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80156dc:	4601      	mov	r1, r0
 80156de:	b120      	cbz	r0, 80156ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80156e0:	b11a      	cbz	r2, 80156ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80156e2:	2d1f      	cmp	r5, #31
 80156e4:	d801      	bhi.n	80156ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80156e6:	2b1f      	cmp	r3, #31
 80156e8:	d904      	bls.n	80156f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80156ea:	2000      	movs	r0, #0
 80156ec:	6038      	str	r0, [r7, #0]
 80156ee:	b007      	add	sp, #28
 80156f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156f4:	b97d      	cbnz	r5, 8015716 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80156f6:	b143      	cbz	r3, 801570a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80156f8:	4602      	mov	r2, r0
 80156fa:	e9cd 4700 	strd	r4, r7, [sp]
 80156fe:	462b      	mov	r3, r5
 8015700:	4641      	mov	r1, r8
 8015702:	4630      	mov	r0, r6
 8015704:	f7ff ffe2 	bl	80156cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015708:	e7f1      	b.n	80156ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801570a:	f04f 33ff 	mov.w	r3, #4294967295
 801570e:	603b      	str	r3, [r7, #0]
 8015710:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015714:	e7eb      	b.n	80156ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015716:	fa32 fa05 	lsrs.w	sl, r2, r5
 801571a:	d106      	bne.n	801572a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801571c:	4346      	muls	r6, r0
 801571e:	fbb6 f0f4 	udiv	r0, r6, r4
 8015722:	fb04 6610 	mls	r6, r4, r0, r6
 8015726:	603e      	str	r6, [r7, #0]
 8015728:	e7e1      	b.n	80156ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801572a:	2201      	movs	r2, #1
 801572c:	40aa      	lsls	r2, r5
 801572e:	3a01      	subs	r2, #1
 8015730:	4016      	ands	r6, r2
 8015732:	fa00 fb05 	lsl.w	fp, r0, r5
 8015736:	4630      	mov	r0, r6
 8015738:	fbbb f9f4 	udiv	r9, fp, r4
 801573c:	fb0a f309 	mul.w	r3, sl, r9
 8015740:	9303      	str	r3, [sp, #12]
 8015742:	f7ff ffa5 	bl	8015690 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015746:	462b      	mov	r3, r5
 8015748:	460a      	mov	r2, r1
 801574a:	e9cd 4700 	strd	r4, r7, [sp]
 801574e:	4601      	mov	r1, r0
 8015750:	4630      	mov	r0, r6
 8015752:	f7ff ffbb 	bl	80156cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015756:	fb04 b919 	mls	r9, r4, r9, fp
 801575a:	4606      	mov	r6, r0
 801575c:	4648      	mov	r0, r9
 801575e:	eb05 0108 	add.w	r1, r5, r8
 8015762:	f7ff ff95 	bl	8015690 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015766:	ab05      	add	r3, sp, #20
 8015768:	e9cd 4300 	strd	r4, r3, [sp]
 801576c:	464a      	mov	r2, r9
 801576e:	4603      	mov	r3, r0
 8015770:	4650      	mov	r0, sl
 8015772:	f7ff ffab 	bl	80156cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015776:	6839      	ldr	r1, [r7, #0]
 8015778:	9a05      	ldr	r2, [sp, #20]
 801577a:	9b03      	ldr	r3, [sp, #12]
 801577c:	4411      	add	r1, r2
 801577e:	fbb1 f2f4 	udiv	r2, r1, r4
 8015782:	18d3      	adds	r3, r2, r3
 8015784:	441e      	add	r6, r3
 8015786:	fb04 1412 	mls	r4, r4, r2, r1
 801578a:	4430      	add	r0, r6
 801578c:	603c      	str	r4, [r7, #0]
 801578e:	e7ae      	b.n	80156ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015790:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015794:	b085      	sub	sp, #20
 8015796:	f1b0 0900 	subs.w	r9, r0, #0
 801579a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801579c:	461d      	mov	r5, r3
 801579e:	bfbf      	itttt	lt
 80157a0:	6823      	ldrlt	r3, [r4, #0]
 80157a2:	425b      	neglt	r3, r3
 80157a4:	f1c9 0900 	rsblt	r9, r9, #0
 80157a8:	6023      	strlt	r3, [r4, #0]
 80157aa:	bfb4      	ite	lt
 80157ac:	f04f 36ff 	movlt.w	r6, #4294967295
 80157b0:	2601      	movge	r6, #1
 80157b2:	2a00      	cmp	r2, #0
 80157b4:	4617      	mov	r7, r2
 80157b6:	da04      	bge.n	80157c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80157b8:	6823      	ldr	r3, [r4, #0]
 80157ba:	425b      	negs	r3, r3
 80157bc:	4257      	negs	r7, r2
 80157be:	4276      	negs	r6, r6
 80157c0:	6023      	str	r3, [r4, #0]
 80157c2:	2d00      	cmp	r5, #0
 80157c4:	4638      	mov	r0, r7
 80157c6:	bfba      	itte	lt
 80157c8:	426d      	neglt	r5, r5
 80157ca:	f04f 38ff 	movlt.w	r8, #4294967295
 80157ce:	f04f 0801 	movge.w	r8, #1
 80157d2:	f7ff ff5d 	bl	8015690 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80157d6:	ab03      	add	r3, sp, #12
 80157d8:	e9cd 5300 	strd	r5, r3, [sp]
 80157dc:	463a      	mov	r2, r7
 80157de:	4603      	mov	r3, r0
 80157e0:	4648      	mov	r0, r9
 80157e2:	f7ff ff73 	bl	80156cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80157e6:	6823      	ldr	r3, [r4, #0]
 80157e8:	9a03      	ldr	r2, [sp, #12]
 80157ea:	4546      	cmp	r6, r8
 80157ec:	441a      	add	r2, r3
 80157ee:	fb92 f3f5 	sdiv	r3, r2, r5
 80157f2:	4418      	add	r0, r3
 80157f4:	bf18      	it	ne
 80157f6:	4240      	negne	r0, r0
 80157f8:	fb05 2313 	mls	r3, r5, r3, r2
 80157fc:	1c72      	adds	r2, r6, #1
 80157fe:	6023      	str	r3, [r4, #0]
 8015800:	d105      	bne.n	801580e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8015802:	2b00      	cmp	r3, #0
 8015804:	f1c3 0200 	rsb	r2, r3, #0
 8015808:	db0b      	blt.n	8015822 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801580a:	6022      	str	r2, [r4, #0]
 801580c:	e006      	b.n	801581c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801580e:	2e01      	cmp	r6, #1
 8015810:	d104      	bne.n	801581c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015812:	2b00      	cmp	r3, #0
 8015814:	da02      	bge.n	801581c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015816:	442b      	add	r3, r5
 8015818:	3801      	subs	r0, #1
 801581a:	6023      	str	r3, [r4, #0]
 801581c:	b005      	add	sp, #20
 801581e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015822:	3801      	subs	r0, #1
 8015824:	1b52      	subs	r2, r2, r5
 8015826:	e7f0      	b.n	801580a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015828 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015828:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801582c:	4c1c      	ldr	r4, [pc, #112]	; (80158a0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801582e:	6807      	ldr	r7, [r0, #0]
 8015830:	69a3      	ldr	r3, [r4, #24]
 8015832:	4605      	mov	r5, r0
 8015834:	b92b      	cbnz	r3, 8015842 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015836:	6840      	ldr	r0, [r0, #4]
 8015838:	e9c5 7000 	strd	r7, r0, [r5]
 801583c:	b004      	add	sp, #16
 801583e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015842:	68a2      	ldr	r2, [r4, #8]
 8015844:	6820      	ldr	r0, [r4, #0]
 8015846:	ae04      	add	r6, sp, #16
 8015848:	f04f 0802 	mov.w	r8, #2
 801584c:	fb93 f1f8 	sdiv	r1, r3, r8
 8015850:	440a      	add	r2, r1
 8015852:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015856:	69e1      	ldr	r1, [r4, #28]
 8015858:	9600      	str	r6, [sp, #0]
 801585a:	463a      	mov	r2, r7
 801585c:	f7ff ff98 	bl	8015790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015860:	69a3      	ldr	r3, [r4, #24]
 8015862:	686a      	ldr	r2, [r5, #4]
 8015864:	6a21      	ldr	r1, [r4, #32]
 8015866:	9600      	str	r6, [sp, #0]
 8015868:	4607      	mov	r7, r0
 801586a:	6860      	ldr	r0, [r4, #4]
 801586c:	f7ff ff90 	bl	8015790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015870:	6962      	ldr	r2, [r4, #20]
 8015872:	69a3      	ldr	r3, [r4, #24]
 8015874:	fb93 f8f8 	sdiv	r8, r3, r8
 8015878:	4442      	add	r2, r8
 801587a:	9203      	str	r2, [sp, #12]
 801587c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801587e:	682a      	ldr	r2, [r5, #0]
 8015880:	9600      	str	r6, [sp, #0]
 8015882:	4407      	add	r7, r0
 8015884:	68e0      	ldr	r0, [r4, #12]
 8015886:	f7ff ff83 	bl	8015790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801588a:	9600      	str	r6, [sp, #0]
 801588c:	4680      	mov	r8, r0
 801588e:	69a3      	ldr	r3, [r4, #24]
 8015890:	686a      	ldr	r2, [r5, #4]
 8015892:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015894:	6920      	ldr	r0, [r4, #16]
 8015896:	f7ff ff7b 	bl	8015790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801589a:	4440      	add	r0, r8
 801589c:	e7cc      	b.n	8015838 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801589e:	bf00      	nop
 80158a0:	200132d0 	.word	0x200132d0

080158a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80158a4:	4b07      	ldr	r3, [pc, #28]	; (80158c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80158a6:	781b      	ldrb	r3, [r3, #0]
 80158a8:	2b01      	cmp	r3, #1
 80158aa:	d109      	bne.n	80158c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80158ac:	f9b1 3000 	ldrsh.w	r3, [r1]
 80158b0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80158b4:	8003      	strh	r3, [r0, #0]
 80158b6:	4b04      	ldr	r3, [pc, #16]	; (80158c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80158b8:	881b      	ldrh	r3, [r3, #0]
 80158ba:	3b01      	subs	r3, #1
 80158bc:	1a9b      	subs	r3, r3, r2
 80158be:	800b      	strh	r3, [r1, #0]
 80158c0:	4770      	bx	lr
 80158c2:	bf00      	nop
 80158c4:	200132b4 	.word	0x200132b4
 80158c8:	200132b0 	.word	0x200132b0

080158cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80158cc:	b510      	push	{r4, lr}
 80158ce:	4b07      	ldr	r3, [pc, #28]	; (80158ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80158d0:	781b      	ldrb	r3, [r3, #0]
 80158d2:	2b01      	cmp	r3, #1
 80158d4:	d108      	bne.n	80158e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80158d6:	4b06      	ldr	r3, [pc, #24]	; (80158f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80158d8:	880c      	ldrh	r4, [r1, #0]
 80158da:	881b      	ldrh	r3, [r3, #0]
 80158dc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80158e0:	3b01      	subs	r3, #1
 80158e2:	1b1b      	subs	r3, r3, r4
 80158e4:	8003      	strh	r3, [r0, #0]
 80158e6:	800a      	strh	r2, [r1, #0]
 80158e8:	bd10      	pop	{r4, pc}
 80158ea:	bf00      	nop
 80158ec:	200132b4 	.word	0x200132b4
 80158f0:	200132b0 	.word	0x200132b0

080158f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80158f4:	b510      	push	{r4, lr}
 80158f6:	4b0a      	ldr	r3, [pc, #40]	; (8015920 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80158f8:	781b      	ldrb	r3, [r3, #0]
 80158fa:	2b01      	cmp	r3, #1
 80158fc:	d10e      	bne.n	801591c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80158fe:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015902:	8843      	ldrh	r3, [r0, #2]
 8015904:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015908:	8044      	strh	r4, [r0, #2]
 801590a:	18ca      	adds	r2, r1, r3
 801590c:	4b05      	ldr	r3, [pc, #20]	; (8015924 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801590e:	881b      	ldrh	r3, [r3, #0]
 8015910:	1a9b      	subs	r3, r3, r2
 8015912:	8003      	strh	r3, [r0, #0]
 8015914:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015918:	80c3      	strh	r3, [r0, #6]
 801591a:	8081      	strh	r1, [r0, #4]
 801591c:	bd10      	pop	{r4, pc}
 801591e:	bf00      	nop
 8015920:	200132b4 	.word	0x200132b4
 8015924:	200132b0 	.word	0x200132b0

08015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015928:	4b08      	ldr	r3, [pc, #32]	; (801594c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801592a:	781b      	ldrb	r3, [r3, #0]
 801592c:	2b01      	cmp	r3, #1
 801592e:	d10c      	bne.n	801594a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015930:	8803      	ldrh	r3, [r0, #0]
 8015932:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015936:	8842      	ldrh	r2, [r0, #2]
 8015938:	8002      	strh	r2, [r0, #0]
 801593a:	185a      	adds	r2, r3, r1
 801593c:	4b04      	ldr	r3, [pc, #16]	; (8015950 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801593e:	881b      	ldrh	r3, [r3, #0]
 8015940:	1a9b      	subs	r3, r3, r2
 8015942:	8043      	strh	r3, [r0, #2]
 8015944:	88c3      	ldrh	r3, [r0, #6]
 8015946:	8083      	strh	r3, [r0, #4]
 8015948:	80c1      	strh	r1, [r0, #6]
 801594a:	4770      	bx	lr
 801594c:	200132b4 	.word	0x200132b4
 8015950:	200132b0 	.word	0x200132b0

08015954 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015954:	b510      	push	{r4, lr}
 8015956:	4b07      	ldr	r3, [pc, #28]	; (8015974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015958:	781b      	ldrb	r3, [r3, #0]
 801595a:	2b01      	cmp	r3, #1
 801595c:	d108      	bne.n	8015970 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801595e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015962:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015966:	8003      	strh	r3, [r0, #0]
 8015968:	8893      	ldrh	r3, [r2, #4]
 801596a:	3b01      	subs	r3, #1
 801596c:	1b1b      	subs	r3, r3, r4
 801596e:	800b      	strh	r3, [r1, #0]
 8015970:	bd10      	pop	{r4, pc}
 8015972:	bf00      	nop
 8015974:	200132b4 	.word	0x200132b4

08015978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015978:	4b0b      	ldr	r3, [pc, #44]	; (80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801597a:	781b      	ldrb	r3, [r3, #0]
 801597c:	2b01      	cmp	r3, #1
 801597e:	d111      	bne.n	80159a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015980:	680b      	ldr	r3, [r1, #0]
 8015982:	ed90 7a00 	vldr	s14, [r0]
 8015986:	6003      	str	r3, [r0, #0]
 8015988:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801598c:	eddf 6a07 	vldr	s13, [pc, #28]	; 80159ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015990:	ee07 3a90 	vmov	s15, r3
 8015994:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015998:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801599c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80159a0:	edc1 7a00 	vstr	s15, [r1]
 80159a4:	4770      	bx	lr
 80159a6:	bf00      	nop
 80159a8:	200132b4 	.word	0x200132b4
 80159ac:	38d1b717 	.word	0x38d1b717

080159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80159b0:	b510      	push	{r4, lr}
 80159b2:	4b0a      	ldr	r3, [pc, #40]	; (80159dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80159b4:	781b      	ldrb	r3, [r3, #0]
 80159b6:	2b01      	cmp	r3, #1
 80159b8:	460a      	mov	r2, r1
 80159ba:	d10d      	bne.n	80159d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80159bc:	8881      	ldrh	r1, [r0, #4]
 80159be:	8803      	ldrh	r3, [r0, #0]
 80159c0:	440b      	add	r3, r1
 80159c2:	4601      	mov	r1, r0
 80159c4:	3b01      	subs	r3, #1
 80159c6:	f821 3b02 	strh.w	r3, [r1], #2
 80159ca:	f7ff ffc3 	bl	8015954 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80159ce:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80159d2:	88c2      	ldrh	r2, [r0, #6]
 80159d4:	8082      	strh	r2, [r0, #4]
 80159d6:	80c3      	strh	r3, [r0, #6]
 80159d8:	bd10      	pop	{r4, pc}
 80159da:	bf00      	nop
 80159dc:	200132b4 	.word	0x200132b4

080159e0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80159e0:	4b06      	ldr	r3, [pc, #24]	; (80159fc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80159e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80159e6:	4b06      	ldr	r3, [pc, #24]	; (8015a00 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80159e8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80159ec:	f9b3 3000 	ldrsh.w	r3, [r3]
 80159f0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80159f4:	2100      	movs	r1, #0
 80159f6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80159fa:	4770      	bx	lr
 80159fc:	200132b0 	.word	0x200132b0
 8015a00:	200132b2 	.word	0x200132b2

08015a04 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015a04:	4b03      	ldr	r3, [pc, #12]	; (8015a14 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015a06:	6818      	ldr	r0, [r3, #0]
 8015a08:	b110      	cbz	r0, 8015a10 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8015a0a:	6803      	ldr	r3, [r0, #0]
 8015a0c:	699b      	ldr	r3, [r3, #24]
 8015a0e:	4718      	bx	r3
 8015a10:	4770      	bx	lr
 8015a12:	bf00      	nop
 8015a14:	20013300 	.word	0x20013300

08015a18 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015a18:	4770      	bx	lr
	...

08015a1c <_ZN8touchgfx11Application4drawEv>:
 8015a1c:	b507      	push	{r0, r1, r2, lr}
 8015a1e:	4b09      	ldr	r3, [pc, #36]	; (8015a44 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015a20:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a24:	4b08      	ldr	r3, [pc, #32]	; (8015a48 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015a26:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015a2a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015a2e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015a32:	6803      	ldr	r3, [r0, #0]
 8015a34:	2100      	movs	r1, #0
 8015a36:	9100      	str	r1, [sp, #0]
 8015a38:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015a3a:	4669      	mov	r1, sp
 8015a3c:	4798      	blx	r3
 8015a3e:	b003      	add	sp, #12
 8015a40:	f85d fb04 	ldr.w	pc, [sp], #4
 8015a44:	200132b0 	.word	0x200132b0
 8015a48:	200132b2 	.word	0x200132b2

08015a4c <_ZN8touchgfx11Application10invalidateEv>:
 8015a4c:	4b09      	ldr	r3, [pc, #36]	; (8015a74 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8015a4e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a52:	4b09      	ldr	r3, [pc, #36]	; (8015a78 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015a54:	b082      	sub	sp, #8
 8015a56:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015a5a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015a5e:	2100      	movs	r1, #0
 8015a60:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015a64:	9100      	str	r1, [sp, #0]
 8015a66:	6803      	ldr	r3, [r0, #0]
 8015a68:	aa02      	add	r2, sp, #8
 8015a6a:	e912 0006 	ldmdb	r2, {r1, r2}
 8015a6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015a70:	b002      	add	sp, #8
 8015a72:	4718      	bx	r3
 8015a74:	200132b0 	.word	0x200132b0
 8015a78:	200132b2 	.word	0x200132b2

08015a7c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015a7c:	4b03      	ldr	r3, [pc, #12]	; (8015a8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8015a7e:	6818      	ldr	r0, [r3, #0]
 8015a80:	b110      	cbz	r0, 8015a88 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015a82:	6803      	ldr	r3, [r0, #0]
 8015a84:	69db      	ldr	r3, [r3, #28]
 8015a86:	4718      	bx	r3
 8015a88:	4770      	bx	lr
 8015a8a:	bf00      	nop
 8015a8c:	20013300 	.word	0x20013300

08015a90 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015a90:	4b03      	ldr	r3, [pc, #12]	; (8015aa0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015a92:	6818      	ldr	r0, [r3, #0]
 8015a94:	b110      	cbz	r0, 8015a9c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015a96:	6803      	ldr	r3, [r0, #0]
 8015a98:	6a1b      	ldr	r3, [r3, #32]
 8015a9a:	4718      	bx	r3
 8015a9c:	4770      	bx	lr
 8015a9e:	bf00      	nop
 8015aa0:	20013300 	.word	0x20013300

08015aa4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015aa4:	2300      	movs	r3, #0
 8015aa6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8015aaa:	4770      	bx	lr

08015aac <_ZN8touchgfx11Application14handleKeyEventEh>:
 8015aac:	4b03      	ldr	r3, [pc, #12]	; (8015abc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8015aae:	6818      	ldr	r0, [r3, #0]
 8015ab0:	b110      	cbz	r0, 8015ab8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015ab2:	6803      	ldr	r3, [r0, #0]
 8015ab4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015ab6:	4718      	bx	r3
 8015ab8:	4770      	bx	lr
 8015aba:	bf00      	nop
 8015abc:	20013300 	.word	0x20013300

08015ac0 <_ZN8touchgfx11ApplicationD1Ev>:
 8015ac0:	4770      	bx	lr

08015ac2 <_ZN8touchgfx11ApplicationD0Ev>:
 8015ac2:	b510      	push	{r4, lr}
 8015ac4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015ac8:	4604      	mov	r4, r0
 8015aca:	f014 f996 	bl	8029dfa <_ZdlPvj>
 8015ace:	4620      	mov	r0, r4
 8015ad0:	bd10      	pop	{r4, pc}

08015ad2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015ad2:	b510      	push	{r4, lr}
 8015ad4:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015ad8:	888a      	ldrh	r2, [r1, #4]
 8015ada:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015ade:	4422      	add	r2, r4
 8015ae0:	b212      	sxth	r2, r2
 8015ae2:	4293      	cmp	r3, r2
 8015ae4:	da15      	bge.n	8015b12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015ae6:	8882      	ldrh	r2, [r0, #4]
 8015ae8:	4413      	add	r3, r2
 8015aea:	b21b      	sxth	r3, r3
 8015aec:	429c      	cmp	r4, r3
 8015aee:	da10      	bge.n	8015b12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015af0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015af4:	88c9      	ldrh	r1, [r1, #6]
 8015af6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015afa:	4419      	add	r1, r3
 8015afc:	b209      	sxth	r1, r1
 8015afe:	428a      	cmp	r2, r1
 8015b00:	da07      	bge.n	8015b12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015b02:	88c0      	ldrh	r0, [r0, #6]
 8015b04:	4410      	add	r0, r2
 8015b06:	b200      	sxth	r0, r0
 8015b08:	4283      	cmp	r3, r0
 8015b0a:	bfac      	ite	ge
 8015b0c:	2000      	movge	r0, #0
 8015b0e:	2001      	movlt	r0, #1
 8015b10:	bd10      	pop	{r4, pc}
 8015b12:	2000      	movs	r0, #0
 8015b14:	e7fc      	b.n	8015b10 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015b16 <_ZN8touchgfx4Rect10restrictToEss>:
 8015b16:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015b1a:	2b00      	cmp	r3, #0
 8015b1c:	b510      	push	{r4, lr}
 8015b1e:	da04      	bge.n	8015b2a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015b20:	8884      	ldrh	r4, [r0, #4]
 8015b22:	4423      	add	r3, r4
 8015b24:	8083      	strh	r3, [r0, #4]
 8015b26:	2300      	movs	r3, #0
 8015b28:	8003      	strh	r3, [r0, #0]
 8015b2a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015b2e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015b32:	1b09      	subs	r1, r1, r4
 8015b34:	428b      	cmp	r3, r1
 8015b36:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015b3a:	bfc8      	it	gt
 8015b3c:	8081      	strhgt	r1, [r0, #4]
 8015b3e:	2b00      	cmp	r3, #0
 8015b40:	da04      	bge.n	8015b4c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015b42:	88c1      	ldrh	r1, [r0, #6]
 8015b44:	440b      	add	r3, r1
 8015b46:	80c3      	strh	r3, [r0, #6]
 8015b48:	2300      	movs	r3, #0
 8015b4a:	8043      	strh	r3, [r0, #2]
 8015b4c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015b50:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015b54:	1a52      	subs	r2, r2, r1
 8015b56:	4293      	cmp	r3, r2
 8015b58:	bfc8      	it	gt
 8015b5a:	80c2      	strhgt	r2, [r0, #6]
 8015b5c:	bd10      	pop	{r4, pc}
	...

08015b60 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015b60:	b510      	push	{r4, lr}
 8015b62:	4b10      	ldr	r3, [pc, #64]	; (8015ba4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015b64:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015b68:	4b0f      	ldr	r3, [pc, #60]	; (8015ba8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015b6a:	460c      	mov	r4, r1
 8015b6c:	4620      	mov	r0, r4
 8015b6e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015b72:	f7ff ffd0 	bl	8015b16 <_ZN8touchgfx4Rect10restrictToEss>
 8015b76:	4b0d      	ldr	r3, [pc, #52]	; (8015bac <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015b78:	6818      	ldr	r0, [r3, #0]
 8015b7a:	b190      	cbz	r0, 8015ba2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015b7c:	6803      	ldr	r3, [r0, #0]
 8015b7e:	4621      	mov	r1, r4
 8015b80:	689b      	ldr	r3, [r3, #8]
 8015b82:	4798      	blx	r3
 8015b84:	4b0a      	ldr	r3, [pc, #40]	; (8015bb0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015b86:	6818      	ldr	r0, [r3, #0]
 8015b88:	b118      	cbz	r0, 8015b92 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015b8a:	6803      	ldr	r3, [r0, #0]
 8015b8c:	4621      	mov	r1, r4
 8015b8e:	689b      	ldr	r3, [r3, #8]
 8015b90:	4798      	blx	r3
 8015b92:	4b08      	ldr	r3, [pc, #32]	; (8015bb4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015b94:	6818      	ldr	r0, [r3, #0]
 8015b96:	6803      	ldr	r3, [r0, #0]
 8015b98:	4621      	mov	r1, r4
 8015b9a:	69db      	ldr	r3, [r3, #28]
 8015b9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015ba0:	4718      	bx	r3
 8015ba2:	bd10      	pop	{r4, pc}
 8015ba4:	200132b2 	.word	0x200132b2
 8015ba8:	200132b0 	.word	0x200132b0
 8015bac:	20013300 	.word	0x20013300
 8015bb0:	200132fc 	.word	0x200132fc
 8015bb4:	200132bc 	.word	0x200132bc

08015bb8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015bb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015bba:	4606      	mov	r6, r0
 8015bbc:	4608      	mov	r0, r1
 8015bbe:	460f      	mov	r7, r1
 8015bc0:	f7fa f957 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015bc4:	b9e8      	cbnz	r0, 8015c02 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015bc6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015bca:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015bce:	42a5      	cmp	r5, r4
 8015bd0:	db17      	blt.n	8015c02 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015bd2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015bd6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015bda:	429a      	cmp	r2, r3
 8015bdc:	db11      	blt.n	8015c02 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015bde:	88b9      	ldrh	r1, [r7, #4]
 8015be0:	440d      	add	r5, r1
 8015be2:	88b1      	ldrh	r1, [r6, #4]
 8015be4:	440c      	add	r4, r1
 8015be6:	b22d      	sxth	r5, r5
 8015be8:	b224      	sxth	r4, r4
 8015bea:	42a5      	cmp	r5, r4
 8015bec:	dc09      	bgt.n	8015c02 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015bee:	88f8      	ldrh	r0, [r7, #6]
 8015bf0:	4410      	add	r0, r2
 8015bf2:	88f2      	ldrh	r2, [r6, #6]
 8015bf4:	4413      	add	r3, r2
 8015bf6:	b200      	sxth	r0, r0
 8015bf8:	b21b      	sxth	r3, r3
 8015bfa:	4298      	cmp	r0, r3
 8015bfc:	bfcc      	ite	gt
 8015bfe:	2000      	movgt	r0, #0
 8015c00:	2001      	movle	r0, #1
 8015c02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015c04 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c06:	4604      	mov	r4, r0
 8015c08:	4608      	mov	r0, r1
 8015c0a:	460d      	mov	r5, r1
 8015c0c:	f7fa f931 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c10:	b978      	cbnz	r0, 8015c32 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015c12:	4620      	mov	r0, r4
 8015c14:	f7fa f92d 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c18:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015c1c:	b150      	cbz	r0, 8015c34 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015c1e:	8026      	strh	r6, [r4, #0]
 8015c20:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015c24:	8063      	strh	r3, [r4, #2]
 8015c26:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015c2a:	80a3      	strh	r3, [r4, #4]
 8015c2c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015c30:	80e3      	strh	r3, [r4, #6]
 8015c32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015c34:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015c38:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015c3c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015c40:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015c44:	88ed      	ldrh	r5, [r5, #6]
 8015c46:	42b1      	cmp	r1, r6
 8015c48:	460f      	mov	r7, r1
 8015c4a:	bfa8      	it	ge
 8015c4c:	4637      	movge	r7, r6
 8015c4e:	4293      	cmp	r3, r2
 8015c50:	4618      	mov	r0, r3
 8015c52:	4466      	add	r6, ip
 8015c54:	bfa8      	it	ge
 8015c56:	4610      	movge	r0, r2
 8015c58:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015c5c:	8027      	strh	r7, [r4, #0]
 8015c5e:	442a      	add	r2, r5
 8015c60:	88e5      	ldrh	r5, [r4, #6]
 8015c62:	8060      	strh	r0, [r4, #2]
 8015c64:	4461      	add	r1, ip
 8015c66:	442b      	add	r3, r5
 8015c68:	b236      	sxth	r6, r6
 8015c6a:	b209      	sxth	r1, r1
 8015c6c:	b212      	sxth	r2, r2
 8015c6e:	b21b      	sxth	r3, r3
 8015c70:	428e      	cmp	r6, r1
 8015c72:	bfac      	ite	ge
 8015c74:	ebc7 0106 	rsbge	r1, r7, r6
 8015c78:	ebc7 0101 	rsblt	r1, r7, r1
 8015c7c:	429a      	cmp	r2, r3
 8015c7e:	bfac      	ite	ge
 8015c80:	ebc0 0202 	rsbge	r2, r0, r2
 8015c84:	ebc0 0203 	rsblt	r2, r0, r3
 8015c88:	80a1      	strh	r1, [r4, #4]
 8015c8a:	80e2      	strh	r2, [r4, #6]
 8015c8c:	e7d1      	b.n	8015c32 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015c90 <_ZN8touchgfx11Application11getInstanceEv>:
 8015c90:	4b01      	ldr	r3, [pc, #4]	; (8015c98 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015c92:	6818      	ldr	r0, [r3, #0]
 8015c94:	4770      	bx	lr
 8015c96:	bf00      	nop
 8015c98:	20013310 	.word	0x20013310

08015c9c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c9e:	4b10      	ldr	r3, [pc, #64]	; (8015ce0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015ca0:	781b      	ldrb	r3, [r3, #0]
 8015ca2:	4605      	mov	r5, r0
 8015ca4:	b1d3      	cbz	r3, 8015cdc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015ca6:	4b0f      	ldr	r3, [pc, #60]	; (8015ce4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015ca8:	4f0f      	ldr	r7, [pc, #60]	; (8015ce8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015caa:	881c      	ldrh	r4, [r3, #0]
 8015cac:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015cb0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015cb4:	42a3      	cmp	r3, r4
 8015cb6:	d90e      	bls.n	8015cd6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015cb8:	683b      	ldr	r3, [r7, #0]
 8015cba:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015cbe:	b10a      	cbz	r2, 8015cc4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015cc0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015cc2:	b900      	cbnz	r0, 8015cc6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015cc4:	6898      	ldr	r0, [r3, #8]
 8015cc6:	6803      	ldr	r3, [r0, #0]
 8015cc8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015ccc:	69db      	ldr	r3, [r3, #28]
 8015cce:	3401      	adds	r4, #1
 8015cd0:	4798      	blx	r3
 8015cd2:	b2a4      	uxth	r4, r4
 8015cd4:	e7ec      	b.n	8015cb0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015cd6:	2300      	movs	r3, #0
 8015cd8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015cdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015cde:	bf00      	nop
 8015ce0:	200132ba 	.word	0x200132ba
 8015ce4:	200000a4 	.word	0x200000a4
 8015ce8:	200132bc 	.word	0x200132bc

08015cec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015cec:	b510      	push	{r4, lr}
 8015cee:	2300      	movs	r3, #0
 8015cf0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015cf4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015cf8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015cfc:	4604      	mov	r4, r0
 8015cfe:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015d02:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015d06:	429a      	cmp	r2, r3
 8015d08:	d90e      	bls.n	8015d28 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015d0a:	18e2      	adds	r2, r4, r3
 8015d0c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015d10:	b122      	cbz	r2, 8015d1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015d12:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015d16:	6803      	ldr	r3, [r0, #0]
 8015d18:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d1a:	4798      	blx	r3
 8015d1c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015d20:	3301      	adds	r3, #1
 8015d22:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015d26:	e7ea      	b.n	8015cfe <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015d28:	bd10      	pop	{r4, pc}

08015d2a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8015d2a:	b530      	push	{r4, r5, lr}
 8015d2c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015d30:	2200      	movs	r2, #0
 8015d32:	b293      	uxth	r3, r2
 8015d34:	429d      	cmp	r5, r3
 8015d36:	d90e      	bls.n	8015d56 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015d38:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8015d3c:	428b      	cmp	r3, r1
 8015d3e:	d10b      	bne.n	8015d58 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015d40:	1884      	adds	r4, r0, r2
 8015d42:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015d46:	b13b      	cbz	r3, 8015d58 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015d48:	3b01      	subs	r3, #1
 8015d4a:	b2db      	uxtb	r3, r3
 8015d4c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015d50:	b90b      	cbnz	r3, 8015d56 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015d52:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015d56:	bd30      	pop	{r4, r5, pc}
 8015d58:	3201      	adds	r2, #1
 8015d5a:	e7ea      	b.n	8015d32 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8015d5c:	2300      	movs	r3, #0
 8015d5e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015d62:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015d66:	30a4      	adds	r0, #164	; 0xa4
 8015d68:	f802 3b01 	strb.w	r3, [r2], #1
 8015d6c:	4282      	cmp	r2, r0
 8015d6e:	d1fb      	bne.n	8015d68 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015d70:	4770      	bx	lr
	...

08015d74 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015d74:	b570      	push	{r4, r5, r6, lr}
 8015d76:	4c0b      	ldr	r4, [pc, #44]	; (8015da4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015d78:	4605      	mov	r5, r0
 8015d7a:	6820      	ldr	r0, [r4, #0]
 8015d7c:	460e      	mov	r6, r1
 8015d7e:	b110      	cbz	r0, 8015d86 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015d80:	6803      	ldr	r3, [r0, #0]
 8015d82:	695b      	ldr	r3, [r3, #20]
 8015d84:	4798      	blx	r3
 8015d86:	1d28      	adds	r0, r5, #4
 8015d88:	f7ff ffe8 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015d8c:	6026      	str	r6, [r4, #0]
 8015d8e:	6833      	ldr	r3, [r6, #0]
 8015d90:	4630      	mov	r0, r6
 8015d92:	68db      	ldr	r3, [r3, #12]
 8015d94:	4798      	blx	r3
 8015d96:	682b      	ldr	r3, [r5, #0]
 8015d98:	4628      	mov	r0, r5
 8015d9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015d9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015da0:	4718      	bx	r3
 8015da2:	bf00      	nop
 8015da4:	20013300 	.word	0x20013300

08015da8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015da8:	2300      	movs	r3, #0
 8015daa:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015dae:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015db2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015db4:	461a      	mov	r2, r3
 8015db6:	461c      	mov	r4, r3
 8015db8:	461d      	mov	r5, r3
 8015dba:	459c      	cmp	ip, r3
 8015dbc:	dd1a      	ble.n	8015df4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015dbe:	18c6      	adds	r6, r0, r3
 8015dc0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015dc4:	b16e      	cbz	r6, 8015de2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015dc6:	429a      	cmp	r2, r3
 8015dc8:	d008      	beq.n	8015ddc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015dca:	fa1f fe82 	uxth.w	lr, r2
 8015dce:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015dd2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015dd6:	1887      	adds	r7, r0, r2
 8015dd8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015ddc:	3201      	adds	r2, #1
 8015dde:	3301      	adds	r3, #1
 8015de0:	e7eb      	b.n	8015dba <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015de2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015de6:	4299      	cmp	r1, r3
 8015de8:	bfa8      	it	ge
 8015dea:	3501      	addge	r5, #1
 8015dec:	429e      	cmp	r6, r3
 8015dee:	bfc8      	it	gt
 8015df0:	3401      	addgt	r4, #1
 8015df2:	e7f4      	b.n	8015dde <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015df4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015df8:	1b49      	subs	r1, r1, r5
 8015dfa:	1b1b      	subs	r3, r3, r4
 8015dfc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015e00:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015e04:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015e08:	4293      	cmp	r3, r2
 8015e0a:	dd03      	ble.n	8015e14 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015e0c:	3b01      	subs	r3, #1
 8015e0e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015e12:	e7f7      	b.n	8015e04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015e14:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015e18 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015e18:	b570      	push	{r4, r5, r6, lr}
 8015e1a:	4d16      	ldr	r5, [pc, #88]	; (8015e74 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015e1c:	4604      	mov	r4, r0
 8015e1e:	6828      	ldr	r0, [r5, #0]
 8015e20:	b140      	cbz	r0, 8015e34 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015e22:	7a03      	ldrb	r3, [r0, #8]
 8015e24:	b933      	cbnz	r3, 8015e34 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015e26:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015e2a:	6803      	ldr	r3, [r0, #0]
 8015e2c:	689b      	ldr	r3, [r3, #8]
 8015e2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015e32:	4718      	bx	r3
 8015e34:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015e38:	4e0f      	ldr	r6, [pc, #60]	; (8015e78 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015e3a:	b973      	cbnz	r3, 8015e5a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015e3c:	b168      	cbz	r0, 8015e5a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015e3e:	7a03      	ldrb	r3, [r0, #8]
 8015e40:	b15b      	cbz	r3, 8015e5a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015e42:	6830      	ldr	r0, [r6, #0]
 8015e44:	b110      	cbz	r0, 8015e4c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015e46:	6803      	ldr	r3, [r0, #0]
 8015e48:	691b      	ldr	r3, [r3, #16]
 8015e4a:	4798      	blx	r3
 8015e4c:	6828      	ldr	r0, [r5, #0]
 8015e4e:	6803      	ldr	r3, [r0, #0]
 8015e50:	68db      	ldr	r3, [r3, #12]
 8015e52:	4798      	blx	r3
 8015e54:	2301      	movs	r3, #1
 8015e56:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015e5a:	3404      	adds	r4, #4
 8015e5c:	4620      	mov	r0, r4
 8015e5e:	f7ff ff45 	bl	8015cec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015e62:	4620      	mov	r0, r4
 8015e64:	f7ff ffa0 	bl	8015da8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015e68:	6830      	ldr	r0, [r6, #0]
 8015e6a:	b110      	cbz	r0, 8015e72 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015e6c:	6803      	ldr	r3, [r0, #0]
 8015e6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015e70:	e7dd      	b.n	8015e2e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015e72:	bd70      	pop	{r4, r5, r6, pc}
 8015e74:	20013304 	.word	0x20013304
 8015e78:	20013300 	.word	0x20013300

08015e7c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015e7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e7e:	2300      	movs	r3, #0
 8015e80:	4604      	mov	r4, r0
 8015e82:	460d      	mov	r5, r1
 8015e84:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015e88:	4618      	mov	r0, r3
 8015e8a:	b29a      	uxth	r2, r3
 8015e8c:	4291      	cmp	r1, r2
 8015e8e:	d911      	bls.n	8015eb4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015e90:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015e94:	18e6      	adds	r6, r4, r3
 8015e96:	42af      	cmp	r7, r5
 8015e98:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8015e9c:	d105      	bne.n	8015eaa <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8015e9e:	2aff      	cmp	r2, #255	; 0xff
 8015ea0:	d002      	beq.n	8015ea8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015ea2:	3201      	adds	r2, #1
 8015ea4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015ea8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015eaa:	2a00      	cmp	r2, #0
 8015eac:	bf08      	it	eq
 8015eae:	2001      	moveq	r0, #1
 8015eb0:	3301      	adds	r3, #1
 8015eb2:	e7ea      	b.n	8015e8a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015eb4:	b120      	cbz	r0, 8015ec0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015eb6:	2920      	cmp	r1, #32
 8015eb8:	d102      	bne.n	8015ec0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015eba:	4620      	mov	r0, r4
 8015ebc:	f7ff ff74 	bl	8015da8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015ec0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015ec4:	2b1f      	cmp	r3, #31
 8015ec6:	d8ef      	bhi.n	8015ea8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015ec8:	18e2      	adds	r2, r4, r3
 8015eca:	2101      	movs	r1, #1
 8015ecc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015ed0:	185a      	adds	r2, r3, r1
 8015ed2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015ed6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8015eda:	e7e5      	b.n	8015ea8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08015edc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8015edc:	4603      	mov	r3, r0
 8015ede:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015ee2:	2200      	movs	r2, #0
 8015ee4:	801a      	strh	r2, [r3, #0]
 8015ee6:	805a      	strh	r2, [r3, #2]
 8015ee8:	809a      	strh	r2, [r3, #4]
 8015eea:	80da      	strh	r2, [r3, #6]
 8015eec:	3308      	adds	r3, #8
 8015eee:	428b      	cmp	r3, r1
 8015ef0:	d1f8      	bne.n	8015ee4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015ef2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015ef6:	4770      	bx	lr

08015ef8 <_ZN8touchgfx11ApplicationC1Ev>:
 8015ef8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015efa:	4606      	mov	r6, r0
 8015efc:	4b1c      	ldr	r3, [pc, #112]	; (8015f70 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015efe:	f846 3b04 	str.w	r3, [r6], #4
 8015f02:	4604      	mov	r4, r0
 8015f04:	2500      	movs	r5, #0
 8015f06:	22a8      	movs	r2, #168	; 0xa8
 8015f08:	2100      	movs	r1, #0
 8015f0a:	4630      	mov	r0, r6
 8015f0c:	f014 ff8d 	bl	802ae2a <memset>
 8015f10:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015f14:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015f18:	f7ff ffe0 	bl	8015edc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015f1c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015f20:	f7ff ffdc 	bl	8015edc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015f24:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015f28:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015f2c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015f30:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015f34:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015f38:	490e      	ldr	r1, [pc, #56]	; (8015f74 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015f3a:	480f      	ldr	r0, [pc, #60]	; (8015f78 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015f3c:	4f0f      	ldr	r7, [pc, #60]	; (8015f7c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015f3e:	f010 fe27 	bl	8026b90 <CRC_Lock>
 8015f42:	4b0f      	ldr	r3, [pc, #60]	; (8015f80 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015f44:	b158      	cbz	r0, 8015f5e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015f46:	801d      	strh	r5, [r3, #0]
 8015f48:	4a0e      	ldr	r2, [pc, #56]	; (8015f84 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015f4a:	2300      	movs	r3, #0
 8015f4c:	6013      	str	r3, [r2, #0]
 8015f4e:	4a0e      	ldr	r2, [pc, #56]	; (8015f88 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015f50:	603b      	str	r3, [r7, #0]
 8015f52:	4630      	mov	r0, r6
 8015f54:	6013      	str	r3, [r2, #0]
 8015f56:	f7ff ff01 	bl	8015d5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015f5a:	4620      	mov	r0, r4
 8015f5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015f5e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015f62:	2002      	movs	r0, #2
 8015f64:	801a      	strh	r2, [r3, #0]
 8015f66:	6038      	str	r0, [r7, #0]
 8015f68:	f001 fb4a 	bl	8017600 <_ZN8touchgfx6Screen4drawEv>
 8015f6c:	e7ec      	b.n	8015f48 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8015f6e:	bf00      	nop
 8015f70:	0802ee40 	.word	0x0802ee40
 8015f74:	b5e8b5cd 	.word	0xb5e8b5cd
 8015f78:	f407a5c2 	.word	0xf407a5c2
 8015f7c:	20013300 	.word	0x20013300
 8015f80:	200000a4 	.word	0x200000a4
 8015f84:	20013310 	.word	0x20013310
 8015f88:	20013304 	.word	0x20013304

08015f8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8015f8c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015f90:	3b01      	subs	r3, #1
 8015f92:	b29b      	uxth	r3, r3
 8015f94:	428b      	cmp	r3, r1
 8015f96:	b510      	push	{r4, lr}
 8015f98:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8015f9c:	d908      	bls.n	8015fb0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8015f9e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015fa2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015fa6:	681a      	ldr	r2, [r3, #0]
 8015fa8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8015fac:	685a      	ldr	r2, [r3, #4]
 8015fae:	6062      	str	r2, [r4, #4]
 8015fb0:	bd10      	pop	{r4, pc}
	...

08015fb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fb8:	4b8f      	ldr	r3, [pc, #572]	; (80161f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8015fba:	b08f      	sub	sp, #60	; 0x3c
 8015fbc:	ac0a      	add	r4, sp, #40	; 0x28
 8015fbe:	e884 0006 	stmia.w	r4, {r1, r2}
 8015fc2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015fc6:	4b8d      	ldr	r3, [pc, #564]	; (80161fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8015fc8:	4683      	mov	fp, r0
 8015fca:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015fce:	4620      	mov	r0, r4
 8015fd0:	f7ff fda1 	bl	8015b16 <_ZN8touchgfx4Rect10restrictToEss>
 8015fd4:	4620      	mov	r0, r4
 8015fd6:	f7f9 ff4c 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015fda:	2800      	cmp	r0, #0
 8015fdc:	d16a      	bne.n	80160b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015fde:	9403      	str	r4, [sp, #12]
 8015fe0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015fe4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015fe8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8015fec:	35a4      	adds	r5, #164	; 0xa4
 8015fee:	9301      	str	r3, [sp, #4]
 8015ff0:	b15c      	cbz	r4, 801600a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8015ff2:	4629      	mov	r1, r5
 8015ff4:	9803      	ldr	r0, [sp, #12]
 8015ff6:	f7ff fddf 	bl	8015bb8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015ffa:	3c01      	subs	r4, #1
 8015ffc:	b118      	cbz	r0, 8016006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8015ffe:	b2a1      	uxth	r1, r4
 8016000:	9801      	ldr	r0, [sp, #4]
 8016002:	f7ff ffc3 	bl	8015f8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016006:	3d08      	subs	r5, #8
 8016008:	e7f2      	b.n	8015ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801600a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801600e:	f8cd a010 	str.w	sl, [sp, #16]
 8016012:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016016:	9302      	str	r3, [sp, #8]
 8016018:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801601c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8016020:	9306      	str	r3, [sp, #24]
 8016022:	445c      	add	r4, fp
 8016024:	2500      	movs	r5, #0
 8016026:	4626      	mov	r6, r4
 8016028:	f8cd a014 	str.w	sl, [sp, #20]
 801602c:	462f      	mov	r7, r5
 801602e:	9b05      	ldr	r3, [sp, #20]
 8016030:	2b00      	cmp	r3, #0
 8016032:	d073      	beq.n	801611c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016034:	9903      	ldr	r1, [sp, #12]
 8016036:	4630      	mov	r0, r6
 8016038:	f7ff fd4b 	bl	8015ad2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801603c:	b350      	cbz	r0, 8016094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801603e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016042:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016046:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801604a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801604e:	45e6      	cmp	lr, ip
 8016050:	db33      	blt.n	80160ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016052:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016056:	88b3      	ldrh	r3, [r6, #4]
 8016058:	4472      	add	r2, lr
 801605a:	4463      	add	r3, ip
 801605c:	b212      	sxth	r2, r2
 801605e:	b21b      	sxth	r3, r3
 8016060:	429a      	cmp	r2, r3
 8016062:	dc2a      	bgt.n	80160ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016064:	88f3      	ldrh	r3, [r6, #6]
 8016066:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801606a:	fa1f f289 	uxth.w	r2, r9
 801606e:	4413      	add	r3, r2
 8016070:	b29b      	uxth	r3, r3
 8016072:	45c8      	cmp	r8, r9
 8016074:	fa1f fc88 	uxth.w	ip, r8
 8016078:	fa0f fe83 	sxth.w	lr, r3
 801607c:	db0f      	blt.n	801609e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801607e:	eba3 030c 	sub.w	r3, r3, ip
 8016082:	1ac9      	subs	r1, r1, r3
 8016084:	b209      	sxth	r1, r1
 8016086:	2900      	cmp	r1, #0
 8016088:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801608c:	dd12      	ble.n	80160b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801608e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016092:	4605      	mov	r5, r0
 8016094:	9b05      	ldr	r3, [sp, #20]
 8016096:	3b01      	subs	r3, #1
 8016098:	9305      	str	r3, [sp, #20]
 801609a:	3e08      	subs	r6, #8
 801609c:	e7c7      	b.n	801602e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801609e:	4461      	add	r1, ip
 80160a0:	b209      	sxth	r1, r1
 80160a2:	4571      	cmp	r1, lr
 80160a4:	dc38      	bgt.n	8016118 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80160a6:	eba2 020c 	sub.w	r2, r2, ip
 80160aa:	b212      	sxth	r2, r2
 80160ac:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80160b0:	2a00      	cmp	r2, #0
 80160b2:	dcee      	bgt.n	8016092 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80160b4:	b00f      	add	sp, #60	; 0x3c
 80160b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80160ba:	45c8      	cmp	r8, r9
 80160bc:	db2c      	blt.n	8016118 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80160be:	88f3      	ldrh	r3, [r6, #6]
 80160c0:	4499      	add	r9, r3
 80160c2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80160c6:	4498      	add	r8, r3
 80160c8:	fa0f f989 	sxth.w	r9, r9
 80160cc:	fa0f f888 	sxth.w	r8, r8
 80160d0:	45c1      	cmp	r9, r8
 80160d2:	db21      	blt.n	8016118 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80160d4:	88b3      	ldrh	r3, [r6, #4]
 80160d6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80160da:	fa1f f28c 	uxth.w	r2, ip
 80160de:	4413      	add	r3, r2
 80160e0:	b29b      	uxth	r3, r3
 80160e2:	45e6      	cmp	lr, ip
 80160e4:	fa1f f88e 	uxth.w	r8, lr
 80160e8:	fa0f f983 	sxth.w	r9, r3
 80160ec:	db0a      	blt.n	8016104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80160ee:	eba3 0308 	sub.w	r3, r3, r8
 80160f2:	1ac9      	subs	r1, r1, r3
 80160f4:	b209      	sxth	r1, r1
 80160f6:	2900      	cmp	r1, #0
 80160f8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80160fc:	ddda      	ble.n	80160b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80160fe:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016102:	e7c6      	b.n	8016092 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016104:	4441      	add	r1, r8
 8016106:	b209      	sxth	r1, r1
 8016108:	4549      	cmp	r1, r9
 801610a:	dc05      	bgt.n	8016118 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801610c:	eba2 0208 	sub.w	r2, r2, r8
 8016110:	b212      	sxth	r2, r2
 8016112:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016116:	e7cb      	b.n	80160b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016118:	4607      	mov	r7, r0
 801611a:	e7bb      	b.n	8016094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801611c:	2d00      	cmp	r5, #0
 801611e:	d181      	bne.n	8016024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016120:	2f00      	cmp	r7, #0
 8016122:	f000 81dd 	beq.w	80164e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016126:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801612a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801612e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016132:	b2b3      	uxth	r3, r6
 8016134:	9305      	str	r3, [sp, #20]
 8016136:	9a05      	ldr	r2, [sp, #20]
 8016138:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801613c:	4413      	add	r3, r2
 801613e:	b2ba      	uxth	r2, r7
 8016140:	4492      	add	sl, r2
 8016142:	b29b      	uxth	r3, r3
 8016144:	fa1f fa8a 	uxth.w	sl, sl
 8016148:	fa0f f883 	sxth.w	r8, r3
 801614c:	fa0f f98a 	sxth.w	r9, sl
 8016150:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016154:	9b04      	ldr	r3, [sp, #16]
 8016156:	2b00      	cmp	r3, #0
 8016158:	d052      	beq.n	8016200 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801615a:	9903      	ldr	r1, [sp, #12]
 801615c:	4620      	mov	r0, r4
 801615e:	f7ff fcb8 	bl	8015ad2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016162:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016166:	b1c0      	cbz	r0, 801619a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016168:	f9b4 e000 	ldrsh.w	lr, [r4]
 801616c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016170:	4576      	cmp	r6, lr
 8016172:	dc22      	bgt.n	80161ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016174:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016178:	44f4      	add	ip, lr
 801617a:	fa0f fc8c 	sxth.w	ip, ip
 801617e:	45e0      	cmp	r8, ip
 8016180:	db1b      	blt.n	80161ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016182:	428f      	cmp	r7, r1
 8016184:	fa1f fc81 	uxth.w	ip, r1
 8016188:	88e1      	ldrh	r1, [r4, #6]
 801618a:	dc0d      	bgt.n	80161a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801618c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016190:	eba1 010c 	sub.w	r1, r1, ip
 8016194:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016198:	80e1      	strh	r1, [r4, #6]
 801619a:	4628      	mov	r0, r5
 801619c:	9904      	ldr	r1, [sp, #16]
 801619e:	3901      	subs	r1, #1
 80161a0:	9104      	str	r1, [sp, #16]
 80161a2:	3c08      	subs	r4, #8
 80161a4:	4605      	mov	r5, r0
 80161a6:	e7d3      	b.n	8016150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80161a8:	4461      	add	r1, ip
 80161aa:	b209      	sxth	r1, r1
 80161ac:	4549      	cmp	r1, r9
 80161ae:	dcf5      	bgt.n	801619c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80161b0:	eba2 0c0c 	sub.w	ip, r2, ip
 80161b4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80161b8:	e7ef      	b.n	801619a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80161ba:	428f      	cmp	r7, r1
 80161bc:	dcee      	bgt.n	801619c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80161be:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80161c2:	4461      	add	r1, ip
 80161c4:	b209      	sxth	r1, r1
 80161c6:	4589      	cmp	r9, r1
 80161c8:	dbe8      	blt.n	801619c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80161ca:	4576      	cmp	r6, lr
 80161cc:	fa1f fc8e 	uxth.w	ip, lr
 80161d0:	88a1      	ldrh	r1, [r4, #4]
 80161d2:	dc07      	bgt.n	80161e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80161d4:	eba3 0c0c 	sub.w	ip, r3, ip
 80161d8:	eba1 010c 	sub.w	r1, r1, ip
 80161dc:	f8a4 8000 	strh.w	r8, [r4]
 80161e0:	80a1      	strh	r1, [r4, #4]
 80161e2:	e7da      	b.n	801619a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80161e4:	4461      	add	r1, ip
 80161e6:	b209      	sxth	r1, r1
 80161e8:	4588      	cmp	r8, r1
 80161ea:	dbd7      	blt.n	801619c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80161ec:	9905      	ldr	r1, [sp, #20]
 80161ee:	eba1 0c0c 	sub.w	ip, r1, ip
 80161f2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80161f6:	e7d0      	b.n	801619a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80161f8:	200132b2 	.word	0x200132b2
 80161fc:	200132b0 	.word	0x200132b0
 8016200:	2d00      	cmp	r5, #0
 8016202:	f000 816d 	beq.w	80164e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016206:	9b06      	ldr	r3, [sp, #24]
 8016208:	445b      	add	r3, fp
 801620a:	461c      	mov	r4, r3
 801620c:	9b02      	ldr	r3, [sp, #8]
 801620e:	3301      	adds	r3, #1
 8016210:	f000 8166 	beq.w	80164e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016214:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016218:	4629      	mov	r1, r5
 801621a:	9803      	ldr	r0, [sp, #12]
 801621c:	f7ff fccc 	bl	8015bb8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016220:	b120      	cbz	r0, 801622c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016222:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016226:	9801      	ldr	r0, [sp, #4]
 8016228:	f7ff feb0 	bl	8015f8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801622c:	9903      	ldr	r1, [sp, #12]
 801622e:	4628      	mov	r0, r5
 8016230:	f7ff fc4f 	bl	8015ad2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016234:	2800      	cmp	r0, #0
 8016236:	f000 809c 	beq.w	8016372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801623a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801623e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016242:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016246:	9309      	str	r3, [sp, #36]	; 0x24
 8016248:	fa1f f189 	uxth.w	r1, r9
 801624c:	eb01 0c03 	add.w	ip, r1, r3
 8016250:	fa1f fa8c 	uxth.w	sl, ip
 8016254:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016258:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801625c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016260:	b283      	uxth	r3, r0
 8016262:	eb03 050c 	add.w	r5, r3, ip
 8016266:	b2ad      	uxth	r5, r5
 8016268:	9505      	str	r5, [sp, #20]
 801626a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801626e:	9504      	str	r5, [sp, #16]
 8016270:	4548      	cmp	r0, r9
 8016272:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016276:	f340 8099 	ble.w	80163ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801627a:	1a5b      	subs	r3, r3, r1
 801627c:	b29b      	uxth	r3, r3
 801627e:	4596      	cmp	lr, r2
 8016280:	fa0f f08a 	sxth.w	r0, sl
 8016284:	b21e      	sxth	r6, r3
 8016286:	dd2e      	ble.n	80162e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016288:	9f02      	ldr	r7, [sp, #8]
 801628a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801628e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016292:	9f04      	ldr	r7, [sp, #16]
 8016294:	1a3f      	subs	r7, r7, r0
 8016296:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801629a:	fa1f fe8e 	uxth.w	lr, lr
 801629e:	b292      	uxth	r2, r2
 80162a0:	ebae 0102 	sub.w	r1, lr, r2
 80162a4:	44a6      	add	lr, r4
 80162a6:	4402      	add	r2, r0
 80162a8:	b289      	uxth	r1, r1
 80162aa:	fa0f fe8e 	sxth.w	lr, lr
 80162ae:	b212      	sxth	r2, r2
 80162b0:	b20d      	sxth	r5, r1
 80162b2:	ebae 0202 	sub.w	r2, lr, r2
 80162b6:	436f      	muls	r7, r5
 80162b8:	4372      	muls	r2, r6
 80162ba:	4297      	cmp	r7, r2
 80162bc:	db09      	blt.n	80162d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80162be:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80162c2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80162c6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80162ca:	449c      	add	ip, r3
 80162cc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80162d0:	e686      	b.n	8015fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80162d2:	4421      	add	r1, r4
 80162d4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80162d8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80162dc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80162e0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80162e4:	e67c      	b.n	8015fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80162e6:	9f04      	ldr	r7, [sp, #16]
 80162e8:	42b8      	cmp	r0, r7
 80162ea:	da27      	bge.n	801633c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80162ec:	9902      	ldr	r1, [sp, #8]
 80162ee:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80162f2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80162f6:	eb05 010e 	add.w	r1, r5, lr
 80162fa:	fa1f f881 	uxth.w	r8, r1
 80162fe:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016302:	4411      	add	r1, r2
 8016304:	eba1 0108 	sub.w	r1, r1, r8
 8016308:	b289      	uxth	r1, r1
 801630a:	fa0f f988 	sxth.w	r9, r8
 801630e:	eba2 020e 	sub.w	r2, r2, lr
 8016312:	fa0f f881 	sxth.w	r8, r1
 8016316:	1a3f      	subs	r7, r7, r0
 8016318:	4372      	muls	r2, r6
 801631a:	fb08 f707 	mul.w	r7, r8, r7
 801631e:	42ba      	cmp	r2, r7
 8016320:	dc06      	bgt.n	8016330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016322:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016326:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801632a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801632e:	e7ca      	b.n	80162c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016330:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016334:	4429      	add	r1, r5
 8016336:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801633a:	e651      	b.n	8015fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801633c:	9805      	ldr	r0, [sp, #20]
 801633e:	ebaa 0000 	sub.w	r0, sl, r0
 8016342:	b280      	uxth	r0, r0
 8016344:	2d06      	cmp	r5, #6
 8016346:	fa0f fe80 	sxth.w	lr, r0
 801634a:	d817      	bhi.n	801637c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801634c:	9b04      	ldr	r3, [sp, #16]
 801634e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016352:	1c6b      	adds	r3, r5, #1
 8016354:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016358:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801635c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016360:	9b01      	ldr	r3, [sp, #4]
 8016362:	9801      	ldr	r0, [sp, #4]
 8016364:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016368:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801636c:	805a      	strh	r2, [r3, #2]
 801636e:	809e      	strh	r6, [r3, #4]
 8016370:	80d9      	strh	r1, [r3, #6]
 8016372:	9b02      	ldr	r3, [sp, #8]
 8016374:	3b01      	subs	r3, #1
 8016376:	9302      	str	r3, [sp, #8]
 8016378:	3c08      	subs	r4, #8
 801637a:	e747      	b.n	801620c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801637c:	9a02      	ldr	r2, [sp, #8]
 801637e:	45b6      	cmp	lr, r6
 8016380:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016384:	db0d      	blt.n	80163a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016386:	449c      	add	ip, r3
 8016388:	fa1f fc8c 	uxth.w	ip, ip
 801638c:	445a      	add	r2, fp
 801638e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016392:	448c      	add	ip, r1
 8016394:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016398:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801639c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80163a0:	e61e      	b.n	8015fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80163a2:	445a      	add	r2, fp
 80163a4:	4484      	add	ip, r0
 80163a6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80163aa:	e78f      	b.n	80162cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80163ac:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80163b0:	fa1f f18e 	uxth.w	r1, lr
 80163b4:	eb01 0806 	add.w	r8, r1, r6
 80163b8:	b293      	uxth	r3, r2
 80163ba:	fa1f f888 	uxth.w	r8, r8
 80163be:	9306      	str	r3, [sp, #24]
 80163c0:	fa0f f388 	sxth.w	r3, r8
 80163c4:	9307      	str	r3, [sp, #28]
 80163c6:	9f06      	ldr	r7, [sp, #24]
 80163c8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80163cc:	443b      	add	r3, r7
 80163ce:	b29b      	uxth	r3, r3
 80163d0:	4596      	cmp	lr, r2
 80163d2:	9308      	str	r3, [sp, #32]
 80163d4:	da24      	bge.n	8016420 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80163d6:	9905      	ldr	r1, [sp, #20]
 80163d8:	eba3 0308 	sub.w	r3, r3, r8
 80163dc:	ebaa 0401 	sub.w	r4, sl, r1
 80163e0:	b2a4      	uxth	r4, r4
 80163e2:	b29b      	uxth	r3, r3
 80163e4:	b225      	sxth	r5, r4
 80163e6:	b219      	sxth	r1, r3
 80163e8:	eba2 020e 	sub.w	r2, r2, lr
 80163ec:	eba9 0000 	sub.w	r0, r9, r0
 80163f0:	436a      	muls	r2, r5
 80163f2:	4348      	muls	r0, r1
 80163f4:	4282      	cmp	r2, r0
 80163f6:	9a02      	ldr	r2, [sp, #8]
 80163f8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80163fc:	445a      	add	r2, fp
 80163fe:	dc06      	bgt.n	801640e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016400:	9b07      	ldr	r3, [sp, #28]
 8016402:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016406:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801640a:	44a4      	add	ip, r4
 801640c:	e75e      	b.n	80162cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801640e:	9904      	ldr	r1, [sp, #16]
 8016410:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016414:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016418:	4433      	add	r3, r6
 801641a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801641e:	e5df      	b.n	8015fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016420:	9f06      	ldr	r7, [sp, #24]
 8016422:	9b04      	ldr	r3, [sp, #16]
 8016424:	1bc9      	subs	r1, r1, r7
 8016426:	fa0f f78a 	sxth.w	r7, sl
 801642a:	b289      	uxth	r1, r1
 801642c:	429f      	cmp	r7, r3
 801642e:	fa0f fe81 	sxth.w	lr, r1
 8016432:	dd23      	ble.n	801647c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016434:	9a05      	ldr	r2, [sp, #20]
 8016436:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801643a:	9d07      	ldr	r5, [sp, #28]
 801643c:	ebaa 0202 	sub.w	r2, sl, r2
 8016440:	b292      	uxth	r2, r2
 8016442:	eba5 0a03 	sub.w	sl, r5, r3
 8016446:	b214      	sxth	r4, r2
 8016448:	eba9 0000 	sub.w	r0, r9, r0
 801644c:	9b02      	ldr	r3, [sp, #8]
 801644e:	fb0e f000 	mul.w	r0, lr, r0
 8016452:	fb04 fa0a 	mul.w	sl, r4, sl
 8016456:	00db      	lsls	r3, r3, #3
 8016458:	4550      	cmp	r0, sl
 801645a:	445b      	add	r3, fp
 801645c:	db03      	blt.n	8016466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801645e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016462:	4494      	add	ip, r2
 8016464:	e732      	b.n	80162cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016466:	9a04      	ldr	r2, [sp, #16]
 8016468:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801646c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016470:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016474:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016478:	4431      	add	r1, r6
 801647a:	e75c      	b.n	8016336 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801647c:	9b08      	ldr	r3, [sp, #32]
 801647e:	eba3 0308 	sub.w	r3, r3, r8
 8016482:	b29b      	uxth	r3, r3
 8016484:	2d06      	cmp	r5, #6
 8016486:	b218      	sxth	r0, r3
 8016488:	d813      	bhi.n	80164b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801648a:	9b07      	ldr	r3, [sp, #28]
 801648c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016490:	1c6b      	adds	r3, r5, #1
 8016492:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016496:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801649a:	9b01      	ldr	r3, [sp, #4]
 801649c:	9901      	ldr	r1, [sp, #4]
 801649e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80164a2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80164a6:	805a      	strh	r2, [r3, #2]
 80164a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80164aa:	809a      	strh	r2, [r3, #4]
 80164ac:	f8a3 e006 	strh.w	lr, [r3, #6]
 80164b0:	e75f      	b.n	8016372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80164b2:	9c02      	ldr	r4, [sp, #8]
 80164b4:	4570      	cmp	r0, lr
 80164b6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80164ba:	db0d      	blt.n	80164d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80164bc:	4431      	add	r1, r6
 80164be:	9b06      	ldr	r3, [sp, #24]
 80164c0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80164c4:	b289      	uxth	r1, r1
 80164c6:	445c      	add	r4, fp
 80164c8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80164cc:	4419      	add	r1, r3
 80164ce:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80164d2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80164d6:	e583      	b.n	8015fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80164d8:	445c      	add	r4, fp
 80164da:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80164de:	e79b      	b.n	8016418 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80164e0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80164e4:	1e65      	subs	r5, r4, #1
 80164e6:	b2ad      	uxth	r5, r5
 80164e8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80164ec:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80164f0:	42b5      	cmp	r5, r6
 80164f2:	d044      	beq.n	801657e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80164f4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80164f8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80164fc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016500:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8016504:	4282      	cmp	r2, r0
 8016506:	d11f      	bne.n	8016548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016508:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801650c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016510:	459c      	cmp	ip, r3
 8016512:	d119      	bne.n	8016548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016514:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016518:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801651c:	19d8      	adds	r0, r3, r7
 801651e:	b200      	sxth	r0, r0
 8016520:	4288      	cmp	r0, r1
 8016522:	d109      	bne.n	8016538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016524:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016528:	4413      	add	r3, r2
 801652a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801652e:	4629      	mov	r1, r5
 8016530:	9801      	ldr	r0, [sp, #4]
 8016532:	f7ff fd2b 	bl	8015f8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016536:	e003      	b.n	8016540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016538:	4411      	add	r1, r2
 801653a:	b209      	sxth	r1, r1
 801653c:	42b9      	cmp	r1, r7
 801653e:	d0f3      	beq.n	8016528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016540:	3d01      	subs	r5, #1
 8016542:	b2ad      	uxth	r5, r5
 8016544:	3c08      	subs	r4, #8
 8016546:	e7d3      	b.n	80164f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016548:	42b9      	cmp	r1, r7
 801654a:	d1f9      	bne.n	8016540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801654c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8016550:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016554:	4299      	cmp	r1, r3
 8016556:	d1f3      	bne.n	8016540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016558:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801655c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016560:	181f      	adds	r7, r3, r0
 8016562:	b23f      	sxth	r7, r7
 8016564:	42ba      	cmp	r2, r7
 8016566:	d105      	bne.n	8016574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016568:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801656c:	440b      	add	r3, r1
 801656e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016572:	e7dc      	b.n	801652e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016574:	440a      	add	r2, r1
 8016576:	b212      	sxth	r2, r2
 8016578:	4290      	cmp	r0, r2
 801657a:	d1e1      	bne.n	8016540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801657c:	e7f6      	b.n	801656c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801657e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016582:	2e07      	cmp	r6, #7
 8016584:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016588:	d812      	bhi.n	80165b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801658a:	1c75      	adds	r5, r6, #1
 801658c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016590:	9d01      	ldr	r5, [sp, #4]
 8016592:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016596:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801659a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801659e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80165a2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80165a6:	442c      	add	r4, r5
 80165a8:	8061      	strh	r1, [r4, #2]
 80165aa:	80a2      	strh	r2, [r4, #4]
 80165ac:	80e3      	strh	r3, [r4, #6]
 80165ae:	e581      	b.n	80160b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80165b0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80165b4:	3e01      	subs	r6, #1
 80165b6:	445c      	add	r4, fp
 80165b8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80165bc:	f04f 37ff 	mov.w	r7, #4294967295
 80165c0:	2500      	movs	r5, #0
 80165c2:	9305      	str	r3, [sp, #20]
 80165c4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80165c8:	9302      	str	r3, [sp, #8]
 80165ca:	1e72      	subs	r2, r6, #1
 80165cc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80165d0:	9304      	str	r3, [sp, #16]
 80165d2:	4691      	mov	r9, r2
 80165d4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80165d8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80165dc:	bf14      	ite	ne
 80165de:	9905      	ldrne	r1, [sp, #20]
 80165e0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80165e4:	6818      	ldr	r0, [r3, #0]
 80165e6:	9207      	str	r2, [sp, #28]
 80165e8:	bf18      	it	ne
 80165ea:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80165ee:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80165f2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80165f6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80165fa:	9306      	str	r3, [sp, #24]
 80165fc:	fb18 f801 	smulbb	r8, r8, r1
 8016600:	6859      	ldr	r1, [r3, #4]
 8016602:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016606:	4671      	mov	r1, lr
 8016608:	a80c      	add	r0, sp, #48	; 0x30
 801660a:	f7ff fafb 	bl	8015c04 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801660e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016612:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016616:	9b04      	ldr	r3, [sp, #16]
 8016618:	9a02      	ldr	r2, [sp, #8]
 801661a:	fb10 f001 	smulbb	r0, r0, r1
 801661e:	fb02 8803 	mla	r8, r2, r3, r8
 8016622:	eba0 0108 	sub.w	r1, r0, r8
 8016626:	f04f 0c08 	mov.w	ip, #8
 801662a:	fb90 f0fc 	sdiv	r0, r0, ip
 801662e:	4288      	cmp	r0, r1
 8016630:	dc20      	bgt.n	8016674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016632:	4551      	cmp	r1, sl
 8016634:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016638:	da03      	bge.n	8016642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801663a:	b1d9      	cbz	r1, 8016674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801663c:	468a      	mov	sl, r1
 801663e:	464f      	mov	r7, r9
 8016640:	4635      	mov	r5, r6
 8016642:	f109 39ff 	add.w	r9, r9, #4294967295
 8016646:	f119 0f02 	cmn.w	r9, #2
 801664a:	d1c5      	bne.n	80165d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801664c:	4616      	mov	r6, r2
 801664e:	3201      	adds	r2, #1
 8016650:	f1a4 0408 	sub.w	r4, r4, #8
 8016654:	d1b6      	bne.n	80165c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8016656:	9b01      	ldr	r3, [sp, #4]
 8016658:	b2ac      	uxth	r4, r5
 801665a:	00ed      	lsls	r5, r5, #3
 801665c:	1958      	adds	r0, r3, r5
 801665e:	1c7b      	adds	r3, r7, #1
 8016660:	d10b      	bne.n	801667a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8016662:	4601      	mov	r1, r0
 8016664:	9803      	ldr	r0, [sp, #12]
 8016666:	f7ff facd 	bl	8015c04 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801666a:	4621      	mov	r1, r4
 801666c:	9801      	ldr	r0, [sp, #4]
 801666e:	f7ff fc8d 	bl	8015f8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016672:	e4b5      	b.n	8015fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016674:	464f      	mov	r7, r9
 8016676:	4635      	mov	r5, r6
 8016678:	e7ed      	b.n	8016656 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801667a:	9b01      	ldr	r3, [sp, #4]
 801667c:	00ff      	lsls	r7, r7, #3
 801667e:	19d9      	adds	r1, r3, r7
 8016680:	f7ff fac0 	bl	8015c04 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016684:	9b03      	ldr	r3, [sp, #12]
 8016686:	cb03      	ldmia	r3!, {r0, r1}
 8016688:	445f      	add	r7, fp
 801668a:	445d      	add	r5, fp
 801668c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016690:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8016694:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016698:	9b03      	ldr	r3, [sp, #12]
 801669a:	6869      	ldr	r1, [r5, #4]
 801669c:	c303      	stmia	r3!, {r0, r1}
 801669e:	e7e4      	b.n	801666a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080166a0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80166a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166a4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80166a8:	b09b      	sub	sp, #108	; 0x6c
 80166aa:	4604      	mov	r4, r0
 80166ac:	4630      	mov	r0, r6
 80166ae:	f7f9 fbe0 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 80166b2:	4605      	mov	r5, r0
 80166b4:	b948      	cbnz	r0, 80166ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80166b6:	6823      	ldr	r3, [r4, #0]
 80166b8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80166bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80166be:	4620      	mov	r0, r4
 80166c0:	4798      	blx	r3
 80166c2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80166c6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80166ca:	4bc6      	ldr	r3, [pc, #792]	; (80169e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80166cc:	681b      	ldr	r3, [r3, #0]
 80166ce:	2b00      	cmp	r3, #0
 80166d0:	d03f      	beq.n	8016752 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80166d2:	4dc5      	ldr	r5, [pc, #788]	; (80169e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80166d4:	4628      	mov	r0, r5
 80166d6:	f7f9 fbcc 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 80166da:	4606      	mov	r6, r0
 80166dc:	2800      	cmp	r0, #0
 80166de:	d138      	bne.n	8016752 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80166e0:	4628      	mov	r0, r5
 80166e2:	f7ff f907 	bl	80158f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80166e6:	6823      	ldr	r3, [r4, #0]
 80166e8:	6829      	ldr	r1, [r5, #0]
 80166ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80166ec:	686a      	ldr	r2, [r5, #4]
 80166ee:	4620      	mov	r0, r4
 80166f0:	4798      	blx	r3
 80166f2:	802e      	strh	r6, [r5, #0]
 80166f4:	806e      	strh	r6, [r5, #2]
 80166f6:	80ae      	strh	r6, [r5, #4]
 80166f8:	80ee      	strh	r6, [r5, #6]
 80166fa:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80166fe:	4dbb      	ldr	r5, [pc, #748]	; (80169ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016700:	4640      	mov	r0, r8
 8016702:	f7ff fbeb 	bl	8015edc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016706:	882e      	ldrh	r6, [r5, #0]
 8016708:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801670c:	4633      	mov	r3, r6
 801670e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016712:	42bb      	cmp	r3, r7
 8016714:	d224      	bcs.n	8016760 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016716:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801671a:	2907      	cmp	r1, #7
 801671c:	d816      	bhi.n	801674c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801671e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016722:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8016726:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801672a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801672e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016732:	1c4a      	adds	r2, r1, #1
 8016734:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8016738:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801673c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8016740:	f8a2 a002 	strh.w	sl, [r2, #2]
 8016744:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016748:	f8a2 c006 	strh.w	ip, [r2, #6]
 801674c:	3301      	adds	r3, #1
 801674e:	b29b      	uxth	r3, r3
 8016750:	e7df      	b.n	8016712 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8016752:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016756:	2b00      	cmp	r3, #0
 8016758:	d1cf      	bne.n	80166fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801675a:	b01b      	add	sp, #108	; 0x6c
 801675c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016760:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8016764:	42b3      	cmp	r3, r6
 8016766:	d90c      	bls.n	8016782 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8016768:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801676c:	6822      	ldr	r2, [r4, #0]
 801676e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8016772:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8016774:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8016778:	4620      	mov	r0, r4
 801677a:	3601      	adds	r6, #1
 801677c:	47b8      	blx	r7
 801677e:	b2b6      	uxth	r6, r6
 8016780:	e7ee      	b.n	8016760 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016782:	4a9b      	ldr	r2, [pc, #620]	; (80169f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016784:	6813      	ldr	r3, [r2, #0]
 8016786:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801678a:	2b01      	cmp	r3, #1
 801678c:	4691      	mov	r9, r2
 801678e:	f040 80e2 	bne.w	8016956 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8016792:	8829      	ldrh	r1, [r5, #0]
 8016794:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016798:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801679c:	33ae      	adds	r3, #174	; 0xae
 801679e:	2600      	movs	r6, #0
 80167a0:	428f      	cmp	r7, r1
 80167a2:	f103 0308 	add.w	r3, r3, #8
 80167a6:	dd0a      	ble.n	80167be <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80167a8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80167ac:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80167b0:	4402      	add	r2, r0
 80167b2:	b212      	sxth	r2, r2
 80167b4:	4296      	cmp	r6, r2
 80167b6:	bfb8      	it	lt
 80167b8:	4616      	movlt	r6, r2
 80167ba:	3101      	adds	r1, #1
 80167bc:	e7f0      	b.n	80167a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80167be:	4b8d      	ldr	r3, [pc, #564]	; (80169f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80167c0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80169f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80167c4:	881b      	ldrh	r3, [r3, #0]
 80167c6:	2b0f      	cmp	r3, #15
 80167c8:	bf88      	it	hi
 80167ca:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80167ce:	f04f 0300 	mov.w	r3, #0
 80167d2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80167d6:	bf98      	it	ls
 80167d8:	f04f 0b01 	movls.w	fp, #1
 80167dc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80167e0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80167e4:	4b82      	ldr	r3, [pc, #520]	; (80169f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80167e6:	4438      	add	r0, r7
 80167e8:	b207      	sxth	r7, r0
 80167ea:	6818      	ldr	r0, [r3, #0]
 80167ec:	42b7      	cmp	r7, r6
 80167ee:	6803      	ldr	r3, [r0, #0]
 80167f0:	f280 8083 	bge.w	80168fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80167f4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80167f8:	4798      	blx	r3
 80167fa:	eb07 030b 	add.w	r3, r7, fp
 80167fe:	4298      	cmp	r0, r3
 8016800:	da07      	bge.n	8016812 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016802:	42b0      	cmp	r0, r6
 8016804:	da05      	bge.n	8016812 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016806:	4287      	cmp	r7, r0
 8016808:	dd6c      	ble.n	80168e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801680a:	2f00      	cmp	r7, #0
 801680c:	dd6a      	ble.n	80168e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801680e:	4630      	mov	r0, r6
 8016810:	e004      	b.n	801681c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016812:	4287      	cmp	r7, r0
 8016814:	dcfb      	bgt.n	801680e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016816:	42b0      	cmp	r0, r6
 8016818:	bfa8      	it	ge
 801681a:	4630      	movge	r0, r6
 801681c:	4b76      	ldr	r3, [pc, #472]	; (80169f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801681e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016822:	1bc0      	subs	r0, r0, r7
 8016824:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016828:	882f      	ldrh	r7, [r5, #0]
 801682a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801682e:	2200      	movs	r2, #0
 8016830:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016834:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016838:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801683c:	42bb      	cmp	r3, r7
 801683e:	d9cd      	bls.n	80167dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016840:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016844:	ab07      	add	r3, sp, #28
 8016846:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801684a:	6851      	ldr	r1, [r2, #4]
 801684c:	c303      	stmia	r3!, {r0, r1}
 801684e:	a905      	add	r1, sp, #20
 8016850:	a807      	add	r0, sp, #28
 8016852:	f7ff f93e 	bl	8015ad2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016856:	2800      	cmp	r0, #0
 8016858:	d04c      	beq.n	80168f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801685a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801685e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016862:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016866:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801686a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801686e:	9302      	str	r3, [sp, #8]
 8016870:	4686      	mov	lr, r0
 8016872:	4290      	cmp	r0, r2
 8016874:	4450      	add	r0, sl
 8016876:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801687a:	bfb8      	it	lt
 801687c:	4696      	movlt	lr, r2
 801687e:	4452      	add	r2, sl
 8016880:	4299      	cmp	r1, r3
 8016882:	b280      	uxth	r0, r0
 8016884:	b292      	uxth	r2, r2
 8016886:	468c      	mov	ip, r1
 8016888:	fa0f fa82 	sxth.w	sl, r2
 801688c:	bfb8      	it	lt
 801688e:	469c      	movlt	ip, r3
 8016890:	b203      	sxth	r3, r0
 8016892:	4553      	cmp	r3, sl
 8016894:	bfb8      	it	lt
 8016896:	4602      	movlt	r2, r0
 8016898:	eba2 020e 	sub.w	r2, r2, lr
 801689c:	f8ad 2020 	strh.w	r2, [sp, #32]
 80168a0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80168a4:	9b02      	ldr	r3, [sp, #8]
 80168a6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80168aa:	4411      	add	r1, r2
 80168ac:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80168b0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80168b4:	4413      	add	r3, r2
 80168b6:	b289      	uxth	r1, r1
 80168b8:	b29b      	uxth	r3, r3
 80168ba:	b208      	sxth	r0, r1
 80168bc:	b21a      	sxth	r2, r3
 80168be:	4290      	cmp	r0, r2
 80168c0:	bfb8      	it	lt
 80168c2:	460b      	movlt	r3, r1
 80168c4:	eba3 030c 	sub.w	r3, r3, ip
 80168c8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80168cc:	a807      	add	r0, sp, #28
 80168ce:	f7f9 fad0 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 80168d2:	b920      	cbnz	r0, 80168de <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80168d4:	6823      	ldr	r3, [r4, #0]
 80168d6:	a907      	add	r1, sp, #28
 80168d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80168da:	4620      	mov	r0, r4
 80168dc:	4798      	blx	r3
 80168de:	3701      	adds	r7, #1
 80168e0:	b2bf      	uxth	r7, r7
 80168e2:	e7a9      	b.n	8016838 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80168e4:	f8d9 0000 	ldr.w	r0, [r9]
 80168e8:	6803      	ldr	r3, [r0, #0]
 80168ea:	2101      	movs	r1, #1
 80168ec:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80168f0:	4798      	blx	r3
 80168f2:	e773      	b.n	80167dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80168f4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80168f8:	e7e8      	b.n	80168cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80168fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80168fc:	4798      	blx	r3
 80168fe:	4b3f      	ldr	r3, [pc, #252]	; (80169fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016900:	781b      	ldrb	r3, [r3, #0]
 8016902:	2b00      	cmp	r3, #0
 8016904:	f43f af29 	beq.w	801675a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016908:	2300      	movs	r3, #0
 801690a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801690e:	882b      	ldrh	r3, [r5, #0]
 8016910:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016914:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016918:	42ab      	cmp	r3, r5
 801691a:	f4bf af1e 	bcs.w	801675a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801691e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016922:	2907      	cmp	r1, #7
 8016924:	d814      	bhi.n	8016950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016926:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801692a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801692e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016932:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016936:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801693a:	1c4a      	adds	r2, r1, #1
 801693c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016940:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016944:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016948:	f8a2 c002 	strh.w	ip, [r2, #2]
 801694c:	8097      	strh	r7, [r2, #4]
 801694e:	80d6      	strh	r6, [r2, #6]
 8016950:	3301      	adds	r3, #1
 8016952:	b29b      	uxth	r3, r3
 8016954:	e7e0      	b.n	8016918 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8016956:	2b02      	cmp	r3, #2
 8016958:	f040 8133 	bne.w	8016bc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801695c:	4b28      	ldr	r3, [pc, #160]	; (8016a00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801695e:	781b      	ldrb	r3, [r3, #0]
 8016960:	2b01      	cmp	r3, #1
 8016962:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016966:	f000 8098 	beq.w	8016a9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801696a:	882a      	ldrh	r2, [r5, #0]
 801696c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016970:	3201      	adds	r2, #1
 8016972:	b292      	uxth	r2, r2
 8016974:	2900      	cmp	r1, #0
 8016976:	d0c2      	beq.n	80168fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016978:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801697c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016980:	441e      	add	r6, r3
 8016982:	b236      	sxth	r6, r6
 8016984:	4694      	mov	ip, r2
 8016986:	f04f 0900 	mov.w	r9, #0
 801698a:	fa1f f38c 	uxth.w	r3, ip
 801698e:	4299      	cmp	r1, r3
 8016990:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016994:	f240 80bf 	bls.w	8016b16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016998:	4427      	add	r7, r4
 801699a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801699e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80169a2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80169a6:	4283      	cmp	r3, r0
 80169a8:	f340 80a1 	ble.w	8016aee <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80169ac:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80169b0:	4406      	add	r6, r0
 80169b2:	b236      	sxth	r6, r6
 80169b4:	429e      	cmp	r6, r3
 80169b6:	bfa8      	it	ge
 80169b8:	461e      	movge	r6, r3
 80169ba:	46e1      	mov	r9, ip
 80169bc:	f10c 0c01 	add.w	ip, ip, #1
 80169c0:	e7e3      	b.n	801698a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80169c2:	d10a      	bne.n	80169da <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80169c4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80169c8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80169cc:	4562      	cmp	r2, ip
 80169ce:	bfb8      	it	lt
 80169d0:	4662      	movlt	r2, ip
 80169d2:	4288      	cmp	r0, r1
 80169d4:	bfb8      	it	lt
 80169d6:	461f      	movlt	r7, r3
 80169d8:	e087      	b.n	8016aea <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80169da:	428a      	cmp	r2, r1
 80169dc:	bfb8      	it	lt
 80169de:	460a      	movlt	r2, r1
 80169e0:	e083      	b.n	8016aea <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80169e2:	bf00      	nop
 80169e4:	200132fc 	.word	0x200132fc
 80169e8:	20013308 	.word	0x20013308
 80169ec:	200000a4 	.word	0x200000a4
 80169f0:	200132bc 	.word	0x200132bc
 80169f4:	200132b2 	.word	0x200132b2
 80169f8:	200132b0 	.word	0x200132b0
 80169fc:	200132ba 	.word	0x200132ba
 8016a00:	200132b4 	.word	0x200132b4
 8016a04:	19a1      	adds	r1, r4, r6
 8016a06:	ab07      	add	r3, sp, #28
 8016a08:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8016a0c:	6849      	ldr	r1, [r1, #4]
 8016a0e:	c303      	stmia	r3!, {r0, r1}
 8016a10:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016a14:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016a18:	2b13      	cmp	r3, #19
 8016a1a:	bfd8      	it	le
 8016a1c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016a20:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016a24:	440b      	add	r3, r1
 8016a26:	1a9b      	subs	r3, r3, r2
 8016a28:	a807      	add	r0, sp, #28
 8016a2a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016a2e:	f7fe ff7b 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a32:	a807      	add	r0, sp, #28
 8016a34:	f7f9 fa1d 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016a38:	bb78      	cbnz	r0, 8016a9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016a3a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016a3e:	f8d9 0000 	ldr.w	r0, [r9]
 8016a42:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016a46:	f8d0 e000 	ldr.w	lr, [r0]
 8016a4a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016a4e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016a52:	f1bc 0f14 	cmp.w	ip, #20
 8016a56:	bfa8      	it	ge
 8016a58:	f04f 0c14 	movge.w	ip, #20
 8016a5c:	fa1f fc8c 	uxth.w	ip, ip
 8016a60:	f8cd c000 	str.w	ip, [sp]
 8016a64:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016a68:	47d8      	blx	fp
 8016a6a:	4683      	mov	fp, r0
 8016a6c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016a70:	a807      	add	r0, sp, #28
 8016a72:	f7fe ff3f 	bl	80158f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016a76:	6823      	ldr	r3, [r4, #0]
 8016a78:	4426      	add	r6, r4
 8016a7a:	4620      	mov	r0, r4
 8016a7c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a7e:	a907      	add	r1, sp, #28
 8016a80:	4798      	blx	r3
 8016a82:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016a86:	eba0 000b 	sub.w	r0, r0, fp
 8016a8a:	b200      	sxth	r0, r0
 8016a8c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016a90:	b918      	cbnz	r0, 8016a9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016a92:	b2b9      	uxth	r1, r7
 8016a94:	4650      	mov	r0, sl
 8016a96:	f7ff fa79 	bl	8015f8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016a9a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8016a9e:	f1bb 0f00 	cmp.w	fp, #0
 8016aa2:	f43f af2c 	beq.w	80168fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016aa6:	882b      	ldrh	r3, [r5, #0]
 8016aa8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8016aac:	3301      	adds	r3, #1
 8016aae:	b29b      	uxth	r3, r3
 8016ab0:	2700      	movs	r7, #0
 8016ab2:	b299      	uxth	r1, r3
 8016ab4:	458b      	cmp	fp, r1
 8016ab6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8016aba:	d9a3      	bls.n	8016a04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8016abc:	4426      	add	r6, r4
 8016abe:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016ac2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016ac6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016aca:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8016ace:	4408      	add	r0, r1
 8016ad0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016ad4:	4461      	add	r1, ip
 8016ad6:	b200      	sxth	r0, r0
 8016ad8:	b209      	sxth	r1, r1
 8016ada:	4288      	cmp	r0, r1
 8016adc:	f6bf af71 	bge.w	80169c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016ae0:	4584      	cmp	ip, r0
 8016ae2:	4662      	mov	r2, ip
 8016ae4:	461f      	mov	r7, r3
 8016ae6:	bfb8      	it	lt
 8016ae8:	4602      	movlt	r2, r0
 8016aea:	3301      	adds	r3, #1
 8016aec:	e7e1      	b.n	8016ab2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8016aee:	d10e      	bne.n	8016b0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016af0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016af4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016af8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8016afc:	4473      	add	r3, lr
 8016afe:	b21b      	sxth	r3, r3
 8016b00:	429e      	cmp	r6, r3
 8016b02:	bfa8      	it	ge
 8016b04:	461e      	movge	r6, r3
 8016b06:	4287      	cmp	r7, r0
 8016b08:	bfb8      	it	lt
 8016b0a:	46e1      	movlt	r9, ip
 8016b0c:	e756      	b.n	80169bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016b0e:	4286      	cmp	r6, r0
 8016b10:	bfa8      	it	ge
 8016b12:	4606      	movge	r6, r0
 8016b14:	e752      	b.n	80169bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016b16:	eb0a 0007 	add.w	r0, sl, r7
 8016b1a:	4427      	add	r7, r4
 8016b1c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016b20:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016b24:	f1bb 0f13 	cmp.w	fp, #19
 8016b28:	bfde      	ittt	le
 8016b2a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016b2e:	445e      	addle	r6, fp
 8016b30:	b236      	sxthle	r6, r6
 8016b32:	f7f9 f99e 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016b36:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016b3a:	2800      	cmp	r0, #0
 8016b3c:	f47f af1a 	bne.w	8016974 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016b40:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016b44:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016b48:	482a      	ldr	r0, [pc, #168]	; (8016bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8016b4a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016b4e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016b52:	6800      	ldr	r0, [r0, #0]
 8016b54:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016b58:	1ab6      	subs	r6, r6, r2
 8016b5a:	2e14      	cmp	r6, #20
 8016b5c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016b60:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016b64:	bfa8      	it	ge
 8016b66:	2614      	movge	r6, #20
 8016b68:	f8d0 c000 	ldr.w	ip, [r0]
 8016b6c:	b2b6      	uxth	r6, r6
 8016b6e:	fa1f fb8b 	uxth.w	fp, fp
 8016b72:	455e      	cmp	r6, fp
 8016b74:	bf94      	ite	ls
 8016b76:	9600      	strls	r6, [sp, #0]
 8016b78:	f8cd b000 	strhi.w	fp, [sp]
 8016b7c:	b292      	uxth	r2, r2
 8016b7e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016b82:	b29b      	uxth	r3, r3
 8016b84:	b289      	uxth	r1, r1
 8016b86:	47b0      	blx	r6
 8016b88:	6823      	ldr	r3, [r4, #0]
 8016b8a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016b8e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016b90:	a907      	add	r1, sp, #28
 8016b92:	4620      	mov	r0, r4
 8016b94:	4798      	blx	r3
 8016b96:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016b9a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016b9e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016ba2:	1a5b      	subs	r3, r3, r1
 8016ba4:	440a      	add	r2, r1
 8016ba6:	b21b      	sxth	r3, r3
 8016ba8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016bac:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016bb0:	2b00      	cmp	r3, #0
 8016bb2:	f47f aeda 	bne.w	801696a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016bb6:	fa1f f189 	uxth.w	r1, r9
 8016bba:	4650      	mov	r0, sl
 8016bbc:	f7ff f9e6 	bl	8015f8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016bc0:	e6d3      	b.n	801696a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016bc2:	882e      	ldrh	r6, [r5, #0]
 8016bc4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016bc8:	42b3      	cmp	r3, r6
 8016bca:	f67f ae98 	bls.w	80168fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016bce:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016bd2:	ab07      	add	r3, sp, #28
 8016bd4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016bd8:	6851      	ldr	r1, [r2, #4]
 8016bda:	c303      	stmia	r3!, {r0, r1}
 8016bdc:	a807      	add	r0, sp, #28
 8016bde:	f7f9 f948 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016be2:	b920      	cbnz	r0, 8016bee <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016be4:	6823      	ldr	r3, [r4, #0]
 8016be6:	a907      	add	r1, sp, #28
 8016be8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016bea:	4620      	mov	r0, r4
 8016bec:	4798      	blx	r3
 8016bee:	3601      	adds	r6, #1
 8016bf0:	b2b6      	uxth	r6, r6
 8016bf2:	e7e7      	b.n	8016bc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016bf4:	200132bc 	.word	0x200132bc

08016bf8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016bf8:	4b03      	ldr	r3, [pc, #12]	; (8016c08 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016bfa:	2200      	movs	r2, #0
 8016bfc:	801a      	strh	r2, [r3, #0]
 8016bfe:	805a      	strh	r2, [r3, #2]
 8016c00:	809a      	strh	r2, [r3, #4]
 8016c02:	80da      	strh	r2, [r3, #6]
 8016c04:	4770      	bx	lr
 8016c06:	bf00      	nop
 8016c08:	20013308 	.word	0x20013308

08016c0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c10:	4606      	mov	r6, r0
 8016c12:	b09d      	sub	sp, #116	; 0x74
 8016c14:	a803      	add	r0, sp, #12
 8016c16:	4614      	mov	r4, r2
 8016c18:	468a      	mov	sl, r1
 8016c1a:	461d      	mov	r5, r3
 8016c1c:	f000 ff08 	bl	8017a30 <_ZN8touchgfx12TextProviderC1Ev>
 8016c20:	6833      	ldr	r3, [r6, #0]
 8016c22:	4630      	mov	r0, r6
 8016c24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c26:	4798      	blx	r3
 8016c28:	6833      	ldr	r3, [r6, #0]
 8016c2a:	4607      	mov	r7, r0
 8016c2c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016c2e:	4630      	mov	r0, r6
 8016c30:	4798      	blx	r3
 8016c32:	462a      	mov	r2, r5
 8016c34:	9000      	str	r0, [sp, #0]
 8016c36:	4621      	mov	r1, r4
 8016c38:	463b      	mov	r3, r7
 8016c3a:	a803      	add	r0, sp, #12
 8016c3c:	f000 ff53 	bl	8017ae6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016c40:	2500      	movs	r5, #0
 8016c42:	462c      	mov	r4, r5
 8016c44:	46a9      	mov	r9, r5
 8016c46:	46a8      	mov	r8, r5
 8016c48:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016c4c:	2300      	movs	r3, #0
 8016c4e:	9302      	str	r3, [sp, #8]
 8016c50:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016c54:	429c      	cmp	r4, r3
 8016c56:	d002      	beq.n	8016c5e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016c58:	455c      	cmp	r4, fp
 8016c5a:	bf18      	it	ne
 8016c5c:	4625      	movne	r5, r4
 8016c5e:	ab02      	add	r3, sp, #8
 8016c60:	4632      	mov	r2, r6
 8016c62:	4651      	mov	r1, sl
 8016c64:	a803      	add	r0, sp, #12
 8016c66:	f001 fa41 	bl	80180ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016c6a:	4604      	mov	r4, r0
 8016c6c:	b108      	cbz	r0, 8016c72 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016c6e:	280a      	cmp	r0, #10
 8016c70:	d10a      	bne.n	8016c88 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016c72:	45c1      	cmp	r9, r8
 8016c74:	bf38      	it	cc
 8016c76:	46c1      	movcc	r9, r8
 8016c78:	f04f 0800 	mov.w	r8, #0
 8016c7c:	2c00      	cmp	r4, #0
 8016c7e:	d1e5      	bne.n	8016c4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016c80:	4648      	mov	r0, r9
 8016c82:	b01d      	add	sp, #116	; 0x74
 8016c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c88:	9a02      	ldr	r2, [sp, #8]
 8016c8a:	2a00      	cmp	r2, #0
 8016c8c:	d0de      	beq.n	8016c4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016c8e:	7b57      	ldrb	r7, [r2, #13]
 8016c90:	6833      	ldr	r3, [r6, #0]
 8016c92:	8894      	ldrh	r4, [r2, #4]
 8016c94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016c96:	007f      	lsls	r7, r7, #1
 8016c98:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016c9c:	7a97      	ldrb	r7, [r2, #10]
 8016c9e:	4629      	mov	r1, r5
 8016ca0:	4307      	orrs	r7, r0
 8016ca2:	4630      	mov	r0, r6
 8016ca4:	4798      	blx	r3
 8016ca6:	4438      	add	r0, r7
 8016ca8:	4480      	add	r8, r0
 8016caa:	fa1f f888 	uxth.w	r8, r8
 8016cae:	e7e5      	b.n	8016c7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016cb0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016cb0:	b508      	push	{r3, lr}
 8016cb2:	6803      	ldr	r3, [r0, #0]
 8016cb4:	68db      	ldr	r3, [r3, #12]
 8016cb6:	4798      	blx	r3
 8016cb8:	b128      	cbz	r0, 8016cc6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016cba:	7b43      	ldrb	r3, [r0, #13]
 8016cbc:	7a80      	ldrb	r0, [r0, #10]
 8016cbe:	005b      	lsls	r3, r3, #1
 8016cc0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016cc4:	4318      	orrs	r0, r3
 8016cc6:	bd08      	pop	{r3, pc}

08016cc8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016cc8:	b40e      	push	{r1, r2, r3}
 8016cca:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016ccc:	b09e      	sub	sp, #120	; 0x78
 8016cce:	ab23      	add	r3, sp, #140	; 0x8c
 8016cd0:	4605      	mov	r5, r0
 8016cd2:	f853 4b04 	ldr.w	r4, [r3], #4
 8016cd6:	9303      	str	r3, [sp, #12]
 8016cd8:	a805      	add	r0, sp, #20
 8016cda:	f000 fea9 	bl	8017a30 <_ZN8touchgfx12TextProviderC1Ev>
 8016cde:	682b      	ldr	r3, [r5, #0]
 8016ce0:	4628      	mov	r0, r5
 8016ce2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016ce4:	4798      	blx	r3
 8016ce6:	682b      	ldr	r3, [r5, #0]
 8016ce8:	4606      	mov	r6, r0
 8016cea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016cec:	4628      	mov	r0, r5
 8016cee:	4798      	blx	r3
 8016cf0:	4633      	mov	r3, r6
 8016cf2:	ae1e      	add	r6, sp, #120	; 0x78
 8016cf4:	4621      	mov	r1, r4
 8016cf6:	9000      	str	r0, [sp, #0]
 8016cf8:	9a03      	ldr	r2, [sp, #12]
 8016cfa:	2400      	movs	r4, #0
 8016cfc:	a805      	add	r0, sp, #20
 8016cfe:	f000 fef2 	bl	8017ae6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016d02:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016d06:	462a      	mov	r2, r5
 8016d08:	4633      	mov	r3, r6
 8016d0a:	4621      	mov	r1, r4
 8016d0c:	a805      	add	r0, sp, #20
 8016d0e:	f001 f9ed 	bl	80180ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016d12:	b1f0      	cbz	r0, 8016d52 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016d14:	280a      	cmp	r0, #10
 8016d16:	d018      	beq.n	8016d4a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016d18:	9f04      	ldr	r7, [sp, #16]
 8016d1a:	b1b7      	cbz	r7, 8016d4a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016d1c:	7b78      	ldrb	r0, [r7, #13]
 8016d1e:	7a3b      	ldrb	r3, [r7, #8]
 8016d20:	88ea      	ldrh	r2, [r5, #6]
 8016d22:	00c1      	lsls	r1, r0, #3
 8016d24:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016d28:	4319      	orrs	r1, r3
 8016d2a:	0643      	lsls	r3, r0, #25
 8016d2c:	bf44      	itt	mi
 8016d2e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016d32:	b219      	sxthmi	r1, r3
 8016d34:	0100      	lsls	r0, r0, #4
 8016d36:	79fb      	ldrb	r3, [r7, #7]
 8016d38:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016d3c:	4303      	orrs	r3, r0
 8016d3e:	4413      	add	r3, r2
 8016d40:	1a5b      	subs	r3, r3, r1
 8016d42:	b21b      	sxth	r3, r3
 8016d44:	429c      	cmp	r4, r3
 8016d46:	bfb8      	it	lt
 8016d48:	461c      	movlt	r4, r3
 8016d4a:	4633      	mov	r3, r6
 8016d4c:	462a      	mov	r2, r5
 8016d4e:	2100      	movs	r1, #0
 8016d50:	e7dc      	b.n	8016d0c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016d52:	b2a0      	uxth	r0, r4
 8016d54:	b01e      	add	sp, #120	; 0x78
 8016d56:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016d5a:	b003      	add	sp, #12
 8016d5c:	4770      	bx	lr

08016d5e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016d5e:	7a43      	ldrb	r3, [r0, #9]
 8016d60:	8880      	ldrh	r0, [r0, #4]
 8016d62:	4418      	add	r0, r3
 8016d64:	b280      	uxth	r0, r0
 8016d66:	4770      	bx	lr

08016d68 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016d68:	6803      	ldr	r3, [r0, #0]
 8016d6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016d6c:	4718      	bx	r3

08016d6e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016d6e:	b40e      	push	{r1, r2, r3}
 8016d70:	b570      	push	{r4, r5, r6, lr}
 8016d72:	b09d      	sub	sp, #116	; 0x74
 8016d74:	ab21      	add	r3, sp, #132	; 0x84
 8016d76:	4604      	mov	r4, r0
 8016d78:	f853 5b04 	ldr.w	r5, [r3], #4
 8016d7c:	9302      	str	r3, [sp, #8]
 8016d7e:	a803      	add	r0, sp, #12
 8016d80:	f000 fe56 	bl	8017a30 <_ZN8touchgfx12TextProviderC1Ev>
 8016d84:	6823      	ldr	r3, [r4, #0]
 8016d86:	4620      	mov	r0, r4
 8016d88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016d8a:	4798      	blx	r3
 8016d8c:	6823      	ldr	r3, [r4, #0]
 8016d8e:	4606      	mov	r6, r0
 8016d90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016d92:	4620      	mov	r0, r4
 8016d94:	4798      	blx	r3
 8016d96:	4633      	mov	r3, r6
 8016d98:	9000      	str	r0, [sp, #0]
 8016d9a:	9a02      	ldr	r2, [sp, #8]
 8016d9c:	4629      	mov	r1, r5
 8016d9e:	a803      	add	r0, sp, #12
 8016da0:	f000 fea1 	bl	8017ae6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016da4:	a803      	add	r0, sp, #12
 8016da6:	f001 fa6f 	bl	8018288 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016daa:	2401      	movs	r4, #1
 8016dac:	b2a3      	uxth	r3, r4
 8016dae:	b140      	cbz	r0, 8016dc2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016db0:	280a      	cmp	r0, #10
 8016db2:	bf08      	it	eq
 8016db4:	3301      	addeq	r3, #1
 8016db6:	a803      	add	r0, sp, #12
 8016db8:	bf08      	it	eq
 8016dba:	b21c      	sxtheq	r4, r3
 8016dbc:	f001 fa64 	bl	8018288 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016dc0:	e7f4      	b.n	8016dac <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016dc2:	4618      	mov	r0, r3
 8016dc4:	b01d      	add	sp, #116	; 0x74
 8016dc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016dca:	b003      	add	sp, #12
 8016dcc:	4770      	bx	lr

08016dce <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016dce:	b40e      	push	{r1, r2, r3}
 8016dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016dd2:	b09e      	sub	sp, #120	; 0x78
 8016dd4:	ab23      	add	r3, sp, #140	; 0x8c
 8016dd6:	4604      	mov	r4, r0
 8016dd8:	f853 5b04 	ldr.w	r5, [r3], #4
 8016ddc:	9303      	str	r3, [sp, #12]
 8016dde:	a805      	add	r0, sp, #20
 8016de0:	f000 fe26 	bl	8017a30 <_ZN8touchgfx12TextProviderC1Ev>
 8016de4:	6823      	ldr	r3, [r4, #0]
 8016de6:	4620      	mov	r0, r4
 8016de8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016dea:	4798      	blx	r3
 8016dec:	6823      	ldr	r3, [r4, #0]
 8016dee:	4606      	mov	r6, r0
 8016df0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016df2:	4620      	mov	r0, r4
 8016df4:	4798      	blx	r3
 8016df6:	4633      	mov	r3, r6
 8016df8:	4629      	mov	r1, r5
 8016dfa:	9000      	str	r0, [sp, #0]
 8016dfc:	9a03      	ldr	r2, [sp, #12]
 8016dfe:	a805      	add	r0, sp, #20
 8016e00:	ad1e      	add	r5, sp, #120	; 0x78
 8016e02:	f000 fe70 	bl	8017ae6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016e06:	2100      	movs	r1, #0
 8016e08:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016e0c:	4622      	mov	r2, r4
 8016e0e:	462b      	mov	r3, r5
 8016e10:	a805      	add	r0, sp, #20
 8016e12:	f001 f96b 	bl	80180ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016e16:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016e1a:	b1d8      	cbz	r0, 8016e54 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016e1c:	280a      	cmp	r0, #10
 8016e1e:	d012      	beq.n	8016e46 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016e20:	9804      	ldr	r0, [sp, #16]
 8016e22:	b180      	cbz	r0, 8016e46 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016e24:	7b47      	ldrb	r7, [r0, #13]
 8016e26:	88e2      	ldrh	r2, [r4, #6]
 8016e28:	00fb      	lsls	r3, r7, #3
 8016e2a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016e2e:	7a03      	ldrb	r3, [r0, #8]
 8016e30:	430b      	orrs	r3, r1
 8016e32:	0679      	lsls	r1, r7, #25
 8016e34:	bf44      	itt	mi
 8016e36:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e3a:	b21b      	sxthmi	r3, r3
 8016e3c:	1ad3      	subs	r3, r2, r3
 8016e3e:	b21b      	sxth	r3, r3
 8016e40:	429e      	cmp	r6, r3
 8016e42:	bfa8      	it	ge
 8016e44:	461e      	movge	r6, r3
 8016e46:	462b      	mov	r3, r5
 8016e48:	4622      	mov	r2, r4
 8016e4a:	2100      	movs	r1, #0
 8016e4c:	a805      	add	r0, sp, #20
 8016e4e:	f001 f94d 	bl	80180ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016e52:	e7e2      	b.n	8016e1a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016e54:	4630      	mov	r0, r6
 8016e56:	b01e      	add	sp, #120	; 0x78
 8016e58:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016e5c:	b003      	add	sp, #12
 8016e5e:	4770      	bx	lr

08016e60 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016e60:	b513      	push	{r0, r1, r4, lr}
 8016e62:	6803      	ldr	r3, [r0, #0]
 8016e64:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016e68:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016e6c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016e70:	2400      	movs	r4, #0
 8016e72:	9400      	str	r4, [sp, #0]
 8016e74:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016e78:	691b      	ldr	r3, [r3, #16]
 8016e7a:	4669      	mov	r1, sp
 8016e7c:	4798      	blx	r3
 8016e7e:	b002      	add	sp, #8
 8016e80:	bd10      	pop	{r4, pc}

08016e82 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016e82:	b538      	push	{r3, r4, r5, lr}
 8016e84:	680b      	ldr	r3, [r1, #0]
 8016e86:	460c      	mov	r4, r1
 8016e88:	68db      	ldr	r3, [r3, #12]
 8016e8a:	4605      	mov	r5, r0
 8016e8c:	4798      	blx	r3
 8016e8e:	6823      	ldr	r3, [r4, #0]
 8016e90:	4620      	mov	r0, r4
 8016e92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016e94:	4629      	mov	r1, r5
 8016e96:	4798      	blx	r3
 8016e98:	4628      	mov	r0, r5
 8016e9a:	bd38      	pop	{r3, r4, r5, pc}

08016e9c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8016e9c:	b410      	push	{r4}
 8016e9e:	880a      	ldrh	r2, [r1, #0]
 8016ea0:	8884      	ldrh	r4, [r0, #4]
 8016ea2:	4422      	add	r2, r4
 8016ea4:	800a      	strh	r2, [r1, #0]
 8016ea6:	88c4      	ldrh	r4, [r0, #6]
 8016ea8:	884a      	ldrh	r2, [r1, #2]
 8016eaa:	4422      	add	r2, r4
 8016eac:	804a      	strh	r2, [r1, #2]
 8016eae:	6940      	ldr	r0, [r0, #20]
 8016eb0:	b120      	cbz	r0, 8016ebc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016eb2:	6803      	ldr	r3, [r0, #0]
 8016eb4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016eb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016eba:	4718      	bx	r3
 8016ebc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016ec0:	4770      	bx	lr

08016ec2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016ec2:	b570      	push	{r4, r5, r6, lr}
 8016ec4:	8882      	ldrh	r2, [r0, #4]
 8016ec6:	880b      	ldrh	r3, [r1, #0]
 8016ec8:	4413      	add	r3, r2
 8016eca:	800b      	strh	r3, [r1, #0]
 8016ecc:	88c2      	ldrh	r2, [r0, #6]
 8016ece:	884b      	ldrh	r3, [r1, #2]
 8016ed0:	460c      	mov	r4, r1
 8016ed2:	4413      	add	r3, r2
 8016ed4:	804b      	strh	r3, [r1, #2]
 8016ed6:	4605      	mov	r5, r0
 8016ed8:	1d01      	adds	r1, r0, #4
 8016eda:	4620      	mov	r0, r4
 8016edc:	f7f8 ff86 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 8016ee0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016ee4:	2b00      	cmp	r3, #0
 8016ee6:	dd0b      	ble.n	8016f00 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016ee8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016eec:	2b00      	cmp	r3, #0
 8016eee:	dd07      	ble.n	8016f00 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016ef0:	6968      	ldr	r0, [r5, #20]
 8016ef2:	b128      	cbz	r0, 8016f00 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016ef4:	6803      	ldr	r3, [r0, #0]
 8016ef6:	4621      	mov	r1, r4
 8016ef8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016efa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016efe:	4718      	bx	r3
 8016f00:	bd70      	pop	{r4, r5, r6, pc}
	...

08016f04 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016f04:	b570      	push	{r4, r5, r6, lr}
 8016f06:	8882      	ldrh	r2, [r0, #4]
 8016f08:	880b      	ldrh	r3, [r1, #0]
 8016f0a:	4413      	add	r3, r2
 8016f0c:	800b      	strh	r3, [r1, #0]
 8016f0e:	88c2      	ldrh	r2, [r0, #6]
 8016f10:	884b      	ldrh	r3, [r1, #2]
 8016f12:	460c      	mov	r4, r1
 8016f14:	4413      	add	r3, r2
 8016f16:	804b      	strh	r3, [r1, #2]
 8016f18:	4605      	mov	r5, r0
 8016f1a:	1d01      	adds	r1, r0, #4
 8016f1c:	4620      	mov	r0, r4
 8016f1e:	f7f8 ff65 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 8016f22:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016f26:	2b00      	cmp	r3, #0
 8016f28:	dd19      	ble.n	8016f5e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016f2a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016f2e:	2b00      	cmp	r3, #0
 8016f30:	dd15      	ble.n	8016f5e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016f32:	6968      	ldr	r0, [r5, #20]
 8016f34:	b128      	cbz	r0, 8016f42 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016f36:	6803      	ldr	r3, [r0, #0]
 8016f38:	4621      	mov	r1, r4
 8016f3a:	691b      	ldr	r3, [r3, #16]
 8016f3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f40:	4718      	bx	r3
 8016f42:	4b07      	ldr	r3, [pc, #28]	; (8016f60 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016f44:	681b      	ldr	r3, [r3, #0]
 8016f46:	3304      	adds	r3, #4
 8016f48:	429d      	cmp	r5, r3
 8016f4a:	d108      	bne.n	8016f5e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016f4c:	f7fe fea0 	bl	8015c90 <_ZN8touchgfx11Application11getInstanceEv>
 8016f50:	6803      	ldr	r3, [r0, #0]
 8016f52:	6821      	ldr	r1, [r4, #0]
 8016f54:	6862      	ldr	r2, [r4, #4]
 8016f56:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016f58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f5c:	4718      	bx	r3
 8016f5e:	bd70      	pop	{r4, r5, r6, pc}
 8016f60:	20013300 	.word	0x20013300

08016f64 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016f64:	b570      	push	{r4, r5, r6, lr}
 8016f66:	4604      	mov	r4, r0
 8016f68:	4616      	mov	r6, r2
 8016f6a:	460d      	mov	r5, r1
 8016f6c:	b901      	cbnz	r1, 8016f70 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016f6e:	b192      	cbz	r2, 8016f96 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016f70:	6823      	ldr	r3, [r4, #0]
 8016f72:	4620      	mov	r0, r4
 8016f74:	699b      	ldr	r3, [r3, #24]
 8016f76:	4798      	blx	r3
 8016f78:	88e2      	ldrh	r2, [r4, #6]
 8016f7a:	88a1      	ldrh	r1, [r4, #4]
 8016f7c:	4432      	add	r2, r6
 8016f7e:	4429      	add	r1, r5
 8016f80:	4620      	mov	r0, r4
 8016f82:	b212      	sxth	r2, r2
 8016f84:	b209      	sxth	r1, r1
 8016f86:	f7eb fce7 	bl	8002958 <_ZN8touchgfx8Drawable5setXYEss>
 8016f8a:	6823      	ldr	r3, [r4, #0]
 8016f8c:	4620      	mov	r0, r4
 8016f8e:	699b      	ldr	r3, [r3, #24]
 8016f90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f94:	4718      	bx	r3
 8016f96:	bd70      	pop	{r4, r5, r6, pc}

08016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016f98:	b510      	push	{r4, lr}
 8016f9a:	4604      	mov	r4, r0
 8016f9c:	4608      	mov	r0, r1
 8016f9e:	2300      	movs	r3, #0
 8016fa0:	8023      	strh	r3, [r4, #0]
 8016fa2:	8063      	strh	r3, [r4, #2]
 8016fa4:	6803      	ldr	r3, [r0, #0]
 8016fa6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016faa:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8016fae:	80a1      	strh	r1, [r4, #4]
 8016fb0:	80e2      	strh	r2, [r4, #6]
 8016fb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fb4:	4621      	mov	r1, r4
 8016fb6:	4798      	blx	r3
 8016fb8:	4620      	mov	r0, r4
 8016fba:	bd10      	pop	{r4, pc}

08016fbc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8016fbc:	b530      	push	{r4, r5, lr}
 8016fbe:	8083      	strh	r3, [r0, #4]
 8016fc0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8016fc4:	80c3      	strh	r3, [r0, #6]
 8016fc6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8016fca:	7203      	strb	r3, [r0, #8]
 8016fcc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016fd0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8016fd4:	7243      	strb	r3, [r0, #9]
 8016fd6:	7a83      	ldrb	r3, [r0, #10]
 8016fd8:	6141      	str	r1, [r0, #20]
 8016fda:	f365 0306 	bfi	r3, r5, #0, #7
 8016fde:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8016fe2:	8302      	strh	r2, [r0, #24]
 8016fe4:	f365 13c7 	bfi	r3, r5, #7, #1
 8016fe8:	7283      	strb	r3, [r0, #10]
 8016fea:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8016fee:	72c3      	strb	r3, [r0, #11]
 8016ff0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8016ff4:	7303      	strb	r3, [r0, #12]
 8016ff6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016ffa:	81c3      	strh	r3, [r0, #14]
 8016ffc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017000:	8203      	strh	r3, [r0, #16]
 8017002:	4b01      	ldr	r3, [pc, #4]	; (8017008 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8017004:	6003      	str	r3, [r0, #0]
 8017006:	bd30      	pop	{r4, r5, pc}
 8017008:	0802eefc 	.word	0x0802eefc

0801700c <_ZNK8touchgfx9ConstFont4findEt>:
 801700c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801700e:	6944      	ldr	r4, [r0, #20]
 8017010:	b3bc      	cbz	r4, 8017082 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017012:	88a3      	ldrh	r3, [r4, #4]
 8017014:	8b02      	ldrh	r2, [r0, #24]
 8017016:	1acb      	subs	r3, r1, r3
 8017018:	f102 32ff 	add.w	r2, r2, #4294967295
 801701c:	d431      	bmi.n	8017082 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801701e:	4293      	cmp	r3, r2
 8017020:	dd0c      	ble.n	801703c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017022:	230e      	movs	r3, #14
 8017024:	fb03 4302 	mla	r3, r3, r2, r4
 8017028:	889b      	ldrh	r3, [r3, #4]
 801702a:	1a5b      	subs	r3, r3, r1
 801702c:	1ad3      	subs	r3, r2, r3
 801702e:	429a      	cmp	r2, r3
 8017030:	db27      	blt.n	8017082 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017032:	2b00      	cmp	r3, #0
 8017034:	bfbc      	itt	lt
 8017036:	2302      	movlt	r3, #2
 8017038:	fb92 f3f3 	sdivlt	r3, r2, r3
 801703c:	2500      	movs	r5, #0
 801703e:	260e      	movs	r6, #14
 8017040:	4295      	cmp	r5, r2
 8017042:	dc1e      	bgt.n	8017082 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017044:	fb06 4003 	mla	r0, r6, r3, r4
 8017048:	8887      	ldrh	r7, [r0, #4]
 801704a:	42b9      	cmp	r1, r7
 801704c:	d01a      	beq.n	8017084 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801704e:	d20d      	bcs.n	801706c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017050:	1e5a      	subs	r2, r3, #1
 8017052:	4295      	cmp	r5, r2
 8017054:	dc15      	bgt.n	8017082 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017056:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801705a:	1a5b      	subs	r3, r3, r1
 801705c:	1ad3      	subs	r3, r2, r3
 801705e:	429a      	cmp	r2, r3
 8017060:	db0f      	blt.n	8017082 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017062:	429d      	cmp	r5, r3
 8017064:	ddec      	ble.n	8017040 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017066:	1953      	adds	r3, r2, r5
 8017068:	105b      	asrs	r3, r3, #1
 801706a:	e7e9      	b.n	8017040 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801706c:	1c5d      	adds	r5, r3, #1
 801706e:	42aa      	cmp	r2, r5
 8017070:	db07      	blt.n	8017082 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017072:	8a43      	ldrh	r3, [r0, #18]
 8017074:	1acb      	subs	r3, r1, r3
 8017076:	442b      	add	r3, r5
 8017078:	429d      	cmp	r5, r3
 801707a:	dc02      	bgt.n	8017082 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801707c:	429a      	cmp	r2, r3
 801707e:	dadf      	bge.n	8017040 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017080:	e7f1      	b.n	8017066 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017082:	2000      	movs	r0, #0
 8017084:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017086 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017086:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017088:	4604      	mov	r4, r0
 801708a:	4617      	mov	r7, r2
 801708c:	461e      	mov	r6, r3
 801708e:	b911      	cbnz	r1, 8017096 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017090:	2500      	movs	r5, #0
 8017092:	4628      	mov	r0, r5
 8017094:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017096:	290a      	cmp	r1, #10
 8017098:	d0fa      	beq.n	8017090 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801709a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801709e:	4291      	cmp	r1, r2
 80170a0:	d0f6      	beq.n	8017090 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80170a2:	f242 020b 	movw	r2, #8203	; 0x200b
 80170a6:	4291      	cmp	r1, r2
 80170a8:	d0f2      	beq.n	8017090 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80170aa:	f7ff ffaf 	bl	801700c <_ZNK8touchgfx9ConstFont4findEt>
 80170ae:	4605      	mov	r5, r0
 80170b0:	b950      	cbnz	r0, 80170c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80170b2:	6823      	ldr	r3, [r4, #0]
 80170b4:	4620      	mov	r0, r4
 80170b6:	691b      	ldr	r3, [r3, #16]
 80170b8:	4798      	blx	r3
 80170ba:	4601      	mov	r1, r0
 80170bc:	4620      	mov	r0, r4
 80170be:	f7ff ffa5 	bl	801700c <_ZNK8touchgfx9ConstFont4findEt>
 80170c2:	4605      	mov	r5, r0
 80170c4:	2800      	cmp	r0, #0
 80170c6:	d0e3      	beq.n	8017090 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80170c8:	6823      	ldr	r3, [r4, #0]
 80170ca:	4629      	mov	r1, r5
 80170cc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80170ce:	4620      	mov	r0, r4
 80170d0:	4798      	blx	r3
 80170d2:	6038      	str	r0, [r7, #0]
 80170d4:	6823      	ldr	r3, [r4, #0]
 80170d6:	4620      	mov	r0, r4
 80170d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80170da:	4798      	blx	r3
 80170dc:	7030      	strb	r0, [r6, #0]
 80170de:	e7d8      	b.n	8017092 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080170e0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80170e0:	b538      	push	{r3, r4, r5, lr}
 80170e2:	4605      	mov	r5, r0
 80170e4:	f002 fb94 	bl	8019810 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80170e8:	4604      	mov	r4, r0
 80170ea:	4628      	mov	r0, r5
 80170ec:	f002 fad4 	bl	8019698 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80170f0:	2800      	cmp	r0, #0
 80170f2:	bf14      	ite	ne
 80170f4:	2002      	movne	r0, #2
 80170f6:	2000      	moveq	r0, #0
 80170f8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80170fc:	b280      	uxth	r0, r0
 80170fe:	bd38      	pop	{r3, r4, r5, pc}

08017100 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017100:	b538      	push	{r3, r4, r5, lr}
 8017102:	4605      	mov	r5, r0
 8017104:	f002 fb84 	bl	8019810 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017108:	4604      	mov	r4, r0
 801710a:	4628      	mov	r0, r5
 801710c:	f002 fac4 	bl	8019698 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017110:	2800      	cmp	r0, #0
 8017112:	bf14      	ite	ne
 8017114:	2002      	movne	r0, #2
 8017116:	2000      	moveq	r0, #0
 8017118:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801711c:	f040 0001 	orr.w	r0, r0, #1
 8017120:	b280      	uxth	r0, r0
 8017122:	bd38      	pop	{r3, r4, r5, pc}

08017124 <_ZN8touchgfx4clzuEm>:
 8017124:	4603      	mov	r3, r0
 8017126:	b1c8      	cbz	r0, 801715c <_ZN8touchgfx4clzuEm+0x38>
 8017128:	0c02      	lsrs	r2, r0, #16
 801712a:	0412      	lsls	r2, r2, #16
 801712c:	b9a2      	cbnz	r2, 8017158 <_ZN8touchgfx4clzuEm+0x34>
 801712e:	0403      	lsls	r3, r0, #16
 8017130:	2010      	movs	r0, #16
 8017132:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017136:	bf04      	itt	eq
 8017138:	021b      	lsleq	r3, r3, #8
 801713a:	3008      	addeq	r0, #8
 801713c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017140:	bf04      	itt	eq
 8017142:	011b      	lsleq	r3, r3, #4
 8017144:	3004      	addeq	r0, #4
 8017146:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801714a:	bf04      	itt	eq
 801714c:	009b      	lsleq	r3, r3, #2
 801714e:	3002      	addeq	r0, #2
 8017150:	2b00      	cmp	r3, #0
 8017152:	db04      	blt.n	801715e <_ZN8touchgfx4clzuEm+0x3a>
 8017154:	3001      	adds	r0, #1
 8017156:	4770      	bx	lr
 8017158:	2000      	movs	r0, #0
 801715a:	e7ea      	b.n	8017132 <_ZN8touchgfx4clzuEm+0xe>
 801715c:	2020      	movs	r0, #32
 801715e:	4770      	bx	lr

08017160 <_ZN8touchgfx7muldivuEmmmRm>:
 8017160:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017164:	460f      	mov	r7, r1
 8017166:	4615      	mov	r5, r2
 8017168:	461e      	mov	r6, r3
 801716a:	4601      	mov	r1, r0
 801716c:	b100      	cbz	r0, 8017170 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801716e:	b927      	cbnz	r7, 801717a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017170:	2000      	movs	r0, #0
 8017172:	6030      	str	r0, [r6, #0]
 8017174:	b002      	add	sp, #8
 8017176:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801717a:	f7ff ffd3 	bl	8017124 <_ZN8touchgfx4clzuEm>
 801717e:	b980      	cbnz	r0, 80171a2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017180:	4638      	mov	r0, r7
 8017182:	f7ff ffcf 	bl	8017124 <_ZN8touchgfx4clzuEm>
 8017186:	2800      	cmp	r0, #0
 8017188:	dd05      	ble.n	8017196 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801718a:	4633      	mov	r3, r6
 801718c:	462a      	mov	r2, r5
 801718e:	4638      	mov	r0, r7
 8017190:	f7ff ffe6 	bl	8017160 <_ZN8touchgfx7muldivuEmmmRm>
 8017194:	e7ee      	b.n	8017174 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017196:	f04f 33ff 	mov.w	r3, #4294967295
 801719a:	6033      	str	r3, [r6, #0]
 801719c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80171a0:	e7e8      	b.n	8017174 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80171a2:	fa37 f800 	lsrs.w	r8, r7, r0
 80171a6:	fb07 f301 	mul.w	r3, r7, r1
 80171aa:	d105      	bne.n	80171b8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80171ac:	fbb3 f0f5 	udiv	r0, r3, r5
 80171b0:	fb05 3510 	mls	r5, r5, r0, r3
 80171b4:	6035      	str	r5, [r6, #0]
 80171b6:	e7dd      	b.n	8017174 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80171b8:	2301      	movs	r3, #1
 80171ba:	fa01 fa00 	lsl.w	sl, r1, r0
 80171be:	fa03 f000 	lsl.w	r0, r3, r0
 80171c2:	3801      	subs	r0, #1
 80171c4:	462a      	mov	r2, r5
 80171c6:	4633      	mov	r3, r6
 80171c8:	4038      	ands	r0, r7
 80171ca:	f7ff ffc9 	bl	8017160 <_ZN8touchgfx7muldivuEmmmRm>
 80171ce:	fbba f9f5 	udiv	r9, sl, r5
 80171d2:	462a      	mov	r2, r5
 80171d4:	4607      	mov	r7, r0
 80171d6:	ab01      	add	r3, sp, #4
 80171d8:	fb05 a119 	mls	r1, r5, r9, sl
 80171dc:	4640      	mov	r0, r8
 80171de:	f7ff ffbf 	bl	8017160 <_ZN8touchgfx7muldivuEmmmRm>
 80171e2:	9b01      	ldr	r3, [sp, #4]
 80171e4:	6832      	ldr	r2, [r6, #0]
 80171e6:	fb08 f409 	mul.w	r4, r8, r9
 80171ea:	441a      	add	r2, r3
 80171ec:	fbb2 f3f5 	udiv	r3, r2, r5
 80171f0:	441c      	add	r4, r3
 80171f2:	443c      	add	r4, r7
 80171f4:	4420      	add	r0, r4
 80171f6:	fb05 2513 	mls	r5, r5, r3, r2
 80171fa:	e7db      	b.n	80171b4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080171fc <_ZN8touchgfx6muldivElllRl>:
 80171fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80171fe:	2800      	cmp	r0, #0
 8017200:	bfba      	itte	lt
 8017202:	4240      	neglt	r0, r0
 8017204:	f04f 34ff 	movlt.w	r4, #4294967295
 8017208:	2401      	movge	r4, #1
 801720a:	2900      	cmp	r1, #0
 801720c:	bfbc      	itt	lt
 801720e:	4249      	neglt	r1, r1
 8017210:	4264      	neglt	r4, r4
 8017212:	2a00      	cmp	r2, #0
 8017214:	bfb6      	itet	lt
 8017216:	4265      	neglt	r5, r4
 8017218:	4625      	movge	r5, r4
 801721a:	4252      	neglt	r2, r2
 801721c:	4288      	cmp	r0, r1
 801721e:	461e      	mov	r6, r3
 8017220:	bfc2      	ittt	gt
 8017222:	4603      	movgt	r3, r0
 8017224:	4608      	movgt	r0, r1
 8017226:	4619      	movgt	r1, r3
 8017228:	ab01      	add	r3, sp, #4
 801722a:	f7ff ff99 	bl	8017160 <_ZN8touchgfx7muldivuEmmmRm>
 801722e:	9b01      	ldr	r3, [sp, #4]
 8017230:	4368      	muls	r0, r5
 8017232:	435c      	muls	r4, r3
 8017234:	6034      	str	r4, [r6, #0]
 8017236:	b002      	add	sp, #8
 8017238:	bd70      	pop	{r4, r5, r6, pc}

0801723a <_ZN8touchgfx6muldivElll>:
 801723a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801723c:	4606      	mov	r6, r0
 801723e:	ab01      	add	r3, sp, #4
 8017240:	460d      	mov	r5, r1
 8017242:	4614      	mov	r4, r2
 8017244:	f7ff ffda 	bl	80171fc <_ZN8touchgfx6muldivElllRl>
 8017248:	2e00      	cmp	r6, #0
 801724a:	db20      	blt.n	801728e <_ZN8touchgfx6muldivElll+0x54>
 801724c:	bf14      	ite	ne
 801724e:	2301      	movne	r3, #1
 8017250:	2300      	moveq	r3, #0
 8017252:	2d00      	cmp	r5, #0
 8017254:	db1e      	blt.n	8017294 <_ZN8touchgfx6muldivElll+0x5a>
 8017256:	bf14      	ite	ne
 8017258:	2201      	movne	r2, #1
 801725a:	2200      	moveq	r2, #0
 801725c:	2c00      	cmp	r4, #0
 801725e:	fb03 f202 	mul.w	r2, r3, r2
 8017262:	db1a      	blt.n	801729a <_ZN8touchgfx6muldivElll+0x60>
 8017264:	bf14      	ite	ne
 8017266:	2301      	movne	r3, #1
 8017268:	2300      	moveq	r3, #0
 801726a:	4353      	muls	r3, r2
 801726c:	2b01      	cmp	r3, #1
 801726e:	d117      	bne.n	80172a0 <_ZN8touchgfx6muldivElll+0x66>
 8017270:	9b01      	ldr	r3, [sp, #4]
 8017272:	2c00      	cmp	r4, #0
 8017274:	bfb8      	it	lt
 8017276:	4264      	neglt	r4, r4
 8017278:	2b00      	cmp	r3, #0
 801727a:	f104 0401 	add.w	r4, r4, #1
 801727e:	bfb8      	it	lt
 8017280:	425b      	neglt	r3, r3
 8017282:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017286:	db00      	blt.n	801728a <_ZN8touchgfx6muldivElll+0x50>
 8017288:	3001      	adds	r0, #1
 801728a:	b002      	add	sp, #8
 801728c:	bd70      	pop	{r4, r5, r6, pc}
 801728e:	f04f 33ff 	mov.w	r3, #4294967295
 8017292:	e7de      	b.n	8017252 <_ZN8touchgfx6muldivElll+0x18>
 8017294:	f04f 32ff 	mov.w	r2, #4294967295
 8017298:	e7e0      	b.n	801725c <_ZN8touchgfx6muldivElll+0x22>
 801729a:	f04f 33ff 	mov.w	r3, #4294967295
 801729e:	e7e4      	b.n	801726a <_ZN8touchgfx6muldivElll+0x30>
 80172a0:	3301      	adds	r3, #1
 80172a2:	d1f2      	bne.n	801728a <_ZN8touchgfx6muldivElll+0x50>
 80172a4:	9b01      	ldr	r3, [sp, #4]
 80172a6:	2c00      	cmp	r4, #0
 80172a8:	bfb8      	it	lt
 80172aa:	4264      	neglt	r4, r4
 80172ac:	2b00      	cmp	r3, #0
 80172ae:	bfb8      	it	lt
 80172b0:	425b      	neglt	r3, r3
 80172b2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80172b6:	bfc8      	it	gt
 80172b8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80172bc:	e7e5      	b.n	801728a <_ZN8touchgfx6muldivElll+0x50>

080172be <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80172be:	2000      	movs	r0, #0
 80172c0:	4770      	bx	lr

080172c2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80172c2:	2001      	movs	r0, #1
 80172c4:	4770      	bx	lr

080172c6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80172c6:	2002      	movs	r0, #2
 80172c8:	4770      	bx	lr

080172ca <_ZN8touchgfx6ScreenD1Ev>:
 80172ca:	4770      	bx	lr

080172cc <_ZN8touchgfx12GestureEventD1Ev>:
 80172cc:	4770      	bx	lr

080172ce <_ZN8touchgfx9DragEventD1Ev>:
 80172ce:	4770      	bx	lr

080172d0 <_ZN8touchgfx10ClickEventD1Ev>:
 80172d0:	4770      	bx	lr

080172d2 <_ZN8touchgfx10ClickEventD0Ev>:
 80172d2:	b510      	push	{r4, lr}
 80172d4:	210c      	movs	r1, #12
 80172d6:	4604      	mov	r4, r0
 80172d8:	f012 fd8f 	bl	8029dfa <_ZdlPvj>
 80172dc:	4620      	mov	r0, r4
 80172de:	bd10      	pop	{r4, pc}

080172e0 <_ZN8touchgfx9DragEventD0Ev>:
 80172e0:	b510      	push	{r4, lr}
 80172e2:	2110      	movs	r1, #16
 80172e4:	4604      	mov	r4, r0
 80172e6:	f012 fd88 	bl	8029dfa <_ZdlPvj>
 80172ea:	4620      	mov	r0, r4
 80172ec:	bd10      	pop	{r4, pc}

080172ee <_ZN8touchgfx12GestureEventD0Ev>:
 80172ee:	b510      	push	{r4, lr}
 80172f0:	210c      	movs	r1, #12
 80172f2:	4604      	mov	r4, r0
 80172f4:	f012 fd81 	bl	8029dfa <_ZdlPvj>
 80172f8:	4620      	mov	r0, r4
 80172fa:	bd10      	pop	{r4, pc}

080172fc <_ZN8touchgfx6ScreenD0Ev>:
 80172fc:	b510      	push	{r4, lr}
 80172fe:	213c      	movs	r1, #60	; 0x3c
 8017300:	4604      	mov	r4, r0
 8017302:	f012 fd7a 	bl	8029dfa <_ZdlPvj>
 8017306:	4620      	mov	r0, r4
 8017308:	bd10      	pop	{r4, pc}
	...

0801730c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801730c:	b530      	push	{r4, r5, lr}
 801730e:	460d      	mov	r5, r1
 8017310:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017312:	b087      	sub	sp, #28
 8017314:	4604      	mov	r4, r0
 8017316:	b301      	cbz	r1, 801735a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017318:	a801      	add	r0, sp, #4
 801731a:	f7ff fe3d 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801731e:	892a      	ldrh	r2, [r5, #8]
 8017320:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017324:	7928      	ldrb	r0, [r5, #4]
 8017326:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801732a:	f88d 0010 	strb.w	r0, [sp, #16]
 801732e:	1ad2      	subs	r2, r2, r3
 8017330:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017332:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017334:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017338:	441a      	add	r2, r3
 801733a:	896b      	ldrh	r3, [r5, #10]
 801733c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017340:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017344:	1b5b      	subs	r3, r3, r5
 8017346:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017348:	442b      	add	r3, r5
 801734a:	4d05      	ldr	r5, [pc, #20]	; (8017360 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801734c:	9503      	str	r5, [sp, #12]
 801734e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017352:	6803      	ldr	r3, [r0, #0]
 8017354:	a903      	add	r1, sp, #12
 8017356:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017358:	4798      	blx	r3
 801735a:	b007      	add	sp, #28
 801735c:	bd30      	pop	{r4, r5, pc}
 801735e:	bf00      	nop
 8017360:	0802ef84 	.word	0x0802ef84

08017364 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017368:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801736a:	b08a      	sub	sp, #40	; 0x28
 801736c:	4604      	mov	r4, r0
 801736e:	460d      	mov	r5, r1
 8017370:	b113      	cbz	r3, 8017378 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017372:	790b      	ldrb	r3, [r1, #4]
 8017374:	2b00      	cmp	r3, #0
 8017376:	d044      	beq.n	8017402 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017378:	f104 0804 	add.w	r8, r4, #4
 801737c:	4641      	mov	r1, r8
 801737e:	a803      	add	r0, sp, #12
 8017380:	f7ff fe0a 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017384:	792b      	ldrb	r3, [r5, #4]
 8017386:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801738a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801738e:	b983      	cbnz	r3, 80173b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017390:	892a      	ldrh	r2, [r5, #8]
 8017392:	88e9      	ldrh	r1, [r5, #6]
 8017394:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017398:	1b92      	subs	r2, r2, r6
 801739a:	1bc9      	subs	r1, r1, r7
 801739c:	9301      	str	r3, [sp, #4]
 801739e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80173a2:	9300      	str	r3, [sp, #0]
 80173a4:	b212      	sxth	r2, r2
 80173a6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80173aa:	b209      	sxth	r1, r1
 80173ac:	4640      	mov	r0, r8
 80173ae:	f7f8 fc39 	bl	800fc24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80173b2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80173b4:	b329      	cbz	r1, 8017402 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80173b6:	a805      	add	r0, sp, #20
 80173b8:	f7ff fdee 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80173bc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80173c0:	792b      	ldrb	r3, [r5, #4]
 80173c2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80173c4:	f88d 3020 	strb.w	r3, [sp, #32]
 80173c8:	1abf      	subs	r7, r7, r2
 80173ca:	88ea      	ldrh	r2, [r5, #6]
 80173cc:	4417      	add	r7, r2
 80173ce:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80173d0:	4417      	add	r7, r2
 80173d2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80173d6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80173da:	1ab6      	subs	r6, r6, r2
 80173dc:	892a      	ldrh	r2, [r5, #8]
 80173de:	4416      	add	r6, r2
 80173e0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80173e2:	4416      	add	r6, r2
 80173e4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80173e8:	4a07      	ldr	r2, [pc, #28]	; (8017408 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80173ea:	9207      	str	r2, [sp, #28]
 80173ec:	2600      	movs	r6, #0
 80173ee:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80173f2:	6803      	ldr	r3, [r0, #0]
 80173f4:	a907      	add	r1, sp, #28
 80173f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80173f8:	4798      	blx	r3
 80173fa:	792b      	ldrb	r3, [r5, #4]
 80173fc:	b10b      	cbz	r3, 8017402 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80173fe:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017402:	b00a      	add	sp, #40	; 0x28
 8017404:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017408:	0802ef5c 	.word	0x0802ef5c

0801740c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801740c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017410:	460c      	mov	r4, r1
 8017412:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017414:	b088      	sub	sp, #32
 8017416:	4605      	mov	r5, r0
 8017418:	2900      	cmp	r1, #0
 801741a:	d06d      	beq.n	80174f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801741c:	4668      	mov	r0, sp
 801741e:	f7ff fdbb 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017422:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017424:	88e3      	ldrh	r3, [r4, #6]
 8017426:	f9bd 8000 	ldrsh.w	r8, [sp]
 801742a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801742e:	440b      	add	r3, r1
 8017430:	b21b      	sxth	r3, r3
 8017432:	4543      	cmp	r3, r8
 8017434:	db31      	blt.n	801749a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017436:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801743a:	44c4      	add	ip, r8
 801743c:	fa0f fc8c 	sxth.w	ip, ip
 8017440:	4563      	cmp	r3, ip
 8017442:	da2a      	bge.n	801749a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017444:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017446:	8926      	ldrh	r6, [r4, #8]
 8017448:	4416      	add	r6, r2
 801744a:	b236      	sxth	r6, r6
 801744c:	42be      	cmp	r6, r7
 801744e:	db24      	blt.n	801749a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017450:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017454:	4438      	add	r0, r7
 8017456:	b200      	sxth	r0, r0
 8017458:	4286      	cmp	r6, r0
 801745a:	da1e      	bge.n	801749a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801745c:	8963      	ldrh	r3, [r4, #10]
 801745e:	4419      	add	r1, r3
 8017460:	b209      	sxth	r1, r1
 8017462:	4541      	cmp	r1, r8
 8017464:	db08      	blt.n	8017478 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017466:	4561      	cmp	r1, ip
 8017468:	da06      	bge.n	8017478 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801746a:	89a3      	ldrh	r3, [r4, #12]
 801746c:	441a      	add	r2, r3
 801746e:	b212      	sxth	r2, r2
 8017470:	42ba      	cmp	r2, r7
 8017472:	db01      	blt.n	8017478 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017474:	4282      	cmp	r2, r0
 8017476:	db10      	blt.n	801749a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017478:	4b21      	ldr	r3, [pc, #132]	; (8017500 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801747a:	9304      	str	r3, [sp, #16]
 801747c:	2302      	movs	r3, #2
 801747e:	f88d 3014 	strb.w	r3, [sp, #20]
 8017482:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017484:	2300      	movs	r3, #0
 8017486:	f8ad 3016 	strh.w	r3, [sp, #22]
 801748a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801748e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017492:	6803      	ldr	r3, [r0, #0]
 8017494:	a904      	add	r1, sp, #16
 8017496:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017498:	4798      	blx	r3
 801749a:	1d29      	adds	r1, r5, #4
 801749c:	a802      	add	r0, sp, #8
 801749e:	f7ff fd7b 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80174a2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80174a6:	88e0      	ldrh	r0, [r4, #6]
 80174a8:	7921      	ldrb	r1, [r4, #4]
 80174aa:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80174ae:	8922      	ldrh	r2, [r4, #8]
 80174b0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80174b2:	f88d 1014 	strb.w	r1, [sp, #20]
 80174b6:	eba3 0808 	sub.w	r8, r3, r8
 80174ba:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80174be:	1bdf      	subs	r7, r3, r7
 80174c0:	b2bb      	uxth	r3, r7
 80174c2:	fa1f f888 	uxth.w	r8, r8
 80174c6:	8967      	ldrh	r7, [r4, #10]
 80174c8:	89a4      	ldrh	r4, [r4, #12]
 80174ca:	4440      	add	r0, r8
 80174cc:	4460      	add	r0, ip
 80174ce:	441a      	add	r2, r3
 80174d0:	44b8      	add	r8, r7
 80174d2:	4423      	add	r3, r4
 80174d4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80174d8:	4433      	add	r3, r6
 80174da:	4432      	add	r2, r6
 80174dc:	44e0      	add	r8, ip
 80174de:	4c09      	ldr	r4, [pc, #36]	; (8017504 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80174e0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80174e2:	9404      	str	r4, [sp, #16]
 80174e4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80174e8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80174ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80174f0:	6803      	ldr	r3, [r0, #0]
 80174f2:	a904      	add	r1, sp, #16
 80174f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80174f6:	4798      	blx	r3
 80174f8:	b008      	add	sp, #32
 80174fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80174fe:	bf00      	nop
 8017500:	0802ef5c 	.word	0x0802ef5c
 8017504:	0802ef70 	.word	0x0802ef70

08017508 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017508:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801750a:	4604      	mov	r4, r0
 801750c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017510:	3201      	adds	r2, #1
 8017512:	d112      	bne.n	801753a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017514:	6803      	ldr	r3, [r0, #0]
 8017516:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801751a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801751e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017522:	2500      	movs	r5, #0
 8017524:	9500      	str	r5, [sp, #0]
 8017526:	466d      	mov	r5, sp
 8017528:	4629      	mov	r1, r5
 801752a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801752e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017530:	4798      	blx	r3
 8017532:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017536:	e884 0003 	stmia.w	r4, {r0, r1}
 801753a:	4620      	mov	r0, r4
 801753c:	b003      	add	sp, #12
 801753e:	bd30      	pop	{r4, r5, pc}

08017540 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017540:	b513      	push	{r0, r1, r4, lr}
 8017542:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017546:	3301      	adds	r3, #1
 8017548:	4604      	mov	r4, r0
 801754a:	d109      	bne.n	8017560 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801754c:	4601      	mov	r1, r0
 801754e:	4668      	mov	r0, sp
 8017550:	f7ff fd22 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017554:	f8bd 3000 	ldrh.w	r3, [sp]
 8017558:	8423      	strh	r3, [r4, #32]
 801755a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801755e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017560:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017564:	b002      	add	sp, #8
 8017566:	bd10      	pop	{r4, pc}

08017568 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017568:	b513      	push	{r0, r1, r4, lr}
 801756a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801756e:	3301      	adds	r3, #1
 8017570:	4604      	mov	r4, r0
 8017572:	d109      	bne.n	8017588 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017574:	4601      	mov	r1, r0
 8017576:	4668      	mov	r0, sp
 8017578:	f7ff fd0e 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801757c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017580:	8423      	strh	r3, [r4, #32]
 8017582:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017586:	8463      	strh	r3, [r4, #34]	; 0x22
 8017588:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801758c:	b002      	add	sp, #8
 801758e:	bd10      	pop	{r4, pc}

08017590 <_ZN8touchgfx6ScreenC1Ev>:
 8017590:	b570      	push	{r4, r5, r6, lr}
 8017592:	4605      	mov	r5, r0
 8017594:	4b16      	ldr	r3, [pc, #88]	; (80175f0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017596:	f845 3b04 	str.w	r3, [r5], #4
 801759a:	2300      	movs	r3, #0
 801759c:	8103      	strh	r3, [r0, #8]
 801759e:	8143      	strh	r3, [r0, #10]
 80175a0:	8183      	strh	r3, [r0, #12]
 80175a2:	81c3      	strh	r3, [r0, #14]
 80175a4:	8203      	strh	r3, [r0, #16]
 80175a6:	8243      	strh	r3, [r0, #18]
 80175a8:	8283      	strh	r3, [r0, #20]
 80175aa:	82c3      	strh	r3, [r0, #22]
 80175ac:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80175b0:	6203      	str	r3, [r0, #32]
 80175b2:	8483      	strh	r3, [r0, #36]	; 0x24
 80175b4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80175b6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80175ba:	4a0e      	ldr	r2, [pc, #56]	; (80175f4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80175bc:	6343      	str	r3, [r0, #52]	; 0x34
 80175be:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80175c2:	4b0d      	ldr	r3, [pc, #52]	; (80175f8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80175c4:	6042      	str	r2, [r0, #4]
 80175c6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80175ca:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80175cc:	4a0b      	ldr	r2, [pc, #44]	; (80175fc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80175ce:	4604      	mov	r4, r0
 80175d0:	2101      	movs	r1, #1
 80175d2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80175d6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80175da:	f9b2 1000 	ldrsh.w	r1, [r2]
 80175de:	4628      	mov	r0, r5
 80175e0:	4798      	blx	r3
 80175e2:	6863      	ldr	r3, [r4, #4]
 80175e4:	4628      	mov	r0, r5
 80175e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80175e8:	4631      	mov	r1, r6
 80175ea:	4798      	blx	r3
 80175ec:	4620      	mov	r0, r4
 80175ee:	bd70      	pop	{r4, r5, r6, pc}
 80175f0:	0802ef98 	.word	0x0802ef98
 80175f4:	0802e61c 	.word	0x0802e61c
 80175f8:	200132b2 	.word	0x200132b2
 80175fc:	200132b0 	.word	0x200132b0

08017600 <_ZN8touchgfx6Screen4drawEv>:
 8017600:	b507      	push	{r0, r1, r2, lr}
 8017602:	4b09      	ldr	r3, [pc, #36]	; (8017628 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017604:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017608:	4b08      	ldr	r3, [pc, #32]	; (801762c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801760a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801760e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017612:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017616:	6803      	ldr	r3, [r0, #0]
 8017618:	2100      	movs	r1, #0
 801761a:	9100      	str	r1, [sp, #0]
 801761c:	689b      	ldr	r3, [r3, #8]
 801761e:	4669      	mov	r1, sp
 8017620:	4798      	blx	r3
 8017622:	b003      	add	sp, #12
 8017624:	f85d fb04 	ldr.w	pc, [sp], #4
 8017628:	200132b0 	.word	0x200132b0
 801762c:	200132b2 	.word	0x200132b2

08017630 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017634:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017638:	2b00      	cmp	r3, #0
 801763a:	b089      	sub	sp, #36	; 0x24
 801763c:	4680      	mov	r8, r0
 801763e:	460c      	mov	r4, r1
 8017640:	4615      	mov	r5, r2
 8017642:	dd0e      	ble.n	8017662 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017644:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017648:	2b00      	cmp	r3, #0
 801764a:	dd0a      	ble.n	8017662 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801764c:	4628      	mov	r0, r5
 801764e:	f7ff ff5b 	bl	8017508 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017652:	4621      	mov	r1, r4
 8017654:	f7fe fa3d 	bl	8015ad2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017658:	69eb      	ldr	r3, [r5, #28]
 801765a:	b928      	cbnz	r0, 8017668 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801765c:	461d      	mov	r5, r3
 801765e:	2b00      	cmp	r3, #0
 8017660:	d1f4      	bne.n	801764c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017662:	b009      	add	sp, #36	; 0x24
 8017664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017668:	ae04      	add	r6, sp, #16
 801766a:	2b00      	cmp	r3, #0
 801766c:	f000 80b5 	beq.w	80177da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017670:	682b      	ldr	r3, [r5, #0]
 8017672:	4629      	mov	r1, r5
 8017674:	68db      	ldr	r3, [r3, #12]
 8017676:	a802      	add	r0, sp, #8
 8017678:	4798      	blx	r3
 801767a:	4628      	mov	r0, r5
 801767c:	f7ff ff60 	bl	8017540 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017680:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017684:	4407      	add	r7, r0
 8017686:	4628      	mov	r0, r5
 8017688:	f7ff ff6e 	bl	8017568 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801768c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017690:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017694:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017698:	4418      	add	r0, r3
 801769a:	4621      	mov	r1, r4
 801769c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80176a0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80176a4:	b23f      	sxth	r7, r7
 80176a6:	4630      	mov	r0, r6
 80176a8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80176ac:	f8ad 7010 	strh.w	r7, [sp, #16]
 80176b0:	f7f8 fb9c 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 80176b4:	4628      	mov	r0, r5
 80176b6:	f7ff ff27 	bl	8017508 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80176ba:	4602      	mov	r2, r0
 80176bc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80176c0:	ab06      	add	r3, sp, #24
 80176c2:	e883 0003 	stmia.w	r3, {r0, r1}
 80176c6:	4611      	mov	r1, r2
 80176c8:	4618      	mov	r0, r3
 80176ca:	f7f8 fb8f 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 80176ce:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80176d2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80176d6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80176da:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80176de:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80176e2:	4299      	cmp	r1, r3
 80176e4:	d10b      	bne.n	80176fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80176e6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80176ea:	4552      	cmp	r2, sl
 80176ec:	d107      	bne.n	80176fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80176ee:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80176f2:	455a      	cmp	r2, fp
 80176f4:	d103      	bne.n	80176fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80176f6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80176fa:	454a      	cmp	r2, r9
 80176fc:	d06d      	beq.n	80177da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80176fe:	f1bb 0f00 	cmp.w	fp, #0
 8017702:	dd65      	ble.n	80177d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017704:	f1b9 0f00 	cmp.w	r9, #0
 8017708:	dd62      	ble.n	80177d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801770a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801770e:	fa1f f08a 	uxth.w	r0, sl
 8017712:	4552      	cmp	r2, sl
 8017714:	9000      	str	r0, [sp, #0]
 8017716:	da12      	bge.n	801773e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017718:	9301      	str	r3, [sp, #4]
 801771a:	9b00      	ldr	r3, [sp, #0]
 801771c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017720:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017724:	1a9a      	subs	r2, r3, r2
 8017726:	f8ad 1010 	strh.w	r1, [sp, #16]
 801772a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801772e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017732:	69ea      	ldr	r2, [r5, #28]
 8017734:	4631      	mov	r1, r6
 8017736:	4640      	mov	r0, r8
 8017738:	f7ff ff7a 	bl	8017630 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801773c:	9b01      	ldr	r3, [sp, #4]
 801773e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017742:	429a      	cmp	r2, r3
 8017744:	b29f      	uxth	r7, r3
 8017746:	da0d      	bge.n	8017764 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017748:	f8ad 2010 	strh.w	r2, [sp, #16]
 801774c:	1aba      	subs	r2, r7, r2
 801774e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017752:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017756:	f8ad 9016 	strh.w	r9, [sp, #22]
 801775a:	69ea      	ldr	r2, [r5, #28]
 801775c:	4631      	mov	r1, r6
 801775e:	4640      	mov	r0, r8
 8017760:	f7ff ff66 	bl	8017630 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017764:	8822      	ldrh	r2, [r4, #0]
 8017766:	88a3      	ldrh	r3, [r4, #4]
 8017768:	445f      	add	r7, fp
 801776a:	4413      	add	r3, r2
 801776c:	b29b      	uxth	r3, r3
 801776e:	b2bf      	uxth	r7, r7
 8017770:	b23a      	sxth	r2, r7
 8017772:	b219      	sxth	r1, r3
 8017774:	4291      	cmp	r1, r2
 8017776:	dd0d      	ble.n	8017794 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017778:	1bdb      	subs	r3, r3, r7
 801777a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801777e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017782:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017786:	f8ad 9016 	strh.w	r9, [sp, #22]
 801778a:	69ea      	ldr	r2, [r5, #28]
 801778c:	4631      	mov	r1, r6
 801778e:	4640      	mov	r0, r8
 8017790:	f7ff ff4e 	bl	8017630 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017794:	88e2      	ldrh	r2, [r4, #6]
 8017796:	8863      	ldrh	r3, [r4, #2]
 8017798:	4413      	add	r3, r2
 801779a:	9a00      	ldr	r2, [sp, #0]
 801779c:	444a      	add	r2, r9
 801779e:	b29b      	uxth	r3, r3
 80177a0:	fa1f f982 	uxth.w	r9, r2
 80177a4:	fa0f f289 	sxth.w	r2, r9
 80177a8:	b219      	sxth	r1, r3
 80177aa:	428a      	cmp	r2, r1
 80177ac:	da15      	bge.n	80177da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80177ae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80177b2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80177b6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80177ba:	eba3 0309 	sub.w	r3, r3, r9
 80177be:	f8ad 0010 	strh.w	r0, [sp, #16]
 80177c2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80177c6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80177ca:	69ea      	ldr	r2, [r5, #28]
 80177cc:	4631      	mov	r1, r6
 80177ce:	e001      	b.n	80177d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80177d0:	69ea      	ldr	r2, [r5, #28]
 80177d2:	4621      	mov	r1, r4
 80177d4:	4640      	mov	r0, r8
 80177d6:	f7ff ff2b 	bl	8017630 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80177da:	4628      	mov	r0, r5
 80177dc:	f7ff fe94 	bl	8017508 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80177e0:	6861      	ldr	r1, [r4, #4]
 80177e2:	4602      	mov	r2, r0
 80177e4:	6820      	ldr	r0, [r4, #0]
 80177e6:	4633      	mov	r3, r6
 80177e8:	c303      	stmia	r3!, {r0, r1}
 80177ea:	4611      	mov	r1, r2
 80177ec:	4630      	mov	r0, r6
 80177ee:	f7f8 fafd 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 80177f2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80177f6:	2b00      	cmp	r3, #0
 80177f8:	f77f af33 	ble.w	8017662 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80177fc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017800:	2b00      	cmp	r3, #0
 8017802:	f77f af2e 	ble.w	8017662 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017806:	4628      	mov	r0, r5
 8017808:	f7ff fe9a 	bl	8017540 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801780c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017810:	1a18      	subs	r0, r3, r0
 8017812:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017816:	4628      	mov	r0, r5
 8017818:	f7ff fea6 	bl	8017568 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801781c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017820:	1a18      	subs	r0, r3, r0
 8017822:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017826:	682b      	ldr	r3, [r5, #0]
 8017828:	4631      	mov	r1, r6
 801782a:	689b      	ldr	r3, [r3, #8]
 801782c:	4628      	mov	r0, r5
 801782e:	4798      	blx	r3
 8017830:	e717      	b.n	8017662 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017832 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017832:	b570      	push	{r4, r5, r6, lr}
 8017834:	460c      	mov	r4, r1
 8017836:	b086      	sub	sp, #24
 8017838:	1d06      	adds	r6, r0, #4
 801783a:	2300      	movs	r3, #0
 801783c:	4631      	mov	r1, r6
 801783e:	4605      	mov	r5, r0
 8017840:	a802      	add	r0, sp, #8
 8017842:	9301      	str	r3, [sp, #4]
 8017844:	f7ff fba8 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017848:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801784c:	8822      	ldrh	r2, [r4, #0]
 801784e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017852:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017856:	f8ad 0014 	strh.w	r0, [sp, #20]
 801785a:	1ad2      	subs	r2, r2, r3
 801785c:	8863      	ldrh	r3, [r4, #2]
 801785e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017862:	1a5b      	subs	r3, r3, r1
 8017864:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017868:	f8ad 1016 	strh.w	r1, [sp, #22]
 801786c:	aa01      	add	r2, sp, #4
 801786e:	a904      	add	r1, sp, #16
 8017870:	4630      	mov	r0, r6
 8017872:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017876:	f7f8 fb91 	bl	800ff9c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801787a:	9a01      	ldr	r2, [sp, #4]
 801787c:	b11a      	cbz	r2, 8017886 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801787e:	4621      	mov	r1, r4
 8017880:	4628      	mov	r0, r5
 8017882:	f7ff fed5 	bl	8017630 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017886:	b006      	add	sp, #24
 8017888:	bd70      	pop	{r4, r5, r6, pc}

0801788a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801788a:	b530      	push	{r4, r5, lr}
 801788c:	4602      	mov	r2, r0
 801788e:	4604      	mov	r4, r0
 8017890:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017894:	b085      	sub	sp, #20
 8017896:	460d      	mov	r5, r1
 8017898:	6851      	ldr	r1, [r2, #4]
 801789a:	466b      	mov	r3, sp
 801789c:	c303      	stmia	r3!, {r0, r1}
 801789e:	4629      	mov	r1, r5
 80178a0:	4668      	mov	r0, sp
 80178a2:	f7f8 faa3 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 80178a6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80178aa:	b12b      	cbz	r3, 80178b8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80178ac:	4669      	mov	r1, sp
 80178ae:	4620      	mov	r0, r4
 80178b0:	f7ff ffbf 	bl	8017832 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80178b4:	b005      	add	sp, #20
 80178b6:	bd30      	pop	{r4, r5, pc}
 80178b8:	3404      	adds	r4, #4
 80178ba:	4621      	mov	r1, r4
 80178bc:	a802      	add	r0, sp, #8
 80178be:	f7ff fb6b 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80178c2:	f8bd 3000 	ldrh.w	r3, [sp]
 80178c6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80178ca:	1a9b      	subs	r3, r3, r2
 80178cc:	f8ad 3000 	strh.w	r3, [sp]
 80178d0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80178d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80178d8:	4669      	mov	r1, sp
 80178da:	1a9b      	subs	r3, r3, r2
 80178dc:	4620      	mov	r0, r4
 80178de:	f8ad 3002 	strh.w	r3, [sp, #2]
 80178e2:	f7f8 fb22 	bl	800ff2a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80178e6:	e7e5      	b.n	80178b4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080178e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80178e8:	680a      	ldr	r2, [r1, #0]
 80178ea:	460b      	mov	r3, r1
 80178ec:	6992      	ldr	r2, [r2, #24]
 80178ee:	1d01      	adds	r1, r0, #4
 80178f0:	4618      	mov	r0, r3
 80178f2:	4710      	bx	r2

080178f4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 80178f4:	4298      	cmp	r0, r3
 80178f6:	d200      	bcs.n	80178fa <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 80178f8:	b913      	cbnz	r3, 8017900 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 80178fa:	440a      	add	r2, r1
 80178fc:	b210      	sxth	r0, r2
 80178fe:	4770      	bx	lr
 8017900:	ee07 0a90 	vmov	s15, r0
 8017904:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017908:	ee07 3a90 	vmov	s15, r3
 801790c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017910:	eddf 4a15 	vldr	s9, [pc, #84]	; 8017968 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8017914:	eddf 5a15 	vldr	s11, [pc, #84]	; 801796c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8017918:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801791c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017920:	ee37 7a66 	vsub.f32	s14, s14, s13
 8017924:	ee07 2a90 	vmov	s15, r2
 8017928:	eee7 5a24 	vfma.f32	s11, s14, s9
 801792c:	ee27 5a07 	vmul.f32	s10, s14, s14
 8017930:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017934:	eee5 6a25 	vfma.f32	s13, s10, s11
 8017938:	ee07 1a90 	vmov	s15, r1
 801793c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017940:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017944:	eee6 7a26 	vfma.f32	s15, s12, s13
 8017948:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801794c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017950:	bfcc      	ite	gt
 8017952:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017956:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801795a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801795e:	ee17 3a90 	vmov	r3, s15
 8017962:	b218      	sxth	r0, r3
 8017964:	4770      	bx	lr
 8017966:	bf00      	nop
 8017968:	402ce6b0 	.word	0x402ce6b0
 801796c:	3fd9cd60 	.word	0x3fd9cd60

08017970 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8017970:	4298      	cmp	r0, r3
 8017972:	d200      	bcs.n	8017976 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8017974:	b913      	cbnz	r3, 801797c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8017976:	440a      	add	r2, r1
 8017978:	b210      	sxth	r0, r2
 801797a:	4770      	bx	lr
 801797c:	ee07 0a90 	vmov	s15, r0
 8017980:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017984:	ee07 3a90 	vmov	s15, r3
 8017988:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801798c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017990:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017994:	ee37 7a66 	vsub.f32	s14, s14, s13
 8017998:	ee07 2a90 	vmov	s15, r2
 801799c:	ee67 5a07 	vmul.f32	s11, s14, s14
 80179a0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80179a4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80179a8:	ee07 1a90 	vmov	s15, r1
 80179ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80179b0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80179b4:	eee6 7a26 	vfma.f32	s15, s12, s13
 80179b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80179bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80179c0:	bfcc      	ite	gt
 80179c2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80179c6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80179ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80179ce:	ee17 3a90 	vmov	r3, s15
 80179d2:	b218      	sxth	r0, r3
 80179d4:	4770      	bx	lr

080179d6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80179d6:	4298      	cmp	r0, r3
 80179d8:	d200      	bcs.n	80179dc <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80179da:	b913      	cbnz	r3, 80179e2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80179dc:	440a      	add	r2, r1
 80179de:	b210      	sxth	r0, r2
 80179e0:	4770      	bx	lr
 80179e2:	ee07 2a90 	vmov	s15, r2
 80179e6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80179ea:	ee07 0a90 	vmov	s15, r0
 80179ee:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80179f2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80179f6:	ee07 3a10 	vmov	s14, r3
 80179fa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80179fe:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017a02:	ee07 1a90 	vmov	s15, r1
 8017a06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a0a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017a0e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017a12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017a16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a1a:	bfcc      	ite	gt
 8017a1c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017a20:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017a24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017a28:	ee17 3a90 	vmov	r3, s15
 8017a2c:	b218      	sxth	r0, r3
 8017a2e:	4770      	bx	lr

08017a30 <_ZN8touchgfx12TextProviderC1Ev>:
 8017a30:	b538      	push	{r3, r4, r5, lr}
 8017a32:	2500      	movs	r5, #0
 8017a34:	2302      	movs	r3, #2
 8017a36:	4604      	mov	r4, r0
 8017a38:	e9c0 5500 	strd	r5, r5, [r0]
 8017a3c:	7403      	strb	r3, [r0, #16]
 8017a3e:	6145      	str	r5, [r0, #20]
 8017a40:	7605      	strb	r5, [r0, #24]
 8017a42:	83c5      	strh	r5, [r0, #30]
 8017a44:	8405      	strh	r5, [r0, #32]
 8017a46:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017a48:	8705      	strh	r5, [r0, #56]	; 0x38
 8017a4a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017a4c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017a50:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017a54:	220e      	movs	r2, #14
 8017a56:	4629      	mov	r1, r5
 8017a58:	304c      	adds	r0, #76	; 0x4c
 8017a5a:	f013 f9e6 	bl	802ae2a <memset>
 8017a5e:	2301      	movs	r3, #1
 8017a60:	4620      	mov	r0, r4
 8017a62:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8017a66:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017a6a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017a6e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017a72:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8017a76:	f7f0 f9a1 	bl	8007dbc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8017a7a:	4620      	mov	r0, r4
 8017a7c:	bd38      	pop	{r3, r4, r5, pc}

08017a7e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017a7e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017a80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017a84:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8017a86:	fab0 f080 	clz	r0, r0
 8017a8a:	0940      	lsrs	r0, r0, #5
 8017a8c:	4770      	bx	lr

08017a8e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017a8e:	b530      	push	{r4, r5, lr}
 8017a90:	2500      	movs	r5, #0
 8017a92:	2401      	movs	r4, #1
 8017a94:	6843      	ldr	r3, [r0, #4]
 8017a96:	b913      	cbnz	r3, 8017a9e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8017a98:	6803      	ldr	r3, [r0, #0]
 8017a9a:	b313      	cbz	r3, 8017ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017a9c:	6043      	str	r3, [r0, #4]
 8017a9e:	7e03      	ldrb	r3, [r0, #24]
 8017aa0:	b143      	cbz	r3, 8017ab4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017aa2:	6943      	ldr	r3, [r0, #20]
 8017aa4:	b12b      	cbz	r3, 8017ab2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017aa6:	881a      	ldrh	r2, [r3, #0]
 8017aa8:	b11a      	cbz	r2, 8017ab2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017aaa:	1c9a      	adds	r2, r3, #2
 8017aac:	6142      	str	r2, [r0, #20]
 8017aae:	8818      	ldrh	r0, [r3, #0]
 8017ab0:	bd30      	pop	{r4, r5, pc}
 8017ab2:	7605      	strb	r5, [r0, #24]
 8017ab4:	6843      	ldr	r3, [r0, #4]
 8017ab6:	8819      	ldrh	r1, [r3, #0]
 8017ab8:	b199      	cbz	r1, 8017ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017aba:	1c9a      	adds	r2, r3, #2
 8017abc:	2902      	cmp	r1, #2
 8017abe:	6042      	str	r2, [r0, #4]
 8017ac0:	d1f5      	bne.n	8017aae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017ac2:	7c03      	ldrb	r3, [r0, #16]
 8017ac4:	2b01      	cmp	r3, #1
 8017ac6:	d8e5      	bhi.n	8017a94 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017ac8:	1c5a      	adds	r2, r3, #1
 8017aca:	3302      	adds	r3, #2
 8017acc:	7402      	strb	r2, [r0, #16]
 8017ace:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017ad2:	6143      	str	r3, [r0, #20]
 8017ad4:	2b00      	cmp	r3, #0
 8017ad6:	d0dd      	beq.n	8017a94 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017ad8:	881b      	ldrh	r3, [r3, #0]
 8017ada:	2b00      	cmp	r3, #0
 8017adc:	d0da      	beq.n	8017a94 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017ade:	7604      	strb	r4, [r0, #24]
 8017ae0:	e7d8      	b.n	8017a94 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017ae2:	2000      	movs	r0, #0
 8017ae4:	e7e4      	b.n	8017ab0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08017ae6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8017ae6:	b430      	push	{r4, r5}
 8017ae8:	6001      	str	r1, [r0, #0]
 8017aea:	2100      	movs	r1, #0
 8017aec:	6041      	str	r1, [r0, #4]
 8017aee:	6815      	ldr	r5, [r2, #0]
 8017af0:	6085      	str	r5, [r0, #8]
 8017af2:	6852      	ldr	r2, [r2, #4]
 8017af4:	6443      	str	r3, [r0, #68]	; 0x44
 8017af6:	9b02      	ldr	r3, [sp, #8]
 8017af8:	60c2      	str	r2, [r0, #12]
 8017afa:	7401      	strb	r1, [r0, #16]
 8017afc:	6141      	str	r1, [r0, #20]
 8017afe:	7601      	strb	r1, [r0, #24]
 8017b00:	8701      	strh	r1, [r0, #56]	; 0x38
 8017b02:	8401      	strh	r1, [r0, #32]
 8017b04:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8017b08:	6483      	str	r3, [r0, #72]	; 0x48
 8017b0a:	bc30      	pop	{r4, r5}
 8017b0c:	f7f0 b956 	b.w	8007dbc <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017b10 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017b10:	b408      	push	{r3}
 8017b12:	b510      	push	{r4, lr}
 8017b14:	b085      	sub	sp, #20
 8017b16:	ac07      	add	r4, sp, #28
 8017b18:	f854 3b04 	ldr.w	r3, [r4], #4
 8017b1c:	9300      	str	r3, [sp, #0]
 8017b1e:	4613      	mov	r3, r2
 8017b20:	4622      	mov	r2, r4
 8017b22:	9403      	str	r4, [sp, #12]
 8017b24:	f7ff ffdf 	bl	8017ae6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017b28:	b005      	add	sp, #20
 8017b2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017b2e:	b001      	add	sp, #4
 8017b30:	4770      	bx	lr

08017b32 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017b32:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b34:	4605      	mov	r5, r0
 8017b36:	4608      	mov	r0, r1
 8017b38:	b1e9      	cbz	r1, 8017b76 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8017b3a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017b3e:	460b      	mov	r3, r1
 8017b40:	f101 0708 	add.w	r7, r1, #8
 8017b44:	4622      	mov	r2, r4
 8017b46:	6818      	ldr	r0, [r3, #0]
 8017b48:	6859      	ldr	r1, [r3, #4]
 8017b4a:	4626      	mov	r6, r4
 8017b4c:	c603      	stmia	r6!, {r0, r1}
 8017b4e:	3308      	adds	r3, #8
 8017b50:	42bb      	cmp	r3, r7
 8017b52:	4634      	mov	r4, r6
 8017b54:	d1f7      	bne.n	8017b46 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8017b56:	6818      	ldr	r0, [r3, #0]
 8017b58:	6030      	str	r0, [r6, #0]
 8017b5a:	889b      	ldrh	r3, [r3, #4]
 8017b5c:	80b3      	strh	r3, [r6, #4]
 8017b5e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017b62:	015b      	lsls	r3, r3, #5
 8017b64:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017b68:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017b6c:	430b      	orrs	r3, r1
 8017b6e:	425b      	negs	r3, r3
 8017b70:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017b74:	4610      	mov	r0, r2
 8017b76:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017b78 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8017b78:	b538      	push	{r3, r4, r5, lr}
 8017b7a:	460c      	mov	r4, r1
 8017b7c:	6811      	ldr	r1, [r2, #0]
 8017b7e:	4610      	mov	r0, r2
 8017b80:	68cd      	ldr	r5, [r1, #12]
 8017b82:	4619      	mov	r1, r3
 8017b84:	47a8      	blx	r5
 8017b86:	2800      	cmp	r0, #0
 8017b88:	bf08      	it	eq
 8017b8a:	4620      	moveq	r0, r4
 8017b8c:	bd38      	pop	{r3, r4, r5, pc}
	...

08017b90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017b90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017b92:	4604      	mov	r4, r0
 8017b94:	4615      	mov	r5, r2
 8017b96:	4608      	mov	r0, r1
 8017b98:	b93a      	cbnz	r2, 8017baa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017b9a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017b9e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017ba2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017ba6:	4628      	mov	r0, r5
 8017ba8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017baa:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017bae:	8893      	ldrh	r3, [r2, #4]
 8017bb0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017bb4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017bb8:	79ee      	ldrb	r6, [r5, #7]
 8017bba:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017bbe:	4316      	orrs	r6, r2
 8017bc0:	19da      	adds	r2, r3, r7
 8017bc2:	b291      	uxth	r1, r2
 8017bc4:	291d      	cmp	r1, #29
 8017bc6:	b2b7      	uxth	r7, r6
 8017bc8:	d87a      	bhi.n	8017cc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017bca:	2201      	movs	r2, #1
 8017bcc:	408a      	lsls	r2, r1
 8017bce:	4975      	ldr	r1, [pc, #468]	; (8017da4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017bd0:	420a      	tst	r2, r1
 8017bd2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017bd6:	d12d      	bne.n	8017c34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017bd8:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017bdc:	d070      	beq.n	8017cc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017bde:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017be2:	462b      	mov	r3, r5
 8017be4:	f105 0e08 	add.w	lr, r5, #8
 8017be8:	4615      	mov	r5, r2
 8017bea:	6818      	ldr	r0, [r3, #0]
 8017bec:	6859      	ldr	r1, [r3, #4]
 8017bee:	4694      	mov	ip, r2
 8017bf0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017bf4:	3308      	adds	r3, #8
 8017bf6:	4573      	cmp	r3, lr
 8017bf8:	4662      	mov	r2, ip
 8017bfa:	d1f6      	bne.n	8017bea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017bfc:	6818      	ldr	r0, [r3, #0]
 8017bfe:	f8cc 0000 	str.w	r0, [ip]
 8017c02:	889b      	ldrh	r3, [r3, #4]
 8017c04:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017c08:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017c0c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017c10:	b2b3      	uxth	r3, r6
 8017c12:	1aca      	subs	r2, r1, r3
 8017c14:	b292      	uxth	r2, r2
 8017c16:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017c1a:	10d2      	asrs	r2, r2, #3
 8017c1c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017c20:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017c24:	4302      	orrs	r2, r0
 8017c26:	1bcf      	subs	r7, r1, r7
 8017c28:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017c2c:	1afb      	subs	r3, r7, r3
 8017c2e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017c32:	e7b8      	b.n	8017ba6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017c34:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017c36:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017c3a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017c3c:	f640 6333 	movw	r3, #3635	; 0xe33
 8017c40:	4299      	cmp	r1, r3
 8017c42:	d110      	bne.n	8017c66 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017c44:	6803      	ldr	r3, [r0, #0]
 8017c46:	68db      	ldr	r3, [r3, #12]
 8017c48:	4798      	blx	r3
 8017c4a:	7b41      	ldrb	r1, [r0, #13]
 8017c4c:	00cb      	lsls	r3, r1, #3
 8017c4e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017c52:	7a03      	ldrb	r3, [r0, #8]
 8017c54:	0648      	lsls	r0, r1, #25
 8017c56:	ea43 0302 	orr.w	r3, r3, r2
 8017c5a:	bf44      	itt	mi
 8017c5c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017c60:	b21b      	sxthmi	r3, r3
 8017c62:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017c66:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017c6a:	443b      	add	r3, r7
 8017c6c:	4433      	add	r3, r6
 8017c6e:	b29b      	uxth	r3, r3
 8017c70:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017c74:	462a      	mov	r2, r5
 8017c76:	f105 0c08 	add.w	ip, r5, #8
 8017c7a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017c7e:	4635      	mov	r5, r6
 8017c80:	6810      	ldr	r0, [r2, #0]
 8017c82:	6851      	ldr	r1, [r2, #4]
 8017c84:	4637      	mov	r7, r6
 8017c86:	c703      	stmia	r7!, {r0, r1}
 8017c88:	3208      	adds	r2, #8
 8017c8a:	4562      	cmp	r2, ip
 8017c8c:	463e      	mov	r6, r7
 8017c8e:	d1f7      	bne.n	8017c80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017c90:	6810      	ldr	r0, [r2, #0]
 8017c92:	6038      	str	r0, [r7, #0]
 8017c94:	8892      	ldrh	r2, [r2, #4]
 8017c96:	80ba      	strh	r2, [r7, #4]
 8017c98:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017c9c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017ca0:	10db      	asrs	r3, r3, #3
 8017ca2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017ca6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017caa:	4313      	orrs	r3, r2
 8017cac:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017cb0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017cb4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017cb8:	1a9b      	subs	r3, r3, r2
 8017cba:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017cbe:	e772      	b.n	8017ba6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017cc0:	f023 0204 	bic.w	r2, r3, #4
 8017cc4:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017cc8:	428a      	cmp	r2, r1
 8017cca:	d003      	beq.n	8017cd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017ccc:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017cd0:	4293      	cmp	r3, r2
 8017cd2:	d120      	bne.n	8017d16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017cd4:	3b01      	subs	r3, #1
 8017cd6:	4602      	mov	r2, r0
 8017cd8:	b29b      	uxth	r3, r3
 8017cda:	4629      	mov	r1, r5
 8017cdc:	4620      	mov	r0, r4
 8017cde:	f7ff ff4b 	bl	8017b78 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017ce2:	7b41      	ldrb	r1, [r0, #13]
 8017ce4:	00cb      	lsls	r3, r1, #3
 8017ce6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017cea:	7a03      	ldrb	r3, [r0, #8]
 8017cec:	0649      	lsls	r1, r1, #25
 8017cee:	ea43 0302 	orr.w	r3, r3, r2
 8017cf2:	bf44      	itt	mi
 8017cf4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017cf8:	b21b      	sxthmi	r3, r3
 8017cfa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017cfe:	7b6b      	ldrb	r3, [r5, #13]
 8017d00:	7aaa      	ldrb	r2, [r5, #10]
 8017d02:	005b      	lsls	r3, r3, #1
 8017d04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017d08:	4313      	orrs	r3, r2
 8017d0a:	115a      	asrs	r2, r3, #5
 8017d0c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017d10:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017d14:	e036      	b.n	8017d84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017d16:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017d1a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017d1e:	7a2a      	ldrb	r2, [r5, #8]
 8017d20:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017d24:	ea42 0201 	orr.w	r2, r2, r1
 8017d28:	bf1c      	itt	ne
 8017d2a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017d2e:	b212      	sxthne	r2, r2
 8017d30:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017d34:	f640 6109 	movw	r1, #3593	; 0xe09
 8017d38:	f023 0210 	bic.w	r2, r3, #16
 8017d3c:	428a      	cmp	r2, r1
 8017d3e:	d003      	beq.n	8017d48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017d40:	f640 6213 	movw	r2, #3603	; 0xe13
 8017d44:	4293      	cmp	r3, r2
 8017d46:	d12a      	bne.n	8017d9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8017d48:	7b6e      	ldrb	r6, [r5, #13]
 8017d4a:	0076      	lsls	r6, r6, #1
 8017d4c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017d50:	7aae      	ldrb	r6, [r5, #10]
 8017d52:	4316      	orrs	r6, r2
 8017d54:	f640 6213 	movw	r2, #3603	; 0xe13
 8017d58:	4293      	cmp	r3, r2
 8017d5a:	bf18      	it	ne
 8017d5c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017d60:	4602      	mov	r2, r0
 8017d62:	bf14      	ite	ne
 8017d64:	b29b      	uxthne	r3, r3
 8017d66:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017d6a:	4629      	mov	r1, r5
 8017d6c:	4620      	mov	r0, r4
 8017d6e:	f7ff ff03 	bl	8017b78 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017d72:	7b43      	ldrb	r3, [r0, #13]
 8017d74:	7a82      	ldrb	r2, [r0, #10]
 8017d76:	005b      	lsls	r3, r3, #1
 8017d78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017d7c:	4313      	orrs	r3, r2
 8017d7e:	1af6      	subs	r6, r6, r3
 8017d80:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017d84:	7b69      	ldrb	r1, [r5, #13]
 8017d86:	00cb      	lsls	r3, r1, #3
 8017d88:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017d8c:	7a2b      	ldrb	r3, [r5, #8]
 8017d8e:	4313      	orrs	r3, r2
 8017d90:	064a      	lsls	r2, r1, #25
 8017d92:	bf44      	itt	mi
 8017d94:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d98:	b21b      	sxthmi	r3, r3
 8017d9a:	1bdb      	subs	r3, r3, r7
 8017d9c:	e747      	b.n	8017c2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017d9e:	2300      	movs	r3, #0
 8017da0:	e7b6      	b.n	8017d10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017da2:	bf00      	nop
 8017da4:	3fc00079 	.word	0x3fc00079

08017da8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8017da8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017dac:	4604      	mov	r4, r0
 8017dae:	b942      	cbnz	r2, 8017dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017db0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017db4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017db8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017dbc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017dc0:	e047      	b.n	8017e52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017dc2:	7b51      	ldrb	r1, [r2, #13]
 8017dc4:	8893      	ldrh	r3, [r2, #4]
 8017dc6:	010d      	lsls	r5, r1, #4
 8017dc8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017dcc:	79d5      	ldrb	r5, [r2, #7]
 8017dce:	4305      	orrs	r5, r0
 8017dd0:	2d04      	cmp	r5, #4
 8017dd2:	bfcc      	ite	gt
 8017dd4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017dd8:	f04f 0e01 	movle.w	lr, #1
 8017ddc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017de0:	f200 80ab 	bhi.w	8017f3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017de4:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017de8:	4283      	cmp	r3, r0
 8017dea:	d216      	bcs.n	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017dec:	f240 605b 	movw	r0, #1627	; 0x65b
 8017df0:	4283      	cmp	r3, r0
 8017df2:	d859      	bhi.n	8017ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017df4:	f240 6057 	movw	r0, #1623	; 0x657
 8017df8:	4283      	cmp	r3, r0
 8017dfa:	d20e      	bcs.n	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017dfc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017e00:	d24a      	bcs.n	8017e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017e02:	f240 604e 	movw	r0, #1614	; 0x64e
 8017e06:	4283      	cmp	r3, r0
 8017e08:	d207      	bcs.n	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e0a:	f240 601a 	movw	r0, #1562	; 0x61a
 8017e0e:	4283      	cmp	r3, r0
 8017e10:	d02a      	beq.n	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e12:	d821      	bhi.n	8017e58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017e14:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017e18:	d35b      	bcc.n	8017ed2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017e1a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017e1e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017e22:	f040 80d0 	bne.w	8017fc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017e26:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017e2a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017e2e:	f040 80ca 	bne.w	8017fc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017e32:	00cb      	lsls	r3, r1, #3
 8017e34:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017e38:	7a13      	ldrb	r3, [r2, #8]
 8017e3a:	0649      	lsls	r1, r1, #25
 8017e3c:	ea43 0300 	orr.w	r3, r3, r0
 8017e40:	bf44      	itt	mi
 8017e42:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e46:	b21b      	sxthmi	r3, r3
 8017e48:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017e4c:	1b5d      	subs	r5, r3, r5
 8017e4e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017e52:	4610      	mov	r0, r2
 8017e54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017e58:	f240 604b 	movw	r0, #1611	; 0x64b
 8017e5c:	4283      	cmp	r3, r0
 8017e5e:	d338      	bcc.n	8017ed2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017e60:	f240 604c 	movw	r0, #1612	; 0x64c
 8017e64:	4283      	cmp	r3, r0
 8017e66:	d9d8      	bls.n	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e68:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017e6c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017e70:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017e74:	f040 80f2 	bne.w	801805c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017e78:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017e7c:	f040 80ee 	bne.w	801805c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017e80:	00cb      	lsls	r3, r1, #3
 8017e82:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017e86:	7a13      	ldrb	r3, [r2, #8]
 8017e88:	064e      	lsls	r6, r1, #25
 8017e8a:	ea43 0300 	orr.w	r3, r3, r0
 8017e8e:	bf44      	itt	mi
 8017e90:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e94:	b21b      	sxthmi	r3, r3
 8017e96:	e7d9      	b.n	8017e4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017e98:	f240 6054 	movw	r0, #1620	; 0x654
 8017e9c:	4283      	cmp	r3, r0
 8017e9e:	d8e3      	bhi.n	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ea0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017ea4:	d9e0      	bls.n	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ea6:	e7b8      	b.n	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ea8:	f240 6074 	movw	r0, #1652	; 0x674
 8017eac:	4283      	cmp	r3, r0
 8017eae:	d0b4      	beq.n	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017eb0:	d82d      	bhi.n	8017f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017eb2:	f240 605e 	movw	r0, #1630	; 0x65e
 8017eb6:	4283      	cmp	r3, r0
 8017eb8:	d804      	bhi.n	8017ec4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017eba:	f240 605d 	movw	r0, #1629	; 0x65d
 8017ebe:	4283      	cmp	r3, r0
 8017ec0:	d3d2      	bcc.n	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ec2:	e7aa      	b.n	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ec4:	f240 605f 	movw	r0, #1631	; 0x65f
 8017ec8:	4283      	cmp	r3, r0
 8017eca:	d0cd      	beq.n	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ecc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017ed0:	d0a3      	beq.n	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ed2:	00cb      	lsls	r3, r1, #3
 8017ed4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017ed8:	7a13      	ldrb	r3, [r2, #8]
 8017eda:	0649      	lsls	r1, r1, #25
 8017edc:	ea43 0300 	orr.w	r3, r3, r0
 8017ee0:	bf44      	itt	mi
 8017ee2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017ee6:	b21b      	sxthmi	r3, r3
 8017ee8:	1b5d      	subs	r5, r3, r5
 8017eea:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017eee:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017ef2:	7b53      	ldrb	r3, [r2, #13]
 8017ef4:	015b      	lsls	r3, r3, #5
 8017ef6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017efa:	7993      	ldrb	r3, [r2, #6]
 8017efc:	430b      	orrs	r3, r1
 8017efe:	005b      	lsls	r3, r3, #1
 8017f00:	2105      	movs	r1, #5
 8017f02:	fb93 f3f1 	sdiv	r3, r3, r1
 8017f06:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017f0a:	440b      	add	r3, r1
 8017f0c:	e756      	b.n	8017dbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017f0e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017f12:	4283      	cmp	r3, r0
 8017f14:	d809      	bhi.n	8017f2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017f16:	f240 60df 	movw	r0, #1759	; 0x6df
 8017f1a:	4283      	cmp	r3, r0
 8017f1c:	f4bf af7d 	bcs.w	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f20:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017f24:	2b05      	cmp	r3, #5
 8017f26:	d8d4      	bhi.n	8017ed2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017f28:	e777      	b.n	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f2a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017f2e:	4283      	cmp	r3, r0
 8017f30:	d09a      	beq.n	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f32:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017f36:	4283      	cmp	r3, r0
 8017f38:	e7ca      	b.n	8017ed0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017f3a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017f3e:	d22b      	bcs.n	8017f98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017f40:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017f44:	4283      	cmp	r3, r0
 8017f46:	d28f      	bcs.n	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f48:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017f4c:	4283      	cmp	r3, r0
 8017f4e:	d816      	bhi.n	8017f7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017f50:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017f54:	4283      	cmp	r3, r0
 8017f56:	f4bf af60 	bcs.w	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f5a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017f5e:	4283      	cmp	r3, r0
 8017f60:	d80a      	bhi.n	8017f78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017f62:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017f66:	4283      	cmp	r3, r0
 8017f68:	f4bf af57 	bcs.w	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f6c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017f70:	4283      	cmp	r3, r0
 8017f72:	f43f af79 	beq.w	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f76:	e7ac      	b.n	8017ed2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017f78:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017f7c:	e7f8      	b.n	8017f70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017f7e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017f82:	4283      	cmp	r3, r0
 8017f84:	d802      	bhi.n	8017f8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8017f86:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8017f8a:	e798      	b.n	8017ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017f8c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017f90:	4283      	cmp	r3, r0
 8017f92:	f47f af42 	bne.w	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f96:	e767      	b.n	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f98:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017f9c:	4283      	cmp	r3, r0
 8017f9e:	f43f af63 	beq.w	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017fa2:	d802      	bhi.n	8017faa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017fa4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8017fa8:	e7f2      	b.n	8017f90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8017faa:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017fae:	4283      	cmp	r3, r0
 8017fb0:	d805      	bhi.n	8017fbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017fb2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017fb6:	4283      	cmp	r3, r0
 8017fb8:	f4ff af2f 	bcc.w	8017e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017fbc:	e754      	b.n	8017e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017fbe:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017fc2:	4283      	cmp	r3, r0
 8017fc4:	e7af      	b.n	8017f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8017fc6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017fca:	4617      	mov	r7, r2
 8017fcc:	f102 0808 	add.w	r8, r2, #8
 8017fd0:	4666      	mov	r6, ip
 8017fd2:	6838      	ldr	r0, [r7, #0]
 8017fd4:	6879      	ldr	r1, [r7, #4]
 8017fd6:	46e6      	mov	lr, ip
 8017fd8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017fdc:	3708      	adds	r7, #8
 8017fde:	4547      	cmp	r7, r8
 8017fe0:	46f4      	mov	ip, lr
 8017fe2:	d1f6      	bne.n	8017fd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017fe4:	6838      	ldr	r0, [r7, #0]
 8017fe6:	f8ce 0000 	str.w	r0, [lr]
 8017fea:	88b9      	ldrh	r1, [r7, #4]
 8017fec:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017ff0:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017ff4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017ff8:	d009      	beq.n	801800e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8017ffa:	7b51      	ldrb	r1, [r2, #13]
 8017ffc:	7992      	ldrb	r2, [r2, #6]
 8017ffe:	0149      	lsls	r1, r1, #5
 8018000:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018004:	4311      	orrs	r1, r2
 8018006:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801800a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801800e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018012:	b2ad      	uxth	r5, r5
 8018014:	d00d      	beq.n	8018032 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8018016:	442b      	add	r3, r5
 8018018:	b29b      	uxth	r3, r3
 801801a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801801e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018022:	10db      	asrs	r3, r3, #3
 8018024:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018028:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801802c:	4313      	orrs	r3, r2
 801802e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018032:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018036:	00cb      	lsls	r3, r1, #3
 8018038:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801803c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018040:	064f      	lsls	r7, r1, #25
 8018042:	ea43 0302 	orr.w	r3, r3, r2
 8018046:	bf44      	itt	mi
 8018048:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801804c:	b21b      	sxthmi	r3, r3
 801804e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018052:	1b5b      	subs	r3, r3, r5
 8018054:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018058:	4632      	mov	r2, r6
 801805a:	e6fa      	b.n	8017e52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801805c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018060:	4617      	mov	r7, r2
 8018062:	f102 0908 	add.w	r9, r2, #8
 8018066:	4666      	mov	r6, ip
 8018068:	6838      	ldr	r0, [r7, #0]
 801806a:	6879      	ldr	r1, [r7, #4]
 801806c:	46e0      	mov	r8, ip
 801806e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018072:	3708      	adds	r7, #8
 8018074:	454f      	cmp	r7, r9
 8018076:	46c4      	mov	ip, r8
 8018078:	d1f6      	bne.n	8018068 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801807a:	6838      	ldr	r0, [r7, #0]
 801807c:	f8c8 0000 	str.w	r0, [r8]
 8018080:	88b9      	ldrh	r1, [r7, #4]
 8018082:	f8a8 1004 	strh.w	r1, [r8, #4]
 8018086:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801808a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801808e:	d009      	beq.n	80180a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018090:	7b51      	ldrb	r1, [r2, #13]
 8018092:	7992      	ldrb	r2, [r2, #6]
 8018094:	0149      	lsls	r1, r1, #5
 8018096:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801809a:	4311      	orrs	r1, r2
 801809c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80180a0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80180a4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80180a8:	d00e      	beq.n	80180c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80180aa:	eba3 030e 	sub.w	r3, r3, lr
 80180ae:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80180b2:	b29b      	uxth	r3, r3
 80180b4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80180b8:	10db      	asrs	r3, r3, #3
 80180ba:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80180be:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80180c2:	4313      	orrs	r3, r2
 80180c4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80180c8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80180cc:	00cb      	lsls	r3, r1, #3
 80180ce:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80180d2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80180d6:	0648      	lsls	r0, r1, #25
 80180d8:	ea43 0302 	orr.w	r3, r3, r2
 80180dc:	bf44      	itt	mi
 80180de:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80180e2:	b21b      	sxthmi	r3, r3
 80180e4:	1b5d      	subs	r5, r3, r5
 80180e6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80180ea:	e7b5      	b.n	8018058 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080180ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80180ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80180f0:	461e      	mov	r6, r3
 80180f2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80180f4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80180f8:	4604      	mov	r4, r0
 80180fa:	4617      	mov	r7, r2
 80180fc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018100:	f7ef fe1a 	bl	8007d38 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018104:	4605      	mov	r5, r0
 8018106:	b918      	cbnz	r0, 8018110 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8018108:	6030      	str	r0, [r6, #0]
 801810a:	4628      	mov	r0, r5
 801810c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018110:	683b      	ldr	r3, [r7, #0]
 8018112:	4601      	mov	r1, r0
 8018114:	68db      	ldr	r3, [r3, #12]
 8018116:	4638      	mov	r0, r7
 8018118:	4798      	blx	r3
 801811a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801811e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018122:	4602      	mov	r2, r0
 8018124:	6030      	str	r0, [r6, #0]
 8018126:	d213      	bcs.n	8018150 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8018128:	4643      	mov	r3, r8
 801812a:	4639      	mov	r1, r7
 801812c:	4620      	mov	r0, r4
 801812e:	f7ff fe3b 	bl	8017da8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018132:	6030      	str	r0, [r6, #0]
 8018134:	6833      	ldr	r3, [r6, #0]
 8018136:	b143      	cbz	r3, 801814a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8018138:	7b5a      	ldrb	r2, [r3, #13]
 801813a:	7a9b      	ldrb	r3, [r3, #10]
 801813c:	0052      	lsls	r2, r2, #1
 801813e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018142:	4313      	orrs	r3, r2
 8018144:	bf0c      	ite	eq
 8018146:	2301      	moveq	r3, #1
 8018148:	2300      	movne	r3, #0
 801814a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801814e:	e7dc      	b.n	801810a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018150:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018154:	b29b      	uxth	r3, r3
 8018156:	2b7f      	cmp	r3, #127	; 0x7f
 8018158:	d804      	bhi.n	8018164 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801815a:	4639      	mov	r1, r7
 801815c:	4620      	mov	r0, r4
 801815e:	f7ff fd17 	bl	8017b90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018162:	e7e6      	b.n	8018132 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018164:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018168:	2b00      	cmp	r3, #0
 801816a:	d0e3      	beq.n	8018134 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801816c:	f640 1302 	movw	r3, #2306	; 0x902
 8018170:	429d      	cmp	r5, r3
 8018172:	d1df      	bne.n	8018134 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018174:	4601      	mov	r1, r0
 8018176:	4620      	mov	r0, r4
 8018178:	f7ff fcdb 	bl	8017b32 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801817c:	e7d9      	b.n	8018132 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801817e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801817e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018182:	461e      	mov	r6, r3
 8018184:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018186:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801818a:	4604      	mov	r4, r0
 801818c:	4617      	mov	r7, r2
 801818e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018192:	f7ef fdd1 	bl	8007d38 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018196:	4605      	mov	r5, r0
 8018198:	b918      	cbnz	r0, 80181a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801819a:	6030      	str	r0, [r6, #0]
 801819c:	4628      	mov	r0, r5
 801819e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80181a2:	683b      	ldr	r3, [r7, #0]
 80181a4:	4601      	mov	r1, r0
 80181a6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80181aa:	4638      	mov	r0, r7
 80181ac:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80181b0:	47c8      	blx	r9
 80181b2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80181b6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80181ba:	4602      	mov	r2, r0
 80181bc:	6030      	str	r0, [r6, #0]
 80181be:	d213      	bcs.n	80181e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80181c0:	4643      	mov	r3, r8
 80181c2:	4639      	mov	r1, r7
 80181c4:	4620      	mov	r0, r4
 80181c6:	f7ff fdef 	bl	8017da8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80181ca:	6030      	str	r0, [r6, #0]
 80181cc:	6833      	ldr	r3, [r6, #0]
 80181ce:	b143      	cbz	r3, 80181e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80181d0:	7b5a      	ldrb	r2, [r3, #13]
 80181d2:	7a9b      	ldrb	r3, [r3, #10]
 80181d4:	0052      	lsls	r2, r2, #1
 80181d6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80181da:	4313      	orrs	r3, r2
 80181dc:	bf0c      	ite	eq
 80181de:	2301      	moveq	r3, #1
 80181e0:	2300      	movne	r3, #0
 80181e2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80181e6:	e7d9      	b.n	801819c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80181e8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80181ec:	b29b      	uxth	r3, r3
 80181ee:	2b7f      	cmp	r3, #127	; 0x7f
 80181f0:	d804      	bhi.n	80181fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80181f2:	4639      	mov	r1, r7
 80181f4:	4620      	mov	r0, r4
 80181f6:	f7ff fccb 	bl	8017b90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80181fa:	e7e6      	b.n	80181ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80181fc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018200:	2b00      	cmp	r3, #0
 8018202:	d0e3      	beq.n	80181cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018204:	f640 1302 	movw	r3, #2306	; 0x902
 8018208:	429d      	cmp	r5, r3
 801820a:	d1df      	bne.n	80181cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801820c:	4601      	mov	r1, r0
 801820e:	4620      	mov	r0, r4
 8018210:	f7ff fc8f 	bl	8017b32 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018214:	e7d9      	b.n	80181ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08018216 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8018216:	b510      	push	{r4, lr}
 8018218:	4604      	mov	r4, r0
 801821a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801821e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018220:	b1f1      	cbz	r1, 8018260 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018222:	2b0a      	cmp	r3, #10
 8018224:	d02f      	beq.n	8018286 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018226:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8018228:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801822c:	3901      	subs	r1, #1
 801822e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018230:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018234:	1c51      	adds	r1, r2, #1
 8018236:	b289      	uxth	r1, r1
 8018238:	2901      	cmp	r1, #1
 801823a:	bf84      	itt	hi
 801823c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018240:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018242:	f103 0201 	add.w	r2, r3, #1
 8018246:	8722      	strh	r2, [r4, #56]	; 0x38
 8018248:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801824a:	bf98      	it	ls
 801824c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801824e:	4413      	add	r3, r2
 8018250:	b29b      	uxth	r3, r3
 8018252:	2b09      	cmp	r3, #9
 8018254:	bf88      	it	hi
 8018256:	3b0a      	subhi	r3, #10
 8018258:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801825c:	8458      	strh	r0, [r3, #34]	; 0x22
 801825e:	e7dc      	b.n	801821a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018260:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018262:	2b0a      	cmp	r3, #10
 8018264:	d00f      	beq.n	8018286 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018266:	4620      	mov	r0, r4
 8018268:	f7ff fc11 	bl	8017a8e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801826c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801826e:	1c5a      	adds	r2, r3, #1
 8018270:	8722      	strh	r2, [r4, #56]	; 0x38
 8018272:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018274:	4413      	add	r3, r2
 8018276:	b29b      	uxth	r3, r3
 8018278:	2b09      	cmp	r3, #9
 801827a:	bf88      	it	hi
 801827c:	3b0a      	subhi	r3, #10
 801827e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018282:	8458      	strh	r0, [r3, #34]	; 0x22
 8018284:	e7ec      	b.n	8018260 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018286:	bd10      	pop	{r4, pc}

08018288 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018288:	b538      	push	{r3, r4, r5, lr}
 801828a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801828c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018290:	4604      	mov	r4, r0
 8018292:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018294:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8018296:	3a01      	subs	r2, #1
 8018298:	8702      	strh	r2, [r0, #56]	; 0x38
 801829a:	1c5a      	adds	r2, r3, #1
 801829c:	b292      	uxth	r2, r2
 801829e:	2a09      	cmp	r2, #9
 80182a0:	bf86      	itte	hi
 80182a2:	3b09      	subhi	r3, #9
 80182a4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80182a6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80182a8:	f7ff ffb5 	bl	8018216 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80182ac:	8c23      	ldrh	r3, [r4, #32]
 80182ae:	2b01      	cmp	r3, #1
 80182b0:	bf9c      	itt	ls
 80182b2:	3301      	addls	r3, #1
 80182b4:	8423      	strhls	r3, [r4, #32]
 80182b6:	8be3      	ldrh	r3, [r4, #30]
 80182b8:	b90b      	cbnz	r3, 80182be <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80182ba:	2302      	movs	r3, #2
 80182bc:	83e3      	strh	r3, [r4, #30]
 80182be:	8be3      	ldrh	r3, [r4, #30]
 80182c0:	3b01      	subs	r3, #1
 80182c2:	b29b      	uxth	r3, r3
 80182c4:	83e3      	strh	r3, [r4, #30]
 80182c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80182ca:	4628      	mov	r0, r5
 80182cc:	8365      	strh	r5, [r4, #26]
 80182ce:	bd38      	pop	{r3, r4, r5, pc}

080182d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80182d0:	428a      	cmp	r2, r1
 80182d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80182d6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80182d8:	d931      	bls.n	801833e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80182da:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80182dc:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80182e0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80182e4:	19ee      	adds	r6, r5, r7
 80182e6:	1a54      	subs	r4, r2, r1
 80182e8:	3e01      	subs	r6, #1
 80182ea:	fa1f fe84 	uxth.w	lr, r4
 80182ee:	b2b4      	uxth	r4, r6
 80182f0:	eba4 090e 	sub.w	r9, r4, lr
 80182f4:	fa1f f989 	uxth.w	r9, r9
 80182f8:	2c09      	cmp	r4, #9
 80182fa:	4626      	mov	r6, r4
 80182fc:	bf88      	it	hi
 80182fe:	f1a4 060a 	subhi.w	r6, r4, #10
 8018302:	f1bc 0f00 	cmp.w	ip, #0
 8018306:	bf08      	it	eq
 8018308:	f04f 0c02 	moveq.w	ip, #2
 801830c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018310:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018314:	fa1f fc8c 	uxth.w	ip, ip
 8018318:	3c01      	subs	r4, #1
 801831a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801831e:	b2a4      	uxth	r4, r4
 8018320:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018324:	454c      	cmp	r4, r9
 8018326:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801832a:	d1e5      	bne.n	80182f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801832c:	eba5 050e 	sub.w	r5, r5, lr
 8018330:	eb0e 0408 	add.w	r4, lr, r8
 8018334:	8705      	strh	r5, [r0, #56]	; 0x38
 8018336:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801833a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801833e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018340:	1a64      	subs	r4, r4, r1
 8018342:	4439      	add	r1, r7
 8018344:	b289      	uxth	r1, r1
 8018346:	2909      	cmp	r1, #9
 8018348:	bf88      	it	hi
 801834a:	390a      	subhi	r1, #10
 801834c:	8704      	strh	r4, [r0, #56]	; 0x38
 801834e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018350:	250a      	movs	r5, #10
 8018352:	b18a      	cbz	r2, 8018378 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018354:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8018356:	3a01      	subs	r2, #1
 8018358:	b292      	uxth	r2, r2
 801835a:	3101      	adds	r1, #1
 801835c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018360:	8701      	strh	r1, [r0, #56]	; 0x38
 8018362:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018364:	b901      	cbnz	r1, 8018368 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8018366:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018368:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801836a:	3901      	subs	r1, #1
 801836c:	b289      	uxth	r1, r1
 801836e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018370:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018374:	844c      	strh	r4, [r1, #34]	; 0x22
 8018376:	e7ec      	b.n	8018352 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018378:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801837c:	f7ff bf4b 	b.w	8018216 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018380 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018380:	b570      	push	{r4, r5, r6, lr}
 8018382:	2500      	movs	r5, #0
 8018384:	4295      	cmp	r5, r2
 8018386:	d011      	beq.n	80183ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018388:	8bc4      	ldrh	r4, [r0, #30]
 801838a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801838e:	4414      	add	r4, r2
 8018390:	3c01      	subs	r4, #1
 8018392:	1b64      	subs	r4, r4, r5
 8018394:	b2a4      	uxth	r4, r4
 8018396:	2c01      	cmp	r4, #1
 8018398:	bf88      	it	hi
 801839a:	3c02      	subhi	r4, #2
 801839c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80183a0:	8b64      	ldrh	r4, [r4, #26]
 80183a2:	42b4      	cmp	r4, r6
 80183a4:	d117      	bne.n	80183d6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80183a6:	3501      	adds	r5, #1
 80183a8:	b2ad      	uxth	r5, r5
 80183aa:	e7eb      	b.n	8018384 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80183ac:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80183b0:	2400      	movs	r4, #0
 80183b2:	4413      	add	r3, r2
 80183b4:	b2a2      	uxth	r2, r4
 80183b6:	429a      	cmp	r2, r3
 80183b8:	da0f      	bge.n	80183da <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80183ba:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80183bc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80183c0:	4432      	add	r2, r6
 80183c2:	b292      	uxth	r2, r2
 80183c4:	2a09      	cmp	r2, #9
 80183c6:	bf88      	it	hi
 80183c8:	3a0a      	subhi	r2, #10
 80183ca:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80183ce:	3401      	adds	r4, #1
 80183d0:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80183d2:	42aa      	cmp	r2, r5
 80183d4:	d0ee      	beq.n	80183b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80183d6:	2000      	movs	r0, #0
 80183d8:	bd70      	pop	{r4, r5, r6, pc}
 80183da:	2001      	movs	r0, #1
 80183dc:	e7fc      	b.n	80183d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080183de <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80183de:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183e2:	4605      	mov	r5, r0
 80183e4:	4616      	mov	r6, r2
 80183e6:	1c8c      	adds	r4, r1, #2
 80183e8:	8809      	ldrh	r1, [r1, #0]
 80183ea:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80183ee:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80183f2:	42b3      	cmp	r3, r6
 80183f4:	d124      	bne.n	8018440 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80183f6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80183fa:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80183fe:	f001 070f 	and.w	r7, r1, #15
 8018402:	f8cd 8000 	str.w	r8, [sp]
 8018406:	464b      	mov	r3, r9
 8018408:	4652      	mov	r2, sl
 801840a:	4621      	mov	r1, r4
 801840c:	4628      	mov	r0, r5
 801840e:	f7ff ffb7 	bl	8018380 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018412:	4683      	mov	fp, r0
 8018414:	b168      	cbz	r0, 8018432 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8018416:	eb0a 0109 	add.w	r1, sl, r9
 801841a:	4441      	add	r1, r8
 801841c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018420:	463a      	mov	r2, r7
 8018422:	4649      	mov	r1, r9
 8018424:	4628      	mov	r0, r5
 8018426:	f7ff ff53 	bl	80182d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801842a:	4658      	mov	r0, fp
 801842c:	b003      	add	sp, #12
 801842e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018432:	eb07 010a 	add.w	r1, r7, sl
 8018436:	4449      	add	r1, r9
 8018438:	4441      	add	r1, r8
 801843a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801843e:	e7d2      	b.n	80183e6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018440:	f04f 0b00 	mov.w	fp, #0
 8018444:	e7f1      	b.n	801842a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08018446 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8018446:	b570      	push	{r4, r5, r6, lr}
 8018448:	8810      	ldrh	r0, [r2, #0]
 801844a:	4298      	cmp	r0, r3
 801844c:	d817      	bhi.n	801847e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801844e:	1e48      	subs	r0, r1, #1
 8018450:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018454:	4298      	cmp	r0, r3
 8018456:	d312      	bcc.n	801847e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018458:	2400      	movs	r4, #0
 801845a:	428c      	cmp	r4, r1
 801845c:	d20f      	bcs.n	801847e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801845e:	1860      	adds	r0, r4, r1
 8018460:	1040      	asrs	r0, r0, #1
 8018462:	0085      	lsls	r5, r0, #2
 8018464:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018468:	42b3      	cmp	r3, r6
 801846a:	d902      	bls.n	8018472 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801846c:	3001      	adds	r0, #1
 801846e:	b284      	uxth	r4, r0
 8018470:	e7f3      	b.n	801845a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018472:	d201      	bcs.n	8018478 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018474:	b281      	uxth	r1, r0
 8018476:	e7f0      	b.n	801845a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018478:	442a      	add	r2, r5
 801847a:	8850      	ldrh	r0, [r2, #2]
 801847c:	bd70      	pop	{r4, r5, r6, pc}
 801847e:	2000      	movs	r0, #0
 8018480:	e7fc      	b.n	801847c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018482 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018482:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018486:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018488:	886f      	ldrh	r7, [r5, #2]
 801848a:	4604      	mov	r4, r0
 801848c:	087f      	lsrs	r7, r7, #1
 801848e:	260b      	movs	r6, #11
 8018490:	3e01      	subs	r6, #1
 8018492:	d013      	beq.n	80184bc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018494:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018496:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801849a:	462a      	mov	r2, r5
 801849c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80184a0:	4639      	mov	r1, r7
 80184a2:	4643      	mov	r3, r8
 80184a4:	4620      	mov	r0, r4
 80184a6:	f7ff ffce 	bl	8018446 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80184aa:	b138      	cbz	r0, 80184bc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80184ac:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80184b0:	4642      	mov	r2, r8
 80184b2:	4620      	mov	r0, r4
 80184b4:	f7ff ff93 	bl	80183de <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80184b8:	2800      	cmp	r0, #0
 80184ba:	d1e9      	bne.n	8018490 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80184bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080184c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80184c0:	b570      	push	{r4, r5, r6, lr}
 80184c2:	694a      	ldr	r2, [r1, #20]
 80184c4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80184c6:	684b      	ldr	r3, [r1, #4]
 80184c8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80184ca:	1b54      	subs	r4, r2, r5
 80184cc:	f000 8106 	beq.w	80186dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80184d0:	1b9b      	subs	r3, r3, r6
 80184d2:	d003      	beq.n	80184dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80184d4:	4363      	muls	r3, r4
 80184d6:	2210      	movs	r2, #16
 80184d8:	fb93 f3f2 	sdiv	r3, r3, r2
 80184dc:	680c      	ldr	r4, [r1, #0]
 80184de:	698a      	ldr	r2, [r1, #24]
 80184e0:	1b65      	subs	r5, r4, r5
 80184e2:	f000 80fd 	beq.w	80186e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80184e6:	1b92      	subs	r2, r2, r6
 80184e8:	d003      	beq.n	80184f2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80184ea:	436a      	muls	r2, r5
 80184ec:	2410      	movs	r4, #16
 80184ee:	fb92 f2f4 	sdiv	r2, r2, r4
 80184f2:	1a9b      	subs	r3, r3, r2
 80184f4:	ee07 3a90 	vmov	s15, r3
 80184f8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801871c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80184fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018500:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018504:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018508:	460a      	mov	r2, r1
 801850a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801850e:	4603      	mov	r3, r0
 8018510:	f100 040c 	add.w	r4, r0, #12
 8018514:	eeb1 6a43 	vneg.f32	s12, s6
 8018518:	edd2 7a02 	vldr	s15, [r2, #8]
 801851c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018520:	3214      	adds	r2, #20
 8018522:	ece3 6a01 	vstmia	r3!, {s13}
 8018526:	ed52 7a02 	vldr	s15, [r2, #-8]
 801852a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801852e:	429c      	cmp	r4, r3
 8018530:	edc3 7a02 	vstr	s15, [r3, #8]
 8018534:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018538:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801853c:	edc3 7a05 	vstr	s15, [r3, #20]
 8018540:	d1ea      	bne.n	8018518 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018542:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018544:	698b      	ldr	r3, [r1, #24]
 8018546:	edd0 4a02 	vldr	s9, [r0, #8]
 801854a:	edd0 3a00 	vldr	s7, [r0]
 801854e:	edd0 6a01 	vldr	s13, [r0, #4]
 8018552:	ed90 5a05 	vldr	s10, [r0, #20]
 8018556:	ed90 2a03 	vldr	s4, [r0, #12]
 801855a:	edd0 5a04 	vldr	s11, [r0, #16]
 801855e:	ed90 1a07 	vldr	s2, [r0, #28]
 8018562:	edd0 2a06 	vldr	s5, [r0, #24]
 8018566:	1a9b      	subs	r3, r3, r2
 8018568:	ee07 3a90 	vmov	s15, r3
 801856c:	684b      	ldr	r3, [r1, #4]
 801856e:	1a9b      	subs	r3, r3, r2
 8018570:	ee07 3a10 	vmov	s14, r3
 8018574:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018578:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801857c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018580:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018584:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018588:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801858c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018590:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018594:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018598:	ee32 5a45 	vsub.f32	s10, s4, s10
 801859c:	ee67 7a83 	vmul.f32	s15, s15, s6
 80185a0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80185a4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80185a6:	694a      	ldr	r2, [r1, #20]
 80185a8:	1b13      	subs	r3, r2, r4
 80185aa:	ee07 3a10 	vmov	s14, r3
 80185ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80185b2:	680b      	ldr	r3, [r1, #0]
 80185b4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80185b8:	1b1b      	subs	r3, r3, r4
 80185ba:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80185be:	ee07 3a10 	vmov	s14, r3
 80185c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80185c6:	ee27 7a04 	vmul.f32	s14, s14, s8
 80185ca:	eee6 4a87 	vfma.f32	s9, s13, s14
 80185ce:	ee64 4a86 	vmul.f32	s9, s9, s12
 80185d2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80185d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80185d8:	698b      	ldr	r3, [r1, #24]
 80185da:	1a9b      	subs	r3, r3, r2
 80185dc:	ee06 3a90 	vmov	s13, r3
 80185e0:	684b      	ldr	r3, [r1, #4]
 80185e2:	1a9b      	subs	r3, r3, r2
 80185e4:	ee07 3a10 	vmov	s14, r3
 80185e8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80185ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80185f0:	ee66 6a84 	vmul.f32	s13, s13, s8
 80185f4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80185f8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80185fc:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018600:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018604:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8018608:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801860a:	694a      	ldr	r2, [r1, #20]
 801860c:	1b13      	subs	r3, r2, r4
 801860e:	ee07 3a10 	vmov	s14, r3
 8018612:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018616:	680b      	ldr	r3, [r1, #0]
 8018618:	ee27 7a04 	vmul.f32	s14, s14, s8
 801861c:	1b1b      	subs	r3, r3, r4
 801861e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018622:	ee07 3a10 	vmov	s14, r3
 8018626:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801862a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801862e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018632:	edd0 5a08 	vldr	s11, [r0, #32]
 8018636:	ee25 5a06 	vmul.f32	s10, s10, s12
 801863a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801863e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018642:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018644:	698b      	ldr	r3, [r1, #24]
 8018646:	1a9b      	subs	r3, r3, r2
 8018648:	ee07 3a10 	vmov	s14, r3
 801864c:	684b      	ldr	r3, [r1, #4]
 801864e:	1a9b      	subs	r3, r3, r2
 8018650:	ee01 3a90 	vmov	s3, r3
 8018654:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018658:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801865c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018660:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018664:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018668:	ee61 1a84 	vmul.f32	s3, s3, s8
 801866c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018670:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018674:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018678:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801867a:	694a      	ldr	r2, [r1, #20]
 801867c:	1b13      	subs	r3, r2, r4
 801867e:	ee03 3a10 	vmov	s6, r3
 8018682:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018686:	680b      	ldr	r3, [r1, #0]
 8018688:	ee23 3a04 	vmul.f32	s6, s6, s8
 801868c:	1b1b      	subs	r3, r3, r4
 801868e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018692:	ee03 3a10 	vmov	s6, r3
 8018696:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801869a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801869e:	eee1 5a04 	vfma.f32	s11, s2, s8
 80186a2:	ee25 6a86 	vmul.f32	s12, s11, s12
 80186a6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80186aa:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80186ae:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80186b2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80186b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186ba:	dd13      	ble.n	80186e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80186bc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80186c0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80186c4:	63c3      	str	r3, [r0, #60]	; 0x3c
 80186c6:	eee3 7a87 	vfma.f32	s15, s7, s14
 80186ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80186ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186d2:	dd15      	ble.n	8018700 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80186d4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80186d8:	6403      	str	r3, [r0, #64]	; 0x40
 80186da:	bd70      	pop	{r4, r5, r6, pc}
 80186dc:	4623      	mov	r3, r4
 80186de:	e6fd      	b.n	80184dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80186e0:	462a      	mov	r2, r5
 80186e2:	e706      	b.n	80184f2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80186e4:	d502      	bpl.n	80186ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80186e6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80186ea:	e7e9      	b.n	80186c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80186ec:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80186f0:	eea3 2a85 	vfma.f32	s4, s7, s10
 80186f4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80186f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186fc:	dade      	bge.n	80186bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80186fe:	e7f2      	b.n	80186e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018700:	d502      	bpl.n	8018708 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018702:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018706:	e7e7      	b.n	80186d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8018708:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801870c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018710:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018718:	dadc      	bge.n	80186d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801871a:	e7f2      	b.n	8018702 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801871c:	3d800000 	.word	0x3d800000

08018720 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018720:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018724:	2714      	movs	r7, #20
 8018726:	435f      	muls	r7, r3
 8018728:	eb02 0c07 	add.w	ip, r2, r7
 801872c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018730:	f115 0e0f 	adds.w	lr, r5, #15
 8018734:	f100 80a2 	bmi.w	801887c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8018738:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801873c:	9c08      	ldr	r4, [sp, #32]
 801873e:	f8c0 e014 	str.w	lr, [r0, #20]
 8018742:	2614      	movs	r6, #20
 8018744:	4366      	muls	r6, r4
 8018746:	eb02 0806 	add.w	r8, r2, r6
 801874a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801874e:	f115 040f 	adds.w	r4, r5, #15
 8018752:	f100 809f 	bmi.w	8018894 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8018756:	1124      	asrs	r4, r4, #4
 8018758:	eba4 040e 	sub.w	r4, r4, lr
 801875c:	6184      	str	r4, [r0, #24]
 801875e:	2c00      	cmp	r4, #0
 8018760:	f000 808a 	beq.w	8018878 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018764:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8018768:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801876c:	5995      	ldr	r5, [r2, r6]
 801876e:	eba4 0809 	sub.w	r8, r4, r9
 8018772:	59d4      	ldr	r4, [r2, r7]
 8018774:	eba5 0a04 	sub.w	sl, r5, r4
 8018778:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801877c:	fb0e fe05 	mul.w	lr, lr, r5
 8018780:	fb0a ee19 	mls	lr, sl, r9, lr
 8018784:	fb08 e404 	mla	r4, r8, r4, lr
 8018788:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801878c:	3c01      	subs	r4, #1
 801878e:	19a4      	adds	r4, r4, r6
 8018790:	f100 808c 	bmi.w	80188ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018794:	fb94 fef6 	sdiv	lr, r4, r6
 8018798:	f8c0 e000 	str.w	lr, [r0]
 801879c:	fb06 441e 	mls	r4, r6, lr, r4
 80187a0:	6104      	str	r4, [r0, #16]
 80187a2:	2d00      	cmp	r5, #0
 80187a4:	f2c0 8095 	blt.w	80188d2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80187a8:	fb95 f4f6 	sdiv	r4, r5, r6
 80187ac:	6044      	str	r4, [r0, #4]
 80187ae:	fb06 5514 	mls	r5, r6, r4, r5
 80187b2:	6085      	str	r5, [r0, #8]
 80187b4:	60c6      	str	r6, [r0, #12]
 80187b6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80187ba:	6945      	ldr	r5, [r0, #20]
 80187bc:	59d2      	ldr	r2, [r2, r7]
 80187be:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80188f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80187c2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80187c6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80187ca:	ee07 4a10 	vmov	s14, r4
 80187ce:	6804      	ldr	r4, [r0, #0]
 80187d0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80187d4:	ee07 2a90 	vmov	s15, r2
 80187d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80187dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80187e0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80187e4:	ee27 7a26 	vmul.f32	s14, s14, s13
 80187e8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80187ec:	edd3 6a00 	vldr	s13, [r3]
 80187f0:	eee6 6a07 	vfma.f32	s13, s12, s14
 80187f4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80187f8:	eee6 6a27 	vfma.f32	s13, s12, s15
 80187fc:	edc0 6a07 	vstr	s13, [r0, #28]
 8018800:	edd0 6a01 	vldr	s13, [r0, #4]
 8018804:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8018808:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801880c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018810:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018814:	ed80 6a08 	vstr	s12, [r0, #32]
 8018818:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801881a:	6242      	str	r2, [r0, #36]	; 0x24
 801881c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018820:	ed93 6a03 	vldr	s12, [r3, #12]
 8018824:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018828:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801882c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8018830:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8018834:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018838:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801883c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018840:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8018844:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018846:	6302      	str	r2, [r0, #48]	; 0x30
 8018848:	ed93 6a06 	vldr	s12, [r3, #24]
 801884c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8018850:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018854:	eeb0 7a46 	vmov.f32	s14, s12
 8018858:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801885c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018860:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018864:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8018868:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801886c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018870:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8018874:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8018876:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018878:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801887c:	f1c5 0501 	rsb	r5, r5, #1
 8018880:	f015 050f 	ands.w	r5, r5, #15
 8018884:	bf18      	it	ne
 8018886:	2501      	movne	r5, #1
 8018888:	2410      	movs	r4, #16
 801888a:	fb9e fef4 	sdiv	lr, lr, r4
 801888e:	ebae 0e05 	sub.w	lr, lr, r5
 8018892:	e753      	b.n	801873c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018894:	f1c5 0501 	rsb	r5, r5, #1
 8018898:	f015 050f 	ands.w	r5, r5, #15
 801889c:	bf18      	it	ne
 801889e:	2501      	movne	r5, #1
 80188a0:	f04f 0910 	mov.w	r9, #16
 80188a4:	fb94 f4f9 	sdiv	r4, r4, r9
 80188a8:	1b64      	subs	r4, r4, r5
 80188aa:	e755      	b.n	8018758 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80188ac:	4264      	negs	r4, r4
 80188ae:	fb94 fef6 	sdiv	lr, r4, r6
 80188b2:	f1ce 0800 	rsb	r8, lr, #0
 80188b6:	fb06 441e 	mls	r4, r6, lr, r4
 80188ba:	f8c0 8000 	str.w	r8, [r0]
 80188be:	6104      	str	r4, [r0, #16]
 80188c0:	2c00      	cmp	r4, #0
 80188c2:	f43f af6e 	beq.w	80187a2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80188c6:	ea6f 0e0e 	mvn.w	lr, lr
 80188ca:	f8c0 e000 	str.w	lr, [r0]
 80188ce:	1b34      	subs	r4, r6, r4
 80188d0:	e766      	b.n	80187a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80188d2:	426d      	negs	r5, r5
 80188d4:	fb95 f4f6 	sdiv	r4, r5, r6
 80188d8:	f1c4 0e00 	rsb	lr, r4, #0
 80188dc:	fb06 5514 	mls	r5, r6, r4, r5
 80188e0:	f8c0 e004 	str.w	lr, [r0, #4]
 80188e4:	6085      	str	r5, [r0, #8]
 80188e6:	2d00      	cmp	r5, #0
 80188e8:	f43f af64 	beq.w	80187b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80188ec:	43e4      	mvns	r4, r4
 80188ee:	6044      	str	r4, [r0, #4]
 80188f0:	1b75      	subs	r5, r6, r5
 80188f2:	e75e      	b.n	80187b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80188f4:	3d800000 	.word	0x3d800000

080188f8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80188f8:	4602      	mov	r2, r0
 80188fa:	b148      	cbz	r0, 8018910 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80188fc:	2300      	movs	r3, #0
 80188fe:	b298      	uxth	r0, r3
 8018900:	3301      	adds	r3, #1
 8018902:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8018906:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801890a:	2900      	cmp	r1, #0
 801890c:	d1f7      	bne.n	80188fe <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801890e:	4770      	bx	lr
 8018910:	4770      	bx	lr

08018912 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018912:	b530      	push	{r4, r5, lr}
 8018914:	4604      	mov	r4, r0
 8018916:	b159      	cbz	r1, 8018930 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8018918:	b148      	cbz	r0, 801892e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801891a:	2300      	movs	r3, #0
 801891c:	b298      	uxth	r0, r3
 801891e:	4282      	cmp	r2, r0
 8018920:	d905      	bls.n	801892e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018922:	5ccd      	ldrb	r5, [r1, r3]
 8018924:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8018928:	3301      	adds	r3, #1
 801892a:	2d00      	cmp	r5, #0
 801892c:	d1f6      	bne.n	801891c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801892e:	bd30      	pop	{r4, r5, pc}
 8018930:	4608      	mov	r0, r1
 8018932:	e7fc      	b.n	801892e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08018934 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8018934:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018936:	b08b      	sub	sp, #44	; 0x2c
 8018938:	468c      	mov	ip, r1
 801893a:	2100      	movs	r1, #0
 801893c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018940:	4604      	mov	r4, r0
 8018942:	261f      	movs	r6, #31
 8018944:	af01      	add	r7, sp, #4
 8018946:	fb94 fef3 	sdiv	lr, r4, r3
 801894a:	fb03 441e 	mls	r4, r3, lr, r4
 801894e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018952:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8018956:	b2ec      	uxtb	r4, r5
 8018958:	2d09      	cmp	r5, #9
 801895a:	bfd4      	ite	le
 801895c:	3430      	addle	r4, #48	; 0x30
 801895e:	3457      	addgt	r4, #87	; 0x57
 8018960:	b2e4      	uxtb	r4, r4
 8018962:	55bc      	strb	r4, [r7, r6]
 8018964:	4674      	mov	r4, lr
 8018966:	1e71      	subs	r1, r6, #1
 8018968:	b974      	cbnz	r4, 8018988 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801896a:	2800      	cmp	r0, #0
 801896c:	da05      	bge.n	801897a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801896e:	ab0a      	add	r3, sp, #40	; 0x28
 8018970:	4419      	add	r1, r3
 8018972:	232d      	movs	r3, #45	; 0x2d
 8018974:	f801 3c24 	strb.w	r3, [r1, #-36]
 8018978:	1eb1      	subs	r1, r6, #2
 801897a:	3101      	adds	r1, #1
 801897c:	4439      	add	r1, r7
 801897e:	4660      	mov	r0, ip
 8018980:	f7ff ffc7 	bl	8018912 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018984:	b00b      	add	sp, #44	; 0x2c
 8018986:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018988:	460e      	mov	r6, r1
 801898a:	e7dc      	b.n	8018946 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801898c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801898c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801898e:	b08b      	sub	sp, #44	; 0x2c
 8018990:	468c      	mov	ip, r1
 8018992:	2100      	movs	r1, #0
 8018994:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018998:	ae01      	add	r6, sp, #4
 801899a:	211f      	movs	r1, #31
 801899c:	fbb0 f7f3 	udiv	r7, r0, r3
 80189a0:	fb03 0517 	mls	r5, r3, r7, r0
 80189a4:	b2ec      	uxtb	r4, r5
 80189a6:	2d09      	cmp	r5, #9
 80189a8:	bfd4      	ite	le
 80189aa:	3430      	addle	r4, #48	; 0x30
 80189ac:	3457      	addgt	r4, #87	; 0x57
 80189ae:	b2e4      	uxtb	r4, r4
 80189b0:	558c      	strb	r4, [r1, r6]
 80189b2:	4638      	mov	r0, r7
 80189b4:	1e4c      	subs	r4, r1, #1
 80189b6:	b92f      	cbnz	r7, 80189c4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80189b8:	4431      	add	r1, r6
 80189ba:	4660      	mov	r0, ip
 80189bc:	f7ff ffa9 	bl	8018912 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80189c0:	b00b      	add	sp, #44	; 0x2c
 80189c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80189c4:	4621      	mov	r1, r4
 80189c6:	e7e9      	b.n	801899c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080189c8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 80189c8:	b410      	push	{r4}
 80189ca:	b131      	cbz	r1, 80189da <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80189cc:	1e9c      	subs	r4, r3, #2
 80189ce:	2c22      	cmp	r4, #34	; 0x22
 80189d0:	d803      	bhi.n	80189da <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80189d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80189d6:	f7ff bfad 	b.w	8018934 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80189da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80189de:	4770      	bx	lr

080189e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80189e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189e4:	4691      	mov	r9, r2
 80189e6:	b085      	sub	sp, #20
 80189e8:	6802      	ldr	r2, [r0, #0]
 80189ea:	9201      	str	r2, [sp, #4]
 80189ec:	4688      	mov	r8, r1
 80189ee:	4683      	mov	fp, r0
 80189f0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80189f4:	9103      	str	r1, [sp, #12]
 80189f6:	4610      	mov	r0, r2
 80189f8:	461c      	mov	r4, r3
 80189fa:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80189fe:	9302      	str	r3, [sp, #8]
 8018a00:	f7ff ff7a 	bl	80188f8 <_ZN8touchgfx7Unicode6strlenEPKt>
 8018a04:	f1b8 0f00 	cmp.w	r8, #0
 8018a08:	bf0c      	ite	eq
 8018a0a:	4684      	moveq	ip, r0
 8018a0c:	f100 0c01 	addne.w	ip, r0, #1
 8018a10:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018a14:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8018a18:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018a1a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018a1c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018a20:	9903      	ldr	r1, [sp, #12]
 8018a22:	fa1f fc8c 	uxth.w	ip, ip
 8018a26:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8018a2a:	d041      	beq.n	8018ab0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018a2c:	d834      	bhi.n	8018a98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018a2e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018a32:	d059      	beq.n	8018ae8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018a34:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8018a38:	d03a      	beq.n	8018ab0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018a3a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018a3e:	d034      	beq.n	8018aaa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018a40:	2400      	movs	r4, #0
 8018a42:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8018a46:	3a01      	subs	r2, #1
 8018a48:	b169      	cbz	r1, 8018a66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018a4a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018a4c:	458c      	cmp	ip, r1
 8018a4e:	da09      	bge.n	8018a64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018a50:	eba1 010c 	sub.w	r1, r1, ip
 8018a54:	b289      	uxth	r1, r1
 8018a56:	b933      	cbnz	r3, 8018a66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018a58:	2e00      	cmp	r6, #0
 8018a5a:	d051      	beq.n	8018b00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018a5c:	2800      	cmp	r0, #0
 8018a5e:	d04f      	beq.n	8018b00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018a60:	440c      	add	r4, r1
 8018a62:	b2a4      	uxth	r4, r4
 8018a64:	2100      	movs	r1, #0
 8018a66:	682b      	ldr	r3, [r5, #0]
 8018a68:	4293      	cmp	r3, r2
 8018a6a:	da07      	bge.n	8018a7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018a6c:	f1b8 0f00 	cmp.w	r8, #0
 8018a70:	d004      	beq.n	8018a7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018a72:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8018a76:	682b      	ldr	r3, [r5, #0]
 8018a78:	3301      	adds	r3, #1
 8018a7a:	602b      	str	r3, [r5, #0]
 8018a7c:	2730      	movs	r7, #48	; 0x30
 8018a7e:	2c00      	cmp	r4, #0
 8018a80:	d04e      	beq.n	8018b20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018a82:	682e      	ldr	r6, [r5, #0]
 8018a84:	3c01      	subs	r4, #1
 8018a86:	42b2      	cmp	r2, r6
 8018a88:	b2a4      	uxth	r4, r4
 8018a8a:	dd49      	ble.n	8018b20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018a8c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018a90:	682b      	ldr	r3, [r5, #0]
 8018a92:	3301      	adds	r3, #1
 8018a94:	602b      	str	r3, [r5, #0]
 8018a96:	e7f2      	b.n	8018a7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8018a98:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018a9c:	d01d      	beq.n	8018ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018a9e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018aa2:	d002      	beq.n	8018aaa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018aa4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8018aa8:	e7c9      	b.n	8018a3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8018aaa:	4684      	mov	ip, r0
 8018aac:	f04f 0800 	mov.w	r8, #0
 8018ab0:	2c00      	cmp	r4, #0
 8018ab2:	d0c6      	beq.n	8018a42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018ab4:	b947      	cbnz	r7, 8018ac8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018ab6:	2801      	cmp	r0, #1
 8018ab8:	d106      	bne.n	8018ac8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018aba:	8814      	ldrh	r4, [r2, #0]
 8018abc:	2c30      	cmp	r4, #48	; 0x30
 8018abe:	bf02      	ittt	eq
 8018ac0:	3202      	addeq	r2, #2
 8018ac2:	f8cb 2000 	streq.w	r2, [fp]
 8018ac6:	4638      	moveq	r0, r7
 8018ac8:	45bc      	cmp	ip, r7
 8018aca:	da14      	bge.n	8018af6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018acc:	b2bf      	uxth	r7, r7
 8018ace:	eba7 040c 	sub.w	r4, r7, ip
 8018ad2:	b2a4      	uxth	r4, r4
 8018ad4:	46bc      	mov	ip, r7
 8018ad6:	2600      	movs	r6, #0
 8018ad8:	e7b3      	b.n	8018a42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018ada:	4684      	mov	ip, r0
 8018adc:	b16c      	cbz	r4, 8018afa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018ade:	42b8      	cmp	r0, r7
 8018ae0:	dd00      	ble.n	8018ae4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018ae2:	b2b8      	uxth	r0, r7
 8018ae4:	2400      	movs	r4, #0
 8018ae6:	e003      	b.n	8018af0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8018ae8:	f04f 0c01 	mov.w	ip, #1
 8018aec:	2400      	movs	r4, #0
 8018aee:	4660      	mov	r0, ip
 8018af0:	4626      	mov	r6, r4
 8018af2:	46a0      	mov	r8, r4
 8018af4:	e7a5      	b.n	8018a42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018af6:	2400      	movs	r4, #0
 8018af8:	e7ed      	b.n	8018ad6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8018afa:	4626      	mov	r6, r4
 8018afc:	46a0      	mov	r8, r4
 8018afe:	e7a0      	b.n	8018a42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018b00:	2900      	cmp	r1, #0
 8018b02:	d0b0      	beq.n	8018a66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018b04:	2720      	movs	r7, #32
 8018b06:	682e      	ldr	r6, [r5, #0]
 8018b08:	2900      	cmp	r1, #0
 8018b0a:	d0ac      	beq.n	8018a66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018b0c:	3901      	subs	r1, #1
 8018b0e:	4296      	cmp	r6, r2
 8018b10:	b289      	uxth	r1, r1
 8018b12:	daa7      	bge.n	8018a64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018b14:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018b18:	682b      	ldr	r3, [r5, #0]
 8018b1a:	3301      	adds	r3, #1
 8018b1c:	602b      	str	r3, [r5, #0]
 8018b1e:	e7f2      	b.n	8018b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018b20:	b188      	cbz	r0, 8018b46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018b22:	682b      	ldr	r3, [r5, #0]
 8018b24:	3801      	subs	r0, #1
 8018b26:	429a      	cmp	r2, r3
 8018b28:	b280      	uxth	r0, r0
 8018b2a:	dd0c      	ble.n	8018b46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018b2c:	f8db 3000 	ldr.w	r3, [fp]
 8018b30:	1c9c      	adds	r4, r3, #2
 8018b32:	f8cb 4000 	str.w	r4, [fp]
 8018b36:	881c      	ldrh	r4, [r3, #0]
 8018b38:	682b      	ldr	r3, [r5, #0]
 8018b3a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018b3e:	682b      	ldr	r3, [r5, #0]
 8018b40:	3301      	adds	r3, #1
 8018b42:	602b      	str	r3, [r5, #0]
 8018b44:	e7ec      	b.n	8018b20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018b46:	2620      	movs	r6, #32
 8018b48:	b151      	cbz	r1, 8018b60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018b4a:	6828      	ldr	r0, [r5, #0]
 8018b4c:	3901      	subs	r1, #1
 8018b4e:	4282      	cmp	r2, r0
 8018b50:	b289      	uxth	r1, r1
 8018b52:	dd05      	ble.n	8018b60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018b54:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8018b58:	682b      	ldr	r3, [r5, #0]
 8018b5a:	3301      	adds	r3, #1
 8018b5c:	602b      	str	r3, [r5, #0]
 8018b5e:	e7f3      	b.n	8018b48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018b60:	b005      	add	sp, #20
 8018b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8018b66:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018b6a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018b6e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018b72:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8018b76:	2400      	movs	r4, #0
 8018b78:	8014      	strh	r4, [r2, #0]
 8018b7a:	701c      	strb	r4, [r3, #0]
 8018b7c:	f888 4000 	strb.w	r4, [r8]
 8018b80:	f88c 4000 	strb.w	r4, [ip]
 8018b84:	f88e 4000 	strb.w	r4, [lr]
 8018b88:	703c      	strb	r4, [r7, #0]
 8018b8a:	6804      	ldr	r4, [r0, #0]
 8018b8c:	b1a4      	cbz	r4, 8018bb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018b8e:	8824      	ldrh	r4, [r4, #0]
 8018b90:	f04f 0901 	mov.w	r9, #1
 8018b94:	b314      	cbz	r4, 8018bdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018b96:	2c2b      	cmp	r4, #43	; 0x2b
 8018b98:	d001      	beq.n	8018b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018b9a:	2c20      	cmp	r4, #32
 8018b9c:	d110      	bne.n	8018bc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018b9e:	8014      	strh	r4, [r2, #0]
 8018ba0:	6804      	ldr	r4, [r0, #0]
 8018ba2:	b10c      	cbz	r4, 8018ba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018ba4:	3402      	adds	r4, #2
 8018ba6:	6004      	str	r4, [r0, #0]
 8018ba8:	680c      	ldr	r4, [r1, #0]
 8018baa:	b10c      	cbz	r4, 8018bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018bac:	3401      	adds	r4, #1
 8018bae:	600c      	str	r4, [r1, #0]
 8018bb0:	6804      	ldr	r4, [r0, #0]
 8018bb2:	b17c      	cbz	r4, 8018bd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018bb4:	8824      	ldrh	r4, [r4, #0]
 8018bb6:	e7ed      	b.n	8018b94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018bb8:	680c      	ldr	r4, [r1, #0]
 8018bba:	b17c      	cbz	r4, 8018bdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018bbc:	7824      	ldrb	r4, [r4, #0]
 8018bbe:	e7e7      	b.n	8018b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018bc0:	2c2d      	cmp	r4, #45	; 0x2d
 8018bc2:	d102      	bne.n	8018bca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018bc4:	f883 9000 	strb.w	r9, [r3]
 8018bc8:	e7ea      	b.n	8018ba0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018bca:	2c23      	cmp	r4, #35	; 0x23
 8018bcc:	d107      	bne.n	8018bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018bce:	f888 9000 	strb.w	r9, [r8]
 8018bd2:	e7e5      	b.n	8018ba0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018bd4:	680c      	ldr	r4, [r1, #0]
 8018bd6:	b10c      	cbz	r4, 8018bdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018bd8:	7824      	ldrb	r4, [r4, #0]
 8018bda:	e7db      	b.n	8018b94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018bdc:	2400      	movs	r4, #0
 8018bde:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018be2:	2b09      	cmp	r3, #9
 8018be4:	d901      	bls.n	8018bea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018be6:	2c2a      	cmp	r4, #42	; 0x2a
 8018be8:	d122      	bne.n	8018c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018bea:	2301      	movs	r3, #1
 8018bec:	2c30      	cmp	r4, #48	; 0x30
 8018bee:	f88e 3000 	strb.w	r3, [lr]
 8018bf2:	d10d      	bne.n	8018c10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018bf4:	f88c 3000 	strb.w	r3, [ip]
 8018bf8:	6803      	ldr	r3, [r0, #0]
 8018bfa:	b10b      	cbz	r3, 8018c00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018bfc:	3302      	adds	r3, #2
 8018bfe:	6003      	str	r3, [r0, #0]
 8018c00:	680b      	ldr	r3, [r1, #0]
 8018c02:	b10b      	cbz	r3, 8018c08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018c04:	3301      	adds	r3, #1
 8018c06:	600b      	str	r3, [r1, #0]
 8018c08:	6803      	ldr	r3, [r0, #0]
 8018c0a:	2b00      	cmp	r3, #0
 8018c0c:	d02f      	beq.n	8018c6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018c0e:	881c      	ldrh	r4, [r3, #0]
 8018c10:	2c2a      	cmp	r4, #42	; 0x2a
 8018c12:	d135      	bne.n	8018c80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018c14:	f04f 33ff 	mov.w	r3, #4294967295
 8018c18:	6033      	str	r3, [r6, #0]
 8018c1a:	6803      	ldr	r3, [r0, #0]
 8018c1c:	b10b      	cbz	r3, 8018c22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018c1e:	3302      	adds	r3, #2
 8018c20:	6003      	str	r3, [r0, #0]
 8018c22:	680b      	ldr	r3, [r1, #0]
 8018c24:	b10b      	cbz	r3, 8018c2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018c26:	3301      	adds	r3, #1
 8018c28:	600b      	str	r3, [r1, #0]
 8018c2a:	6803      	ldr	r3, [r0, #0]
 8018c2c:	b31b      	cbz	r3, 8018c76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018c2e:	881c      	ldrh	r4, [r3, #0]
 8018c30:	2c2e      	cmp	r4, #46	; 0x2e
 8018c32:	d11a      	bne.n	8018c6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018c34:	2301      	movs	r3, #1
 8018c36:	703b      	strb	r3, [r7, #0]
 8018c38:	6803      	ldr	r3, [r0, #0]
 8018c3a:	b10b      	cbz	r3, 8018c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018c3c:	3302      	adds	r3, #2
 8018c3e:	6003      	str	r3, [r0, #0]
 8018c40:	680b      	ldr	r3, [r1, #0]
 8018c42:	b10b      	cbz	r3, 8018c48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018c44:	3301      	adds	r3, #1
 8018c46:	600b      	str	r3, [r1, #0]
 8018c48:	6803      	ldr	r3, [r0, #0]
 8018c4a:	2b00      	cmp	r3, #0
 8018c4c:	d036      	beq.n	8018cbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018c4e:	881b      	ldrh	r3, [r3, #0]
 8018c50:	2b2a      	cmp	r3, #42	; 0x2a
 8018c52:	d137      	bne.n	8018cc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018c54:	f04f 33ff 	mov.w	r3, #4294967295
 8018c58:	602b      	str	r3, [r5, #0]
 8018c5a:	6803      	ldr	r3, [r0, #0]
 8018c5c:	b10b      	cbz	r3, 8018c62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018c5e:	3302      	adds	r3, #2
 8018c60:	6003      	str	r3, [r0, #0]
 8018c62:	680b      	ldr	r3, [r1, #0]
 8018c64:	b10b      	cbz	r3, 8018c6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018c66:	3301      	adds	r3, #1
 8018c68:	600b      	str	r3, [r1, #0]
 8018c6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018c6e:	680c      	ldr	r4, [r1, #0]
 8018c70:	b134      	cbz	r4, 8018c80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018c72:	7824      	ldrb	r4, [r4, #0]
 8018c74:	e7cc      	b.n	8018c10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018c76:	680b      	ldr	r3, [r1, #0]
 8018c78:	2b00      	cmp	r3, #0
 8018c7a:	d0f6      	beq.n	8018c6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018c7c:	781c      	ldrb	r4, [r3, #0]
 8018c7e:	e7d7      	b.n	8018c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018c80:	2300      	movs	r3, #0
 8018c82:	6033      	str	r3, [r6, #0]
 8018c84:	220a      	movs	r2, #10
 8018c86:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018c8a:	fa1f f38c 	uxth.w	r3, ip
 8018c8e:	2b09      	cmp	r3, #9
 8018c90:	d8ce      	bhi.n	8018c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018c92:	6833      	ldr	r3, [r6, #0]
 8018c94:	fb02 c303 	mla	r3, r2, r3, ip
 8018c98:	6033      	str	r3, [r6, #0]
 8018c9a:	6803      	ldr	r3, [r0, #0]
 8018c9c:	b10b      	cbz	r3, 8018ca2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018c9e:	3302      	adds	r3, #2
 8018ca0:	6003      	str	r3, [r0, #0]
 8018ca2:	680b      	ldr	r3, [r1, #0]
 8018ca4:	b10b      	cbz	r3, 8018caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018ca6:	3301      	adds	r3, #1
 8018ca8:	600b      	str	r3, [r1, #0]
 8018caa:	6803      	ldr	r3, [r0, #0]
 8018cac:	b10b      	cbz	r3, 8018cb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018cae:	881c      	ldrh	r4, [r3, #0]
 8018cb0:	e7e9      	b.n	8018c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018cb2:	680c      	ldr	r4, [r1, #0]
 8018cb4:	2c00      	cmp	r4, #0
 8018cb6:	d0e6      	beq.n	8018c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018cb8:	7824      	ldrb	r4, [r4, #0]
 8018cba:	e7e4      	b.n	8018c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018cbc:	680b      	ldr	r3, [r1, #0]
 8018cbe:	b10b      	cbz	r3, 8018cc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018cc0:	781b      	ldrb	r3, [r3, #0]
 8018cc2:	e7c5      	b.n	8018c50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018cc4:	2200      	movs	r2, #0
 8018cc6:	602a      	str	r2, [r5, #0]
 8018cc8:	240a      	movs	r4, #10
 8018cca:	3b30      	subs	r3, #48	; 0x30
 8018ccc:	b29e      	uxth	r6, r3
 8018cce:	2e09      	cmp	r6, #9
 8018cd0:	682a      	ldr	r2, [r5, #0]
 8018cd2:	d813      	bhi.n	8018cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018cd4:	fb04 3302 	mla	r3, r4, r2, r3
 8018cd8:	602b      	str	r3, [r5, #0]
 8018cda:	6803      	ldr	r3, [r0, #0]
 8018cdc:	b10b      	cbz	r3, 8018ce2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018cde:	3302      	adds	r3, #2
 8018ce0:	6003      	str	r3, [r0, #0]
 8018ce2:	680b      	ldr	r3, [r1, #0]
 8018ce4:	b10b      	cbz	r3, 8018cea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018ce6:	3301      	adds	r3, #1
 8018ce8:	600b      	str	r3, [r1, #0]
 8018cea:	6803      	ldr	r3, [r0, #0]
 8018cec:	b10b      	cbz	r3, 8018cf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018cee:	881b      	ldrh	r3, [r3, #0]
 8018cf0:	e7eb      	b.n	8018cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018cf2:	680b      	ldr	r3, [r1, #0]
 8018cf4:	2b00      	cmp	r3, #0
 8018cf6:	d0e8      	beq.n	8018cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018cf8:	781b      	ldrb	r3, [r3, #0]
 8018cfa:	e7e6      	b.n	8018cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018cfc:	2a06      	cmp	r2, #6
 8018cfe:	bfa8      	it	ge
 8018d00:	2206      	movge	r2, #6
 8018d02:	602a      	str	r2, [r5, #0]
 8018d04:	e7b1      	b.n	8018c6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018d06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018d06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d0a:	b0a3      	sub	sp, #140	; 0x8c
 8018d0c:	2600      	movs	r6, #0
 8018d0e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018d12:	4607      	mov	r7, r0
 8018d14:	4688      	mov	r8, r1
 8018d16:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018d1a:	4631      	mov	r1, r6
 8018d1c:	2242      	movs	r2, #66	; 0x42
 8018d1e:	4648      	mov	r0, r9
 8018d20:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018d22:	960d      	str	r6, [sp, #52]	; 0x34
 8018d24:	f012 f881 	bl	802ae2a <memset>
 8018d28:	b15f      	cbz	r7, 8018d42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018d2a:	f108 3aff 	add.w	sl, r8, #4294967295
 8018d2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018d30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018d32:	b152      	cbz	r2, 8018d4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018d34:	8812      	ldrh	r2, [r2, #0]
 8018d36:	b10a      	cbz	r2, 8018d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018d38:	459a      	cmp	sl, r3
 8018d3a:	dc2e      	bgt.n	8018d9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018d3c:	2200      	movs	r2, #0
 8018d3e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018d42:	4638      	mov	r0, r7
 8018d44:	b023      	add	sp, #140	; 0x8c
 8018d46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d4a:	9a08      	ldr	r2, [sp, #32]
 8018d4c:	2a00      	cmp	r2, #0
 8018d4e:	d0f5      	beq.n	8018d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018d50:	7812      	ldrb	r2, [r2, #0]
 8018d52:	e7f0      	b.n	8018d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018d54:	2d00      	cmp	r5, #0
 8018d56:	d0ea      	beq.n	8018d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018d58:	782a      	ldrb	r2, [r5, #0]
 8018d5a:	b142      	cbz	r2, 8018d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018d5c:	2a25      	cmp	r2, #37	; 0x25
 8018d5e:	d001      	beq.n	8018d64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018d60:	459a      	cmp	sl, r3
 8018d62:	dc08      	bgt.n	8018d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018d64:	f1bb 0f00 	cmp.w	fp, #0
 8018d68:	d121      	bne.n	8018dae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018d6a:	2d00      	cmp	r5, #0
 8018d6c:	d0df      	beq.n	8018d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018d6e:	782a      	ldrb	r2, [r5, #0]
 8018d70:	f04f 0b00 	mov.w	fp, #0
 8018d74:	e01d      	b.n	8018db2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018d76:	f1bb 0f00 	cmp.w	fp, #0
 8018d7a:	d078      	beq.n	8018e6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018d7c:	f8bb 2000 	ldrh.w	r2, [fp]
 8018d80:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018d84:	f1bb 0f00 	cmp.w	fp, #0
 8018d88:	d002      	beq.n	8018d90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018d8a:	f10b 0202 	add.w	r2, fp, #2
 8018d8e:	9209      	str	r2, [sp, #36]	; 0x24
 8018d90:	b10d      	cbz	r5, 8018d96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018d92:	3501      	adds	r5, #1
 8018d94:	9508      	str	r5, [sp, #32]
 8018d96:	3301      	adds	r3, #1
 8018d98:	930d      	str	r3, [sp, #52]	; 0x34
 8018d9a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018d9e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018da0:	f1bb 0f00 	cmp.w	fp, #0
 8018da4:	d0d6      	beq.n	8018d54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018da6:	f8bb 2000 	ldrh.w	r2, [fp]
 8018daa:	2a00      	cmp	r2, #0
 8018dac:	d1d6      	bne.n	8018d5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018dae:	f8bb 2000 	ldrh.w	r2, [fp]
 8018db2:	2a00      	cmp	r2, #0
 8018db4:	d0bb      	beq.n	8018d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018db6:	459a      	cmp	sl, r3
 8018db8:	ddb9      	ble.n	8018d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018dba:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018dbe:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018dc2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018dc6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018dca:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018dce:	960e      	str	r6, [sp, #56]	; 0x38
 8018dd0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018dd4:	960f      	str	r6, [sp, #60]	; 0x3c
 8018dd6:	f1bb 0f00 	cmp.w	fp, #0
 8018dda:	d002      	beq.n	8018de2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018ddc:	f10b 0302 	add.w	r3, fp, #2
 8018de0:	9309      	str	r3, [sp, #36]	; 0x24
 8018de2:	b10d      	cbz	r5, 8018de8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018de4:	1c6b      	adds	r3, r5, #1
 8018de6:	9308      	str	r3, [sp, #32]
 8018de8:	ab0f      	add	r3, sp, #60	; 0x3c
 8018dea:	9305      	str	r3, [sp, #20]
 8018dec:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018df0:	9304      	str	r3, [sp, #16]
 8018df2:	ab0e      	add	r3, sp, #56	; 0x38
 8018df4:	9303      	str	r3, [sp, #12]
 8018df6:	ab0c      	add	r3, sp, #48	; 0x30
 8018df8:	9302      	str	r3, [sp, #8]
 8018dfa:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018dfe:	9301      	str	r3, [sp, #4]
 8018e00:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018e04:	9300      	str	r3, [sp, #0]
 8018e06:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018e0a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018e0e:	a908      	add	r1, sp, #32
 8018e10:	a809      	add	r0, sp, #36	; 0x24
 8018e12:	f7ff fea8 	bl	8018b66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018e16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018e18:	2b00      	cmp	r3, #0
 8018e1a:	bfbe      	ittt	lt
 8018e1c:	6823      	ldrlt	r3, [r4, #0]
 8018e1e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018e22:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018e24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018e26:	bfb8      	it	lt
 8018e28:	3404      	addlt	r4, #4
 8018e2a:	2b00      	cmp	r3, #0
 8018e2c:	bfb8      	it	lt
 8018e2e:	6823      	ldrlt	r3, [r4, #0]
 8018e30:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018e34:	bfbe      	ittt	lt
 8018e36:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018e3a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018e3c:	3404      	addlt	r4, #4
 8018e3e:	b1d9      	cbz	r1, 8018e78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018e40:	880b      	ldrh	r3, [r1, #0]
 8018e42:	2b69      	cmp	r3, #105	; 0x69
 8018e44:	d01f      	beq.n	8018e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018e46:	d82f      	bhi.n	8018ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018e48:	2b58      	cmp	r3, #88	; 0x58
 8018e4a:	d01c      	beq.n	8018e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018e4c:	d818      	bhi.n	8018e80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018e4e:	2b25      	cmp	r3, #37	; 0x25
 8018e50:	d034      	beq.n	8018ebc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018e52:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018e56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018e58:	f1bb 0f00 	cmp.w	fp, #0
 8018e5c:	f000 80b8 	beq.w	8018fd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018e60:	f8bb 5000 	ldrh.w	r5, [fp]
 8018e64:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018e68:	3301      	adds	r3, #1
 8018e6a:	930d      	str	r3, [sp, #52]	; 0x34
 8018e6c:	e029      	b.n	8018ec2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018e6e:	b10d      	cbz	r5, 8018e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018e70:	782a      	ldrb	r2, [r5, #0]
 8018e72:	e785      	b.n	8018d80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018e74:	462a      	mov	r2, r5
 8018e76:	e783      	b.n	8018d80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018e78:	2a00      	cmp	r2, #0
 8018e7a:	d0ea      	beq.n	8018e52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018e7c:	7813      	ldrb	r3, [r2, #0]
 8018e7e:	e7e0      	b.n	8018e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8018e80:	3b63      	subs	r3, #99	; 0x63
 8018e82:	2b01      	cmp	r3, #1
 8018e84:	d8e5      	bhi.n	8018e52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018e86:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018e8a:	b329      	cbz	r1, 8018ed8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018e8c:	880b      	ldrh	r3, [r1, #0]
 8018e8e:	2b69      	cmp	r3, #105	; 0x69
 8018e90:	d063      	beq.n	8018f5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018e92:	d825      	bhi.n	8018ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018e94:	2b63      	cmp	r3, #99	; 0x63
 8018e96:	d038      	beq.n	8018f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018e98:	2b64      	cmp	r3, #100	; 0x64
 8018e9a:	d05e      	beq.n	8018f5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018e9c:	2b58      	cmp	r3, #88	; 0x58
 8018e9e:	d07b      	beq.n	8018f98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018ea0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018ea4:	4625      	mov	r5, r4
 8018ea6:	e036      	b.n	8018f16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018ea8:	2b73      	cmp	r3, #115	; 0x73
 8018eaa:	d0ec      	beq.n	8018e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018eac:	d802      	bhi.n	8018eb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018eae:	2b6f      	cmp	r3, #111	; 0x6f
 8018eb0:	d1cf      	bne.n	8018e52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018eb2:	e7e8      	b.n	8018e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018eb4:	2b75      	cmp	r3, #117	; 0x75
 8018eb6:	d0e6      	beq.n	8018e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018eb8:	2b78      	cmp	r3, #120	; 0x78
 8018eba:	e7f9      	b.n	8018eb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018ebc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018ebe:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018ec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ec4:	b10b      	cbz	r3, 8018eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018ec6:	3302      	adds	r3, #2
 8018ec8:	9309      	str	r3, [sp, #36]	; 0x24
 8018eca:	9b08      	ldr	r3, [sp, #32]
 8018ecc:	2b00      	cmp	r3, #0
 8018ece:	f43f af2e 	beq.w	8018d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018ed2:	3301      	adds	r3, #1
 8018ed4:	9308      	str	r3, [sp, #32]
 8018ed6:	e72a      	b.n	8018d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018ed8:	2a00      	cmp	r2, #0
 8018eda:	d0e1      	beq.n	8018ea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018edc:	7813      	ldrb	r3, [r2, #0]
 8018ede:	e7d6      	b.n	8018e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018ee0:	2b73      	cmp	r3, #115	; 0x73
 8018ee2:	d036      	beq.n	8018f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018ee4:	d807      	bhi.n	8018ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018ee6:	2b6f      	cmp	r3, #111	; 0x6f
 8018ee8:	d1da      	bne.n	8018ea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018eea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018eec:	1d25      	adds	r5, r4, #4
 8018eee:	eba8 0202 	sub.w	r2, r8, r2
 8018ef2:	2308      	movs	r3, #8
 8018ef4:	e04a      	b.n	8018f8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018ef6:	2b75      	cmp	r3, #117	; 0x75
 8018ef8:	d043      	beq.n	8018f82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018efa:	2b78      	cmp	r3, #120	; 0x78
 8018efc:	d1d0      	bne.n	8018ea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018efe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f00:	1d25      	adds	r5, r4, #4
 8018f02:	eba8 0202 	sub.w	r2, r8, r2
 8018f06:	2310      	movs	r3, #16
 8018f08:	e040      	b.n	8018f8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018f0a:	6823      	ldr	r3, [r4, #0]
 8018f0c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018f10:	1d25      	adds	r5, r4, #4
 8018f12:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018f16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f18:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018f1c:	2b00      	cmp	r3, #0
 8018f1e:	d052      	beq.n	8018fc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018f20:	881a      	ldrh	r2, [r3, #0]
 8018f22:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018f26:	a80d      	add	r0, sp, #52	; 0x34
 8018f28:	9005      	str	r0, [sp, #20]
 8018f2a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018f2e:	9004      	str	r0, [sp, #16]
 8018f30:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018f32:	9003      	str	r0, [sp, #12]
 8018f34:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018f38:	9002      	str	r0, [sp, #8]
 8018f3a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018f3c:	9001      	str	r0, [sp, #4]
 8018f3e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018f42:	9000      	str	r0, [sp, #0]
 8018f44:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018f48:	a810      	add	r0, sp, #64	; 0x40
 8018f4a:	f7ff fd49 	bl	80189e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018f4e:	462c      	mov	r4, r5
 8018f50:	e7b7      	b.n	8018ec2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018f52:	6823      	ldr	r3, [r4, #0]
 8018f54:	1d25      	adds	r5, r4, #4
 8018f56:	9310      	str	r3, [sp, #64]	; 0x40
 8018f58:	e7dd      	b.n	8018f16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f5c:	6820      	ldr	r0, [r4, #0]
 8018f5e:	eba8 0202 	sub.w	r2, r8, r2
 8018f62:	230a      	movs	r3, #10
 8018f64:	b292      	uxth	r2, r2
 8018f66:	4649      	mov	r1, r9
 8018f68:	f7ff fce4 	bl	8018934 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018f6c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018f70:	2b2d      	cmp	r3, #45	; 0x2d
 8018f72:	f104 0504 	add.w	r5, r4, #4
 8018f76:	d1ce      	bne.n	8018f16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f78:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018f7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f7e:	3302      	adds	r3, #2
 8018f80:	e7e9      	b.n	8018f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8018f82:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f84:	1d25      	adds	r5, r4, #4
 8018f86:	eba8 0202 	sub.w	r2, r8, r2
 8018f8a:	230a      	movs	r3, #10
 8018f8c:	b292      	uxth	r2, r2
 8018f8e:	4649      	mov	r1, r9
 8018f90:	6820      	ldr	r0, [r4, #0]
 8018f92:	f7ff fcfb 	bl	801898c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018f96:	e7be      	b.n	8018f16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f9a:	6820      	ldr	r0, [r4, #0]
 8018f9c:	eba8 0202 	sub.w	r2, r8, r2
 8018fa0:	b292      	uxth	r2, r2
 8018fa2:	2310      	movs	r3, #16
 8018fa4:	4649      	mov	r1, r9
 8018fa6:	f7ff fcf1 	bl	801898c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018faa:	1d25      	adds	r5, r4, #4
 8018fac:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8018fb0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018fb4:	2b00      	cmp	r3, #0
 8018fb6:	d0ae      	beq.n	8018f16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018fb8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018fbc:	2919      	cmp	r1, #25
 8018fbe:	d8f7      	bhi.n	8018fb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018fc0:	3b20      	subs	r3, #32
 8018fc2:	8013      	strh	r3, [r2, #0]
 8018fc4:	e7f4      	b.n	8018fb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018fc6:	9a08      	ldr	r2, [sp, #32]
 8018fc8:	2a00      	cmp	r2, #0
 8018fca:	d0aa      	beq.n	8018f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018fcc:	7812      	ldrb	r2, [r2, #0]
 8018fce:	e7a8      	b.n	8018f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018fd0:	2d00      	cmp	r5, #0
 8018fd2:	f43f af47 	beq.w	8018e64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018fd6:	782d      	ldrb	r5, [r5, #0]
 8018fd8:	e744      	b.n	8018e64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018fda <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018fda:	b507      	push	{r0, r1, r2, lr}
 8018fdc:	9300      	str	r3, [sp, #0]
 8018fde:	4613      	mov	r3, r2
 8018fe0:	2200      	movs	r2, #0
 8018fe2:	f7ff fe90 	bl	8018d06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018fe6:	b003      	add	sp, #12
 8018fe8:	f85d fb04 	ldr.w	pc, [sp], #4

08018fec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018fec:	b40c      	push	{r2, r3}
 8018fee:	b507      	push	{r0, r1, r2, lr}
 8018ff0:	ab04      	add	r3, sp, #16
 8018ff2:	f853 2b04 	ldr.w	r2, [r3], #4
 8018ff6:	9301      	str	r3, [sp, #4]
 8018ff8:	f7ff ffef 	bl	8018fda <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018ffc:	b003      	add	sp, #12
 8018ffe:	f85d eb04 	ldr.w	lr, [sp], #4
 8019002:	b002      	add	sp, #8
 8019004:	4770      	bx	lr
	...

08019008 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8019008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801900c:	b0c5      	sub	sp, #276	; 0x114
 801900e:	2400      	movs	r4, #0
 8019010:	af11      	add	r7, sp, #68	; 0x44
 8019012:	4606      	mov	r6, r0
 8019014:	468a      	mov	sl, r1
 8019016:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801901a:	4621      	mov	r1, r4
 801901c:	22c8      	movs	r2, #200	; 0xc8
 801901e:	4638      	mov	r0, r7
 8019020:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8019024:	940d      	str	r4, [sp, #52]	; 0x34
 8019026:	f011 ff00 	bl	802ae2a <memset>
 801902a:	b16e      	cbz	r6, 8019048 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801902c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 80192d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8019030:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019032:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019034:	b162      	cbz	r2, 8019050 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8019036:	8812      	ldrh	r2, [r2, #0]
 8019038:	b11a      	cbz	r2, 8019042 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801903a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801903e:	4299      	cmp	r1, r3
 8019040:	dc2e      	bgt.n	80190a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8019042:	2200      	movs	r2, #0
 8019044:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019048:	4630      	mov	r0, r6
 801904a:	b045      	add	sp, #276	; 0x114
 801904c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019050:	9a08      	ldr	r2, [sp, #32]
 8019052:	2a00      	cmp	r2, #0
 8019054:	d0f5      	beq.n	8019042 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019056:	7812      	ldrb	r2, [r2, #0]
 8019058:	e7ee      	b.n	8019038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801905a:	2d00      	cmp	r5, #0
 801905c:	d0e8      	beq.n	8019030 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801905e:	782a      	ldrb	r2, [r5, #0]
 8019060:	b142      	cbz	r2, 8019074 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8019062:	2a25      	cmp	r2, #37	; 0x25
 8019064:	d001      	beq.n	801906a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8019066:	4299      	cmp	r1, r3
 8019068:	dc08      	bgt.n	801907c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801906a:	f1b8 0f00 	cmp.w	r8, #0
 801906e:	d121      	bne.n	80190b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8019070:	2d00      	cmp	r5, #0
 8019072:	d0dd      	beq.n	8019030 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019074:	782a      	ldrb	r2, [r5, #0]
 8019076:	f04f 0800 	mov.w	r8, #0
 801907a:	e01d      	b.n	80190b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801907c:	f1b8 0f00 	cmp.w	r8, #0
 8019080:	d07f      	beq.n	8019182 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8019082:	f8b8 2000 	ldrh.w	r2, [r8]
 8019086:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801908a:	f1b8 0f00 	cmp.w	r8, #0
 801908e:	d002      	beq.n	8019096 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019090:	f108 0202 	add.w	r2, r8, #2
 8019094:	9209      	str	r2, [sp, #36]	; 0x24
 8019096:	b10d      	cbz	r5, 801909c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8019098:	3501      	adds	r5, #1
 801909a:	9508      	str	r5, [sp, #32]
 801909c:	3301      	adds	r3, #1
 801909e:	930d      	str	r3, [sp, #52]	; 0x34
 80190a0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 80190a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80190a6:	f1b8 0f00 	cmp.w	r8, #0
 80190aa:	d0d6      	beq.n	801905a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 80190ac:	f8b8 2000 	ldrh.w	r2, [r8]
 80190b0:	2a00      	cmp	r2, #0
 80190b2:	d1d6      	bne.n	8019062 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 80190b4:	f8b8 2000 	ldrh.w	r2, [r8]
 80190b8:	2a00      	cmp	r2, #0
 80190ba:	d0b9      	beq.n	8019030 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80190bc:	4299      	cmp	r1, r3
 80190be:	ddb7      	ble.n	8019030 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80190c0:	2300      	movs	r3, #0
 80190c2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80190c6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80190ca:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 80190ce:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 80190d2:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 80190d6:	930e      	str	r3, [sp, #56]	; 0x38
 80190d8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80190dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80190de:	f1b8 0f00 	cmp.w	r8, #0
 80190e2:	d002      	beq.n	80190ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 80190e4:	f108 0302 	add.w	r3, r8, #2
 80190e8:	9309      	str	r3, [sp, #36]	; 0x24
 80190ea:	b10d      	cbz	r5, 80190f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 80190ec:	1c6b      	adds	r3, r5, #1
 80190ee:	9308      	str	r3, [sp, #32]
 80190f0:	ab0f      	add	r3, sp, #60	; 0x3c
 80190f2:	9305      	str	r3, [sp, #20]
 80190f4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80190f8:	9304      	str	r3, [sp, #16]
 80190fa:	ab0e      	add	r3, sp, #56	; 0x38
 80190fc:	9303      	str	r3, [sp, #12]
 80190fe:	ab0c      	add	r3, sp, #48	; 0x30
 8019100:	9302      	str	r3, [sp, #8]
 8019102:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019106:	9301      	str	r3, [sp, #4]
 8019108:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801910c:	9300      	str	r3, [sp, #0]
 801910e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019112:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019116:	a908      	add	r1, sp, #32
 8019118:	a809      	add	r0, sp, #36	; 0x24
 801911a:	f7ff fd24 	bl	8018b66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801911e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019120:	2b00      	cmp	r3, #0
 8019122:	da0b      	bge.n	801913c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8019124:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019128:	edd3 7a00 	vldr	s15, [r3]
 801912c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019130:	3401      	adds	r4, #1
 8019132:	ee17 3a90 	vmov	r3, s15
 8019136:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801913a:	930e      	str	r3, [sp, #56]	; 0x38
 801913c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801913e:	2b00      	cmp	r3, #0
 8019140:	da0b      	bge.n	801915a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8019142:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019146:	edd3 7a00 	vldr	s15, [r3]
 801914a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801914e:	3401      	adds	r4, #1
 8019150:	ee17 3a90 	vmov	r3, s15
 8019154:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019158:	930f      	str	r3, [sp, #60]	; 0x3c
 801915a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801915c:	b1b3      	cbz	r3, 801918c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801915e:	881a      	ldrh	r2, [r3, #0]
 8019160:	2a25      	cmp	r2, #37	; 0x25
 8019162:	d018      	beq.n	8019196 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8019164:	2a66      	cmp	r2, #102	; 0x66
 8019166:	d01c      	beq.n	80191a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8019168:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801916c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801916e:	f1b8 0f00 	cmp.w	r8, #0
 8019172:	f000 8121 	beq.w	80193b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8019176:	f8b8 5000 	ldrh.w	r5, [r8]
 801917a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801917e:	3301      	adds	r3, #1
 8019180:	e00d      	b.n	801919e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019182:	b10d      	cbz	r5, 8019188 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019184:	782a      	ldrb	r2, [r5, #0]
 8019186:	e77e      	b.n	8019086 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019188:	462a      	mov	r2, r5
 801918a:	e77c      	b.n	8019086 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801918c:	9b08      	ldr	r3, [sp, #32]
 801918e:	2b00      	cmp	r3, #0
 8019190:	d0ea      	beq.n	8019168 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019192:	781a      	ldrb	r2, [r3, #0]
 8019194:	e7e4      	b.n	8019160 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8019196:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019198:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801919c:	3302      	adds	r3, #2
 801919e:	930d      	str	r3, [sp, #52]	; 0x34
 80191a0:	e041      	b.n	8019226 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 80191a2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80191a6:	edd3 7a00 	vldr	s15, [r3]
 80191aa:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80191ae:	9710      	str	r7, [sp, #64]	; 0x40
 80191b0:	3401      	adds	r4, #1
 80191b2:	b923      	cbnz	r3, 80191be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80191b4:	2301      	movs	r3, #1
 80191b6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80191ba:	2306      	movs	r3, #6
 80191bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80191be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80191c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191c6:	bf48      	it	mi
 80191c8:	eef1 7a67 	vnegmi.f32	s15, s15
 80191cc:	eeb0 7ae7 	vabs.f32	s14, s15
 80191d0:	bf48      	it	mi
 80191d2:	232d      	movmi	r3, #45	; 0x2d
 80191d4:	eeb4 7a45 	vcmp.f32	s14, s10
 80191d8:	bf48      	it	mi
 80191da:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 80191de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191e2:	dd2b      	ble.n	801923c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80191e4:	4b3b      	ldr	r3, [pc, #236]	; (80192d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80191e6:	9311      	str	r3, [sp, #68]	; 0x44
 80191e8:	2366      	movs	r3, #102	; 0x66
 80191ea:	9312      	str	r3, [sp, #72]	; 0x48
 80191ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191ee:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80191f2:	2b00      	cmp	r3, #0
 80191f4:	f000 80da 	beq.w	80193ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 80191f8:	881a      	ldrh	r2, [r3, #0]
 80191fa:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80191fe:	a80d      	add	r0, sp, #52	; 0x34
 8019200:	9005      	str	r0, [sp, #20]
 8019202:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019206:	9004      	str	r0, [sp, #16]
 8019208:	980e      	ldr	r0, [sp, #56]	; 0x38
 801920a:	9003      	str	r0, [sp, #12]
 801920c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019210:	9002      	str	r0, [sp, #8]
 8019212:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019214:	9001      	str	r0, [sp, #4]
 8019216:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801921a:	9000      	str	r0, [sp, #0]
 801921c:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019220:	a810      	add	r0, sp, #64	; 0x40
 8019222:	f7ff fbdd 	bl	80189e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019226:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019228:	b10b      	cbz	r3, 801922e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801922a:	3302      	adds	r3, #2
 801922c:	9309      	str	r3, [sp, #36]	; 0x24
 801922e:	9b08      	ldr	r3, [sp, #32]
 8019230:	2b00      	cmp	r3, #0
 8019232:	f43f aefd 	beq.w	8019030 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019236:	3301      	adds	r3, #1
 8019238:	9308      	str	r3, [sp, #32]
 801923a:	e6f9      	b.n	8019030 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801923c:	eef4 7a67 	vcmp.f32	s15, s15
 8019240:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019244:	d63a      	bvs.n	80192bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 8019246:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801924a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801924e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8019252:	eeb0 6a67 	vmov.f32	s12, s15
 8019256:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801925a:	eef0 5a47 	vmov.f32	s11, s14
 801925e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019262:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019266:	da2d      	bge.n	80192c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8019268:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801926a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801926e:	2100      	movs	r1, #0
 8019270:	eef0 4a46 	vmov.f32	s9, s12
 8019274:	ebaa 0202 	sub.w	r2, sl, r2
 8019278:	eef4 6ac6 	vcmpe.f32	s13, s12
 801927c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019280:	b28d      	uxth	r5, r1
 8019282:	db2c      	blt.n	80192de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019284:	1a53      	subs	r3, r2, r1
 8019286:	2b00      	cmp	r3, #0
 8019288:	dd29      	ble.n	80192de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801928a:	3101      	adds	r1, #1
 801928c:	2964      	cmp	r1, #100	; 0x64
 801928e:	d025      	beq.n	80192dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019290:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019294:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8019298:	ee17 3a10 	vmov	r3, s14
 801929c:	2b09      	cmp	r3, #9
 801929e:	bfa8      	it	ge
 80192a0:	2309      	movge	r3, #9
 80192a2:	ee07 3a10 	vmov	s14, r3
 80192a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80192aa:	f103 0030 	add.w	r0, r3, #48	; 0x30
 80192ae:	eee7 7a66 	vfms.f32	s15, s14, s13
 80192b2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80192b6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80192ba:	e7dd      	b.n	8019278 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80192bc:	4b06      	ldr	r3, [pc, #24]	; (80192d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80192be:	9311      	str	r3, [sp, #68]	; 0x44
 80192c0:	236e      	movs	r3, #110	; 0x6e
 80192c2:	e792      	b.n	80191ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80192c4:	ee66 6a87 	vmul.f32	s13, s13, s14
 80192c8:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80192cc:	e7c7      	b.n	801925e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80192ce:	bf00      	nop
 80192d0:	7f7fffff 	.word	0x7f7fffff
 80192d4:	006e0069 	.word	0x006e0069
 80192d8:	0061006e 	.word	0x0061006e
 80192dc:	2563      	movs	r5, #99	; 0x63
 80192de:	2a63      	cmp	r2, #99	; 0x63
 80192e0:	bfd4      	ite	le
 80192e2:	ebc5 0202 	rsble	r2, r5, r2
 80192e6:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 80192ea:	2a00      	cmp	r2, #0
 80192ec:	dd43      	ble.n	8019376 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80192ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80192f0:	2b00      	cmp	r3, #0
 80192f2:	dd40      	ble.n	8019376 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80192f4:	f04f 0901 	mov.w	r9, #1
 80192f8:	210a      	movs	r1, #10
 80192fa:	f113 33ff 	adds.w	r3, r3, #4294967295
 80192fe:	d30c      	bcc.n	801931a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019300:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019304:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8019308:	ee17 0a10 	vmov	r0, s14
 801930c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019310:	fb01 0909 	mla	r9, r1, r9, r0
 8019314:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019318:	e7ef      	b.n	80192fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801931a:	3501      	adds	r5, #1
 801931c:	930f      	str	r3, [sp, #60]	; 0x3c
 801931e:	b292      	uxth	r2, r2
 8019320:	230a      	movs	r3, #10
 8019322:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 8019326:	4648      	mov	r0, r9
 8019328:	f7ff fb4e 	bl	80189c8 <_ZN8touchgfx7Unicode4itoaElPtti>
 801932c:	f1b9 0f01 	cmp.w	r9, #1
 8019330:	dc1f      	bgt.n	8019372 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8019332:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 8019336:	2b00      	cmp	r3, #0
 8019338:	bf0c      	ite	eq
 801933a:	2300      	moveq	r3, #0
 801933c:	232e      	movne	r3, #46	; 0x2e
 801933e:	aa44      	add	r2, sp, #272	; 0x110
 8019340:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019344:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801934c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019350:	f6ff af4c 	blt.w	80191ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019354:	2300      	movs	r3, #0
 8019356:	f838 2b02 	ldrh.w	r2, [r8], #2
 801935a:	1c59      	adds	r1, r3, #1
 801935c:	b98a      	cbnz	r2, 8019382 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801935e:	b29b      	uxth	r3, r3
 8019360:	2130      	movs	r1, #48	; 0x30
 8019362:	b983      	cbnz	r3, 8019386 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019364:	2331      	movs	r3, #49	; 0x31
 8019366:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801936a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801936c:	3b02      	subs	r3, #2
 801936e:	9310      	str	r3, [sp, #64]	; 0x40
 8019370:	e73c      	b.n	80191ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019372:	232e      	movs	r3, #46	; 0x2e
 8019374:	e7e3      	b.n	801933e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8019376:	ab44      	add	r3, sp, #272	; 0x110
 8019378:	3501      	adds	r5, #1
 801937a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801937e:	2300      	movs	r3, #0
 8019380:	e7e0      	b.n	8019344 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019382:	460b      	mov	r3, r1
 8019384:	e7e7      	b.n	8019356 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8019386:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801938a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801938e:	2808      	cmp	r0, #8
 8019390:	d806      	bhi.n	80193a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019392:	a944      	add	r1, sp, #272	; 0x110
 8019394:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8019398:	3201      	adds	r2, #1
 801939a:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801939e:	e725      	b.n	80191ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80193a0:	2a39      	cmp	r2, #57	; 0x39
 80193a2:	bf08      	it	eq
 80193a4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 80193a8:	3b01      	subs	r3, #1
 80193aa:	e7da      	b.n	8019362 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 80193ac:	9a08      	ldr	r2, [sp, #32]
 80193ae:	2a00      	cmp	r2, #0
 80193b0:	f43f af23 	beq.w	80191fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80193b4:	7812      	ldrb	r2, [r2, #0]
 80193b6:	e720      	b.n	80191fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80193b8:	2d00      	cmp	r5, #0
 80193ba:	f43f aede 	beq.w	801917a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80193be:	782d      	ldrb	r5, [r5, #0]
 80193c0:	e6db      	b.n	801917a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80193c2:	bf00      	nop

080193c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80193c4:	b507      	push	{r0, r1, r2, lr}
 80193c6:	9300      	str	r3, [sp, #0]
 80193c8:	4613      	mov	r3, r2
 80193ca:	2200      	movs	r2, #0
 80193cc:	f7ff fe1c 	bl	8019008 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80193d0:	b003      	add	sp, #12
 80193d2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080193d8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80193d8:	4b01      	ldr	r3, [pc, #4]	; (80193e0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80193da:	6018      	str	r0, [r3, #0]
 80193dc:	4770      	bx	lr
 80193de:	bf00      	nop
 80193e0:	20013324 	.word	0x20013324

080193e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80193e4:	4b06      	ldr	r3, [pc, #24]	; (8019400 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80193e6:	881a      	ldrh	r2, [r3, #0]
 80193e8:	4282      	cmp	r2, r0
 80193ea:	d807      	bhi.n	80193fc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80193ec:	4b05      	ldr	r3, [pc, #20]	; (8019404 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80193ee:	881b      	ldrh	r3, [r3, #0]
 80193f0:	4413      	add	r3, r2
 80193f2:	4298      	cmp	r0, r3
 80193f4:	bfac      	ite	ge
 80193f6:	2000      	movge	r0, #0
 80193f8:	2001      	movlt	r0, #1
 80193fa:	4770      	bx	lr
 80193fc:	2000      	movs	r0, #0
 80193fe:	4770      	bx	lr
 8019400:	20013344 	.word	0x20013344
 8019404:	20013348 	.word	0x20013348

08019408 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019408:	b508      	push	{r3, lr}
 801940a:	4601      	mov	r1, r0
 801940c:	f7ff ffea 	bl	80193e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019410:	b118      	cbz	r0, 801941a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019412:	4b02      	ldr	r3, [pc, #8]	; (801941c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019414:	681b      	ldr	r3, [r3, #0]
 8019416:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801941a:	bd08      	pop	{r3, pc}
 801941c:	20013328 	.word	0x20013328

08019420 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019420:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019422:	4c24      	ldr	r4, [pc, #144]	; (80194b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019424:	6823      	ldr	r3, [r4, #0]
 8019426:	2b00      	cmp	r3, #0
 8019428:	d042      	beq.n	80194b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801942a:	4a23      	ldr	r2, [pc, #140]	; (80194b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801942c:	4d23      	ldr	r5, [pc, #140]	; (80194bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801942e:	8811      	ldrh	r1, [r2, #0]
 8019430:	f8b5 c000 	ldrh.w	ip, [r5]
 8019434:	4822      	ldr	r0, [pc, #136]	; (80194c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8019436:	4461      	add	r1, ip
 8019438:	1c4a      	adds	r2, r1, #1
 801943a:	f022 0201 	bic.w	r2, r2, #1
 801943e:	008f      	lsls	r7, r1, #2
 8019440:	0412      	lsls	r2, r2, #16
 8019442:	19de      	adds	r6, r3, r7
 8019444:	0c12      	lsrs	r2, r2, #16
 8019446:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801944a:	6006      	str	r6, [r0, #0]
 801944c:	4e1d      	ldr	r6, [pc, #116]	; (80194c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801944e:	19da      	adds	r2, r3, r7
 8019450:	6032      	str	r2, [r6, #0]
 8019452:	220e      	movs	r2, #14
 8019454:	fb02 f20c 	mul.w	r2, r2, ip
 8019458:	3203      	adds	r2, #3
 801945a:	f022 0203 	bic.w	r2, r2, #3
 801945e:	443a      	add	r2, r7
 8019460:	4f19      	ldr	r7, [pc, #100]	; (80194c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019462:	4413      	add	r3, r2
 8019464:	603b      	str	r3, [r7, #0]
 8019466:	4f19      	ldr	r7, [pc, #100]	; (80194cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8019468:	2300      	movs	r3, #0
 801946a:	803b      	strh	r3, [r7, #0]
 801946c:	4f18      	ldr	r7, [pc, #96]	; (80194d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801946e:	683f      	ldr	r7, [r7, #0]
 8019470:	1aba      	subs	r2, r7, r2
 8019472:	4f18      	ldr	r7, [pc, #96]	; (80194d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019474:	603a      	str	r2, [r7, #0]
 8019476:	4a18      	ldr	r2, [pc, #96]	; (80194d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019478:	469c      	mov	ip, r3
 801947a:	8013      	strh	r3, [r2, #0]
 801947c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019480:	428b      	cmp	r3, r1
 8019482:	d10d      	bne.n	80194a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019484:	882d      	ldrh	r5, [r5, #0]
 8019486:	6830      	ldr	r0, [r6, #0]
 8019488:	2300      	movs	r3, #0
 801948a:	240e      	movs	r4, #14
 801948c:	429d      	cmp	r5, r3
 801948e:	d90f      	bls.n	80194b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019490:	fb04 0203 	mla	r2, r4, r3, r0
 8019494:	3301      	adds	r3, #1
 8019496:	7b11      	ldrb	r1, [r2, #12]
 8019498:	f36f 1145 	bfc	r1, #5, #1
 801949c:	7311      	strb	r1, [r2, #12]
 801949e:	e7f5      	b.n	801948c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80194a0:	6822      	ldr	r2, [r4, #0]
 80194a2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80194a6:	6802      	ldr	r2, [r0, #0]
 80194a8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80194ac:	3301      	adds	r3, #1
 80194ae:	e7e7      	b.n	8019480 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80194b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80194b2:	bf00      	nop
 80194b4:	20013328 	.word	0x20013328
 80194b8:	20013344 	.word	0x20013344
 80194bc:	20013348 	.word	0x20013348
 80194c0:	2001333c 	.word	0x2001333c
 80194c4:	2001332c 	.word	0x2001332c
 80194c8:	20013334 	.word	0x20013334
 80194cc:	20013346 	.word	0x20013346
 80194d0:	20013330 	.word	0x20013330
 80194d4:	20013340 	.word	0x20013340
 80194d8:	20013338 	.word	0x20013338

080194dc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80194dc:	4b06      	ldr	r3, [pc, #24]	; (80194f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80194de:	681b      	ldr	r3, [r3, #0]
 80194e0:	b943      	cbnz	r3, 80194f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80194e2:	b139      	cbz	r1, 80194f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80194e4:	4b05      	ldr	r3, [pc, #20]	; (80194fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80194e6:	801a      	strh	r2, [r3, #0]
 80194e8:	4b05      	ldr	r3, [pc, #20]	; (8019500 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80194ea:	6019      	str	r1, [r3, #0]
 80194ec:	4b05      	ldr	r3, [pc, #20]	; (8019504 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80194ee:	6018      	str	r0, [r3, #0]
 80194f0:	f7ff bf96 	b.w	8019420 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80194f4:	4770      	bx	lr
 80194f6:	bf00      	nop
 80194f8:	20013334 	.word	0x20013334
 80194fc:	20013348 	.word	0x20013348
 8019500:	20013330 	.word	0x20013330
 8019504:	20013328 	.word	0x20013328

08019508 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8019508:	b470      	push	{r4, r5, r6}
 801950a:	4c07      	ldr	r4, [pc, #28]	; (8019528 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801950c:	6826      	ldr	r6, [r4, #0]
 801950e:	4605      	mov	r5, r0
 8019510:	4610      	mov	r0, r2
 8019512:	9a03      	ldr	r2, [sp, #12]
 8019514:	b936      	cbnz	r6, 8019524 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8019516:	6025      	str	r5, [r4, #0]
 8019518:	4c04      	ldr	r4, [pc, #16]	; (801952c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801951a:	8021      	strh	r1, [r4, #0]
 801951c:	bc70      	pop	{r4, r5, r6}
 801951e:	4619      	mov	r1, r3
 8019520:	f7ff bfdc 	b.w	80194dc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019524:	bc70      	pop	{r4, r5, r6}
 8019526:	4770      	bx	lr
 8019528:	2001334c 	.word	0x2001334c
 801952c:	20013344 	.word	0x20013344

08019530 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019530:	4a12      	ldr	r2, [pc, #72]	; (801957c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8019532:	8803      	ldrh	r3, [r0, #0]
 8019534:	8812      	ldrh	r2, [r2, #0]
 8019536:	4293      	cmp	r3, r2
 8019538:	d207      	bcs.n	801954a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801953a:	4a11      	ldr	r2, [pc, #68]	; (8019580 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801953c:	6812      	ldr	r2, [r2, #0]
 801953e:	2114      	movs	r1, #20
 8019540:	fb01 2303 	mla	r3, r1, r3, r2
 8019544:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8019548:	4770      	bx	lr
 801954a:	490e      	ldr	r1, [pc, #56]	; (8019584 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801954c:	8809      	ldrh	r1, [r1, #0]
 801954e:	4411      	add	r1, r2
 8019550:	428b      	cmp	r3, r1
 8019552:	da04      	bge.n	801955e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8019554:	1a9b      	subs	r3, r3, r2
 8019556:	4a0c      	ldr	r2, [pc, #48]	; (8019588 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8019558:	210e      	movs	r1, #14
 801955a:	6812      	ldr	r2, [r2, #0]
 801955c:	e7f0      	b.n	8019540 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801955e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019562:	4293      	cmp	r3, r2
 8019564:	d108      	bne.n	8019578 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8019566:	4b09      	ldr	r3, [pc, #36]	; (801958c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8019568:	781b      	ldrb	r3, [r3, #0]
 801956a:	b91b      	cbnz	r3, 8019574 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801956c:	4b08      	ldr	r3, [pc, #32]	; (8019590 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801956e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019572:	4770      	bx	lr
 8019574:	4b07      	ldr	r3, [pc, #28]	; (8019594 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8019576:	e7fa      	b.n	801956e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019578:	2000      	movs	r0, #0
 801957a:	4770      	bx	lr
 801957c:	20013344 	.word	0x20013344
 8019580:	2001334c 	.word	0x2001334c
 8019584:	20013348 	.word	0x20013348
 8019588:	2001332c 	.word	0x2001332c
 801958c:	200132b4 	.word	0x200132b4
 8019590:	200132b6 	.word	0x200132b6
 8019594:	200132b8 	.word	0x200132b8

08019598 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019598:	4a12      	ldr	r2, [pc, #72]	; (80195e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801959a:	8803      	ldrh	r3, [r0, #0]
 801959c:	8812      	ldrh	r2, [r2, #0]
 801959e:	4293      	cmp	r3, r2
 80195a0:	d207      	bcs.n	80195b2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80195a2:	4a11      	ldr	r2, [pc, #68]	; (80195e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80195a4:	6812      	ldr	r2, [r2, #0]
 80195a6:	2114      	movs	r1, #20
 80195a8:	fb01 2303 	mla	r3, r1, r3, r2
 80195ac:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80195b0:	4770      	bx	lr
 80195b2:	490e      	ldr	r1, [pc, #56]	; (80195ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80195b4:	8809      	ldrh	r1, [r1, #0]
 80195b6:	4411      	add	r1, r2
 80195b8:	428b      	cmp	r3, r1
 80195ba:	da04      	bge.n	80195c6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80195bc:	1a9b      	subs	r3, r3, r2
 80195be:	4a0c      	ldr	r2, [pc, #48]	; (80195f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80195c0:	210e      	movs	r1, #14
 80195c2:	6812      	ldr	r2, [r2, #0]
 80195c4:	e7f0      	b.n	80195a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80195c6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80195ca:	4293      	cmp	r3, r2
 80195cc:	d108      	bne.n	80195e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80195ce:	4b09      	ldr	r3, [pc, #36]	; (80195f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80195d0:	781b      	ldrb	r3, [r3, #0]
 80195d2:	b91b      	cbnz	r3, 80195dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80195d4:	4b08      	ldr	r3, [pc, #32]	; (80195f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80195d6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80195da:	4770      	bx	lr
 80195dc:	4b07      	ldr	r3, [pc, #28]	; (80195fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80195de:	e7fa      	b.n	80195d6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80195e0:	2000      	movs	r0, #0
 80195e2:	4770      	bx	lr
 80195e4:	20013344 	.word	0x20013344
 80195e8:	2001334c 	.word	0x2001334c
 80195ec:	20013348 	.word	0x20013348
 80195f0:	2001332c 	.word	0x2001332c
 80195f4:	200132b4 	.word	0x200132b4
 80195f8:	200132b8 	.word	0x200132b8
 80195fc:	200132b6 	.word	0x200132b6

08019600 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019600:	b510      	push	{r4, lr}
 8019602:	4a1f      	ldr	r2, [pc, #124]	; (8019680 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8019604:	880b      	ldrh	r3, [r1, #0]
 8019606:	8812      	ldrh	r2, [r2, #0]
 8019608:	4293      	cmp	r3, r2
 801960a:	d213      	bcs.n	8019634 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801960c:	4a1d      	ldr	r2, [pc, #116]	; (8019684 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801960e:	6812      	ldr	r2, [r2, #0]
 8019610:	2114      	movs	r1, #20
 8019612:	fb01 2303 	mla	r3, r1, r3, r2
 8019616:	8a1a      	ldrh	r2, [r3, #16]
 8019618:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801961c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019620:	8a5b      	ldrh	r3, [r3, #18]
 8019622:	8004      	strh	r4, [r0, #0]
 8019624:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019628:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801962c:	8041      	strh	r1, [r0, #2]
 801962e:	8082      	strh	r2, [r0, #4]
 8019630:	80c3      	strh	r3, [r0, #6]
 8019632:	e00e      	b.n	8019652 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019634:	4914      	ldr	r1, [pc, #80]	; (8019688 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8019636:	8809      	ldrh	r1, [r1, #0]
 8019638:	4411      	add	r1, r2
 801963a:	428b      	cmp	r3, r1
 801963c:	da0a      	bge.n	8019654 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801963e:	1a9b      	subs	r3, r3, r2
 8019640:	4a12      	ldr	r2, [pc, #72]	; (801968c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8019642:	6812      	ldr	r2, [r2, #0]
 8019644:	210e      	movs	r1, #14
 8019646:	fb01 2303 	mla	r3, r1, r3, r2
 801964a:	681a      	ldr	r2, [r3, #0]
 801964c:	6002      	str	r2, [r0, #0]
 801964e:	685a      	ldr	r2, [r3, #4]
 8019650:	6042      	str	r2, [r0, #4]
 8019652:	bd10      	pop	{r4, pc}
 8019654:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019658:	4293      	cmp	r3, r2
 801965a:	d10b      	bne.n	8019674 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801965c:	4b0c      	ldr	r3, [pc, #48]	; (8019690 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801965e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019662:	4b0c      	ldr	r3, [pc, #48]	; (8019694 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8019664:	8081      	strh	r1, [r0, #4]
 8019666:	f9b3 2000 	ldrsh.w	r2, [r3]
 801966a:	80c2      	strh	r2, [r0, #6]
 801966c:	2300      	movs	r3, #0
 801966e:	8003      	strh	r3, [r0, #0]
 8019670:	8043      	strh	r3, [r0, #2]
 8019672:	e7ee      	b.n	8019652 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019674:	2300      	movs	r3, #0
 8019676:	8003      	strh	r3, [r0, #0]
 8019678:	8043      	strh	r3, [r0, #2]
 801967a:	8083      	strh	r3, [r0, #4]
 801967c:	e7d8      	b.n	8019630 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801967e:	bf00      	nop
 8019680:	20013344 	.word	0x20013344
 8019684:	2001334c 	.word	0x2001334c
 8019688:	20013348 	.word	0x20013348
 801968c:	2001332c 	.word	0x2001332c
 8019690:	200132b0 	.word	0x200132b0
 8019694:	200132b2 	.word	0x200132b2

08019698 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019698:	4a17      	ldr	r2, [pc, #92]	; (80196f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801969a:	8803      	ldrh	r3, [r0, #0]
 801969c:	8812      	ldrh	r2, [r2, #0]
 801969e:	4293      	cmp	r3, r2
 80196a0:	d213      	bcs.n	80196ca <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80196a2:	4a16      	ldr	r2, [pc, #88]	; (80196fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80196a4:	6812      	ldr	r2, [r2, #0]
 80196a6:	2114      	movs	r1, #20
 80196a8:	fb01 2303 	mla	r3, r1, r3, r2
 80196ac:	8a1a      	ldrh	r2, [r3, #16]
 80196ae:	8919      	ldrh	r1, [r3, #8]
 80196b0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80196b4:	428a      	cmp	r2, r1
 80196b6:	db1d      	blt.n	80196f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80196b8:	8a58      	ldrh	r0, [r3, #18]
 80196ba:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80196be:	895b      	ldrh	r3, [r3, #10]
 80196c0:	4298      	cmp	r0, r3
 80196c2:	bfac      	ite	ge
 80196c4:	2000      	movge	r0, #0
 80196c6:	2001      	movlt	r0, #1
 80196c8:	4770      	bx	lr
 80196ca:	490d      	ldr	r1, [pc, #52]	; (8019700 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80196cc:	8809      	ldrh	r1, [r1, #0]
 80196ce:	4411      	add	r1, r2
 80196d0:	428b      	cmp	r3, r1
 80196d2:	da0d      	bge.n	80196f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80196d4:	1a9b      	subs	r3, r3, r2
 80196d6:	4a0b      	ldr	r2, [pc, #44]	; (8019704 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80196d8:	6812      	ldr	r2, [r2, #0]
 80196da:	210e      	movs	r1, #14
 80196dc:	fb01 2303 	mla	r3, r1, r3, r2
 80196e0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80196e4:	891a      	ldrh	r2, [r3, #8]
 80196e6:	4291      	cmp	r1, r2
 80196e8:	db04      	blt.n	80196f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80196ea:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80196ee:	e7e6      	b.n	80196be <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80196f0:	2000      	movs	r0, #0
 80196f2:	4770      	bx	lr
 80196f4:	2001      	movs	r0, #1
 80196f6:	4770      	bx	lr
 80196f8:	20013344 	.word	0x20013344
 80196fc:	2001334c 	.word	0x2001334c
 8019700:	20013348 	.word	0x20013348
 8019704:	2001332c 	.word	0x2001332c

08019708 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8019708:	4a12      	ldr	r2, [pc, #72]	; (8019754 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801970a:	8803      	ldrh	r3, [r0, #0]
 801970c:	8811      	ldrh	r1, [r2, #0]
 801970e:	428b      	cmp	r3, r1
 8019710:	d20b      	bcs.n	801972a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8019712:	4a11      	ldr	r2, [pc, #68]	; (8019758 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019714:	6812      	ldr	r2, [r2, #0]
 8019716:	b112      	cbz	r2, 801971e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8019718:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801971c:	b9c0      	cbnz	r0, 8019750 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801971e:	4a0f      	ldr	r2, [pc, #60]	; (801975c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019720:	6811      	ldr	r1, [r2, #0]
 8019722:	2214      	movs	r2, #20
 8019724:	4353      	muls	r3, r2
 8019726:	58c8      	ldr	r0, [r1, r3]
 8019728:	4770      	bx	lr
 801972a:	4a0d      	ldr	r2, [pc, #52]	; (8019760 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801972c:	8812      	ldrh	r2, [r2, #0]
 801972e:	440a      	add	r2, r1
 8019730:	4293      	cmp	r3, r2
 8019732:	da04      	bge.n	801973e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8019734:	4a08      	ldr	r2, [pc, #32]	; (8019758 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019736:	6812      	ldr	r2, [r2, #0]
 8019738:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801973c:	4770      	bx	lr
 801973e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019742:	4293      	cmp	r3, r2
 8019744:	d103      	bne.n	801974e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8019746:	4b07      	ldr	r3, [pc, #28]	; (8019764 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8019748:	681b      	ldr	r3, [r3, #0]
 801974a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801974c:	4770      	bx	lr
 801974e:	2000      	movs	r0, #0
 8019750:	4770      	bx	lr
 8019752:	bf00      	nop
 8019754:	20013344 	.word	0x20013344
 8019758:	20013328 	.word	0x20013328
 801975c:	2001334c 	.word	0x2001334c
 8019760:	20013348 	.word	0x20013348
 8019764:	200132bc 	.word	0x200132bc

08019768 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8019768:	4b24      	ldr	r3, [pc, #144]	; (80197fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801976a:	8802      	ldrh	r2, [r0, #0]
 801976c:	8818      	ldrh	r0, [r3, #0]
 801976e:	4282      	cmp	r2, r0
 8019770:	d221      	bcs.n	80197b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019772:	4b23      	ldr	r3, [pc, #140]	; (8019800 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019774:	6819      	ldr	r1, [r3, #0]
 8019776:	2314      	movs	r3, #20
 8019778:	fb03 1302 	mla	r3, r3, r2, r1
 801977c:	6858      	ldr	r0, [r3, #4]
 801977e:	2800      	cmp	r0, #0
 8019780:	d03a      	beq.n	80197f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019782:	4920      	ldr	r1, [pc, #128]	; (8019804 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019784:	6809      	ldr	r1, [r1, #0]
 8019786:	2900      	cmp	r1, #0
 8019788:	d036      	beq.n	80197f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801978a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801978e:	2900      	cmp	r1, #0
 8019790:	d032      	beq.n	80197f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019792:	891a      	ldrh	r2, [r3, #8]
 8019794:	8958      	ldrh	r0, [r3, #10]
 8019796:	4350      	muls	r0, r2
 8019798:	7c5a      	ldrb	r2, [r3, #17]
 801979a:	7cdb      	ldrb	r3, [r3, #19]
 801979c:	0952      	lsrs	r2, r2, #5
 801979e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80197a2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80197a6:	2b0b      	cmp	r3, #11
 80197a8:	bf18      	it	ne
 80197aa:	0040      	lslne	r0, r0, #1
 80197ac:	3003      	adds	r0, #3
 80197ae:	f020 0003 	bic.w	r0, r0, #3
 80197b2:	4408      	add	r0, r1
 80197b4:	4770      	bx	lr
 80197b6:	4b14      	ldr	r3, [pc, #80]	; (8019808 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80197b8:	881b      	ldrh	r3, [r3, #0]
 80197ba:	4403      	add	r3, r0
 80197bc:	429a      	cmp	r2, r3
 80197be:	da1a      	bge.n	80197f6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80197c0:	4b12      	ldr	r3, [pc, #72]	; (801980c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80197c2:	681b      	ldr	r3, [r3, #0]
 80197c4:	1a10      	subs	r0, r2, r0
 80197c6:	210e      	movs	r1, #14
 80197c8:	fb01 3000 	mla	r0, r1, r0, r3
 80197cc:	7b03      	ldrb	r3, [r0, #12]
 80197ce:	f003 031f 	and.w	r3, r3, #31
 80197d2:	2b0b      	cmp	r3, #11
 80197d4:	d10b      	bne.n	80197ee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80197d6:	8903      	ldrh	r3, [r0, #8]
 80197d8:	8940      	ldrh	r0, [r0, #10]
 80197da:	4358      	muls	r0, r3
 80197dc:	4b09      	ldr	r3, [pc, #36]	; (8019804 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80197de:	6819      	ldr	r1, [r3, #0]
 80197e0:	3003      	adds	r0, #3
 80197e2:	f020 0303 	bic.w	r3, r0, #3
 80197e6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80197ea:	4418      	add	r0, r3
 80197ec:	4770      	bx	lr
 80197ee:	2b0d      	cmp	r3, #13
 80197f0:	d101      	bne.n	80197f6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80197f2:	300d      	adds	r0, #13
 80197f4:	4770      	bx	lr
 80197f6:	2000      	movs	r0, #0
 80197f8:	4770      	bx	lr
 80197fa:	bf00      	nop
 80197fc:	20013344 	.word	0x20013344
 8019800:	2001334c 	.word	0x2001334c
 8019804:	20013328 	.word	0x20013328
 8019808:	20013348 	.word	0x20013348
 801980c:	2001332c 	.word	0x2001332c

08019810 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019810:	b510      	push	{r4, lr}
 8019812:	4a17      	ldr	r2, [pc, #92]	; (8019870 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019814:	8803      	ldrh	r3, [r0, #0]
 8019816:	8812      	ldrh	r2, [r2, #0]
 8019818:	4293      	cmp	r3, r2
 801981a:	d20c      	bcs.n	8019836 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801981c:	4a15      	ldr	r2, [pc, #84]	; (8019874 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801981e:	6812      	ldr	r2, [r2, #0]
 8019820:	2114      	movs	r1, #20
 8019822:	fb01 2303 	mla	r3, r1, r3, r2
 8019826:	7c58      	ldrb	r0, [r3, #17]
 8019828:	0942      	lsrs	r2, r0, #5
 801982a:	7cd8      	ldrb	r0, [r3, #19]
 801982c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8019830:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8019834:	bd10      	pop	{r4, pc}
 8019836:	4910      	ldr	r1, [pc, #64]	; (8019878 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8019838:	8809      	ldrh	r1, [r1, #0]
 801983a:	4411      	add	r1, r2
 801983c:	428b      	cmp	r3, r1
 801983e:	da09      	bge.n	8019854 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8019840:	1a9b      	subs	r3, r3, r2
 8019842:	4a0e      	ldr	r2, [pc, #56]	; (801987c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8019844:	6812      	ldr	r2, [r2, #0]
 8019846:	210e      	movs	r1, #14
 8019848:	fb01 2303 	mla	r3, r1, r3, r2
 801984c:	7b18      	ldrb	r0, [r3, #12]
 801984e:	f000 001f 	and.w	r0, r0, #31
 8019852:	e7ef      	b.n	8019834 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019854:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019858:	4293      	cmp	r3, r2
 801985a:	d106      	bne.n	801986a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801985c:	f7ea fa76 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8019860:	6803      	ldr	r3, [r0, #0]
 8019862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019866:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019868:	4718      	bx	r3
 801986a:	2000      	movs	r0, #0
 801986c:	e7e2      	b.n	8019834 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801986e:	bf00      	nop
 8019870:	20013344 	.word	0x20013344
 8019874:	2001334c 	.word	0x2001334c
 8019878:	20013348 	.word	0x20013348
 801987c:	2001332c 	.word	0x2001332c

08019880 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019880:	2010      	movs	r0, #16
 8019882:	4770      	bx	lr

08019884 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019884:	2000      	movs	r0, #0
 8019886:	4770      	bx	lr

08019888 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8019888:	4b02      	ldr	r3, [pc, #8]	; (8019894 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801988a:	8818      	ldrh	r0, [r3, #0]
 801988c:	0040      	lsls	r0, r0, #1
 801988e:	b280      	uxth	r0, r0
 8019890:	4770      	bx	lr
 8019892:	bf00      	nop
 8019894:	200132b6 	.word	0x200132b6

08019898 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019898:	2bff      	cmp	r3, #255	; 0xff
 801989a:	d050      	beq.n	801993e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801989c:	2a0b      	cmp	r2, #11
 801989e:	d04a      	beq.n	8019936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80198a0:	d80e      	bhi.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80198a2:	2a03      	cmp	r2, #3
 80198a4:	d03f      	beq.n	8019926 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80198a6:	d804      	bhi.n	80198b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80198a8:	2a01      	cmp	r2, #1
 80198aa:	d03e      	beq.n	801992a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80198ac:	d93f      	bls.n	801992e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80198ae:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80198b0:	4770      	bx	lr
 80198b2:	2a09      	cmp	r2, #9
 80198b4:	d03f      	beq.n	8019936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80198b6:	d83c      	bhi.n	8019932 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80198b8:	2a08      	cmp	r2, #8
 80198ba:	d03a      	beq.n	8019932 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80198bc:	2000      	movs	r0, #0
 80198be:	4770      	bx	lr
 80198c0:	2a2f      	cmp	r2, #47	; 0x2f
 80198c2:	d024      	beq.n	801990e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80198c4:	d80d      	bhi.n	80198e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80198c6:	2a2d      	cmp	r2, #45	; 0x2d
 80198c8:	d014      	beq.n	80198f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80198ca:	d826      	bhi.n	801991a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80198cc:	2a2c      	cmp	r2, #44	; 0x2c
 80198ce:	d1f5      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198d0:	684b      	ldr	r3, [r1, #4]
 80198d2:	781b      	ldrb	r3, [r3, #0]
 80198d4:	2b01      	cmp	r3, #1
 80198d6:	d018      	beq.n	801990a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80198d8:	d323      	bcc.n	8019922 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80198da:	2b02      	cmp	r3, #2
 80198dc:	d1ee      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198de:	6880      	ldr	r0, [r0, #8]
 80198e0:	4770      	bx	lr
 80198e2:	2a31      	cmp	r2, #49	; 0x31
 80198e4:	d004      	beq.n	80198f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80198e6:	d328      	bcc.n	801993a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80198e8:	2a32      	cmp	r2, #50	; 0x32
 80198ea:	d026      	beq.n	801993a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80198ec:	2a33      	cmp	r2, #51	; 0x33
 80198ee:	d1e5      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198f0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80198f2:	4770      	bx	lr
 80198f4:	684b      	ldr	r3, [r1, #4]
 80198f6:	781b      	ldrb	r3, [r3, #0]
 80198f8:	2b01      	cmp	r3, #1
 80198fa:	d004      	beq.n	8019906 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80198fc:	d30b      	bcc.n	8019916 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80198fe:	2b02      	cmp	r3, #2
 8019900:	d1dc      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019902:	6900      	ldr	r0, [r0, #16]
 8019904:	4770      	bx	lr
 8019906:	6a00      	ldr	r0, [r0, #32]
 8019908:	4770      	bx	lr
 801990a:	6980      	ldr	r0, [r0, #24]
 801990c:	4770      	bx	lr
 801990e:	684b      	ldr	r3, [r1, #4]
 8019910:	781b      	ldrb	r3, [r3, #0]
 8019912:	2b00      	cmp	r3, #0
 8019914:	d1d2      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019916:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8019918:	4770      	bx	lr
 801991a:	684b      	ldr	r3, [r1, #4]
 801991c:	781b      	ldrb	r3, [r3, #0]
 801991e:	2b00      	cmp	r3, #0
 8019920:	d1cc      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019922:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019924:	4770      	bx	lr
 8019926:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8019928:	4770      	bx	lr
 801992a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801992c:	4770      	bx	lr
 801992e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019930:	4770      	bx	lr
 8019932:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019934:	4770      	bx	lr
 8019936:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8019938:	4770      	bx	lr
 801993a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801993c:	4770      	bx	lr
 801993e:	2a0b      	cmp	r2, #11
 8019940:	d049      	beq.n	80199d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019942:	d80e      	bhi.n	8019962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019944:	2a03      	cmp	r2, #3
 8019946:	d040      	beq.n	80199ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8019948:	d804      	bhi.n	8019954 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801994a:	2a01      	cmp	r2, #1
 801994c:	d03f      	beq.n	80199ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801994e:	d940      	bls.n	80199d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019950:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019952:	4770      	bx	lr
 8019954:	2a09      	cmp	r2, #9
 8019956:	d03e      	beq.n	80199d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019958:	d801      	bhi.n	801995e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801995a:	2a08      	cmp	r2, #8
 801995c:	d1ae      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801995e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019960:	4770      	bx	lr
 8019962:	2a2f      	cmp	r2, #47	; 0x2f
 8019964:	d024      	beq.n	80199b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8019966:	d80d      	bhi.n	8019984 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8019968:	2a2d      	cmp	r2, #45	; 0x2d
 801996a:	d014      	beq.n	8019996 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801996c:	d826      	bhi.n	80199bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801996e:	2a2c      	cmp	r2, #44	; 0x2c
 8019970:	d1a4      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019972:	684b      	ldr	r3, [r1, #4]
 8019974:	781b      	ldrb	r3, [r3, #0]
 8019976:	2b01      	cmp	r3, #1
 8019978:	d018      	beq.n	80199ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801997a:	d324      	bcc.n	80199c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801997c:	2b02      	cmp	r3, #2
 801997e:	d19d      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019980:	68c0      	ldr	r0, [r0, #12]
 8019982:	4770      	bx	lr
 8019984:	2a31      	cmp	r2, #49	; 0x31
 8019986:	d004      	beq.n	8019992 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8019988:	d327      	bcc.n	80199da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801998a:	2a32      	cmp	r2, #50	; 0x32
 801998c:	d025      	beq.n	80199da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801998e:	2a33      	cmp	r2, #51	; 0x33
 8019990:	d194      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019992:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019994:	4770      	bx	lr
 8019996:	684b      	ldr	r3, [r1, #4]
 8019998:	781b      	ldrb	r3, [r3, #0]
 801999a:	2b01      	cmp	r3, #1
 801999c:	d004      	beq.n	80199a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801999e:	d30b      	bcc.n	80199b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80199a0:	2b02      	cmp	r3, #2
 80199a2:	d18b      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199a4:	6940      	ldr	r0, [r0, #20]
 80199a6:	4770      	bx	lr
 80199a8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80199aa:	4770      	bx	lr
 80199ac:	69c0      	ldr	r0, [r0, #28]
 80199ae:	4770      	bx	lr
 80199b0:	684b      	ldr	r3, [r1, #4]
 80199b2:	781b      	ldrb	r3, [r3, #0]
 80199b4:	2b00      	cmp	r3, #0
 80199b6:	d181      	bne.n	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199b8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80199ba:	4770      	bx	lr
 80199bc:	684b      	ldr	r3, [r1, #4]
 80199be:	781b      	ldrb	r3, [r3, #0]
 80199c0:	2b00      	cmp	r3, #0
 80199c2:	f47f af7b 	bne.w	80198bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199c6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80199c8:	4770      	bx	lr
 80199ca:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80199cc:	4770      	bx	lr
 80199ce:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80199d0:	4770      	bx	lr
 80199d2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80199d4:	4770      	bx	lr
 80199d6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80199d8:	4770      	bx	lr
 80199da:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80199dc:	4770      	bx	lr

080199de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199e2:	b087      	sub	sp, #28
 80199e4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80199e6:	9205      	str	r2, [sp, #20]
 80199e8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80199ec:	9202      	str	r2, [sp, #8]
 80199ee:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80199f2:	9101      	str	r1, [sp, #4]
 80199f4:	6841      	ldr	r1, [r0, #4]
 80199f6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80199fa:	fb01 2404 	mla	r4, r1, r4, r2
 80199fe:	6802      	ldr	r2, [r0, #0]
 8019a00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019a04:	f8de 2000 	ldr.w	r2, [lr]
 8019a08:	9203      	str	r2, [sp, #12]
 8019a0a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019a0e:	3204      	adds	r2, #4
 8019a10:	9204      	str	r2, [sp, #16]
 8019a12:	9a02      	ldr	r2, [sp, #8]
 8019a14:	43d6      	mvns	r6, r2
 8019a16:	b2f6      	uxtb	r6, r6
 8019a18:	9a01      	ldr	r2, [sp, #4]
 8019a1a:	2a00      	cmp	r2, #0
 8019a1c:	dc03      	bgt.n	8019a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019a1e:	9a05      	ldr	r2, [sp, #20]
 8019a20:	2a00      	cmp	r2, #0
 8019a22:	f340 8129 	ble.w	8019c78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019a26:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019a28:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019a2c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019a30:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019a34:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019a36:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a3a:	2b00      	cmp	r3, #0
 8019a3c:	dd0e      	ble.n	8019a5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019a3e:	1408      	asrs	r0, r1, #16
 8019a40:	d405      	bmi.n	8019a4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019a42:	4560      	cmp	r0, ip
 8019a44:	da03      	bge.n	8019a4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019a46:	1410      	asrs	r0, r2, #16
 8019a48:	d401      	bmi.n	8019a4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019a4a:	42b8      	cmp	r0, r7
 8019a4c:	db07      	blt.n	8019a5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019a4e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019a50:	4401      	add	r1, r0
 8019a52:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019a54:	3b01      	subs	r3, #1
 8019a56:	4402      	add	r2, r0
 8019a58:	3402      	adds	r4, #2
 8019a5a:	e7ee      	b.n	8019a3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019a5c:	d071      	beq.n	8019b42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019a5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a60:	1e58      	subs	r0, r3, #1
 8019a62:	fb05 1500 	mla	r5, r5, r0, r1
 8019a66:	142d      	asrs	r5, r5, #16
 8019a68:	d45f      	bmi.n	8019b2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019a6a:	4565      	cmp	r5, ip
 8019a6c:	da5d      	bge.n	8019b2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019a6e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a70:	fb05 2000 	mla	r0, r5, r0, r2
 8019a74:	1400      	asrs	r0, r0, #16
 8019a76:	d458      	bmi.n	8019b2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019a78:	42b8      	cmp	r0, r7
 8019a7a:	da56      	bge.n	8019b2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019a7c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019a80:	4699      	mov	r9, r3
 8019a82:	46a2      	mov	sl, r4
 8019a84:	f1b9 0f00 	cmp.w	r9, #0
 8019a88:	dd57      	ble.n	8019b3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019a8a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019a8e:	9803      	ldr	r0, [sp, #12]
 8019a90:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019a94:	140d      	asrs	r5, r1, #16
 8019a96:	fb07 000c 	mla	r0, r7, ip, r0
 8019a9a:	f109 39ff 	add.w	r9, r9, #4294967295
 8019a9e:	5d40      	ldrb	r0, [r0, r5]
 8019aa0:	9d04      	ldr	r5, [sp, #16]
 8019aa2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019aa6:	f8ba 5000 	ldrh.w	r5, [sl]
 8019aaa:	122f      	asrs	r7, r5, #8
 8019aac:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019ab0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019ab4:	fb17 f706 	smulbb	r7, r7, r6
 8019ab8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019abc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ac0:	00ed      	lsls	r5, r5, #3
 8019ac2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019ac6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019aca:	10c7      	asrs	r7, r0, #3
 8019acc:	b2ed      	uxtb	r5, r5
 8019ace:	00c0      	lsls	r0, r0, #3
 8019ad0:	fb18 f806 	smulbb	r8, r8, r6
 8019ad4:	fb15 f506 	smulbb	r5, r5, r6
 8019ad8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019adc:	b2c0      	uxtb	r0, r0
 8019ade:	fa1f fc8c 	uxth.w	ip, ip
 8019ae2:	fb07 870b 	mla	r7, r7, fp, r8
 8019ae6:	fb00 500b 	mla	r0, r0, fp, r5
 8019aea:	b280      	uxth	r0, r0
 8019aec:	b2bf      	uxth	r7, r7
 8019aee:	f10c 0501 	add.w	r5, ip, #1
 8019af2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019af6:	f107 0801 	add.w	r8, r7, #1
 8019afa:	1c45      	adds	r5, r0, #1
 8019afc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019b00:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019b04:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019b06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b0a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019b0e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019b12:	ea45 0c0c 	orr.w	ip, r5, ip
 8019b16:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019b1a:	4401      	add	r1, r0
 8019b1c:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019b1e:	ea4c 0c08 	orr.w	ip, ip, r8
 8019b22:	f82a cb02 	strh.w	ip, [sl], #2
 8019b26:	4402      	add	r2, r0
 8019b28:	e7ac      	b.n	8019a84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019b2a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019b2e:	f04f 0800 	mov.w	r8, #0
 8019b32:	eb03 0008 	add.w	r0, r3, r8
 8019b36:	2800      	cmp	r0, #0
 8019b38:	dc41      	bgt.n	8019bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019b3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019b3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019b42:	9b01      	ldr	r3, [sp, #4]
 8019b44:	2b00      	cmp	r3, #0
 8019b46:	f340 8097 	ble.w	8019c78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019b4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019b52:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019b56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b5c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b64:	eef0 6a62 	vmov.f32	s13, s5
 8019b68:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b70:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b74:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019b78:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b7c:	eef0 6a43 	vmov.f32	s13, s6
 8019b80:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b84:	ee12 2a90 	vmov	r2, s5
 8019b88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b90:	ee13 2a10 	vmov	r2, s6
 8019b94:	9313      	str	r3, [sp, #76]	; 0x4c
 8019b96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b98:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b9c:	9314      	str	r3, [sp, #80]	; 0x50
 8019b9e:	9b01      	ldr	r3, [sp, #4]
 8019ba0:	9a05      	ldr	r2, [sp, #20]
 8019ba2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ba6:	3b01      	subs	r3, #1
 8019ba8:	9301      	str	r3, [sp, #4]
 8019baa:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019bae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019bb0:	eeb0 3a67 	vmov.f32	s6, s15
 8019bb4:	bf08      	it	eq
 8019bb6:	4613      	moveq	r3, r2
 8019bb8:	eef0 2a47 	vmov.f32	s5, s14
 8019bbc:	e72c      	b.n	8019a18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019bbe:	140f      	asrs	r7, r1, #16
 8019bc0:	d453      	bmi.n	8019c6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019bc2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019bc6:	42bd      	cmp	r5, r7
 8019bc8:	dd4f      	ble.n	8019c6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019bca:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019bce:	d44c      	bmi.n	8019c6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019bd0:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019bd4:	4560      	cmp	r0, ip
 8019bd6:	dd48      	ble.n	8019c6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019bd8:	9803      	ldr	r0, [sp, #12]
 8019bda:	b22d      	sxth	r5, r5
 8019bdc:	fb0c 0505 	mla	r5, ip, r5, r0
 8019be0:	5de8      	ldrb	r0, [r5, r7]
 8019be2:	9d04      	ldr	r5, [sp, #16]
 8019be4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019be8:	f06f 0501 	mvn.w	r5, #1
 8019bec:	fb05 fb08 	mul.w	fp, r5, r8
 8019bf0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019bf4:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019bf8:	122f      	asrs	r7, r5, #8
 8019bfa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019bfe:	fb17 f706 	smulbb	r7, r7, r6
 8019c02:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019c06:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c0a:	00ed      	lsls	r5, r5, #3
 8019c0c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019c10:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019c14:	10c7      	asrs	r7, r0, #3
 8019c16:	b2ed      	uxtb	r5, r5
 8019c18:	00c0      	lsls	r0, r0, #3
 8019c1a:	fb19 f906 	smulbb	r9, r9, r6
 8019c1e:	fb15 f506 	smulbb	r5, r5, r6
 8019c22:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019c26:	b2c0      	uxtb	r0, r0
 8019c28:	fa1f fc8c 	uxth.w	ip, ip
 8019c2c:	fb07 970a 	mla	r7, r7, sl, r9
 8019c30:	fb00 500a 	mla	r0, r0, sl, r5
 8019c34:	b2bf      	uxth	r7, r7
 8019c36:	b280      	uxth	r0, r0
 8019c38:	f10c 0501 	add.w	r5, ip, #1
 8019c3c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019c40:	f107 0901 	add.w	r9, r7, #1
 8019c44:	1c45      	adds	r5, r0, #1
 8019c46:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019c4a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019c4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c52:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019c56:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019c5a:	ea45 0c0c 	orr.w	ip, r5, ip
 8019c5e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019c62:	ea4c 0c09 	orr.w	ip, ip, r9
 8019c66:	f824 c00b 	strh.w	ip, [r4, fp]
 8019c6a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c6c:	4401      	add	r1, r0
 8019c6e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019c70:	f108 38ff 	add.w	r8, r8, #4294967295
 8019c74:	4402      	add	r2, r0
 8019c76:	e75c      	b.n	8019b32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019c78:	b007      	add	sp, #28
 8019c7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c82:	b085      	sub	sp, #20
 8019c84:	4693      	mov	fp, r2
 8019c86:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019c88:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019c8a:	6870      	ldr	r0, [r6, #4]
 8019c8c:	9100      	str	r1, [sp, #0]
 8019c8e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019c92:	fb00 2404 	mla	r4, r0, r4, r2
 8019c96:	6832      	ldr	r2, [r6, #0]
 8019c98:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019c9c:	682a      	ldr	r2, [r5, #0]
 8019c9e:	9201      	str	r2, [sp, #4]
 8019ca0:	686a      	ldr	r2, [r5, #4]
 8019ca2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019ca6:	3204      	adds	r2, #4
 8019ca8:	9202      	str	r2, [sp, #8]
 8019caa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019cae:	9a00      	ldr	r2, [sp, #0]
 8019cb0:	2a00      	cmp	r2, #0
 8019cb2:	dc03      	bgt.n	8019cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019cb4:	f1bb 0f00 	cmp.w	fp, #0
 8019cb8:	f340 80a0 	ble.w	8019dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019cbc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019cbe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019cc2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019cc6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019cca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ccc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019cd0:	2b00      	cmp	r3, #0
 8019cd2:	dd0c      	ble.n	8019cee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019cd4:	1406      	asrs	r6, r0, #16
 8019cd6:	d405      	bmi.n	8019ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cd8:	454e      	cmp	r6, r9
 8019cda:	da03      	bge.n	8019ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cdc:	1416      	asrs	r6, r2, #16
 8019cde:	d401      	bmi.n	8019ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019ce0:	4546      	cmp	r6, r8
 8019ce2:	db05      	blt.n	8019cf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ce4:	4470      	add	r0, lr
 8019ce6:	4462      	add	r2, ip
 8019ce8:	3b01      	subs	r3, #1
 8019cea:	3402      	adds	r4, #2
 8019cec:	e7f0      	b.n	8019cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019cee:	d00f      	beq.n	8019d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019cf0:	1e5e      	subs	r6, r3, #1
 8019cf2:	fb0e 0706 	mla	r7, lr, r6, r0
 8019cf6:	143f      	asrs	r7, r7, #16
 8019cf8:	d541      	bpl.n	8019d7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019cfa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019cfe:	4698      	mov	r8, r3
 8019d00:	9603      	str	r6, [sp, #12]
 8019d02:	f1b8 0f00 	cmp.w	r8, #0
 8019d06:	dc59      	bgt.n	8019dbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019d10:	9b00      	ldr	r3, [sp, #0]
 8019d12:	2b00      	cmp	r3, #0
 8019d14:	dd72      	ble.n	8019dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019d16:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d2c:	eeb0 6a62 	vmov.f32	s12, s5
 8019d30:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d38:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d3c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019d40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d44:	eeb0 6a43 	vmov.f32	s12, s6
 8019d48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d4c:	ee12 2a90 	vmov	r2, s5
 8019d50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d54:	fb92 fef3 	sdiv	lr, r2, r3
 8019d58:	ee13 2a10 	vmov	r2, s6
 8019d5c:	fb92 fcf3 	sdiv	ip, r2, r3
 8019d60:	9b00      	ldr	r3, [sp, #0]
 8019d62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d66:	3b01      	subs	r3, #1
 8019d68:	9300      	str	r3, [sp, #0]
 8019d6a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019d6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d70:	eeb0 3a67 	vmov.f32	s6, s15
 8019d74:	bf08      	it	eq
 8019d76:	465b      	moveq	r3, fp
 8019d78:	eef0 2a47 	vmov.f32	s5, s14
 8019d7c:	e797      	b.n	8019cae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019d7e:	454f      	cmp	r7, r9
 8019d80:	dabb      	bge.n	8019cfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019d82:	fb0c 2606 	mla	r6, ip, r6, r2
 8019d86:	1436      	asrs	r6, r6, #16
 8019d88:	d4b7      	bmi.n	8019cfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019d8a:	4546      	cmp	r6, r8
 8019d8c:	dab5      	bge.n	8019cfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019d8e:	461e      	mov	r6, r3
 8019d90:	46a0      	mov	r8, r4
 8019d92:	2e00      	cmp	r6, #0
 8019d94:	ddb8      	ble.n	8019d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019d96:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019d9a:	9901      	ldr	r1, [sp, #4]
 8019d9c:	1417      	asrs	r7, r2, #16
 8019d9e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019da2:	fb0a 1707 	mla	r7, sl, r7, r1
 8019da6:	9902      	ldr	r1, [sp, #8]
 8019da8:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019dac:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019db0:	f828 7b02 	strh.w	r7, [r8], #2
 8019db4:	4470      	add	r0, lr
 8019db6:	4462      	add	r2, ip
 8019db8:	3e01      	subs	r6, #1
 8019dba:	e7ea      	b.n	8019d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019dbc:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019dc0:	d417      	bmi.n	8019df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019dc2:	68ae      	ldr	r6, [r5, #8]
 8019dc4:	454e      	cmp	r6, r9
 8019dc6:	dd14      	ble.n	8019df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019dc8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019dcc:	d411      	bmi.n	8019df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019dce:	68ef      	ldr	r7, [r5, #12]
 8019dd0:	4557      	cmp	r7, sl
 8019dd2:	dd0e      	ble.n	8019df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019dd4:	9f01      	ldr	r7, [sp, #4]
 8019dd6:	b236      	sxth	r6, r6
 8019dd8:	fb0a 7606 	mla	r6, sl, r6, r7
 8019ddc:	9f02      	ldr	r7, [sp, #8]
 8019dde:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019de2:	f06f 0101 	mvn.w	r1, #1
 8019de6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019dea:	fb01 f608 	mul.w	r6, r1, r8
 8019dee:	9903      	ldr	r1, [sp, #12]
 8019df0:	538f      	strh	r7, [r1, r6]
 8019df2:	4470      	add	r0, lr
 8019df4:	4462      	add	r2, ip
 8019df6:	f108 38ff 	add.w	r8, r8, #4294967295
 8019dfa:	e782      	b.n	8019d02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019dfc:	b005      	add	sp, #20
 8019dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e06:	b087      	sub	sp, #28
 8019e08:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019e0a:	9205      	str	r2, [sp, #20]
 8019e0c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019e10:	9203      	str	r2, [sp, #12]
 8019e12:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019e16:	9102      	str	r1, [sp, #8]
 8019e18:	6861      	ldr	r1, [r4, #4]
 8019e1a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019e1e:	fb01 2000 	mla	r0, r1, r0, r2
 8019e22:	6822      	ldr	r2, [r4, #0]
 8019e24:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019e28:	9200      	str	r2, [sp, #0]
 8019e2a:	f8dc 2000 	ldr.w	r2, [ip]
 8019e2e:	9204      	str	r2, [sp, #16]
 8019e30:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019e34:	3204      	adds	r2, #4
 8019e36:	9201      	str	r2, [sp, #4]
 8019e38:	9a03      	ldr	r2, [sp, #12]
 8019e3a:	43d5      	mvns	r5, r2
 8019e3c:	b2ed      	uxtb	r5, r5
 8019e3e:	9a02      	ldr	r2, [sp, #8]
 8019e40:	2a00      	cmp	r2, #0
 8019e42:	dc03      	bgt.n	8019e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019e44:	9a05      	ldr	r2, [sp, #20]
 8019e46:	2a00      	cmp	r2, #0
 8019e48:	f340 812c 	ble.w	801a0a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019e4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019e4e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019e52:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019e56:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019e5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019e5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019e60:	2b00      	cmp	r3, #0
 8019e62:	dd10      	ble.n	8019e86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019e64:	140c      	asrs	r4, r1, #16
 8019e66:	d405      	bmi.n	8019e74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e68:	4574      	cmp	r4, lr
 8019e6a:	da03      	bge.n	8019e74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e6c:	1414      	asrs	r4, r2, #16
 8019e6e:	d401      	bmi.n	8019e74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e70:	42bc      	cmp	r4, r7
 8019e72:	db09      	blt.n	8019e88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019e74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019e76:	9800      	ldr	r0, [sp, #0]
 8019e78:	4421      	add	r1, r4
 8019e7a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019e7c:	3002      	adds	r0, #2
 8019e7e:	4422      	add	r2, r4
 8019e80:	3b01      	subs	r3, #1
 8019e82:	9000      	str	r0, [sp, #0]
 8019e84:	e7ec      	b.n	8019e60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019e86:	d071      	beq.n	8019f6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019e88:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019e8a:	1e5c      	subs	r4, r3, #1
 8019e8c:	fb06 1604 	mla	r6, r6, r4, r1
 8019e90:	1436      	asrs	r6, r6, #16
 8019e92:	d45d      	bmi.n	8019f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019e94:	4576      	cmp	r6, lr
 8019e96:	da5b      	bge.n	8019f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019e98:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019e9a:	fb06 2404 	mla	r4, r6, r4, r2
 8019e9e:	1424      	asrs	r4, r4, #16
 8019ea0:	d456      	bmi.n	8019f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019ea2:	42bc      	cmp	r4, r7
 8019ea4:	da54      	bge.n	8019f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019ea6:	f8dd 9000 	ldr.w	r9, [sp]
 8019eaa:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019eae:	4698      	mov	r8, r3
 8019eb0:	f1b8 0f00 	cmp.w	r8, #0
 8019eb4:	dd54      	ble.n	8019f60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019eb6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019eba:	9804      	ldr	r0, [sp, #16]
 8019ebc:	1414      	asrs	r4, r2, #16
 8019ebe:	fb07 0404 	mla	r4, r7, r4, r0
 8019ec2:	140e      	asrs	r6, r1, #16
 8019ec4:	9801      	ldr	r0, [sp, #4]
 8019ec6:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019eca:	f8b9 4000 	ldrh.w	r4, [r9]
 8019ece:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019ed2:	eb00 0b0e 	add.w	fp, r0, lr
 8019ed6:	1227      	asrs	r7, r4, #8
 8019ed8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019edc:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019ee0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019ee4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019ee6:	fb16 f60a 	smulbb	r6, r6, sl
 8019eea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019eee:	fb07 6705 	mla	r7, r7, r5, r6
 8019ef2:	10e6      	asrs	r6, r4, #3
 8019ef4:	00e4      	lsls	r4, r4, #3
 8019ef6:	b2e4      	uxtb	r4, r4
 8019ef8:	fb1b fb0a 	smulbb	fp, fp, sl
 8019efc:	fb14 f405 	smulbb	r4, r4, r5
 8019f00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f04:	b2bf      	uxth	r7, r7
 8019f06:	fb06 b605 	mla	r6, r6, r5, fp
 8019f0a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019f0e:	b2b6      	uxth	r6, r6
 8019f10:	fa1f fe8e 	uxth.w	lr, lr
 8019f14:	1c7c      	adds	r4, r7, #1
 8019f16:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019f1a:	f106 0b01 	add.w	fp, r6, #1
 8019f1e:	f10e 0401 	add.w	r4, lr, #1
 8019f22:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019f26:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019f2a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019f2e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019f32:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019f36:	4327      	orrs	r7, r4
 8019f38:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019f3c:	4401      	add	r1, r0
 8019f3e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019f40:	ea47 070b 	orr.w	r7, r7, fp
 8019f44:	f829 7b02 	strh.w	r7, [r9], #2
 8019f48:	4402      	add	r2, r0
 8019f4a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019f4e:	e7af      	b.n	8019eb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019f50:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019f54:	f04f 0e00 	mov.w	lr, #0
 8019f58:	eb03 040e 	add.w	r4, r3, lr
 8019f5c:	2c00      	cmp	r4, #0
 8019f5e:	dc43      	bgt.n	8019fe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019f60:	9a00      	ldr	r2, [sp, #0]
 8019f62:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f66:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019f6a:	9300      	str	r3, [sp, #0]
 8019f6c:	9b02      	ldr	r3, [sp, #8]
 8019f6e:	2b00      	cmp	r3, #0
 8019f70:	f340 8098 	ble.w	801a0a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019f74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019f7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019f80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f8e:	eef0 6a62 	vmov.f32	s13, s5
 8019f92:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f9e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019fa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019fa6:	eef0 6a43 	vmov.f32	s13, s6
 8019faa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019fae:	ee12 2a90 	vmov	r2, s5
 8019fb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019fb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fba:	ee13 2a10 	vmov	r2, s6
 8019fbe:	9313      	str	r3, [sp, #76]	; 0x4c
 8019fc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019fc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fc6:	9314      	str	r3, [sp, #80]	; 0x50
 8019fc8:	9b02      	ldr	r3, [sp, #8]
 8019fca:	9a05      	ldr	r2, [sp, #20]
 8019fcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019fd0:	3b01      	subs	r3, #1
 8019fd2:	9302      	str	r3, [sp, #8]
 8019fd4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019fd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019fda:	eeb0 3a67 	vmov.f32	s6, s15
 8019fde:	bf08      	it	eq
 8019fe0:	4613      	moveq	r3, r2
 8019fe2:	eef0 2a47 	vmov.f32	s5, s14
 8019fe6:	e72a      	b.n	8019e3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019fe8:	140f      	asrs	r7, r1, #16
 8019fea:	d454      	bmi.n	801a096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019fec:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019ff0:	42be      	cmp	r6, r7
 8019ff2:	dd50      	ble.n	801a096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019ff4:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019ff8:	d44d      	bmi.n	801a096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019ffa:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019ffe:	4544      	cmp	r4, r8
 801a000:	dd49      	ble.n	801a096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a002:	9c04      	ldr	r4, [sp, #16]
 801a004:	b236      	sxth	r6, r6
 801a006:	fb08 4606 	mla	r6, r8, r6, r4
 801a00a:	f06f 0001 	mvn.w	r0, #1
 801a00e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a012:	9c01      	ldr	r4, [sp, #4]
 801a014:	fb00 fa0e 	mul.w	sl, r0, lr
 801a018:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a01c:	9800      	ldr	r0, [sp, #0]
 801a01e:	eb04 0b08 	add.w	fp, r4, r8
 801a022:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a026:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a02a:	9801      	ldr	r0, [sp, #4]
 801a02c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a030:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a034:	9800      	ldr	r0, [sp, #0]
 801a036:	1227      	asrs	r7, r4, #8
 801a038:	fb16 f609 	smulbb	r6, r6, r9
 801a03c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a040:	fb07 6705 	mla	r7, r7, r5, r6
 801a044:	10e6      	asrs	r6, r4, #3
 801a046:	00e4      	lsls	r4, r4, #3
 801a048:	b2e4      	uxtb	r4, r4
 801a04a:	fb1b fb09 	smulbb	fp, fp, r9
 801a04e:	fb14 f405 	smulbb	r4, r4, r5
 801a052:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a056:	b2bf      	uxth	r7, r7
 801a058:	fb06 b605 	mla	r6, r6, r5, fp
 801a05c:	fb08 4809 	mla	r8, r8, r9, r4
 801a060:	b2b6      	uxth	r6, r6
 801a062:	fa1f f888 	uxth.w	r8, r8
 801a066:	1c7c      	adds	r4, r7, #1
 801a068:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a06c:	f106 0b01 	add.w	fp, r6, #1
 801a070:	f108 0401 	add.w	r4, r8, #1
 801a074:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a078:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a07c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a080:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a084:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a088:	4327      	orrs	r7, r4
 801a08a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a08e:	ea47 070b 	orr.w	r7, r7, fp
 801a092:	f820 700a 	strh.w	r7, [r0, sl]
 801a096:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a098:	4401      	add	r1, r0
 801a09a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a09c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a0a0:	4402      	add	r2, r0
 801a0a2:	e759      	b.n	8019f58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a0a4:	b007      	add	sp, #28
 801a0a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a0ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0b0:	b085      	sub	sp, #20
 801a0b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a0b6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a0b8:	9203      	str	r2, [sp, #12]
 801a0ba:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a0be:	6870      	ldr	r0, [r6, #4]
 801a0c0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a0c2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a0c6:	686f      	ldr	r7, [r5, #4]
 801a0c8:	9101      	str	r1, [sp, #4]
 801a0ca:	fb00 2404 	mla	r4, r0, r4, r2
 801a0ce:	6832      	ldr	r2, [r6, #0]
 801a0d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a0d4:	682a      	ldr	r2, [r5, #0]
 801a0d6:	9202      	str	r2, [sp, #8]
 801a0d8:	3704      	adds	r7, #4
 801a0da:	9a01      	ldr	r2, [sp, #4]
 801a0dc:	2a00      	cmp	r2, #0
 801a0de:	dc03      	bgt.n	801a0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a0e0:	9a03      	ldr	r2, [sp, #12]
 801a0e2:	2a00      	cmp	r2, #0
 801a0e4:	f340 80cc 	ble.w	801a280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a0e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a0ea:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a0ee:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a0f2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a0f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a0f8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a0fc:	2b00      	cmp	r3, #0
 801a0fe:	dd0d      	ble.n	801a11c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a100:	1406      	asrs	r6, r0, #16
 801a102:	d405      	bmi.n	801a110 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a104:	454e      	cmp	r6, r9
 801a106:	da03      	bge.n	801a110 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a108:	1416      	asrs	r6, r2, #16
 801a10a:	d401      	bmi.n	801a110 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a10c:	4546      	cmp	r6, r8
 801a10e:	db06      	blt.n	801a11e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a110:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a112:	4460      	add	r0, ip
 801a114:	4432      	add	r2, r6
 801a116:	3b01      	subs	r3, #1
 801a118:	3402      	adds	r4, #2
 801a11a:	e7ef      	b.n	801a0fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a11c:	d00f      	beq.n	801a13e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a11e:	1e5e      	subs	r6, r3, #1
 801a120:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a124:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a128:	d543      	bpl.n	801a1b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a12a:	4698      	mov	r8, r3
 801a12c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a130:	f1b8 0f00 	cmp.w	r8, #0
 801a134:	dc71      	bgt.n	801a21a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a136:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a13a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a13e:	9b01      	ldr	r3, [sp, #4]
 801a140:	2b00      	cmp	r3, #0
 801a142:	f340 809d 	ble.w	801a280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a146:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a14a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a14e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a152:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a154:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a158:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a15c:	eeb0 6a62 	vmov.f32	s12, s5
 801a160:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a164:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a168:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a16c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a170:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a174:	eeb0 6a43 	vmov.f32	s12, s6
 801a178:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a17c:	ee12 2a90 	vmov	r2, s5
 801a180:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a184:	fb92 fcf3 	sdiv	ip, r2, r3
 801a188:	ee13 2a10 	vmov	r2, s6
 801a18c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a190:	9312      	str	r3, [sp, #72]	; 0x48
 801a192:	9b01      	ldr	r3, [sp, #4]
 801a194:	9a03      	ldr	r2, [sp, #12]
 801a196:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a19a:	3b01      	subs	r3, #1
 801a19c:	9301      	str	r3, [sp, #4]
 801a19e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a1a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1a4:	eeb0 3a67 	vmov.f32	s6, s15
 801a1a8:	bf08      	it	eq
 801a1aa:	4613      	moveq	r3, r2
 801a1ac:	eef0 2a47 	vmov.f32	s5, s14
 801a1b0:	e793      	b.n	801a0da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a1b2:	45ce      	cmp	lr, r9
 801a1b4:	dab9      	bge.n	801a12a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a1b6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a1b8:	fb01 2606 	mla	r6, r1, r6, r2
 801a1bc:	1436      	asrs	r6, r6, #16
 801a1be:	d4b4      	bmi.n	801a12a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a1c0:	4546      	cmp	r6, r8
 801a1c2:	dab2      	bge.n	801a12a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a1c4:	4698      	mov	r8, r3
 801a1c6:	46a2      	mov	sl, r4
 801a1c8:	f1b8 0f00 	cmp.w	r8, #0
 801a1cc:	ddb3      	ble.n	801a136 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a1ce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a1d2:	9902      	ldr	r1, [sp, #8]
 801a1d4:	1416      	asrs	r6, r2, #16
 801a1d6:	fb09 1606 	mla	r6, r9, r6, r1
 801a1da:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a1de:	492a      	ldr	r1, [pc, #168]	; (801a288 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a1e0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a1e4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a1e8:	eb07 0b0e 	add.w	fp, r7, lr
 801a1ec:	4460      	add	r0, ip
 801a1ee:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a1f2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a1f6:	00f6      	lsls	r6, r6, #3
 801a1f8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a1fc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a200:	ea49 0606 	orr.w	r6, r9, r6
 801a204:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a208:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a20a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a20e:	f82a 6b02 	strh.w	r6, [sl], #2
 801a212:	440a      	add	r2, r1
 801a214:	f108 38ff 	add.w	r8, r8, #4294967295
 801a218:	e7d6      	b.n	801a1c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a21a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a21e:	d429      	bmi.n	801a274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a220:	68ae      	ldr	r6, [r5, #8]
 801a222:	454e      	cmp	r6, r9
 801a224:	dd26      	ble.n	801a274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a226:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a22a:	d423      	bmi.n	801a274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a22c:	68e9      	ldr	r1, [r5, #12]
 801a22e:	4559      	cmp	r1, fp
 801a230:	dd20      	ble.n	801a274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a232:	9902      	ldr	r1, [sp, #8]
 801a234:	fa0f fe86 	sxth.w	lr, r6
 801a238:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a23c:	f06f 0101 	mvn.w	r1, #1
 801a240:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a244:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a248:	eb07 060e 	add.w	r6, r7, lr
 801a24c:	fb01 f908 	mul.w	r9, r1, r8
 801a250:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a254:	7876      	ldrb	r6, [r6, #1]
 801a256:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a25a:	00f6      	lsls	r6, r6, #3
 801a25c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a260:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a264:	ea4b 0606 	orr.w	r6, fp, r6
 801a268:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a26c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a270:	f82a 6009 	strh.w	r6, [sl, r9]
 801a274:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a276:	4460      	add	r0, ip
 801a278:	440a      	add	r2, r1
 801a27a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a27e:	e757      	b.n	801a130 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a280:	b005      	add	sp, #20
 801a282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a286:	bf00      	nop
 801a288:	fffff800 	.word	0xfffff800

0801a28c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a28c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a290:	b087      	sub	sp, #28
 801a292:	468b      	mov	fp, r1
 801a294:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a296:	9204      	str	r2, [sp, #16]
 801a298:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a29c:	9205      	str	r2, [sp, #20]
 801a29e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a2a2:	6841      	ldr	r1, [r0, #4]
 801a2a4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a2a8:	fb01 2404 	mla	r4, r1, r4, r2
 801a2ac:	6802      	ldr	r2, [r0, #0]
 801a2ae:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a2b2:	f8dc 2000 	ldr.w	r2, [ip]
 801a2b6:	9201      	str	r2, [sp, #4]
 801a2b8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a2bc:	3204      	adds	r2, #4
 801a2be:	9202      	str	r2, [sp, #8]
 801a2c0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a2c4:	f1bb 0f00 	cmp.w	fp, #0
 801a2c8:	dc03      	bgt.n	801a2d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a2ca:	9a04      	ldr	r2, [sp, #16]
 801a2cc:	2a00      	cmp	r2, #0
 801a2ce:	f340 8138 	ble.w	801a542 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a2d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a2d4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a2d8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a2dc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a2e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a2e2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a2e6:	2b00      	cmp	r3, #0
 801a2e8:	dd0e      	ble.n	801a308 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a2ea:	1402      	asrs	r2, r0, #16
 801a2ec:	d405      	bmi.n	801a2fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2ee:	42ba      	cmp	r2, r7
 801a2f0:	da03      	bge.n	801a2fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2f2:	140a      	asrs	r2, r1, #16
 801a2f4:	d401      	bmi.n	801a2fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2f6:	42b2      	cmp	r2, r6
 801a2f8:	db07      	blt.n	801a30a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a2fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a2fc:	4410      	add	r0, r2
 801a2fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a300:	3b01      	subs	r3, #1
 801a302:	4411      	add	r1, r2
 801a304:	3402      	adds	r4, #2
 801a306:	e7ee      	b.n	801a2e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a308:	d019      	beq.n	801a33e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a30a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a30c:	1e5a      	subs	r2, r3, #1
 801a30e:	fb05 0502 	mla	r5, r5, r2, r0
 801a312:	142d      	asrs	r5, r5, #16
 801a314:	d409      	bmi.n	801a32a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a316:	42bd      	cmp	r5, r7
 801a318:	da07      	bge.n	801a32a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a31a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a31c:	fb05 1202 	mla	r2, r5, r2, r1
 801a320:	1412      	asrs	r2, r2, #16
 801a322:	d402      	bmi.n	801a32a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a324:	42b2      	cmp	r2, r6
 801a326:	f2c0 80ac 	blt.w	801a482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a32a:	f04f 0e00 	mov.w	lr, #0
 801a32e:	eb03 020e 	add.w	r2, r3, lr
 801a332:	2a00      	cmp	r2, #0
 801a334:	dc3e      	bgt.n	801a3b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a336:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a33a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a33e:	f1bb 0f00 	cmp.w	fp, #0
 801a342:	f340 80fe 	ble.w	801a542 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a346:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a34a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a34e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a352:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a354:	f1bb 0b01 	subs.w	fp, fp, #1
 801a358:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a35c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a360:	eeb0 6a62 	vmov.f32	s12, s5
 801a364:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a368:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a36c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a370:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a374:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a378:	eeb0 6a43 	vmov.f32	s12, s6
 801a37c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a380:	ee12 2a90 	vmov	r2, s5
 801a384:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a388:	fb92 f3f3 	sdiv	r3, r2, r3
 801a38c:	ee13 2a10 	vmov	r2, s6
 801a390:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a394:	9313      	str	r3, [sp, #76]	; 0x4c
 801a396:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a398:	fb92 f3f3 	sdiv	r3, r2, r3
 801a39c:	9a04      	ldr	r2, [sp, #16]
 801a39e:	9314      	str	r3, [sp, #80]	; 0x50
 801a3a0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a3a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3a6:	eeb0 3a67 	vmov.f32	s6, s15
 801a3aa:	bf08      	it	eq
 801a3ac:	4613      	moveq	r3, r2
 801a3ae:	eef0 2a47 	vmov.f32	s5, s14
 801a3b2:	e787      	b.n	801a2c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a3b4:	1406      	asrs	r6, r0, #16
 801a3b6:	d45d      	bmi.n	801a474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3b8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a3bc:	42b5      	cmp	r5, r6
 801a3be:	dd59      	ble.n	801a474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3c0:	140f      	asrs	r7, r1, #16
 801a3c2:	d457      	bmi.n	801a474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3c4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a3c8:	42ba      	cmp	r2, r7
 801a3ca:	dd53      	ble.n	801a474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3cc:	9a01      	ldr	r2, [sp, #4]
 801a3ce:	b22d      	sxth	r5, r5
 801a3d0:	fb07 2505 	mla	r5, r7, r5, r2
 801a3d4:	5daa      	ldrb	r2, [r5, r6]
 801a3d6:	9d02      	ldr	r5, [sp, #8]
 801a3d8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a3dc:	0e2e      	lsrs	r6, r5, #24
 801a3de:	d049      	beq.n	801a474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3e0:	f06f 0201 	mvn.w	r2, #1
 801a3e4:	fb02 f20e 	mul.w	r2, r2, lr
 801a3e8:	9203      	str	r2, [sp, #12]
 801a3ea:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a3ee:	9a05      	ldr	r2, [sp, #20]
 801a3f0:	4356      	muls	r6, r2
 801a3f2:	1c72      	adds	r2, r6, #1
 801a3f4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a3f8:	1212      	asrs	r2, r2, #8
 801a3fa:	fa1f f982 	uxth.w	r9, r2
 801a3fe:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a402:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a406:	43d2      	mvns	r2, r2
 801a408:	b2d2      	uxtb	r2, r2
 801a40a:	fb16 f609 	smulbb	r6, r6, r9
 801a40e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a412:	fb07 6702 	mla	r7, r7, r2, r6
 801a416:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a41a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a41e:	b2ed      	uxtb	r5, r5
 801a420:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a424:	fa5f f888 	uxtb.w	r8, r8
 801a428:	fb15 f509 	smulbb	r5, r5, r9
 801a42c:	fb08 5502 	mla	r5, r8, r2, r5
 801a430:	b2bf      	uxth	r7, r7
 801a432:	fb1a fa09 	smulbb	sl, sl, r9
 801a436:	b2ad      	uxth	r5, r5
 801a438:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a43c:	fb06 a602 	mla	r6, r6, r2, sl
 801a440:	1c7a      	adds	r2, r7, #1
 801a442:	f105 0a01 	add.w	sl, r5, #1
 801a446:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a44a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a44e:	b2b6      	uxth	r6, r6
 801a450:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a454:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a458:	ea4a 0707 	orr.w	r7, sl, r7
 801a45c:	f106 0a01 	add.w	sl, r6, #1
 801a460:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a464:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a468:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a46c:	9a03      	ldr	r2, [sp, #12]
 801a46e:	ea47 070a 	orr.w	r7, r7, sl
 801a472:	52a7      	strh	r7, [r4, r2]
 801a474:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a476:	4410      	add	r0, r2
 801a478:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a47a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a47e:	4411      	add	r1, r2
 801a480:	e755      	b.n	801a32e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a482:	f04f 0800 	mov.w	r8, #0
 801a486:	eba3 0208 	sub.w	r2, r3, r8
 801a48a:	2a00      	cmp	r2, #0
 801a48c:	f77f af53 	ble.w	801a336 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a490:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a494:	9f01      	ldr	r7, [sp, #4]
 801a496:	140a      	asrs	r2, r1, #16
 801a498:	1405      	asrs	r5, r0, #16
 801a49a:	fb06 7202 	mla	r2, r6, r2, r7
 801a49e:	5d52      	ldrb	r2, [r2, r5]
 801a4a0:	9d02      	ldr	r5, [sp, #8]
 801a4a2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a4a6:	0e2e      	lsrs	r6, r5, #24
 801a4a8:	d044      	beq.n	801a534 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a4aa:	9a05      	ldr	r2, [sp, #20]
 801a4ac:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a4b0:	4356      	muls	r6, r2
 801a4b2:	1c72      	adds	r2, r6, #1
 801a4b4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a4b8:	1212      	asrs	r2, r2, #8
 801a4ba:	fa1f f982 	uxth.w	r9, r2
 801a4be:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a4c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a4c6:	43d2      	mvns	r2, r2
 801a4c8:	b2d2      	uxtb	r2, r2
 801a4ca:	fb16 f609 	smulbb	r6, r6, r9
 801a4ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a4d2:	fb07 6702 	mla	r7, r7, r2, r6
 801a4d6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a4da:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a4de:	b2ed      	uxtb	r5, r5
 801a4e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a4e4:	fa5f fe8e 	uxtb.w	lr, lr
 801a4e8:	fb15 f509 	smulbb	r5, r5, r9
 801a4ec:	fb0e 5502 	mla	r5, lr, r2, r5
 801a4f0:	b2bf      	uxth	r7, r7
 801a4f2:	fb1a fa09 	smulbb	sl, sl, r9
 801a4f6:	b2ad      	uxth	r5, r5
 801a4f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a4fc:	fb06 a602 	mla	r6, r6, r2, sl
 801a500:	1c7a      	adds	r2, r7, #1
 801a502:	f105 0a01 	add.w	sl, r5, #1
 801a506:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a50a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a50e:	b2b6      	uxth	r6, r6
 801a510:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a514:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a518:	ea4a 0707 	orr.w	r7, sl, r7
 801a51c:	f106 0a01 	add.w	sl, r6, #1
 801a520:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a524:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a528:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a52c:	ea47 070a 	orr.w	r7, r7, sl
 801a530:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a534:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a536:	4410      	add	r0, r2
 801a538:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a53a:	f108 0801 	add.w	r8, r8, #1
 801a53e:	4411      	add	r1, r2
 801a540:	e7a1      	b.n	801a486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a542:	b007      	add	sp, #28
 801a544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a548 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a54c:	b085      	sub	sp, #20
 801a54e:	468b      	mov	fp, r1
 801a550:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a552:	9203      	str	r2, [sp, #12]
 801a554:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a558:	6841      	ldr	r1, [r0, #4]
 801a55a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a55e:	fb01 2404 	mla	r4, r1, r4, r2
 801a562:	6802      	ldr	r2, [r0, #0]
 801a564:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a568:	f8de 2000 	ldr.w	r2, [lr]
 801a56c:	9200      	str	r2, [sp, #0]
 801a56e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a572:	3204      	adds	r2, #4
 801a574:	9201      	str	r2, [sp, #4]
 801a576:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a57a:	f1bb 0f00 	cmp.w	fp, #0
 801a57e:	dc03      	bgt.n	801a588 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a580:	9a03      	ldr	r2, [sp, #12]
 801a582:	2a00      	cmp	r2, #0
 801a584:	f340 8153 	ble.w	801a82e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a588:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a58a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a58e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a592:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a596:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a598:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a59c:	2b00      	cmp	r3, #0
 801a59e:	dd0e      	ble.n	801a5be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a5a0:	1408      	asrs	r0, r1, #16
 801a5a2:	d405      	bmi.n	801a5b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a5a4:	42b8      	cmp	r0, r7
 801a5a6:	da03      	bge.n	801a5b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a5a8:	1410      	asrs	r0, r2, #16
 801a5aa:	d401      	bmi.n	801a5b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a5ac:	42b0      	cmp	r0, r6
 801a5ae:	db07      	blt.n	801a5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a5b0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a5b2:	4401      	add	r1, r0
 801a5b4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a5b6:	3b01      	subs	r3, #1
 801a5b8:	4402      	add	r2, r0
 801a5ba:	3402      	adds	r4, #2
 801a5bc:	e7ee      	b.n	801a59c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a5be:	d017      	beq.n	801a5f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a5c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a5c2:	1e58      	subs	r0, r3, #1
 801a5c4:	fb05 1500 	mla	r5, r5, r0, r1
 801a5c8:	142d      	asrs	r5, r5, #16
 801a5ca:	d409      	bmi.n	801a5e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a5cc:	42bd      	cmp	r5, r7
 801a5ce:	da07      	bge.n	801a5e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a5d0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a5d2:	fb05 2000 	mla	r0, r5, r0, r2
 801a5d6:	1400      	asrs	r0, r0, #16
 801a5d8:	d402      	bmi.n	801a5e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a5da:	42b0      	cmp	r0, r6
 801a5dc:	f2c0 80bc 	blt.w	801a758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a5e0:	2600      	movs	r6, #0
 801a5e2:	1998      	adds	r0, r3, r6
 801a5e4:	2800      	cmp	r0, #0
 801a5e6:	dc3e      	bgt.n	801a666 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a5e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a5f0:	f1bb 0f00 	cmp.w	fp, #0
 801a5f4:	f340 811b 	ble.w	801a82e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a5f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a600:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a604:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a606:	f1bb 0b01 	subs.w	fp, fp, #1
 801a60a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a60e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a612:	eeb0 6a62 	vmov.f32	s12, s5
 801a616:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a61a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a61e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a622:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a626:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a62a:	eeb0 6a43 	vmov.f32	s12, s6
 801a62e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a632:	ee12 2a90 	vmov	r2, s5
 801a636:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a63a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a63e:	ee13 2a10 	vmov	r2, s6
 801a642:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a646:	9311      	str	r3, [sp, #68]	; 0x44
 801a648:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a64a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a64e:	9a03      	ldr	r2, [sp, #12]
 801a650:	9312      	str	r3, [sp, #72]	; 0x48
 801a652:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a656:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a658:	eeb0 3a67 	vmov.f32	s6, s15
 801a65c:	bf08      	it	eq
 801a65e:	4613      	moveq	r3, r2
 801a660:	eef0 2a47 	vmov.f32	s5, s14
 801a664:	e789      	b.n	801a57a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a666:	140f      	asrs	r7, r1, #16
 801a668:	d426      	bmi.n	801a6b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a66a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a66e:	42bd      	cmp	r5, r7
 801a670:	dd22      	ble.n	801a6b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a672:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a676:	d41f      	bmi.n	801a6b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a678:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a67c:	4560      	cmp	r0, ip
 801a67e:	dd1b      	ble.n	801a6b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a680:	9800      	ldr	r0, [sp, #0]
 801a682:	b22d      	sxth	r5, r5
 801a684:	fb0c 0505 	mla	r5, ip, r5, r0
 801a688:	5de8      	ldrb	r0, [r5, r7]
 801a68a:	9d01      	ldr	r5, [sp, #4]
 801a68c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a690:	0e07      	lsrs	r7, r0, #24
 801a692:	2fff      	cmp	r7, #255	; 0xff
 801a694:	d116      	bne.n	801a6c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a696:	f06f 0501 	mvn.w	r5, #1
 801a69a:	fb05 f706 	mul.w	r7, r5, r6
 801a69e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a6a2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a6a6:	0945      	lsrs	r5, r0, #5
 801a6a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a6ac:	ea4c 0505 	orr.w	r5, ip, r5
 801a6b0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a6b4:	4305      	orrs	r5, r0
 801a6b6:	53e5      	strh	r5, [r4, r7]
 801a6b8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a6ba:	4401      	add	r1, r0
 801a6bc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a6be:	3e01      	subs	r6, #1
 801a6c0:	4402      	add	r2, r0
 801a6c2:	e78e      	b.n	801a5e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a6c4:	b2fd      	uxtb	r5, r7
 801a6c6:	2f00      	cmp	r7, #0
 801a6c8:	d0f6      	beq.n	801a6b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a6ca:	f06f 0701 	mvn.w	r7, #1
 801a6ce:	4377      	muls	r7, r6
 801a6d0:	fa1f f985 	uxth.w	r9, r5
 801a6d4:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a6d8:	9702      	str	r7, [sp, #8]
 801a6da:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a6de:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a6e2:	43ed      	mvns	r5, r5
 801a6e4:	b2ed      	uxtb	r5, r5
 801a6e6:	fb17 f709 	smulbb	r7, r7, r9
 801a6ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a6ee:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a6f2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a6f6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a6fa:	b2c0      	uxtb	r0, r0
 801a6fc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a700:	fa5f f888 	uxtb.w	r8, r8
 801a704:	fb10 f009 	smulbb	r0, r0, r9
 801a708:	fb08 0005 	mla	r0, r8, r5, r0
 801a70c:	b280      	uxth	r0, r0
 801a70e:	fa1f fc8c 	uxth.w	ip, ip
 801a712:	fb1a fa09 	smulbb	sl, sl, r9
 801a716:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a71a:	fb07 a705 	mla	r7, r7, r5, sl
 801a71e:	f100 0a01 	add.w	sl, r0, #1
 801a722:	f10c 0501 	add.w	r5, ip, #1
 801a726:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a72a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a72e:	b2bf      	uxth	r7, r7
 801a730:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a734:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a738:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a73c:	f107 0a01 	add.w	sl, r7, #1
 801a740:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a744:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a748:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a74c:	9802      	ldr	r0, [sp, #8]
 801a74e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a752:	f824 c000 	strh.w	ip, [r4, r0]
 801a756:	e7af      	b.n	801a6b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a758:	f04f 0800 	mov.w	r8, #0
 801a75c:	eba3 0008 	sub.w	r0, r3, r8
 801a760:	2800      	cmp	r0, #0
 801a762:	f77f af41 	ble.w	801a5e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a766:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a76a:	9f00      	ldr	r7, [sp, #0]
 801a76c:	1410      	asrs	r0, r2, #16
 801a76e:	140d      	asrs	r5, r1, #16
 801a770:	fb06 7000 	mla	r0, r6, r0, r7
 801a774:	5d40      	ldrb	r0, [r0, r5]
 801a776:	9d01      	ldr	r5, [sp, #4]
 801a778:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a77c:	0e2e      	lsrs	r6, r5, #24
 801a77e:	2eff      	cmp	r6, #255	; 0xff
 801a780:	d112      	bne.n	801a7a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a782:	482c      	ldr	r0, [pc, #176]	; (801a834 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a784:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a788:	0968      	lsrs	r0, r5, #5
 801a78a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a78e:	4330      	orrs	r0, r6
 801a790:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a794:	4328      	orrs	r0, r5
 801a796:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a79a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a79c:	4401      	add	r1, r0
 801a79e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a7a0:	f108 0801 	add.w	r8, r8, #1
 801a7a4:	4402      	add	r2, r0
 801a7a6:	e7d9      	b.n	801a75c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a7a8:	b2f0      	uxtb	r0, r6
 801a7aa:	2e00      	cmp	r6, #0
 801a7ac:	d0f5      	beq.n	801a79a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a7ae:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a7b2:	fa1f f980 	uxth.w	r9, r0
 801a7b6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a7ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a7be:	43c0      	mvns	r0, r0
 801a7c0:	b2c0      	uxtb	r0, r0
 801a7c2:	fb16 f609 	smulbb	r6, r6, r9
 801a7c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a7ca:	fb07 6700 	mla	r7, r7, r0, r6
 801a7ce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a7d2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a7d6:	b2ed      	uxtb	r5, r5
 801a7d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a7dc:	fa5f fc8c 	uxtb.w	ip, ip
 801a7e0:	fb15 f509 	smulbb	r5, r5, r9
 801a7e4:	fb0c 5500 	mla	r5, ip, r0, r5
 801a7e8:	b2bf      	uxth	r7, r7
 801a7ea:	fb1a fa09 	smulbb	sl, sl, r9
 801a7ee:	b2ad      	uxth	r5, r5
 801a7f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a7f4:	fb06 a600 	mla	r6, r6, r0, sl
 801a7f8:	1c78      	adds	r0, r7, #1
 801a7fa:	f105 0a01 	add.w	sl, r5, #1
 801a7fe:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a802:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a806:	b2b6      	uxth	r6, r6
 801a808:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a80c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a810:	ea4a 0707 	orr.w	r7, sl, r7
 801a814:	f106 0a01 	add.w	sl, r6, #1
 801a818:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a81c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a820:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a824:	ea47 070a 	orr.w	r7, r7, sl
 801a828:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a82c:	e7b5      	b.n	801a79a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a82e:	b005      	add	sp, #20
 801a830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a834:	fffff800 	.word	0xfffff800

0801a838 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a83c:	b087      	sub	sp, #28
 801a83e:	468b      	mov	fp, r1
 801a840:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a842:	9204      	str	r2, [sp, #16]
 801a844:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a848:	9205      	str	r2, [sp, #20]
 801a84a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a84e:	6861      	ldr	r1, [r4, #4]
 801a850:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a854:	fb01 2000 	mla	r0, r1, r0, r2
 801a858:	6822      	ldr	r2, [r4, #0]
 801a85a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a85e:	f8de 2000 	ldr.w	r2, [lr]
 801a862:	9201      	str	r2, [sp, #4]
 801a864:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a868:	9202      	str	r2, [sp, #8]
 801a86a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a86e:	f1bb 0f00 	cmp.w	fp, #0
 801a872:	dc03      	bgt.n	801a87c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a874:	9a04      	ldr	r2, [sp, #16]
 801a876:	2a00      	cmp	r2, #0
 801a878:	f340 8142 	ble.w	801ab00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a87c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a87e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a882:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a886:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a88a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a88c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a890:	2b00      	cmp	r3, #0
 801a892:	dd0e      	ble.n	801a8b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a894:	140c      	asrs	r4, r1, #16
 801a896:	d405      	bmi.n	801a8a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a898:	42bc      	cmp	r4, r7
 801a89a:	da03      	bge.n	801a8a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a89c:	1414      	asrs	r4, r2, #16
 801a89e:	d401      	bmi.n	801a8a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a8a0:	42b4      	cmp	r4, r6
 801a8a2:	db07      	blt.n	801a8b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a8a4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a8a6:	4421      	add	r1, r4
 801a8a8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a8aa:	3b01      	subs	r3, #1
 801a8ac:	4422      	add	r2, r4
 801a8ae:	3002      	adds	r0, #2
 801a8b0:	e7ee      	b.n	801a890 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a8b2:	d019      	beq.n	801a8e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a8b4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a8b6:	1e5c      	subs	r4, r3, #1
 801a8b8:	fb05 1504 	mla	r5, r5, r4, r1
 801a8bc:	142d      	asrs	r5, r5, #16
 801a8be:	d409      	bmi.n	801a8d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a8c0:	42bd      	cmp	r5, r7
 801a8c2:	da07      	bge.n	801a8d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a8c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a8c6:	fb05 2404 	mla	r4, r5, r4, r2
 801a8ca:	1424      	asrs	r4, r4, #16
 801a8cc:	d402      	bmi.n	801a8d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a8ce:	42b4      	cmp	r4, r6
 801a8d0:	f2c0 80b1 	blt.w	801aa36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a8d4:	f04f 0800 	mov.w	r8, #0
 801a8d8:	eb03 0408 	add.w	r4, r3, r8
 801a8dc:	2c00      	cmp	r4, #0
 801a8de:	dc3e      	bgt.n	801a95e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a8e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a8e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a8e8:	f1bb 0f00 	cmp.w	fp, #0
 801a8ec:	f340 8108 	ble.w	801ab00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a8f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a8f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a8f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a8fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8fe:	f1bb 0b01 	subs.w	fp, fp, #1
 801a902:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a906:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a90a:	eeb0 6a62 	vmov.f32	s12, s5
 801a90e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a912:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a916:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a91a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a91e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a922:	eeb0 6a43 	vmov.f32	s12, s6
 801a926:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a92a:	ee12 2a90 	vmov	r2, s5
 801a92e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a932:	fb92 f3f3 	sdiv	r3, r2, r3
 801a936:	ee13 2a10 	vmov	r2, s6
 801a93a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a93e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a940:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a942:	fb92 f3f3 	sdiv	r3, r2, r3
 801a946:	9a04      	ldr	r2, [sp, #16]
 801a948:	9314      	str	r3, [sp, #80]	; 0x50
 801a94a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a94e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a950:	eeb0 3a67 	vmov.f32	s6, s15
 801a954:	bf08      	it	eq
 801a956:	4613      	moveq	r3, r2
 801a958:	eef0 2a47 	vmov.f32	s5, s14
 801a95c:	e787      	b.n	801a86e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a95e:	140e      	asrs	r6, r1, #16
 801a960:	d462      	bmi.n	801aa28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a962:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a966:	42b5      	cmp	r5, r6
 801a968:	dd5e      	ble.n	801aa28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a96a:	1417      	asrs	r7, r2, #16
 801a96c:	d45c      	bmi.n	801aa28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a96e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801a972:	42bc      	cmp	r4, r7
 801a974:	dd58      	ble.n	801aa28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a976:	b22d      	sxth	r5, r5
 801a978:	fb07 6505 	mla	r5, r7, r5, r6
 801a97c:	9c02      	ldr	r4, [sp, #8]
 801a97e:	5d66      	ldrb	r6, [r4, r5]
 801a980:	2e00      	cmp	r6, #0
 801a982:	d051      	beq.n	801aa28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a984:	9c01      	ldr	r4, [sp, #4]
 801a986:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801a98a:	f06f 0401 	mvn.w	r4, #1
 801a98e:	fb04 f408 	mul.w	r4, r4, r8
 801a992:	9403      	str	r4, [sp, #12]
 801a994:	5b05      	ldrh	r5, [r0, r4]
 801a996:	9c05      	ldr	r4, [sp, #20]
 801a998:	4366      	muls	r6, r4
 801a99a:	1c74      	adds	r4, r6, #1
 801a99c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a9a0:	1224      	asrs	r4, r4, #8
 801a9a2:	b2a7      	uxth	r7, r4
 801a9a4:	122e      	asrs	r6, r5, #8
 801a9a6:	43e4      	mvns	r4, r4
 801a9a8:	b2e4      	uxtb	r4, r4
 801a9aa:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801a9ae:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a9b2:	fb16 f604 	smulbb	r6, r6, r4
 801a9b6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a9ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a9be:	00ed      	lsls	r5, r5, #3
 801a9c0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a9c4:	b2ed      	uxtb	r5, r5
 801a9c6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801a9ca:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a9ce:	fb15 f504 	smulbb	r5, r5, r4
 801a9d2:	fa5f f989 	uxtb.w	r9, r9
 801a9d6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a9da:	fb09 5507 	mla	r5, r9, r7, r5
 801a9de:	fb1a fa04 	smulbb	sl, sl, r4
 801a9e2:	fa1f fc8c 	uxth.w	ip, ip
 801a9e6:	b2ad      	uxth	r5, r5
 801a9e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a9ec:	fb06 a607 	mla	r6, r6, r7, sl
 801a9f0:	f10c 0401 	add.w	r4, ip, #1
 801a9f4:	f105 0a01 	add.w	sl, r5, #1
 801a9f8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a9fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aa00:	b2b6      	uxth	r6, r6
 801aa02:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aa06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aa0a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801aa0e:	f106 0a01 	add.w	sl, r6, #1
 801aa12:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aa16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aa1a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aa1e:	9c03      	ldr	r4, [sp, #12]
 801aa20:	ea4c 0c0a 	orr.w	ip, ip, sl
 801aa24:	f820 c004 	strh.w	ip, [r0, r4]
 801aa28:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa2a:	4421      	add	r1, r4
 801aa2c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aa2e:	f108 38ff 	add.w	r8, r8, #4294967295
 801aa32:	4422      	add	r2, r4
 801aa34:	e750      	b.n	801a8d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aa36:	f04f 0900 	mov.w	r9, #0
 801aa3a:	eba3 0409 	sub.w	r4, r3, r9
 801aa3e:	2c00      	cmp	r4, #0
 801aa40:	f77f af4e 	ble.w	801a8e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801aa44:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801aa48:	140d      	asrs	r5, r1, #16
 801aa4a:	1414      	asrs	r4, r2, #16
 801aa4c:	fb06 5404 	mla	r4, r6, r4, r5
 801aa50:	9d02      	ldr	r5, [sp, #8]
 801aa52:	5d2e      	ldrb	r6, [r5, r4]
 801aa54:	2e00      	cmp	r6, #0
 801aa56:	d04c      	beq.n	801aaf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801aa58:	9d01      	ldr	r5, [sp, #4]
 801aa5a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801aa5e:	9c05      	ldr	r4, [sp, #20]
 801aa60:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801aa64:	4366      	muls	r6, r4
 801aa66:	1c74      	adds	r4, r6, #1
 801aa68:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801aa6c:	1224      	asrs	r4, r4, #8
 801aa6e:	b2a7      	uxth	r7, r4
 801aa70:	122e      	asrs	r6, r5, #8
 801aa72:	43e4      	mvns	r4, r4
 801aa74:	b2e4      	uxtb	r4, r4
 801aa76:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801aa7a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aa7e:	fb16 f604 	smulbb	r6, r6, r4
 801aa82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aa86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aa8a:	00ed      	lsls	r5, r5, #3
 801aa8c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801aa90:	b2ed      	uxtb	r5, r5
 801aa92:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801aa96:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801aa9a:	fb15 f504 	smulbb	r5, r5, r4
 801aa9e:	fa5f f888 	uxtb.w	r8, r8
 801aaa2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801aaa6:	fb08 5507 	mla	r5, r8, r7, r5
 801aaaa:	fb1a fa04 	smulbb	sl, sl, r4
 801aaae:	fa1f fc8c 	uxth.w	ip, ip
 801aab2:	b2ad      	uxth	r5, r5
 801aab4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aab8:	fb06 a607 	mla	r6, r6, r7, sl
 801aabc:	f10c 0401 	add.w	r4, ip, #1
 801aac0:	f105 0a01 	add.w	sl, r5, #1
 801aac4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801aac8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aacc:	b2b6      	uxth	r6, r6
 801aace:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aad2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aad6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801aada:	f106 0a01 	add.w	sl, r6, #1
 801aade:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aae2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aae6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aaea:	ea4c 0c0a 	orr.w	ip, ip, sl
 801aaee:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801aaf2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aaf4:	4421      	add	r1, r4
 801aaf6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aaf8:	f109 0901 	add.w	r9, r9, #1
 801aafc:	4422      	add	r2, r4
 801aafe:	e79c      	b.n	801aa3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801ab00:	b007      	add	sp, #28
 801ab02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ab06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab0a:	b085      	sub	sp, #20
 801ab0c:	468b      	mov	fp, r1
 801ab0e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab10:	9203      	str	r2, [sp, #12]
 801ab12:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801ab16:	6861      	ldr	r1, [r4, #4]
 801ab18:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801ab1c:	fb01 2000 	mla	r0, r1, r0, r2
 801ab20:	6822      	ldr	r2, [r4, #0]
 801ab22:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801ab26:	f8d8 2000 	ldr.w	r2, [r8]
 801ab2a:	9200      	str	r2, [sp, #0]
 801ab2c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801ab30:	9201      	str	r2, [sp, #4]
 801ab32:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ab36:	f1bb 0f00 	cmp.w	fp, #0
 801ab3a:	dc03      	bgt.n	801ab44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ab3c:	9a03      	ldr	r2, [sp, #12]
 801ab3e:	2a00      	cmp	r2, #0
 801ab40:	f340 8146 	ble.w	801add0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ab44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ab46:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801ab4a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801ab4e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ab52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ab54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ab58:	2b00      	cmp	r3, #0
 801ab5a:	dd0e      	ble.n	801ab7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ab5c:	140c      	asrs	r4, r1, #16
 801ab5e:	d405      	bmi.n	801ab6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ab60:	42bc      	cmp	r4, r7
 801ab62:	da03      	bge.n	801ab6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ab64:	1414      	asrs	r4, r2, #16
 801ab66:	d401      	bmi.n	801ab6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ab68:	42b4      	cmp	r4, r6
 801ab6a:	db07      	blt.n	801ab7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ab6c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ab6e:	4421      	add	r1, r4
 801ab70:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ab72:	3b01      	subs	r3, #1
 801ab74:	4422      	add	r2, r4
 801ab76:	3002      	adds	r0, #2
 801ab78:	e7ee      	b.n	801ab58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ab7a:	d017      	beq.n	801abac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ab7c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ab7e:	1e5c      	subs	r4, r3, #1
 801ab80:	fb05 1504 	mla	r5, r5, r4, r1
 801ab84:	142d      	asrs	r5, r5, #16
 801ab86:	d409      	bmi.n	801ab9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ab88:	42bd      	cmp	r5, r7
 801ab8a:	da07      	bge.n	801ab9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ab8c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ab8e:	fb05 2404 	mla	r4, r5, r4, r2
 801ab92:	1424      	asrs	r4, r4, #16
 801ab94:	d402      	bmi.n	801ab9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ab96:	42b4      	cmp	r4, r6
 801ab98:	f2c0 80b3 	blt.w	801ad02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ab9c:	2600      	movs	r6, #0
 801ab9e:	199c      	adds	r4, r3, r6
 801aba0:	2c00      	cmp	r4, #0
 801aba2:	dc3e      	bgt.n	801ac22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801aba4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aba8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801abac:	f1bb 0f00 	cmp.w	fp, #0
 801abb0:	f340 810e 	ble.w	801add0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801abb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801abb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801abbc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801abc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801abc2:	f1bb 0b01 	subs.w	fp, fp, #1
 801abc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801abca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801abce:	eeb0 6a62 	vmov.f32	s12, s5
 801abd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801abda:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abde:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801abe2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abe6:	eeb0 6a43 	vmov.f32	s12, s6
 801abea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abee:	ee12 2a90 	vmov	r2, s5
 801abf2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abf6:	fb92 f3f3 	sdiv	r3, r2, r3
 801abfa:	ee13 2a10 	vmov	r2, s6
 801abfe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac02:	9311      	str	r3, [sp, #68]	; 0x44
 801ac04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac06:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac0a:	9a03      	ldr	r2, [sp, #12]
 801ac0c:	9312      	str	r3, [sp, #72]	; 0x48
 801ac0e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ac12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac14:	eeb0 3a67 	vmov.f32	s6, s15
 801ac18:	bf08      	it	eq
 801ac1a:	4613      	moveq	r3, r2
 801ac1c:	eef0 2a47 	vmov.f32	s5, s14
 801ac20:	e789      	b.n	801ab36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ac22:	140f      	asrs	r7, r1, #16
 801ac24:	d418      	bmi.n	801ac58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac26:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ac2a:	42bd      	cmp	r5, r7
 801ac2c:	dd14      	ble.n	801ac58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac2e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ac32:	d411      	bmi.n	801ac58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac34:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801ac38:	4564      	cmp	r4, ip
 801ac3a:	dd0d      	ble.n	801ac58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac3c:	b22d      	sxth	r5, r5
 801ac3e:	fb0c 7505 	mla	r5, ip, r5, r7
 801ac42:	9c01      	ldr	r4, [sp, #4]
 801ac44:	5d64      	ldrb	r4, [r4, r5]
 801ac46:	2cff      	cmp	r4, #255	; 0xff
 801ac48:	d10c      	bne.n	801ac64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ac4a:	9c00      	ldr	r4, [sp, #0]
 801ac4c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801ac50:	f06f 0401 	mvn.w	r4, #1
 801ac54:	4374      	muls	r4, r6
 801ac56:	5305      	strh	r5, [r0, r4]
 801ac58:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ac5a:	4421      	add	r1, r4
 801ac5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ac5e:	3e01      	subs	r6, #1
 801ac60:	4422      	add	r2, r4
 801ac62:	e79c      	b.n	801ab9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ac64:	2c00      	cmp	r4, #0
 801ac66:	d0f7      	beq.n	801ac58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac68:	9f00      	ldr	r7, [sp, #0]
 801ac6a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ac6e:	f06f 0501 	mvn.w	r5, #1
 801ac72:	4375      	muls	r5, r6
 801ac74:	9502      	str	r5, [sp, #8]
 801ac76:	5b45      	ldrh	r5, [r0, r5]
 801ac78:	fa1f fc84 	uxth.w	ip, r4
 801ac7c:	122f      	asrs	r7, r5, #8
 801ac7e:	43e4      	mvns	r4, r4
 801ac80:	b2e4      	uxtb	r4, r4
 801ac82:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ac86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ac8a:	fb17 f704 	smulbb	r7, r7, r4
 801ac8e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ac92:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ac96:	00ed      	lsls	r5, r5, #3
 801ac98:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ac9c:	b2ed      	uxtb	r5, r5
 801ac9e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801aca2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801aca6:	fb15 f504 	smulbb	r5, r5, r4
 801acaa:	fa5f f989 	uxtb.w	r9, r9
 801acae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801acb2:	fb09 550c 	mla	r5, r9, ip, r5
 801acb6:	fb1a fa04 	smulbb	sl, sl, r4
 801acba:	fa1f fe8e 	uxth.w	lr, lr
 801acbe:	b2ad      	uxth	r5, r5
 801acc0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801acc4:	fb07 a70c 	mla	r7, r7, ip, sl
 801acc8:	f10e 0401 	add.w	r4, lr, #1
 801accc:	f105 0a01 	add.w	sl, r5, #1
 801acd0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801acd4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801acd8:	b2bf      	uxth	r7, r7
 801acda:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801acde:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ace2:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ace6:	f107 0a01 	add.w	sl, r7, #1
 801acea:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801acee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801acf2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801acf6:	9c02      	ldr	r4, [sp, #8]
 801acf8:	ea4e 0e0a 	orr.w	lr, lr, sl
 801acfc:	f820 e004 	strh.w	lr, [r0, r4]
 801ad00:	e7aa      	b.n	801ac58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ad02:	f04f 0900 	mov.w	r9, #0
 801ad06:	eba3 0409 	sub.w	r4, r3, r9
 801ad0a:	2c00      	cmp	r4, #0
 801ad0c:	f77f af4a 	ble.w	801aba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ad10:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ad14:	1414      	asrs	r4, r2, #16
 801ad16:	140d      	asrs	r5, r1, #16
 801ad18:	fb06 5504 	mla	r5, r6, r4, r5
 801ad1c:	9c01      	ldr	r4, [sp, #4]
 801ad1e:	5d64      	ldrb	r4, [r4, r5]
 801ad20:	2cff      	cmp	r4, #255	; 0xff
 801ad22:	d10b      	bne.n	801ad3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ad24:	9c00      	ldr	r4, [sp, #0]
 801ad26:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801ad2a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801ad2e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ad30:	4421      	add	r1, r4
 801ad32:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ad34:	f109 0901 	add.w	r9, r9, #1
 801ad38:	4422      	add	r2, r4
 801ad3a:	e7e4      	b.n	801ad06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ad3c:	2c00      	cmp	r4, #0
 801ad3e:	d0f6      	beq.n	801ad2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ad40:	9e00      	ldr	r6, [sp, #0]
 801ad42:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801ad46:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ad4a:	b2a7      	uxth	r7, r4
 801ad4c:	122e      	asrs	r6, r5, #8
 801ad4e:	43e4      	mvns	r4, r4
 801ad50:	b2e4      	uxtb	r4, r4
 801ad52:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ad56:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ad5a:	fb16 f604 	smulbb	r6, r6, r4
 801ad5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ad62:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ad66:	00ed      	lsls	r5, r5, #3
 801ad68:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ad6c:	b2ed      	uxtb	r5, r5
 801ad6e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ad72:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ad76:	fb15 f504 	smulbb	r5, r5, r4
 801ad7a:	fa5f fe8e 	uxtb.w	lr, lr
 801ad7e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ad82:	fb0e 5507 	mla	r5, lr, r7, r5
 801ad86:	fb1a fa04 	smulbb	sl, sl, r4
 801ad8a:	fa1f fc8c 	uxth.w	ip, ip
 801ad8e:	b2ad      	uxth	r5, r5
 801ad90:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ad94:	fb06 a607 	mla	r6, r6, r7, sl
 801ad98:	f10c 0401 	add.w	r4, ip, #1
 801ad9c:	f105 0a01 	add.w	sl, r5, #1
 801ada0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ada4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ada8:	b2b6      	uxth	r6, r6
 801adaa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801adae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801adb2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801adb6:	f106 0a01 	add.w	sl, r6, #1
 801adba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801adbe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801adc2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801adc6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801adca:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801adce:	e7ae      	b.n	801ad2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801add0:	b005      	add	sp, #20
 801add2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801add6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801add6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adda:	b085      	sub	sp, #20
 801addc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801adde:	9203      	str	r2, [sp, #12]
 801ade0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801ade4:	9201      	str	r2, [sp, #4]
 801ade6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801adea:	9100      	str	r1, [sp, #0]
 801adec:	6841      	ldr	r1, [r0, #4]
 801adee:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801adf2:	fb01 2404 	mla	r4, r1, r4, r2
 801adf6:	6802      	ldr	r2, [r0, #0]
 801adf8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801adfc:	f8de 2000 	ldr.w	r2, [lr]
 801ae00:	9202      	str	r2, [sp, #8]
 801ae02:	9a01      	ldr	r2, [sp, #4]
 801ae04:	43d6      	mvns	r6, r2
 801ae06:	b2f6      	uxtb	r6, r6
 801ae08:	9a00      	ldr	r2, [sp, #0]
 801ae0a:	2a00      	cmp	r2, #0
 801ae0c:	dc03      	bgt.n	801ae16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ae0e:	9a03      	ldr	r2, [sp, #12]
 801ae10:	2a00      	cmp	r2, #0
 801ae12:	f340 8124 	ble.w	801b05e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ae16:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ae18:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ae1c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ae20:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ae24:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ae26:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ae2a:	2b00      	cmp	r3, #0
 801ae2c:	dd0e      	ble.n	801ae4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ae2e:	1408      	asrs	r0, r1, #16
 801ae30:	d405      	bmi.n	801ae3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ae32:	4560      	cmp	r0, ip
 801ae34:	da03      	bge.n	801ae3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ae36:	1410      	asrs	r0, r2, #16
 801ae38:	d401      	bmi.n	801ae3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ae3a:	42b8      	cmp	r0, r7
 801ae3c:	db07      	blt.n	801ae4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ae3e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ae40:	4401      	add	r1, r0
 801ae42:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ae44:	3b01      	subs	r3, #1
 801ae46:	4402      	add	r2, r0
 801ae48:	3402      	adds	r4, #2
 801ae4a:	e7ee      	b.n	801ae2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ae4c:	d06e      	beq.n	801af2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801ae4e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ae50:	1e58      	subs	r0, r3, #1
 801ae52:	fb05 1500 	mla	r5, r5, r0, r1
 801ae56:	142d      	asrs	r5, r5, #16
 801ae58:	d45c      	bmi.n	801af14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ae5a:	4565      	cmp	r5, ip
 801ae5c:	da5a      	bge.n	801af14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ae5e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ae60:	fb05 2000 	mla	r0, r5, r0, r2
 801ae64:	1400      	asrs	r0, r0, #16
 801ae66:	d455      	bmi.n	801af14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ae68:	42b8      	cmp	r0, r7
 801ae6a:	da53      	bge.n	801af14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ae6c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801ae70:	4699      	mov	r9, r3
 801ae72:	46a2      	mov	sl, r4
 801ae74:	f1b9 0f00 	cmp.w	r9, #0
 801ae78:	dd54      	ble.n	801af24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ae7a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ae7e:	140d      	asrs	r5, r1, #16
 801ae80:	1410      	asrs	r0, r2, #16
 801ae82:	fb07 5000 	mla	r0, r7, r0, r5
 801ae86:	9d02      	ldr	r5, [sp, #8]
 801ae88:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ae8c:	f8ba 5000 	ldrh.w	r5, [sl]
 801ae90:	122f      	asrs	r7, r5, #8
 801ae92:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ae96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae9a:	fb17 f706 	smulbb	r7, r7, r6
 801ae9e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801aea2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aea6:	00ed      	lsls	r5, r5, #3
 801aea8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801aeac:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801aeb0:	10c7      	asrs	r7, r0, #3
 801aeb2:	b2ed      	uxtb	r5, r5
 801aeb4:	00c0      	lsls	r0, r0, #3
 801aeb6:	fb18 f806 	smulbb	r8, r8, r6
 801aeba:	fb15 f506 	smulbb	r5, r5, r6
 801aebe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aec2:	b2c0      	uxtb	r0, r0
 801aec4:	fa1f fc8c 	uxth.w	ip, ip
 801aec8:	fb07 870b 	mla	r7, r7, fp, r8
 801aecc:	fb00 500b 	mla	r0, r0, fp, r5
 801aed0:	b280      	uxth	r0, r0
 801aed2:	b2bf      	uxth	r7, r7
 801aed4:	f10c 0501 	add.w	r5, ip, #1
 801aed8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801aedc:	f107 0801 	add.w	r8, r7, #1
 801aee0:	1c45      	adds	r5, r0, #1
 801aee2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801aee6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801aeea:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aeec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aef0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801aef4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801aef8:	ea45 0c0c 	orr.w	ip, r5, ip
 801aefc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801af00:	4401      	add	r1, r0
 801af02:	9812      	ldr	r0, [sp, #72]	; 0x48
 801af04:	ea4c 0c08 	orr.w	ip, ip, r8
 801af08:	f82a cb02 	strh.w	ip, [sl], #2
 801af0c:	4402      	add	r2, r0
 801af0e:	f109 39ff 	add.w	r9, r9, #4294967295
 801af12:	e7af      	b.n	801ae74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801af14:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801af18:	f04f 0800 	mov.w	r8, #0
 801af1c:	eb03 0008 	add.w	r0, r3, r8
 801af20:	2800      	cmp	r0, #0
 801af22:	dc41      	bgt.n	801afa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801af24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af2c:	9b00      	ldr	r3, [sp, #0]
 801af2e:	2b00      	cmp	r3, #0
 801af30:	f340 8095 	ble.w	801b05e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801af34:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801af3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801af40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af46:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af4e:	eef0 6a62 	vmov.f32	s13, s5
 801af52:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af5e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801af62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af66:	eef0 6a43 	vmov.f32	s13, s6
 801af6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801af6e:	ee12 2a90 	vmov	r2, s5
 801af72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af76:	fb92 f3f3 	sdiv	r3, r2, r3
 801af7a:	ee13 2a10 	vmov	r2, s6
 801af7e:	9311      	str	r3, [sp, #68]	; 0x44
 801af80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af82:	fb92 f3f3 	sdiv	r3, r2, r3
 801af86:	9312      	str	r3, [sp, #72]	; 0x48
 801af88:	9b00      	ldr	r3, [sp, #0]
 801af8a:	9a03      	ldr	r2, [sp, #12]
 801af8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af90:	3b01      	subs	r3, #1
 801af92:	9300      	str	r3, [sp, #0]
 801af94:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801af98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af9a:	eeb0 3a67 	vmov.f32	s6, s15
 801af9e:	bf08      	it	eq
 801afa0:	4613      	moveq	r3, r2
 801afa2:	eef0 2a47 	vmov.f32	s5, s14
 801afa6:	e72f      	b.n	801ae08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801afa8:	140f      	asrs	r7, r1, #16
 801afaa:	d451      	bmi.n	801b050 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801afac:	f8de 5008 	ldr.w	r5, [lr, #8]
 801afb0:	42bd      	cmp	r5, r7
 801afb2:	dd4d      	ble.n	801b050 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801afb4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801afb8:	d44a      	bmi.n	801b050 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801afba:	f8de 000c 	ldr.w	r0, [lr, #12]
 801afbe:	4560      	cmp	r0, ip
 801afc0:	dd46      	ble.n	801b050 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801afc2:	b22d      	sxth	r5, r5
 801afc4:	fb0c 7505 	mla	r5, ip, r5, r7
 801afc8:	9802      	ldr	r0, [sp, #8]
 801afca:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801afce:	f06f 0501 	mvn.w	r5, #1
 801afd2:	fb05 fb08 	mul.w	fp, r5, r8
 801afd6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801afda:	f834 500b 	ldrh.w	r5, [r4, fp]
 801afde:	122f      	asrs	r7, r5, #8
 801afe0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801afe4:	fb17 f706 	smulbb	r7, r7, r6
 801afe8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801afec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aff0:	00ed      	lsls	r5, r5, #3
 801aff2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801aff6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801affa:	10c7      	asrs	r7, r0, #3
 801affc:	b2ed      	uxtb	r5, r5
 801affe:	00c0      	lsls	r0, r0, #3
 801b000:	fb19 f906 	smulbb	r9, r9, r6
 801b004:	fb15 f506 	smulbb	r5, r5, r6
 801b008:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b00c:	b2c0      	uxtb	r0, r0
 801b00e:	fa1f fc8c 	uxth.w	ip, ip
 801b012:	fb07 970a 	mla	r7, r7, sl, r9
 801b016:	fb00 500a 	mla	r0, r0, sl, r5
 801b01a:	b2bf      	uxth	r7, r7
 801b01c:	b280      	uxth	r0, r0
 801b01e:	f10c 0501 	add.w	r5, ip, #1
 801b022:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b026:	f107 0901 	add.w	r9, r7, #1
 801b02a:	1c45      	adds	r5, r0, #1
 801b02c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b030:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b034:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b038:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b03c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b040:	ea45 0c0c 	orr.w	ip, r5, ip
 801b044:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b048:	ea4c 0c09 	orr.w	ip, ip, r9
 801b04c:	f824 c00b 	strh.w	ip, [r4, fp]
 801b050:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b052:	4401      	add	r1, r0
 801b054:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b056:	f108 38ff 	add.w	r8, r8, #4294967295
 801b05a:	4402      	add	r2, r0
 801b05c:	e75e      	b.n	801af1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b05e:	b005      	add	sp, #20
 801b060:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b064 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b068:	b085      	sub	sp, #20
 801b06a:	4693      	mov	fp, r2
 801b06c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b06e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b070:	6870      	ldr	r0, [r6, #4]
 801b072:	9101      	str	r1, [sp, #4]
 801b074:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b078:	fb00 2404 	mla	r4, r0, r4, r2
 801b07c:	6832      	ldr	r2, [r6, #0]
 801b07e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b082:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b086:	682a      	ldr	r2, [r5, #0]
 801b088:	9202      	str	r2, [sp, #8]
 801b08a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b08e:	9a01      	ldr	r2, [sp, #4]
 801b090:	2a00      	cmp	r2, #0
 801b092:	dc03      	bgt.n	801b09c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b094:	f1bb 0f00 	cmp.w	fp, #0
 801b098:	f340 809a 	ble.w	801b1d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b09c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b09e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b0a2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b0a6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b0aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b0ac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b0b0:	2b00      	cmp	r3, #0
 801b0b2:	dd0c      	ble.n	801b0ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b0b4:	1406      	asrs	r6, r0, #16
 801b0b6:	d405      	bmi.n	801b0c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b0b8:	454e      	cmp	r6, r9
 801b0ba:	da03      	bge.n	801b0c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b0bc:	1416      	asrs	r6, r2, #16
 801b0be:	d401      	bmi.n	801b0c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b0c0:	4546      	cmp	r6, r8
 801b0c2:	db05      	blt.n	801b0d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b0c4:	4470      	add	r0, lr
 801b0c6:	4462      	add	r2, ip
 801b0c8:	3b01      	subs	r3, #1
 801b0ca:	3402      	adds	r4, #2
 801b0cc:	e7f0      	b.n	801b0b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b0ce:	d00f      	beq.n	801b0f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b0d0:	1e5e      	subs	r6, r3, #1
 801b0d2:	fb0e 0706 	mla	r7, lr, r6, r0
 801b0d6:	143f      	asrs	r7, r7, #16
 801b0d8:	d541      	bpl.n	801b15e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b0da:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b0de:	4698      	mov	r8, r3
 801b0e0:	9603      	str	r6, [sp, #12]
 801b0e2:	f1b8 0f00 	cmp.w	r8, #0
 801b0e6:	dc56      	bgt.n	801b196 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b0e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b0ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b0f0:	9b01      	ldr	r3, [sp, #4]
 801b0f2:	2b00      	cmp	r3, #0
 801b0f4:	dd6c      	ble.n	801b1d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b0f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b0fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b0fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b102:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b104:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b108:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b10c:	eeb0 6a62 	vmov.f32	s12, s5
 801b110:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b114:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b118:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b11c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b120:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b124:	eeb0 6a43 	vmov.f32	s12, s6
 801b128:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b12c:	ee12 2a90 	vmov	r2, s5
 801b130:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b134:	fb92 fef3 	sdiv	lr, r2, r3
 801b138:	ee13 2a10 	vmov	r2, s6
 801b13c:	fb92 fcf3 	sdiv	ip, r2, r3
 801b140:	9b01      	ldr	r3, [sp, #4]
 801b142:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b146:	3b01      	subs	r3, #1
 801b148:	9301      	str	r3, [sp, #4]
 801b14a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b14e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b150:	eeb0 3a67 	vmov.f32	s6, s15
 801b154:	bf08      	it	eq
 801b156:	465b      	moveq	r3, fp
 801b158:	eef0 2a47 	vmov.f32	s5, s14
 801b15c:	e797      	b.n	801b08e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b15e:	454f      	cmp	r7, r9
 801b160:	dabb      	bge.n	801b0da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b162:	fb0c 2606 	mla	r6, ip, r6, r2
 801b166:	1436      	asrs	r6, r6, #16
 801b168:	d4b7      	bmi.n	801b0da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b16a:	4546      	cmp	r6, r8
 801b16c:	dab5      	bge.n	801b0da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b16e:	461e      	mov	r6, r3
 801b170:	46a0      	mov	r8, r4
 801b172:	2e00      	cmp	r6, #0
 801b174:	ddb8      	ble.n	801b0e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b176:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b17a:	9902      	ldr	r1, [sp, #8]
 801b17c:	1417      	asrs	r7, r2, #16
 801b17e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b182:	fb0a 9707 	mla	r7, sl, r7, r9
 801b186:	4470      	add	r0, lr
 801b188:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b18c:	f828 7b02 	strh.w	r7, [r8], #2
 801b190:	4462      	add	r2, ip
 801b192:	3e01      	subs	r6, #1
 801b194:	e7ed      	b.n	801b172 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b196:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b19a:	d414      	bmi.n	801b1c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b19c:	68ae      	ldr	r6, [r5, #8]
 801b19e:	454e      	cmp	r6, r9
 801b1a0:	dd11      	ble.n	801b1c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b1a2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b1a6:	d40e      	bmi.n	801b1c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b1a8:	68ef      	ldr	r7, [r5, #12]
 801b1aa:	4557      	cmp	r7, sl
 801b1ac:	dd0b      	ble.n	801b1c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b1ae:	b236      	sxth	r6, r6
 801b1b0:	fb0a 9606 	mla	r6, sl, r6, r9
 801b1b4:	9f02      	ldr	r7, [sp, #8]
 801b1b6:	f06f 0101 	mvn.w	r1, #1
 801b1ba:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b1be:	fb01 f608 	mul.w	r6, r1, r8
 801b1c2:	9903      	ldr	r1, [sp, #12]
 801b1c4:	538f      	strh	r7, [r1, r6]
 801b1c6:	4470      	add	r0, lr
 801b1c8:	4462      	add	r2, ip
 801b1ca:	f108 38ff 	add.w	r8, r8, #4294967295
 801b1ce:	e788      	b.n	801b0e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1d0:	b005      	add	sp, #20
 801b1d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b1d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b1d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1da:	b087      	sub	sp, #28
 801b1dc:	468b      	mov	fp, r1
 801b1de:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b1e0:	9203      	str	r2, [sp, #12]
 801b1e2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b1e6:	9204      	str	r2, [sp, #16]
 801b1e8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b1ec:	6841      	ldr	r1, [r0, #4]
 801b1ee:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b1f2:	fb01 2505 	mla	r5, r1, r5, r2
 801b1f6:	6802      	ldr	r2, [r0, #0]
 801b1f8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b1fc:	f8d9 2000 	ldr.w	r2, [r9]
 801b200:	9201      	str	r2, [sp, #4]
 801b202:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b206:	f1bb 0f00 	cmp.w	fp, #0
 801b20a:	dc03      	bgt.n	801b214 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b20c:	9a03      	ldr	r2, [sp, #12]
 801b20e:	2a00      	cmp	r2, #0
 801b210:	f340 8159 	ble.w	801b4c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b214:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b216:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b21a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b21e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b222:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b224:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b228:	2b00      	cmp	r3, #0
 801b22a:	dd0e      	ble.n	801b24a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b22c:	1402      	asrs	r2, r0, #16
 801b22e:	d405      	bmi.n	801b23c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b230:	42ba      	cmp	r2, r7
 801b232:	da03      	bge.n	801b23c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b234:	140a      	asrs	r2, r1, #16
 801b236:	d401      	bmi.n	801b23c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b238:	42b2      	cmp	r2, r6
 801b23a:	db07      	blt.n	801b24c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b23c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b23e:	4410      	add	r0, r2
 801b240:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b242:	3b01      	subs	r3, #1
 801b244:	4411      	add	r1, r2
 801b246:	3502      	adds	r5, #2
 801b248:	e7ee      	b.n	801b228 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b24a:	d017      	beq.n	801b27c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b24c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b24e:	1e5a      	subs	r2, r3, #1
 801b250:	fb04 0402 	mla	r4, r4, r2, r0
 801b254:	1424      	asrs	r4, r4, #16
 801b256:	d409      	bmi.n	801b26c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b258:	42bc      	cmp	r4, r7
 801b25a:	da07      	bge.n	801b26c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b25c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b25e:	fb04 1202 	mla	r2, r4, r2, r1
 801b262:	1412      	asrs	r2, r2, #16
 801b264:	d402      	bmi.n	801b26c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b266:	42b2      	cmp	r2, r6
 801b268:	f2c0 80bf 	blt.w	801b3ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b26c:	2700      	movs	r7, #0
 801b26e:	19da      	adds	r2, r3, r7
 801b270:	2a00      	cmp	r2, #0
 801b272:	dc3e      	bgt.n	801b2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b274:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b278:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b27c:	f1bb 0f00 	cmp.w	fp, #0
 801b280:	f340 8121 	ble.w	801b4c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b284:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b288:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b28c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b290:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b292:	f1bb 0b01 	subs.w	fp, fp, #1
 801b296:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b29a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b29e:	eeb0 6a62 	vmov.f32	s12, s5
 801b2a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b2a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b2ae:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b2b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b2b6:	eeb0 6a43 	vmov.f32	s12, s6
 801b2ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b2be:	ee12 2a90 	vmov	r2, s5
 801b2c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b2c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2ca:	ee13 2a10 	vmov	r2, s6
 801b2ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2d2:	9313      	str	r3, [sp, #76]	; 0x4c
 801b2d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b2d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2da:	9a03      	ldr	r2, [sp, #12]
 801b2dc:	9314      	str	r3, [sp, #80]	; 0x50
 801b2de:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b2e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b2e4:	eeb0 3a67 	vmov.f32	s6, s15
 801b2e8:	bf08      	it	eq
 801b2ea:	4613      	moveq	r3, r2
 801b2ec:	eef0 2a47 	vmov.f32	s5, s14
 801b2f0:	e789      	b.n	801b206 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b2f2:	1406      	asrs	r6, r0, #16
 801b2f4:	d42d      	bmi.n	801b352 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b2f6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b2fa:	42b4      	cmp	r4, r6
 801b2fc:	dd29      	ble.n	801b352 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b2fe:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b302:	d426      	bmi.n	801b352 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b304:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b308:	4562      	cmp	r2, ip
 801b30a:	dd22      	ble.n	801b352 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b30c:	b224      	sxth	r4, r4
 801b30e:	9a01      	ldr	r2, [sp, #4]
 801b310:	fb0c 6404 	mla	r4, ip, r4, r6
 801b314:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b318:	0e22      	lsrs	r2, r4, #24
 801b31a:	d01a      	beq.n	801b352 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b31c:	9e04      	ldr	r6, [sp, #16]
 801b31e:	4372      	muls	r2, r6
 801b320:	1c56      	adds	r6, r2, #1
 801b322:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b326:	1212      	asrs	r2, r2, #8
 801b328:	0a26      	lsrs	r6, r4, #8
 801b32a:	2aff      	cmp	r2, #255	; 0xff
 801b32c:	9605      	str	r6, [sp, #20]
 801b32e:	d116      	bne.n	801b35e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b330:	f06f 0201 	mvn.w	r2, #1
 801b334:	fb02 fc07 	mul.w	ip, r2, r7
 801b338:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b33c:	0962      	lsrs	r2, r4, #5
 801b33e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b342:	f026 0607 	bic.w	r6, r6, #7
 801b346:	4316      	orrs	r6, r2
 801b348:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b34c:	4326      	orrs	r6, r4
 801b34e:	f825 600c 	strh.w	r6, [r5, ip]
 801b352:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b354:	4410      	add	r0, r2
 801b356:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b358:	3f01      	subs	r7, #1
 801b35a:	4411      	add	r1, r2
 801b35c:	e787      	b.n	801b26e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b35e:	f06f 0601 	mvn.w	r6, #1
 801b362:	437e      	muls	r6, r7
 801b364:	fa1f fa82 	uxth.w	sl, r2
 801b368:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b36c:	9602      	str	r6, [sp, #8]
 801b36e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b372:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b376:	43d2      	mvns	r2, r2
 801b378:	b2d2      	uxtb	r2, r2
 801b37a:	fb1c fc0a 	smulbb	ip, ip, sl
 801b37e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b382:	fb0e ce02 	mla	lr, lr, r2, ip
 801b386:	b2e4      	uxtb	r4, r4
 801b388:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b38c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b390:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b394:	fa5f f888 	uxtb.w	r8, r8
 801b398:	fb14 f40a 	smulbb	r4, r4, sl
 801b39c:	fb08 4402 	mla	r4, r8, r2, r4
 801b3a0:	fa1f fe8e 	uxth.w	lr, lr
 801b3a4:	fb16 f60a 	smulbb	r6, r6, sl
 801b3a8:	b2a4      	uxth	r4, r4
 801b3aa:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b3ae:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b3b2:	f10e 0201 	add.w	r2, lr, #1
 801b3b6:	1c66      	adds	r6, r4, #1
 801b3b8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b3bc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b3c0:	fa1f fc8c 	uxth.w	ip, ip
 801b3c4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b3c8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b3cc:	ea46 0e0e 	orr.w	lr, r6, lr
 801b3d0:	f10c 0601 	add.w	r6, ip, #1
 801b3d4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b3d8:	0976      	lsrs	r6, r6, #5
 801b3da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b3de:	9a02      	ldr	r2, [sp, #8]
 801b3e0:	ea4e 0e06 	orr.w	lr, lr, r6
 801b3e4:	f825 e002 	strh.w	lr, [r5, r2]
 801b3e8:	e7b3      	b.n	801b352 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b3ea:	f04f 0800 	mov.w	r8, #0
 801b3ee:	eba3 0208 	sub.w	r2, r3, r8
 801b3f2:	2a00      	cmp	r2, #0
 801b3f4:	f77f af3e 	ble.w	801b274 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b3f8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b3fc:	1404      	asrs	r4, r0, #16
 801b3fe:	140a      	asrs	r2, r1, #16
 801b400:	fb06 4202 	mla	r2, r6, r2, r4
 801b404:	9c01      	ldr	r4, [sp, #4]
 801b406:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b40a:	0e22      	lsrs	r2, r4, #24
 801b40c:	d016      	beq.n	801b43c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b40e:	9e04      	ldr	r6, [sp, #16]
 801b410:	4372      	muls	r2, r6
 801b412:	1c56      	adds	r6, r2, #1
 801b414:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b418:	1212      	asrs	r2, r2, #8
 801b41a:	2aff      	cmp	r2, #255	; 0xff
 801b41c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b420:	d113      	bne.n	801b44a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b422:	0962      	lsrs	r2, r4, #5
 801b424:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b428:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b42c:	f026 0607 	bic.w	r6, r6, #7
 801b430:	4316      	orrs	r6, r2
 801b432:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b436:	4326      	orrs	r6, r4
 801b438:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b43c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b43e:	4410      	add	r0, r2
 801b440:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b442:	f108 0801 	add.w	r8, r8, #1
 801b446:	4411      	add	r1, r2
 801b448:	e7d1      	b.n	801b3ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b44a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b44e:	fa1f fa82 	uxth.w	sl, r2
 801b452:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b456:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b45a:	43d2      	mvns	r2, r2
 801b45c:	b2d2      	uxtb	r2, r2
 801b45e:	fb17 f70a 	smulbb	r7, r7, sl
 801b462:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b466:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b46a:	b2e4      	uxtb	r4, r4
 801b46c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b470:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b474:	fa5f fe8e 	uxtb.w	lr, lr
 801b478:	fb14 f40a 	smulbb	r4, r4, sl
 801b47c:	fb0e 4402 	mla	r4, lr, r2, r4
 801b480:	b2f6      	uxtb	r6, r6
 801b482:	fa1f fc8c 	uxth.w	ip, ip
 801b486:	fb16 f60a 	smulbb	r6, r6, sl
 801b48a:	b2a4      	uxth	r4, r4
 801b48c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b490:	fb07 6702 	mla	r7, r7, r2, r6
 801b494:	f10c 0201 	add.w	r2, ip, #1
 801b498:	1c66      	adds	r6, r4, #1
 801b49a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b49e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b4a2:	b2bf      	uxth	r7, r7
 801b4a4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b4a8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b4ac:	ea46 0c0c 	orr.w	ip, r6, ip
 801b4b0:	1c7e      	adds	r6, r7, #1
 801b4b2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b4b6:	0976      	lsrs	r6, r6, #5
 801b4b8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b4bc:	ea4c 0c06 	orr.w	ip, ip, r6
 801b4c0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b4c4:	e7ba      	b.n	801b43c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b4c6:	b007      	add	sp, #28
 801b4c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b4cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b4cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4d0:	b085      	sub	sp, #20
 801b4d2:	468b      	mov	fp, r1
 801b4d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b4d6:	9203      	str	r2, [sp, #12]
 801b4d8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b4dc:	6841      	ldr	r1, [r0, #4]
 801b4de:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b4e2:	fb01 2404 	mla	r4, r1, r4, r2
 801b4e6:	6802      	ldr	r2, [r0, #0]
 801b4e8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b4ec:	f8d8 2000 	ldr.w	r2, [r8]
 801b4f0:	9201      	str	r2, [sp, #4]
 801b4f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b4f6:	f1bb 0f00 	cmp.w	fp, #0
 801b4fa:	dc03      	bgt.n	801b504 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b4fc:	9a03      	ldr	r2, [sp, #12]
 801b4fe:	2a00      	cmp	r2, #0
 801b500:	f340 814f 	ble.w	801b7a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b504:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b506:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b50a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b50e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b512:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b514:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b518:	2b00      	cmp	r3, #0
 801b51a:	dd0e      	ble.n	801b53a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b51c:	1408      	asrs	r0, r1, #16
 801b51e:	d405      	bmi.n	801b52c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b520:	42b8      	cmp	r0, r7
 801b522:	da03      	bge.n	801b52c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b524:	1410      	asrs	r0, r2, #16
 801b526:	d401      	bmi.n	801b52c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b528:	42b0      	cmp	r0, r6
 801b52a:	db07      	blt.n	801b53c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b52c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b52e:	4401      	add	r1, r0
 801b530:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b532:	3b01      	subs	r3, #1
 801b534:	4402      	add	r2, r0
 801b536:	3402      	adds	r4, #2
 801b538:	e7ee      	b.n	801b518 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b53a:	d017      	beq.n	801b56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b53c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b53e:	1e58      	subs	r0, r3, #1
 801b540:	fb05 1500 	mla	r5, r5, r0, r1
 801b544:	142d      	asrs	r5, r5, #16
 801b546:	d409      	bmi.n	801b55c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b548:	42bd      	cmp	r5, r7
 801b54a:	da07      	bge.n	801b55c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b54c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b54e:	fb05 2000 	mla	r0, r5, r0, r2
 801b552:	1400      	asrs	r0, r0, #16
 801b554:	d402      	bmi.n	801b55c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b556:	42b0      	cmp	r0, r6
 801b558:	f2c0 80ba 	blt.w	801b6d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b55c:	2600      	movs	r6, #0
 801b55e:	1998      	adds	r0, r3, r6
 801b560:	2800      	cmp	r0, #0
 801b562:	dc3e      	bgt.n	801b5e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b564:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b568:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b56c:	f1bb 0f00 	cmp.w	fp, #0
 801b570:	f340 8117 	ble.w	801b7a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b574:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b578:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b57c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b580:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b582:	f1bb 0b01 	subs.w	fp, fp, #1
 801b586:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b58a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b58e:	eeb0 6a62 	vmov.f32	s12, s5
 801b592:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b596:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b59a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b59e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b5a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b5a6:	eeb0 6a43 	vmov.f32	s12, s6
 801b5aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b5ae:	ee12 2a90 	vmov	r2, s5
 801b5b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b5b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5ba:	ee13 2a10 	vmov	r2, s6
 801b5be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b5c2:	9311      	str	r3, [sp, #68]	; 0x44
 801b5c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b5c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5ca:	9a03      	ldr	r2, [sp, #12]
 801b5cc:	9312      	str	r3, [sp, #72]	; 0x48
 801b5ce:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b5d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b5d4:	eeb0 3a67 	vmov.f32	s6, s15
 801b5d8:	bf08      	it	eq
 801b5da:	4613      	moveq	r3, r2
 801b5dc:	eef0 2a47 	vmov.f32	s5, s14
 801b5e0:	e789      	b.n	801b4f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b5e2:	140f      	asrs	r7, r1, #16
 801b5e4:	d424      	bmi.n	801b630 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b5e6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b5ea:	42bd      	cmp	r5, r7
 801b5ec:	dd20      	ble.n	801b630 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b5ee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b5f2:	d41d      	bmi.n	801b630 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b5f4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b5f8:	4560      	cmp	r0, ip
 801b5fa:	dd19      	ble.n	801b630 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b5fc:	b22d      	sxth	r5, r5
 801b5fe:	fb0c 7505 	mla	r5, ip, r5, r7
 801b602:	9801      	ldr	r0, [sp, #4]
 801b604:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b608:	0e07      	lsrs	r7, r0, #24
 801b60a:	2fff      	cmp	r7, #255	; 0xff
 801b60c:	d116      	bne.n	801b63c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b60e:	f06f 0501 	mvn.w	r5, #1
 801b612:	fb05 f706 	mul.w	r7, r5, r6
 801b616:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b61a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b61e:	0945      	lsrs	r5, r0, #5
 801b620:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b624:	ea4c 0505 	orr.w	r5, ip, r5
 801b628:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b62c:	4305      	orrs	r5, r0
 801b62e:	53e5      	strh	r5, [r4, r7]
 801b630:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b632:	4401      	add	r1, r0
 801b634:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b636:	3e01      	subs	r6, #1
 801b638:	4402      	add	r2, r0
 801b63a:	e790      	b.n	801b55e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b63c:	b2fd      	uxtb	r5, r7
 801b63e:	2f00      	cmp	r7, #0
 801b640:	d0f6      	beq.n	801b630 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b642:	f06f 0701 	mvn.w	r7, #1
 801b646:	4377      	muls	r7, r6
 801b648:	fa1f f985 	uxth.w	r9, r5
 801b64c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b650:	9702      	str	r7, [sp, #8]
 801b652:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b656:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b65a:	43ed      	mvns	r5, r5
 801b65c:	b2ed      	uxtb	r5, r5
 801b65e:	fb17 f709 	smulbb	r7, r7, r9
 801b662:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b666:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b66a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b66e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b672:	b2c0      	uxtb	r0, r0
 801b674:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b678:	fa5f fe8e 	uxtb.w	lr, lr
 801b67c:	fb10 f009 	smulbb	r0, r0, r9
 801b680:	fb0e 0005 	mla	r0, lr, r5, r0
 801b684:	b280      	uxth	r0, r0
 801b686:	fa1f fc8c 	uxth.w	ip, ip
 801b68a:	fb1a fa09 	smulbb	sl, sl, r9
 801b68e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b692:	fb07 a705 	mla	r7, r7, r5, sl
 801b696:	f100 0a01 	add.w	sl, r0, #1
 801b69a:	f10c 0501 	add.w	r5, ip, #1
 801b69e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b6a2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b6a6:	b2bf      	uxth	r7, r7
 801b6a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b6ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b6b0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b6b4:	f107 0a01 	add.w	sl, r7, #1
 801b6b8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b6bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b6c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b6c4:	9802      	ldr	r0, [sp, #8]
 801b6c6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b6ca:	f824 c000 	strh.w	ip, [r4, r0]
 801b6ce:	e7af      	b.n	801b630 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b6d0:	f04f 0e00 	mov.w	lr, #0
 801b6d4:	eba3 000e 	sub.w	r0, r3, lr
 801b6d8:	2800      	cmp	r0, #0
 801b6da:	f77f af43 	ble.w	801b564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b6de:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b6e2:	140d      	asrs	r5, r1, #16
 801b6e4:	1410      	asrs	r0, r2, #16
 801b6e6:	fb06 5000 	mla	r0, r6, r0, r5
 801b6ea:	9d01      	ldr	r5, [sp, #4]
 801b6ec:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b6f0:	0e2e      	lsrs	r6, r5, #24
 801b6f2:	2eff      	cmp	r6, #255	; 0xff
 801b6f4:	d112      	bne.n	801b71c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b6f6:	482c      	ldr	r0, [pc, #176]	; (801b7a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b6f8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b6fc:	0968      	lsrs	r0, r5, #5
 801b6fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b702:	4330      	orrs	r0, r6
 801b704:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b708:	4328      	orrs	r0, r5
 801b70a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b70e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b710:	4401      	add	r1, r0
 801b712:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b714:	f10e 0e01 	add.w	lr, lr, #1
 801b718:	4402      	add	r2, r0
 801b71a:	e7db      	b.n	801b6d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b71c:	b2f0      	uxtb	r0, r6
 801b71e:	2e00      	cmp	r6, #0
 801b720:	d0f5      	beq.n	801b70e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b722:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b726:	fa1f f980 	uxth.w	r9, r0
 801b72a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b72e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b732:	43c0      	mvns	r0, r0
 801b734:	b2c0      	uxtb	r0, r0
 801b736:	fb16 f609 	smulbb	r6, r6, r9
 801b73a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b73e:	fb07 6700 	mla	r7, r7, r0, r6
 801b742:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b746:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b74a:	b2ed      	uxtb	r5, r5
 801b74c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b750:	fa5f fc8c 	uxtb.w	ip, ip
 801b754:	fb15 f509 	smulbb	r5, r5, r9
 801b758:	fb0c 5500 	mla	r5, ip, r0, r5
 801b75c:	b2bf      	uxth	r7, r7
 801b75e:	fb1a fa09 	smulbb	sl, sl, r9
 801b762:	b2ad      	uxth	r5, r5
 801b764:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b768:	fb06 a600 	mla	r6, r6, r0, sl
 801b76c:	1c78      	adds	r0, r7, #1
 801b76e:	f105 0a01 	add.w	sl, r5, #1
 801b772:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b776:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b77a:	b2b6      	uxth	r6, r6
 801b77c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b780:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b784:	ea4a 0707 	orr.w	r7, sl, r7
 801b788:	f106 0a01 	add.w	sl, r6, #1
 801b78c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b790:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b794:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b798:	ea47 070a 	orr.w	r7, r7, sl
 801b79c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b7a0:	e7b5      	b.n	801b70e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b7a2:	b005      	add	sp, #20
 801b7a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7a8:	fffff800 	.word	0xfffff800

0801b7ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7b0:	b087      	sub	sp, #28
 801b7b2:	468b      	mov	fp, r1
 801b7b4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b7b6:	9203      	str	r2, [sp, #12]
 801b7b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b7bc:	9204      	str	r2, [sp, #16]
 801b7be:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b7c2:	6841      	ldr	r1, [r0, #4]
 801b7c4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b7c8:	fb01 2404 	mla	r4, r1, r4, r2
 801b7cc:	6802      	ldr	r2, [r0, #0]
 801b7ce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b7d2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b7d6:	3201      	adds	r2, #1
 801b7d8:	f022 0201 	bic.w	r2, r2, #1
 801b7dc:	9200      	str	r2, [sp, #0]
 801b7de:	f8d9 2000 	ldr.w	r2, [r9]
 801b7e2:	9201      	str	r2, [sp, #4]
 801b7e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b7e8:	f1bb 0f00 	cmp.w	fp, #0
 801b7ec:	dc03      	bgt.n	801b7f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b7ee:	9a03      	ldr	r2, [sp, #12]
 801b7f0:	2a00      	cmp	r2, #0
 801b7f2:	f340 8169 	ble.w	801bac8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b7f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b7f8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b7fc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b800:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b804:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b806:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b80a:	2b00      	cmp	r3, #0
 801b80c:	dd0e      	ble.n	801b82c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b80e:	1402      	asrs	r2, r0, #16
 801b810:	d405      	bmi.n	801b81e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b812:	42ba      	cmp	r2, r7
 801b814:	da03      	bge.n	801b81e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b816:	140a      	asrs	r2, r1, #16
 801b818:	d401      	bmi.n	801b81e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b81a:	42b2      	cmp	r2, r6
 801b81c:	db07      	blt.n	801b82e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b81e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b820:	4410      	add	r0, r2
 801b822:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b824:	3b01      	subs	r3, #1
 801b826:	4411      	add	r1, r2
 801b828:	3402      	adds	r4, #2
 801b82a:	e7ee      	b.n	801b80a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b82c:	d017      	beq.n	801b85e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b82e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b830:	1e5a      	subs	r2, r3, #1
 801b832:	fb05 0502 	mla	r5, r5, r2, r0
 801b836:	142d      	asrs	r5, r5, #16
 801b838:	d409      	bmi.n	801b84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b83a:	42bd      	cmp	r5, r7
 801b83c:	da07      	bge.n	801b84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b83e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b840:	fb05 1202 	mla	r2, r5, r2, r1
 801b844:	1412      	asrs	r2, r2, #16
 801b846:	d402      	bmi.n	801b84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b848:	42b2      	cmp	r2, r6
 801b84a:	f2c0 80c7 	blt.w	801b9dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b84e:	2700      	movs	r7, #0
 801b850:	19da      	adds	r2, r3, r7
 801b852:	2a00      	cmp	r2, #0
 801b854:	dc3e      	bgt.n	801b8d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b856:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b85a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b85e:	f1bb 0f00 	cmp.w	fp, #0
 801b862:	f340 8131 	ble.w	801bac8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b866:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b86a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b86e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b872:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b874:	f1bb 0b01 	subs.w	fp, fp, #1
 801b878:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b87c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b880:	eeb0 6a62 	vmov.f32	s12, s5
 801b884:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b888:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b88c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b890:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b894:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b898:	eeb0 6a43 	vmov.f32	s12, s6
 801b89c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b8a0:	ee12 2a90 	vmov	r2, s5
 801b8a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b8a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8ac:	ee13 2a10 	vmov	r2, s6
 801b8b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b8b4:	9313      	str	r3, [sp, #76]	; 0x4c
 801b8b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b8b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8bc:	9a03      	ldr	r2, [sp, #12]
 801b8be:	9314      	str	r3, [sp, #80]	; 0x50
 801b8c0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b8c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b8c6:	eeb0 3a67 	vmov.f32	s6, s15
 801b8ca:	bf08      	it	eq
 801b8cc:	4613      	moveq	r3, r2
 801b8ce:	eef0 2a47 	vmov.f32	s5, s14
 801b8d2:	e789      	b.n	801b7e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b8d4:	1405      	asrs	r5, r0, #16
 801b8d6:	d435      	bmi.n	801b944 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8d8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b8dc:	42aa      	cmp	r2, r5
 801b8de:	dd31      	ble.n	801b944 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8e0:	140e      	asrs	r6, r1, #16
 801b8e2:	d42f      	bmi.n	801b944 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8e4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b8e8:	42b2      	cmp	r2, r6
 801b8ea:	dd2b      	ble.n	801b944 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8ec:	9a00      	ldr	r2, [sp, #0]
 801b8ee:	fb06 5502 	mla	r5, r6, r2, r5
 801b8f2:	086a      	lsrs	r2, r5, #1
 801b8f4:	9e01      	ldr	r6, [sp, #4]
 801b8f6:	5cb2      	ldrb	r2, [r6, r2]
 801b8f8:	07ee      	lsls	r6, r5, #31
 801b8fa:	bf54      	ite	pl
 801b8fc:	f002 020f 	andpl.w	r2, r2, #15
 801b900:	1112      	asrmi	r2, r2, #4
 801b902:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b906:	b2d2      	uxtb	r2, r2
 801b908:	b1e2      	cbz	r2, 801b944 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b90a:	9d04      	ldr	r5, [sp, #16]
 801b90c:	436a      	muls	r2, r5
 801b90e:	1c55      	adds	r5, r2, #1
 801b910:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b914:	4d6e      	ldr	r5, [pc, #440]	; (801bad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b916:	682d      	ldr	r5, [r5, #0]
 801b918:	1212      	asrs	r2, r2, #8
 801b91a:	0a2e      	lsrs	r6, r5, #8
 801b91c:	2aff      	cmp	r2, #255	; 0xff
 801b91e:	9605      	str	r6, [sp, #20]
 801b920:	d116      	bne.n	801b950 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b922:	f06f 0201 	mvn.w	r2, #1
 801b926:	fb02 fc07 	mul.w	ip, r2, r7
 801b92a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b92e:	096a      	lsrs	r2, r5, #5
 801b930:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b934:	f026 0607 	bic.w	r6, r6, #7
 801b938:	4316      	orrs	r6, r2
 801b93a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b93e:	432e      	orrs	r6, r5
 801b940:	f824 600c 	strh.w	r6, [r4, ip]
 801b944:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b946:	4410      	add	r0, r2
 801b948:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b94a:	3f01      	subs	r7, #1
 801b94c:	4411      	add	r1, r2
 801b94e:	e77f      	b.n	801b850 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b950:	f06f 0601 	mvn.w	r6, #1
 801b954:	437e      	muls	r6, r7
 801b956:	fa1f fa82 	uxth.w	sl, r2
 801b95a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b95e:	9602      	str	r6, [sp, #8]
 801b960:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b964:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b968:	43d2      	mvns	r2, r2
 801b96a:	b2d2      	uxtb	r2, r2
 801b96c:	fb1c fc0a 	smulbb	ip, ip, sl
 801b970:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b974:	fb0e ce02 	mla	lr, lr, r2, ip
 801b978:	b2ed      	uxtb	r5, r5
 801b97a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b97e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b982:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b986:	fa5f f888 	uxtb.w	r8, r8
 801b98a:	fb15 f50a 	smulbb	r5, r5, sl
 801b98e:	fb08 5502 	mla	r5, r8, r2, r5
 801b992:	fa1f fe8e 	uxth.w	lr, lr
 801b996:	fb16 f60a 	smulbb	r6, r6, sl
 801b99a:	b2ad      	uxth	r5, r5
 801b99c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b9a0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b9a4:	f10e 0201 	add.w	r2, lr, #1
 801b9a8:	1c6e      	adds	r6, r5, #1
 801b9aa:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b9ae:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801b9b2:	fa1f fc8c 	uxth.w	ip, ip
 801b9b6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b9ba:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b9be:	ea46 0e0e 	orr.w	lr, r6, lr
 801b9c2:	f10c 0601 	add.w	r6, ip, #1
 801b9c6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b9ca:	0976      	lsrs	r6, r6, #5
 801b9cc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b9d0:	9a02      	ldr	r2, [sp, #8]
 801b9d2:	ea4e 0e06 	orr.w	lr, lr, r6
 801b9d6:	f824 e002 	strh.w	lr, [r4, r2]
 801b9da:	e7b3      	b.n	801b944 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9dc:	f04f 0800 	mov.w	r8, #0
 801b9e0:	eba3 0208 	sub.w	r2, r3, r8
 801b9e4:	2a00      	cmp	r2, #0
 801b9e6:	f77f af36 	ble.w	801b856 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b9ea:	9e00      	ldr	r6, [sp, #0]
 801b9ec:	1402      	asrs	r2, r0, #16
 801b9ee:	140d      	asrs	r5, r1, #16
 801b9f0:	fb06 2505 	mla	r5, r6, r5, r2
 801b9f4:	086a      	lsrs	r2, r5, #1
 801b9f6:	9e01      	ldr	r6, [sp, #4]
 801b9f8:	5cb2      	ldrb	r2, [r6, r2]
 801b9fa:	07ed      	lsls	r5, r5, #31
 801b9fc:	bf54      	ite	pl
 801b9fe:	f002 020f 	andpl.w	r2, r2, #15
 801ba02:	1112      	asrmi	r2, r2, #4
 801ba04:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ba08:	b2d2      	uxtb	r2, r2
 801ba0a:	b1c2      	cbz	r2, 801ba3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ba0c:	9d04      	ldr	r5, [sp, #16]
 801ba0e:	436a      	muls	r2, r5
 801ba10:	1c55      	adds	r5, r2, #1
 801ba12:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ba16:	4d2e      	ldr	r5, [pc, #184]	; (801bad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ba18:	1212      	asrs	r2, r2, #8
 801ba1a:	682e      	ldr	r6, [r5, #0]
 801ba1c:	2aff      	cmp	r2, #255	; 0xff
 801ba1e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ba22:	d113      	bne.n	801ba4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ba24:	0972      	lsrs	r2, r6, #5
 801ba26:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ba2a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ba2e:	f025 0507 	bic.w	r5, r5, #7
 801ba32:	4315      	orrs	r5, r2
 801ba34:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ba38:	4335      	orrs	r5, r6
 801ba3a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ba3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ba40:	4410      	add	r0, r2
 801ba42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ba44:	f108 0801 	add.w	r8, r8, #1
 801ba48:	4411      	add	r1, r2
 801ba4a:	e7c9      	b.n	801b9e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ba4c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ba50:	fa1f fa82 	uxth.w	sl, r2
 801ba54:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ba58:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ba5c:	43d2      	mvns	r2, r2
 801ba5e:	b2d2      	uxtb	r2, r2
 801ba60:	fb17 f70a 	smulbb	r7, r7, sl
 801ba64:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ba68:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ba6c:	b2f6      	uxtb	r6, r6
 801ba6e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ba72:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ba76:	fa5f fe8e 	uxtb.w	lr, lr
 801ba7a:	fb16 f60a 	smulbb	r6, r6, sl
 801ba7e:	fb0e 6602 	mla	r6, lr, r2, r6
 801ba82:	b2ed      	uxtb	r5, r5
 801ba84:	fa1f fc8c 	uxth.w	ip, ip
 801ba88:	fb15 f50a 	smulbb	r5, r5, sl
 801ba8c:	b2b6      	uxth	r6, r6
 801ba8e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ba92:	fb07 5702 	mla	r7, r7, r2, r5
 801ba96:	f10c 0201 	add.w	r2, ip, #1
 801ba9a:	1c75      	adds	r5, r6, #1
 801ba9c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801baa0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801baa4:	b2bf      	uxth	r7, r7
 801baa6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801baaa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801baae:	ea45 0c0c 	orr.w	ip, r5, ip
 801bab2:	1c7d      	adds	r5, r7, #1
 801bab4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801bab8:	096d      	lsrs	r5, r5, #5
 801baba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801babe:	ea4c 0c05 	orr.w	ip, ip, r5
 801bac2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801bac6:	e7ba      	b.n	801ba3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bac8:	b007      	add	sp, #28
 801baca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bace:	bf00      	nop
 801bad0:	200132cc 	.word	0x200132cc

0801bad4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bad4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bad8:	b087      	sub	sp, #28
 801bada:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801bde8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bade:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bae0:	9205      	str	r2, [sp, #20]
 801bae2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bae6:	9101      	str	r1, [sp, #4]
 801bae8:	6841      	ldr	r1, [r0, #4]
 801baea:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801baee:	fb01 2404 	mla	r4, r1, r4, r2
 801baf2:	6802      	ldr	r2, [r0, #0]
 801baf4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801baf8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bafc:	3201      	adds	r2, #1
 801bafe:	f022 0201 	bic.w	r2, r2, #1
 801bb02:	9202      	str	r2, [sp, #8]
 801bb04:	f8db 2000 	ldr.w	r2, [fp]
 801bb08:	9203      	str	r2, [sp, #12]
 801bb0a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bb0e:	9a01      	ldr	r2, [sp, #4]
 801bb10:	2a00      	cmp	r2, #0
 801bb12:	dc03      	bgt.n	801bb1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bb14:	9a05      	ldr	r2, [sp, #20]
 801bb16:	2a00      	cmp	r2, #0
 801bb18:	f340 8162 	ble.w	801bde0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bb1c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bb1e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801bb22:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801bb26:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bb2a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bb2c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bb30:	2b00      	cmp	r3, #0
 801bb32:	dd0e      	ble.n	801bb52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bb34:	1402      	asrs	r2, r0, #16
 801bb36:	d405      	bmi.n	801bb44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bb38:	42ba      	cmp	r2, r7
 801bb3a:	da03      	bge.n	801bb44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bb3c:	140a      	asrs	r2, r1, #16
 801bb3e:	d401      	bmi.n	801bb44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bb40:	42b2      	cmp	r2, r6
 801bb42:	db07      	blt.n	801bb54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bb44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bb46:	4410      	add	r0, r2
 801bb48:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb4a:	3b01      	subs	r3, #1
 801bb4c:	4411      	add	r1, r2
 801bb4e:	3402      	adds	r4, #2
 801bb50:	e7ee      	b.n	801bb30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bb52:	d017      	beq.n	801bb84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bb54:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bb56:	1e5a      	subs	r2, r3, #1
 801bb58:	fb05 0502 	mla	r5, r5, r2, r0
 801bb5c:	142d      	asrs	r5, r5, #16
 801bb5e:	d409      	bmi.n	801bb74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bb60:	42bd      	cmp	r5, r7
 801bb62:	da07      	bge.n	801bb74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bb64:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bb66:	fb05 1202 	mla	r2, r5, r2, r1
 801bb6a:	1412      	asrs	r2, r2, #16
 801bb6c:	d402      	bmi.n	801bb74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bb6e:	42b2      	cmp	r2, r6
 801bb70:	f2c0 80c3 	blt.w	801bcfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801bb74:	2500      	movs	r5, #0
 801bb76:	195a      	adds	r2, r3, r5
 801bb78:	2a00      	cmp	r2, #0
 801bb7a:	dc3f      	bgt.n	801bbfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bb7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bb80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bb84:	9b01      	ldr	r3, [sp, #4]
 801bb86:	2b00      	cmp	r3, #0
 801bb88:	f340 812a 	ble.w	801bde0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bb8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb94:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bb98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bba2:	eeb0 6a62 	vmov.f32	s12, s5
 801bba6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bbaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bbae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bbb2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bbb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bbba:	eeb0 6a43 	vmov.f32	s12, s6
 801bbbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bbc2:	ee12 2a90 	vmov	r2, s5
 801bbc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bbca:	fb92 f3f3 	sdiv	r3, r2, r3
 801bbce:	ee13 2a10 	vmov	r2, s6
 801bbd2:	9313      	str	r3, [sp, #76]	; 0x4c
 801bbd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bbd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801bbda:	9314      	str	r3, [sp, #80]	; 0x50
 801bbdc:	9b01      	ldr	r3, [sp, #4]
 801bbde:	9a05      	ldr	r2, [sp, #20]
 801bbe0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bbe4:	3b01      	subs	r3, #1
 801bbe6:	9301      	str	r3, [sp, #4]
 801bbe8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bbec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bbee:	eeb0 3a67 	vmov.f32	s6, s15
 801bbf2:	bf08      	it	eq
 801bbf4:	4613      	moveq	r3, r2
 801bbf6:	eef0 2a47 	vmov.f32	s5, s14
 801bbfa:	e788      	b.n	801bb0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bbfc:	1406      	asrs	r6, r0, #16
 801bbfe:	d42c      	bmi.n	801bc5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc00:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bc04:	42b2      	cmp	r2, r6
 801bc06:	dd28      	ble.n	801bc5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc08:	140f      	asrs	r7, r1, #16
 801bc0a:	d426      	bmi.n	801bc5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc0c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801bc10:	42ba      	cmp	r2, r7
 801bc12:	dd22      	ble.n	801bc5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc14:	9a02      	ldr	r2, [sp, #8]
 801bc16:	fb07 6602 	mla	r6, r7, r2, r6
 801bc1a:	0872      	lsrs	r2, r6, #1
 801bc1c:	9f03      	ldr	r7, [sp, #12]
 801bc1e:	5cba      	ldrb	r2, [r7, r2]
 801bc20:	07f6      	lsls	r6, r6, #31
 801bc22:	bf54      	ite	pl
 801bc24:	f002 020f 	andpl.w	r2, r2, #15
 801bc28:	1112      	asrmi	r2, r2, #4
 801bc2a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bc2e:	b2d2      	uxtb	r2, r2
 801bc30:	2aff      	cmp	r2, #255	; 0xff
 801bc32:	d118      	bne.n	801bc66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bc34:	f8d8 2000 	ldr.w	r2, [r8]
 801bc38:	f06f 0601 	mvn.w	r6, #1
 801bc3c:	fb06 f705 	mul.w	r7, r6, r5
 801bc40:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bc44:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bc48:	0956      	lsrs	r6, r2, #5
 801bc4a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bc4e:	ea4c 0606 	orr.w	r6, ip, r6
 801bc52:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bc56:	4316      	orrs	r6, r2
 801bc58:	53e6      	strh	r6, [r4, r7]
 801bc5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bc5c:	4410      	add	r0, r2
 801bc5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc60:	3d01      	subs	r5, #1
 801bc62:	4411      	add	r1, r2
 801bc64:	e787      	b.n	801bb76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bc66:	2a00      	cmp	r2, #0
 801bc68:	d0f7      	beq.n	801bc5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc6a:	f06f 0601 	mvn.w	r6, #1
 801bc6e:	436e      	muls	r6, r5
 801bc70:	f8d8 c000 	ldr.w	ip, [r8]
 801bc74:	f834 e006 	ldrh.w	lr, [r4, r6]
 801bc78:	9604      	str	r6, [sp, #16]
 801bc7a:	fa1f f982 	uxth.w	r9, r2
 801bc7e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801bc82:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801bc86:	43d2      	mvns	r2, r2
 801bc88:	b2d2      	uxtb	r2, r2
 801bc8a:	fb16 f609 	smulbb	r6, r6, r9
 801bc8e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bc92:	fb07 6702 	mla	r7, r7, r2, r6
 801bc96:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801bc9a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bc9e:	fa5f fc8c 	uxtb.w	ip, ip
 801bca2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bca6:	fa5f fe8e 	uxtb.w	lr, lr
 801bcaa:	fb1c fc09 	smulbb	ip, ip, r9
 801bcae:	fb0e cc02 	mla	ip, lr, r2, ip
 801bcb2:	b2bf      	uxth	r7, r7
 801bcb4:	fb1a fa09 	smulbb	sl, sl, r9
 801bcb8:	fa1f fc8c 	uxth.w	ip, ip
 801bcbc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bcc0:	fb06 a602 	mla	r6, r6, r2, sl
 801bcc4:	1c7a      	adds	r2, r7, #1
 801bcc6:	f10c 0a01 	add.w	sl, ip, #1
 801bcca:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bcce:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bcd2:	b2b6      	uxth	r6, r6
 801bcd4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bcd8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bcdc:	ea4a 0707 	orr.w	r7, sl, r7
 801bce0:	f106 0a01 	add.w	sl, r6, #1
 801bce4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bce8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bcec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bcf0:	9a04      	ldr	r2, [sp, #16]
 801bcf2:	ea47 070a 	orr.w	r7, r7, sl
 801bcf6:	52a7      	strh	r7, [r4, r2]
 801bcf8:	e7af      	b.n	801bc5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bcfa:	f04f 0e00 	mov.w	lr, #0
 801bcfe:	eba3 020e 	sub.w	r2, r3, lr
 801bd02:	2a00      	cmp	r2, #0
 801bd04:	f77f af3a 	ble.w	801bb7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bd08:	9e02      	ldr	r6, [sp, #8]
 801bd0a:	1402      	asrs	r2, r0, #16
 801bd0c:	140d      	asrs	r5, r1, #16
 801bd0e:	fb06 2505 	mla	r5, r6, r5, r2
 801bd12:	086a      	lsrs	r2, r5, #1
 801bd14:	9e03      	ldr	r6, [sp, #12]
 801bd16:	5cb2      	ldrb	r2, [r6, r2]
 801bd18:	07ed      	lsls	r5, r5, #31
 801bd1a:	bf54      	ite	pl
 801bd1c:	f002 020f 	andpl.w	r2, r2, #15
 801bd20:	1112      	asrmi	r2, r2, #4
 801bd22:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bd26:	b2d2      	uxtb	r2, r2
 801bd28:	2aff      	cmp	r2, #255	; 0xff
 801bd2a:	d115      	bne.n	801bd58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bd2c:	f8d8 5000 	ldr.w	r5, [r8]
 801bd30:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bd34:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bd38:	096a      	lsrs	r2, r5, #5
 801bd3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd3e:	4332      	orrs	r2, r6
 801bd40:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bd44:	432a      	orrs	r2, r5
 801bd46:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bd4a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd4c:	4410      	add	r0, r2
 801bd4e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd50:	f10e 0e01 	add.w	lr, lr, #1
 801bd54:	4411      	add	r1, r2
 801bd56:	e7d2      	b.n	801bcfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bd58:	2a00      	cmp	r2, #0
 801bd5a:	d0f6      	beq.n	801bd4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bd5c:	f8d8 7000 	ldr.w	r7, [r8]
 801bd60:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bd64:	fa1f f982 	uxth.w	r9, r2
 801bd68:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bd6c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801bd70:	43d2      	mvns	r2, r2
 801bd72:	b2d2      	uxtb	r2, r2
 801bd74:	fb15 f509 	smulbb	r5, r5, r9
 801bd78:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bd7c:	fb06 5602 	mla	r6, r6, r2, r5
 801bd80:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801bd84:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bd88:	b2ff      	uxtb	r7, r7
 801bd8a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bd8e:	fa5f fc8c 	uxtb.w	ip, ip
 801bd92:	fb17 f709 	smulbb	r7, r7, r9
 801bd96:	fb0c 7702 	mla	r7, ip, r2, r7
 801bd9a:	b2b6      	uxth	r6, r6
 801bd9c:	fb1a fa09 	smulbb	sl, sl, r9
 801bda0:	b2bf      	uxth	r7, r7
 801bda2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bda6:	fb05 a502 	mla	r5, r5, r2, sl
 801bdaa:	1c72      	adds	r2, r6, #1
 801bdac:	f107 0a01 	add.w	sl, r7, #1
 801bdb0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bdb4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bdb8:	b2ad      	uxth	r5, r5
 801bdba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bdbe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bdc2:	ea4a 0606 	orr.w	r6, sl, r6
 801bdc6:	f105 0a01 	add.w	sl, r5, #1
 801bdca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bdce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bdd2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bdd6:	ea46 060a 	orr.w	r6, r6, sl
 801bdda:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801bdde:	e7b4      	b.n	801bd4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bde0:	b007      	add	sp, #28
 801bde2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bde6:	bf00      	nop
 801bde8:	200132cc 	.word	0x200132cc

0801bdec <_ZN8touchgfx8LCD16bppD1Ev>:
 801bdec:	4770      	bx	lr

0801bdee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801bdee:	4770      	bx	lr

0801bdf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801bdf0:	4770      	bx	lr

0801bdf2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801bdf2:	4770      	bx	lr

0801bdf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801bdf4:	4770      	bx	lr

0801bdf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801bdf6:	4770      	bx	lr

0801bdf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801bdf8:	4770      	bx	lr

0801bdfa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801bdfa:	4770      	bx	lr

0801bdfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bdfc:	4770      	bx	lr

0801bdfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bdfe:	4770      	bx	lr

0801be00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801be00:	4770      	bx	lr

0801be02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801be02:	4770      	bx	lr

0801be04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801be04:	4770      	bx	lr

0801be06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801be06:	4770      	bx	lr

0801be08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801be08:	4770      	bx	lr

0801be0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801be0a:	4770      	bx	lr

0801be0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801be0c:	4770      	bx	lr

0801be0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801be0e:	4770      	bx	lr

0801be10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801be10:	4770      	bx	lr

0801be12 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801be12:	4770      	bx	lr

0801be14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801be14:	4770      	bx	lr

0801be16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801be16:	4770      	bx	lr

0801be18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801be18:	4770      	bx	lr

0801be1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801be1a:	4770      	bx	lr

0801be1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801be1c:	4770      	bx	lr

0801be1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801be1e:	4770      	bx	lr

0801be20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801be20:	4770      	bx	lr

0801be22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801be22:	4770      	bx	lr

0801be24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801be24:	4770      	bx	lr

0801be26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801be26:	4770      	bx	lr

0801be28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801be28:	4770      	bx	lr

0801be2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801be2a:	4770      	bx	lr

0801be2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801be2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801be30:	b088      	sub	sp, #32
 801be32:	ac08      	add	r4, sp, #32
 801be34:	4606      	mov	r6, r0
 801be36:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801be3a:	4620      	mov	r0, r4
 801be3c:	4688      	mov	r8, r1
 801be3e:	4691      	mov	r9, r2
 801be40:	f7fd fc62 	bl	8019708 <_ZNK8touchgfx6Bitmap7getDataEv>
 801be44:	6833      	ldr	r3, [r6, #0]
 801be46:	4605      	mov	r5, r0
 801be48:	4620      	mov	r0, r4
 801be4a:	699f      	ldr	r7, [r3, #24]
 801be4c:	f7fd fb70 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801be50:	4682      	mov	sl, r0
 801be52:	4620      	mov	r0, r4
 801be54:	f7fd fba0 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801be58:	9500      	str	r5, [sp, #0]
 801be5a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801be5e:	464b      	mov	r3, r9
 801be60:	a806      	add	r0, sp, #24
 801be62:	4642      	mov	r2, r8
 801be64:	4631      	mov	r1, r6
 801be66:	47b8      	blx	r7
 801be68:	4628      	mov	r0, r5
 801be6a:	b008      	add	sp, #32
 801be6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801be70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801be70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801be74:	2300      	movs	r3, #0
 801be76:	9300      	str	r3, [sp, #0]
 801be78:	4b3d      	ldr	r3, [pc, #244]	; (801bf70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801be7a:	781b      	ldrb	r3, [r3, #0]
 801be7c:	2b00      	cmp	r3, #0
 801be7e:	d137      	bne.n	801bef0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801be80:	4a3c      	ldr	r2, [pc, #240]	; (801bf74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801be82:	f9b2 2000 	ldrsh.w	r2, [r2]
 801be86:	f8ad 2004 	strh.w	r2, [sp, #4]
 801be8a:	2b00      	cmp	r3, #0
 801be8c:	d132      	bne.n	801bef4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801be8e:	4b3a      	ldr	r3, [pc, #232]	; (801bf78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801be90:	f9b3 3000 	ldrsh.w	r3, [r3]
 801be94:	6808      	ldr	r0, [r1, #0]
 801be96:	6849      	ldr	r1, [r1, #4]
 801be98:	f8ad 3006 	strh.w	r3, [sp, #6]
 801be9c:	ac02      	add	r4, sp, #8
 801be9e:	ab02      	add	r3, sp, #8
 801bea0:	c303      	stmia	r3!, {r0, r1}
 801bea2:	4669      	mov	r1, sp
 801bea4:	4620      	mov	r0, r4
 801bea6:	f7f9 fd83 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801beaa:	4668      	mov	r0, sp
 801beac:	f7f9 fd3c 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801beb0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801beb4:	f8bd 2000 	ldrh.w	r2, [sp]
 801beb8:	4d30      	ldr	r5, [pc, #192]	; (801bf7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801beba:	4413      	add	r3, r2
 801bebc:	f8ad 3008 	strh.w	r3, [sp, #8]
 801bec0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801bec4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801bec8:	6828      	ldr	r0, [r5, #0]
 801beca:	4413      	add	r3, r2
 801becc:	f8ad 300a 	strh.w	r3, [sp, #10]
 801bed0:	6803      	ldr	r3, [r0, #0]
 801bed2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bed4:	4798      	blx	r3
 801bed6:	f010 0f01 	tst.w	r0, #1
 801beda:	462f      	mov	r7, r5
 801bedc:	d00c      	beq.n	801bef8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801bede:	6828      	ldr	r0, [r5, #0]
 801bee0:	6803      	ldr	r3, [r0, #0]
 801bee2:	e894 0006 	ldmia.w	r4, {r1, r2}
 801bee6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bee8:	4798      	blx	r3
 801beea:	b004      	add	sp, #16
 801beec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bef0:	4a21      	ldr	r2, [pc, #132]	; (801bf78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bef2:	e7c6      	b.n	801be82 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801bef4:	4b1f      	ldr	r3, [pc, #124]	; (801bf74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bef6:	e7cb      	b.n	801be90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801bef8:	6838      	ldr	r0, [r7, #0]
 801befa:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801befe:	6803      	ldr	r3, [r0, #0]
 801bf00:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801bf04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bf06:	4798      	blx	r3
 801bf08:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801bf0c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bf10:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801bf14:	fb16 3602 	smlabb	r6, r6, r2, r3
 801bf18:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801bf1c:	6838      	ldr	r0, [r7, #0]
 801bf1e:	6803      	ldr	r3, [r0, #0]
 801bf20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bf22:	4798      	blx	r3
 801bf24:	4a13      	ldr	r2, [pc, #76]	; (801bf74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bf26:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801bf2a:	8813      	ldrh	r3, [r2, #0]
 801bf2c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801bf30:	fb03 1404 	mla	r4, r3, r4, r1
 801bf34:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801bf38:	435d      	muls	r5, r3
 801bf3a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bf3e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801bf42:	4691      	mov	r9, r2
 801bf44:	6838      	ldr	r0, [r7, #0]
 801bf46:	42ac      	cmp	r4, r5
 801bf48:	6803      	ldr	r3, [r0, #0]
 801bf4a:	d20e      	bcs.n	801bf6a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801bf4c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801bf50:	4632      	mov	r2, r6
 801bf52:	4643      	mov	r3, r8
 801bf54:	4621      	mov	r1, r4
 801bf56:	47d0      	blx	sl
 801bf58:	f8b9 3000 	ldrh.w	r3, [r9]
 801bf5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf60:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801bf64:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bf68:	e7ec      	b.n	801bf44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801bf6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bf6c:	4798      	blx	r3
 801bf6e:	e7bc      	b.n	801beea <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801bf70:	200132b4 	.word	0x200132b4
 801bf74:	200132b6 	.word	0x200132b6
 801bf78:	200132b8 	.word	0x200132b8
 801bf7c:	200132bc 	.word	0x200132bc

0801bf80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801bf80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf84:	b08b      	sub	sp, #44	; 0x2c
 801bf86:	460f      	mov	r7, r1
 801bf88:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801bf8c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801bf90:	4616      	mov	r6, r2
 801bf92:	f1bb 0f00 	cmp.w	fp, #0
 801bf96:	d04a      	beq.n	801c02e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801bf98:	6810      	ldr	r0, [r2, #0]
 801bf9a:	6851      	ldr	r1, [r2, #4]
 801bf9c:	ad06      	add	r5, sp, #24
 801bf9e:	c503      	stmia	r5!, {r0, r1}
 801bfa0:	6818      	ldr	r0, [r3, #0]
 801bfa2:	6859      	ldr	r1, [r3, #4]
 801bfa4:	ad08      	add	r5, sp, #32
 801bfa6:	c503      	stmia	r5!, {r0, r1}
 801bfa8:	a806      	add	r0, sp, #24
 801bfaa:	f7f9 fcbd 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bfae:	4631      	mov	r1, r6
 801bfb0:	a808      	add	r0, sp, #32
 801bfb2:	f7f9 fcfd 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bfb6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801bfba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801bfbe:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801bfc2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801bfc6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801bfca:	fb16 2103 	smlabb	r1, r6, r3, r2
 801bfce:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801bfd2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801bfd6:	4f5f      	ldr	r7, [pc, #380]	; (801c154 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801bfd8:	440a      	add	r2, r1
 801bfda:	f8ad 2020 	strh.w	r2, [sp, #32]
 801bfde:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801bfe2:	6838      	ldr	r0, [r7, #0]
 801bfe4:	4413      	add	r3, r2
 801bfe6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801bfea:	6803      	ldr	r3, [r0, #0]
 801bfec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bfee:	4798      	blx	r3
 801bff0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801bff4:	46b9      	mov	r9, r7
 801bff6:	d11d      	bne.n	801c034 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801bff8:	b9fc      	cbnz	r4, 801c03a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801bffa:	f010 0f01 	tst.w	r0, #1
 801bffe:	d01c      	beq.n	801c03a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c000:	f8d9 0000 	ldr.w	r0, [r9]
 801c004:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c008:	6801      	ldr	r1, [r0, #0]
 801c00a:	f8cd b00c 	str.w	fp, [sp, #12]
 801c00e:	2700      	movs	r7, #0
 801c010:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c014:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c018:	9402      	str	r4, [sp, #8]
 801c01a:	b2ad      	uxth	r5, r5
 801c01c:	fa1f f488 	uxth.w	r4, r8
 801c020:	9501      	str	r5, [sp, #4]
 801c022:	9400      	str	r4, [sp, #0]
 801c024:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c026:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c02a:	4631      	mov	r1, r6
 801c02c:	47a0      	blx	r4
 801c02e:	b00b      	add	sp, #44	; 0x2c
 801c030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c034:	f010 0f04 	tst.w	r0, #4
 801c038:	e7e1      	b.n	801bffe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c03a:	f8d9 0000 	ldr.w	r0, [r9]
 801c03e:	6803      	ldr	r3, [r0, #0]
 801c040:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c042:	4798      	blx	r3
 801c044:	4b44      	ldr	r3, [pc, #272]	; (801c158 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c046:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c04a:	881a      	ldrh	r2, [r3, #0]
 801c04c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c050:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c054:	fb02 1404 	mla	r4, r2, r4, r1
 801c058:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c05c:	469a      	mov	sl, r3
 801c05e:	fb05 f502 	mul.w	r5, r5, r2
 801c062:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c066:	d059      	beq.n	801c11c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c068:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c06c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c070:	fa1f f28b 	uxth.w	r2, fp
 801c074:	fa1f f989 	uxth.w	r9, r9
 801c078:	469e      	mov	lr, r3
 801c07a:	42ac      	cmp	r4, r5
 801c07c:	d264      	bcs.n	801c148 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c07e:	eb04 0a07 	add.w	sl, r4, r7
 801c082:	4554      	cmp	r4, sl
 801c084:	d23d      	bcs.n	801c102 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c086:	8821      	ldrh	r1, [r4, #0]
 801c088:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c08c:	1208      	asrs	r0, r1, #8
 801c08e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c092:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c096:	fb10 f009 	smulbb	r0, r0, r9
 801c09a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c09e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c0a2:	00c9      	lsls	r1, r1, #3
 801c0a4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c0a8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c0ac:	10d8      	asrs	r0, r3, #3
 801c0ae:	b2c9      	uxtb	r1, r1
 801c0b0:	00db      	lsls	r3, r3, #3
 801c0b2:	fa1f fc8c 	uxth.w	ip, ip
 801c0b6:	fb1b fb09 	smulbb	fp, fp, r9
 801c0ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c0be:	b2db      	uxtb	r3, r3
 801c0c0:	fb11 f109 	smulbb	r1, r1, r9
 801c0c4:	fb00 b002 	mla	r0, r0, r2, fp
 801c0c8:	fb03 1302 	mla	r3, r3, r2, r1
 801c0cc:	f10c 0b01 	add.w	fp, ip, #1
 801c0d0:	b29b      	uxth	r3, r3
 801c0d2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c0d6:	b280      	uxth	r0, r0
 801c0d8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c0dc:	f103 0c01 	add.w	ip, r3, #1
 801c0e0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c0e4:	1c43      	adds	r3, r0, #1
 801c0e6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c0ea:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c0ee:	0940      	lsrs	r0, r0, #5
 801c0f0:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c0f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c0f8:	ea4c 0c00 	orr.w	ip, ip, r0
 801c0fc:	f824 cb02 	strh.w	ip, [r4], #2
 801c100:	e7bf      	b.n	801c082 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c102:	f8be 3000 	ldrh.w	r3, [lr]
 801c106:	eba3 0308 	sub.w	r3, r3, r8
 801c10a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c10e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c112:	eba3 0308 	sub.w	r3, r3, r8
 801c116:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c11a:	e7ae      	b.n	801c07a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c11c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c120:	f8d9 0000 	ldr.w	r0, [r9]
 801c124:	42ac      	cmp	r4, r5
 801c126:	6803      	ldr	r3, [r0, #0]
 801c128:	d20e      	bcs.n	801c148 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c12a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c12e:	4632      	mov	r2, r6
 801c130:	463b      	mov	r3, r7
 801c132:	4621      	mov	r1, r4
 801c134:	47c0      	blx	r8
 801c136:	f8ba 3000 	ldrh.w	r3, [sl]
 801c13a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c13e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c142:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c146:	e7eb      	b.n	801c120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c148:	4b02      	ldr	r3, [pc, #8]	; (801c154 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c14a:	6818      	ldr	r0, [r3, #0]
 801c14c:	6803      	ldr	r3, [r0, #0]
 801c14e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c150:	4798      	blx	r3
 801c152:	e76c      	b.n	801c02e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c154:	200132bc 	.word	0x200132bc
 801c158:	200132b6 	.word	0x200132b6

0801c15c <_ZN8touchgfx8LCD16bppD0Ev>:
 801c15c:	b510      	push	{r4, lr}
 801c15e:	2184      	movs	r1, #132	; 0x84
 801c160:	4604      	mov	r4, r0
 801c162:	f00d fe4a 	bl	8029dfa <_ZdlPvj>
 801c166:	4620      	mov	r0, r4
 801c168:	bd10      	pop	{r4, pc}

0801c16a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c16a:	b510      	push	{r4, lr}
 801c16c:	2104      	movs	r1, #4
 801c16e:	4604      	mov	r4, r0
 801c170:	f00d fe43 	bl	8029dfa <_ZdlPvj>
 801c174:	4620      	mov	r0, r4
 801c176:	bd10      	pop	{r4, pc}

0801c178 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c178:	b510      	push	{r4, lr}
 801c17a:	2104      	movs	r1, #4
 801c17c:	4604      	mov	r4, r0
 801c17e:	f00d fe3c 	bl	8029dfa <_ZdlPvj>
 801c182:	4620      	mov	r0, r4
 801c184:	bd10      	pop	{r4, pc}

0801c186 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c186:	b510      	push	{r4, lr}
 801c188:	f640 0144 	movw	r1, #2116	; 0x844
 801c18c:	4604      	mov	r4, r0
 801c18e:	f00d fe34 	bl	8029dfa <_ZdlPvj>
 801c192:	4620      	mov	r0, r4
 801c194:	bd10      	pop	{r4, pc}

0801c196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c196:	b510      	push	{r4, lr}
 801c198:	2104      	movs	r1, #4
 801c19a:	4604      	mov	r4, r0
 801c19c:	f00d fe2d 	bl	8029dfa <_ZdlPvj>
 801c1a0:	4620      	mov	r0, r4
 801c1a2:	bd10      	pop	{r4, pc}

0801c1a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c1a4:	b510      	push	{r4, lr}
 801c1a6:	2104      	movs	r1, #4
 801c1a8:	4604      	mov	r4, r0
 801c1aa:	f00d fe26 	bl	8029dfa <_ZdlPvj>
 801c1ae:	4620      	mov	r0, r4
 801c1b0:	bd10      	pop	{r4, pc}

0801c1b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c1b2:	b510      	push	{r4, lr}
 801c1b4:	2104      	movs	r1, #4
 801c1b6:	4604      	mov	r4, r0
 801c1b8:	f00d fe1f 	bl	8029dfa <_ZdlPvj>
 801c1bc:	4620      	mov	r0, r4
 801c1be:	bd10      	pop	{r4, pc}

0801c1c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c1c0:	b510      	push	{r4, lr}
 801c1c2:	2104      	movs	r1, #4
 801c1c4:	4604      	mov	r4, r0
 801c1c6:	f00d fe18 	bl	8029dfa <_ZdlPvj>
 801c1ca:	4620      	mov	r0, r4
 801c1cc:	bd10      	pop	{r4, pc}

0801c1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c1ce:	b510      	push	{r4, lr}
 801c1d0:	2104      	movs	r1, #4
 801c1d2:	4604      	mov	r4, r0
 801c1d4:	f00d fe11 	bl	8029dfa <_ZdlPvj>
 801c1d8:	4620      	mov	r0, r4
 801c1da:	bd10      	pop	{r4, pc}

0801c1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c1dc:	b510      	push	{r4, lr}
 801c1de:	2104      	movs	r1, #4
 801c1e0:	4604      	mov	r4, r0
 801c1e2:	f00d fe0a 	bl	8029dfa <_ZdlPvj>
 801c1e6:	4620      	mov	r0, r4
 801c1e8:	bd10      	pop	{r4, pc}

0801c1ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c1ea:	b510      	push	{r4, lr}
 801c1ec:	2104      	movs	r1, #4
 801c1ee:	4604      	mov	r4, r0
 801c1f0:	f00d fe03 	bl	8029dfa <_ZdlPvj>
 801c1f4:	4620      	mov	r0, r4
 801c1f6:	bd10      	pop	{r4, pc}

0801c1f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c1f8:	b510      	push	{r4, lr}
 801c1fa:	2104      	movs	r1, #4
 801c1fc:	4604      	mov	r4, r0
 801c1fe:	f00d fdfc 	bl	8029dfa <_ZdlPvj>
 801c202:	4620      	mov	r0, r4
 801c204:	bd10      	pop	{r4, pc}

0801c206 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c206:	b510      	push	{r4, lr}
 801c208:	2104      	movs	r1, #4
 801c20a:	4604      	mov	r4, r0
 801c20c:	f00d fdf5 	bl	8029dfa <_ZdlPvj>
 801c210:	4620      	mov	r0, r4
 801c212:	bd10      	pop	{r4, pc}

0801c214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c214:	b510      	push	{r4, lr}
 801c216:	2104      	movs	r1, #4
 801c218:	4604      	mov	r4, r0
 801c21a:	f00d fdee 	bl	8029dfa <_ZdlPvj>
 801c21e:	4620      	mov	r0, r4
 801c220:	bd10      	pop	{r4, pc}

0801c222 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c222:	b510      	push	{r4, lr}
 801c224:	2104      	movs	r1, #4
 801c226:	4604      	mov	r4, r0
 801c228:	f00d fde7 	bl	8029dfa <_ZdlPvj>
 801c22c:	4620      	mov	r0, r4
 801c22e:	bd10      	pop	{r4, pc}

0801c230 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c230:	b510      	push	{r4, lr}
 801c232:	2104      	movs	r1, #4
 801c234:	4604      	mov	r4, r0
 801c236:	f00d fde0 	bl	8029dfa <_ZdlPvj>
 801c23a:	4620      	mov	r0, r4
 801c23c:	bd10      	pop	{r4, pc}

0801c23e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c23e:	b510      	push	{r4, lr}
 801c240:	2104      	movs	r1, #4
 801c242:	4604      	mov	r4, r0
 801c244:	f00d fdd9 	bl	8029dfa <_ZdlPvj>
 801c248:	4620      	mov	r0, r4
 801c24a:	bd10      	pop	{r4, pc}

0801c24c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c24c:	b510      	push	{r4, lr}
 801c24e:	2104      	movs	r1, #4
 801c250:	4604      	mov	r4, r0
 801c252:	f00d fdd2 	bl	8029dfa <_ZdlPvj>
 801c256:	4620      	mov	r0, r4
 801c258:	bd10      	pop	{r4, pc}

0801c25a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c25a:	b510      	push	{r4, lr}
 801c25c:	2104      	movs	r1, #4
 801c25e:	4604      	mov	r4, r0
 801c260:	f00d fdcb 	bl	8029dfa <_ZdlPvj>
 801c264:	4620      	mov	r0, r4
 801c266:	bd10      	pop	{r4, pc}

0801c268 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c268:	b510      	push	{r4, lr}
 801c26a:	2104      	movs	r1, #4
 801c26c:	4604      	mov	r4, r0
 801c26e:	f00d fdc4 	bl	8029dfa <_ZdlPvj>
 801c272:	4620      	mov	r0, r4
 801c274:	bd10      	pop	{r4, pc}

0801c276 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c276:	b510      	push	{r4, lr}
 801c278:	2104      	movs	r1, #4
 801c27a:	4604      	mov	r4, r0
 801c27c:	f00d fdbd 	bl	8029dfa <_ZdlPvj>
 801c280:	4620      	mov	r0, r4
 801c282:	bd10      	pop	{r4, pc}

0801c284 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c284:	b510      	push	{r4, lr}
 801c286:	2104      	movs	r1, #4
 801c288:	4604      	mov	r4, r0
 801c28a:	f00d fdb6 	bl	8029dfa <_ZdlPvj>
 801c28e:	4620      	mov	r0, r4
 801c290:	bd10      	pop	{r4, pc}

0801c292 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c292:	b510      	push	{r4, lr}
 801c294:	2104      	movs	r1, #4
 801c296:	4604      	mov	r4, r0
 801c298:	f00d fdaf 	bl	8029dfa <_ZdlPvj>
 801c29c:	4620      	mov	r0, r4
 801c29e:	bd10      	pop	{r4, pc}

0801c2a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c2a0:	b510      	push	{r4, lr}
 801c2a2:	2104      	movs	r1, #4
 801c2a4:	4604      	mov	r4, r0
 801c2a6:	f00d fda8 	bl	8029dfa <_ZdlPvj>
 801c2aa:	4620      	mov	r0, r4
 801c2ac:	bd10      	pop	{r4, pc}

0801c2ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c2ae:	b510      	push	{r4, lr}
 801c2b0:	2104      	movs	r1, #4
 801c2b2:	4604      	mov	r4, r0
 801c2b4:	f00d fda1 	bl	8029dfa <_ZdlPvj>
 801c2b8:	4620      	mov	r0, r4
 801c2ba:	bd10      	pop	{r4, pc}

0801c2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c2bc:	b510      	push	{r4, lr}
 801c2be:	2104      	movs	r1, #4
 801c2c0:	4604      	mov	r4, r0
 801c2c2:	f00d fd9a 	bl	8029dfa <_ZdlPvj>
 801c2c6:	4620      	mov	r0, r4
 801c2c8:	bd10      	pop	{r4, pc}

0801c2ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c2ca:	b510      	push	{r4, lr}
 801c2cc:	2104      	movs	r1, #4
 801c2ce:	4604      	mov	r4, r0
 801c2d0:	f00d fd93 	bl	8029dfa <_ZdlPvj>
 801c2d4:	4620      	mov	r0, r4
 801c2d6:	bd10      	pop	{r4, pc}

0801c2d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c2d8:	b510      	push	{r4, lr}
 801c2da:	2104      	movs	r1, #4
 801c2dc:	4604      	mov	r4, r0
 801c2de:	f00d fd8c 	bl	8029dfa <_ZdlPvj>
 801c2e2:	4620      	mov	r0, r4
 801c2e4:	bd10      	pop	{r4, pc}

0801c2e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c2e6:	b510      	push	{r4, lr}
 801c2e8:	2104      	movs	r1, #4
 801c2ea:	4604      	mov	r4, r0
 801c2ec:	f00d fd85 	bl	8029dfa <_ZdlPvj>
 801c2f0:	4620      	mov	r0, r4
 801c2f2:	bd10      	pop	{r4, pc}

0801c2f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c2f4:	b510      	push	{r4, lr}
 801c2f6:	2104      	movs	r1, #4
 801c2f8:	4604      	mov	r4, r0
 801c2fa:	f00d fd7e 	bl	8029dfa <_ZdlPvj>
 801c2fe:	4620      	mov	r0, r4
 801c300:	bd10      	pop	{r4, pc}

0801c302 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c302:	b510      	push	{r4, lr}
 801c304:	2104      	movs	r1, #4
 801c306:	4604      	mov	r4, r0
 801c308:	f00d fd77 	bl	8029dfa <_ZdlPvj>
 801c30c:	4620      	mov	r0, r4
 801c30e:	bd10      	pop	{r4, pc}

0801c310 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c310:	b510      	push	{r4, lr}
 801c312:	2104      	movs	r1, #4
 801c314:	4604      	mov	r4, r0
 801c316:	f00d fd70 	bl	8029dfa <_ZdlPvj>
 801c31a:	4620      	mov	r0, r4
 801c31c:	bd10      	pop	{r4, pc}
	...

0801c320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c324:	b08f      	sub	sp, #60	; 0x3c
 801c326:	461c      	mov	r4, r3
 801c328:	9205      	str	r2, [sp, #20]
 801c32a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c32e:	9100      	str	r1, [sp, #0]
 801c330:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c332:	9201      	str	r2, [sp, #4]
 801c334:	2a00      	cmp	r2, #0
 801c336:	f000 8115 	beq.w	801c564 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c33a:	6820      	ldr	r0, [r4, #0]
 801c33c:	6861      	ldr	r1, [r4, #4]
 801c33e:	aa0a      	add	r2, sp, #40	; 0x28
 801c340:	c203      	stmia	r2!, {r0, r1}
 801c342:	6818      	ldr	r0, [r3, #0]
 801c344:	6859      	ldr	r1, [r3, #4]
 801c346:	aa0c      	add	r2, sp, #48	; 0x30
 801c348:	c203      	stmia	r2!, {r0, r1}
 801c34a:	a80a      	add	r0, sp, #40	; 0x28
 801c34c:	f7f9 faec 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c350:	4621      	mov	r1, r4
 801c352:	a80c      	add	r0, sp, #48	; 0x30
 801c354:	f7f9 fb2c 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c358:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c35c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c360:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c364:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c368:	bfde      	ittt	le
 801c36a:	b2b3      	uxthle	r3, r6
 801c36c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c370:	fb92 f3f3 	sdivle	r3, r2, r3
 801c374:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c378:	bfc8      	it	gt
 801c37a:	2301      	movgt	r3, #1
 801c37c:	fb92 f1f3 	sdiv	r1, r2, r3
 801c380:	fa1f fc81 	uxth.w	ip, r1
 801c384:	fb0c 2413 	mls	r4, ip, r3, r2
 801c388:	fb14 f406 	smulbb	r4, r4, r6
 801c38c:	441d      	add	r5, r3
 801c38e:	4404      	add	r4, r0
 801c390:	4661      	mov	r1, ip
 801c392:	3d01      	subs	r5, #1
 801c394:	b2a4      	uxth	r4, r4
 801c396:	fb95 f5f3 	sdiv	r5, r5, r3
 801c39a:	b131      	cbz	r1, 801c3aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c39c:	9b05      	ldr	r3, [sp, #20]
 801c39e:	9900      	ldr	r1, [sp, #0]
 801c3a0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c3a4:	ba1b      	rev	r3, r3
 801c3a6:	4419      	add	r1, r3
 801c3a8:	9100      	str	r1, [sp, #0]
 801c3aa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c3ae:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c3b2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c3b6:	4418      	add	r0, r3
 801c3b8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c3bc:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c3c0:	441a      	add	r2, r3
 801c3c2:	4b6a      	ldr	r3, [pc, #424]	; (801c56c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c3c4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c3c8:	6818      	ldr	r0, [r3, #0]
 801c3ca:	6803      	ldr	r3, [r0, #0]
 801c3cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c3ce:	4798      	blx	r3
 801c3d0:	4967      	ldr	r1, [pc, #412]	; (801c570 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c3d2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c3d6:	880b      	ldrh	r3, [r1, #0]
 801c3d8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c3dc:	9109      	str	r1, [sp, #36]	; 0x24
 801c3de:	fb03 c202 	mla	r2, r3, r2, ip
 801c3e2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c3e6:	4373      	muls	r3, r6
 801c3e8:	b2ad      	uxth	r5, r5
 801c3ea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c3ee:	00ad      	lsls	r5, r5, #2
 801c3f0:	9306      	str	r3, [sp, #24]
 801c3f2:	1d2b      	adds	r3, r5, #4
 801c3f4:	9307      	str	r3, [sp, #28]
 801c3f6:	9b01      	ldr	r3, [sp, #4]
 801c3f8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c3fc:	9103      	str	r1, [sp, #12]
 801c3fe:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c402:	2c00      	cmp	r4, #0
 801c404:	bf0c      	ite	eq
 801c406:	46c6      	moveq	lr, r8
 801c408:	f04f 0e00 	movne.w	lr, #0
 801c40c:	2300      	movs	r3, #0
 801c40e:	b292      	uxth	r2, r2
 801c410:	fa1f fe8e 	uxth.w	lr, lr
 801c414:	9302      	str	r3, [sp, #8]
 801c416:	9204      	str	r2, [sp, #16]
 801c418:	9a06      	ldr	r2, [sp, #24]
 801c41a:	4282      	cmp	r2, r0
 801c41c:	f240 809d 	bls.w	801c55a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c420:	b963      	cbnz	r3, 801c43c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c422:	9b00      	ldr	r3, [sp, #0]
 801c424:	781a      	ldrb	r2, [r3, #0]
 801c426:	0993      	lsrs	r3, r2, #6
 801c428:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c42c:	9202      	str	r2, [sp, #8]
 801c42e:	1e5a      	subs	r2, r3, #1
 801c430:	2a02      	cmp	r2, #2
 801c432:	d815      	bhi.n	801c460 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c434:	9a00      	ldr	r2, [sp, #0]
 801c436:	3201      	adds	r2, #1
 801c438:	9200      	str	r2, [sp, #0]
 801c43a:	b29b      	uxth	r3, r3
 801c43c:	b1b4      	cbz	r4, 801c46c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c43e:	429c      	cmp	r4, r3
 801c440:	bf95      	itete	ls
 801c442:	1b1c      	subls	r4, r3, r4
 801c444:	1ae4      	subhi	r4, r4, r3
 801c446:	fa1f fa84 	uxthls.w	sl, r4
 801c44a:	b2a4      	uxthhi	r4, r4
 801c44c:	bf87      	ittee	hi
 801c44e:	4671      	movhi	r1, lr
 801c450:	f04f 0a00 	movhi.w	sl, #0
 801c454:	fa1f f188 	uxthls.w	r1, r8
 801c458:	2400      	movls	r4, #0
 801c45a:	4653      	mov	r3, sl
 801c45c:	468e      	mov	lr, r1
 801c45e:	e7db      	b.n	801c418 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c460:	9a00      	ldr	r2, [sp, #0]
 801c462:	9b00      	ldr	r3, [sp, #0]
 801c464:	3202      	adds	r2, #2
 801c466:	785b      	ldrb	r3, [r3, #1]
 801c468:	9200      	str	r2, [sp, #0]
 801c46a:	e7e7      	b.n	801c43c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c46c:	2202      	movs	r2, #2
 801c46e:	4615      	mov	r5, r2
 801c470:	9907      	ldr	r1, [sp, #28]
 801c472:	9a02      	ldr	r2, [sp, #8]
 801c474:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c478:	9905      	ldr	r1, [sp, #20]
 801c47a:	4573      	cmp	r3, lr
 801c47c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c480:	9a01      	ldr	r2, [sp, #4]
 801c482:	bf2b      	itete	cs
 801c484:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c488:	ebae 0103 	subcc.w	r1, lr, r3
 801c48c:	46f1      	movcs	r9, lr
 801c48e:	4699      	movcc	r9, r3
 801c490:	bf27      	ittee	cs
 801c492:	fa1f fa8a 	uxthcs.w	sl, sl
 801c496:	4621      	movcs	r1, r4
 801c498:	b289      	uxthcc	r1, r1
 801c49a:	46a2      	movcc	sl, r4
 801c49c:	2aff      	cmp	r2, #255	; 0xff
 801c49e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c4a2:	d105      	bne.n	801c4b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c4a4:	4481      	add	r9, r0
 801c4a6:	4581      	cmp	r9, r0
 801c4a8:	d045      	beq.n	801c536 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c4aa:	f820 cb02 	strh.w	ip, [r0], #2
 801c4ae:	e7fa      	b.n	801c4a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c4b0:	9d03      	ldr	r5, [sp, #12]
 801c4b2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c4b6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c4ba:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c4be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c4c2:	436a      	muls	r2, r5
 801c4c4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c4c8:	fa5f fc8c 	uxtb.w	ip, ip
 801c4cc:	9208      	str	r2, [sp, #32]
 801c4ce:	fb0b fb05 	mul.w	fp, fp, r5
 801c4d2:	fb0c fc05 	mul.w	ip, ip, r5
 801c4d6:	4481      	add	r9, r0
 801c4d8:	4581      	cmp	r9, r0
 801c4da:	d02c      	beq.n	801c536 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c4dc:	8802      	ldrh	r2, [r0, #0]
 801c4de:	9d04      	ldr	r5, [sp, #16]
 801c4e0:	9f04      	ldr	r7, [sp, #16]
 801c4e2:	1216      	asrs	r6, r2, #8
 801c4e4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c4e8:	fb16 f605 	smulbb	r6, r6, r5
 801c4ec:	9d08      	ldr	r5, [sp, #32]
 801c4ee:	442e      	add	r6, r5
 801c4f0:	10d5      	asrs	r5, r2, #3
 801c4f2:	00d2      	lsls	r2, r2, #3
 801c4f4:	b2d2      	uxtb	r2, r2
 801c4f6:	fb12 f207 	smulbb	r2, r2, r7
 801c4fa:	b2b6      	uxth	r6, r6
 801c4fc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c500:	4462      	add	r2, ip
 801c502:	fb15 f507 	smulbb	r5, r5, r7
 801c506:	b292      	uxth	r2, r2
 801c508:	1c77      	adds	r7, r6, #1
 801c50a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c50e:	1c57      	adds	r7, r2, #1
 801c510:	445d      	add	r5, fp
 801c512:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c516:	b2ad      	uxth	r5, r5
 801c518:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c51c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c520:	4316      	orrs	r6, r2
 801c522:	1c6a      	adds	r2, r5, #1
 801c524:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c528:	096d      	lsrs	r5, r5, #5
 801c52a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c52e:	432e      	orrs	r6, r5
 801c530:	f820 6b02 	strh.w	r6, [r0], #2
 801c534:	e7d0      	b.n	801c4d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c536:	4573      	cmp	r3, lr
 801c538:	d38f      	bcc.n	801c45a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c53a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c53e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c540:	fa1f f188 	uxth.w	r1, r8
 801c544:	1a64      	subs	r4, r4, r1
 801c546:	881b      	ldrh	r3, [r3, #0]
 801c548:	b2a4      	uxth	r4, r4
 801c54a:	2c00      	cmp	r4, #0
 801c54c:	eba3 0308 	sub.w	r3, r3, r8
 801c550:	bf18      	it	ne
 801c552:	2100      	movne	r1, #0
 801c554:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c558:	e77f      	b.n	801c45a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c55a:	4b04      	ldr	r3, [pc, #16]	; (801c56c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c55c:	6818      	ldr	r0, [r3, #0]
 801c55e:	6803      	ldr	r3, [r0, #0]
 801c560:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c562:	4798      	blx	r3
 801c564:	b00f      	add	sp, #60	; 0x3c
 801c566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c56a:	bf00      	nop
 801c56c:	200132bc 	.word	0x200132bc
 801c570:	200132b6 	.word	0x200132b6

0801c574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c578:	b09f      	sub	sp, #124	; 0x7c
 801c57a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c57e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c582:	9209      	str	r2, [sp, #36]	; 0x24
 801c584:	461d      	mov	r5, r3
 801c586:	4604      	mov	r4, r0
 801c588:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c58a:	2a00      	cmp	r2, #0
 801c58c:	f000 81eb 	beq.w	801c966 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c590:	6828      	ldr	r0, [r5, #0]
 801c592:	6869      	ldr	r1, [r5, #4]
 801c594:	aa1a      	add	r2, sp, #104	; 0x68
 801c596:	c203      	stmia	r2!, {r0, r1}
 801c598:	6818      	ldr	r0, [r3, #0]
 801c59a:	6859      	ldr	r1, [r3, #4]
 801c59c:	aa1c      	add	r2, sp, #112	; 0x70
 801c59e:	c203      	stmia	r2!, {r0, r1}
 801c5a0:	a81a      	add	r0, sp, #104	; 0x68
 801c5a2:	f7f9 f9c1 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c5a6:	4629      	mov	r1, r5
 801c5a8:	a81c      	add	r0, sp, #112	; 0x70
 801c5aa:	f7f9 fa01 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c5ae:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c5b2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c5b6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c5ba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c5be:	bfd7      	itett	le
 801c5c0:	b29a      	uxthle	r2, r3
 801c5c2:	2201      	movgt	r2, #1
 801c5c4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c5c8:	fb91 f2f2 	sdivle	r2, r1, r2
 801c5cc:	9202      	str	r2, [sp, #8]
 801c5ce:	9802      	ldr	r0, [sp, #8]
 801c5d0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c5d4:	fb92 f0f0 	sdiv	r0, r2, r0
 801c5d8:	b280      	uxth	r0, r0
 801c5da:	9010      	str	r0, [sp, #64]	; 0x40
 801c5dc:	9902      	ldr	r1, [sp, #8]
 801c5de:	9802      	ldr	r0, [sp, #8]
 801c5e0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c5e2:	4488      	add	r8, r1
 801c5e4:	fb05 2510 	mls	r5, r5, r0, r2
 801c5e8:	fb15 f503 	smulbb	r5, r5, r3
 801c5ec:	f108 38ff 	add.w	r8, r8, #4294967295
 801c5f0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c5f4:	fb98 f8f1 	sdiv	r8, r8, r1
 801c5f8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c5fc:	440d      	add	r5, r1
 801c5fe:	4419      	add	r1, r3
 801c600:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c604:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c608:	441a      	add	r2, r3
 801c60a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c60e:	9304      	str	r3, [sp, #16]
 801c610:	4b95      	ldr	r3, [pc, #596]	; (801c868 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c612:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c616:	6818      	ldr	r0, [r3, #0]
 801c618:	6803      	ldr	r3, [r0, #0]
 801c61a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c61c:	4798      	blx	r3
 801c61e:	4b93      	ldr	r3, [pc, #588]	; (801c86c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c620:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c624:	881a      	ldrh	r2, [r3, #0]
 801c626:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c62a:	9318      	str	r3, [sp, #96]	; 0x60
 801c62c:	fb02 7101 	mla	r1, r2, r1, r7
 801c630:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c634:	4356      	muls	r6, r2
 801c636:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c63a:	f108 0801 	add.w	r8, r8, #1
 801c63e:	920a      	str	r2, [sp, #40]	; 0x28
 801c640:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c642:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c646:	930f      	str	r3, [sp, #60]	; 0x3c
 801c648:	fa1f f888 	uxth.w	r8, r8
 801c64c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c650:	f108 0204 	add.w	r2, r8, #4
 801c654:	9211      	str	r2, [sp, #68]	; 0x44
 801c656:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c658:	4b85      	ldr	r3, [pc, #532]	; (801c870 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c65a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c65e:	b2ad      	uxth	r5, r5
 801c660:	9215      	str	r2, [sp, #84]	; 0x54
 801c662:	2d00      	cmp	r5, #0
 801c664:	9a04      	ldr	r2, [sp, #16]
 801c666:	f04f 0100 	mov.w	r1, #0
 801c66a:	bf18      	it	ne
 801c66c:	2200      	movne	r2, #0
 801c66e:	1b1b      	subs	r3, r3, r4
 801c670:	b292      	uxth	r2, r2
 801c672:	910d      	str	r1, [sp, #52]	; 0x34
 801c674:	9319      	str	r3, [sp, #100]	; 0x64
 801c676:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c678:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c67a:	fa11 f383 	uxtah	r3, r1, r3
 801c67e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c680:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c684:	3304      	adds	r3, #4
 801c686:	9306      	str	r3, [sp, #24]
 801c688:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c68a:	4283      	cmp	r3, r0
 801c68c:	f240 8166 	bls.w	801c95c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c690:	9902      	ldr	r1, [sp, #8]
 801c692:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c696:	fbb5 f3f3 	udiv	r3, r5, r3
 801c69a:	1acb      	subs	r3, r1, r3
 801c69c:	b29b      	uxth	r3, r3
 801c69e:	9316      	str	r3, [sp, #88]	; 0x58
 801c6a0:	9b06      	ldr	r3, [sp, #24]
 801c6a2:	9e06      	ldr	r6, [sp, #24]
 801c6a4:	7859      	ldrb	r1, [r3, #1]
 801c6a6:	789b      	ldrb	r3, [r3, #2]
 801c6a8:	7836      	ldrb	r6, [r6, #0]
 801c6aa:	9612      	str	r6, [sp, #72]	; 0x48
 801c6ac:	021b      	lsls	r3, r3, #8
 801c6ae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c6b2:	9906      	ldr	r1, [sp, #24]
 801c6b4:	78c9      	ldrb	r1, [r1, #3]
 801c6b6:	430b      	orrs	r3, r1
 801c6b8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c6ba:	3601      	adds	r6, #1
 801c6bc:	4419      	add	r1, r3
 801c6be:	9605      	str	r6, [sp, #20]
 801c6c0:	1c4e      	adds	r6, r1, #1
 801c6c2:	9603      	str	r6, [sp, #12]
 801c6c4:	7849      	ldrb	r1, [r1, #1]
 801c6c6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c6c8:	0209      	lsls	r1, r1, #8
 801c6ca:	5cf3      	ldrb	r3, [r6, r3]
 801c6cc:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c6d0:	4319      	orrs	r1, r3
 801c6d2:	b28b      	uxth	r3, r1
 801c6d4:	930c      	str	r3, [sp, #48]	; 0x30
 801c6d6:	2300      	movs	r3, #0
 801c6d8:	f04f 0a01 	mov.w	sl, #1
 801c6dc:	9307      	str	r3, [sp, #28]
 801c6de:	469c      	mov	ip, r3
 801c6e0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c6e4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c6e8:	46d3      	mov	fp, sl
 801c6ea:	4657      	mov	r7, sl
 801c6ec:	930e      	str	r3, [sp, #56]	; 0x38
 801c6ee:	2d00      	cmp	r5, #0
 801c6f0:	d07e      	beq.n	801c7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c6f2:	42af      	cmp	r7, r5
 801c6f4:	d26e      	bcs.n	801c7d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c6f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c6f8:	9201      	str	r2, [sp, #4]
 801c6fa:	1bed      	subs	r5, r5, r7
 801c6fc:	4283      	cmp	r3, r0
 801c6fe:	b2ad      	uxth	r5, r5
 801c700:	d802      	bhi.n	801c708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c702:	e073      	b.n	801c7ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c704:	2b00      	cmp	r3, #0
 801c706:	d15f      	bne.n	801c7c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c708:	9b03      	ldr	r3, [sp, #12]
 801c70a:	785b      	ldrb	r3, [r3, #1]
 801c70c:	f1cb 0207 	rsb	r2, fp, #7
 801c710:	4093      	lsls	r3, r2
 801c712:	005b      	lsls	r3, r3, #1
 801c714:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c718:	9b03      	ldr	r3, [sp, #12]
 801c71a:	781b      	ldrb	r3, [r3, #0]
 801c71c:	fa43 f30b 	asr.w	r3, r3, fp
 801c720:	b2db      	uxtb	r3, r3
 801c722:	4313      	orrs	r3, r2
 801c724:	f10b 0201 	add.w	r2, fp, #1
 801c728:	fa5f fb82 	uxtb.w	fp, r2
 801c72c:	9a03      	ldr	r2, [sp, #12]
 801c72e:	f1bb 0f08 	cmp.w	fp, #8
 801c732:	bf15      	itete	ne
 801c734:	3201      	addne	r2, #1
 801c736:	3202      	addeq	r2, #2
 801c738:	9203      	strne	r2, [sp, #12]
 801c73a:	9203      	streq	r2, [sp, #12]
 801c73c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c73e:	b29f      	uxth	r7, r3
 801c740:	bf08      	it	eq
 801c742:	f04f 0b00 	moveq.w	fp, #0
 801c746:	42ba      	cmp	r2, r7
 801c748:	d309      	bcc.n	801c75e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c74a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c74e:	2301      	movs	r3, #1
 801c750:	9a05      	ldr	r2, [sp, #20]
 801c752:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c756:	d30e      	bcc.n	801c776 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c758:	469a      	mov	sl, r3
 801c75a:	2600      	movs	r6, #0
 801c75c:	e035      	b.n	801c7ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c75e:	9b05      	ldr	r3, [sp, #20]
 801c760:	429f      	cmp	r7, r3
 801c762:	d318      	bcc.n	801c796 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c764:	eb04 030a 	add.w	r3, r4, sl
 801c768:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c76c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c770:	f10a 0301 	add.w	r3, sl, #1
 801c774:	b29b      	uxth	r3, r3
 801c776:	9a05      	ldr	r2, [sp, #20]
 801c778:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c77c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c77e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c782:	7116      	strb	r6, [r2, #4]
 801c784:	f10a 0601 	add.w	r6, sl, #1
 801c788:	80d1      	strh	r1, [r2, #6]
 801c78a:	7156      	strb	r6, [r2, #5]
 801c78c:	9a05      	ldr	r2, [sp, #20]
 801c78e:	3201      	adds	r2, #1
 801c790:	b292      	uxth	r2, r2
 801c792:	9205      	str	r2, [sp, #20]
 801c794:	e7e0      	b.n	801c758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801c796:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c79a:	463a      	mov	r2, r7
 801c79c:	795b      	ldrb	r3, [r3, #5]
 801c79e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c7a2:	4426      	add	r6, r4
 801c7a4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c7a6:	eb01 0c06 	add.w	ip, r1, r6
 801c7aa:	f1bc 0f00 	cmp.w	ip, #0
 801c7ae:	dd07      	ble.n	801c7c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801c7b0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c7b4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c7b8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c7bc:	88d2      	ldrh	r2, [r2, #6]
 801c7be:	e7f1      	b.n	801c7a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801c7c0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c7c4:	b29b      	uxth	r3, r3
 801c7c6:	e7c3      	b.n	801c750 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801c7c8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c7ca:	970c      	str	r7, [sp, #48]	; 0x30
 801c7cc:	9a01      	ldr	r2, [sp, #4]
 801c7ce:	46b4      	mov	ip, r6
 801c7d0:	461f      	mov	r7, r3
 801c7d2:	e78c      	b.n	801c6ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801c7d4:	1b7b      	subs	r3, r7, r5
 801c7d6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c7da:	9201      	str	r2, [sp, #4]
 801c7dc:	eb0c 0605 	add.w	r6, ip, r5
 801c7e0:	b29b      	uxth	r3, r3
 801c7e2:	b2b6      	uxth	r6, r6
 801c7e4:	2500      	movs	r5, #0
 801c7e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c7e8:	4282      	cmp	r2, r0
 801c7ea:	d88b      	bhi.n	801c704 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c7ec:	9a01      	ldr	r2, [sp, #4]
 801c7ee:	e74b      	b.n	801c688 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801c7f0:	4297      	cmp	r7, r2
 801c7f2:	d332      	bcc.n	801c85a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801c7f4:	1abb      	subs	r3, r7, r2
 801c7f6:	b29b      	uxth	r3, r3
 801c7f8:	9208      	str	r2, [sp, #32]
 801c7fa:	9501      	str	r5, [sp, #4]
 801c7fc:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c7fe:	29ff      	cmp	r1, #255	; 0xff
 801c800:	9908      	ldr	r1, [sp, #32]
 801c802:	eb0c 0601 	add.w	r6, ip, r1
 801c806:	d135      	bne.n	801c874 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801c808:	f1a0 0e02 	sub.w	lr, r0, #2
 801c80c:	b2b6      	uxth	r6, r6
 801c80e:	45b4      	cmp	ip, r6
 801c810:	f040 808c 	bne.w	801c92c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801c814:	9908      	ldr	r1, [sp, #32]
 801c816:	4297      	cmp	r7, r2
 801c818:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c81c:	d3e2      	bcc.n	801c7e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801c81e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c820:	9904      	ldr	r1, [sp, #16]
 801c822:	8812      	ldrh	r2, [r2, #0]
 801c824:	1a52      	subs	r2, r2, r1
 801c826:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c82a:	9a07      	ldr	r2, [sp, #28]
 801c82c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c82e:	3201      	adds	r2, #1
 801c830:	428a      	cmp	r2, r1
 801c832:	9207      	str	r2, [sp, #28]
 801c834:	f040 8087 	bne.w	801c946 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c838:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c83c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801c840:	9b04      	ldr	r3, [sp, #16]
 801c842:	1bed      	subs	r5, r5, r7
 801c844:	b2ad      	uxth	r5, r5
 801c846:	2d00      	cmp	r5, #0
 801c848:	bf08      	it	eq
 801c84a:	461a      	moveq	r2, r3
 801c84c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c84e:	bf18      	it	ne
 801c850:	2200      	movne	r2, #0
 801c852:	3301      	adds	r3, #1
 801c854:	930d      	str	r3, [sp, #52]	; 0x34
 801c856:	b292      	uxth	r2, r2
 801c858:	e70d      	b.n	801c676 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801c85a:	1bd1      	subs	r1, r2, r7
 801c85c:	b28b      	uxth	r3, r1
 801c85e:	9301      	str	r3, [sp, #4]
 801c860:	9708      	str	r7, [sp, #32]
 801c862:	462b      	mov	r3, r5
 801c864:	e7ca      	b.n	801c7fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801c866:	bf00      	nop
 801c868:	200132bc 	.word	0x200132bc
 801c86c:	200132b6 	.word	0x200132b6
 801c870:	fffff7fb 	.word	0xfffff7fb
 801c874:	b2b6      	uxth	r6, r6
 801c876:	900b      	str	r0, [sp, #44]	; 0x2c
 801c878:	45b4      	cmp	ip, r6
 801c87a:	d0cb      	beq.n	801c814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801c87c:	f10c 0101 	add.w	r1, ip, #1
 801c880:	44a4      	add	ip, r4
 801c882:	9117      	str	r1, [sp, #92]	; 0x5c
 801c884:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c888:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c88a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c88e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c890:	f8b1 c000 	ldrh.w	ip, [r1]
 801c894:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c896:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c89a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c89e:	fb1e fe01 	smulbb	lr, lr, r1
 801c8a2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c8a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c8a8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c8ac:	fb08 e801 	mla	r8, r8, r1, lr
 801c8b0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c8b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c8b6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c8ba:	fb19 f901 	smulbb	r9, r9, r1
 801c8be:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c8c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c8c4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c8c8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c8cc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c8d0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c8d2:	fa5f fc8c 	uxtb.w	ip, ip
 801c8d6:	fb1c fc01 	smulbb	ip, ip, r1
 801c8da:	00ed      	lsls	r5, r5, #3
 801c8dc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c8de:	b2ed      	uxtb	r5, r5
 801c8e0:	fb05 c501 	mla	r5, r5, r1, ip
 801c8e4:	fa1f f888 	uxth.w	r8, r8
 801c8e8:	fa1f fe8e 	uxth.w	lr, lr
 801c8ec:	b2ad      	uxth	r5, r5
 801c8ee:	f108 0c01 	add.w	ip, r8, #1
 801c8f2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c8f6:	f10e 0901 	add.w	r9, lr, #1
 801c8fa:	f105 0c01 	add.w	ip, r5, #1
 801c8fe:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c902:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c906:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c90a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c90e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c912:	ea4c 0808 	orr.w	r8, ip, r8
 801c916:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c918:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801c91c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c920:	ea48 0809 	orr.w	r8, r8, r9
 801c924:	f821 8b02 	strh.w	r8, [r1], #2
 801c928:	910b      	str	r1, [sp, #44]	; 0x2c
 801c92a:	e7a5      	b.n	801c878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c92c:	f10c 0801 	add.w	r8, ip, #1
 801c930:	44a4      	add	ip, r4
 801c932:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c934:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c938:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c93c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c940:	fa1f fc88 	uxth.w	ip, r8
 801c944:	e763      	b.n	801c80e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801c946:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c94a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c94e:	1aad      	subs	r5, r5, r2
 801c950:	b2ad      	uxth	r5, r5
 801c952:	2d00      	cmp	r5, #0
 801c954:	bf18      	it	ne
 801c956:	2200      	movne	r2, #0
 801c958:	9201      	str	r2, [sp, #4]
 801c95a:	e744      	b.n	801c7e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c95c:	4b03      	ldr	r3, [pc, #12]	; (801c96c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c95e:	6818      	ldr	r0, [r3, #0]
 801c960:	6803      	ldr	r3, [r0, #0]
 801c962:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c964:	4798      	blx	r3
 801c966:	b01f      	add	sp, #124	; 0x7c
 801c968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c96c:	200132bc 	.word	0x200132bc

0801c970 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c974:	b08f      	sub	sp, #60	; 0x3c
 801c976:	461c      	mov	r4, r3
 801c978:	9203      	str	r2, [sp, #12]
 801c97a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c97e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c980:	9202      	str	r2, [sp, #8]
 801c982:	460f      	mov	r7, r1
 801c984:	2a00      	cmp	r2, #0
 801c986:	f000 8128 	beq.w	801cbda <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801c98a:	6820      	ldr	r0, [r4, #0]
 801c98c:	6861      	ldr	r1, [r4, #4]
 801c98e:	aa0a      	add	r2, sp, #40	; 0x28
 801c990:	c203      	stmia	r2!, {r0, r1}
 801c992:	6818      	ldr	r0, [r3, #0]
 801c994:	6859      	ldr	r1, [r3, #4]
 801c996:	aa0c      	add	r2, sp, #48	; 0x30
 801c998:	c203      	stmia	r2!, {r0, r1}
 801c99a:	a80a      	add	r0, sp, #40	; 0x28
 801c99c:	f7f8 ffc4 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9a0:	4621      	mov	r1, r4
 801c9a2:	a80c      	add	r0, sp, #48	; 0x30
 801c9a4:	f7f9 f804 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c9a8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c9ac:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c9b0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c9b4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c9b8:	bfde      	ittt	le
 801c9ba:	b2b3      	uxthle	r3, r6
 801c9bc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c9c0:	fb92 f3f3 	sdivle	r3, r2, r3
 801c9c4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c9c8:	bfc8      	it	gt
 801c9ca:	2301      	movgt	r3, #1
 801c9cc:	fb92 f1f3 	sdiv	r1, r2, r3
 801c9d0:	fa1f fc81 	uxth.w	ip, r1
 801c9d4:	fb0c 2413 	mls	r4, ip, r3, r2
 801c9d8:	fb14 f406 	smulbb	r4, r4, r6
 801c9dc:	441d      	add	r5, r3
 801c9de:	4404      	add	r4, r0
 801c9e0:	4661      	mov	r1, ip
 801c9e2:	3d01      	subs	r5, #1
 801c9e4:	b2a4      	uxth	r4, r4
 801c9e6:	fb95 f5f3 	sdiv	r5, r5, r3
 801c9ea:	b121      	cbz	r1, 801c9f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c9ec:	9b03      	ldr	r3, [sp, #12]
 801c9ee:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c9f2:	ba1b      	rev	r3, r3
 801c9f4:	441f      	add	r7, r3
 801c9f6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c9fa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c9fe:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ca02:	4418      	add	r0, r3
 801ca04:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ca08:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ca0c:	441a      	add	r2, r3
 801ca0e:	4b74      	ldr	r3, [pc, #464]	; (801cbe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ca10:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ca14:	6818      	ldr	r0, [r3, #0]
 801ca16:	6803      	ldr	r3, [r0, #0]
 801ca18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca1a:	4798      	blx	r3
 801ca1c:	4a71      	ldr	r2, [pc, #452]	; (801cbe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801ca1e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801ca22:	8813      	ldrh	r3, [r2, #0]
 801ca24:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ca28:	9209      	str	r2, [sp, #36]	; 0x24
 801ca2a:	fb03 c101 	mla	r1, r3, r1, ip
 801ca2e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ca32:	4373      	muls	r3, r6
 801ca34:	b2ad      	uxth	r5, r5
 801ca36:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ca3a:	00ad      	lsls	r5, r5, #2
 801ca3c:	2c00      	cmp	r4, #0
 801ca3e:	9304      	str	r3, [sp, #16]
 801ca40:	f105 0304 	add.w	r3, r5, #4
 801ca44:	9305      	str	r3, [sp, #20]
 801ca46:	bf0c      	ite	eq
 801ca48:	46c8      	moveq	r8, r9
 801ca4a:	f04f 0800 	movne.w	r8, #0
 801ca4e:	2300      	movs	r3, #0
 801ca50:	fa1f f888 	uxth.w	r8, r8
 801ca54:	9301      	str	r3, [sp, #4]
 801ca56:	9a04      	ldr	r2, [sp, #16]
 801ca58:	4282      	cmp	r2, r0
 801ca5a:	f240 80b9 	bls.w	801cbd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801ca5e:	b95b      	cbnz	r3, 801ca78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801ca60:	783a      	ldrb	r2, [r7, #0]
 801ca62:	0993      	lsrs	r3, r2, #6
 801ca64:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801ca68:	9201      	str	r2, [sp, #4]
 801ca6a:	1e5a      	subs	r2, r3, #1
 801ca6c:	2a02      	cmp	r2, #2
 801ca6e:	bf8d      	iteet	hi
 801ca70:	787b      	ldrbhi	r3, [r7, #1]
 801ca72:	3701      	addls	r7, #1
 801ca74:	b29b      	uxthls	r3, r3
 801ca76:	3702      	addhi	r7, #2
 801ca78:	b184      	cbz	r4, 801ca9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801ca7a:	429c      	cmp	r4, r3
 801ca7c:	bf95      	itete	ls
 801ca7e:	1b1c      	subls	r4, r3, r4
 801ca80:	1ae4      	subhi	r4, r4, r3
 801ca82:	fa1f fa84 	uxthls.w	sl, r4
 801ca86:	b2a4      	uxthhi	r4, r4
 801ca88:	bf87      	ittee	hi
 801ca8a:	46c4      	movhi	ip, r8
 801ca8c:	f04f 0a00 	movhi.w	sl, #0
 801ca90:	fa1f fc89 	uxthls.w	ip, r9
 801ca94:	2400      	movls	r4, #0
 801ca96:	4653      	mov	r3, sl
 801ca98:	46e0      	mov	r8, ip
 801ca9a:	e7dc      	b.n	801ca56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801ca9c:	2204      	movs	r2, #4
 801ca9e:	4615      	mov	r5, r2
 801caa0:	9905      	ldr	r1, [sp, #20]
 801caa2:	9a01      	ldr	r2, [sp, #4]
 801caa4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801caa8:	9903      	ldr	r1, [sp, #12]
 801caaa:	588a      	ldr	r2, [r1, r2]
 801caac:	4543      	cmp	r3, r8
 801caae:	bf27      	ittee	cs
 801cab0:	eba3 0a08 	subcs.w	sl, r3, r8
 801cab4:	46c6      	movcs	lr, r8
 801cab6:	eba8 0c03 	subcc.w	ip, r8, r3
 801caba:	469e      	movcc	lr, r3
 801cabc:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801cac0:	bf27      	ittee	cs
 801cac2:	fa1f fa8a 	uxthcs.w	sl, sl
 801cac6:	46a4      	movcs	ip, r4
 801cac8:	fa1f fc8c 	uxthcc.w	ip, ip
 801cacc:	46a2      	movcc	sl, r4
 801cace:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801cad2:	2900      	cmp	r1, #0
 801cad4:	d066      	beq.n	801cba4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801cad6:	29ff      	cmp	r1, #255	; 0xff
 801cad8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801cadc:	d114      	bne.n	801cb08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cade:	9d02      	ldr	r5, [sp, #8]
 801cae0:	2dff      	cmp	r5, #255	; 0xff
 801cae2:	d111      	bne.n	801cb08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cae4:	0951      	lsrs	r1, r2, #5
 801cae6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801caea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801caee:	f026 0607 	bic.w	r6, r6, #7
 801caf2:	430e      	orrs	r6, r1
 801caf4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801caf8:	4316      	orrs	r6, r2
 801cafa:	b2b6      	uxth	r6, r6
 801cafc:	4486      	add	lr, r0
 801cafe:	4586      	cmp	lr, r0
 801cb00:	d051      	beq.n	801cba6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cb02:	f820 6b02 	strh.w	r6, [r0], #2
 801cb06:	e7fa      	b.n	801cafe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801cb08:	9d02      	ldr	r5, [sp, #8]
 801cb0a:	4369      	muls	r1, r5
 801cb0c:	1c4d      	adds	r5, r1, #1
 801cb0e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801cb12:	122d      	asrs	r5, r5, #8
 801cb14:	ea6f 0b05 	mvn.w	fp, r5
 801cb18:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801cb1c:	b2ad      	uxth	r5, r5
 801cb1e:	b2f6      	uxtb	r6, r6
 801cb20:	b2d2      	uxtb	r2, r2
 801cb22:	fb11 f105 	smulbb	r1, r1, r5
 801cb26:	fb16 f605 	smulbb	r6, r6, r5
 801cb2a:	fb12 f205 	smulbb	r2, r2, r5
 801cb2e:	b289      	uxth	r1, r1
 801cb30:	b2b6      	uxth	r6, r6
 801cb32:	b292      	uxth	r2, r2
 801cb34:	9106      	str	r1, [sp, #24]
 801cb36:	9607      	str	r6, [sp, #28]
 801cb38:	9208      	str	r2, [sp, #32]
 801cb3a:	4486      	add	lr, r0
 801cb3c:	fa5f fb8b 	uxtb.w	fp, fp
 801cb40:	4586      	cmp	lr, r0
 801cb42:	d030      	beq.n	801cba6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cb44:	8802      	ldrh	r2, [r0, #0]
 801cb46:	9906      	ldr	r1, [sp, #24]
 801cb48:	1216      	asrs	r6, r2, #8
 801cb4a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cb4e:	10d5      	asrs	r5, r2, #3
 801cb50:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cb54:	fb06 160b 	mla	r6, r6, fp, r1
 801cb58:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cb5c:	9907      	ldr	r1, [sp, #28]
 801cb5e:	00d2      	lsls	r2, r2, #3
 801cb60:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cb64:	fb05 150b 	mla	r5, r5, fp, r1
 801cb68:	b2d2      	uxtb	r2, r2
 801cb6a:	9908      	ldr	r1, [sp, #32]
 801cb6c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cb70:	b2b6      	uxth	r6, r6
 801cb72:	fb02 120b 	mla	r2, r2, fp, r1
 801cb76:	b292      	uxth	r2, r2
 801cb78:	1c71      	adds	r1, r6, #1
 801cb7a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801cb7e:	1c51      	adds	r1, r2, #1
 801cb80:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cb84:	b2ad      	uxth	r5, r5
 801cb86:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cb8a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cb8e:	4316      	orrs	r6, r2
 801cb90:	1c6a      	adds	r2, r5, #1
 801cb92:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801cb96:	096d      	lsrs	r5, r5, #5
 801cb98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb9c:	432e      	orrs	r6, r5
 801cb9e:	f820 6b02 	strh.w	r6, [r0], #2
 801cba2:	e7cd      	b.n	801cb40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801cba4:	4470      	add	r0, lr
 801cba6:	4543      	cmp	r3, r8
 801cba8:	f4ff af75 	bcc.w	801ca96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cbac:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801cbb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbb2:	fa1f fc89 	uxth.w	ip, r9
 801cbb6:	eba4 040c 	sub.w	r4, r4, ip
 801cbba:	881b      	ldrh	r3, [r3, #0]
 801cbbc:	b2a4      	uxth	r4, r4
 801cbbe:	2c00      	cmp	r4, #0
 801cbc0:	eba3 0309 	sub.w	r3, r3, r9
 801cbc4:	bf18      	it	ne
 801cbc6:	f04f 0c00 	movne.w	ip, #0
 801cbca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cbce:	e762      	b.n	801ca96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cbd0:	4b03      	ldr	r3, [pc, #12]	; (801cbe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cbd2:	6818      	ldr	r0, [r3, #0]
 801cbd4:	6803      	ldr	r3, [r0, #0]
 801cbd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cbd8:	4798      	blx	r3
 801cbda:	b00f      	add	sp, #60	; 0x3c
 801cbdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cbe0:	200132bc 	.word	0x200132bc
 801cbe4:	200132b6 	.word	0x200132b6

0801cbe8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801cbe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbec:	b093      	sub	sp, #76	; 0x4c
 801cbee:	461c      	mov	r4, r3
 801cbf0:	9205      	str	r2, [sp, #20]
 801cbf2:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801cbf6:	9101      	str	r1, [sp, #4]
 801cbf8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cbfa:	9202      	str	r2, [sp, #8]
 801cbfc:	2a00      	cmp	r2, #0
 801cbfe:	f000 812c 	beq.w	801ce5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801cc02:	6820      	ldr	r0, [r4, #0]
 801cc04:	6861      	ldr	r1, [r4, #4]
 801cc06:	aa0e      	add	r2, sp, #56	; 0x38
 801cc08:	c203      	stmia	r2!, {r0, r1}
 801cc0a:	6818      	ldr	r0, [r3, #0]
 801cc0c:	6859      	ldr	r1, [r3, #4]
 801cc0e:	aa10      	add	r2, sp, #64	; 0x40
 801cc10:	c203      	stmia	r2!, {r0, r1}
 801cc12:	a80e      	add	r0, sp, #56	; 0x38
 801cc14:	f7f8 fe88 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc18:	4621      	mov	r1, r4
 801cc1a:	a810      	add	r0, sp, #64	; 0x40
 801cc1c:	f7f8 fec8 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc20:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801cc24:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801cc28:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801cc2c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cc30:	bfde      	ittt	le
 801cc32:	b2b3      	uxthle	r3, r6
 801cc34:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cc38:	fb92 f3f3 	sdivle	r3, r2, r3
 801cc3c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cc40:	bfc8      	it	gt
 801cc42:	2301      	movgt	r3, #1
 801cc44:	fb92 f1f3 	sdiv	r1, r2, r3
 801cc48:	fa1f fc81 	uxth.w	ip, r1
 801cc4c:	fb0c 2413 	mls	r4, ip, r3, r2
 801cc50:	fb14 f406 	smulbb	r4, r4, r6
 801cc54:	441d      	add	r5, r3
 801cc56:	4404      	add	r4, r0
 801cc58:	4661      	mov	r1, ip
 801cc5a:	3d01      	subs	r5, #1
 801cc5c:	b2a4      	uxth	r4, r4
 801cc5e:	fb95 f5f3 	sdiv	r5, r5, r3
 801cc62:	b131      	cbz	r1, 801cc72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801cc64:	9b05      	ldr	r3, [sp, #20]
 801cc66:	9901      	ldr	r1, [sp, #4]
 801cc68:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cc6c:	ba1b      	rev	r3, r3
 801cc6e:	4419      	add	r1, r3
 801cc70:	9101      	str	r1, [sp, #4]
 801cc72:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cc76:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801cc7a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801cc7e:	4418      	add	r0, r3
 801cc80:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801cc84:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801cc88:	441a      	add	r2, r3
 801cc8a:	4b75      	ldr	r3, [pc, #468]	; (801ce60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cc8c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801cc90:	6818      	ldr	r0, [r3, #0]
 801cc92:	6803      	ldr	r3, [r0, #0]
 801cc94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cc96:	4798      	blx	r3
 801cc98:	4972      	ldr	r1, [pc, #456]	; (801ce64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801cc9a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cc9e:	880b      	ldrh	r3, [r1, #0]
 801cca0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cca4:	910d      	str	r1, [sp, #52]	; 0x34
 801cca6:	fb03 c202 	mla	r2, r3, r2, ip
 801ccaa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ccae:	4373      	muls	r3, r6
 801ccb0:	b2ad      	uxth	r5, r5
 801ccb2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ccb6:	00ad      	lsls	r5, r5, #2
 801ccb8:	9308      	str	r3, [sp, #32]
 801ccba:	1d2b      	adds	r3, r5, #4
 801ccbc:	9309      	str	r3, [sp, #36]	; 0x24
 801ccbe:	9b02      	ldr	r3, [sp, #8]
 801ccc0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ccc4:	9106      	str	r1, [sp, #24]
 801ccc6:	43da      	mvns	r2, r3
 801ccc8:	2c00      	cmp	r4, #0
 801ccca:	bf0c      	ite	eq
 801cccc:	46dc      	moveq	ip, fp
 801ccce:	f04f 0c00 	movne.w	ip, #0
 801ccd2:	2300      	movs	r3, #0
 801ccd4:	b2d2      	uxtb	r2, r2
 801ccd6:	fa1f fc8c 	uxth.w	ip, ip
 801ccda:	9303      	str	r3, [sp, #12]
 801ccdc:	9207      	str	r2, [sp, #28]
 801ccde:	9a08      	ldr	r2, [sp, #32]
 801cce0:	4282      	cmp	r2, r0
 801cce2:	f240 80b5 	bls.w	801ce50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cce6:	b963      	cbnz	r3, 801cd02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cce8:	9b01      	ldr	r3, [sp, #4]
 801ccea:	781a      	ldrb	r2, [r3, #0]
 801ccec:	0993      	lsrs	r3, r2, #6
 801ccee:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801ccf2:	9203      	str	r2, [sp, #12]
 801ccf4:	1e5a      	subs	r2, r3, #1
 801ccf6:	2a02      	cmp	r2, #2
 801ccf8:	d815      	bhi.n	801cd26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801ccfa:	9a01      	ldr	r2, [sp, #4]
 801ccfc:	3201      	adds	r2, #1
 801ccfe:	9201      	str	r2, [sp, #4]
 801cd00:	b29b      	uxth	r3, r3
 801cd02:	b1b4      	cbz	r4, 801cd32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cd04:	429c      	cmp	r4, r3
 801cd06:	bf95      	itete	ls
 801cd08:	1b1c      	subls	r4, r3, r4
 801cd0a:	1ae4      	subhi	r4, r4, r3
 801cd0c:	fa1f f884 	uxthls.w	r8, r4
 801cd10:	b2a4      	uxthhi	r4, r4
 801cd12:	bf87      	ittee	hi
 801cd14:	4666      	movhi	r6, ip
 801cd16:	f04f 0800 	movhi.w	r8, #0
 801cd1a:	fa1f f68b 	uxthls.w	r6, fp
 801cd1e:	2400      	movls	r4, #0
 801cd20:	4643      	mov	r3, r8
 801cd22:	46b4      	mov	ip, r6
 801cd24:	e7db      	b.n	801ccde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801cd26:	9a01      	ldr	r2, [sp, #4]
 801cd28:	9b01      	ldr	r3, [sp, #4]
 801cd2a:	3202      	adds	r2, #2
 801cd2c:	785b      	ldrb	r3, [r3, #1]
 801cd2e:	9201      	str	r2, [sp, #4]
 801cd30:	e7e7      	b.n	801cd02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cd32:	2203      	movs	r2, #3
 801cd34:	4615      	mov	r5, r2
 801cd36:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cd38:	9a03      	ldr	r2, [sp, #12]
 801cd3a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cd3e:	9905      	ldr	r1, [sp, #20]
 801cd40:	4563      	cmp	r3, ip
 801cd42:	eb01 0502 	add.w	r5, r1, r2
 801cd46:	9902      	ldr	r1, [sp, #8]
 801cd48:	bf29      	itett	cs
 801cd4a:	eba3 080c 	subcs.w	r8, r3, ip
 801cd4e:	ebac 0603 	subcc.w	r6, ip, r3
 801cd52:	fa1f f888 	uxthcs.w	r8, r8
 801cd56:	46e1      	movcs	r9, ip
 801cd58:	bf2f      	iteee	cs
 801cd5a:	4626      	movcs	r6, r4
 801cd5c:	b2b6      	uxthcc	r6, r6
 801cd5e:	4699      	movcc	r9, r3
 801cd60:	46a0      	movcc	r8, r4
 801cd62:	29ff      	cmp	r1, #255	; 0xff
 801cd64:	d04a      	beq.n	801cdfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801cd66:	9f06      	ldr	r7, [sp, #24]
 801cd68:	78a9      	ldrb	r1, [r5, #2]
 801cd6a:	9004      	str	r0, [sp, #16]
 801cd6c:	4379      	muls	r1, r7
 801cd6e:	910a      	str	r1, [sp, #40]	; 0x28
 801cd70:	7869      	ldrb	r1, [r5, #1]
 801cd72:	4379      	muls	r1, r7
 801cd74:	910b      	str	r1, [sp, #44]	; 0x2c
 801cd76:	9905      	ldr	r1, [sp, #20]
 801cd78:	5c8a      	ldrb	r2, [r1, r2]
 801cd7a:	437a      	muls	r2, r7
 801cd7c:	920c      	str	r2, [sp, #48]	; 0x30
 801cd7e:	46ca      	mov	sl, r9
 801cd80:	f1ba 0f00 	cmp.w	sl, #0
 801cd84:	d03d      	beq.n	801ce02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801cd86:	9a04      	ldr	r2, [sp, #16]
 801cd88:	9f07      	ldr	r7, [sp, #28]
 801cd8a:	8812      	ldrh	r2, [r2, #0]
 801cd8c:	1215      	asrs	r5, r2, #8
 801cd8e:	46be      	mov	lr, r7
 801cd90:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cd94:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cd96:	10d1      	asrs	r1, r2, #3
 801cd98:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cd9c:	fb05 750e 	mla	r5, r5, lr, r7
 801cda0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cda4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801cda6:	00d2      	lsls	r2, r2, #3
 801cda8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cdac:	fb01 710e 	mla	r1, r1, lr, r7
 801cdb0:	b2d2      	uxtb	r2, r2
 801cdb2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cdb4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cdb8:	b2ad      	uxth	r5, r5
 801cdba:	fb02 720e 	mla	r2, r2, lr, r7
 801cdbe:	b292      	uxth	r2, r2
 801cdc0:	f105 0e01 	add.w	lr, r5, #1
 801cdc4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801cdc8:	f102 0e01 	add.w	lr, r2, #1
 801cdcc:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801cdd0:	b289      	uxth	r1, r1
 801cdd2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cdd6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cdda:	4315      	orrs	r5, r2
 801cddc:	1c4a      	adds	r2, r1, #1
 801cdde:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cde2:	0949      	lsrs	r1, r1, #5
 801cde4:	9a04      	ldr	r2, [sp, #16]
 801cde6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cdea:	430d      	orrs	r5, r1
 801cdec:	f822 5b02 	strh.w	r5, [r2], #2
 801cdf0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801cdf4:	9204      	str	r2, [sp, #16]
 801cdf6:	fa1f fa8a 	uxth.w	sl, sl
 801cdfa:	e7c1      	b.n	801cd80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801cdfc:	4649      	mov	r1, r9
 801cdfe:	4686      	mov	lr, r0
 801ce00:	b999      	cbnz	r1, 801ce2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801ce02:	4563      	cmp	r3, ip
 801ce04:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801ce08:	d38a      	bcc.n	801cd20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ce0a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801ce0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ce10:	fa1f f68b 	uxth.w	r6, fp
 801ce14:	1ba4      	subs	r4, r4, r6
 801ce16:	881b      	ldrh	r3, [r3, #0]
 801ce18:	b2a4      	uxth	r4, r4
 801ce1a:	2c00      	cmp	r4, #0
 801ce1c:	eba3 030b 	sub.w	r3, r3, fp
 801ce20:	bf18      	it	ne
 801ce22:	2600      	movne	r6, #0
 801ce24:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce28:	e77a      	b.n	801cd20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ce2a:	78aa      	ldrb	r2, [r5, #2]
 801ce2c:	4f0e      	ldr	r7, [pc, #56]	; (801ce68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801ce2e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801ce32:	786a      	ldrb	r2, [r5, #1]
 801ce34:	00d2      	lsls	r2, r2, #3
 801ce36:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce3a:	ea4a 0202 	orr.w	r2, sl, r2
 801ce3e:	f895 a000 	ldrb.w	sl, [r5]
 801ce42:	3901      	subs	r1, #1
 801ce44:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801ce48:	f82e 2b02 	strh.w	r2, [lr], #2
 801ce4c:	b289      	uxth	r1, r1
 801ce4e:	e7d7      	b.n	801ce00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801ce50:	4b03      	ldr	r3, [pc, #12]	; (801ce60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ce52:	6818      	ldr	r0, [r3, #0]
 801ce54:	6803      	ldr	r3, [r0, #0]
 801ce56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce58:	4798      	blx	r3
 801ce5a:	b013      	add	sp, #76	; 0x4c
 801ce5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce60:	200132bc 	.word	0x200132bc
 801ce64:	200132b6 	.word	0x200132b6
 801ce68:	fffff800 	.word	0xfffff800

0801ce6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801ce6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce70:	b09d      	sub	sp, #116	; 0x74
 801ce72:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801ce76:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801ce7a:	920e      	str	r2, [sp, #56]	; 0x38
 801ce7c:	461c      	mov	r4, r3
 801ce7e:	4683      	mov	fp, r0
 801ce80:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ce82:	2a00      	cmp	r2, #0
 801ce84:	f000 81e0 	beq.w	801d248 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801ce88:	6820      	ldr	r0, [r4, #0]
 801ce8a:	6861      	ldr	r1, [r4, #4]
 801ce8c:	aa18      	add	r2, sp, #96	; 0x60
 801ce8e:	c203      	stmia	r2!, {r0, r1}
 801ce90:	6818      	ldr	r0, [r3, #0]
 801ce92:	6859      	ldr	r1, [r3, #4]
 801ce94:	aa1a      	add	r2, sp, #104	; 0x68
 801ce96:	c203      	stmia	r2!, {r0, r1}
 801ce98:	a818      	add	r0, sp, #96	; 0x60
 801ce9a:	f7f8 fd45 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce9e:	4621      	mov	r1, r4
 801cea0:	a81a      	add	r0, sp, #104	; 0x68
 801cea2:	f7f8 fd85 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cea6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801ceaa:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801ceae:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ceb2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ceb6:	bfd7      	itett	le
 801ceb8:	b29a      	uxthle	r2, r3
 801ceba:	2201      	movgt	r2, #1
 801cebc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801cec0:	fb91 f2f2 	sdivle	r2, r1, r2
 801cec4:	9202      	str	r2, [sp, #8]
 801cec6:	9802      	ldr	r0, [sp, #8]
 801cec8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801cecc:	fb92 f0f0 	sdiv	r0, r2, r0
 801ced0:	b280      	uxth	r0, r0
 801ced2:	900f      	str	r0, [sp, #60]	; 0x3c
 801ced4:	9902      	ldr	r1, [sp, #8]
 801ced6:	9802      	ldr	r0, [sp, #8]
 801ced8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ceda:	440c      	add	r4, r1
 801cedc:	fb05 2510 	mls	r5, r5, r0, r2
 801cee0:	fb15 f503 	smulbb	r5, r5, r3
 801cee4:	3c01      	subs	r4, #1
 801cee6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801ceea:	fb94 f4f1 	sdiv	r4, r4, r1
 801ceee:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801cef2:	440d      	add	r5, r1
 801cef4:	4419      	add	r1, r3
 801cef6:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801cefa:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801cefe:	441a      	add	r2, r3
 801cf00:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801cf04:	9306      	str	r3, [sp, #24]
 801cf06:	4bb3      	ldr	r3, [pc, #716]	; (801d1d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801cf08:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801cf0c:	6818      	ldr	r0, [r3, #0]
 801cf0e:	6803      	ldr	r3, [r0, #0]
 801cf10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf12:	4798      	blx	r3
 801cf14:	4bb0      	ldr	r3, [pc, #704]	; (801d1d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801cf16:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801cf1a:	881a      	ldrh	r2, [r3, #0]
 801cf1c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801cf20:	9316      	str	r3, [sp, #88]	; 0x58
 801cf22:	fb02 7101 	mla	r1, r2, r1, r7
 801cf26:	3401      	adds	r4, #1
 801cf28:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801cf2c:	b2a4      	uxth	r4, r4
 801cf2e:	4356      	muls	r6, r2
 801cf30:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801cf34:	00a4      	lsls	r4, r4, #2
 801cf36:	920a      	str	r2, [sp, #40]	; 0x28
 801cf38:	1d22      	adds	r2, r4, #4
 801cf3a:	b2ad      	uxth	r5, r5
 801cf3c:	9213      	str	r2, [sp, #76]	; 0x4c
 801cf3e:	4ba7      	ldr	r3, [pc, #668]	; (801d1dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801cf40:	9a06      	ldr	r2, [sp, #24]
 801cf42:	2d00      	cmp	r5, #0
 801cf44:	bf0c      	ite	eq
 801cf46:	4611      	moveq	r1, r2
 801cf48:	2100      	movne	r1, #0
 801cf4a:	2200      	movs	r2, #0
 801cf4c:	eba3 030b 	sub.w	r3, r3, fp
 801cf50:	b289      	uxth	r1, r1
 801cf52:	920d      	str	r2, [sp, #52]	; 0x34
 801cf54:	9317      	str	r3, [sp, #92]	; 0x5c
 801cf56:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cf58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cf5a:	fa12 f383 	uxtah	r3, r2, r3
 801cf5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cf60:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801cf64:	3304      	adds	r3, #4
 801cf66:	9308      	str	r3, [sp, #32]
 801cf68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cf6a:	4543      	cmp	r3, r8
 801cf6c:	f240 8167 	bls.w	801d23e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801cf70:	9a02      	ldr	r2, [sp, #8]
 801cf72:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801cf76:	fbb5 f3f3 	udiv	r3, r5, r3
 801cf7a:	1ad3      	subs	r3, r2, r3
 801cf7c:	b29b      	uxth	r3, r3
 801cf7e:	9314      	str	r3, [sp, #80]	; 0x50
 801cf80:	9b08      	ldr	r3, [sp, #32]
 801cf82:	9808      	ldr	r0, [sp, #32]
 801cf84:	785a      	ldrb	r2, [r3, #1]
 801cf86:	789b      	ldrb	r3, [r3, #2]
 801cf88:	7800      	ldrb	r0, [r0, #0]
 801cf8a:	9010      	str	r0, [sp, #64]	; 0x40
 801cf8c:	021b      	lsls	r3, r3, #8
 801cf8e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801cf92:	9a08      	ldr	r2, [sp, #32]
 801cf94:	78d2      	ldrb	r2, [r2, #3]
 801cf96:	4313      	orrs	r3, r2
 801cf98:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cf9a:	3001      	adds	r0, #1
 801cf9c:	441a      	add	r2, r3
 801cf9e:	9007      	str	r0, [sp, #28]
 801cfa0:	1c50      	adds	r0, r2, #1
 801cfa2:	9005      	str	r0, [sp, #20]
 801cfa4:	7852      	ldrb	r2, [r2, #1]
 801cfa6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cfa8:	0212      	lsls	r2, r2, #8
 801cfaa:	5cc3      	ldrb	r3, [r0, r3]
 801cfac:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801cfb0:	431a      	orrs	r2, r3
 801cfb2:	b293      	uxth	r3, r2
 801cfb4:	930b      	str	r3, [sp, #44]	; 0x2c
 801cfb6:	2300      	movs	r3, #0
 801cfb8:	9309      	str	r3, [sp, #36]	; 0x24
 801cfba:	2301      	movs	r3, #1
 801cfbc:	9301      	str	r3, [sp, #4]
 801cfbe:	9304      	str	r3, [sp, #16]
 801cfc0:	2300      	movs	r3, #0
 801cfc2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801cfc6:	9303      	str	r3, [sp, #12]
 801cfc8:	f04f 0e01 	mov.w	lr, #1
 801cfcc:	2d00      	cmp	r5, #0
 801cfce:	d07c      	beq.n	801d0ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801cfd0:	45ae      	cmp	lr, r5
 801cfd2:	d26b      	bcs.n	801d0ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801cfd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cfd6:	eba5 050e 	sub.w	r5, r5, lr
 801cfda:	4543      	cmp	r3, r8
 801cfdc:	b2ad      	uxth	r5, r5
 801cfde:	460c      	mov	r4, r1
 801cfe0:	d802      	bhi.n	801cfe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801cfe2:	e070      	b.n	801d0c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801cfe4:	2b00      	cmp	r3, #0
 801cfe6:	d15c      	bne.n	801d0a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cfe8:	9b05      	ldr	r3, [sp, #20]
 801cfea:	9a04      	ldr	r2, [sp, #16]
 801cfec:	785b      	ldrb	r3, [r3, #1]
 801cfee:	9904      	ldr	r1, [sp, #16]
 801cff0:	f1c2 0207 	rsb	r2, r2, #7
 801cff4:	4093      	lsls	r3, r2
 801cff6:	005b      	lsls	r3, r3, #1
 801cff8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801cffc:	9b05      	ldr	r3, [sp, #20]
 801cffe:	781b      	ldrb	r3, [r3, #0]
 801d000:	410b      	asrs	r3, r1
 801d002:	3101      	adds	r1, #1
 801d004:	b2c9      	uxtb	r1, r1
 801d006:	2908      	cmp	r1, #8
 801d008:	9104      	str	r1, [sp, #16]
 801d00a:	9905      	ldr	r1, [sp, #20]
 801d00c:	bf0a      	itet	eq
 801d00e:	3102      	addeq	r1, #2
 801d010:	3101      	addne	r1, #1
 801d012:	9105      	streq	r1, [sp, #20]
 801d014:	b2db      	uxtb	r3, r3
 801d016:	bf0a      	itet	eq
 801d018:	2100      	moveq	r1, #0
 801d01a:	9105      	strne	r1, [sp, #20]
 801d01c:	9104      	streq	r1, [sp, #16]
 801d01e:	4313      	orrs	r3, r2
 801d020:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d022:	b29a      	uxth	r2, r3
 801d024:	4291      	cmp	r1, r2
 801d026:	d30a      	bcc.n	801d03e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d028:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801d02c:	2301      	movs	r3, #1
 801d02e:	9907      	ldr	r1, [sp, #28]
 801d030:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d034:	d30f      	bcc.n	801d056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d036:	2100      	movs	r1, #0
 801d038:	9301      	str	r3, [sp, #4]
 801d03a:	9103      	str	r1, [sp, #12]
 801d03c:	e032      	b.n	801d0a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801d03e:	9b07      	ldr	r3, [sp, #28]
 801d040:	429a      	cmp	r2, r3
 801d042:	d318      	bcc.n	801d076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801d044:	9b01      	ldr	r3, [sp, #4]
 801d046:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801d04a:	445b      	add	r3, fp
 801d04c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d050:	9b01      	ldr	r3, [sp, #4]
 801d052:	3301      	adds	r3, #1
 801d054:	b29b      	uxth	r3, r3
 801d056:	9907      	ldr	r1, [sp, #28]
 801d058:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801d05c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d060:	7108      	strb	r0, [r1, #4]
 801d062:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d064:	80c8      	strh	r0, [r1, #6]
 801d066:	9801      	ldr	r0, [sp, #4]
 801d068:	3001      	adds	r0, #1
 801d06a:	7148      	strb	r0, [r1, #5]
 801d06c:	9907      	ldr	r1, [sp, #28]
 801d06e:	3101      	adds	r1, #1
 801d070:	b289      	uxth	r1, r1
 801d072:	9107      	str	r1, [sp, #28]
 801d074:	e7df      	b.n	801d036 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d076:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d07a:	4611      	mov	r1, r2
 801d07c:	795b      	ldrb	r3, [r3, #5]
 801d07e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801d082:	4458      	add	r0, fp
 801d084:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801d086:	4406      	add	r6, r0
 801d088:	2e00      	cmp	r6, #0
 801d08a:	dd06      	ble.n	801d09a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d08c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d090:	790e      	ldrb	r6, [r1, #4]
 801d092:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d096:	88c9      	ldrh	r1, [r1, #6]
 801d098:	e7f4      	b.n	801d084 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d09a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d09e:	b29b      	uxth	r3, r3
 801d0a0:	e7c5      	b.n	801d02e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d0a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d0a4:	920b      	str	r2, [sp, #44]	; 0x2c
 801d0a6:	4621      	mov	r1, r4
 801d0a8:	469e      	mov	lr, r3
 801d0aa:	e78f      	b.n	801cfcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d0ac:	9a03      	ldr	r2, [sp, #12]
 801d0ae:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d0b2:	442a      	add	r2, r5
 801d0b4:	ebae 0305 	sub.w	r3, lr, r5
 801d0b8:	b292      	uxth	r2, r2
 801d0ba:	b29b      	uxth	r3, r3
 801d0bc:	9203      	str	r2, [sp, #12]
 801d0be:	2500      	movs	r5, #0
 801d0c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d0c2:	4542      	cmp	r2, r8
 801d0c4:	d88e      	bhi.n	801cfe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801d0c6:	4621      	mov	r1, r4
 801d0c8:	e74e      	b.n	801cf68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801d0ca:	458e      	cmp	lr, r1
 801d0cc:	bf29      	itett	cs
 801d0ce:	ebae 0301 	subcs.w	r3, lr, r1
 801d0d2:	eba1 040e 	subcc.w	r4, r1, lr
 801d0d6:	b29b      	uxthcs	r3, r3
 801d0d8:	910c      	strcs	r1, [sp, #48]	; 0x30
 801d0da:	bf2f      	iteee	cs
 801d0dc:	462c      	movcs	r4, r5
 801d0de:	b2a4      	uxthcc	r4, r4
 801d0e0:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801d0e4:	462b      	movcc	r3, r5
 801d0e6:	f04f 0900 	mov.w	r9, #0
 801d0ea:	9a03      	ldr	r2, [sp, #12]
 801d0ec:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d0ee:	444a      	add	r2, r9
 801d0f0:	4548      	cmp	r0, r9
 801d0f2:	b292      	uxth	r2, r2
 801d0f4:	d074      	beq.n	801d1e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801d0f6:	445a      	add	r2, fp
 801d0f8:	2004      	movs	r0, #4
 801d0fa:	4605      	mov	r5, r0
 801d0fc:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801d100:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d102:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d106:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d108:	5880      	ldr	r0, [r0, r2]
 801d10a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d10e:	d014      	beq.n	801d13a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d110:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d114:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d118:	d112      	bne.n	801d140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d11a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d11c:	2aff      	cmp	r2, #255	; 0xff
 801d11e:	d10f      	bne.n	801d140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d120:	0942      	lsrs	r2, r0, #5
 801d122:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d126:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d12a:	f025 0507 	bic.w	r5, r5, #7
 801d12e:	4315      	orrs	r5, r2
 801d130:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d134:	4305      	orrs	r5, r0
 801d136:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d13a:	f109 0901 	add.w	r9, r9, #1
 801d13e:	e7d4      	b.n	801d0ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d140:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d144:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d148:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d14c:	9215      	str	r2, [sp, #84]	; 0x54
 801d14e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d150:	fb02 fa0a 	mul.w	sl, r2, sl
 801d154:	f10a 0201 	add.w	r2, sl, #1
 801d158:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d15c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d160:	1212      	asrs	r2, r2, #8
 801d162:	fa1f fa82 	uxth.w	sl, r2
 801d166:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d16a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d16e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d172:	43d2      	mvns	r2, r2
 801d174:	b2d2      	uxtb	r2, r2
 801d176:	fb16 f60a 	smulbb	r6, r6, sl
 801d17a:	fa5f fc8c 	uxtb.w	ip, ip
 801d17e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d182:	b2c0      	uxtb	r0, r0
 801d184:	fb07 6702 	mla	r7, r7, r2, r6
 801d188:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d18c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d18e:	fb10 f00a 	smulbb	r0, r0, sl
 801d192:	fb0c 0002 	mla	r0, ip, r2, r0
 801d196:	b2ed      	uxtb	r5, r5
 801d198:	b2bf      	uxth	r7, r7
 801d19a:	fb15 f50a 	smulbb	r5, r5, sl
 801d19e:	b280      	uxth	r0, r0
 801d1a0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d1a4:	fb06 5602 	mla	r6, r6, r2, r5
 801d1a8:	1c7a      	adds	r2, r7, #1
 801d1aa:	1c45      	adds	r5, r0, #1
 801d1ac:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d1b0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d1b4:	b2b6      	uxth	r6, r6
 801d1b6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d1ba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d1be:	432f      	orrs	r7, r5
 801d1c0:	1c75      	adds	r5, r6, #1
 801d1c2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d1c6:	096d      	lsrs	r5, r5, #5
 801d1c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d1cc:	432f      	orrs	r7, r5
 801d1ce:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d1d2:	e7b2      	b.n	801d13a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d1d4:	200132bc 	.word	0x200132bc
 801d1d8:	200132b6 	.word	0x200132b6
 801d1dc:	fffff7fb 	.word	0xfffff7fb
 801d1e0:	9203      	str	r2, [sp, #12]
 801d1e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d1e4:	458e      	cmp	lr, r1
 801d1e6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d1ea:	f4ff af68 	bcc.w	801d0be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d1ee:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d1f0:	9906      	ldr	r1, [sp, #24]
 801d1f2:	8812      	ldrh	r2, [r2, #0]
 801d1f4:	1a52      	subs	r2, r2, r1
 801d1f6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d1fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d1fc:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d1fe:	3201      	adds	r2, #1
 801d200:	428a      	cmp	r2, r1
 801d202:	9209      	str	r2, [sp, #36]	; 0x24
 801d204:	d111      	bne.n	801d22a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d206:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d20a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d20e:	9b06      	ldr	r3, [sp, #24]
 801d210:	eba5 0509 	sub.w	r5, r5, r9
 801d214:	b2ad      	uxth	r5, r5
 801d216:	2d00      	cmp	r5, #0
 801d218:	bf08      	it	eq
 801d21a:	4619      	moveq	r1, r3
 801d21c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d21e:	bf18      	it	ne
 801d220:	2100      	movne	r1, #0
 801d222:	3301      	adds	r3, #1
 801d224:	930d      	str	r3, [sp, #52]	; 0x34
 801d226:	b289      	uxth	r1, r1
 801d228:	e695      	b.n	801cf56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d22a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d22e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d232:	1b2d      	subs	r5, r5, r4
 801d234:	b2ad      	uxth	r5, r5
 801d236:	2d00      	cmp	r5, #0
 801d238:	bf18      	it	ne
 801d23a:	2400      	movne	r4, #0
 801d23c:	e740      	b.n	801d0c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d23e:	4b04      	ldr	r3, [pc, #16]	; (801d250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d240:	6818      	ldr	r0, [r3, #0]
 801d242:	6803      	ldr	r3, [r0, #0]
 801d244:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d246:	4798      	blx	r3
 801d248:	b01d      	add	sp, #116	; 0x74
 801d24a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d24e:	bf00      	nop
 801d250:	200132bc 	.word	0x200132bc

0801d254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d258:	b09f      	sub	sp, #124	; 0x7c
 801d25a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d25e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d262:	920a      	str	r2, [sp, #40]	; 0x28
 801d264:	461d      	mov	r5, r3
 801d266:	4604      	mov	r4, r0
 801d268:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d26a:	2a00      	cmp	r2, #0
 801d26c:	f000 81fa 	beq.w	801d664 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d270:	6828      	ldr	r0, [r5, #0]
 801d272:	6869      	ldr	r1, [r5, #4]
 801d274:	aa1a      	add	r2, sp, #104	; 0x68
 801d276:	c203      	stmia	r2!, {r0, r1}
 801d278:	6818      	ldr	r0, [r3, #0]
 801d27a:	6859      	ldr	r1, [r3, #4]
 801d27c:	aa1c      	add	r2, sp, #112	; 0x70
 801d27e:	c203      	stmia	r2!, {r0, r1}
 801d280:	a81a      	add	r0, sp, #104	; 0x68
 801d282:	f7f8 fb51 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d286:	4629      	mov	r1, r5
 801d288:	a81c      	add	r0, sp, #112	; 0x70
 801d28a:	f7f8 fb91 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d28e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d292:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d296:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d29a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d29e:	bfd7      	itett	le
 801d2a0:	b29a      	uxthle	r2, r3
 801d2a2:	2201      	movgt	r2, #1
 801d2a4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d2a8:	fb91 f2f2 	sdivle	r2, r1, r2
 801d2ac:	9201      	str	r2, [sp, #4]
 801d2ae:	9801      	ldr	r0, [sp, #4]
 801d2b0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d2b4:	fb92 f0f0 	sdiv	r0, r2, r0
 801d2b8:	b280      	uxth	r0, r0
 801d2ba:	9010      	str	r0, [sp, #64]	; 0x40
 801d2bc:	9901      	ldr	r1, [sp, #4]
 801d2be:	9801      	ldr	r0, [sp, #4]
 801d2c0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d2c2:	440e      	add	r6, r1
 801d2c4:	fb05 2510 	mls	r5, r5, r0, r2
 801d2c8:	fb15 f503 	smulbb	r5, r5, r3
 801d2cc:	3e01      	subs	r6, #1
 801d2ce:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d2d2:	fb96 f6f1 	sdiv	r6, r6, r1
 801d2d6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d2da:	440d      	add	r5, r1
 801d2dc:	4419      	add	r1, r3
 801d2de:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d2e2:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d2e6:	441a      	add	r2, r3
 801d2e8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d2ec:	9304      	str	r3, [sp, #16]
 801d2ee:	4b96      	ldr	r3, [pc, #600]	; (801d548 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d2f0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d2f4:	6818      	ldr	r0, [r3, #0]
 801d2f6:	6803      	ldr	r3, [r0, #0]
 801d2f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d2fa:	4798      	blx	r3
 801d2fc:	4b93      	ldr	r3, [pc, #588]	; (801d54c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d2fe:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d302:	881a      	ldrh	r2, [r3, #0]
 801d304:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d308:	9318      	str	r3, [sp, #96]	; 0x60
 801d30a:	fb02 c101 	mla	r1, r2, r1, ip
 801d30e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d312:	4357      	muls	r7, r2
 801d314:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d318:	3601      	adds	r6, #1
 801d31a:	920b      	str	r2, [sp, #44]	; 0x2c
 801d31c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d31e:	4b8c      	ldr	r3, [pc, #560]	; (801d550 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d320:	b2b6      	uxth	r6, r6
 801d322:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d326:	1d32      	adds	r2, r6, #4
 801d328:	9206      	str	r2, [sp, #24]
 801d32a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d32c:	43d2      	mvns	r2, r2
 801d32e:	b2d2      	uxtb	r2, r2
 801d330:	b2ad      	uxth	r5, r5
 801d332:	9215      	str	r2, [sp, #84]	; 0x54
 801d334:	9a04      	ldr	r2, [sp, #16]
 801d336:	2d00      	cmp	r5, #0
 801d338:	bf0c      	ite	eq
 801d33a:	4611      	moveq	r1, r2
 801d33c:	2100      	movne	r1, #0
 801d33e:	2200      	movs	r2, #0
 801d340:	1b1b      	subs	r3, r3, r4
 801d342:	b289      	uxth	r1, r1
 801d344:	920d      	str	r2, [sp, #52]	; 0x34
 801d346:	9319      	str	r3, [sp, #100]	; 0x64
 801d348:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d34a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d34c:	fa12 f383 	uxtah	r3, r2, r3
 801d350:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d352:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d356:	3304      	adds	r3, #4
 801d358:	9307      	str	r3, [sp, #28]
 801d35a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d35c:	455b      	cmp	r3, fp
 801d35e:	f240 817c 	bls.w	801d65a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d362:	9a01      	ldr	r2, [sp, #4]
 801d364:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d368:	fbb5 f3f3 	udiv	r3, r5, r3
 801d36c:	1ad3      	subs	r3, r2, r3
 801d36e:	b29b      	uxth	r3, r3
 801d370:	9316      	str	r3, [sp, #88]	; 0x58
 801d372:	9b07      	ldr	r3, [sp, #28]
 801d374:	9807      	ldr	r0, [sp, #28]
 801d376:	785a      	ldrb	r2, [r3, #1]
 801d378:	789b      	ldrb	r3, [r3, #2]
 801d37a:	7800      	ldrb	r0, [r0, #0]
 801d37c:	9011      	str	r0, [sp, #68]	; 0x44
 801d37e:	021b      	lsls	r3, r3, #8
 801d380:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d384:	9a07      	ldr	r2, [sp, #28]
 801d386:	78d2      	ldrb	r2, [r2, #3]
 801d388:	4313      	orrs	r3, r2
 801d38a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d38c:	3001      	adds	r0, #1
 801d38e:	441a      	add	r2, r3
 801d390:	9005      	str	r0, [sp, #20]
 801d392:	1c50      	adds	r0, r2, #1
 801d394:	9003      	str	r0, [sp, #12]
 801d396:	7852      	ldrb	r2, [r2, #1]
 801d398:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d39a:	0212      	lsls	r2, r2, #8
 801d39c:	5cc3      	ldrb	r3, [r0, r3]
 801d39e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d3a2:	431a      	orrs	r2, r3
 801d3a4:	b293      	uxth	r3, r2
 801d3a6:	930c      	str	r3, [sp, #48]	; 0x30
 801d3a8:	2300      	movs	r3, #0
 801d3aa:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d3ae:	9308      	str	r3, [sp, #32]
 801d3b0:	461a      	mov	r2, r3
 801d3b2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d3b6:	930e      	str	r3, [sp, #56]	; 0x38
 801d3b8:	f04f 0801 	mov.w	r8, #1
 801d3bc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d3c0:	f8cd 8008 	str.w	r8, [sp, #8]
 801d3c4:	46c4      	mov	ip, r8
 801d3c6:	930f      	str	r3, [sp, #60]	; 0x3c
 801d3c8:	2d00      	cmp	r5, #0
 801d3ca:	d07c      	beq.n	801d4c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d3cc:	45ac      	cmp	ip, r5
 801d3ce:	d26c      	bcs.n	801d4aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d3d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3d2:	eba5 050c 	sub.w	r5, r5, ip
 801d3d6:	455b      	cmp	r3, fp
 801d3d8:	b2ad      	uxth	r5, r5
 801d3da:	4608      	mov	r0, r1
 801d3dc:	d802      	bhi.n	801d3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d3de:	e070      	b.n	801d4c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d3e0:	2b00      	cmp	r3, #0
 801d3e2:	d15c      	bne.n	801d49e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d3e4:	9b03      	ldr	r3, [sp, #12]
 801d3e6:	9a02      	ldr	r2, [sp, #8]
 801d3e8:	785b      	ldrb	r3, [r3, #1]
 801d3ea:	9902      	ldr	r1, [sp, #8]
 801d3ec:	f1c2 0207 	rsb	r2, r2, #7
 801d3f0:	4093      	lsls	r3, r2
 801d3f2:	005b      	lsls	r3, r3, #1
 801d3f4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d3f8:	9b03      	ldr	r3, [sp, #12]
 801d3fa:	781b      	ldrb	r3, [r3, #0]
 801d3fc:	410b      	asrs	r3, r1
 801d3fe:	3101      	adds	r1, #1
 801d400:	b2c9      	uxtb	r1, r1
 801d402:	2908      	cmp	r1, #8
 801d404:	9102      	str	r1, [sp, #8]
 801d406:	9903      	ldr	r1, [sp, #12]
 801d408:	bf0a      	itet	eq
 801d40a:	3102      	addeq	r1, #2
 801d40c:	3101      	addne	r1, #1
 801d40e:	9103      	streq	r1, [sp, #12]
 801d410:	b2db      	uxtb	r3, r3
 801d412:	bf0a      	itet	eq
 801d414:	2100      	moveq	r1, #0
 801d416:	9103      	strne	r1, [sp, #12]
 801d418:	9102      	streq	r1, [sp, #8]
 801d41a:	4313      	orrs	r3, r2
 801d41c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d41e:	b29a      	uxth	r2, r3
 801d420:	4291      	cmp	r1, r2
 801d422:	d30a      	bcc.n	801d43a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d424:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d428:	2301      	movs	r3, #1
 801d42a:	9905      	ldr	r1, [sp, #20]
 801d42c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d430:	d30f      	bcc.n	801d452 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d432:	2100      	movs	r1, #0
 801d434:	4698      	mov	r8, r3
 801d436:	9100      	str	r1, [sp, #0]
 801d438:	e032      	b.n	801d4a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d43a:	9b05      	ldr	r3, [sp, #20]
 801d43c:	429a      	cmp	r2, r3
 801d43e:	d318      	bcc.n	801d472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d440:	eb04 0308 	add.w	r3, r4, r8
 801d444:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d448:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d44c:	f108 0301 	add.w	r3, r8, #1
 801d450:	b29b      	uxth	r3, r3
 801d452:	9905      	ldr	r1, [sp, #20]
 801d454:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d458:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d45c:	710e      	strb	r6, [r1, #4]
 801d45e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d460:	80ce      	strh	r6, [r1, #6]
 801d462:	f108 0601 	add.w	r6, r8, #1
 801d466:	714e      	strb	r6, [r1, #5]
 801d468:	9905      	ldr	r1, [sp, #20]
 801d46a:	3101      	adds	r1, #1
 801d46c:	b289      	uxth	r1, r1
 801d46e:	9105      	str	r1, [sp, #20]
 801d470:	e7df      	b.n	801d432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d472:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d476:	4611      	mov	r1, r2
 801d478:	795b      	ldrb	r3, [r3, #5]
 801d47a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d47e:	4426      	add	r6, r4
 801d480:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d482:	4437      	add	r7, r6
 801d484:	2f00      	cmp	r7, #0
 801d486:	dd06      	ble.n	801d496 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d488:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d48c:	790f      	ldrb	r7, [r1, #4]
 801d48e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d492:	88c9      	ldrh	r1, [r1, #6]
 801d494:	e7f4      	b.n	801d480 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d496:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d49a:	b29b      	uxth	r3, r3
 801d49c:	e7c5      	b.n	801d42a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d49e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d4a0:	920c      	str	r2, [sp, #48]	; 0x30
 801d4a2:	4601      	mov	r1, r0
 801d4a4:	9a00      	ldr	r2, [sp, #0]
 801d4a6:	469c      	mov	ip, r3
 801d4a8:	e78e      	b.n	801d3c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d4aa:	1957      	adds	r7, r2, r5
 801d4ac:	ebac 0305 	sub.w	r3, ip, r5
 801d4b0:	b2ba      	uxth	r2, r7
 801d4b2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d4b6:	9200      	str	r2, [sp, #0]
 801d4b8:	b29b      	uxth	r3, r3
 801d4ba:	2500      	movs	r5, #0
 801d4bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d4be:	455a      	cmp	r2, fp
 801d4c0:	d88e      	bhi.n	801d3e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d4c2:	4601      	mov	r1, r0
 801d4c4:	e749      	b.n	801d35a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d4c6:	458c      	cmp	ip, r1
 801d4c8:	bf2c      	ite	cs
 801d4ca:	4628      	movcs	r0, r5
 801d4cc:	462b      	movcc	r3, r5
 801d4ce:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d4d0:	bf27      	ittee	cs
 801d4d2:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d4d4:	ebac 0301 	subcs.w	r3, ip, r1
 801d4d8:	eba1 000c 	subcc.w	r0, r1, ip
 801d4dc:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d4e0:	bf2c      	ite	cs
 801d4e2:	b29b      	uxthcs	r3, r3
 801d4e4:	b280      	uxthcc	r0, r0
 801d4e6:	2dff      	cmp	r5, #255	; 0xff
 801d4e8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d4ea:	eb02 0705 	add.w	r7, r2, r5
 801d4ee:	b2bd      	uxth	r5, r7
 801d4f0:	9500      	str	r5, [sp, #0]
 801d4f2:	d12f      	bne.n	801d554 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d4f4:	465e      	mov	r6, fp
 801d4f6:	9d00      	ldr	r5, [sp, #0]
 801d4f8:	42aa      	cmp	r2, r5
 801d4fa:	f040 8084 	bne.w	801d606 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d4fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d500:	458c      	cmp	ip, r1
 801d502:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d506:	d3d8      	bcc.n	801d4ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d508:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d50a:	9904      	ldr	r1, [sp, #16]
 801d50c:	8812      	ldrh	r2, [r2, #0]
 801d50e:	1a52      	subs	r2, r2, r1
 801d510:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d514:	9a08      	ldr	r2, [sp, #32]
 801d516:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d518:	3201      	adds	r2, #1
 801d51a:	428a      	cmp	r2, r1
 801d51c:	9208      	str	r2, [sp, #32]
 801d51e:	f040 8092 	bne.w	801d646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d522:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d526:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d52a:	9b04      	ldr	r3, [sp, #16]
 801d52c:	eba5 050c 	sub.w	r5, r5, ip
 801d530:	b2ad      	uxth	r5, r5
 801d532:	2d00      	cmp	r5, #0
 801d534:	bf08      	it	eq
 801d536:	4619      	moveq	r1, r3
 801d538:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d53a:	bf18      	it	ne
 801d53c:	2100      	movne	r1, #0
 801d53e:	3301      	adds	r3, #1
 801d540:	930d      	str	r3, [sp, #52]	; 0x34
 801d542:	b289      	uxth	r1, r1
 801d544:	e700      	b.n	801d348 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d546:	bf00      	nop
 801d548:	200132bc 	.word	0x200132bc
 801d54c:	200132b6 	.word	0x200132b6
 801d550:	fffff7fb 	.word	0xfffff7fb
 801d554:	46d9      	mov	r9, fp
 801d556:	9d00      	ldr	r5, [sp, #0]
 801d558:	42aa      	cmp	r2, r5
 801d55a:	d0d0      	beq.n	801d4fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d55c:	1c55      	adds	r5, r2, #1
 801d55e:	4422      	add	r2, r4
 801d560:	9517      	str	r5, [sp, #92]	; 0x5c
 801d562:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d566:	9a06      	ldr	r2, [sp, #24]
 801d568:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d56c:	4472      	add	r2, lr
 801d56e:	9212      	str	r2, [sp, #72]	; 0x48
 801d570:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d572:	f8b9 2000 	ldrh.w	r2, [r9]
 801d576:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d57a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d57c:	1216      	asrs	r6, r2, #8
 801d57e:	fb1a fa07 	smulbb	sl, sl, r7
 801d582:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d586:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d588:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d58c:	fb06 a607 	mla	r6, r6, r7, sl
 801d590:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d592:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d596:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d598:	10d5      	asrs	r5, r2, #3
 801d59a:	fb1a fa07 	smulbb	sl, sl, r7
 801d59e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d5a2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d5a4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d5a8:	fb05 a507 	mla	r5, r5, r7, sl
 801d5ac:	9f06      	ldr	r7, [sp, #24]
 801d5ae:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d5b2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d5b4:	00d2      	lsls	r2, r2, #3
 801d5b6:	fb1e fe07 	smulbb	lr, lr, r7
 801d5ba:	b2d2      	uxtb	r2, r2
 801d5bc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d5be:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d5c2:	b2b6      	uxth	r6, r6
 801d5c4:	fb02 e207 	mla	r2, r2, r7, lr
 801d5c8:	b292      	uxth	r2, r2
 801d5ca:	b2ad      	uxth	r5, r5
 801d5cc:	f106 0a01 	add.w	sl, r6, #1
 801d5d0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d5d4:	f102 0e01 	add.w	lr, r2, #1
 801d5d8:	f105 0a01 	add.w	sl, r5, #1
 801d5dc:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d5e0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d5e4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d5e8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d5ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d5f0:	ea4e 0606 	orr.w	r6, lr, r6
 801d5f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d5f8:	ea46 060a 	orr.w	r6, r6, sl
 801d5fc:	f829 6b02 	strh.w	r6, [r9], #2
 801d600:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d604:	e7a7      	b.n	801d556 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d606:	f102 0e01 	add.w	lr, r2, #1
 801d60a:	4422      	add	r2, r4
 801d60c:	9f06      	ldr	r7, [sp, #24]
 801d60e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d612:	9a06      	ldr	r2, [sp, #24]
 801d614:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d618:	eb02 0a05 	add.w	sl, r2, r5
 801d61c:	4a13      	ldr	r2, [pc, #76]	; (801d66c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d61e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d622:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d626:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d62a:	00d2      	lsls	r2, r2, #3
 801d62c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d630:	ea49 0202 	orr.w	r2, r9, r2
 801d634:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d638:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d63c:	f826 2b02 	strh.w	r2, [r6], #2
 801d640:	fa1f f28e 	uxth.w	r2, lr
 801d644:	e757      	b.n	801d4f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d646:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d64a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d64e:	1a2d      	subs	r5, r5, r0
 801d650:	b2ad      	uxth	r5, r5
 801d652:	2d00      	cmp	r5, #0
 801d654:	bf18      	it	ne
 801d656:	2000      	movne	r0, #0
 801d658:	e730      	b.n	801d4bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d65a:	4b05      	ldr	r3, [pc, #20]	; (801d670 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d65c:	6818      	ldr	r0, [r3, #0]
 801d65e:	6803      	ldr	r3, [r0, #0]
 801d660:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d662:	4798      	blx	r3
 801d664:	b01f      	add	sp, #124	; 0x7c
 801d666:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d66a:	bf00      	nop
 801d66c:	fffff800 	.word	0xfffff800
 801d670:	200132bc 	.word	0x200132bc

0801d674 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d678:	b091      	sub	sp, #68	; 0x44
 801d67a:	469b      	mov	fp, r3
 801d67c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d680:	4616      	mov	r6, r2
 801d682:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d686:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d68a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d68e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d692:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d696:	4604      	mov	r4, r0
 801d698:	460d      	mov	r5, r1
 801d69a:	4640      	mov	r0, r8
 801d69c:	4659      	mov	r1, fp
 801d69e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d6a2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d6a6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d6aa:	f7f2 fb9f 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 801d6ae:	4631      	mov	r1, r6
 801d6b0:	4640      	mov	r0, r8
 801d6b2:	f7f2 fb9b 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 801d6b6:	4b74      	ldr	r3, [pc, #464]	; (801d888 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d6b8:	8818      	ldrh	r0, [r3, #0]
 801d6ba:	4b74      	ldr	r3, [pc, #464]	; (801d88c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d6bc:	8819      	ldrh	r1, [r3, #0]
 801d6be:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d6c2:	2b00      	cmp	r3, #0
 801d6c4:	b202      	sxth	r2, r0
 801d6c6:	b20e      	sxth	r6, r1
 801d6c8:	da07      	bge.n	801d6da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d6ca:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d6ce:	4463      	add	r3, ip
 801d6d0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d6d4:	2300      	movs	r3, #0
 801d6d6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d6da:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d6de:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d6e2:	1ad2      	subs	r2, r2, r3
 801d6e4:	4594      	cmp	ip, r2
 801d6e6:	bfc4      	itt	gt
 801d6e8:	1ac2      	subgt	r2, r0, r3
 801d6ea:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d6ee:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d6f2:	2a00      	cmp	r2, #0
 801d6f4:	da07      	bge.n	801d706 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d6f6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d6fa:	4462      	add	r2, ip
 801d6fc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d700:	2200      	movs	r2, #0
 801d702:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d706:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d70a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d70e:	eba6 060a 	sub.w	r6, r6, sl
 801d712:	42b2      	cmp	r2, r6
 801d714:	bfc4      	itt	gt
 801d716:	eba1 020a 	subgt.w	r2, r1, sl
 801d71a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d71e:	4a5c      	ldr	r2, [pc, #368]	; (801d890 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d720:	7812      	ldrb	r2, [r2, #0]
 801d722:	b9a2      	cbnz	r2, 801d74e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d724:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d728:	4286      	cmp	r6, r0
 801d72a:	4640      	mov	r0, r8
 801d72c:	9303      	str	r3, [sp, #12]
 801d72e:	bf14      	ite	ne
 801d730:	2600      	movne	r6, #0
 801d732:	2601      	moveq	r6, #1
 801d734:	f7f2 fb9d 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d738:	9b03      	ldr	r3, [sp, #12]
 801d73a:	b160      	cbz	r0, 801d756 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d73c:	2300      	movs	r3, #0
 801d73e:	8023      	strh	r3, [r4, #0]
 801d740:	8063      	strh	r3, [r4, #2]
 801d742:	80a3      	strh	r3, [r4, #4]
 801d744:	4620      	mov	r0, r4
 801d746:	80e3      	strh	r3, [r4, #6]
 801d748:	b011      	add	sp, #68	; 0x44
 801d74a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d74e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d752:	428e      	cmp	r6, r1
 801d754:	e7e9      	b.n	801d72a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d756:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d75a:	9205      	str	r2, [sp, #20]
 801d75c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d760:	9206      	str	r2, [sp, #24]
 801d762:	f8bb 2000 	ldrh.w	r2, [fp]
 801d766:	900e      	str	r0, [sp, #56]	; 0x38
 801d768:	1a9b      	subs	r3, r3, r2
 801d76a:	b21b      	sxth	r3, r3
 801d76c:	9303      	str	r3, [sp, #12]
 801d76e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d772:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d776:	ebaa 0a03 	sub.w	sl, sl, r3
 801d77a:	fa0f f38a 	sxth.w	r3, sl
 801d77e:	9304      	str	r3, [sp, #16]
 801d780:	9b03      	ldr	r3, [sp, #12]
 801d782:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801d786:	9b04      	ldr	r3, [sp, #16]
 801d788:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d78c:	9b05      	ldr	r3, [sp, #20]
 801d78e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801d792:	a90e      	add	r1, sp, #56	; 0x38
 801d794:	9b06      	ldr	r3, [sp, #24]
 801d796:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801d79a:	a80c      	add	r0, sp, #48	; 0x30
 801d79c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801d7a0:	f7f8 f906 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d7a4:	4640      	mov	r0, r8
 801d7a6:	f7f8 f8bf 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7aa:	a80e      	add	r0, sp, #56	; 0x38
 801d7ac:	f7f8 f8bc 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7b0:	4b38      	ldr	r3, [pc, #224]	; (801d894 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801d7b2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801d7b6:	881b      	ldrh	r3, [r3, #0]
 801d7b8:	9307      	str	r3, [sp, #28]
 801d7ba:	682b      	ldr	r3, [r5, #0]
 801d7bc:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801d898 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d7c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d7c2:	4628      	mov	r0, r5
 801d7c4:	4798      	blx	r3
 801d7c6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801d7ca:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801d7ce:	4681      	mov	r9, r0
 801d7d0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801d7d4:	f8db 0000 	ldr.w	r0, [fp]
 801d7d8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d7da:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d7de:	6803      	ldr	r3, [r0, #0]
 801d7e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d7e2:	4798      	blx	r3
 801d7e4:	4607      	mov	r7, r0
 801d7e6:	f8db 0000 	ldr.w	r0, [fp]
 801d7ea:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801d7ee:	6803      	ldr	r3, [r0, #0]
 801d7f0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d7f4:	9109      	str	r1, [sp, #36]	; 0x24
 801d7f6:	9208      	str	r2, [sp, #32]
 801d7f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d7fa:	4798      	blx	r3
 801d7fc:	f010 0f01 	tst.w	r0, #1
 801d800:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d804:	d012      	beq.n	801d82c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801d806:	f8db 0000 	ldr.w	r0, [fp]
 801d80a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801d80e:	6803      	ldr	r3, [r0, #0]
 801d810:	9200      	str	r2, [sp, #0]
 801d812:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801d814:	e898 0006 	ldmia.w	r8, {r1, r2}
 801d818:	462b      	mov	r3, r5
 801d81a:	47b0      	blx	r6
 801d81c:	9b03      	ldr	r3, [sp, #12]
 801d81e:	8023      	strh	r3, [r4, #0]
 801d820:	9b04      	ldr	r3, [sp, #16]
 801d822:	8063      	strh	r3, [r4, #2]
 801d824:	9b05      	ldr	r3, [sp, #20]
 801d826:	80a3      	strh	r3, [r4, #4]
 801d828:	9b06      	ldr	r3, [sp, #24]
 801d82a:	e78b      	b.n	801d744 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801d82c:	fb09 f202 	mul.w	r2, r9, r2
 801d830:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801d834:	440f      	add	r7, r1
 801d836:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801d83a:	b166      	cbz	r6, 801d856 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d83c:	9a07      	ldr	r2, [sp, #28]
 801d83e:	4592      	cmp	sl, r2
 801d840:	d109      	bne.n	801d856 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d842:	f8db 0000 	ldr.w	r0, [fp]
 801d846:	6802      	ldr	r2, [r0, #0]
 801d848:	fb09 f303 	mul.w	r3, r9, r3
 801d84c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801d84e:	4629      	mov	r1, r5
 801d850:	463a      	mov	r2, r7
 801d852:	47b0      	blx	r6
 801d854:	e7e2      	b.n	801d81c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d856:	fb0a f303 	mul.w	r3, sl, r3
 801d85a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801d898 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d85e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801d862:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801d866:	4545      	cmp	r5, r8
 801d868:	d2d8      	bcs.n	801d81c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d86a:	f8db 0000 	ldr.w	r0, [fp]
 801d86e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d872:	6802      	ldr	r2, [r0, #0]
 801d874:	4629      	mov	r1, r5
 801d876:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801d87a:	005b      	lsls	r3, r3, #1
 801d87c:	463a      	mov	r2, r7
 801d87e:	47d0      	blx	sl
 801d880:	444f      	add	r7, r9
 801d882:	4435      	add	r5, r6
 801d884:	e7ef      	b.n	801d866 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801d886:	bf00      	nop
 801d888:	200132b0 	.word	0x200132b0
 801d88c:	200132b2 	.word	0x200132b2
 801d890:	200132b4 	.word	0x200132b4
 801d894:	200132b6 	.word	0x200132b6
 801d898:	200132bc 	.word	0x200132bc

0801d89c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801d89c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d89e:	4606      	mov	r6, r0
 801d8a0:	b087      	sub	sp, #28
 801d8a2:	460c      	mov	r4, r1
 801d8a4:	4617      	mov	r7, r2
 801d8a6:	461d      	mov	r5, r3
 801d8a8:	b333      	cbz	r3, 801d8f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d8aa:	4608      	mov	r0, r1
 801d8ac:	f7f2 fae1 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d8b0:	bb10      	cbnz	r0, 801d8f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d8b2:	6820      	ldr	r0, [r4, #0]
 801d8b4:	6861      	ldr	r1, [r4, #4]
 801d8b6:	4c1c      	ldr	r4, [pc, #112]	; (801d928 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801d8b8:	ab04      	add	r3, sp, #16
 801d8ba:	c303      	stmia	r3!, {r0, r1}
 801d8bc:	a804      	add	r0, sp, #16
 801d8be:	f7f8 f833 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d8c2:	6820      	ldr	r0, [r4, #0]
 801d8c4:	6803      	ldr	r3, [r0, #0]
 801d8c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d8c8:	4798      	blx	r3
 801d8ca:	2dff      	cmp	r5, #255	; 0xff
 801d8cc:	d016      	beq.n	801d8fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801d8ce:	f010 0f08 	tst.w	r0, #8
 801d8d2:	6820      	ldr	r0, [r4, #0]
 801d8d4:	d015      	beq.n	801d902 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801d8d6:	2400      	movs	r4, #0
 801d8d8:	6801      	ldr	r1, [r0, #0]
 801d8da:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d8de:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d8e2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801d8e6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801d8ea:	9401      	str	r4, [sp, #4]
 801d8ec:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801d8f0:	9400      	str	r4, [sp, #0]
 801d8f2:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801d8f4:	4639      	mov	r1, r7
 801d8f6:	47a0      	blx	r4
 801d8f8:	b007      	add	sp, #28
 801d8fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d8fc:	f010 0f02 	tst.w	r0, #2
 801d900:	e7e7      	b.n	801d8d2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801d902:	6803      	ldr	r3, [r0, #0]
 801d904:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d906:	4798      	blx	r3
 801d908:	4b08      	ldr	r3, [pc, #32]	; (801d92c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801d90a:	881a      	ldrh	r2, [r3, #0]
 801d90c:	6833      	ldr	r3, [r6, #0]
 801d90e:	e9cd 7500 	strd	r7, r5, [sp]
 801d912:	4601      	mov	r1, r0
 801d914:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801d916:	4630      	mov	r0, r6
 801d918:	ab04      	add	r3, sp, #16
 801d91a:	47a8      	blx	r5
 801d91c:	6820      	ldr	r0, [r4, #0]
 801d91e:	6803      	ldr	r3, [r0, #0]
 801d920:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d922:	4798      	blx	r3
 801d924:	e7e8      	b.n	801d8f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d926:	bf00      	nop
 801d928:	200132bc 	.word	0x200132bc
 801d92c:	200132b6 	.word	0x200132b6

0801d930 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801d930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d934:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801d938:	9e08      	ldr	r6, [sp, #32]
 801d93a:	4688      	mov	r8, r1
 801d93c:	4614      	mov	r4, r2
 801d93e:	461d      	mov	r5, r3
 801d940:	2f00      	cmp	r7, #0
 801d942:	f000 80a9 	beq.w	801da98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d946:	4618      	mov	r0, r3
 801d948:	f7f2 fa93 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d94c:	2800      	cmp	r0, #0
 801d94e:	f040 80a3 	bne.w	801da98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d952:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d956:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d95a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d95e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801d962:	fb04 1303 	mla	r3, r4, r3, r1
 801d966:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801d96a:	4365      	muls	r5, r4
 801d96c:	2fff      	cmp	r7, #255	; 0xff
 801d96e:	eba4 0200 	sub.w	r2, r4, r0
 801d972:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801d976:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801d97a:	d04a      	beq.n	801da12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801d97c:	b2bc      	uxth	r4, r7
 801d97e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801d982:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801d986:	fa5f f788 	uxtb.w	r7, r8
 801d98a:	b2f3      	uxtb	r3, r6
 801d98c:	0040      	lsls	r0, r0, #1
 801d98e:	fb0e fe04 	mul.w	lr, lr, r4
 801d992:	4367      	muls	r7, r4
 801d994:	4363      	muls	r3, r4
 801d996:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801d99a:	fa1f fc8c 	uxth.w	ip, ip
 801d99e:	42a9      	cmp	r1, r5
 801d9a0:	d27a      	bcs.n	801da98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d9a2:	eb01 0900 	add.w	r9, r1, r0
 801d9a6:	4549      	cmp	r1, r9
 801d9a8:	d231      	bcs.n	801da0e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801d9aa:	880a      	ldrh	r2, [r1, #0]
 801d9ac:	1214      	asrs	r4, r2, #8
 801d9ae:	10d6      	asrs	r6, r2, #3
 801d9b0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d9b4:	00d2      	lsls	r2, r2, #3
 801d9b6:	b2d2      	uxtb	r2, r2
 801d9b8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d9bc:	fb14 f40c 	smulbb	r4, r4, ip
 801d9c0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d9c4:	4474      	add	r4, lr
 801d9c6:	fb12 f20c 	smulbb	r2, r2, ip
 801d9ca:	b2a4      	uxth	r4, r4
 801d9cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d9d0:	441a      	add	r2, r3
 801d9d2:	b292      	uxth	r2, r2
 801d9d4:	f104 0a01 	add.w	sl, r4, #1
 801d9d8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d9dc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d9e0:	fb16 f60c 	smulbb	r6, r6, ip
 801d9e4:	f102 0a01 	add.w	sl, r2, #1
 801d9e8:	443e      	add	r6, r7
 801d9ea:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d9ee:	b2b6      	uxth	r6, r6
 801d9f0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d9f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d9f8:	4322      	orrs	r2, r4
 801d9fa:	1c74      	adds	r4, r6, #1
 801d9fc:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801da00:	0976      	lsrs	r6, r6, #5
 801da02:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801da06:	4332      	orrs	r2, r6
 801da08:	f821 2b02 	strh.w	r2, [r1], #2
 801da0c:	e7cb      	b.n	801d9a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801da0e:	4441      	add	r1, r8
 801da10:	e7c5      	b.n	801d99e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801da12:	4f22      	ldr	r7, [pc, #136]	; (801da9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801da14:	0973      	lsrs	r3, r6, #5
 801da16:	ea08 0707 	and.w	r7, r8, r7
 801da1a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801da1e:	433b      	orrs	r3, r7
 801da20:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801da24:	4333      	orrs	r3, r6
 801da26:	07e7      	lsls	r7, r4, #31
 801da28:	b29b      	uxth	r3, r3
 801da2a:	d50b      	bpl.n	801da44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801da2c:	0040      	lsls	r0, r0, #1
 801da2e:	0052      	lsls	r2, r2, #1
 801da30:	42a9      	cmp	r1, r5
 801da32:	d231      	bcs.n	801da98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801da34:	180c      	adds	r4, r1, r0
 801da36:	42a1      	cmp	r1, r4
 801da38:	d202      	bcs.n	801da40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801da3a:	f821 3b02 	strh.w	r3, [r1], #2
 801da3e:	e7fa      	b.n	801da36 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801da40:	4411      	add	r1, r2
 801da42:	e7f5      	b.n	801da30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801da44:	078e      	lsls	r6, r1, #30
 801da46:	d008      	beq.n	801da5a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801da48:	0066      	lsls	r6, r4, #1
 801da4a:	460a      	mov	r2, r1
 801da4c:	42aa      	cmp	r2, r5
 801da4e:	d202      	bcs.n	801da56 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801da50:	8013      	strh	r3, [r2, #0]
 801da52:	4432      	add	r2, r6
 801da54:	e7fa      	b.n	801da4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801da56:	3102      	adds	r1, #2
 801da58:	3801      	subs	r0, #1
 801da5a:	07c2      	lsls	r2, r0, #31
 801da5c:	d50b      	bpl.n	801da76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801da5e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801da62:	3a01      	subs	r2, #1
 801da64:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801da68:	0066      	lsls	r6, r4, #1
 801da6a:	42aa      	cmp	r2, r5
 801da6c:	d202      	bcs.n	801da74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801da6e:	8013      	strh	r3, [r2, #0]
 801da70:	4432      	add	r2, r6
 801da72:	e7fa      	b.n	801da6a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801da74:	3801      	subs	r0, #1
 801da76:	b178      	cbz	r0, 801da98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801da78:	1040      	asrs	r0, r0, #1
 801da7a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801da7e:	0080      	lsls	r0, r0, #2
 801da80:	0064      	lsls	r4, r4, #1
 801da82:	42a9      	cmp	r1, r5
 801da84:	d208      	bcs.n	801da98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801da86:	180e      	adds	r6, r1, r0
 801da88:	460a      	mov	r2, r1
 801da8a:	42b2      	cmp	r2, r6
 801da8c:	d202      	bcs.n	801da94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801da8e:	f842 3b04 	str.w	r3, [r2], #4
 801da92:	e7fa      	b.n	801da8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801da94:	4421      	add	r1, r4
 801da96:	e7f4      	b.n	801da82 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801da98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801da9c:	00fff800 	.word	0x00fff800

0801daa0 <_ZN8touchgfx8LCD16bppC1Ev>:
 801daa0:	2200      	movs	r2, #0
 801daa2:	4912      	ldr	r1, [pc, #72]	; (801daec <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801daa4:	6042      	str	r2, [r0, #4]
 801daa6:	6001      	str	r1, [r0, #0]
 801daa8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801daac:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801dab0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801dab4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801dab8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801dabc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801dac0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801dac4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801dac8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801dacc:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801dad0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801dad4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801dad8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801dadc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801dae0:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801dae4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801dae8:	4770      	bx	lr
 801daea:	bf00      	nop
 801daec:	0802f250 	.word	0x0802f250

0801daf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801daf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801daf4:	460d      	mov	r5, r1
 801daf6:	b08d      	sub	sp, #52	; 0x34
 801daf8:	4604      	mov	r4, r0
 801dafa:	6808      	ldr	r0, [r1, #0]
 801dafc:	6849      	ldr	r1, [r1, #4]
 801dafe:	4699      	mov	r9, r3
 801db00:	ab08      	add	r3, sp, #32
 801db02:	c303      	stmia	r3!, {r0, r1}
 801db04:	6810      	ldr	r0, [r2, #0]
 801db06:	6851      	ldr	r1, [r2, #4]
 801db08:	ab0a      	add	r3, sp, #40	; 0x28
 801db0a:	c303      	stmia	r3!, {r0, r1}
 801db0c:	a808      	add	r0, sp, #32
 801db0e:	f7f7 ff0b 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801db12:	4629      	mov	r1, r5
 801db14:	a80a      	add	r0, sp, #40	; 0x28
 801db16:	f7f7 ff4b 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801db1a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801db1e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801db22:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801db26:	4d63      	ldr	r5, [pc, #396]	; (801dcb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801db28:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801db2c:	6828      	ldr	r0, [r5, #0]
 801db2e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801db32:	fb11 2103 	smlabb	r1, r1, r3, r2
 801db36:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801db3a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801db3e:	440a      	add	r2, r1
 801db40:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801db44:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801db48:	4413      	add	r3, r2
 801db4a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801db4e:	6803      	ldr	r3, [r0, #0]
 801db50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801db52:	4798      	blx	r3
 801db54:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801db58:	d119      	bne.n	801db8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801db5a:	f010 0f20 	tst.w	r0, #32
 801db5e:	6828      	ldr	r0, [r5, #0]
 801db60:	d018      	beq.n	801db94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801db62:	2500      	movs	r5, #0
 801db64:	6801      	ldr	r1, [r0, #0]
 801db66:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801db6a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801db6e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801db72:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801db76:	9502      	str	r5, [sp, #8]
 801db78:	b2b6      	uxth	r6, r6
 801db7a:	fa1f f588 	uxth.w	r5, r8
 801db7e:	9601      	str	r6, [sp, #4]
 801db80:	9500      	str	r5, [sp, #0]
 801db82:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801db84:	4621      	mov	r1, r4
 801db86:	47a8      	blx	r5
 801db88:	b00d      	add	sp, #52	; 0x34
 801db8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db8e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801db92:	e7e4      	b.n	801db5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801db94:	6803      	ldr	r3, [r0, #0]
 801db96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db98:	4798      	blx	r3
 801db9a:	4947      	ldr	r1, [pc, #284]	; (801dcb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801db9c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801dba0:	880b      	ldrh	r3, [r1, #0]
 801dba2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801dba6:	fb03 5202 	mla	r2, r3, r2, r5
 801dbaa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dbae:	4373      	muls	r3, r6
 801dbb0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dbb4:	9307      	str	r3, [sp, #28]
 801dbb6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801dbba:	9306      	str	r3, [sp, #24]
 801dbbc:	468a      	mov	sl, r1
 801dbbe:	9b07      	ldr	r3, [sp, #28]
 801dbc0:	4298      	cmp	r0, r3
 801dbc2:	d270      	bcs.n	801dca6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801dbc4:	9b06      	ldr	r3, [sp, #24]
 801dbc6:	4621      	mov	r1, r4
 801dbc8:	eb00 0b03 	add.w	fp, r0, r3
 801dbcc:	4558      	cmp	r0, fp
 801dbce:	d25d      	bcs.n	801dc8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801dbd0:	f851 4b04 	ldr.w	r4, [r1], #4
 801dbd4:	0e23      	lsrs	r3, r4, #24
 801dbd6:	d014      	beq.n	801dc02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dbd8:	2bff      	cmp	r3, #255	; 0xff
 801dbda:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801dbde:	d112      	bne.n	801dc06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dbe0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dbe4:	d10f      	bne.n	801dc06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dbe6:	0963      	lsrs	r3, r4, #5
 801dbe8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801dbec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dbf0:	f02c 0c07 	bic.w	ip, ip, #7
 801dbf4:	ea43 0c0c 	orr.w	ip, r3, ip
 801dbf8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801dbfc:	ea4c 0404 	orr.w	r4, ip, r4
 801dc00:	8004      	strh	r4, [r0, #0]
 801dc02:	3002      	adds	r0, #2
 801dc04:	e7e2      	b.n	801dbcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801dc06:	fb09 f303 	mul.w	r3, r9, r3
 801dc0a:	8807      	ldrh	r7, [r0, #0]
 801dc0c:	1c5a      	adds	r2, r3, #1
 801dc0e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801dc12:	1212      	asrs	r2, r2, #8
 801dc14:	123e      	asrs	r6, r7, #8
 801dc16:	b293      	uxth	r3, r2
 801dc18:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801dc1c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dc20:	43d2      	mvns	r2, r2
 801dc22:	b2d2      	uxtb	r2, r2
 801dc24:	10fd      	asrs	r5, r7, #3
 801dc26:	fb1e fe03 	smulbb	lr, lr, r3
 801dc2a:	00ff      	lsls	r7, r7, #3
 801dc2c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801dc30:	fb06 e602 	mla	r6, r6, r2, lr
 801dc34:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dc38:	b2ff      	uxtb	r7, r7
 801dc3a:	fa5f fc8c 	uxtb.w	ip, ip
 801dc3e:	b2e4      	uxtb	r4, r4
 801dc40:	b2b6      	uxth	r6, r6
 801dc42:	fb1c fc03 	smulbb	ip, ip, r3
 801dc46:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dc4a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dc4e:	fb14 f403 	smulbb	r4, r4, r3
 801dc52:	fb05 c502 	mla	r5, r5, r2, ip
 801dc56:	f106 0e01 	add.w	lr, r6, #1
 801dc5a:	fb07 4702 	mla	r7, r7, r2, r4
 801dc5e:	b2ad      	uxth	r5, r5
 801dc60:	b2bf      	uxth	r7, r7
 801dc62:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801dc66:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801dc6a:	f105 0c01 	add.w	ip, r5, #1
 801dc6e:	1c7e      	adds	r6, r7, #1
 801dc70:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801dc74:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dc78:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801dc7c:	096d      	lsrs	r5, r5, #5
 801dc7e:	ea46 060e 	orr.w	r6, r6, lr
 801dc82:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dc86:	432e      	orrs	r6, r5
 801dc88:	8006      	strh	r6, [r0, #0]
 801dc8a:	e7ba      	b.n	801dc02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dc8c:	f8ba 3000 	ldrh.w	r3, [sl]
 801dc90:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801dc94:	eba3 0308 	sub.w	r3, r3, r8
 801dc98:	eba4 0408 	sub.w	r4, r4, r8
 801dc9c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dca0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801dca4:	e78b      	b.n	801dbbe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801dca6:	4b03      	ldr	r3, [pc, #12]	; (801dcb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dca8:	6818      	ldr	r0, [r3, #0]
 801dcaa:	6803      	ldr	r3, [r0, #0]
 801dcac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dcae:	4798      	blx	r3
 801dcb0:	e76a      	b.n	801db88 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801dcb2:	bf00      	nop
 801dcb4:	200132bc 	.word	0x200132bc
 801dcb8:	200132b6 	.word	0x200132b6

0801dcbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801dcbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dcc0:	460c      	mov	r4, r1
 801dcc2:	b085      	sub	sp, #20
 801dcc4:	6810      	ldr	r0, [r2, #0]
 801dcc6:	6851      	ldr	r1, [r2, #4]
 801dcc8:	466d      	mov	r5, sp
 801dcca:	c503      	stmia	r5!, {r0, r1}
 801dccc:	6818      	ldr	r0, [r3, #0]
 801dcce:	6859      	ldr	r1, [r3, #4]
 801dcd0:	4616      	mov	r6, r2
 801dcd2:	c503      	stmia	r5!, {r0, r1}
 801dcd4:	4668      	mov	r0, sp
 801dcd6:	f7f7 fe27 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dcda:	4631      	mov	r1, r6
 801dcdc:	a802      	add	r0, sp, #8
 801dcde:	f7f7 fe67 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dce2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801dce6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801dcea:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801dcee:	4d28      	ldr	r5, [pc, #160]	; (801dd90 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801dcf0:	4e28      	ldr	r6, [pc, #160]	; (801dd94 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801dcf2:	6828      	ldr	r0, [r5, #0]
 801dcf4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801dcf8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801dcfc:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dd00:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dd04:	f8bd 1000 	ldrh.w	r1, [sp]
 801dd08:	440a      	add	r2, r1
 801dd0a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801dd0e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801dd12:	4413      	add	r3, r2
 801dd14:	f8ad 300a 	strh.w	r3, [sp, #10]
 801dd18:	6803      	ldr	r3, [r0, #0]
 801dd1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dd1c:	4798      	blx	r3
 801dd1e:	8833      	ldrh	r3, [r6, #0]
 801dd20:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801dd24:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801dd28:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801dd98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801dd2c:	fb03 1202 	mla	r2, r3, r2, r1
 801dd30:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dd34:	fb08 f303 	mul.w	r3, r8, r3
 801dd38:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dd3c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801dd40:	4298      	cmp	r0, r3
 801dd42:	d21d      	bcs.n	801dd80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801dd44:	eb00 080c 	add.w	r8, r0, ip
 801dd48:	4540      	cmp	r0, r8
 801dd4a:	d20f      	bcs.n	801dd6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801dd4c:	f854 1b04 	ldr.w	r1, [r4], #4
 801dd50:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801dd54:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801dd58:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dd5c:	ea42 0209 	orr.w	r2, r2, r9
 801dd60:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801dd64:	430a      	orrs	r2, r1
 801dd66:	f820 2b02 	strh.w	r2, [r0], #2
 801dd6a:	e7ed      	b.n	801dd48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801dd6c:	8832      	ldrh	r2, [r6, #0]
 801dd6e:	1bd2      	subs	r2, r2, r7
 801dd70:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dd74:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801dd78:	1bd2      	subs	r2, r2, r7
 801dd7a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801dd7e:	e7df      	b.n	801dd40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801dd80:	6828      	ldr	r0, [r5, #0]
 801dd82:	6803      	ldr	r3, [r0, #0]
 801dd84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dd86:	4798      	blx	r3
 801dd88:	b005      	add	sp, #20
 801dd8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dd8e:	bf00      	nop
 801dd90:	200132bc 	.word	0x200132bc
 801dd94:	200132b6 	.word	0x200132b6
 801dd98:	fffff800 	.word	0xfffff800

0801dd9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801dd9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dda0:	460e      	mov	r6, r1
 801dda2:	b08e      	sub	sp, #56	; 0x38
 801dda4:	4604      	mov	r4, r0
 801dda6:	6808      	ldr	r0, [r1, #0]
 801dda8:	6849      	ldr	r1, [r1, #4]
 801ddaa:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801df84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801ddae:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801df88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801ddb2:	461d      	mov	r5, r3
 801ddb4:	ab0a      	add	r3, sp, #40	; 0x28
 801ddb6:	c303      	stmia	r3!, {r0, r1}
 801ddb8:	6810      	ldr	r0, [r2, #0]
 801ddba:	6851      	ldr	r1, [r2, #4]
 801ddbc:	ab0c      	add	r3, sp, #48	; 0x30
 801ddbe:	c303      	stmia	r3!, {r0, r1}
 801ddc0:	a80a      	add	r0, sp, #40	; 0x28
 801ddc2:	f7f7 fdb1 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ddc6:	4631      	mov	r1, r6
 801ddc8:	a80c      	add	r0, sp, #48	; 0x30
 801ddca:	f7f7 fdf1 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ddce:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ddd2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801ddd6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ddda:	f8d8 0000 	ldr.w	r0, [r8]
 801ddde:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801dde2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801dde6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ddea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ddee:	440c      	add	r4, r1
 801ddf0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801ddf4:	440a      	add	r2, r1
 801ddf6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801ddfa:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801ddfe:	4413      	add	r3, r2
 801de00:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801de04:	6803      	ldr	r3, [r0, #0]
 801de06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801de08:	4798      	blx	r3
 801de0a:	2dff      	cmp	r5, #255	; 0xff
 801de0c:	d124      	bne.n	801de58 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801de0e:	f010 0f01 	tst.w	r0, #1
 801de12:	f8d8 0000 	ldr.w	r0, [r8]
 801de16:	d022      	beq.n	801de5e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801de18:	2100      	movs	r1, #0
 801de1a:	f8d0 c000 	ldr.w	ip, [r0]
 801de1e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801de22:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801de26:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801de2a:	f04f 0e01 	mov.w	lr, #1
 801de2e:	f8cd e018 	str.w	lr, [sp, #24]
 801de32:	f8b9 e000 	ldrh.w	lr, [r9]
 801de36:	9503      	str	r5, [sp, #12]
 801de38:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801de3c:	b2b6      	uxth	r6, r6
 801de3e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801de42:	9102      	str	r1, [sp, #8]
 801de44:	b2bf      	uxth	r7, r7
 801de46:	9601      	str	r6, [sp, #4]
 801de48:	9700      	str	r7, [sp, #0]
 801de4a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801de4e:	4621      	mov	r1, r4
 801de50:	47a8      	blx	r5
 801de52:	b00e      	add	sp, #56	; 0x38
 801de54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801de58:	f010 0f04 	tst.w	r0, #4
 801de5c:	e7d9      	b.n	801de12 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801de5e:	6803      	ldr	r3, [r0, #0]
 801de60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801de62:	4798      	blx	r3
 801de64:	f8b9 3000 	ldrh.w	r3, [r9]
 801de68:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801de6c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801de70:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801de74:	fb03 1202 	mla	r2, r3, r2, r1
 801de78:	ebac 0c07 	sub.w	ip, ip, r7
 801de7c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801de80:	435e      	muls	r6, r3
 801de82:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801de86:	2dff      	cmp	r5, #255	; 0xff
 801de88:	eba3 0707 	sub.w	r7, r3, r7
 801de8c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801de90:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801de94:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801de98:	d049      	beq.n	801df2e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801de9a:	43eb      	mvns	r3, r5
 801de9c:	fa1f f985 	uxth.w	r9, r5
 801dea0:	b2db      	uxtb	r3, r3
 801dea2:	42b0      	cmp	r0, r6
 801dea4:	d266      	bcs.n	801df74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801dea6:	eb00 0a0e 	add.w	sl, r0, lr
 801deaa:	4550      	cmp	r0, sl
 801deac:	4621      	mov	r1, r4
 801deae:	f104 0403 	add.w	r4, r4, #3
 801deb2:	d25b      	bcs.n	801df6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801deb4:	8802      	ldrh	r2, [r0, #0]
 801deb6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801deba:	ea4f 2822 	mov.w	r8, r2, asr #8
 801debe:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801dec2:	fb11 f109 	smulbb	r1, r1, r9
 801dec6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801deca:	10d5      	asrs	r5, r2, #3
 801decc:	fb08 1803 	mla	r8, r8, r3, r1
 801ded0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ded4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ded8:	fb11 f109 	smulbb	r1, r1, r9
 801dedc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dee0:	fb05 1503 	mla	r5, r5, r3, r1
 801dee4:	00d2      	lsls	r2, r2, #3
 801dee6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801deea:	b2d2      	uxtb	r2, r2
 801deec:	fb11 f109 	smulbb	r1, r1, r9
 801def0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801def4:	fa1f f888 	uxth.w	r8, r8
 801def8:	fb02 1203 	mla	r2, r2, r3, r1
 801defc:	b292      	uxth	r2, r2
 801defe:	f108 0101 	add.w	r1, r8, #1
 801df02:	b2ad      	uxth	r5, r5
 801df04:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801df08:	1c51      	adds	r1, r2, #1
 801df0a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801df0e:	1c69      	adds	r1, r5, #1
 801df10:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801df14:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801df18:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801df1c:	096d      	lsrs	r5, r5, #5
 801df1e:	ea42 0208 	orr.w	r2, r2, r8
 801df22:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801df26:	432a      	orrs	r2, r5
 801df28:	f820 2b02 	strh.w	r2, [r0], #2
 801df2c:	e7bd      	b.n	801deaa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801df2e:	4a14      	ldr	r2, [pc, #80]	; (801df80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801df30:	42b0      	cmp	r0, r6
 801df32:	d21f      	bcs.n	801df74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801df34:	eb00 050e 	add.w	r5, r0, lr
 801df38:	42a8      	cmp	r0, r5
 801df3a:	4621      	mov	r1, r4
 801df3c:	f104 0403 	add.w	r4, r4, #3
 801df40:	d210      	bcs.n	801df64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801df42:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801df46:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801df4a:	00db      	lsls	r3, r3, #3
 801df4c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801df50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801df54:	430b      	orrs	r3, r1
 801df56:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801df5a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801df5e:	f820 3b02 	strh.w	r3, [r0], #2
 801df62:	e7e9      	b.n	801df38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801df64:	4438      	add	r0, r7
 801df66:	eb01 040c 	add.w	r4, r1, ip
 801df6a:	e7e1      	b.n	801df30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801df6c:	4438      	add	r0, r7
 801df6e:	eb01 040c 	add.w	r4, r1, ip
 801df72:	e796      	b.n	801dea2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801df74:	4b03      	ldr	r3, [pc, #12]	; (801df84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801df76:	6818      	ldr	r0, [r3, #0]
 801df78:	6803      	ldr	r3, [r0, #0]
 801df7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801df7c:	4798      	blx	r3
 801df7e:	e768      	b.n	801de52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801df80:	fffff800 	.word	0xfffff800
 801df84:	200132bc 	.word	0x200132bc
 801df88:	200132b6 	.word	0x200132b6

0801df8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801df8c:	b4f0      	push	{r4, r5, r6, r7}
 801df8e:	4616      	mov	r6, r2
 801df90:	2e01      	cmp	r6, #1
 801df92:	461c      	mov	r4, r3
 801df94:	460d      	mov	r5, r1
 801df96:	9a04      	ldr	r2, [sp, #16]
 801df98:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801df9c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801dfa0:	d012      	beq.n	801dfc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801dfa2:	d303      	bcc.n	801dfac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801dfa4:	2e02      	cmp	r6, #2
 801dfa6:	d00a      	beq.n	801dfbe <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801dfa8:	bcf0      	pop	{r4, r5, r6, r7}
 801dfaa:	4770      	bx	lr
 801dfac:	6805      	ldr	r5, [r0, #0]
 801dfae:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801dfb2:	68ed      	ldr	r5, [r5, #12]
 801dfb4:	4613      	mov	r3, r2
 801dfb6:	46ac      	mov	ip, r5
 801dfb8:	4622      	mov	r2, r4
 801dfba:	bcf0      	pop	{r4, r5, r6, r7}
 801dfbc:	4760      	bx	ip
 801dfbe:	4621      	mov	r1, r4
 801dfc0:	4628      	mov	r0, r5
 801dfc2:	bcf0      	pop	{r4, r5, r6, r7}
 801dfc4:	f7ff bd94 	b.w	801daf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dfc8:	4621      	mov	r1, r4
 801dfca:	4628      	mov	r0, r5
 801dfcc:	bcf0      	pop	{r4, r5, r6, r7}
 801dfce:	f7ff bee5 	b.w	801dd9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801dfd4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801dfd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfd8:	4681      	mov	r9, r0
 801dfda:	b093      	sub	sp, #76	; 0x4c
 801dfdc:	6810      	ldr	r0, [r2, #0]
 801dfde:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801dfe2:	4f6d      	ldr	r7, [pc, #436]	; (801e198 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801dfe4:	4688      	mov	r8, r1
 801dfe6:	6851      	ldr	r1, [r2, #4]
 801dfe8:	ac0e      	add	r4, sp, #56	; 0x38
 801dfea:	c403      	stmia	r4!, {r0, r1}
 801dfec:	6818      	ldr	r0, [r3, #0]
 801dfee:	6859      	ldr	r1, [r3, #4]
 801dff0:	ac10      	add	r4, sp, #64	; 0x40
 801dff2:	4616      	mov	r6, r2
 801dff4:	c403      	stmia	r4!, {r0, r1}
 801dff6:	a80e      	add	r0, sp, #56	; 0x38
 801dff8:	f7f7 fc96 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dffc:	4631      	mov	r1, r6
 801dffe:	a810      	add	r0, sp, #64	; 0x40
 801e000:	f7f7 fcd6 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e004:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801e008:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801e00c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801e010:	4e62      	ldr	r6, [pc, #392]	; (801e19c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e012:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801e016:	6830      	ldr	r0, [r6, #0]
 801e018:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801e01c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e020:	4489      	add	r9, r1
 801e022:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801e026:	440a      	add	r2, r1
 801e028:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801e02c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e030:	4413      	add	r3, r2
 801e032:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801e036:	6803      	ldr	r3, [r0, #0]
 801e038:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e03a:	4798      	blx	r3
 801e03c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e040:	6830      	ldr	r0, [r6, #0]
 801e042:	d01d      	beq.n	801e080 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e044:	2200      	movs	r2, #0
 801e046:	6801      	ldr	r1, [r0, #0]
 801e048:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801e04c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e050:	220b      	movs	r2, #11
 801e052:	9207      	str	r2, [sp, #28]
 801e054:	883a      	ldrh	r2, [r7, #0]
 801e056:	9206      	str	r2, [sp, #24]
 801e058:	2201      	movs	r2, #1
 801e05a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e05e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801e062:	9203      	str	r2, [sp, #12]
 801e064:	b2a4      	uxth	r4, r4
 801e066:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e06a:	9200      	str	r2, [sp, #0]
 801e06c:	b2ad      	uxth	r5, r5
 801e06e:	9502      	str	r5, [sp, #8]
 801e070:	9401      	str	r4, [sp, #4]
 801e072:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801e074:	4642      	mov	r2, r8
 801e076:	4649      	mov	r1, r9
 801e078:	47a0      	blx	r4
 801e07a:	b013      	add	sp, #76	; 0x4c
 801e07c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e080:	6803      	ldr	r3, [r0, #0]
 801e082:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e084:	4798      	blx	r3
 801e086:	883b      	ldrh	r3, [r7, #0]
 801e088:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e08c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e090:	fb03 1202 	mla	r2, r3, r2, r1
 801e094:	435d      	muls	r5, r3
 801e096:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e09a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e09e:	920c      	str	r2, [sp, #48]	; 0x30
 801e0a0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e0a4:	1b12      	subs	r2, r2, r4
 801e0a6:	920d      	str	r2, [sp, #52]	; 0x34
 801e0a8:	0062      	lsls	r2, r4, #1
 801e0aa:	1b1c      	subs	r4, r3, r4
 801e0ac:	0063      	lsls	r3, r4, #1
 801e0ae:	920a      	str	r2, [sp, #40]	; 0x28
 801e0b0:	930b      	str	r3, [sp, #44]	; 0x2c
 801e0b2:	f04f 0e04 	mov.w	lr, #4
 801e0b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e0b8:	4298      	cmp	r0, r3
 801e0ba:	d266      	bcs.n	801e18a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e0bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e0be:	eb00 0b03 	add.w	fp, r0, r3
 801e0c2:	4558      	cmp	r0, fp
 801e0c4:	d25c      	bcs.n	801e180 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e0c6:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e0ca:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e0ce:	f858 2003 	ldr.w	r2, [r8, r3]
 801e0d2:	0e11      	lsrs	r1, r2, #24
 801e0d4:	d012      	beq.n	801e0fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e0d6:	29ff      	cmp	r1, #255	; 0xff
 801e0d8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e0dc:	d110      	bne.n	801e100 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e0de:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e0e2:	d10d      	bne.n	801e100 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e0e4:	0953      	lsrs	r3, r2, #5
 801e0e6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801e0ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e0ee:	f027 0707 	bic.w	r7, r7, #7
 801e0f2:	431f      	orrs	r7, r3
 801e0f4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e0f8:	433a      	orrs	r2, r7
 801e0fa:	8002      	strh	r2, [r0, #0]
 801e0fc:	3002      	adds	r0, #2
 801e0fe:	e7e0      	b.n	801e0c2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e100:	fb0a f101 	mul.w	r1, sl, r1
 801e104:	8806      	ldrh	r6, [r0, #0]
 801e106:	1c4b      	adds	r3, r1, #1
 801e108:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e10c:	1235      	asrs	r5, r6, #8
 801e10e:	10f4      	asrs	r4, r6, #3
 801e110:	121b      	asrs	r3, r3, #8
 801e112:	00f6      	lsls	r6, r6, #3
 801e114:	b299      	uxth	r1, r3
 801e116:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e11a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e11e:	b2f6      	uxtb	r6, r6
 801e120:	43db      	mvns	r3, r3
 801e122:	b2d2      	uxtb	r2, r2
 801e124:	b2db      	uxtb	r3, r3
 801e126:	fb1c fc01 	smulbb	ip, ip, r1
 801e12a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e12e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e132:	fb12 f201 	smulbb	r2, r2, r1
 801e136:	fb05 c503 	mla	r5, r5, r3, ip
 801e13a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e13e:	b2ff      	uxtb	r7, r7
 801e140:	fb06 2203 	mla	r2, r6, r3, r2
 801e144:	b2ad      	uxth	r5, r5
 801e146:	fb17 f701 	smulbb	r7, r7, r1
 801e14a:	b292      	uxth	r2, r2
 801e14c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e150:	fb04 7403 	mla	r4, r4, r3, r7
 801e154:	f105 0c01 	add.w	ip, r5, #1
 801e158:	1c57      	adds	r7, r2, #1
 801e15a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e15e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e162:	b2a4      	uxth	r4, r4
 801e164:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e168:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e16c:	433d      	orrs	r5, r7
 801e16e:	1c67      	adds	r7, r4, #1
 801e170:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e174:	0964      	lsrs	r4, r4, #5
 801e176:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e17a:	4325      	orrs	r5, r4
 801e17c:	8005      	strh	r5, [r0, #0]
 801e17e:	e7bd      	b.n	801e0fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e180:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e182:	4418      	add	r0, r3
 801e184:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e186:	4499      	add	r9, r3
 801e188:	e795      	b.n	801e0b6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e18a:	4b04      	ldr	r3, [pc, #16]	; (801e19c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e18c:	6818      	ldr	r0, [r3, #0]
 801e18e:	6803      	ldr	r3, [r0, #0]
 801e190:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e192:	4798      	blx	r3
 801e194:	e771      	b.n	801e07a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e196:	bf00      	nop
 801e198:	200132b6 	.word	0x200132b6
 801e19c:	200132bc 	.word	0x200132bc

0801e1a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e1a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1a4:	b087      	sub	sp, #28
 801e1a6:	4680      	mov	r8, r0
 801e1a8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e1ac:	460d      	mov	r5, r1
 801e1ae:	4614      	mov	r4, r2
 801e1b0:	2e00      	cmp	r6, #0
 801e1b2:	f000 80b9 	beq.w	801e328 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e1b6:	6810      	ldr	r0, [r2, #0]
 801e1b8:	6851      	ldr	r1, [r2, #4]
 801e1ba:	af02      	add	r7, sp, #8
 801e1bc:	c703      	stmia	r7!, {r0, r1}
 801e1be:	6818      	ldr	r0, [r3, #0]
 801e1c0:	6859      	ldr	r1, [r3, #4]
 801e1c2:	af04      	add	r7, sp, #16
 801e1c4:	c703      	stmia	r7!, {r0, r1}
 801e1c6:	a802      	add	r0, sp, #8
 801e1c8:	f7f7 fbae 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e1cc:	4621      	mov	r1, r4
 801e1ce:	a804      	add	r0, sp, #16
 801e1d0:	f7f7 fbee 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e1d4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e1d8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e1dc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e1e0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e1e4:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e1e8:	eb08 0401 	add.w	r4, r8, r1
 801e1ec:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e1f0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e1f4:	440a      	add	r2, r1
 801e1f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e1fa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e1fe:	4413      	add	r3, r2
 801e200:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e204:	4b4a      	ldr	r3, [pc, #296]	; (801e330 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e206:	6818      	ldr	r0, [r3, #0]
 801e208:	6803      	ldr	r3, [r0, #0]
 801e20a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e20c:	4798      	blx	r3
 801e20e:	4b49      	ldr	r3, [pc, #292]	; (801e334 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e210:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e214:	881a      	ldrh	r2, [r3, #0]
 801e216:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e21a:	2eff      	cmp	r6, #255	; 0xff
 801e21c:	fb02 c101 	mla	r1, r2, r1, ip
 801e220:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e224:	fb02 f207 	mul.w	r2, r2, r7
 801e228:	f105 0104 	add.w	r1, r5, #4
 801e22c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e230:	461d      	mov	r5, r3
 801e232:	d05a      	beq.n	801e2ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e234:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e238:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e23c:	b2b6      	uxth	r6, r6
 801e23e:	fa1f fe8e 	uxth.w	lr, lr
 801e242:	9301      	str	r3, [sp, #4]
 801e244:	4282      	cmp	r2, r0
 801e246:	d96a      	bls.n	801e31e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e248:	eb00 0b0a 	add.w	fp, r0, sl
 801e24c:	4583      	cmp	fp, r0
 801e24e:	d940      	bls.n	801e2d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e250:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e254:	8805      	ldrh	r5, [r0, #0]
 801e256:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e25a:	122f      	asrs	r7, r5, #8
 801e25c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e260:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e264:	fb17 f70e 	smulbb	r7, r7, lr
 801e268:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e26c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e270:	00ed      	lsls	r5, r5, #3
 801e272:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e276:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e27a:	10df      	asrs	r7, r3, #3
 801e27c:	b2ed      	uxtb	r5, r5
 801e27e:	00db      	lsls	r3, r3, #3
 801e280:	fa1f fc8c 	uxth.w	ip, ip
 801e284:	fb19 f90e 	smulbb	r9, r9, lr
 801e288:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e28c:	b2db      	uxtb	r3, r3
 801e28e:	fb15 f50e 	smulbb	r5, r5, lr
 801e292:	fb07 9706 	mla	r7, r7, r6, r9
 801e296:	fb03 5306 	mla	r3, r3, r6, r5
 801e29a:	f10c 0901 	add.w	r9, ip, #1
 801e29e:	b29b      	uxth	r3, r3
 801e2a0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e2a4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e2a8:	f103 0c01 	add.w	ip, r3, #1
 801e2ac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e2b0:	b2bf      	uxth	r7, r7
 801e2b2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e2b6:	ea4c 0c09 	orr.w	ip, ip, r9
 801e2ba:	f107 0901 	add.w	r9, r7, #1
 801e2be:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e2c2:	097f      	lsrs	r7, r7, #5
 801e2c4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e2c8:	ea4c 0c07 	orr.w	ip, ip, r7
 801e2cc:	f820 cb02 	strh.w	ip, [r0], #2
 801e2d0:	e7bc      	b.n	801e24c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e2d2:	9b01      	ldr	r3, [sp, #4]
 801e2d4:	881b      	ldrh	r3, [r3, #0]
 801e2d6:	eba3 0308 	sub.w	r3, r3, r8
 801e2da:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e2de:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e2e2:	eba3 0308 	sub.w	r3, r3, r8
 801e2e6:	441c      	add	r4, r3
 801e2e8:	e7ac      	b.n	801e244 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e2ea:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e2ee:	4282      	cmp	r2, r0
 801e2f0:	d915      	bls.n	801e31e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e2f2:	eb00 060a 	add.w	r6, r0, sl
 801e2f6:	4286      	cmp	r6, r0
 801e2f8:	d906      	bls.n	801e308 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e2fa:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e2fe:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e302:	f820 3b02 	strh.w	r3, [r0], #2
 801e306:	e7f6      	b.n	801e2f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e308:	882b      	ldrh	r3, [r5, #0]
 801e30a:	eba3 0308 	sub.w	r3, r3, r8
 801e30e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e312:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e316:	eba3 0308 	sub.w	r3, r3, r8
 801e31a:	441c      	add	r4, r3
 801e31c:	e7e7      	b.n	801e2ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e31e:	4b04      	ldr	r3, [pc, #16]	; (801e330 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e320:	6818      	ldr	r0, [r3, #0]
 801e322:	6803      	ldr	r3, [r0, #0]
 801e324:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e326:	4798      	blx	r3
 801e328:	b007      	add	sp, #28
 801e32a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e32e:	bf00      	nop
 801e330:	200132bc 	.word	0x200132bc
 801e334:	200132b6 	.word	0x200132b6

0801e338 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e33c:	b091      	sub	sp, #68	; 0x44
 801e33e:	4680      	mov	r8, r0
 801e340:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e344:	460f      	mov	r7, r1
 801e346:	4614      	mov	r4, r2
 801e348:	2d00      	cmp	r5, #0
 801e34a:	d051      	beq.n	801e3f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e34c:	6810      	ldr	r0, [r2, #0]
 801e34e:	6851      	ldr	r1, [r2, #4]
 801e350:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e554 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e354:	ae0c      	add	r6, sp, #48	; 0x30
 801e356:	c603      	stmia	r6!, {r0, r1}
 801e358:	6818      	ldr	r0, [r3, #0]
 801e35a:	6859      	ldr	r1, [r3, #4]
 801e35c:	ae0e      	add	r6, sp, #56	; 0x38
 801e35e:	c603      	stmia	r6!, {r0, r1}
 801e360:	a80c      	add	r0, sp, #48	; 0x30
 801e362:	f7f7 fae1 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e366:	4621      	mov	r1, r4
 801e368:	a80e      	add	r0, sp, #56	; 0x38
 801e36a:	f7f7 fb21 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e36e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e372:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e376:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e37a:	f8d9 0000 	ldr.w	r0, [r9]
 801e37e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e382:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e386:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e38a:	eb08 0401 	add.w	r4, r8, r1
 801e38e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e392:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e558 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e396:	440a      	add	r2, r1
 801e398:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e39c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e3a0:	4413      	add	r3, r2
 801e3a2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e3a6:	6803      	ldr	r3, [r0, #0]
 801e3a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e3aa:	4798      	blx	r3
 801e3ac:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e3b0:	f8d9 0000 	ldr.w	r0, [r9]
 801e3b4:	d01f      	beq.n	801e3f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e3b6:	2200      	movs	r2, #0
 801e3b8:	6801      	ldr	r1, [r0, #0]
 801e3ba:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e3be:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e3c2:	220b      	movs	r2, #11
 801e3c4:	9207      	str	r2, [sp, #28]
 801e3c6:	f8b8 2000 	ldrh.w	r2, [r8]
 801e3ca:	9206      	str	r2, [sp, #24]
 801e3cc:	2201      	movs	r2, #1
 801e3ce:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e3d2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e3d6:	9203      	str	r2, [sp, #12]
 801e3d8:	fa1f f28a 	uxth.w	r2, sl
 801e3dc:	9202      	str	r2, [sp, #8]
 801e3de:	b2b6      	uxth	r6, r6
 801e3e0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e3e4:	9200      	str	r2, [sp, #0]
 801e3e6:	9601      	str	r6, [sp, #4]
 801e3e8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e3ea:	463a      	mov	r2, r7
 801e3ec:	4621      	mov	r1, r4
 801e3ee:	47a8      	blx	r5
 801e3f0:	b011      	add	sp, #68	; 0x44
 801e3f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3f6:	6803      	ldr	r3, [r0, #0]
 801e3f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e3fa:	4798      	blx	r3
 801e3fc:	f8b8 2000 	ldrh.w	r2, [r8]
 801e400:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e404:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e408:	2dff      	cmp	r5, #255	; 0xff
 801e40a:	fb02 1303 	mla	r3, r2, r3, r1
 801e40e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e412:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e416:	fb0a fa02 	mul.w	sl, sl, r2
 801e41a:	d062      	beq.n	801e4e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e41c:	ea6f 0c05 	mvn.w	ip, r5
 801e420:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e424:	930a      	str	r3, [sp, #40]	; 0x28
 801e426:	b2ad      	uxth	r5, r5
 801e428:	fa5f fc8c 	uxtb.w	ip, ip
 801e42c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e430:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e432:	4298      	cmp	r0, r3
 801e434:	f080 8085 	bcs.w	801e542 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e438:	eb00 0b09 	add.w	fp, r0, r9
 801e43c:	4558      	cmp	r0, fp
 801e43e:	d246      	bcs.n	801e4ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e440:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e444:	2303      	movs	r3, #3
 801e446:	2204      	movs	r2, #4
 801e448:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e44c:	eb07 0a0e 	add.w	sl, r7, lr
 801e450:	8803      	ldrh	r3, [r0, #0]
 801e452:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e456:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e45a:	1219      	asrs	r1, r3, #8
 801e45c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e460:	fb18 f805 	smulbb	r8, r8, r5
 801e464:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e468:	10da      	asrs	r2, r3, #3
 801e46a:	fb01 810c 	mla	r1, r1, ip, r8
 801e46e:	00db      	lsls	r3, r3, #3
 801e470:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e474:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e478:	b2db      	uxtb	r3, r3
 801e47a:	fb18 f805 	smulbb	r8, r8, r5
 801e47e:	fb1e fe05 	smulbb	lr, lr, r5
 801e482:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e486:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e48a:	b289      	uxth	r1, r1
 801e48c:	fb02 820c 	mla	r2, r2, ip, r8
 801e490:	fb03 e30c 	mla	r3, r3, ip, lr
 801e494:	b292      	uxth	r2, r2
 801e496:	b29b      	uxth	r3, r3
 801e498:	f101 0801 	add.w	r8, r1, #1
 801e49c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e4a0:	f103 0e01 	add.w	lr, r3, #1
 801e4a4:	f102 0801 	add.w	r8, r2, #1
 801e4a8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e4ac:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e4b0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e4b4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e4b8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e4bc:	ea4e 0101 	orr.w	r1, lr, r1
 801e4c0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e4c4:	ea41 0108 	orr.w	r1, r1, r8
 801e4c8:	f820 1b02 	strh.w	r1, [r0], #2
 801e4cc:	e7b6      	b.n	801e43c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e4ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e4d0:	881b      	ldrh	r3, [r3, #0]
 801e4d2:	1b9b      	subs	r3, r3, r6
 801e4d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e4d8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e4dc:	1b9b      	subs	r3, r3, r6
 801e4de:	441c      	add	r4, r3
 801e4e0:	e7a6      	b.n	801e430 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e4e2:	491b      	ldr	r1, [pc, #108]	; (801e550 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e4e4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e4e8:	2203      	movs	r2, #3
 801e4ea:	2504      	movs	r5, #4
 801e4ec:	4550      	cmp	r0, sl
 801e4ee:	d228      	bcs.n	801e542 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e4f0:	eb00 0c09 	add.w	ip, r0, r9
 801e4f4:	4560      	cmp	r0, ip
 801e4f6:	4623      	mov	r3, r4
 801e4f8:	d219      	bcs.n	801e52e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e4fa:	f893 e000 	ldrb.w	lr, [r3]
 801e4fe:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e502:	eb07 0b0e 	add.w	fp, r7, lr
 801e506:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e50a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e50e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e512:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e516:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e51a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e51e:	ea43 030b 	orr.w	r3, r3, fp
 801e522:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e526:	3401      	adds	r4, #1
 801e528:	f820 3b02 	strh.w	r3, [r0], #2
 801e52c:	e7e2      	b.n	801e4f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e52e:	f8b8 3000 	ldrh.w	r3, [r8]
 801e532:	1b9b      	subs	r3, r3, r6
 801e534:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e538:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e53c:	1b9b      	subs	r3, r3, r6
 801e53e:	441c      	add	r4, r3
 801e540:	e7d4      	b.n	801e4ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e542:	4b04      	ldr	r3, [pc, #16]	; (801e554 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e544:	6818      	ldr	r0, [r3, #0]
 801e546:	6803      	ldr	r3, [r0, #0]
 801e548:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e54a:	4798      	blx	r3
 801e54c:	e750      	b.n	801e3f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e54e:	bf00      	nop
 801e550:	fffff800 	.word	0xfffff800
 801e554:	200132bc 	.word	0x200132bc
 801e558:	200132b6 	.word	0x200132b6

0801e55c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e55c:	b4f0      	push	{r4, r5, r6, r7}
 801e55e:	460c      	mov	r4, r1
 801e560:	4611      	mov	r1, r2
 801e562:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e566:	780f      	ldrb	r7, [r1, #0]
 801e568:	784e      	ldrb	r6, [r1, #1]
 801e56a:	2f01      	cmp	r7, #1
 801e56c:	461a      	mov	r2, r3
 801e56e:	9b04      	ldr	r3, [sp, #16]
 801e570:	d036      	beq.n	801e5e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e572:	d31e      	bcc.n	801e5b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e574:	2f02      	cmp	r7, #2
 801e576:	d14a      	bne.n	801e60e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e578:	2e03      	cmp	r6, #3
 801e57a:	d848      	bhi.n	801e60e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e57c:	e8df f006 	tbb	[pc, r6]
 801e580:	16140702 	.word	0x16140702
 801e584:	9504      	str	r5, [sp, #16]
 801e586:	4620      	mov	r0, r4
 801e588:	bcf0      	pop	{r4, r5, r6, r7}
 801e58a:	f7ff be09 	b.w	801e1a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e58e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e590:	2800      	cmp	r0, #0
 801e592:	d03c      	beq.n	801e60e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e594:	6806      	ldr	r6, [r0, #0]
 801e596:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e59a:	68b5      	ldr	r5, [r6, #8]
 801e59c:	4613      	mov	r3, r2
 801e59e:	46ac      	mov	ip, r5
 801e5a0:	460a      	mov	r2, r1
 801e5a2:	4621      	mov	r1, r4
 801e5a4:	bcf0      	pop	{r4, r5, r6, r7}
 801e5a6:	4760      	bx	ip
 801e5a8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e5aa:	e7f1      	b.n	801e590 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e5ac:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e5b0:	e7ee      	b.n	801e590 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e5b2:	2e03      	cmp	r6, #3
 801e5b4:	d82b      	bhi.n	801e60e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e5b6:	e8df f006 	tbb	[pc, r6]
 801e5ba:	0702      	.short	0x0702
 801e5bc:	100e      	.short	0x100e
 801e5be:	9504      	str	r5, [sp, #16]
 801e5c0:	4620      	mov	r0, r4
 801e5c2:	bcf0      	pop	{r4, r5, r6, r7}
 801e5c4:	f7ff bd06 	b.w	801dfd4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e5c8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e5ca:	b300      	cbz	r0, 801e60e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e5cc:	6806      	ldr	r6, [r0, #0]
 801e5ce:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e5d2:	68f5      	ldr	r5, [r6, #12]
 801e5d4:	e7e2      	b.n	801e59c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e5d6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e5d8:	e7f7      	b.n	801e5ca <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e5da:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e5de:	e7f4      	b.n	801e5ca <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e5e0:	2e03      	cmp	r6, #3
 801e5e2:	d814      	bhi.n	801e60e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e5e4:	e8df f006 	tbb	[pc, r6]
 801e5e8:	100e0702 	.word	0x100e0702
 801e5ec:	9504      	str	r5, [sp, #16]
 801e5ee:	4620      	mov	r0, r4
 801e5f0:	bcf0      	pop	{r4, r5, r6, r7}
 801e5f2:	f7ff bea1 	b.w	801e338 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e5f6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e5f8:	b148      	cbz	r0, 801e60e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e5fa:	6806      	ldr	r6, [r0, #0]
 801e5fc:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e600:	6935      	ldr	r5, [r6, #16]
 801e602:	e7cb      	b.n	801e59c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e604:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e606:	e7f7      	b.n	801e5f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e608:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e60c:	e7f4      	b.n	801e5f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e60e:	bcf0      	pop	{r4, r5, r6, r7}
 801e610:	4770      	bx	lr
	...

0801e614 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e618:	4604      	mov	r4, r0
 801e61a:	b087      	sub	sp, #28
 801e61c:	6810      	ldr	r0, [r2, #0]
 801e61e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e622:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801e85c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e626:	460e      	mov	r6, r1
 801e628:	6851      	ldr	r1, [r2, #4]
 801e62a:	ad02      	add	r5, sp, #8
 801e62c:	c503      	stmia	r5!, {r0, r1}
 801e62e:	6818      	ldr	r0, [r3, #0]
 801e630:	6859      	ldr	r1, [r3, #4]
 801e632:	ad04      	add	r5, sp, #16
 801e634:	4617      	mov	r7, r2
 801e636:	c503      	stmia	r5!, {r0, r1}
 801e638:	a802      	add	r0, sp, #8
 801e63a:	f7f7 f975 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e63e:	4639      	mov	r1, r7
 801e640:	a804      	add	r0, sp, #16
 801e642:	f7f7 f9b5 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e646:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e64a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e64e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e652:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e656:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e65a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e65e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e662:	440e      	add	r6, r1
 801e664:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e668:	440a      	add	r2, r1
 801e66a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e66e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e672:	4413      	add	r3, r2
 801e674:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e678:	4b77      	ldr	r3, [pc, #476]	; (801e858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e67a:	6818      	ldr	r0, [r3, #0]
 801e67c:	6803      	ldr	r3, [r0, #0]
 801e67e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e680:	4798      	blx	r3
 801e682:	f8b9 b000 	ldrh.w	fp, [r9]
 801e686:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e68a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e68e:	fb0b 2303 	mla	r3, fp, r3, r2
 801e692:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e696:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e69a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e69e:	fb05 f50b 	mul.w	r5, r5, fp
 801e6a2:	9300      	str	r3, [sp, #0]
 801e6a4:	d069      	beq.n	801e77a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e6a6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e6aa:	4558      	cmp	r0, fp
 801e6ac:	f080 80cc 	bcs.w	801e848 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e6b0:	9b00      	ldr	r3, [sp, #0]
 801e6b2:	18c3      	adds	r3, r0, r3
 801e6b4:	9301      	str	r3, [sp, #4]
 801e6b6:	4631      	mov	r1, r6
 801e6b8:	9b01      	ldr	r3, [sp, #4]
 801e6ba:	4298      	cmp	r0, r3
 801e6bc:	d24f      	bcs.n	801e75e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e6be:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e6c2:	2a00      	cmp	r2, #0
 801e6c4:	d048      	beq.n	801e758 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e6c6:	fb0a f202 	mul.w	r2, sl, r2
 801e6ca:	1c53      	adds	r3, r2, #1
 801e6cc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e6d0:	121b      	asrs	r3, r3, #8
 801e6d2:	d041      	beq.n	801e758 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e6d4:	8802      	ldrh	r2, [r0, #0]
 801e6d6:	f8b4 c000 	ldrh.w	ip, [r4]
 801e6da:	b29e      	uxth	r6, r3
 801e6dc:	1215      	asrs	r5, r2, #8
 801e6de:	43db      	mvns	r3, r3
 801e6e0:	b2db      	uxtb	r3, r3
 801e6e2:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e6e6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e6ea:	fb15 f503 	smulbb	r5, r5, r3
 801e6ee:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e6f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e6f6:	00d2      	lsls	r2, r2, #3
 801e6f8:	fb07 5706 	mla	r7, r7, r6, r5
 801e6fc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e700:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e704:	b2d2      	uxtb	r2, r2
 801e706:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e70a:	b2bf      	uxth	r7, r7
 801e70c:	fb1e fe03 	smulbb	lr, lr, r3
 801e710:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e714:	fa5f fc8c 	uxtb.w	ip, ip
 801e718:	fb12 f203 	smulbb	r2, r2, r3
 801e71c:	fb05 e506 	mla	r5, r5, r6, lr
 801e720:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e724:	f107 0e01 	add.w	lr, r7, #1
 801e728:	fa1f fc8c 	uxth.w	ip, ip
 801e72c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e730:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e734:	f10c 0701 	add.w	r7, ip, #1
 801e738:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e73c:	b2ad      	uxth	r5, r5
 801e73e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e742:	ea47 070e 	orr.w	r7, r7, lr
 801e746:	f105 0e01 	add.w	lr, r5, #1
 801e74a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e74e:	096d      	lsrs	r5, r5, #5
 801e750:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e754:	432f      	orrs	r7, r5
 801e756:	8007      	strh	r7, [r0, #0]
 801e758:	3002      	adds	r0, #2
 801e75a:	3402      	adds	r4, #2
 801e75c:	e7ac      	b.n	801e6b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e75e:	f8b9 3000 	ldrh.w	r3, [r9]
 801e762:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e766:	eba3 0308 	sub.w	r3, r3, r8
 801e76a:	eba6 0608 	sub.w	r6, r6, r8
 801e76e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e772:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e776:	440e      	add	r6, r1
 801e778:	e797      	b.n	801e6aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e77a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e77e:	42a8      	cmp	r0, r5
 801e780:	d262      	bcs.n	801e848 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e782:	9b00      	ldr	r3, [sp, #0]
 801e784:	4631      	mov	r1, r6
 801e786:	eb00 0b03 	add.w	fp, r0, r3
 801e78a:	4558      	cmp	r0, fp
 801e78c:	d24e      	bcs.n	801e82c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801e78e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e792:	b12b      	cbz	r3, 801e7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e794:	2bff      	cmp	r3, #255	; 0xff
 801e796:	f8b4 e000 	ldrh.w	lr, [r4]
 801e79a:	d104      	bne.n	801e7a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801e79c:	f8a0 e000 	strh.w	lr, [r0]
 801e7a0:	3002      	adds	r0, #2
 801e7a2:	3402      	adds	r4, #2
 801e7a4:	e7f1      	b.n	801e78a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801e7a6:	8802      	ldrh	r2, [r0, #0]
 801e7a8:	b29f      	uxth	r7, r3
 801e7aa:	1216      	asrs	r6, r2, #8
 801e7ac:	43db      	mvns	r3, r3
 801e7ae:	b2db      	uxtb	r3, r3
 801e7b0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e7b4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e7b8:	fb16 f603 	smulbb	r6, r6, r3
 801e7bc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801e7c0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e7c4:	00d2      	lsls	r2, r2, #3
 801e7c6:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e7ca:	b2d2      	uxtb	r2, r2
 801e7cc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e7d0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e7d4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e7d8:	fb1a fa03 	smulbb	sl, sl, r3
 801e7dc:	fa1f fc8c 	uxth.w	ip, ip
 801e7e0:	fb12 f303 	smulbb	r3, r2, r3
 801e7e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e7e8:	fa5f fe8e 	uxtb.w	lr, lr
 801e7ec:	fb06 a607 	mla	r6, r6, r7, sl
 801e7f0:	f10c 0201 	add.w	r2, ip, #1
 801e7f4:	fb0e 3307 	mla	r3, lr, r7, r3
 801e7f8:	b2b6      	uxth	r6, r6
 801e7fa:	b29b      	uxth	r3, r3
 801e7fc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e800:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801e804:	f106 0a01 	add.w	sl, r6, #1
 801e808:	f103 0c01 	add.w	ip, r3, #1
 801e80c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e810:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e814:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e818:	0976      	lsrs	r6, r6, #5
 801e81a:	ea4c 0c02 	orr.w	ip, ip, r2
 801e81e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e822:	ea4c 0c06 	orr.w	ip, ip, r6
 801e826:	f8a0 c000 	strh.w	ip, [r0]
 801e82a:	e7b9      	b.n	801e7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e82c:	f8b9 3000 	ldrh.w	r3, [r9]
 801e830:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e834:	eba3 0308 	sub.w	r3, r3, r8
 801e838:	eba6 0608 	sub.w	r6, r6, r8
 801e83c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e840:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e844:	440e      	add	r6, r1
 801e846:	e79a      	b.n	801e77e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801e848:	4b03      	ldr	r3, [pc, #12]	; (801e858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e84a:	6818      	ldr	r0, [r3, #0]
 801e84c:	6803      	ldr	r3, [r0, #0]
 801e84e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e850:	4798      	blx	r3
 801e852:	b007      	add	sp, #28
 801e854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e858:	200132bc 	.word	0x200132bc
 801e85c:	200132b6 	.word	0x200132b6

0801e860 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801e860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e864:	b089      	sub	sp, #36	; 0x24
 801e866:	4682      	mov	sl, r0
 801e868:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801e86c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e86e:	460f      	mov	r7, r1
 801e870:	4691      	mov	r9, r2
 801e872:	4698      	mov	r8, r3
 801e874:	2e00      	cmp	r6, #0
 801e876:	d03d      	beq.n	801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e878:	4608      	mov	r0, r1
 801e87a:	f7fa fe59 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e87e:	4605      	mov	r5, r0
 801e880:	4638      	mov	r0, r7
 801e882:	f7fa fe89 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e886:	f8ad 000e 	strh.w	r0, [sp, #14]
 801e88a:	4638      	mov	r0, r7
 801e88c:	f8ad 9008 	strh.w	r9, [sp, #8]
 801e890:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e894:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e898:	f7fa ff36 	bl	8019708 <_ZNK8touchgfx6Bitmap7getDataEv>
 801e89c:	4605      	mov	r5, r0
 801e89e:	4638      	mov	r0, r7
 801e8a0:	f7fa ff62 	bl	8019768 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e8a4:	4681      	mov	r9, r0
 801e8a6:	4638      	mov	r0, r7
 801e8a8:	f7fa ffb2 	bl	8019810 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e8ac:	280b      	cmp	r0, #11
 801e8ae:	d821      	bhi.n	801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e8b0:	e8df f000 	tbb	[pc, r0]
 801e8b4:	2006aebe 	.word	0x2006aebe
 801e8b8:	20202020 	.word	0x20202020
 801e8bc:	b5202020 	.word	0xb5202020
 801e8c0:	4bb0      	ldr	r3, [pc, #704]	; (801eb84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801e8c2:	6818      	ldr	r0, [r3, #0]
 801e8c4:	6803      	ldr	r3, [r0, #0]
 801e8c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e8c8:	4798      	blx	r3
 801e8ca:	2eff      	cmp	r6, #255	; 0xff
 801e8cc:	d101      	bne.n	801e8d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e8ce:	0683      	lsls	r3, r0, #26
 801e8d0:	d506      	bpl.n	801e8e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801e8d2:	4633      	mov	r3, r6
 801e8d4:	4622      	mov	r2, r4
 801e8d6:	a902      	add	r1, sp, #8
 801e8d8:	4628      	mov	r0, r5
 801e8da:	f7ff f909 	bl	801daf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e8de:	e009      	b.n	801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e8e0:	4638      	mov	r0, r7
 801e8e2:	f7fa fed9 	bl	8019698 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e8e6:	b940      	cbnz	r0, 801e8fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801e8e8:	4623      	mov	r3, r4
 801e8ea:	aa02      	add	r2, sp, #8
 801e8ec:	4629      	mov	r1, r5
 801e8ee:	4650      	mov	r0, sl
 801e8f0:	f7ff f9e4 	bl	801dcbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e8f4:	b009      	add	sp, #36	; 0x24
 801e8f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8fa:	f10d 0818 	add.w	r8, sp, #24
 801e8fe:	4639      	mov	r1, r7
 801e900:	4640      	mov	r0, r8
 801e902:	f7fa fe7d 	bl	8019600 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e906:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e90a:	af04      	add	r7, sp, #16
 801e90c:	e887 0003 	stmia.w	r7, {r0, r1}
 801e910:	4638      	mov	r0, r7
 801e912:	4621      	mov	r1, r4
 801e914:	f7f1 fa6a 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 801e918:	4638      	mov	r0, r7
 801e91a:	f7f1 faaa 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e91e:	2800      	cmp	r0, #0
 801e920:	d1d7      	bne.n	801e8d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e922:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e926:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e92a:	4293      	cmp	r3, r2
 801e92c:	dd12      	ble.n	801e954 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801e92e:	1a9b      	subs	r3, r3, r2
 801e930:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e934:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e938:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e93c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e940:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e944:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e948:	4642      	mov	r2, r8
 801e94a:	4633      	mov	r3, r6
 801e94c:	a902      	add	r1, sp, #8
 801e94e:	4628      	mov	r0, r5
 801e950:	f7ff f8ce 	bl	801daf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e954:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e958:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e95c:	4293      	cmp	r3, r2
 801e95e:	dd12      	ble.n	801e986 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801e960:	1a9b      	subs	r3, r3, r2
 801e962:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e966:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e96a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e96e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e972:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e976:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e97a:	23ff      	movs	r3, #255	; 0xff
 801e97c:	4642      	mov	r2, r8
 801e97e:	a902      	add	r1, sp, #8
 801e980:	4628      	mov	r0, r5
 801e982:	f7ff f8b5 	bl	801daf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e986:	463b      	mov	r3, r7
 801e988:	aa02      	add	r2, sp, #8
 801e98a:	4629      	mov	r1, r5
 801e98c:	4650      	mov	r0, sl
 801e98e:	f7ff f995 	bl	801dcbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e992:	88a2      	ldrh	r2, [r4, #4]
 801e994:	8823      	ldrh	r3, [r4, #0]
 801e996:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e99a:	4413      	add	r3, r2
 801e99c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e9a0:	440a      	add	r2, r1
 801e9a2:	b29b      	uxth	r3, r3
 801e9a4:	b292      	uxth	r2, r2
 801e9a6:	b211      	sxth	r1, r2
 801e9a8:	b218      	sxth	r0, r3
 801e9aa:	4288      	cmp	r0, r1
 801e9ac:	dd12      	ble.n	801e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801e9ae:	1a9b      	subs	r3, r3, r2
 801e9b0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e9b4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801e9b8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e9bc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e9c0:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e9c4:	23ff      	movs	r3, #255	; 0xff
 801e9c6:	4642      	mov	r2, r8
 801e9c8:	a902      	add	r1, sp, #8
 801e9ca:	4628      	mov	r0, r5
 801e9cc:	f8ad 601a 	strh.w	r6, [sp, #26]
 801e9d0:	f7ff f88e 	bl	801daf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e9d4:	88e2      	ldrh	r2, [r4, #6]
 801e9d6:	8863      	ldrh	r3, [r4, #2]
 801e9d8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e9dc:	4413      	add	r3, r2
 801e9de:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e9e2:	440a      	add	r2, r1
 801e9e4:	b29b      	uxth	r3, r3
 801e9e6:	b292      	uxth	r2, r2
 801e9e8:	b211      	sxth	r1, r2
 801e9ea:	b218      	sxth	r0, r3
 801e9ec:	4288      	cmp	r0, r1
 801e9ee:	dd81      	ble.n	801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e9f0:	1a9b      	subs	r3, r3, r2
 801e9f2:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e9f6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e9fa:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e9fe:	f8ad 6018 	strh.w	r6, [sp, #24]
 801ea02:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ea06:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ea0a:	23ff      	movs	r3, #255	; 0xff
 801ea0c:	4642      	mov	r2, r8
 801ea0e:	e762      	b.n	801e8d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801ea10:	4633      	mov	r3, r6
 801ea12:	4622      	mov	r2, r4
 801ea14:	a902      	add	r1, sp, #8
 801ea16:	4628      	mov	r0, r5
 801ea18:	f7ff f9c0 	bl	801dd9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ea1c:	e76a      	b.n	801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea1e:	e9cd 4600 	strd	r4, r6, [sp]
 801ea22:	ab02      	add	r3, sp, #8
 801ea24:	464a      	mov	r2, r9
 801ea26:	4629      	mov	r1, r5
 801ea28:	4650      	mov	r0, sl
 801ea2a:	f7ff fd97 	bl	801e55c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801ea2e:	e761      	b.n	801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea30:	4638      	mov	r0, r7
 801ea32:	f7fa fe31 	bl	8019698 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ea36:	b950      	cbnz	r0, 801ea4e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801ea38:	e9cd 6000 	strd	r6, r0, [sp]
 801ea3c:	f8da 3000 	ldr.w	r3, [sl]
 801ea40:	aa02      	add	r2, sp, #8
 801ea42:	68de      	ldr	r6, [r3, #12]
 801ea44:	4629      	mov	r1, r5
 801ea46:	4623      	mov	r3, r4
 801ea48:	4650      	mov	r0, sl
 801ea4a:	47b0      	blx	r6
 801ea4c:	e752      	b.n	801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea4e:	f10d 0818 	add.w	r8, sp, #24
 801ea52:	4639      	mov	r1, r7
 801ea54:	4640      	mov	r0, r8
 801ea56:	f7fa fdd3 	bl	8019600 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801ea5a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ea5e:	af04      	add	r7, sp, #16
 801ea60:	e887 0003 	stmia.w	r7, {r0, r1}
 801ea64:	4638      	mov	r0, r7
 801ea66:	4621      	mov	r1, r4
 801ea68:	f7f1 f9c0 	bl	800fdec <_ZN8touchgfx4RectaNERKS0_>
 801ea6c:	4638      	mov	r0, r7
 801ea6e:	f7f1 fa00 	bl	800fe72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ea72:	b138      	cbz	r0, 801ea84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801ea74:	9600      	str	r6, [sp, #0]
 801ea76:	4623      	mov	r3, r4
 801ea78:	aa02      	add	r2, sp, #8
 801ea7a:	4649      	mov	r1, r9
 801ea7c:	4628      	mov	r0, r5
 801ea7e:	f7ff fdc9 	bl	801e614 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ea82:	e737      	b.n	801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea84:	e9cd 6000 	strd	r6, r0, [sp]
 801ea88:	f8da 3000 	ldr.w	r3, [sl]
 801ea8c:	aa02      	add	r2, sp, #8
 801ea8e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801ea92:	4629      	mov	r1, r5
 801ea94:	463b      	mov	r3, r7
 801ea96:	4650      	mov	r0, sl
 801ea98:	47d8      	blx	fp
 801ea9a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ea9e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801eaa2:	4293      	cmp	r3, r2
 801eaa4:	dd13      	ble.n	801eace <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801eaa6:	f9b4 0000 	ldrsh.w	r0, [r4]
 801eaaa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801eaae:	f8ad 0018 	strh.w	r0, [sp, #24]
 801eab2:	1a9b      	subs	r3, r3, r2
 801eab4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801eab8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801eabc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801eac0:	9600      	str	r6, [sp, #0]
 801eac2:	4643      	mov	r3, r8
 801eac4:	aa02      	add	r2, sp, #8
 801eac6:	4649      	mov	r1, r9
 801eac8:	4628      	mov	r0, r5
 801eaca:	f7ff fda3 	bl	801e614 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eace:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ead2:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ead6:	4293      	cmp	r3, r2
 801ead8:	dd13      	ble.n	801eb02 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801eada:	1a9b      	subs	r3, r3, r2
 801eadc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801eae0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801eae4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801eae8:	f8ad 001a 	strh.w	r0, [sp, #26]
 801eaec:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eaf0:	f8ad 101e 	strh.w	r1, [sp, #30]
 801eaf4:	9600      	str	r6, [sp, #0]
 801eaf6:	4643      	mov	r3, r8
 801eaf8:	aa02      	add	r2, sp, #8
 801eafa:	4649      	mov	r1, r9
 801eafc:	4628      	mov	r0, r5
 801eafe:	f7ff fd89 	bl	801e614 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eb02:	88a2      	ldrh	r2, [r4, #4]
 801eb04:	8823      	ldrh	r3, [r4, #0]
 801eb06:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801eb0a:	4413      	add	r3, r2
 801eb0c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801eb10:	440a      	add	r2, r1
 801eb12:	b29b      	uxth	r3, r3
 801eb14:	b292      	uxth	r2, r2
 801eb16:	b211      	sxth	r1, r2
 801eb18:	b218      	sxth	r0, r3
 801eb1a:	4288      	cmp	r0, r1
 801eb1c:	dd13      	ble.n	801eb46 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801eb1e:	1a9b      	subs	r3, r3, r2
 801eb20:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801eb24:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801eb28:	f8ad 1018 	strh.w	r1, [sp, #24]
 801eb2c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eb30:	f8ad 001e 	strh.w	r0, [sp, #30]
 801eb34:	9600      	str	r6, [sp, #0]
 801eb36:	4643      	mov	r3, r8
 801eb38:	aa02      	add	r2, sp, #8
 801eb3a:	4649      	mov	r1, r9
 801eb3c:	4628      	mov	r0, r5
 801eb3e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801eb42:	f7ff fd67 	bl	801e614 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eb46:	88e2      	ldrh	r2, [r4, #6]
 801eb48:	8863      	ldrh	r3, [r4, #2]
 801eb4a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801eb4e:	4413      	add	r3, r2
 801eb50:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801eb54:	440a      	add	r2, r1
 801eb56:	b29b      	uxth	r3, r3
 801eb58:	b292      	uxth	r2, r2
 801eb5a:	b211      	sxth	r1, r2
 801eb5c:	b218      	sxth	r0, r3
 801eb5e:	4288      	cmp	r0, r1
 801eb60:	f77f aec8 	ble.w	801e8f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eb64:	f9b4 7000 	ldrsh.w	r7, [r4]
 801eb68:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801eb6c:	f8ad 7018 	strh.w	r7, [sp, #24]
 801eb70:	1a9b      	subs	r3, r3, r2
 801eb72:	f8ad 301e 	strh.w	r3, [sp, #30]
 801eb76:	f8ad 101a 	strh.w	r1, [sp, #26]
 801eb7a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801eb7e:	9600      	str	r6, [sp, #0]
 801eb80:	4643      	mov	r3, r8
 801eb82:	e779      	b.n	801ea78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801eb84:	200132bc 	.word	0x200132bc

0801eb88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801eb88:	b180      	cbz	r0, 801ebac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801eb8a:	2903      	cmp	r1, #3
 801eb8c:	d81c      	bhi.n	801ebc8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801eb8e:	e8df f001 	tbb	[pc, r1]
 801eb92:	1d02      	.short	0x1d02
 801eb94:	1f08      	.short	0x1f08
 801eb96:	4b10      	ldr	r3, [pc, #64]	; (801ebd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801eb98:	8818      	ldrh	r0, [r3, #0]
 801eb9a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801eb9e:	4240      	negs	r0, r0
 801eba0:	4770      	bx	lr
 801eba2:	4b0d      	ldr	r3, [pc, #52]	; (801ebd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801eba4:	8818      	ldrh	r0, [r3, #0]
 801eba6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ebaa:	4770      	bx	lr
 801ebac:	2903      	cmp	r1, #3
 801ebae:	d80b      	bhi.n	801ebc8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ebb0:	a301      	add	r3, pc, #4	; (adr r3, 801ebb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ebb2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ebb6:	bf00      	nop
 801ebb8:	0801ebcd 	.word	0x0801ebcd
 801ebbc:	0801eba3 	.word	0x0801eba3
 801ebc0:	0801ebd1 	.word	0x0801ebd1
 801ebc4:	0801eb97 	.word	0x0801eb97
 801ebc8:	2000      	movs	r0, #0
 801ebca:	4770      	bx	lr
 801ebcc:	2001      	movs	r0, #1
 801ebce:	4770      	bx	lr
 801ebd0:	f04f 30ff 	mov.w	r0, #4294967295
 801ebd4:	4770      	bx	lr
 801ebd6:	bf00      	nop
 801ebd8:	200132b6 	.word	0x200132b6

0801ebdc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801ebdc:	b180      	cbz	r0, 801ec00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801ebde:	2903      	cmp	r1, #3
 801ebe0:	d81c      	bhi.n	801ec1c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ebe2:	e8df f001 	tbb	[pc, r1]
 801ebe6:	021d      	.short	0x021d
 801ebe8:	071f      	.short	0x071f
 801ebea:	4b10      	ldr	r3, [pc, #64]	; (801ec2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ebec:	8818      	ldrh	r0, [r3, #0]
 801ebee:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ebf2:	4770      	bx	lr
 801ebf4:	4b0d      	ldr	r3, [pc, #52]	; (801ec2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ebf6:	8818      	ldrh	r0, [r3, #0]
 801ebf8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ebfc:	4240      	negs	r0, r0
 801ebfe:	4770      	bx	lr
 801ec00:	2903      	cmp	r1, #3
 801ec02:	d80b      	bhi.n	801ec1c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ec04:	a301      	add	r3, pc, #4	; (adr r3, 801ec0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801ec06:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ec0a:	bf00      	nop
 801ec0c:	0801ebeb 	.word	0x0801ebeb
 801ec10:	0801ec25 	.word	0x0801ec25
 801ec14:	0801ebf5 	.word	0x0801ebf5
 801ec18:	0801ec21 	.word	0x0801ec21
 801ec1c:	2000      	movs	r0, #0
 801ec1e:	4770      	bx	lr
 801ec20:	2001      	movs	r0, #1
 801ec22:	4770      	bx	lr
 801ec24:	f04f 30ff 	mov.w	r0, #4294967295
 801ec28:	4770      	bx	lr
 801ec2a:	bf00      	nop
 801ec2c:	200132b6 	.word	0x200132b6

0801ec30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ec30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec34:	b099      	sub	sp, #100	; 0x64
 801ec36:	910b      	str	r1, [sp, #44]	; 0x2c
 801ec38:	a914      	add	r1, sp, #80	; 0x50
 801ec3a:	e881 000c 	stmia.w	r1, {r2, r3}
 801ec3e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ec42:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ec46:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ec4a:	9309      	str	r3, [sp, #36]	; 0x24
 801ec4c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ec50:	9310      	str	r3, [sp, #64]	; 0x40
 801ec52:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ec56:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ec5a:	930c      	str	r3, [sp, #48]	; 0x30
 801ec5c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ec60:	798f      	ldrb	r7, [r1, #6]
 801ec62:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ec66:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ec6a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ec6e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ec72:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801ec76:	431f      	orrs	r7, r3
 801ec78:	f000 8195 	beq.w	801efa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ec7c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ec80:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ec84:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ec88:	ea59 0903 	orrs.w	r9, r9, r3
 801ec8c:	f000 818b 	beq.w	801efa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ec90:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ec94:	b29b      	uxth	r3, r3
 801ec96:	2d00      	cmp	r5, #0
 801ec98:	f000 812e 	beq.w	801eef8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ec9c:	1aed      	subs	r5, r5, r3
 801ec9e:	b2ad      	uxth	r5, r5
 801eca0:	042b      	lsls	r3, r5, #16
 801eca2:	d502      	bpl.n	801ecaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801eca4:	1b64      	subs	r4, r4, r5
 801eca6:	b224      	sxth	r4, r4
 801eca8:	2500      	movs	r5, #0
 801ecaa:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ecae:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801ecb2:	428c      	cmp	r4, r1
 801ecb4:	b28b      	uxth	r3, r1
 801ecb6:	bfbf      	itttt	lt
 801ecb8:	18ed      	addlt	r5, r5, r3
 801ecba:	1b2c      	sublt	r4, r5, r4
 801ecbc:	b2a5      	uxthlt	r5, r4
 801ecbe:	460c      	movlt	r4, r1
 801ecc0:	8891      	ldrh	r1, [r2, #4]
 801ecc2:	440b      	add	r3, r1
 801ecc4:	b21b      	sxth	r3, r3
 801ecc6:	930f      	str	r3, [sp, #60]	; 0x3c
 801ecc8:	88d3      	ldrh	r3, [r2, #6]
 801ecca:	8852      	ldrh	r2, [r2, #2]
 801eccc:	4413      	add	r3, r2
 801ecce:	b21b      	sxth	r3, r3
 801ecd0:	930d      	str	r3, [sp, #52]	; 0x34
 801ecd2:	4bbe      	ldr	r3, [pc, #760]	; (801efcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801ecd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ecd6:	f893 b000 	ldrb.w	fp, [r3]
 801ecda:	f10b 3cff 	add.w	ip, fp, #4294967295
 801ecde:	f1dc 0300 	rsbs	r3, ip, #0
 801ece2:	eb43 030c 	adc.w	r3, r3, ip
 801ece6:	930e      	str	r3, [sp, #56]	; 0x38
 801ece8:	4621      	mov	r1, r4
 801ecea:	4653      	mov	r3, sl
 801ecec:	a814      	add	r0, sp, #80	; 0x50
 801ecee:	f7f6 fc90 	bl	8015612 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801ecf2:	4621      	mov	r1, r4
 801ecf4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ecf8:	4653      	mov	r3, sl
 801ecfa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ecfc:	a814      	add	r0, sp, #80	; 0x50
 801ecfe:	f7f6 fca5 	bl	801564c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ed02:	a918      	add	r1, sp, #96	; 0x60
 801ed04:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ed08:	a817      	add	r0, sp, #92	; 0x5c
 801ed0a:	f7f6 fdcb 	bl	80158a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801ed0e:	f1ba 0f00 	cmp.w	sl, #0
 801ed12:	f040 80f4 	bne.w	801eefe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801ed16:	f1bb 0f01 	cmp.w	fp, #1
 801ed1a:	f040 80f8 	bne.w	801ef0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801ed1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed20:	2b00      	cmp	r3, #0
 801ed22:	f040 8145 	bne.w	801efb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801ed26:	b2ba      	uxth	r2, r7
 801ed28:	b905      	cbnz	r5, 801ed2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801ed2a:	b16e      	cbz	r6, 801ed48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801ed2c:	fb06 5302 	mla	r3, r6, r2, r5
 801ed30:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801ed32:	fb08 f303 	mul.w	r3, r8, r3
 801ed36:	4631      	mov	r1, r6
 801ed38:	f003 0607 	and.w	r6, r3, #7
 801ed3c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801ed40:	9328      	str	r3, [sp, #160]	; 0xa0
 801ed42:	eba9 0301 	sub.w	r3, r9, r1
 801ed46:	930a      	str	r3, [sp, #40]	; 0x28
 801ed48:	4651      	mov	r1, sl
 801ed4a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ed4c:	f7ff ff1c 	bl	801eb88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ed50:	4681      	mov	r9, r0
 801ed52:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ed54:	f7ff ff42 	bl	801ebdc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801ed58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ed5a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ed5c:	eba3 0a01 	sub.w	sl, r3, r1
 801ed60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ed62:	459a      	cmp	sl, r3
 801ed64:	bfa8      	it	ge
 801ed66:	469a      	movge	sl, r3
 801ed68:	f1ba 0f00 	cmp.w	sl, #0
 801ed6c:	4683      	mov	fp, r0
 801ed6e:	f340 811a 	ble.w	801efa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ed72:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ed74:	1b64      	subs	r4, r4, r5
 801ed76:	1b1c      	subs	r4, r3, r4
 801ed78:	42bc      	cmp	r4, r7
 801ed7a:	bfd4      	ite	le
 801ed7c:	ebc5 0504 	rsble	r5, r5, r4
 801ed80:	ebc5 0507 	rsbgt	r5, r5, r7
 801ed84:	2d00      	cmp	r5, #0
 801ed86:	f340 810e 	ble.w	801efa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ed8a:	1b52      	subs	r2, r2, r5
 801ed8c:	fb08 f302 	mul.w	r3, r8, r2
 801ed90:	930f      	str	r3, [sp, #60]	; 0x3c
 801ed92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ed94:	2b00      	cmp	r3, #0
 801ed96:	f040 8116 	bne.w	801efc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ed9a:	4b8d      	ldr	r3, [pc, #564]	; (801efd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ed9c:	6818      	ldr	r0, [r3, #0]
 801ed9e:	6803      	ldr	r3, [r0, #0]
 801eda0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eda2:	4798      	blx	r3
 801eda4:	2301      	movs	r3, #1
 801eda6:	fa03 f308 	lsl.w	r3, r3, r8
 801edaa:	4a8a      	ldr	r2, [pc, #552]	; (801efd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801edac:	3b01      	subs	r3, #1
 801edae:	b2db      	uxtb	r3, r3
 801edb0:	8811      	ldrh	r1, [r2, #0]
 801edb2:	930e      	str	r3, [sp, #56]	; 0x38
 801edb4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801edb8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801edbc:	fb01 2303 	mla	r3, r1, r3, r2
 801edc0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801edc4:	930a      	str	r3, [sp, #40]	; 0x28
 801edc6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801edc8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801edcc:	9313      	str	r3, [sp, #76]	; 0x4c
 801edce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801edd0:	0a19      	lsrs	r1, r3, #8
 801edd2:	b2cb      	uxtb	r3, r1
 801edd4:	9312      	str	r3, [sp, #72]	; 0x48
 801edd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801edd8:	b2db      	uxtb	r3, r3
 801edda:	9311      	str	r3, [sp, #68]	; 0x44
 801eddc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801edde:	095a      	lsrs	r2, r3, #5
 801ede0:	4b7d      	ldr	r3, [pc, #500]	; (801efd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ede2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ede6:	400b      	ands	r3, r1
 801ede8:	4313      	orrs	r3, r2
 801edea:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801edec:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801edf0:	4313      	orrs	r3, r2
 801edf2:	b29b      	uxth	r3, r3
 801edf4:	9310      	str	r3, [sp, #64]	; 0x40
 801edf6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801edf8:	781a      	ldrb	r2, [r3, #0]
 801edfa:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801edfe:	4132      	asrs	r2, r6
 801ee00:	fb05 b919 	mls	r9, r5, r9, fp
 801ee04:	fb03 fb05 	mul.w	fp, r3, r5
 801ee08:	b2d2      	uxtb	r2, r2
 801ee0a:	930d      	str	r3, [sp, #52]	; 0x34
 801ee0c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801ee10:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801ee14:	f0c0 80f5 	bcc.w	801f002 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801ee18:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801ee1c:	46ae      	mov	lr, r5
 801ee1e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801ee22:	f0c0 80dd 	bcc.w	801efe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801ee26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ee28:	4013      	ands	r3, r2
 801ee2a:	d055      	beq.n	801eed8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801ee2c:	20ff      	movs	r0, #255	; 0xff
 801ee2e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ee30:	fb90 f1f1 	sdiv	r1, r0, r1
 801ee34:	434b      	muls	r3, r1
 801ee36:	2bfe      	cmp	r3, #254	; 0xfe
 801ee38:	dd03      	ble.n	801ee42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801ee3a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ee3c:	4281      	cmp	r1, r0
 801ee3e:	f000 80cd 	beq.w	801efdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801ee42:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ee44:	f8bc 4000 	ldrh.w	r4, [ip]
 801ee48:	fb11 f303 	smulbb	r3, r1, r3
 801ee4c:	b29b      	uxth	r3, r3
 801ee4e:	1c59      	adds	r1, r3, #1
 801ee50:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ee54:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ee58:	b29f      	uxth	r7, r3
 801ee5a:	43db      	mvns	r3, r3
 801ee5c:	b2db      	uxtb	r3, r3
 801ee5e:	9309      	str	r3, [sp, #36]	; 0x24
 801ee60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ee62:	1220      	asrs	r0, r4, #8
 801ee64:	fb13 f907 	smulbb	r9, r3, r7
 801ee68:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ee6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee6e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801ee72:	fb00 9003 	mla	r0, r0, r3, r9
 801ee76:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ee78:	10e1      	asrs	r1, r4, #3
 801ee7a:	fb13 f907 	smulbb	r9, r3, r7
 801ee7e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ee82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee84:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ee88:	fb01 9103 	mla	r1, r1, r3, r9
 801ee8c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ee8e:	00e4      	lsls	r4, r4, #3
 801ee90:	fb13 f707 	smulbb	r7, r3, r7
 801ee94:	b2e4      	uxtb	r4, r4
 801ee96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee98:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ee9c:	fb04 7403 	mla	r4, r4, r3, r7
 801eea0:	b280      	uxth	r0, r0
 801eea2:	b2a4      	uxth	r4, r4
 801eea4:	1c43      	adds	r3, r0, #1
 801eea6:	f104 0901 	add.w	r9, r4, #1
 801eeaa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801eeae:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801eeb2:	b289      	uxth	r1, r1
 801eeb4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801eeb8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801eebc:	ea49 0000 	orr.w	r0, r9, r0
 801eec0:	f101 0901 	add.w	r9, r1, #1
 801eec4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801eec8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801eecc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801eed0:	ea40 0009 	orr.w	r0, r0, r9
 801eed4:	f8ac 0000 	strh.w	r0, [ip]
 801eed8:	4446      	add	r6, r8
 801eeda:	b2b6      	uxth	r6, r6
 801eedc:	2e07      	cmp	r6, #7
 801eede:	bf81      	itttt	hi
 801eee0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801eee2:	785a      	ldrbhi	r2, [r3, #1]
 801eee4:	3301      	addhi	r3, #1
 801eee6:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801eee8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eeea:	bf9a      	itte	ls
 801eeec:	fa42 f208 	asrls.w	r2, r2, r8
 801eef0:	b2d2      	uxtbls	r2, r2
 801eef2:	2600      	movhi	r6, #0
 801eef4:	449c      	add	ip, r3
 801eef6:	e792      	b.n	801ee1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801eef8:	441c      	add	r4, r3
 801eefa:	b224      	sxth	r4, r4
 801eefc:	e6d5      	b.n	801ecaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801eefe:	f1ba 0f01 	cmp.w	sl, #1
 801ef02:	f47f af0c 	bne.w	801ed1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef06:	f1bb 0f01 	cmp.w	fp, #1
 801ef0a:	f47f af08 	bne.w	801ed1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef0e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801efd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ef12:	f8db 0000 	ldr.w	r0, [fp]
 801ef16:	6803      	ldr	r3, [r0, #0]
 801ef18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ef1a:	4798      	blx	r3
 801ef1c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ef20:	465a      	mov	r2, fp
 801ef22:	d006      	beq.n	801ef32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ef24:	f1b8 0f04 	cmp.w	r8, #4
 801ef28:	d140      	bne.n	801efac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ef2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef2c:	3300      	adds	r3, #0
 801ef2e:	bf18      	it	ne
 801ef30:	2301      	movne	r3, #1
 801ef32:	0580      	lsls	r0, r0, #22
 801ef34:	d56e      	bpl.n	801f014 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ef36:	f1b8 0f08 	cmp.w	r8, #8
 801ef3a:	d16b      	bne.n	801f014 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ef3c:	2b00      	cmp	r3, #0
 801ef3e:	bf0c      	ite	eq
 801ef40:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801ef44:	f44f 7180 	movne.w	r1, #256	; 0x100
 801ef48:	2d00      	cmp	r5, #0
 801ef4a:	f47f aee8 	bne.w	801ed1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef4e:	2e00      	cmp	r6, #0
 801ef50:	f47f aee5 	bne.w	801ed1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef54:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ef56:	19e3      	adds	r3, r4, r7
 801ef58:	4283      	cmp	r3, r0
 801ef5a:	f73f aee0 	bgt.w	801ed1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef60:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ef62:	444b      	add	r3, r9
 801ef64:	4283      	cmp	r3, r0
 801ef66:	f73f aeda 	bgt.w	801ed1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef6a:	6810      	ldr	r0, [r2, #0]
 801ef6c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801ef70:	6804      	ldr	r4, [r0, #0]
 801ef72:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ef76:	b2bf      	uxth	r7, r7
 801ef78:	f1b8 0f08 	cmp.w	r8, #8
 801ef7c:	f04f 0500 	mov.w	r5, #0
 801ef80:	bf18      	it	ne
 801ef82:	3701      	addne	r7, #1
 801ef84:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ef88:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ef8a:	9104      	str	r1, [sp, #16]
 801ef8c:	bf18      	it	ne
 801ef8e:	f027 0701 	bicne.w	r7, r7, #1
 801ef92:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ef94:	bf18      	it	ne
 801ef96:	b2bf      	uxthne	r7, r7
 801ef98:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ef9c:	e9cd 7900 	strd	r7, r9, [sp]
 801efa0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801efa2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801efa4:	47a0      	blx	r4
 801efa6:	b019      	add	sp, #100	; 0x64
 801efa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801efac:	2300      	movs	r3, #0
 801efae:	e7c0      	b.n	801ef32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801efb0:	2208      	movs	r2, #8
 801efb2:	fb92 f3f8 	sdiv	r3, r2, r8
 801efb6:	1e5a      	subs	r2, r3, #1
 801efb8:	443a      	add	r2, r7
 801efba:	fb92 f2f3 	sdiv	r2, r2, r3
 801efbe:	fb12 f203 	smulbb	r2, r2, r3
 801efc2:	b292      	uxth	r2, r2
 801efc4:	e6b0      	b.n	801ed28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801efc6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801efc8:	e6ec      	b.n	801eda4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801efca:	bf00      	nop
 801efcc:	200132b4 	.word	0x200132b4
 801efd0:	200132bc 	.word	0x200132bc
 801efd4:	200132b6 	.word	0x200132b6
 801efd8:	00fff800 	.word	0x00fff800
 801efdc:	9810      	ldr	r0, [sp, #64]	; 0x40
 801efde:	e779      	b.n	801eed4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801efe0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801efe2:	b153      	cbz	r3, 801effa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801efe4:	441e      	add	r6, r3
 801efe6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801efe8:	b2b6      	uxth	r6, r6
 801efea:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801efee:	f006 0607 	and.w	r6, r6, #7
 801eff2:	781a      	ldrb	r2, [r3, #0]
 801eff4:	9328      	str	r3, [sp, #160]	; 0xa0
 801eff6:	4132      	asrs	r2, r6
 801eff8:	b2d2      	uxtb	r2, r2
 801effa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801effc:	445b      	add	r3, fp
 801effe:	930a      	str	r3, [sp, #40]	; 0x28
 801f000:	e706      	b.n	801ee10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f002:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f004:	2b00      	cmp	r3, #0
 801f006:	d1ce      	bne.n	801efa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f008:	4b05      	ldr	r3, [pc, #20]	; (801f020 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f00a:	6818      	ldr	r0, [r3, #0]
 801f00c:	6803      	ldr	r3, [r0, #0]
 801f00e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f010:	4798      	blx	r3
 801f012:	e7c8      	b.n	801efa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f014:	2b00      	cmp	r3, #0
 801f016:	f43f ae82 	beq.w	801ed1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f01a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801f01e:	e793      	b.n	801ef48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f020:	200132bc 	.word	0x200132bc

0801f024 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f024:	b538      	push	{r3, r4, r5, lr}
 801f026:	4c15      	ldr	r4, [pc, #84]	; (801f07c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f028:	7823      	ldrb	r3, [r4, #0]
 801f02a:	f3bf 8f5b 	dmb	ish
 801f02e:	07da      	lsls	r2, r3, #31
 801f030:	4605      	mov	r5, r0
 801f032:	d40b      	bmi.n	801f04c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f034:	4620      	mov	r0, r4
 801f036:	f00a fee2 	bl	8029dfe <__cxa_guard_acquire>
 801f03a:	b138      	cbz	r0, 801f04c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f03c:	4620      	mov	r0, r4
 801f03e:	f00a feea 	bl	8029e16 <__cxa_guard_release>
 801f042:	4a0f      	ldr	r2, [pc, #60]	; (801f080 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f044:	490f      	ldr	r1, [pc, #60]	; (801f084 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f046:	4810      	ldr	r0, [pc, #64]	; (801f088 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f048:	f00a fed2 	bl	8029df0 <__aeabi_atexit>
 801f04c:	4c0f      	ldr	r4, [pc, #60]	; (801f08c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f04e:	7823      	ldrb	r3, [r4, #0]
 801f050:	f3bf 8f5b 	dmb	ish
 801f054:	07db      	lsls	r3, r3, #31
 801f056:	d40b      	bmi.n	801f070 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f058:	4620      	mov	r0, r4
 801f05a:	f00a fed0 	bl	8029dfe <__cxa_guard_acquire>
 801f05e:	b138      	cbz	r0, 801f070 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f060:	4620      	mov	r0, r4
 801f062:	f00a fed8 	bl	8029e16 <__cxa_guard_release>
 801f066:	4a06      	ldr	r2, [pc, #24]	; (801f080 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f068:	4909      	ldr	r1, [pc, #36]	; (801f090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f06a:	480a      	ldr	r0, [pc, #40]	; (801f094 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f06c:	f00a fec0 	bl	8029df0 <__aeabi_atexit>
 801f070:	4b05      	ldr	r3, [pc, #20]	; (801f088 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f072:	612b      	str	r3, [r5, #16]
 801f074:	4b07      	ldr	r3, [pc, #28]	; (801f094 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f076:	616b      	str	r3, [r5, #20]
 801f078:	bd38      	pop	{r3, r4, r5, pc}
 801f07a:	bf00      	nop
 801f07c:	2001339c 	.word	0x2001339c
 801f080:	20000000 	.word	0x20000000
 801f084:	0801be27 	.word	0x0801be27
 801f088:	200000f0 	.word	0x200000f0
 801f08c:	200133a0 	.word	0x200133a0
 801f090:	0801be25 	.word	0x0801be25
 801f094:	200000f4 	.word	0x200000f4

0801f098 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f098:	b538      	push	{r3, r4, r5, lr}
 801f09a:	4c15      	ldr	r4, [pc, #84]	; (801f0f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f09c:	7823      	ldrb	r3, [r4, #0]
 801f09e:	f3bf 8f5b 	dmb	ish
 801f0a2:	07da      	lsls	r2, r3, #31
 801f0a4:	4605      	mov	r5, r0
 801f0a6:	d40b      	bmi.n	801f0c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f0a8:	4620      	mov	r0, r4
 801f0aa:	f00a fea8 	bl	8029dfe <__cxa_guard_acquire>
 801f0ae:	b138      	cbz	r0, 801f0c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f0b0:	4620      	mov	r0, r4
 801f0b2:	f00a feb0 	bl	8029e16 <__cxa_guard_release>
 801f0b6:	4a0f      	ldr	r2, [pc, #60]	; (801f0f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f0b8:	490f      	ldr	r1, [pc, #60]	; (801f0f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f0ba:	4810      	ldr	r0, [pc, #64]	; (801f0fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f0bc:	f00a fe98 	bl	8029df0 <__aeabi_atexit>
 801f0c0:	4c0f      	ldr	r4, [pc, #60]	; (801f100 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f0c2:	7823      	ldrb	r3, [r4, #0]
 801f0c4:	f3bf 8f5b 	dmb	ish
 801f0c8:	07db      	lsls	r3, r3, #31
 801f0ca:	d40b      	bmi.n	801f0e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f0cc:	4620      	mov	r0, r4
 801f0ce:	f00a fe96 	bl	8029dfe <__cxa_guard_acquire>
 801f0d2:	b138      	cbz	r0, 801f0e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f0d4:	4620      	mov	r0, r4
 801f0d6:	f00a fe9e 	bl	8029e16 <__cxa_guard_release>
 801f0da:	4a06      	ldr	r2, [pc, #24]	; (801f0f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f0dc:	4909      	ldr	r1, [pc, #36]	; (801f104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f0de:	480a      	ldr	r0, [pc, #40]	; (801f108 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f0e0:	f00a fe86 	bl	8029df0 <__aeabi_atexit>
 801f0e4:	4b05      	ldr	r3, [pc, #20]	; (801f0fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f0e6:	60ab      	str	r3, [r5, #8]
 801f0e8:	4b07      	ldr	r3, [pc, #28]	; (801f108 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f0ea:	60eb      	str	r3, [r5, #12]
 801f0ec:	bd38      	pop	{r3, r4, r5, pc}
 801f0ee:	bf00      	nop
 801f0f0:	20013374 	.word	0x20013374
 801f0f4:	20000000 	.word	0x20000000
 801f0f8:	0801be2b 	.word	0x0801be2b
 801f0fc:	200000c8 	.word	0x200000c8
 801f100:	20013378 	.word	0x20013378
 801f104:	0801be29 	.word	0x0801be29
 801f108:	200000cc 	.word	0x200000cc

0801f10c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f10c:	b510      	push	{r4, lr}
 801f10e:	4604      	mov	r4, r0
 801f110:	f7ff ff88 	bl	801f024 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f114:	4620      	mov	r0, r4
 801f116:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f11a:	f7ff bfbd 	b.w	801f098 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f120 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f120:	b538      	push	{r3, r4, r5, lr}
 801f122:	4c15      	ldr	r4, [pc, #84]	; (801f178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f124:	7823      	ldrb	r3, [r4, #0]
 801f126:	f3bf 8f5b 	dmb	ish
 801f12a:	07da      	lsls	r2, r3, #31
 801f12c:	4605      	mov	r5, r0
 801f12e:	d40b      	bmi.n	801f148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f130:	4620      	mov	r0, r4
 801f132:	f00a fe64 	bl	8029dfe <__cxa_guard_acquire>
 801f136:	b138      	cbz	r0, 801f148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f138:	4620      	mov	r0, r4
 801f13a:	f00a fe6c 	bl	8029e16 <__cxa_guard_release>
 801f13e:	4a0f      	ldr	r2, [pc, #60]	; (801f17c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f140:	490f      	ldr	r1, [pc, #60]	; (801f180 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f142:	4810      	ldr	r0, [pc, #64]	; (801f184 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f144:	f00a fe54 	bl	8029df0 <__aeabi_atexit>
 801f148:	4c0f      	ldr	r4, [pc, #60]	; (801f188 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f14a:	7823      	ldrb	r3, [r4, #0]
 801f14c:	f3bf 8f5b 	dmb	ish
 801f150:	07db      	lsls	r3, r3, #31
 801f152:	d40b      	bmi.n	801f16c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f154:	4620      	mov	r0, r4
 801f156:	f00a fe52 	bl	8029dfe <__cxa_guard_acquire>
 801f15a:	b138      	cbz	r0, 801f16c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f15c:	4620      	mov	r0, r4
 801f15e:	f00a fe5a 	bl	8029e16 <__cxa_guard_release>
 801f162:	4a06      	ldr	r2, [pc, #24]	; (801f17c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f164:	4909      	ldr	r1, [pc, #36]	; (801f18c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f166:	480a      	ldr	r0, [pc, #40]	; (801f190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f168:	f00a fe42 	bl	8029df0 <__aeabi_atexit>
 801f16c:	4b05      	ldr	r3, [pc, #20]	; (801f184 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f16e:	622b      	str	r3, [r5, #32]
 801f170:	4b07      	ldr	r3, [pc, #28]	; (801f190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f172:	626b      	str	r3, [r5, #36]	; 0x24
 801f174:	bd38      	pop	{r3, r4, r5, pc}
 801f176:	bf00      	nop
 801f178:	200133a4 	.word	0x200133a4
 801f17c:	20000000 	.word	0x20000000
 801f180:	0801be1f 	.word	0x0801be1f
 801f184:	200000f8 	.word	0x200000f8
 801f188:	200133a8 	.word	0x200133a8
 801f18c:	0801be1d 	.word	0x0801be1d
 801f190:	200000fc 	.word	0x200000fc

0801f194 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f194:	b538      	push	{r3, r4, r5, lr}
 801f196:	4c15      	ldr	r4, [pc, #84]	; (801f1ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f198:	7823      	ldrb	r3, [r4, #0]
 801f19a:	f3bf 8f5b 	dmb	ish
 801f19e:	07da      	lsls	r2, r3, #31
 801f1a0:	4605      	mov	r5, r0
 801f1a2:	d40b      	bmi.n	801f1bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f1a4:	4620      	mov	r0, r4
 801f1a6:	f00a fe2a 	bl	8029dfe <__cxa_guard_acquire>
 801f1aa:	b138      	cbz	r0, 801f1bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f1ac:	4620      	mov	r0, r4
 801f1ae:	f00a fe32 	bl	8029e16 <__cxa_guard_release>
 801f1b2:	4a0f      	ldr	r2, [pc, #60]	; (801f1f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f1b4:	490f      	ldr	r1, [pc, #60]	; (801f1f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f1b6:	4810      	ldr	r0, [pc, #64]	; (801f1f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f1b8:	f00a fe1a 	bl	8029df0 <__aeabi_atexit>
 801f1bc:	4c0f      	ldr	r4, [pc, #60]	; (801f1fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f1be:	7823      	ldrb	r3, [r4, #0]
 801f1c0:	f3bf 8f5b 	dmb	ish
 801f1c4:	07db      	lsls	r3, r3, #31
 801f1c6:	d40b      	bmi.n	801f1e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f1c8:	4620      	mov	r0, r4
 801f1ca:	f00a fe18 	bl	8029dfe <__cxa_guard_acquire>
 801f1ce:	b138      	cbz	r0, 801f1e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f1d0:	4620      	mov	r0, r4
 801f1d2:	f00a fe20 	bl	8029e16 <__cxa_guard_release>
 801f1d6:	4a06      	ldr	r2, [pc, #24]	; (801f1f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f1d8:	4909      	ldr	r1, [pc, #36]	; (801f200 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f1da:	480a      	ldr	r0, [pc, #40]	; (801f204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f1dc:	f00a fe08 	bl	8029df0 <__aeabi_atexit>
 801f1e0:	4b05      	ldr	r3, [pc, #20]	; (801f1f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f1e2:	61ab      	str	r3, [r5, #24]
 801f1e4:	4b07      	ldr	r3, [pc, #28]	; (801f204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f1e6:	61eb      	str	r3, [r5, #28]
 801f1e8:	bd38      	pop	{r3, r4, r5, pc}
 801f1ea:	bf00      	nop
 801f1ec:	2001337c 	.word	0x2001337c
 801f1f0:	20000000 	.word	0x20000000
 801f1f4:	0801be23 	.word	0x0801be23
 801f1f8:	200000d0 	.word	0x200000d0
 801f1fc:	20013380 	.word	0x20013380
 801f200:	0801be21 	.word	0x0801be21
 801f204:	200000d4 	.word	0x200000d4

0801f208 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f208:	b510      	push	{r4, lr}
 801f20a:	4604      	mov	r4, r0
 801f20c:	f7ff ff88 	bl	801f120 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f210:	4620      	mov	r0, r4
 801f212:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f216:	f7ff bfbd 	b.w	801f194 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f21c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f21c:	b538      	push	{r3, r4, r5, lr}
 801f21e:	4c15      	ldr	r4, [pc, #84]	; (801f274 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f220:	7823      	ldrb	r3, [r4, #0]
 801f222:	f3bf 8f5b 	dmb	ish
 801f226:	07da      	lsls	r2, r3, #31
 801f228:	4605      	mov	r5, r0
 801f22a:	d40b      	bmi.n	801f244 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f22c:	4620      	mov	r0, r4
 801f22e:	f00a fde6 	bl	8029dfe <__cxa_guard_acquire>
 801f232:	b138      	cbz	r0, 801f244 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f234:	4620      	mov	r0, r4
 801f236:	f00a fdee 	bl	8029e16 <__cxa_guard_release>
 801f23a:	4a0f      	ldr	r2, [pc, #60]	; (801f278 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f23c:	490f      	ldr	r1, [pc, #60]	; (801f27c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f23e:	4810      	ldr	r0, [pc, #64]	; (801f280 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f240:	f00a fdd6 	bl	8029df0 <__aeabi_atexit>
 801f244:	4c0f      	ldr	r4, [pc, #60]	; (801f284 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f246:	7823      	ldrb	r3, [r4, #0]
 801f248:	f3bf 8f5b 	dmb	ish
 801f24c:	07db      	lsls	r3, r3, #31
 801f24e:	d40b      	bmi.n	801f268 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f250:	4620      	mov	r0, r4
 801f252:	f00a fdd4 	bl	8029dfe <__cxa_guard_acquire>
 801f256:	b138      	cbz	r0, 801f268 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f258:	4620      	mov	r0, r4
 801f25a:	f00a fddc 	bl	8029e16 <__cxa_guard_release>
 801f25e:	4a06      	ldr	r2, [pc, #24]	; (801f278 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f260:	4909      	ldr	r1, [pc, #36]	; (801f288 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f262:	480a      	ldr	r0, [pc, #40]	; (801f28c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f264:	f00a fdc4 	bl	8029df0 <__aeabi_atexit>
 801f268:	4b05      	ldr	r3, [pc, #20]	; (801f280 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f26a:	632b      	str	r3, [r5, #48]	; 0x30
 801f26c:	4b07      	ldr	r3, [pc, #28]	; (801f28c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f26e:	636b      	str	r3, [r5, #52]	; 0x34
 801f270:	bd38      	pop	{r3, r4, r5, pc}
 801f272:	bf00      	nop
 801f274:	200133b4 	.word	0x200133b4
 801f278:	20000000 	.word	0x20000000
 801f27c:	0801be17 	.word	0x0801be17
 801f280:	20000108 	.word	0x20000108
 801f284:	200133b8 	.word	0x200133b8
 801f288:	0801be15 	.word	0x0801be15
 801f28c:	2000010c 	.word	0x2000010c

0801f290 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f290:	b538      	push	{r3, r4, r5, lr}
 801f292:	4c15      	ldr	r4, [pc, #84]	; (801f2e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f294:	7823      	ldrb	r3, [r4, #0]
 801f296:	f3bf 8f5b 	dmb	ish
 801f29a:	07da      	lsls	r2, r3, #31
 801f29c:	4605      	mov	r5, r0
 801f29e:	d40b      	bmi.n	801f2b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f2a0:	4620      	mov	r0, r4
 801f2a2:	f00a fdac 	bl	8029dfe <__cxa_guard_acquire>
 801f2a6:	b138      	cbz	r0, 801f2b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f2a8:	4620      	mov	r0, r4
 801f2aa:	f00a fdb4 	bl	8029e16 <__cxa_guard_release>
 801f2ae:	4a0f      	ldr	r2, [pc, #60]	; (801f2ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f2b0:	490f      	ldr	r1, [pc, #60]	; (801f2f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f2b2:	4810      	ldr	r0, [pc, #64]	; (801f2f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f2b4:	f00a fd9c 	bl	8029df0 <__aeabi_atexit>
 801f2b8:	4c0f      	ldr	r4, [pc, #60]	; (801f2f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f2ba:	7823      	ldrb	r3, [r4, #0]
 801f2bc:	f3bf 8f5b 	dmb	ish
 801f2c0:	07db      	lsls	r3, r3, #31
 801f2c2:	d40b      	bmi.n	801f2dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f2c4:	4620      	mov	r0, r4
 801f2c6:	f00a fd9a 	bl	8029dfe <__cxa_guard_acquire>
 801f2ca:	b138      	cbz	r0, 801f2dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f2cc:	4620      	mov	r0, r4
 801f2ce:	f00a fda2 	bl	8029e16 <__cxa_guard_release>
 801f2d2:	4a06      	ldr	r2, [pc, #24]	; (801f2ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f2d4:	4909      	ldr	r1, [pc, #36]	; (801f2fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f2d6:	480a      	ldr	r0, [pc, #40]	; (801f300 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f2d8:	f00a fd8a 	bl	8029df0 <__aeabi_atexit>
 801f2dc:	4b05      	ldr	r3, [pc, #20]	; (801f2f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f2de:	62ab      	str	r3, [r5, #40]	; 0x28
 801f2e0:	4b07      	ldr	r3, [pc, #28]	; (801f300 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f2e2:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f2e4:	bd38      	pop	{r3, r4, r5, pc}
 801f2e6:	bf00      	nop
 801f2e8:	20013384 	.word	0x20013384
 801f2ec:	20000000 	.word	0x20000000
 801f2f0:	0801be1b 	.word	0x0801be1b
 801f2f4:	200000d8 	.word	0x200000d8
 801f2f8:	20013388 	.word	0x20013388
 801f2fc:	0801be19 	.word	0x0801be19
 801f300:	200000dc 	.word	0x200000dc

0801f304 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f304:	b510      	push	{r4, lr}
 801f306:	4604      	mov	r4, r0
 801f308:	f7ff ff88 	bl	801f21c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f30c:	4620      	mov	r0, r4
 801f30e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f312:	f7ff bfbd 	b.w	801f290 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f318 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f318:	b538      	push	{r3, r4, r5, lr}
 801f31a:	4c15      	ldr	r4, [pc, #84]	; (801f370 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f31c:	7823      	ldrb	r3, [r4, #0]
 801f31e:	f3bf 8f5b 	dmb	ish
 801f322:	07da      	lsls	r2, r3, #31
 801f324:	4605      	mov	r5, r0
 801f326:	d40b      	bmi.n	801f340 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f328:	4620      	mov	r0, r4
 801f32a:	f00a fd68 	bl	8029dfe <__cxa_guard_acquire>
 801f32e:	b138      	cbz	r0, 801f340 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f330:	4620      	mov	r0, r4
 801f332:	f00a fd70 	bl	8029e16 <__cxa_guard_release>
 801f336:	4a0f      	ldr	r2, [pc, #60]	; (801f374 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f338:	490f      	ldr	r1, [pc, #60]	; (801f378 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f33a:	4810      	ldr	r0, [pc, #64]	; (801f37c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f33c:	f00a fd58 	bl	8029df0 <__aeabi_atexit>
 801f340:	4c0f      	ldr	r4, [pc, #60]	; (801f380 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f342:	7823      	ldrb	r3, [r4, #0]
 801f344:	f3bf 8f5b 	dmb	ish
 801f348:	07db      	lsls	r3, r3, #31
 801f34a:	d40b      	bmi.n	801f364 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f34c:	4620      	mov	r0, r4
 801f34e:	f00a fd56 	bl	8029dfe <__cxa_guard_acquire>
 801f352:	b138      	cbz	r0, 801f364 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f354:	4620      	mov	r0, r4
 801f356:	f00a fd5e 	bl	8029e16 <__cxa_guard_release>
 801f35a:	4a06      	ldr	r2, [pc, #24]	; (801f374 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f35c:	4909      	ldr	r1, [pc, #36]	; (801f384 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f35e:	480a      	ldr	r0, [pc, #40]	; (801f388 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f360:	f00a fd46 	bl	8029df0 <__aeabi_atexit>
 801f364:	4b05      	ldr	r3, [pc, #20]	; (801f37c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f366:	652b      	str	r3, [r5, #80]	; 0x50
 801f368:	4b07      	ldr	r3, [pc, #28]	; (801f388 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f36a:	656b      	str	r3, [r5, #84]	; 0x54
 801f36c:	bd38      	pop	{r3, r4, r5, pc}
 801f36e:	bf00      	nop
 801f370:	200133bc 	.word	0x200133bc
 801f374:	20000000 	.word	0x20000000
 801f378:	0801be07 	.word	0x0801be07
 801f37c:	20000110 	.word	0x20000110
 801f380:	200133c0 	.word	0x200133c0
 801f384:	0801be05 	.word	0x0801be05
 801f388:	20000114 	.word	0x20000114

0801f38c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f38c:	b538      	push	{r3, r4, r5, lr}
 801f38e:	4c15      	ldr	r4, [pc, #84]	; (801f3e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f390:	7823      	ldrb	r3, [r4, #0]
 801f392:	f3bf 8f5b 	dmb	ish
 801f396:	07da      	lsls	r2, r3, #31
 801f398:	4605      	mov	r5, r0
 801f39a:	d40b      	bmi.n	801f3b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f39c:	4620      	mov	r0, r4
 801f39e:	f00a fd2e 	bl	8029dfe <__cxa_guard_acquire>
 801f3a2:	b138      	cbz	r0, 801f3b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f3a4:	4620      	mov	r0, r4
 801f3a6:	f00a fd36 	bl	8029e16 <__cxa_guard_release>
 801f3aa:	4a0f      	ldr	r2, [pc, #60]	; (801f3e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f3ac:	490f      	ldr	r1, [pc, #60]	; (801f3ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f3ae:	4810      	ldr	r0, [pc, #64]	; (801f3f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f3b0:	f00a fd1e 	bl	8029df0 <__aeabi_atexit>
 801f3b4:	4c0f      	ldr	r4, [pc, #60]	; (801f3f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f3b6:	7823      	ldrb	r3, [r4, #0]
 801f3b8:	f3bf 8f5b 	dmb	ish
 801f3bc:	07db      	lsls	r3, r3, #31
 801f3be:	d40b      	bmi.n	801f3d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f3c0:	4620      	mov	r0, r4
 801f3c2:	f00a fd1c 	bl	8029dfe <__cxa_guard_acquire>
 801f3c6:	b138      	cbz	r0, 801f3d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f3c8:	4620      	mov	r0, r4
 801f3ca:	f00a fd24 	bl	8029e16 <__cxa_guard_release>
 801f3ce:	4a06      	ldr	r2, [pc, #24]	; (801f3e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f3d0:	4909      	ldr	r1, [pc, #36]	; (801f3f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f3d2:	480a      	ldr	r0, [pc, #40]	; (801f3fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f3d4:	f00a fd0c 	bl	8029df0 <__aeabi_atexit>
 801f3d8:	4b05      	ldr	r3, [pc, #20]	; (801f3f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f3da:	64ab      	str	r3, [r5, #72]	; 0x48
 801f3dc:	4b07      	ldr	r3, [pc, #28]	; (801f3fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f3de:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f3e0:	bd38      	pop	{r3, r4, r5, pc}
 801f3e2:	bf00      	nop
 801f3e4:	200133c4 	.word	0x200133c4
 801f3e8:	20000000 	.word	0x20000000
 801f3ec:	0801be0b 	.word	0x0801be0b
 801f3f0:	20000118 	.word	0x20000118
 801f3f4:	200133c8 	.word	0x200133c8
 801f3f8:	0801be09 	.word	0x0801be09
 801f3fc:	2000011c 	.word	0x2000011c

0801f400 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f400:	b538      	push	{r3, r4, r5, lr}
 801f402:	4c15      	ldr	r4, [pc, #84]	; (801f458 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f404:	7823      	ldrb	r3, [r4, #0]
 801f406:	f3bf 8f5b 	dmb	ish
 801f40a:	07da      	lsls	r2, r3, #31
 801f40c:	4605      	mov	r5, r0
 801f40e:	d40b      	bmi.n	801f428 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f410:	4620      	mov	r0, r4
 801f412:	f00a fcf4 	bl	8029dfe <__cxa_guard_acquire>
 801f416:	b138      	cbz	r0, 801f428 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f418:	4620      	mov	r0, r4
 801f41a:	f00a fcfc 	bl	8029e16 <__cxa_guard_release>
 801f41e:	4a0f      	ldr	r2, [pc, #60]	; (801f45c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f420:	490f      	ldr	r1, [pc, #60]	; (801f460 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f422:	4810      	ldr	r0, [pc, #64]	; (801f464 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f424:	f00a fce4 	bl	8029df0 <__aeabi_atexit>
 801f428:	4c0f      	ldr	r4, [pc, #60]	; (801f468 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f42a:	7823      	ldrb	r3, [r4, #0]
 801f42c:	f3bf 8f5b 	dmb	ish
 801f430:	07db      	lsls	r3, r3, #31
 801f432:	d40b      	bmi.n	801f44c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f434:	4620      	mov	r0, r4
 801f436:	f00a fce2 	bl	8029dfe <__cxa_guard_acquire>
 801f43a:	b138      	cbz	r0, 801f44c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f43c:	4620      	mov	r0, r4
 801f43e:	f00a fcea 	bl	8029e16 <__cxa_guard_release>
 801f442:	4a06      	ldr	r2, [pc, #24]	; (801f45c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f444:	4909      	ldr	r1, [pc, #36]	; (801f46c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f446:	480a      	ldr	r0, [pc, #40]	; (801f470 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f448:	f00a fcd2 	bl	8029df0 <__aeabi_atexit>
 801f44c:	4b05      	ldr	r3, [pc, #20]	; (801f464 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f44e:	642b      	str	r3, [r5, #64]	; 0x40
 801f450:	4b07      	ldr	r3, [pc, #28]	; (801f470 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f452:	646b      	str	r3, [r5, #68]	; 0x44
 801f454:	bd38      	pop	{r3, r4, r5, pc}
 801f456:	bf00      	nop
 801f458:	2001338c 	.word	0x2001338c
 801f45c:	20000000 	.word	0x20000000
 801f460:	0801be0f 	.word	0x0801be0f
 801f464:	200000e0 	.word	0x200000e0
 801f468:	20013390 	.word	0x20013390
 801f46c:	0801be0d 	.word	0x0801be0d
 801f470:	200000e4 	.word	0x200000e4

0801f474 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f474:	b538      	push	{r3, r4, r5, lr}
 801f476:	4c15      	ldr	r4, [pc, #84]	; (801f4cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f478:	7823      	ldrb	r3, [r4, #0]
 801f47a:	f3bf 8f5b 	dmb	ish
 801f47e:	07da      	lsls	r2, r3, #31
 801f480:	4605      	mov	r5, r0
 801f482:	d40b      	bmi.n	801f49c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f484:	4620      	mov	r0, r4
 801f486:	f00a fcba 	bl	8029dfe <__cxa_guard_acquire>
 801f48a:	b138      	cbz	r0, 801f49c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f48c:	4620      	mov	r0, r4
 801f48e:	f00a fcc2 	bl	8029e16 <__cxa_guard_release>
 801f492:	4a0f      	ldr	r2, [pc, #60]	; (801f4d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f494:	490f      	ldr	r1, [pc, #60]	; (801f4d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f496:	4810      	ldr	r0, [pc, #64]	; (801f4d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f498:	f00a fcaa 	bl	8029df0 <__aeabi_atexit>
 801f49c:	4c0f      	ldr	r4, [pc, #60]	; (801f4dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f49e:	7823      	ldrb	r3, [r4, #0]
 801f4a0:	f3bf 8f5b 	dmb	ish
 801f4a4:	07db      	lsls	r3, r3, #31
 801f4a6:	d40b      	bmi.n	801f4c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f4a8:	4620      	mov	r0, r4
 801f4aa:	f00a fca8 	bl	8029dfe <__cxa_guard_acquire>
 801f4ae:	b138      	cbz	r0, 801f4c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f4b0:	4620      	mov	r0, r4
 801f4b2:	f00a fcb0 	bl	8029e16 <__cxa_guard_release>
 801f4b6:	4a06      	ldr	r2, [pc, #24]	; (801f4d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f4b8:	4909      	ldr	r1, [pc, #36]	; (801f4e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f4ba:	480a      	ldr	r0, [pc, #40]	; (801f4e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f4bc:	f00a fc98 	bl	8029df0 <__aeabi_atexit>
 801f4c0:	4b05      	ldr	r3, [pc, #20]	; (801f4d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f4c2:	63ab      	str	r3, [r5, #56]	; 0x38
 801f4c4:	4b07      	ldr	r3, [pc, #28]	; (801f4e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f4c6:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f4c8:	bd38      	pop	{r3, r4, r5, pc}
 801f4ca:	bf00      	nop
 801f4cc:	200133ac 	.word	0x200133ac
 801f4d0:	20000000 	.word	0x20000000
 801f4d4:	0801be13 	.word	0x0801be13
 801f4d8:	20000100 	.word	0x20000100
 801f4dc:	200133b0 	.word	0x200133b0
 801f4e0:	0801be11 	.word	0x0801be11
 801f4e4:	20000104 	.word	0x20000104

0801f4e8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f4e8:	b510      	push	{r4, lr}
 801f4ea:	4604      	mov	r4, r0
 801f4ec:	f7ff ff14 	bl	801f318 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f4f0:	4620      	mov	r0, r4
 801f4f2:	f7ff ff85 	bl	801f400 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f4f6:	4620      	mov	r0, r4
 801f4f8:	f7ff ff48 	bl	801f38c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f4fc:	4620      	mov	r0, r4
 801f4fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f502:	f7ff bfb7 	b.w	801f474 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f508 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f508:	b538      	push	{r3, r4, r5, lr}
 801f50a:	4c15      	ldr	r4, [pc, #84]	; (801f560 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f50c:	7823      	ldrb	r3, [r4, #0]
 801f50e:	f3bf 8f5b 	dmb	ish
 801f512:	07da      	lsls	r2, r3, #31
 801f514:	4605      	mov	r5, r0
 801f516:	d40b      	bmi.n	801f530 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f518:	4620      	mov	r0, r4
 801f51a:	f00a fc70 	bl	8029dfe <__cxa_guard_acquire>
 801f51e:	b138      	cbz	r0, 801f530 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f520:	4620      	mov	r0, r4
 801f522:	f00a fc78 	bl	8029e16 <__cxa_guard_release>
 801f526:	4a0f      	ldr	r2, [pc, #60]	; (801f564 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f528:	490f      	ldr	r1, [pc, #60]	; (801f568 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f52a:	4810      	ldr	r0, [pc, #64]	; (801f56c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f52c:	f00a fc60 	bl	8029df0 <__aeabi_atexit>
 801f530:	4c0f      	ldr	r4, [pc, #60]	; (801f570 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f532:	7823      	ldrb	r3, [r4, #0]
 801f534:	f3bf 8f5b 	dmb	ish
 801f538:	07db      	lsls	r3, r3, #31
 801f53a:	d40b      	bmi.n	801f554 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f53c:	4620      	mov	r0, r4
 801f53e:	f00a fc5e 	bl	8029dfe <__cxa_guard_acquire>
 801f542:	b138      	cbz	r0, 801f554 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f544:	4620      	mov	r0, r4
 801f546:	f00a fc66 	bl	8029e16 <__cxa_guard_release>
 801f54a:	4a06      	ldr	r2, [pc, #24]	; (801f564 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f54c:	4909      	ldr	r1, [pc, #36]	; (801f574 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f54e:	480a      	ldr	r0, [pc, #40]	; (801f578 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f550:	f00a fc4e 	bl	8029df0 <__aeabi_atexit>
 801f554:	4b05      	ldr	r3, [pc, #20]	; (801f56c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f556:	662b      	str	r3, [r5, #96]	; 0x60
 801f558:	4b07      	ldr	r3, [pc, #28]	; (801f578 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f55a:	666b      	str	r3, [r5, #100]	; 0x64
 801f55c:	bd38      	pop	{r3, r4, r5, pc}
 801f55e:	bf00      	nop
 801f560:	20013394 	.word	0x20013394
 801f564:	20000000 	.word	0x20000000
 801f568:	0801bdff 	.word	0x0801bdff
 801f56c:	200000e8 	.word	0x200000e8
 801f570:	20013398 	.word	0x20013398
 801f574:	0801bdfd 	.word	0x0801bdfd
 801f578:	200000ec 	.word	0x200000ec

0801f57c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f57c:	b538      	push	{r3, r4, r5, lr}
 801f57e:	4c15      	ldr	r4, [pc, #84]	; (801f5d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f580:	7823      	ldrb	r3, [r4, #0]
 801f582:	f3bf 8f5b 	dmb	ish
 801f586:	07da      	lsls	r2, r3, #31
 801f588:	4605      	mov	r5, r0
 801f58a:	d40b      	bmi.n	801f5a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f58c:	4620      	mov	r0, r4
 801f58e:	f00a fc36 	bl	8029dfe <__cxa_guard_acquire>
 801f592:	b138      	cbz	r0, 801f5a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f594:	4620      	mov	r0, r4
 801f596:	f00a fc3e 	bl	8029e16 <__cxa_guard_release>
 801f59a:	4a0f      	ldr	r2, [pc, #60]	; (801f5d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f59c:	490f      	ldr	r1, [pc, #60]	; (801f5dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f59e:	4810      	ldr	r0, [pc, #64]	; (801f5e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f5a0:	f00a fc26 	bl	8029df0 <__aeabi_atexit>
 801f5a4:	4c0f      	ldr	r4, [pc, #60]	; (801f5e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f5a6:	7823      	ldrb	r3, [r4, #0]
 801f5a8:	f3bf 8f5b 	dmb	ish
 801f5ac:	07db      	lsls	r3, r3, #31
 801f5ae:	d40b      	bmi.n	801f5c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f5b0:	4620      	mov	r0, r4
 801f5b2:	f00a fc24 	bl	8029dfe <__cxa_guard_acquire>
 801f5b6:	b138      	cbz	r0, 801f5c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f5b8:	4620      	mov	r0, r4
 801f5ba:	f00a fc2c 	bl	8029e16 <__cxa_guard_release>
 801f5be:	4a06      	ldr	r2, [pc, #24]	; (801f5d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f5c0:	4909      	ldr	r1, [pc, #36]	; (801f5e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f5c2:	480a      	ldr	r0, [pc, #40]	; (801f5ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f5c4:	f00a fc14 	bl	8029df0 <__aeabi_atexit>
 801f5c8:	4b05      	ldr	r3, [pc, #20]	; (801f5e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f5ca:	65ab      	str	r3, [r5, #88]	; 0x58
 801f5cc:	4b07      	ldr	r3, [pc, #28]	; (801f5ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f5ce:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f5d0:	bd38      	pop	{r3, r4, r5, pc}
 801f5d2:	bf00      	nop
 801f5d4:	2001336c 	.word	0x2001336c
 801f5d8:	20000000 	.word	0x20000000
 801f5dc:	0801be03 	.word	0x0801be03
 801f5e0:	200000c0 	.word	0x200000c0
 801f5e4:	20013370 	.word	0x20013370
 801f5e8:	0801be01 	.word	0x0801be01
 801f5ec:	200000c4 	.word	0x200000c4

0801f5f0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f5f0:	b510      	push	{r4, lr}
 801f5f2:	4604      	mov	r4, r0
 801f5f4:	f7ff ff88 	bl	801f508 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f5f8:	4620      	mov	r0, r4
 801f5fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f5fe:	f7ff bfbd 	b.w	801f57c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f604 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f604:	b538      	push	{r3, r4, r5, lr}
 801f606:	4c15      	ldr	r4, [pc, #84]	; (801f65c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f608:	7823      	ldrb	r3, [r4, #0]
 801f60a:	f3bf 8f5b 	dmb	ish
 801f60e:	07da      	lsls	r2, r3, #31
 801f610:	4605      	mov	r5, r0
 801f612:	d40b      	bmi.n	801f62c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f614:	4620      	mov	r0, r4
 801f616:	f00a fbf2 	bl	8029dfe <__cxa_guard_acquire>
 801f61a:	b138      	cbz	r0, 801f62c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f61c:	4620      	mov	r0, r4
 801f61e:	f00a fbfa 	bl	8029e16 <__cxa_guard_release>
 801f622:	4a0f      	ldr	r2, [pc, #60]	; (801f660 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f624:	490f      	ldr	r1, [pc, #60]	; (801f664 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f626:	4810      	ldr	r0, [pc, #64]	; (801f668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f628:	f00a fbe2 	bl	8029df0 <__aeabi_atexit>
 801f62c:	4c0f      	ldr	r4, [pc, #60]	; (801f66c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f62e:	7823      	ldrb	r3, [r4, #0]
 801f630:	f3bf 8f5b 	dmb	ish
 801f634:	07db      	lsls	r3, r3, #31
 801f636:	d40b      	bmi.n	801f650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f638:	4620      	mov	r0, r4
 801f63a:	f00a fbe0 	bl	8029dfe <__cxa_guard_acquire>
 801f63e:	b138      	cbz	r0, 801f650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f640:	4620      	mov	r0, r4
 801f642:	f00a fbe8 	bl	8029e16 <__cxa_guard_release>
 801f646:	4a06      	ldr	r2, [pc, #24]	; (801f660 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f648:	4909      	ldr	r1, [pc, #36]	; (801f670 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f64a:	480a      	ldr	r0, [pc, #40]	; (801f674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f64c:	f00a fbd0 	bl	8029df0 <__aeabi_atexit>
 801f650:	4b05      	ldr	r3, [pc, #20]	; (801f668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f652:	672b      	str	r3, [r5, #112]	; 0x70
 801f654:	4b07      	ldr	r3, [pc, #28]	; (801f674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f656:	676b      	str	r3, [r5, #116]	; 0x74
 801f658:	bd38      	pop	{r3, r4, r5, pc}
 801f65a:	bf00      	nop
 801f65c:	20013364 	.word	0x20013364
 801f660:	20000000 	.word	0x20000000
 801f664:	0801bdf7 	.word	0x0801bdf7
 801f668:	200000b8 	.word	0x200000b8
 801f66c:	20013368 	.word	0x20013368
 801f670:	0801bdf5 	.word	0x0801bdf5
 801f674:	200000bc 	.word	0x200000bc

0801f678 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f678:	b538      	push	{r3, r4, r5, lr}
 801f67a:	4c15      	ldr	r4, [pc, #84]	; (801f6d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f67c:	7823      	ldrb	r3, [r4, #0]
 801f67e:	f3bf 8f5b 	dmb	ish
 801f682:	07da      	lsls	r2, r3, #31
 801f684:	4605      	mov	r5, r0
 801f686:	d40b      	bmi.n	801f6a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f688:	4620      	mov	r0, r4
 801f68a:	f00a fbb8 	bl	8029dfe <__cxa_guard_acquire>
 801f68e:	b138      	cbz	r0, 801f6a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f690:	4620      	mov	r0, r4
 801f692:	f00a fbc0 	bl	8029e16 <__cxa_guard_release>
 801f696:	4a0f      	ldr	r2, [pc, #60]	; (801f6d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f698:	490f      	ldr	r1, [pc, #60]	; (801f6d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f69a:	4810      	ldr	r0, [pc, #64]	; (801f6dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f69c:	f00a fba8 	bl	8029df0 <__aeabi_atexit>
 801f6a0:	4c0f      	ldr	r4, [pc, #60]	; (801f6e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f6a2:	7823      	ldrb	r3, [r4, #0]
 801f6a4:	f3bf 8f5b 	dmb	ish
 801f6a8:	07db      	lsls	r3, r3, #31
 801f6aa:	d40b      	bmi.n	801f6c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f6ac:	4620      	mov	r0, r4
 801f6ae:	f00a fba6 	bl	8029dfe <__cxa_guard_acquire>
 801f6b2:	b138      	cbz	r0, 801f6c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f6b4:	4620      	mov	r0, r4
 801f6b6:	f00a fbae 	bl	8029e16 <__cxa_guard_release>
 801f6ba:	4a06      	ldr	r2, [pc, #24]	; (801f6d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f6bc:	4909      	ldr	r1, [pc, #36]	; (801f6e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f6be:	480a      	ldr	r0, [pc, #40]	; (801f6e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f6c0:	f00a fb96 	bl	8029df0 <__aeabi_atexit>
 801f6c4:	4b05      	ldr	r3, [pc, #20]	; (801f6dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f6c6:	66ab      	str	r3, [r5, #104]	; 0x68
 801f6c8:	4b07      	ldr	r3, [pc, #28]	; (801f6e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f6ca:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f6cc:	bd38      	pop	{r3, r4, r5, pc}
 801f6ce:	bf00      	nop
 801f6d0:	2001335c 	.word	0x2001335c
 801f6d4:	20000000 	.word	0x20000000
 801f6d8:	0801bdfb 	.word	0x0801bdfb
 801f6dc:	200000b0 	.word	0x200000b0
 801f6e0:	20013360 	.word	0x20013360
 801f6e4:	0801bdf9 	.word	0x0801bdf9
 801f6e8:	200000b4 	.word	0x200000b4

0801f6ec <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f6ec:	b510      	push	{r4, lr}
 801f6ee:	4604      	mov	r4, r0
 801f6f0:	f7ff ff88 	bl	801f604 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f6f4:	4620      	mov	r0, r4
 801f6f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f6fa:	f7ff bfbd 	b.w	801f678 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f6fe <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f6fe:	b510      	push	{r4, lr}
 801f700:	4604      	mov	r4, r0
 801f702:	f7ff fff3 	bl	801f6ec <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f706:	4620      	mov	r0, r4
 801f708:	f7ff ff72 	bl	801f5f0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f70c:	4620      	mov	r0, r4
 801f70e:	f7ff fdf9 	bl	801f304 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f712:	4620      	mov	r0, r4
 801f714:	f7ff fcfa 	bl	801f10c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f718:	4620      	mov	r0, r4
 801f71a:	f7ff fd75 	bl	801f208 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f71e:	4620      	mov	r0, r4
 801f720:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f724:	f7ff bee0 	b.w	801f4e8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f728 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f728:	b538      	push	{r3, r4, r5, lr}
 801f72a:	4c0b      	ldr	r4, [pc, #44]	; (801f758 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f72c:	7823      	ldrb	r3, [r4, #0]
 801f72e:	f3bf 8f5b 	dmb	ish
 801f732:	07db      	lsls	r3, r3, #31
 801f734:	4605      	mov	r5, r0
 801f736:	d40b      	bmi.n	801f750 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f738:	4620      	mov	r0, r4
 801f73a:	f00a fb60 	bl	8029dfe <__cxa_guard_acquire>
 801f73e:	b138      	cbz	r0, 801f750 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f740:	4620      	mov	r0, r4
 801f742:	f00a fb68 	bl	8029e16 <__cxa_guard_release>
 801f746:	4a05      	ldr	r2, [pc, #20]	; (801f75c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f748:	4905      	ldr	r1, [pc, #20]	; (801f760 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f74a:	4806      	ldr	r0, [pc, #24]	; (801f764 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f74c:	f00a fb50 	bl	8029df0 <__aeabi_atexit>
 801f750:	4b04      	ldr	r3, [pc, #16]	; (801f764 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f752:	67ab      	str	r3, [r5, #120]	; 0x78
 801f754:	bd38      	pop	{r3, r4, r5, pc}
 801f756:	bf00      	nop
 801f758:	20013350 	.word	0x20013350
 801f75c:	20000000 	.word	0x20000000
 801f760:	0801bdf3 	.word	0x0801bdf3
 801f764:	200000a8 	.word	0x200000a8

0801f768 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f768:	b538      	push	{r3, r4, r5, lr}
 801f76a:	4c0b      	ldr	r4, [pc, #44]	; (801f798 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f76c:	7823      	ldrb	r3, [r4, #0]
 801f76e:	f3bf 8f5b 	dmb	ish
 801f772:	07db      	lsls	r3, r3, #31
 801f774:	4605      	mov	r5, r0
 801f776:	d40b      	bmi.n	801f790 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f778:	4620      	mov	r0, r4
 801f77a:	f00a fb40 	bl	8029dfe <__cxa_guard_acquire>
 801f77e:	b138      	cbz	r0, 801f790 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f780:	4620      	mov	r0, r4
 801f782:	f00a fb48 	bl	8029e16 <__cxa_guard_release>
 801f786:	4a05      	ldr	r2, [pc, #20]	; (801f79c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801f788:	4905      	ldr	r1, [pc, #20]	; (801f7a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801f78a:	4806      	ldr	r0, [pc, #24]	; (801f7a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f78c:	f00a fb30 	bl	8029df0 <__aeabi_atexit>
 801f790:	4b04      	ldr	r3, [pc, #16]	; (801f7a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f792:	67eb      	str	r3, [r5, #124]	; 0x7c
 801f794:	bd38      	pop	{r3, r4, r5, pc}
 801f796:	bf00      	nop
 801f798:	20013354 	.word	0x20013354
 801f79c:	20000000 	.word	0x20000000
 801f7a0:	0801bdf1 	.word	0x0801bdf1
 801f7a4:	200000ac 	.word	0x200000ac

0801f7a8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801f7a8:	b570      	push	{r4, r5, r6, lr}
 801f7aa:	4d0d      	ldr	r5, [pc, #52]	; (801f7e0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801f7ac:	4c0d      	ldr	r4, [pc, #52]	; (801f7e4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801f7ae:	782b      	ldrb	r3, [r5, #0]
 801f7b0:	f3bf 8f5b 	dmb	ish
 801f7b4:	f013 0f01 	tst.w	r3, #1
 801f7b8:	4606      	mov	r6, r0
 801f7ba:	d10d      	bne.n	801f7d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f7bc:	4628      	mov	r0, r5
 801f7be:	f00a fb1e 	bl	8029dfe <__cxa_guard_acquire>
 801f7c2:	b148      	cbz	r0, 801f7d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f7c4:	4b08      	ldr	r3, [pc, #32]	; (801f7e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801f7c6:	6023      	str	r3, [r4, #0]
 801f7c8:	4628      	mov	r0, r5
 801f7ca:	f00a fb24 	bl	8029e16 <__cxa_guard_release>
 801f7ce:	4a07      	ldr	r2, [pc, #28]	; (801f7ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801f7d0:	4907      	ldr	r1, [pc, #28]	; (801f7f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801f7d2:	4620      	mov	r0, r4
 801f7d4:	f00a fb0c 	bl	8029df0 <__aeabi_atexit>
 801f7d8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801f7dc:	bd70      	pop	{r4, r5, r6, pc}
 801f7de:	bf00      	nop
 801f7e0:	20013358 	.word	0x20013358
 801f7e4:	200133cc 	.word	0x200133cc
 801f7e8:	0802f004 	.word	0x0802f004
 801f7ec:	20000000 	.word	0x20000000
 801f7f0:	0801bdef 	.word	0x0801bdef

0801f7f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801f7f4:	b510      	push	{r4, lr}
 801f7f6:	4604      	mov	r4, r0
 801f7f8:	f7ff ff96 	bl	801f728 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801f7fc:	4620      	mov	r0, r4
 801f7fe:	f7ff ffb3 	bl	801f768 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801f802:	4620      	mov	r0, r4
 801f804:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f808:	f7ff bfce 	b.w	801f7a8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801f80c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801f80c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f810:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801f814:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801f818:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801f81c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801f820:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801f824:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801f828:	8808      	ldrh	r0, [r1, #0]
 801f82a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801f82e:	2d00      	cmp	r5, #0
 801f830:	eb02 0a0c 	add.w	sl, r2, ip
 801f834:	f2c0 80b0 	blt.w	801f998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f838:	45ab      	cmp	fp, r5
 801f83a:	f340 80ad 	ble.w	801f998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f83e:	2c00      	cmp	r4, #0
 801f840:	f2c0 80a8 	blt.w	801f994 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f844:	45a6      	cmp	lr, r4
 801f846:	f340 80a5 	ble.w	801f994 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f84a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801f84e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801f852:	1c62      	adds	r2, r4, #1
 801f854:	f100 80a3 	bmi.w	801f99e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f858:	4596      	cmp	lr, r2
 801f85a:	f340 80a0 	ble.w	801f99e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f85e:	f1b9 0f00 	cmp.w	r9, #0
 801f862:	f000 809c 	beq.w	801f99e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f866:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f86a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f86e:	3501      	adds	r5, #1
 801f870:	f100 8099 	bmi.w	801f9a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f874:	45ab      	cmp	fp, r5
 801f876:	f340 8096 	ble.w	801f9a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f87a:	2f00      	cmp	r7, #0
 801f87c:	f000 8093 	beq.w	801f9a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f880:	2c00      	cmp	r4, #0
 801f882:	f2c0 808e 	blt.w	801f9a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f886:	45a6      	cmp	lr, r4
 801f888:	f340 808b 	ble.w	801f9a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f88c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801f890:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801f894:	3401      	adds	r4, #1
 801f896:	f100 8089 	bmi.w	801f9ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f89a:	45a6      	cmp	lr, r4
 801f89c:	f340 8086 	ble.w	801f9ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f8a0:	f1b9 0f00 	cmp.w	r9, #0
 801f8a4:	f000 8082 	beq.w	801f9ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f8a8:	44d6      	add	lr, sl
 801f8aa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f8ae:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801f8b2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f8b6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f8ba:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f8be:	fb19 fe07 	smulbb	lr, r9, r7
 801f8c2:	ea44 0808 	orr.w	r8, r4, r8
 801f8c6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f8ca:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f8ce:	f1c7 0210 	rsb	r2, r7, #16
 801f8d2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f8d6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f8da:	ea44 0c0c 	orr.w	ip, r4, ip
 801f8de:	eba2 0209 	sub.w	r2, r2, r9
 801f8e2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f8e6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f8ea:	fb04 f40c 	mul.w	r4, r4, ip
 801f8ee:	fb02 4808 	mla	r8, r2, r8, r4
 801f8f2:	041a      	lsls	r2, r3, #16
 801f8f4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f8f8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f8fc:	4313      	orrs	r3, r2
 801f8fe:	042a      	lsls	r2, r5, #16
 801f900:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f904:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f908:	fb0e 8303 	mla	r3, lr, r3, r8
 801f90c:	432a      	orrs	r2, r5
 801f90e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f912:	fb07 3202 	mla	r2, r7, r2, r3
 801f916:	0d53      	lsrs	r3, r2, #21
 801f918:	0952      	lsrs	r2, r2, #5
 801f91a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f91e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f922:	431a      	orrs	r2, r3
 801f924:	b293      	uxth	r3, r2
 801f926:	b2b4      	uxth	r4, r6
 801f928:	1202      	asrs	r2, r0, #8
 801f92a:	43f6      	mvns	r6, r6
 801f92c:	b2f6      	uxtb	r6, r6
 801f92e:	121d      	asrs	r5, r3, #8
 801f930:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f934:	fb12 f206 	smulbb	r2, r2, r6
 801f938:	10c7      	asrs	r7, r0, #3
 801f93a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f93e:	00c0      	lsls	r0, r0, #3
 801f940:	fb05 2504 	mla	r5, r5, r4, r2
 801f944:	b2c0      	uxtb	r0, r0
 801f946:	10da      	asrs	r2, r3, #3
 801f948:	00db      	lsls	r3, r3, #3
 801f94a:	b2db      	uxtb	r3, r3
 801f94c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f950:	fb10 f006 	smulbb	r0, r0, r6
 801f954:	b2ad      	uxth	r5, r5
 801f956:	fb03 0004 	mla	r0, r3, r4, r0
 801f95a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f95e:	fb17 f706 	smulbb	r7, r7, r6
 801f962:	b280      	uxth	r0, r0
 801f964:	1c6b      	adds	r3, r5, #1
 801f966:	fb02 7204 	mla	r2, r2, r4, r7
 801f96a:	b292      	uxth	r2, r2
 801f96c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f970:	1c43      	adds	r3, r0, #1
 801f972:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f976:	1c50      	adds	r0, r2, #1
 801f978:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f97c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f980:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f984:	0952      	lsrs	r2, r2, #5
 801f986:	432b      	orrs	r3, r5
 801f988:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f98c:	4313      	orrs	r3, r2
 801f98e:	800b      	strh	r3, [r1, #0]
 801f990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f994:	4680      	mov	r8, r0
 801f996:	e75c      	b.n	801f852 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801f998:	4684      	mov	ip, r0
 801f99a:	4680      	mov	r8, r0
 801f99c:	e767      	b.n	801f86e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f99e:	4684      	mov	ip, r0
 801f9a0:	e765      	b.n	801f86e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f9a2:	4605      	mov	r5, r0
 801f9a4:	e776      	b.n	801f894 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801f9a6:	4603      	mov	r3, r0
 801f9a8:	4605      	mov	r5, r0
 801f9aa:	e782      	b.n	801f8b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801f9ac:	4603      	mov	r3, r0
 801f9ae:	e780      	b.n	801f8b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801f9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f9b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9b4:	b099      	sub	sp, #100	; 0x64
 801f9b6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801f9ba:	9215      	str	r2, [sp, #84]	; 0x54
 801f9bc:	9309      	str	r3, [sp, #36]	; 0x24
 801f9be:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801f9c0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801f9c4:	930d      	str	r3, [sp, #52]	; 0x34
 801f9c6:	910c      	str	r1, [sp, #48]	; 0x30
 801f9c8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801f9cc:	9016      	str	r0, [sp, #88]	; 0x58
 801f9ce:	6850      	ldr	r0, [r2, #4]
 801f9d0:	6812      	ldr	r2, [r2, #0]
 801f9d2:	fb00 1303 	mla	r3, r0, r3, r1
 801f9d6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801f9da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9dc:	681b      	ldr	r3, [r3, #0]
 801f9de:	930b      	str	r3, [sp, #44]	; 0x2c
 801f9e0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9e2:	685e      	ldr	r6, [r3, #4]
 801f9e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f9e6:	43db      	mvns	r3, r3
 801f9e8:	b2db      	uxtb	r3, r3
 801f9ea:	3604      	adds	r6, #4
 801f9ec:	930a      	str	r3, [sp, #40]	; 0x28
 801f9ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f9f0:	2b00      	cmp	r3, #0
 801f9f2:	dc03      	bgt.n	801f9fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f9f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801f9f6:	2b00      	cmp	r3, #0
 801f9f8:	f340 8225 	ble.w	801fe46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f9fc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa06:	1e48      	subs	r0, r1, #1
 801fa08:	1e57      	subs	r7, r2, #1
 801fa0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa0c:	2b00      	cmp	r3, #0
 801fa0e:	f340 80e3 	ble.w	801fbd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801fa12:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801fa16:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fa1a:	d406      	bmi.n	801fa2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fa1c:	4584      	cmp	ip, r0
 801fa1e:	da04      	bge.n	801fa2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fa20:	2b00      	cmp	r3, #0
 801fa22:	db02      	blt.n	801fa2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fa24:	42bb      	cmp	r3, r7
 801fa26:	f2c0 80d8 	blt.w	801fbda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fa2a:	f11c 0c01 	adds.w	ip, ip, #1
 801fa2e:	f100 80c9 	bmi.w	801fbc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fa32:	4561      	cmp	r1, ip
 801fa34:	f2c0 80c6 	blt.w	801fbc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fa38:	3301      	adds	r3, #1
 801fa3a:	f100 80c3 	bmi.w	801fbc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fa3e:	429a      	cmp	r2, r3
 801fa40:	f2c0 80c0 	blt.w	801fbc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fa44:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801fa48:	4647      	mov	r7, r8
 801fa4a:	f1bb 0f00 	cmp.w	fp, #0
 801fa4e:	f340 80e3 	ble.w	801fc18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801fa52:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fa54:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fa56:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fa5a:	689b      	ldr	r3, [r3, #8]
 801fa5c:	ea5f 422a 	movs.w	r2, sl, asr #16
 801fa60:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fa64:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801fa68:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fa6c:	f100 8121 	bmi.w	801fcb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fa70:	f103 39ff 	add.w	r9, r3, #4294967295
 801fa74:	454a      	cmp	r2, r9
 801fa76:	f280 811c 	bge.w	801fcb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fa7a:	f1bc 0f00 	cmp.w	ip, #0
 801fa7e:	f2c0 8118 	blt.w	801fcb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fa82:	f10e 39ff 	add.w	r9, lr, #4294967295
 801fa86:	45cc      	cmp	ip, r9
 801fa88:	f280 8113 	bge.w	801fcb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fa8c:	b21b      	sxth	r3, r3
 801fa8e:	fb0c 2203 	mla	r2, ip, r3, r2
 801fa92:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fa94:	eb04 0902 	add.w	r9, r4, r2
 801fa98:	5ca2      	ldrb	r2, [r4, r2]
 801fa9a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801fa9e:	2800      	cmp	r0, #0
 801faa0:	f000 80fe 	beq.w	801fca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801faa4:	f899 2001 	ldrb.w	r2, [r9, #1]
 801faa8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801faac:	9211      	str	r2, [sp, #68]	; 0x44
 801faae:	b151      	cbz	r1, 801fac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fab0:	eb09 0203 	add.w	r2, r9, r3
 801fab4:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fab8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fabc:	930f      	str	r3, [sp, #60]	; 0x3c
 801fabe:	7853      	ldrb	r3, [r2, #1]
 801fac0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fac4:	9312      	str	r3, [sp, #72]	; 0x48
 801fac6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fac8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801faca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801face:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fad2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fad6:	ea4c 0c03 	orr.w	ip, ip, r3
 801fada:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fadc:	041b      	lsls	r3, r3, #16
 801fade:	fb10 f201 	smulbb	r2, r0, r1
 801fae2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801fae6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801faea:	10d2      	asrs	r2, r2, #3
 801faec:	4323      	orrs	r3, r4
 801faee:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801faf2:	4353      	muls	r3, r2
 801faf4:	fb09 330c 	mla	r3, r9, ip, r3
 801faf8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801fafc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fb00:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fb04:	ea4c 0e0e 	orr.w	lr, ip, lr
 801fb08:	f1c1 0c10 	rsb	ip, r1, #16
 801fb0c:	ebac 0c00 	sub.w	ip, ip, r0
 801fb10:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fb14:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801fb18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fb1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fb1c:	0418      	lsls	r0, r3, #16
 801fb1e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fb22:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fb26:	4318      	orrs	r0, r3
 801fb28:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801fb2c:	fb02 c200 	mla	r2, r2, r0, ip
 801fb30:	0d53      	lsrs	r3, r2, #21
 801fb32:	0952      	lsrs	r2, r2, #5
 801fb34:	8838      	ldrh	r0, [r7, #0]
 801fb36:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fb3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fb3e:	431a      	orrs	r2, r3
 801fb40:	b292      	uxth	r2, r2
 801fb42:	1201      	asrs	r1, r0, #8
 801fb44:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801fb48:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801fb4c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fb50:	fb11 f104 	smulbb	r1, r1, r4
 801fb54:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801fb58:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fb5c:	00c0      	lsls	r0, r0, #3
 801fb5e:	fb0c 1c03 	mla	ip, ip, r3, r1
 801fb62:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fb66:	10d1      	asrs	r1, r2, #3
 801fb68:	b2c0      	uxtb	r0, r0
 801fb6a:	00d2      	lsls	r2, r2, #3
 801fb6c:	b2d2      	uxtb	r2, r2
 801fb6e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fb72:	fb1e fe04 	smulbb	lr, lr, r4
 801fb76:	fb10 f004 	smulbb	r0, r0, r4
 801fb7a:	fa1f fc8c 	uxth.w	ip, ip
 801fb7e:	fb01 e103 	mla	r1, r1, r3, lr
 801fb82:	fb02 0303 	mla	r3, r2, r3, r0
 801fb86:	b29a      	uxth	r2, r3
 801fb88:	f10c 0301 	add.w	r3, ip, #1
 801fb8c:	b289      	uxth	r1, r1
 801fb8e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fb92:	1c53      	adds	r3, r2, #1
 801fb94:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fb98:	1c4a      	adds	r2, r1, #1
 801fb9a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fb9e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fba2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fba6:	0949      	lsrs	r1, r1, #5
 801fba8:	ea43 030c 	orr.w	r3, r3, ip
 801fbac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fbb0:	430b      	orrs	r3, r1
 801fbb2:	803b      	strh	r3, [r7, #0]
 801fbb4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fbb6:	449a      	add	sl, r3
 801fbb8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fbba:	3702      	adds	r7, #2
 801fbbc:	441d      	add	r5, r3
 801fbbe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fbc2:	e742      	b.n	801fa4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fbc4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fbc6:	449a      	add	sl, r3
 801fbc8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fbca:	441d      	add	r5, r3
 801fbcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbce:	3b01      	subs	r3, #1
 801fbd0:	9309      	str	r3, [sp, #36]	; 0x24
 801fbd2:	f108 0802 	add.w	r8, r8, #2
 801fbd6:	e718      	b.n	801fa0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fbd8:	d023      	beq.n	801fc22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fbda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbdc:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fbde:	3b01      	subs	r3, #1
 801fbe0:	fb00 a003 	mla	r0, r0, r3, sl
 801fbe4:	1400      	asrs	r0, r0, #16
 801fbe6:	f53f af2d 	bmi.w	801fa44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fbea:	3901      	subs	r1, #1
 801fbec:	4288      	cmp	r0, r1
 801fbee:	f6bf af29 	bge.w	801fa44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fbf2:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fbf4:	fb01 5303 	mla	r3, r1, r3, r5
 801fbf8:	141b      	asrs	r3, r3, #16
 801fbfa:	f53f af23 	bmi.w	801fa44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fbfe:	3a01      	subs	r2, #1
 801fc00:	4293      	cmp	r3, r2
 801fc02:	f6bf af1f 	bge.w	801fa44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc06:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fc0a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fc0e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fc12:	f1be 0f00 	cmp.w	lr, #0
 801fc16:	dc6c      	bgt.n	801fcf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fc18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc1a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fc1e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fc22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fc24:	2b00      	cmp	r3, #0
 801fc26:	f340 810e 	ble.w	801fe46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fc2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc2e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fc32:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc36:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fc38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc44:	eef0 6a62 	vmov.f32	s13, s5
 801fc48:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc50:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc54:	ee16 aa90 	vmov	sl, s13
 801fc58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc5c:	eef0 6a43 	vmov.f32	s13, s6
 801fc60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc64:	ee12 2a90 	vmov	r2, s5
 801fc68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc6c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc70:	ee13 2a10 	vmov	r2, s6
 801fc74:	9325      	str	r3, [sp, #148]	; 0x94
 801fc76:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fc78:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc7c:	9326      	str	r3, [sp, #152]	; 0x98
 801fc7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fc80:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801fc82:	3b01      	subs	r3, #1
 801fc84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc88:	930c      	str	r3, [sp, #48]	; 0x30
 801fc8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fc8c:	bf08      	it	eq
 801fc8e:	4613      	moveq	r3, r2
 801fc90:	ee16 5a90 	vmov	r5, s13
 801fc94:	9309      	str	r3, [sp, #36]	; 0x24
 801fc96:	eeb0 3a67 	vmov.f32	s6, s15
 801fc9a:	eef0 2a47 	vmov.f32	s5, s14
 801fc9e:	e6a6      	b.n	801f9ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fca0:	2900      	cmp	r1, #0
 801fca2:	f43f af10 	beq.w	801fac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fca6:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fcaa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fcae:	930f      	str	r3, [sp, #60]	; 0x3c
 801fcb0:	e709      	b.n	801fac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fcb2:	f112 0901 	adds.w	r9, r2, #1
 801fcb6:	f53f af7d 	bmi.w	801fbb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fcba:	454b      	cmp	r3, r9
 801fcbc:	f6ff af7a 	blt.w	801fbb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fcc0:	f11c 0901 	adds.w	r9, ip, #1
 801fcc4:	f53f af76 	bmi.w	801fbb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fcc8:	45ce      	cmp	lr, r9
 801fcca:	f6ff af73 	blt.w	801fbb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fcce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fcd0:	9202      	str	r2, [sp, #8]
 801fcd2:	b21b      	sxth	r3, r3
 801fcd4:	fa0f f28e 	sxth.w	r2, lr
 801fcd8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801fcdc:	e9cd c003 	strd	ip, r0, [sp, #12]
 801fce0:	9201      	str	r2, [sp, #4]
 801fce2:	9300      	str	r3, [sp, #0]
 801fce4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fce6:	9816      	ldr	r0, [sp, #88]	; 0x58
 801fce8:	4633      	mov	r3, r6
 801fcea:	4639      	mov	r1, r7
 801fcec:	f7ff fd8e 	bl	801f80c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801fcf0:	e760      	b.n	801fbb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fcf2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fcf4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fcf6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fcfa:	ea4f 422a 	mov.w	r2, sl, asr #16
 801fcfe:	1429      	asrs	r1, r5, #16
 801fd00:	fb03 2101 	mla	r1, r3, r1, r2
 801fd04:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fd06:	440a      	add	r2, r1
 801fd08:	5c61      	ldrb	r1, [r4, r1]
 801fd0a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fd0e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fd12:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fd16:	f1bc 0f00 	cmp.w	ip, #0
 801fd1a:	f000 808c 	beq.w	801fe36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801fd1e:	7857      	ldrb	r7, [r2, #1]
 801fd20:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801fd24:	9413      	str	r4, [sp, #76]	; 0x4c
 801fd26:	b140      	cbz	r0, 801fd3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fd28:	18d7      	adds	r7, r2, r3
 801fd2a:	5cd3      	ldrb	r3, [r2, r3]
 801fd2c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fd30:	9310      	str	r3, [sp, #64]	; 0x40
 801fd32:	787b      	ldrb	r3, [r7, #1]
 801fd34:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fd38:	9314      	str	r3, [sp, #80]	; 0x50
 801fd3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fd3c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fd3e:	fb1c f200 	smulbb	r2, ip, r0
 801fd42:	041f      	lsls	r7, r3, #16
 801fd44:	10d2      	asrs	r2, r2, #3
 801fd46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fd4a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801fd4e:	431f      	orrs	r7, r3
 801fd50:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801fd54:	9317      	str	r3, [sp, #92]	; 0x5c
 801fd56:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fd58:	041b      	lsls	r3, r3, #16
 801fd5a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801fd5e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fd62:	ea43 030b 	orr.w	r3, r3, fp
 801fd66:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fd68:	4353      	muls	r3, r2
 801fd6a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fd6e:	fb04 3707 	mla	r7, r4, r7, r3
 801fd72:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fd76:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fd7a:	ea43 0b01 	orr.w	fp, r3, r1
 801fd7e:	f1c0 0110 	rsb	r1, r0, #16
 801fd82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fd84:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fd86:	eba1 0c0c 	sub.w	ip, r1, ip
 801fd8a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fd8e:	fb0c 770b 	mla	r7, ip, fp, r7
 801fd92:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fd96:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801fd9a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fd9e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801fda2:	ea4c 0c0b 	orr.w	ip, ip, fp
 801fda6:	fb02 770c 	mla	r7, r2, ip, r7
 801fdaa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fdac:	0d79      	lsrs	r1, r7, #21
 801fdae:	097f      	lsrs	r7, r7, #5
 801fdb0:	8812      	ldrh	r2, [r2, #0]
 801fdb2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fdb6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fdba:	430f      	orrs	r7, r1
 801fdbc:	b2bb      	uxth	r3, r7
 801fdbe:	1211      	asrs	r1, r2, #8
 801fdc0:	1218      	asrs	r0, r3, #8
 801fdc2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fdc6:	fb11 f104 	smulbb	r1, r1, r4
 801fdca:	10d7      	asrs	r7, r2, #3
 801fdcc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fdd0:	00d2      	lsls	r2, r2, #3
 801fdd2:	fb00 1009 	mla	r0, r0, r9, r1
 801fdd6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fdda:	10d9      	asrs	r1, r3, #3
 801fddc:	b2d2      	uxtb	r2, r2
 801fdde:	00db      	lsls	r3, r3, #3
 801fde0:	fb17 f704 	smulbb	r7, r7, r4
 801fde4:	fb12 f204 	smulbb	r2, r2, r4
 801fde8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fdec:	b2db      	uxtb	r3, r3
 801fdee:	b280      	uxth	r0, r0
 801fdf0:	fb01 7109 	mla	r1, r1, r9, r7
 801fdf4:	fb03 2309 	mla	r3, r3, r9, r2
 801fdf8:	b29b      	uxth	r3, r3
 801fdfa:	b289      	uxth	r1, r1
 801fdfc:	1c42      	adds	r2, r0, #1
 801fdfe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fe02:	1c4f      	adds	r7, r1, #1
 801fe04:	1c5a      	adds	r2, r3, #1
 801fe06:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fe0a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801fe0e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fe12:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fe16:	0949      	lsrs	r1, r1, #5
 801fe18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fe1a:	4310      	orrs	r0, r2
 801fe1c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe20:	4308      	orrs	r0, r1
 801fe22:	f823 0b02 	strh.w	r0, [r3], #2
 801fe26:	930e      	str	r3, [sp, #56]	; 0x38
 801fe28:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fe2a:	449a      	add	sl, r3
 801fe2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fe2e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801fe32:	441d      	add	r5, r3
 801fe34:	e6ed      	b.n	801fc12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801fe36:	2800      	cmp	r0, #0
 801fe38:	f43f af7f 	beq.w	801fd3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fe3c:	5cd3      	ldrb	r3, [r2, r3]
 801fe3e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fe42:	9310      	str	r3, [sp, #64]	; 0x40
 801fe44:	e779      	b.n	801fd3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fe46:	b019      	add	sp, #100	; 0x64
 801fe48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fe4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fe50:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801fe54:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801fe58:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801fe5c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801fe60:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801fe64:	8808      	ldrh	r0, [r1, #0]
 801fe66:	fb08 470e 	mla	r7, r8, lr, r4
 801fe6a:	f1b8 0f00 	cmp.w	r8, #0
 801fe6e:	eb02 0907 	add.w	r9, r2, r7
 801fe72:	db67      	blt.n	801ff44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fe74:	45c2      	cmp	sl, r8
 801fe76:	dd65      	ble.n	801ff44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fe78:	2c00      	cmp	r4, #0
 801fe7a:	db61      	blt.n	801ff40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fe7c:	45a6      	cmp	lr, r4
 801fe7e:	dd5f      	ble.n	801ff40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fe80:	5dd2      	ldrb	r2, [r2, r7]
 801fe82:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801fe86:	1c62      	adds	r2, r4, #1
 801fe88:	d45f      	bmi.n	801ff4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fe8a:	4596      	cmp	lr, r2
 801fe8c:	dd5d      	ble.n	801ff4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fe8e:	2d00      	cmp	r5, #0
 801fe90:	d05b      	beq.n	801ff4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fe92:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fe96:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801fe9a:	f118 0801 	adds.w	r8, r8, #1
 801fe9e:	d458      	bmi.n	801ff52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fea0:	45c2      	cmp	sl, r8
 801fea2:	dd56      	ble.n	801ff52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fea4:	2e00      	cmp	r6, #0
 801fea6:	d054      	beq.n	801ff52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fea8:	2c00      	cmp	r4, #0
 801feaa:	db50      	blt.n	801ff4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801feac:	45a6      	cmp	lr, r4
 801feae:	dd4e      	ble.n	801ff4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801feb0:	f819 200e 	ldrb.w	r2, [r9, lr]
 801feb4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801feb8:	3401      	adds	r4, #1
 801feba:	d407      	bmi.n	801fecc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801febc:	45a6      	cmp	lr, r4
 801febe:	dd05      	ble.n	801fecc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fec0:	b125      	cbz	r5, 801fecc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fec2:	44ce      	add	lr, r9
 801fec4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801fec8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801fecc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801fed0:	fb15 f406 	smulbb	r4, r5, r6
 801fed4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fed8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801fedc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fee0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801fee4:	ea43 0c0c 	orr.w	ip, r3, ip
 801fee8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801feec:	f1c6 0310 	rsb	r3, r6, #16
 801fef0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fef4:	1b5b      	subs	r3, r3, r5
 801fef6:	ea4e 0707 	orr.w	r7, lr, r7
 801fefa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801fefe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ff02:	437d      	muls	r5, r7
 801ff04:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ff08:	0403      	lsls	r3, r0, #16
 801ff0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ff0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ff12:	4318      	orrs	r0, r3
 801ff14:	0413      	lsls	r3, r2, #16
 801ff16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ff1a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ff1e:	4313      	orrs	r3, r2
 801ff20:	fb04 c000 	mla	r0, r4, r0, ip
 801ff24:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ff28:	fb06 0003 	mla	r0, r6, r3, r0
 801ff2c:	0d43      	lsrs	r3, r0, #21
 801ff2e:	0940      	lsrs	r0, r0, #5
 801ff30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ff34:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ff38:	4318      	orrs	r0, r3
 801ff3a:	8008      	strh	r0, [r1, #0]
 801ff3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ff40:	4684      	mov	ip, r0
 801ff42:	e7a0      	b.n	801fe86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ff44:	4607      	mov	r7, r0
 801ff46:	4684      	mov	ip, r0
 801ff48:	e7a7      	b.n	801fe9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ff4a:	4607      	mov	r7, r0
 801ff4c:	e7a5      	b.n	801fe9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ff4e:	4602      	mov	r2, r0
 801ff50:	e7b2      	b.n	801feb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ff52:	4602      	mov	r2, r0
 801ff54:	e7ba      	b.n	801fecc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ff56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff5a:	b093      	sub	sp, #76	; 0x4c
 801ff5c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ff60:	920f      	str	r2, [sp, #60]	; 0x3c
 801ff62:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ff64:	9108      	str	r1, [sp, #32]
 801ff66:	9306      	str	r3, [sp, #24]
 801ff68:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ff6c:	9010      	str	r0, [sp, #64]	; 0x40
 801ff6e:	6850      	ldr	r0, [r2, #4]
 801ff70:	6812      	ldr	r2, [r2, #0]
 801ff72:	fb00 1303 	mla	r3, r0, r3, r1
 801ff76:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ff7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff7c:	681b      	ldr	r3, [r3, #0]
 801ff7e:	9307      	str	r3, [sp, #28]
 801ff80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff82:	685f      	ldr	r7, [r3, #4]
 801ff84:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ff88:	3704      	adds	r7, #4
 801ff8a:	9b08      	ldr	r3, [sp, #32]
 801ff8c:	2b00      	cmp	r3, #0
 801ff8e:	dc03      	bgt.n	801ff98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ff90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ff92:	2b00      	cmp	r3, #0
 801ff94:	f340 81b2 	ble.w	80202fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ff98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ff9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ffa2:	1e48      	subs	r0, r1, #1
 801ffa4:	f102 3cff 	add.w	ip, r2, #4294967295
 801ffa8:	9b06      	ldr	r3, [sp, #24]
 801ffaa:	2b00      	cmp	r3, #0
 801ffac:	f340 80a9 	ble.w	8020102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ffb0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ffb4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ffb8:	d406      	bmi.n	801ffc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ffba:	4586      	cmp	lr, r0
 801ffbc:	da04      	bge.n	801ffc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ffbe:	2b00      	cmp	r3, #0
 801ffc0:	db02      	blt.n	801ffc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ffc2:	4563      	cmp	r3, ip
 801ffc4:	f2c0 809e 	blt.w	8020104 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ffc8:	f11e 0e01 	adds.w	lr, lr, #1
 801ffcc:	f100 808f 	bmi.w	80200ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ffd0:	4571      	cmp	r1, lr
 801ffd2:	f2c0 808c 	blt.w	80200ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ffd6:	3301      	adds	r3, #1
 801ffd8:	f100 8089 	bmi.w	80200ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ffdc:	429a      	cmp	r2, r3
 801ffde:	f2c0 8086 	blt.w	80200ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ffe2:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ffe6:	46c8      	mov	r8, r9
 801ffe8:	f1bb 0f00 	cmp.w	fp, #0
 801ffec:	f340 80a6 	ble.w	802013c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801fff0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801fff2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fff4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fff8:	689b      	ldr	r3, [r3, #8]
 801fffa:	1422      	asrs	r2, r4, #16
 801fffc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020000:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020004:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020008:	f100 80e3 	bmi.w	80201d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802000c:	f103 3aff 	add.w	sl, r3, #4294967295
 8020010:	4552      	cmp	r2, sl
 8020012:	f280 80de 	bge.w	80201d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020016:	f1bc 0f00 	cmp.w	ip, #0
 802001a:	f2c0 80da 	blt.w	80201d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802001e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020022:	45d4      	cmp	ip, sl
 8020024:	f280 80d5 	bge.w	80201d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020028:	b21b      	sxth	r3, r3
 802002a:	fb0c 2203 	mla	r2, ip, r3, r2
 802002e:	9d07      	ldr	r5, [sp, #28]
 8020030:	eb05 0a02 	add.w	sl, r5, r2
 8020034:	5caa      	ldrb	r2, [r5, r2]
 8020036:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 802003a:	2800      	cmp	r0, #0
 802003c:	f000 80c0 	beq.w	80201c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8020040:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020044:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8020048:	920b      	str	r2, [sp, #44]	; 0x2c
 802004a:	b151      	cbz	r1, 8020062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802004c:	eb0a 0203 	add.w	r2, sl, r3
 8020050:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020054:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020058:	9309      	str	r3, [sp, #36]	; 0x24
 802005a:	7853      	ldrb	r3, [r2, #1]
 802005c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020060:	930c      	str	r3, [sp, #48]	; 0x30
 8020062:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020064:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020066:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802006a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802006e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020072:	ea4c 0c03 	orr.w	ip, ip, r3
 8020076:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020078:	041b      	lsls	r3, r3, #16
 802007a:	fb10 f201 	smulbb	r2, r0, r1
 802007e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020082:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020086:	10d2      	asrs	r2, r2, #3
 8020088:	432b      	orrs	r3, r5
 802008a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802008e:	4353      	muls	r3, r2
 8020090:	fb0a 330c 	mla	r3, sl, ip, r3
 8020094:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020098:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802009c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80200a0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80200a4:	f1c1 0c10 	rsb	ip, r1, #16
 80200a8:	ebac 0c00 	sub.w	ip, ip, r0
 80200ac:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80200b0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80200b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80200b6:	0418      	lsls	r0, r3, #16
 80200b8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80200bc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80200c0:	4318      	orrs	r0, r3
 80200c2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80200c6:	fb02 c200 	mla	r2, r2, r0, ip
 80200ca:	0d53      	lsrs	r3, r2, #21
 80200cc:	0952      	lsrs	r2, r2, #5
 80200ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80200d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80200d6:	431a      	orrs	r2, r3
 80200d8:	f8a8 2000 	strh.w	r2, [r8]
 80200dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80200de:	441c      	add	r4, r3
 80200e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80200e2:	f108 0802 	add.w	r8, r8, #2
 80200e6:	441e      	add	r6, r3
 80200e8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80200ec:	e77c      	b.n	801ffe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80200ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80200f0:	441c      	add	r4, r3
 80200f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80200f4:	441e      	add	r6, r3
 80200f6:	9b06      	ldr	r3, [sp, #24]
 80200f8:	3b01      	subs	r3, #1
 80200fa:	9306      	str	r3, [sp, #24]
 80200fc:	f109 0902 	add.w	r9, r9, #2
 8020100:	e752      	b.n	801ffa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020102:	d020      	beq.n	8020146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8020104:	9b06      	ldr	r3, [sp, #24]
 8020106:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020108:	3b01      	subs	r3, #1
 802010a:	fb00 4003 	mla	r0, r0, r3, r4
 802010e:	1400      	asrs	r0, r0, #16
 8020110:	f53f af67 	bmi.w	801ffe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020114:	3901      	subs	r1, #1
 8020116:	4288      	cmp	r0, r1
 8020118:	f6bf af63 	bge.w	801ffe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802011c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802011e:	fb01 6303 	mla	r3, r1, r3, r6
 8020122:	141b      	asrs	r3, r3, #16
 8020124:	f53f af5d 	bmi.w	801ffe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020128:	3a01      	subs	r2, #1
 802012a:	4293      	cmp	r3, r2
 802012c:	f6bf af59 	bge.w	801ffe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020130:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8020134:	46ca      	mov	sl, r9
 8020136:	f1b8 0f00 	cmp.w	r8, #0
 802013a:	dc67      	bgt.n	802020c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 802013c:	9b06      	ldr	r3, [sp, #24]
 802013e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020142:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020146:	9b08      	ldr	r3, [sp, #32]
 8020148:	2b00      	cmp	r3, #0
 802014a:	f340 80d7 	ble.w	80202fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802014e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020152:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020156:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802015a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802015c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020160:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020164:	eeb0 6a62 	vmov.f32	s12, s5
 8020168:	ee61 7a27 	vmul.f32	s15, s2, s15
 802016c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020170:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020174:	ee16 4a10 	vmov	r4, s12
 8020178:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802017c:	eeb0 6a43 	vmov.f32	s12, s6
 8020180:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020184:	ee12 2a90 	vmov	r2, s5
 8020188:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802018c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020190:	ee13 2a10 	vmov	r2, s6
 8020194:	931f      	str	r3, [sp, #124]	; 0x7c
 8020196:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020198:	fb92 f3f3 	sdiv	r3, r2, r3
 802019c:	9320      	str	r3, [sp, #128]	; 0x80
 802019e:	9b08      	ldr	r3, [sp, #32]
 80201a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80201a2:	3b01      	subs	r3, #1
 80201a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80201a8:	9308      	str	r3, [sp, #32]
 80201aa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80201ac:	bf08      	it	eq
 80201ae:	4613      	moveq	r3, r2
 80201b0:	ee16 6a10 	vmov	r6, s12
 80201b4:	9306      	str	r3, [sp, #24]
 80201b6:	eeb0 3a67 	vmov.f32	s6, s15
 80201ba:	eef0 2a47 	vmov.f32	s5, s14
 80201be:	e6e4      	b.n	801ff8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80201c0:	2900      	cmp	r1, #0
 80201c2:	f43f af4e 	beq.w	8020062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80201c6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80201ca:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80201ce:	9309      	str	r3, [sp, #36]	; 0x24
 80201d0:	e747      	b.n	8020062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80201d2:	f112 0a01 	adds.w	sl, r2, #1
 80201d6:	d481      	bmi.n	80200dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80201d8:	4553      	cmp	r3, sl
 80201da:	f6ff af7f 	blt.w	80200dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80201de:	f11c 0a01 	adds.w	sl, ip, #1
 80201e2:	f53f af7b 	bmi.w	80200dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80201e6:	45d6      	cmp	lr, sl
 80201e8:	f6ff af78 	blt.w	80200dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80201ec:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80201f0:	b21b      	sxth	r3, r3
 80201f2:	fa0f f28e 	sxth.w	r2, lr
 80201f6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80201fa:	9201      	str	r2, [sp, #4]
 80201fc:	9300      	str	r3, [sp, #0]
 80201fe:	9a07      	ldr	r2, [sp, #28]
 8020200:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020202:	463b      	mov	r3, r7
 8020204:	4641      	mov	r1, r8
 8020206:	f7ff fe21 	bl	801fe4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802020a:	e767      	b.n	80200dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802020c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802020e:	9d07      	ldr	r5, [sp, #28]
 8020210:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020214:	1422      	asrs	r2, r4, #16
 8020216:	1431      	asrs	r1, r6, #16
 8020218:	fb03 2101 	mla	r1, r3, r1, r2
 802021c:	9a07      	ldr	r2, [sp, #28]
 802021e:	440a      	add	r2, r1
 8020220:	5c69      	ldrb	r1, [r5, r1]
 8020222:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8020226:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802022a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802022e:	f1be 0f00 	cmp.w	lr, #0
 8020232:	d05c      	beq.n	80202ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020234:	f892 c001 	ldrb.w	ip, [r2, #1]
 8020238:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 802023c:	950d      	str	r5, [sp, #52]	; 0x34
 802023e:	b150      	cbz	r0, 8020256 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020240:	eb02 0c03 	add.w	ip, r2, r3
 8020244:	5cd3      	ldrb	r3, [r2, r3]
 8020246:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802024a:	930a      	str	r3, [sp, #40]	; 0x28
 802024c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020250:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020254:	930e      	str	r3, [sp, #56]	; 0x38
 8020256:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020258:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802025a:	fb1e f200 	smulbb	r2, lr, r0
 802025e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020262:	10d2      	asrs	r2, r2, #3
 8020264:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020268:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802026c:	ea4c 0c03 	orr.w	ip, ip, r3
 8020270:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020274:	9311      	str	r3, [sp, #68]	; 0x44
 8020276:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020278:	041b      	lsls	r3, r3, #16
 802027a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 802027e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020282:	ea43 030b 	orr.w	r3, r3, fp
 8020286:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020288:	4353      	muls	r3, r2
 802028a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802028e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020292:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020296:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802029a:	ea43 0b01 	orr.w	fp, r3, r1
 802029e:	f1c0 0110 	rsb	r1, r0, #16
 80202a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80202a4:	eba1 0e0e 	sub.w	lr, r1, lr
 80202a8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80202ac:	fb0e cc0b 	mla	ip, lr, fp, ip
 80202b0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80202b4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80202b8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80202bc:	ea4b 0e0e 	orr.w	lr, fp, lr
 80202c0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80202c4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80202c8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80202cc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80202d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80202d4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80202d8:	ea43 0c0c 	orr.w	ip, r3, ip
 80202dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80202de:	f82a cb02 	strh.w	ip, [sl], #2
 80202e2:	441c      	add	r4, r3
 80202e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80202e6:	f108 38ff 	add.w	r8, r8, #4294967295
 80202ea:	441e      	add	r6, r3
 80202ec:	e723      	b.n	8020136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80202ee:	2800      	cmp	r0, #0
 80202f0:	d0b1      	beq.n	8020256 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80202f2:	5cd3      	ldrb	r3, [r2, r3]
 80202f4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80202f8:	930a      	str	r3, [sp, #40]	; 0x28
 80202fa:	e7ac      	b.n	8020256 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80202fc:	b013      	add	sp, #76	; 0x4c
 80202fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020302:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020306:	880d      	ldrh	r5, [r1, #0]
 8020308:	b087      	sub	sp, #28
 802030a:	10ef      	asrs	r7, r5, #3
 802030c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020310:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020314:	00ed      	lsls	r5, r5, #3
 8020316:	9701      	str	r7, [sp, #4]
 8020318:	b2ed      	uxtb	r5, r5
 802031a:	9502      	str	r5, [sp, #8]
 802031c:	9d01      	ldr	r5, [sp, #4]
 802031e:	9103      	str	r1, [sp, #12]
 8020320:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020324:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8020328:	9902      	ldr	r1, [sp, #8]
 802032a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802032e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8020332:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8020336:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802033a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802033e:	022d      	lsls	r5, r5, #8
 8020340:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8020344:	fb06 0709 	mla	r7, r6, r9, r0
 8020348:	430d      	orrs	r5, r1
 802034a:	2e00      	cmp	r6, #0
 802034c:	eb02 0c07 	add.w	ip, r2, r7
 8020350:	9505      	str	r5, [sp, #20]
 8020352:	f2c0 80b6 	blt.w	80204c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020356:	45b3      	cmp	fp, r6
 8020358:	f340 80b3 	ble.w	80204c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802035c:	2800      	cmp	r0, #0
 802035e:	f2c0 80ae 	blt.w	80204be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020362:	4581      	cmp	r9, r0
 8020364:	f340 80ab 	ble.w	80204be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020368:	5dd7      	ldrb	r7, [r2, r7]
 802036a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802036e:	441f      	add	r7, r3
 8020370:	1c42      	adds	r2, r0, #1
 8020372:	f100 80a9 	bmi.w	80204c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020376:	4591      	cmp	r9, r2
 8020378:	f340 80a6 	ble.w	80204c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802037c:	2c00      	cmp	r4, #0
 802037e:	f000 80a3 	beq.w	80204c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020382:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020386:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802038a:	441d      	add	r5, r3
 802038c:	3601      	adds	r6, #1
 802038e:	f100 809f 	bmi.w	80204d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020392:	45b3      	cmp	fp, r6
 8020394:	f340 809c 	ble.w	80204d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020398:	f1be 0f00 	cmp.w	lr, #0
 802039c:	f000 8098 	beq.w	80204d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80203a0:	2800      	cmp	r0, #0
 80203a2:	f2c0 8093 	blt.w	80204cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80203a6:	4581      	cmp	r9, r0
 80203a8:	f340 8090 	ble.w	80204cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80203ac:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80203b0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80203b4:	441e      	add	r6, r3
 80203b6:	3001      	adds	r0, #1
 80203b8:	f100 808d 	bmi.w	80204d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80203bc:	4581      	cmp	r9, r0
 80203be:	f340 808a 	ble.w	80204d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80203c2:	2c00      	cmp	r4, #0
 80203c4:	f000 8087 	beq.w	80204d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80203c8:	44e1      	add	r9, ip
 80203ca:	f899 2001 	ldrb.w	r2, [r9, #1]
 80203ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80203d2:	4413      	add	r3, r2
 80203d4:	b2a4      	uxth	r4, r4
 80203d6:	fa1f fe8e 	uxth.w	lr, lr
 80203da:	fb04 fb0e 	mul.w	fp, r4, lr
 80203de:	0124      	lsls	r4, r4, #4
 80203e0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80203e4:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80203e8:	eba4 040b 	sub.w	r4, r4, fp
 80203ec:	fa1f f08e 	uxth.w	r0, lr
 80203f0:	b2a2      	uxth	r2, r4
 80203f2:	78ac      	ldrb	r4, [r5, #2]
 80203f4:	f897 c002 	ldrb.w	ip, [r7, #2]
 80203f8:	9901      	ldr	r1, [sp, #4]
 80203fa:	eba9 0900 	sub.w	r9, r9, r0
 80203fe:	fa1f f989 	uxth.w	r9, r9
 8020402:	4354      	muls	r4, r2
 8020404:	fb09 440c 	mla	r4, r9, ip, r4
 8020408:	f896 c002 	ldrb.w	ip, [r6, #2]
 802040c:	fb00 440c 	mla	r4, r0, ip, r4
 8020410:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020414:	fa1f fe88 	uxth.w	lr, r8
 8020418:	ea6f 0808 	mvn.w	r8, r8
 802041c:	fa5f f888 	uxtb.w	r8, r8
 8020420:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020424:	fb1a fa08 	smulbb	sl, sl, r8
 8020428:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802042c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020430:	f895 a001 	ldrb.w	sl, [r5, #1]
 8020434:	787c      	ldrb	r4, [r7, #1]
 8020436:	782d      	ldrb	r5, [r5, #0]
 8020438:	783f      	ldrb	r7, [r7, #0]
 802043a:	fb02 fa0a 	mul.w	sl, r2, sl
 802043e:	fb09 aa04 	mla	sl, r9, r4, sl
 8020442:	7874      	ldrb	r4, [r6, #1]
 8020444:	436a      	muls	r2, r5
 8020446:	7835      	ldrb	r5, [r6, #0]
 8020448:	fb00 aa04 	mla	sl, r0, r4, sl
 802044c:	fb09 2207 	mla	r2, r9, r7, r2
 8020450:	785c      	ldrb	r4, [r3, #1]
 8020452:	781b      	ldrb	r3, [r3, #0]
 8020454:	fb00 2005 	mla	r0, r0, r5, r2
 8020458:	fb0b a404 	mla	r4, fp, r4, sl
 802045c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020460:	9b02      	ldr	r3, [sp, #8]
 8020462:	fb11 fa08 	smulbb	sl, r1, r8
 8020466:	fa1f fc8c 	uxth.w	ip, ip
 802046a:	fb13 f808 	smulbb	r8, r3, r8
 802046e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020472:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8020476:	fb04 a40e 	mla	r4, r4, lr, sl
 802047a:	f10c 0301 	add.w	r3, ip, #1
 802047e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020482:	fa1f fe8e 	uxth.w	lr, lr
 8020486:	b2a4      	uxth	r4, r4
 8020488:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802048c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020490:	f104 0a01 	add.w	sl, r4, #1
 8020494:	f10e 0c01 	add.w	ip, lr, #1
 8020498:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802049c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80204a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80204a4:	0964      	lsrs	r4, r4, #5
 80204a6:	ea4c 0c03 	orr.w	ip, ip, r3
 80204aa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80204ae:	9b03      	ldr	r3, [sp, #12]
 80204b0:	ea4c 0c04 	orr.w	ip, ip, r4
 80204b4:	f8a3 c000 	strh.w	ip, [r3]
 80204b8:	b007      	add	sp, #28
 80204ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80204be:	af05      	add	r7, sp, #20
 80204c0:	e756      	b.n	8020370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80204c2:	ad05      	add	r5, sp, #20
 80204c4:	462f      	mov	r7, r5
 80204c6:	e761      	b.n	802038c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80204c8:	ad05      	add	r5, sp, #20
 80204ca:	e75f      	b.n	802038c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80204cc:	ae05      	add	r6, sp, #20
 80204ce:	e772      	b.n	80203b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80204d0:	ab05      	add	r3, sp, #20
 80204d2:	461e      	mov	r6, r3
 80204d4:	e77e      	b.n	80203d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80204d6:	ab05      	add	r3, sp, #20
 80204d8:	e77c      	b.n	80203d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080204da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80204da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80204de:	b095      	sub	sp, #84	; 0x54
 80204e0:	9212      	str	r2, [sp, #72]	; 0x48
 80204e2:	9309      	str	r3, [sp, #36]	; 0x24
 80204e4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80204e6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80204ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80204ec:	910e      	str	r1, [sp, #56]	; 0x38
 80204ee:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80204f2:	9013      	str	r0, [sp, #76]	; 0x4c
 80204f4:	6850      	ldr	r0, [r2, #4]
 80204f6:	6812      	ldr	r2, [r2, #0]
 80204f8:	fb00 1303 	mla	r3, r0, r3, r1
 80204fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020500:	930a      	str	r3, [sp, #40]	; 0x28
 8020502:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020504:	681b      	ldr	r3, [r3, #0]
 8020506:	930d      	str	r3, [sp, #52]	; 0x34
 8020508:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802050a:	685c      	ldr	r4, [r3, #4]
 802050c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802050e:	43db      	mvns	r3, r3
 8020510:	b2db      	uxtb	r3, r3
 8020512:	3404      	adds	r4, #4
 8020514:	930b      	str	r3, [sp, #44]	; 0x2c
 8020516:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020518:	2b00      	cmp	r3, #0
 802051a:	dc03      	bgt.n	8020524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802051c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802051e:	2b00      	cmp	r3, #0
 8020520:	f340 8255 	ble.w	80209ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020524:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020526:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802052a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802052e:	1e48      	subs	r0, r1, #1
 8020530:	1e55      	subs	r5, r2, #1
 8020532:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020534:	2b00      	cmp	r3, #0
 8020536:	f340 80f9 	ble.w	802072c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802053a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802053c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802053e:	1436      	asrs	r6, r6, #16
 8020540:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020544:	d406      	bmi.n	8020554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020546:	4286      	cmp	r6, r0
 8020548:	da04      	bge.n	8020554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802054a:	2b00      	cmp	r3, #0
 802054c:	db02      	blt.n	8020554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802054e:	42ab      	cmp	r3, r5
 8020550:	f2c0 80ed 	blt.w	802072e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8020554:	3601      	adds	r6, #1
 8020556:	f100 80da 	bmi.w	802070e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802055a:	42b1      	cmp	r1, r6
 802055c:	f2c0 80d7 	blt.w	802070e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020560:	3301      	adds	r3, #1
 8020562:	f100 80d4 	bmi.w	802070e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020566:	429a      	cmp	r2, r3
 8020568:	f2c0 80d1 	blt.w	802070e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802056c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802056e:	9311      	str	r3, [sp, #68]	; 0x44
 8020570:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020572:	930c      	str	r3, [sp, #48]	; 0x30
 8020574:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020576:	2b00      	cmp	r3, #0
 8020578:	f340 80fa 	ble.w	8020770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802057c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802057e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020580:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020582:	68c6      	ldr	r6, [r0, #12]
 8020584:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020586:	141d      	asrs	r5, r3, #16
 8020588:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802058c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802058e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020590:	1400      	asrs	r0, r0, #16
 8020592:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020596:	6892      	ldr	r2, [r2, #8]
 8020598:	f100 813e 	bmi.w	8020818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802059c:	1e57      	subs	r7, r2, #1
 802059e:	42b8      	cmp	r0, r7
 80205a0:	f280 813a 	bge.w	8020818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80205a4:	2d00      	cmp	r5, #0
 80205a6:	f2c0 8137 	blt.w	8020818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80205aa:	1e77      	subs	r7, r6, #1
 80205ac:	42bd      	cmp	r5, r7
 80205ae:	f280 8133 	bge.w	8020818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80205b2:	b212      	sxth	r2, r2
 80205b4:	fb05 0002 	mla	r0, r5, r2, r0
 80205b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80205ba:	f815 a000 	ldrb.w	sl, [r5, r0]
 80205be:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80205c2:	182e      	adds	r6, r5, r0
 80205c4:	eb04 050a 	add.w	r5, r4, sl
 80205c8:	2b00      	cmp	r3, #0
 80205ca:	f000 8117 	beq.w	80207fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80205ce:	f896 c001 	ldrb.w	ip, [r6, #1]
 80205d2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80205d6:	44a4      	add	ip, r4
 80205d8:	2900      	cmp	r1, #0
 80205da:	f000 8117 	beq.w	802080c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80205de:	18b0      	adds	r0, r6, r2
 80205e0:	5cb2      	ldrb	r2, [r6, r2]
 80205e2:	7840      	ldrb	r0, [r0, #1]
 80205e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80205e8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80205ec:	4422      	add	r2, r4
 80205ee:	4420      	add	r0, r4
 80205f0:	b29b      	uxth	r3, r3
 80205f2:	b289      	uxth	r1, r1
 80205f4:	fb03 f901 	mul.w	r9, r3, r1
 80205f8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80205fc:	011b      	lsls	r3, r3, #4
 80205fe:	b289      	uxth	r1, r1
 8020600:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020604:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020608:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802060a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802060e:	f8b6 e000 	ldrh.w	lr, [r6]
 8020612:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8020616:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802061a:	eba3 0309 	sub.w	r3, r3, r9
 802061e:	b29b      	uxth	r3, r3
 8020620:	eba8 0801 	sub.w	r8, r8, r1
 8020624:	fa1f f888 	uxth.w	r8, r8
 8020628:	435f      	muls	r7, r3
 802062a:	fb08 770b 	mla	r7, r8, fp, r7
 802062e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020632:	9310      	str	r3, [sp, #64]	; 0x40
 8020634:	fb01 770b 	mla	r7, r1, fp, r7
 8020638:	f890 b002 	ldrb.w	fp, [r0, #2]
 802063c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802063e:	fb09 770b 	mla	r7, r9, fp, r7
 8020642:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8020646:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802064a:	fb1b fb03 	smulbb	fp, fp, r3
 802064e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020652:	fb07 b706 	mla	r7, r7, r6, fp
 8020656:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020658:	f895 b001 	ldrb.w	fp, [r5, #1]
 802065c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020660:	f89c c000 	ldrb.w	ip, [ip]
 8020664:	435d      	muls	r5, r3
 8020666:	fb08 550b 	mla	r5, r8, fp, r5
 802066a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802066e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020670:	fb01 550b 	mla	r5, r1, fp, r5
 8020674:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020678:	fb09 550b 	mla	r5, r9, fp, r5
 802067c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020680:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020684:	fb1b fb03 	smulbb	fp, fp, r3
 8020688:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802068a:	fb03 f30c 	mul.w	r3, r3, ip
 802068e:	f892 c000 	ldrb.w	ip, [r2]
 8020692:	fb08 330a 	mla	r3, r8, sl, r3
 8020696:	fb01 330c 	mla	r3, r1, ip, r3
 802069a:	f890 c000 	ldrb.w	ip, [r0]
 802069e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80206a2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80206a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80206a8:	fa5f fe8e 	uxtb.w	lr, lr
 80206ac:	b2bf      	uxth	r7, r7
 80206ae:	fb1e fe03 	smulbb	lr, lr, r3
 80206b2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80206b6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80206ba:	fb05 b506 	mla	r5, r5, r6, fp
 80206be:	1c7b      	adds	r3, r7, #1
 80206c0:	fb0c e606 	mla	r6, ip, r6, lr
 80206c4:	b2ad      	uxth	r5, r5
 80206c6:	b2b6      	uxth	r6, r6
 80206c8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80206cc:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80206d0:	f105 0b01 	add.w	fp, r5, #1
 80206d4:	1c77      	adds	r7, r6, #1
 80206d6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80206da:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80206de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80206e2:	096d      	lsrs	r5, r5, #5
 80206e4:	431f      	orrs	r7, r3
 80206e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80206ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206ec:	433d      	orrs	r5, r7
 80206ee:	801d      	strh	r5, [r3, #0]
 80206f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206f2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80206f4:	3302      	adds	r3, #2
 80206f6:	930c      	str	r3, [sp, #48]	; 0x30
 80206f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80206fa:	4413      	add	r3, r2
 80206fc:	931f      	str	r3, [sp, #124]	; 0x7c
 80206fe:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020700:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020702:	4413      	add	r3, r2
 8020704:	9320      	str	r3, [sp, #128]	; 0x80
 8020706:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020708:	3b01      	subs	r3, #1
 802070a:	9311      	str	r3, [sp, #68]	; 0x44
 802070c:	e732      	b.n	8020574 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802070e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020710:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020712:	4433      	add	r3, r6
 8020714:	931f      	str	r3, [sp, #124]	; 0x7c
 8020716:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8020718:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802071a:	4433      	add	r3, r6
 802071c:	9320      	str	r3, [sp, #128]	; 0x80
 802071e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020720:	3b01      	subs	r3, #1
 8020722:	9309      	str	r3, [sp, #36]	; 0x24
 8020724:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020726:	3302      	adds	r3, #2
 8020728:	930a      	str	r3, [sp, #40]	; 0x28
 802072a:	e702      	b.n	8020532 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802072c:	d027      	beq.n	802077e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802072e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020730:	9821      	ldr	r0, [sp, #132]	; 0x84
 8020732:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8020734:	3b01      	subs	r3, #1
 8020736:	fb00 5003 	mla	r0, r0, r3, r5
 802073a:	1400      	asrs	r0, r0, #16
 802073c:	f53f af16 	bmi.w	802056c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020740:	3901      	subs	r1, #1
 8020742:	4288      	cmp	r0, r1
 8020744:	f6bf af12 	bge.w	802056c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020748:	9922      	ldr	r1, [sp, #136]	; 0x88
 802074a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802074c:	fb01 0303 	mla	r3, r1, r3, r0
 8020750:	141b      	asrs	r3, r3, #16
 8020752:	f53f af0b 	bmi.w	802056c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020756:	3a01      	subs	r2, #1
 8020758:	4293      	cmp	r3, r2
 802075a:	f6bf af07 	bge.w	802056c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802075e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020760:	9311      	str	r3, [sp, #68]	; 0x44
 8020762:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8020766:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020768:	930c      	str	r3, [sp, #48]	; 0x30
 802076a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802076c:	2b00      	cmp	r3, #0
 802076e:	dc70      	bgt.n	8020852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020770:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020772:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020778:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802077c:	930a      	str	r3, [sp, #40]	; 0x28
 802077e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020780:	2b00      	cmp	r3, #0
 8020782:	f340 8124 	ble.w	80209ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020786:	ee30 0a04 	vadd.f32	s0, s0, s8
 802078a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802078e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020792:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020794:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020798:	ee31 1a05 	vadd.f32	s2, s2, s10
 802079c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80207a0:	eef0 6a62 	vmov.f32	s13, s5
 80207a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80207a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80207ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 80207b0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80207b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80207b8:	eef0 6a43 	vmov.f32	s13, s6
 80207bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80207c0:	ee12 2a90 	vmov	r2, s5
 80207c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80207c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80207cc:	ee13 2a10 	vmov	r2, s6
 80207d0:	9321      	str	r3, [sp, #132]	; 0x84
 80207d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80207d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80207d8:	9322      	str	r3, [sp, #136]	; 0x88
 80207da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80207dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80207de:	3b01      	subs	r3, #1
 80207e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80207e4:	930e      	str	r3, [sp, #56]	; 0x38
 80207e6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80207e8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80207ec:	bf08      	it	eq
 80207ee:	4613      	moveq	r3, r2
 80207f0:	9309      	str	r3, [sp, #36]	; 0x24
 80207f2:	eeb0 3a67 	vmov.f32	s6, s15
 80207f6:	eef0 2a47 	vmov.f32	s5, s14
 80207fa:	e68c      	b.n	8020516 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80207fc:	b149      	cbz	r1, 8020812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80207fe:	5cb2      	ldrb	r2, [r6, r2]
 8020800:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020804:	4422      	add	r2, r4
 8020806:	4628      	mov	r0, r5
 8020808:	46ac      	mov	ip, r5
 802080a:	e6f1      	b.n	80205f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802080c:	4628      	mov	r0, r5
 802080e:	462a      	mov	r2, r5
 8020810:	e6ee      	b.n	80205f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020812:	4628      	mov	r0, r5
 8020814:	462a      	mov	r2, r5
 8020816:	e7f7      	b.n	8020808 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8020818:	1c47      	adds	r7, r0, #1
 802081a:	f53f af69 	bmi.w	80206f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802081e:	42ba      	cmp	r2, r7
 8020820:	f6ff af66 	blt.w	80206f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020824:	1c6f      	adds	r7, r5, #1
 8020826:	f53f af63 	bmi.w	80206f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802082a:	42be      	cmp	r6, r7
 802082c:	f6ff af60 	blt.w	80206f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020830:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020832:	9002      	str	r0, [sp, #8]
 8020834:	b236      	sxth	r6, r6
 8020836:	b212      	sxth	r2, r2
 8020838:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802083c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8020840:	9200      	str	r2, [sp, #0]
 8020842:	9601      	str	r6, [sp, #4]
 8020844:	4623      	mov	r3, r4
 8020846:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802084a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802084c:	f7ff fd59 	bl	8020302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8020850:	e74e      	b.n	80206f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020852:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020854:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020856:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8020858:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802085a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802085e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020860:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020864:	142d      	asrs	r5, r5, #16
 8020866:	1400      	asrs	r0, r0, #16
 8020868:	fb02 5000 	mla	r0, r2, r0, r5
 802086c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802086e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020872:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020876:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802087a:	182e      	adds	r6, r5, r0
 802087c:	eb04 0509 	add.w	r5, r4, r9
 8020880:	2b00      	cmp	r3, #0
 8020882:	f000 8096 	beq.w	80209b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8020886:	7877      	ldrb	r7, [r6, #1]
 8020888:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802088c:	4427      	add	r7, r4
 802088e:	2900      	cmp	r1, #0
 8020890:	f000 8097 	beq.w	80209c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020894:	18b0      	adds	r0, r6, r2
 8020896:	5cb2      	ldrb	r2, [r6, r2]
 8020898:	7840      	ldrb	r0, [r0, #1]
 802089a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802089e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80208a2:	4422      	add	r2, r4
 80208a4:	4420      	add	r0, r4
 80208a6:	b29b      	uxth	r3, r3
 80208a8:	b289      	uxth	r1, r1
 80208aa:	fb03 f801 	mul.w	r8, r3, r1
 80208ae:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80208b0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80208b4:	f8b6 c000 	ldrh.w	ip, [r6]
 80208b8:	78be      	ldrb	r6, [r7, #2]
 80208ba:	f814 9009 	ldrb.w	r9, [r4, r9]
 80208be:	011b      	lsls	r3, r3, #4
 80208c0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80208c4:	b289      	uxth	r1, r1
 80208c6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80208ca:	eba3 0308 	sub.w	r3, r3, r8
 80208ce:	b29b      	uxth	r3, r3
 80208d0:	ebae 0e01 	sub.w	lr, lr, r1
 80208d4:	fa1f fe8e 	uxth.w	lr, lr
 80208d8:	435e      	muls	r6, r3
 80208da:	fb0e 660b 	mla	r6, lr, fp, r6
 80208de:	f892 b002 	ldrb.w	fp, [r2, #2]
 80208e2:	9310      	str	r3, [sp, #64]	; 0x40
 80208e4:	fb01 660b 	mla	r6, r1, fp, r6
 80208e8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80208ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80208ee:	fb08 660b 	mla	r6, r8, fp, r6
 80208f2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80208f6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80208fa:	fb1b fb03 	smulbb	fp, fp, r3
 80208fe:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020902:	fb06 b60a 	mla	r6, r6, sl, fp
 8020906:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020908:	f895 b001 	ldrb.w	fp, [r5, #1]
 802090c:	787d      	ldrb	r5, [r7, #1]
 802090e:	783f      	ldrb	r7, [r7, #0]
 8020910:	435d      	muls	r5, r3
 8020912:	fb0e 550b 	mla	r5, lr, fp, r5
 8020916:	f892 b001 	ldrb.w	fp, [r2, #1]
 802091a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802091c:	fb01 550b 	mla	r5, r1, fp, r5
 8020920:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020924:	fb08 550b 	mla	r5, r8, fp, r5
 8020928:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802092c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020930:	fb1b fb03 	smulbb	fp, fp, r3
 8020934:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020936:	437b      	muls	r3, r7
 8020938:	7817      	ldrb	r7, [r2, #0]
 802093a:	fb0e 3309 	mla	r3, lr, r9, r3
 802093e:	fb01 3307 	mla	r3, r1, r7, r3
 8020942:	7807      	ldrb	r7, [r0, #0]
 8020944:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020948:	fb08 3707 	mla	r7, r8, r7, r3
 802094c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802094e:	fa5f fc8c 	uxtb.w	ip, ip
 8020952:	fb1c fc03 	smulbb	ip, ip, r3
 8020956:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802095a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802095e:	fb05 b50a 	mla	r5, r5, sl, fp
 8020962:	fb07 c70a 	mla	r7, r7, sl, ip
 8020966:	b2b6      	uxth	r6, r6
 8020968:	b2ad      	uxth	r5, r5
 802096a:	b2bf      	uxth	r7, r7
 802096c:	1c73      	adds	r3, r6, #1
 802096e:	1c7a      	adds	r2, r7, #1
 8020970:	f105 0b01 	add.w	fp, r5, #1
 8020974:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020978:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802097c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020980:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020984:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020988:	096d      	lsrs	r5, r5, #5
 802098a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802098c:	4316      	orrs	r6, r2
 802098e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020992:	432e      	orrs	r6, r5
 8020994:	f823 6b02 	strh.w	r6, [r3], #2
 8020998:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802099a:	930c      	str	r3, [sp, #48]	; 0x30
 802099c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802099e:	4413      	add	r3, r2
 80209a0:	931f      	str	r3, [sp, #124]	; 0x7c
 80209a2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80209a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80209a6:	4413      	add	r3, r2
 80209a8:	9320      	str	r3, [sp, #128]	; 0x80
 80209aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80209ac:	3b01      	subs	r3, #1
 80209ae:	9311      	str	r3, [sp, #68]	; 0x44
 80209b0:	e6db      	b.n	802076a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80209b2:	b149      	cbz	r1, 80209c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80209b4:	5cb2      	ldrb	r2, [r6, r2]
 80209b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80209ba:	4422      	add	r2, r4
 80209bc:	4628      	mov	r0, r5
 80209be:	462f      	mov	r7, r5
 80209c0:	e771      	b.n	80208a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80209c2:	4628      	mov	r0, r5
 80209c4:	462a      	mov	r2, r5
 80209c6:	e76e      	b.n	80208a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80209c8:	4628      	mov	r0, r5
 80209ca:	462a      	mov	r2, r5
 80209cc:	e7f7      	b.n	80209be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80209ce:	b015      	add	sp, #84	; 0x54
 80209d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080209d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80209d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209d8:	880f      	ldrh	r7, [r1, #0]
 80209da:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80209de:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80209e2:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80209e6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80209ea:	023c      	lsls	r4, r7, #8
 80209ec:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80209f0:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 80209f4:	017c      	lsls	r4, r7, #5
 80209f6:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 80209fa:	00ff      	lsls	r7, r7, #3
 80209fc:	ea4b 0404 	orr.w	r4, fp, r4
 8020a00:	b2ff      	uxtb	r7, r7
 8020a02:	fb05 ca0e 	mla	sl, r5, lr, ip
 8020a06:	4327      	orrs	r7, r4
 8020a08:	2d00      	cmp	r5, #0
 8020a0a:	eb02 080a 	add.w	r8, r2, sl
 8020a0e:	9701      	str	r7, [sp, #4]
 8020a10:	db7e      	blt.n	8020b10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020a12:	45a9      	cmp	r9, r5
 8020a14:	dd7c      	ble.n	8020b10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020a16:	f1bc 0f00 	cmp.w	ip, #0
 8020a1a:	db77      	blt.n	8020b0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020a1c:	45e6      	cmp	lr, ip
 8020a1e:	dd75      	ble.n	8020b0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020a20:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020a24:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020a28:	441f      	add	r7, r3
 8020a2a:	f11c 0201 	adds.w	r2, ip, #1
 8020a2e:	d472      	bmi.n	8020b16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020a30:	4596      	cmp	lr, r2
 8020a32:	dd70      	ble.n	8020b16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020a34:	2800      	cmp	r0, #0
 8020a36:	d06e      	beq.n	8020b16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020a38:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020a3c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020a40:	441c      	add	r4, r3
 8020a42:	3501      	adds	r5, #1
 8020a44:	d46b      	bmi.n	8020b1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020a46:	45a9      	cmp	r9, r5
 8020a48:	dd69      	ble.n	8020b1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020a4a:	2e00      	cmp	r6, #0
 8020a4c:	d067      	beq.n	8020b1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020a4e:	f1bc 0f00 	cmp.w	ip, #0
 8020a52:	db62      	blt.n	8020b1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020a54:	45e6      	cmp	lr, ip
 8020a56:	dd60      	ble.n	8020b1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020a58:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020a5c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020a60:	441d      	add	r5, r3
 8020a62:	f11c 0201 	adds.w	r2, ip, #1
 8020a66:	d45d      	bmi.n	8020b24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020a68:	4596      	cmp	lr, r2
 8020a6a:	dd5b      	ble.n	8020b24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020a6c:	2800      	cmp	r0, #0
 8020a6e:	d059      	beq.n	8020b24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020a70:	44c6      	add	lr, r8
 8020a72:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020a76:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020a7a:	4413      	add	r3, r2
 8020a7c:	b280      	uxth	r0, r0
 8020a7e:	b2b2      	uxth	r2, r6
 8020a80:	fb00 f602 	mul.w	r6, r0, r2
 8020a84:	0100      	lsls	r0, r0, #4
 8020a86:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8020a8a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020a8e:	1b80      	subs	r0, r0, r6
 8020a90:	fa1f fc82 	uxth.w	ip, r2
 8020a94:	b282      	uxth	r2, r0
 8020a96:	78a0      	ldrb	r0, [r4, #2]
 8020a98:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020a9c:	f897 9000 	ldrb.w	r9, [r7]
 8020aa0:	787f      	ldrb	r7, [r7, #1]
 8020aa2:	eba8 080c 	sub.w	r8, r8, ip
 8020aa6:	fa1f f888 	uxth.w	r8, r8
 8020aaa:	4350      	muls	r0, r2
 8020aac:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020ab0:	78a8      	ldrb	r0, [r5, #2]
 8020ab2:	fb0c e000 	mla	r0, ip, r0, lr
 8020ab6:	f893 e002 	ldrb.w	lr, [r3, #2]
 8020aba:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020abe:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020ac2:	f894 e000 	ldrb.w	lr, [r4]
 8020ac6:	fb02 fe0e 	mul.w	lr, r2, lr
 8020aca:	fb08 e909 	mla	r9, r8, r9, lr
 8020ace:	f895 e000 	ldrb.w	lr, [r5]
 8020ad2:	fb0c 990e 	mla	r9, ip, lr, r9
 8020ad6:	f893 e000 	ldrb.w	lr, [r3]
 8020ada:	785b      	ldrb	r3, [r3, #1]
 8020adc:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020ae0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020ae4:	ea4e 0e00 	orr.w	lr, lr, r0
 8020ae8:	7860      	ldrb	r0, [r4, #1]
 8020aea:	4350      	muls	r0, r2
 8020aec:	786a      	ldrb	r2, [r5, #1]
 8020aee:	fb08 0007 	mla	r0, r8, r7, r0
 8020af2:	fb0c 0202 	mla	r2, ip, r2, r0
 8020af6:	fb06 2303 	mla	r3, r6, r3, r2
 8020afa:	095b      	lsrs	r3, r3, #5
 8020afc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b00:	ea4e 0303 	orr.w	r3, lr, r3
 8020b04:	800b      	strh	r3, [r1, #0]
 8020b06:	b003      	add	sp, #12
 8020b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b0c:	af01      	add	r7, sp, #4
 8020b0e:	e78c      	b.n	8020a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020b10:	ac01      	add	r4, sp, #4
 8020b12:	4627      	mov	r7, r4
 8020b14:	e795      	b.n	8020a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020b16:	ac01      	add	r4, sp, #4
 8020b18:	e793      	b.n	8020a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020b1a:	ad01      	add	r5, sp, #4
 8020b1c:	e7a1      	b.n	8020a62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020b1e:	ab01      	add	r3, sp, #4
 8020b20:	461d      	mov	r5, r3
 8020b22:	e7ab      	b.n	8020a7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020b24:	ab01      	add	r3, sp, #4
 8020b26:	e7a9      	b.n	8020a7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b2c:	b08f      	sub	sp, #60	; 0x3c
 8020b2e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020b32:	920c      	str	r2, [sp, #48]	; 0x30
 8020b34:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8020b36:	910a      	str	r1, [sp, #40]	; 0x28
 8020b38:	9306      	str	r3, [sp, #24]
 8020b3a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020b3e:	900d      	str	r0, [sp, #52]	; 0x34
 8020b40:	6850      	ldr	r0, [r2, #4]
 8020b42:	6812      	ldr	r2, [r2, #0]
 8020b44:	fb00 1303 	mla	r3, r0, r3, r1
 8020b48:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020b4c:	9307      	str	r3, [sp, #28]
 8020b4e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b50:	681b      	ldr	r3, [r3, #0]
 8020b52:	9308      	str	r3, [sp, #32]
 8020b54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b56:	685c      	ldr	r4, [r3, #4]
 8020b58:	3404      	adds	r4, #4
 8020b5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020b5c:	2b00      	cmp	r3, #0
 8020b5e:	dc03      	bgt.n	8020b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020b60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020b62:	2b00      	cmp	r3, #0
 8020b64:	f340 81d6 	ble.w	8020f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020b68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020b6e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020b72:	1e48      	subs	r0, r1, #1
 8020b74:	1e56      	subs	r6, r2, #1
 8020b76:	9b06      	ldr	r3, [sp, #24]
 8020b78:	2b00      	cmp	r3, #0
 8020b7a:	f340 80b7 	ble.w	8020cec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020b7e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020b82:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020b86:	d406      	bmi.n	8020b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b88:	4287      	cmp	r7, r0
 8020b8a:	da04      	bge.n	8020b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b8c:	2b00      	cmp	r3, #0
 8020b8e:	db02      	blt.n	8020b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b90:	42b3      	cmp	r3, r6
 8020b92:	f2c0 80ac 	blt.w	8020cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020b96:	3701      	adds	r7, #1
 8020b98:	f100 809d 	bmi.w	8020cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020b9c:	42b9      	cmp	r1, r7
 8020b9e:	f2c0 809a 	blt.w	8020cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020ba2:	3301      	adds	r3, #1
 8020ba4:	f100 8097 	bmi.w	8020cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020ba8:	429a      	cmp	r2, r3
 8020baa:	f2c0 8094 	blt.w	8020cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020bae:	9b06      	ldr	r3, [sp, #24]
 8020bb0:	930b      	str	r3, [sp, #44]	; 0x2c
 8020bb2:	9b07      	ldr	r3, [sp, #28]
 8020bb4:	9309      	str	r3, [sp, #36]	; 0x24
 8020bb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020bb8:	2b00      	cmp	r3, #0
 8020bba:	f340 80b5 	ble.w	8020d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020bbe:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020bc0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020bc2:	68c7      	ldr	r7, [r0, #12]
 8020bc4:	6892      	ldr	r2, [r2, #8]
 8020bc6:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020bca:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020bce:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020bd2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020bd6:	f100 80fb 	bmi.w	8020dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020bda:	f102 3cff 	add.w	ip, r2, #4294967295
 8020bde:	4560      	cmp	r0, ip
 8020be0:	f280 80f6 	bge.w	8020dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020be4:	2e00      	cmp	r6, #0
 8020be6:	f2c0 80f3 	blt.w	8020dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020bea:	f107 3cff 	add.w	ip, r7, #4294967295
 8020bee:	4566      	cmp	r6, ip
 8020bf0:	f280 80ee 	bge.w	8020dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020bf4:	b212      	sxth	r2, r2
 8020bf6:	fb06 0002 	mla	r0, r6, r2, r0
 8020bfa:	9e08      	ldr	r6, [sp, #32]
 8020bfc:	1837      	adds	r7, r6, r0
 8020bfe:	5c30      	ldrb	r0, [r6, r0]
 8020c00:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020c04:	eb04 0c08 	add.w	ip, r4, r8
 8020c08:	2b00      	cmp	r3, #0
 8020c0a:	f000 80d3 	beq.w	8020db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020c0e:	787e      	ldrb	r6, [r7, #1]
 8020c10:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020c14:	4426      	add	r6, r4
 8020c16:	2900      	cmp	r1, #0
 8020c18:	f000 80d4 	beq.w	8020dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020c1c:	18b8      	adds	r0, r7, r2
 8020c1e:	5cba      	ldrb	r2, [r7, r2]
 8020c20:	7840      	ldrb	r0, [r0, #1]
 8020c22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020c26:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020c2a:	4422      	add	r2, r4
 8020c2c:	4420      	add	r0, r4
 8020c2e:	b29b      	uxth	r3, r3
 8020c30:	b289      	uxth	r1, r1
 8020c32:	fb03 f901 	mul.w	r9, r3, r1
 8020c36:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020c3a:	011b      	lsls	r3, r3, #4
 8020c3c:	b289      	uxth	r1, r1
 8020c3e:	78b7      	ldrb	r7, [r6, #2]
 8020c40:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020c44:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020c48:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020c4c:	eba3 0309 	sub.w	r3, r3, r9
 8020c50:	b29b      	uxth	r3, r3
 8020c52:	ebae 0e01 	sub.w	lr, lr, r1
 8020c56:	fa1f fe8e 	uxth.w	lr, lr
 8020c5a:	435f      	muls	r7, r3
 8020c5c:	fb0e 770a 	mla	r7, lr, sl, r7
 8020c60:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020c64:	fb01 770a 	mla	r7, r1, sl, r7
 8020c68:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020c6c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020c70:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020c74:	f896 8000 	ldrb.w	r8, [r6]
 8020c78:	7876      	ldrb	r6, [r6, #1]
 8020c7a:	fb03 f808 	mul.w	r8, r3, r8
 8020c7e:	fb0e 8807 	mla	r8, lr, r7, r8
 8020c82:	7817      	ldrb	r7, [r2, #0]
 8020c84:	fb01 8807 	mla	r8, r1, r7, r8
 8020c88:	7807      	ldrb	r7, [r0, #0]
 8020c8a:	fb09 8707 	mla	r7, r9, r7, r8
 8020c8e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020c92:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020c96:	ea47 070a 	orr.w	r7, r7, sl
 8020c9a:	4373      	muls	r3, r6
 8020c9c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020ca0:	fb0e 330c 	mla	r3, lr, ip, r3
 8020ca4:	fb01 310a 	mla	r1, r1, sl, r3
 8020ca8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020cac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020cae:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020cb2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020cb6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020cba:	ea47 070a 	orr.w	r7, r7, sl
 8020cbe:	801f      	strh	r7, [r3, #0]
 8020cc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020cc2:	3302      	adds	r3, #2
 8020cc4:	9309      	str	r3, [sp, #36]	; 0x24
 8020cc6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020cc8:	449b      	add	fp, r3
 8020cca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020ccc:	441d      	add	r5, r3
 8020cce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020cd0:	3b01      	subs	r3, #1
 8020cd2:	930b      	str	r3, [sp, #44]	; 0x2c
 8020cd4:	e76f      	b.n	8020bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020cd6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020cd8:	449b      	add	fp, r3
 8020cda:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020cdc:	441d      	add	r5, r3
 8020cde:	9b06      	ldr	r3, [sp, #24]
 8020ce0:	3b01      	subs	r3, #1
 8020ce2:	9306      	str	r3, [sp, #24]
 8020ce4:	9b07      	ldr	r3, [sp, #28]
 8020ce6:	3302      	adds	r3, #2
 8020ce8:	9307      	str	r3, [sp, #28]
 8020cea:	e744      	b.n	8020b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020cec:	d023      	beq.n	8020d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020cee:	9b06      	ldr	r3, [sp, #24]
 8020cf0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020cf2:	3b01      	subs	r3, #1
 8020cf4:	fb00 b003 	mla	r0, r0, r3, fp
 8020cf8:	1400      	asrs	r0, r0, #16
 8020cfa:	f53f af58 	bmi.w	8020bae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020cfe:	3901      	subs	r1, #1
 8020d00:	4288      	cmp	r0, r1
 8020d02:	f6bf af54 	bge.w	8020bae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d06:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020d08:	fb01 5303 	mla	r3, r1, r3, r5
 8020d0c:	141b      	asrs	r3, r3, #16
 8020d0e:	f53f af4e 	bmi.w	8020bae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d12:	3a01      	subs	r2, #1
 8020d14:	4293      	cmp	r3, r2
 8020d16:	f6bf af4a 	bge.w	8020bae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d1a:	9b06      	ldr	r3, [sp, #24]
 8020d1c:	9309      	str	r3, [sp, #36]	; 0x24
 8020d1e:	9b07      	ldr	r3, [sp, #28]
 8020d20:	930b      	str	r3, [sp, #44]	; 0x2c
 8020d22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d24:	2b00      	cmp	r3, #0
 8020d26:	dc70      	bgt.n	8020e0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020d28:	9b06      	ldr	r3, [sp, #24]
 8020d2a:	9a07      	ldr	r2, [sp, #28]
 8020d2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020d30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020d34:	9307      	str	r3, [sp, #28]
 8020d36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d38:	2b00      	cmp	r3, #0
 8020d3a:	f340 80eb 	ble.w	8020f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020d3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020d42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020d46:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020d4a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d50:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d58:	eef0 6a62 	vmov.f32	s13, s5
 8020d5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d64:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020d68:	ee16 ba90 	vmov	fp, s13
 8020d6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020d70:	eef0 6a43 	vmov.f32	s13, s6
 8020d74:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020d78:	ee12 2a90 	vmov	r2, s5
 8020d7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020d80:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d84:	ee13 2a10 	vmov	r2, s6
 8020d88:	931b      	str	r3, [sp, #108]	; 0x6c
 8020d8a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d90:	931c      	str	r3, [sp, #112]	; 0x70
 8020d92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020d96:	3b01      	subs	r3, #1
 8020d98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d9c:	930a      	str	r3, [sp, #40]	; 0x28
 8020d9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020da0:	bf08      	it	eq
 8020da2:	4613      	moveq	r3, r2
 8020da4:	ee16 5a90 	vmov	r5, s13
 8020da8:	9306      	str	r3, [sp, #24]
 8020daa:	eeb0 3a67 	vmov.f32	s6, s15
 8020dae:	eef0 2a47 	vmov.f32	s5, s14
 8020db2:	e6d2      	b.n	8020b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020db4:	b149      	cbz	r1, 8020dca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020db6:	5cba      	ldrb	r2, [r7, r2]
 8020db8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020dbc:	4422      	add	r2, r4
 8020dbe:	4660      	mov	r0, ip
 8020dc0:	4666      	mov	r6, ip
 8020dc2:	e734      	b.n	8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020dc4:	4660      	mov	r0, ip
 8020dc6:	4662      	mov	r2, ip
 8020dc8:	e731      	b.n	8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020dca:	4660      	mov	r0, ip
 8020dcc:	4662      	mov	r2, ip
 8020dce:	e7f7      	b.n	8020dc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020dd0:	f110 0c01 	adds.w	ip, r0, #1
 8020dd4:	f53f af74 	bmi.w	8020cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020dd8:	4562      	cmp	r2, ip
 8020dda:	f6ff af71 	blt.w	8020cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020dde:	f116 0c01 	adds.w	ip, r6, #1
 8020de2:	f53f af6d 	bmi.w	8020cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020de6:	4567      	cmp	r7, ip
 8020de8:	f6ff af6a 	blt.w	8020cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020dec:	b23f      	sxth	r7, r7
 8020dee:	b212      	sxth	r2, r2
 8020df0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020df4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020df8:	9200      	str	r2, [sp, #0]
 8020dfa:	9701      	str	r7, [sp, #4]
 8020dfc:	4623      	mov	r3, r4
 8020dfe:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020e02:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020e04:	f7ff fde6 	bl	80209d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020e08:	e75a      	b.n	8020cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e0a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020e0c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020e10:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020e14:	1428      	asrs	r0, r5, #16
 8020e16:	fb02 6000 	mla	r0, r2, r0, r6
 8020e1a:	9e08      	ldr	r6, [sp, #32]
 8020e1c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020e20:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020e24:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020e28:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020e2c:	1837      	adds	r7, r6, r0
 8020e2e:	eb04 0c08 	add.w	ip, r4, r8
 8020e32:	2b00      	cmp	r3, #0
 8020e34:	d060      	beq.n	8020ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020e36:	787e      	ldrb	r6, [r7, #1]
 8020e38:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020e3c:	4426      	add	r6, r4
 8020e3e:	2900      	cmp	r1, #0
 8020e40:	d062      	beq.n	8020f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020e42:	18b8      	adds	r0, r7, r2
 8020e44:	5cba      	ldrb	r2, [r7, r2]
 8020e46:	7840      	ldrb	r0, [r0, #1]
 8020e48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020e4c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020e50:	4422      	add	r2, r4
 8020e52:	4420      	add	r0, r4
 8020e54:	b29b      	uxth	r3, r3
 8020e56:	b289      	uxth	r1, r1
 8020e58:	fb03 f901 	mul.w	r9, r3, r1
 8020e5c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020e60:	011b      	lsls	r3, r3, #4
 8020e62:	b289      	uxth	r1, r1
 8020e64:	78b7      	ldrb	r7, [r6, #2]
 8020e66:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020e6a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020e6e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020e72:	eba3 0309 	sub.w	r3, r3, r9
 8020e76:	b29b      	uxth	r3, r3
 8020e78:	ebae 0e01 	sub.w	lr, lr, r1
 8020e7c:	fa1f fe8e 	uxth.w	lr, lr
 8020e80:	435f      	muls	r7, r3
 8020e82:	fb0e 770a 	mla	r7, lr, sl, r7
 8020e86:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020e8a:	fb01 770a 	mla	r7, r1, sl, r7
 8020e8e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020e92:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020e96:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020e9a:	f896 8000 	ldrb.w	r8, [r6]
 8020e9e:	7876      	ldrb	r6, [r6, #1]
 8020ea0:	fb03 f808 	mul.w	r8, r3, r8
 8020ea4:	fb0e 8807 	mla	r8, lr, r7, r8
 8020ea8:	7817      	ldrb	r7, [r2, #0]
 8020eaa:	fb01 8807 	mla	r8, r1, r7, r8
 8020eae:	7807      	ldrb	r7, [r0, #0]
 8020eb0:	fb09 8707 	mla	r7, r9, r7, r8
 8020eb4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020eb8:	4373      	muls	r3, r6
 8020eba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020ebe:	7856      	ldrb	r6, [r2, #1]
 8020ec0:	ea47 070a 	orr.w	r7, r7, sl
 8020ec4:	fb0e 330c 	mla	r3, lr, ip, r3
 8020ec8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020ecc:	fb01 3306 	mla	r3, r1, r6, r3
 8020ed0:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020ed4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020ed8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020eda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020ede:	ea47 070a 	orr.w	r7, r7, sl
 8020ee2:	f823 7b02 	strh.w	r7, [r3], #2
 8020ee6:	930b      	str	r3, [sp, #44]	; 0x2c
 8020ee8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020eea:	449b      	add	fp, r3
 8020eec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020eee:	441d      	add	r5, r3
 8020ef0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ef2:	3b01      	subs	r3, #1
 8020ef4:	9309      	str	r3, [sp, #36]	; 0x24
 8020ef6:	e714      	b.n	8020d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020ef8:	b149      	cbz	r1, 8020f0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020efa:	5cba      	ldrb	r2, [r7, r2]
 8020efc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020f00:	4422      	add	r2, r4
 8020f02:	4660      	mov	r0, ip
 8020f04:	4666      	mov	r6, ip
 8020f06:	e7a5      	b.n	8020e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020f08:	4660      	mov	r0, ip
 8020f0a:	4662      	mov	r2, ip
 8020f0c:	e7a2      	b.n	8020e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020f0e:	4660      	mov	r0, ip
 8020f10:	4662      	mov	r2, ip
 8020f12:	e7f7      	b.n	8020f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020f14:	b00f      	add	sp, #60	; 0x3c
 8020f16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020f1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020f1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f1e:	b085      	sub	sp, #20
 8020f20:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020f24:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8020f28:	9102      	str	r1, [sp, #8]
 8020f2a:	2c00      	cmp	r4, #0
 8020f2c:	fb04 710c 	mla	r1, r4, ip, r7
 8020f30:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020f34:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8020f38:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020f3c:	eb02 0e01 	add.w	lr, r2, r1
 8020f40:	f2c0 8122 	blt.w	8021188 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020f44:	45a0      	cmp	r8, r4
 8020f46:	f340 811f 	ble.w	8021188 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020f4a:	2f00      	cmp	r7, #0
 8020f4c:	f2c0 811a 	blt.w	8021184 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020f50:	45bc      	cmp	ip, r7
 8020f52:	f340 8117 	ble.w	8021184 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020f56:	5c52      	ldrb	r2, [r2, r1]
 8020f58:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020f5c:	1c7a      	adds	r2, r7, #1
 8020f5e:	f100 8116 	bmi.w	802118e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020f62:	4594      	cmp	ip, r2
 8020f64:	f340 8113 	ble.w	802118e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020f68:	2e00      	cmp	r6, #0
 8020f6a:	f000 8112 	beq.w	8021192 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8020f6e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020f72:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020f76:	3401      	adds	r4, #1
 8020f78:	f100 810f 	bmi.w	802119a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020f7c:	45a0      	cmp	r8, r4
 8020f7e:	f340 810c 	ble.w	802119a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020f82:	2800      	cmp	r0, #0
 8020f84:	f000 810c 	beq.w	80211a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8020f88:	2f00      	cmp	r7, #0
 8020f8a:	f2c0 8104 	blt.w	8021196 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020f8e:	45bc      	cmp	ip, r7
 8020f90:	f340 8101 	ble.w	8021196 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020f94:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8020f98:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020f9c:	3701      	adds	r7, #1
 8020f9e:	f100 8102 	bmi.w	80211a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020fa2:	45bc      	cmp	ip, r7
 8020fa4:	f340 80ff 	ble.w	80211a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020fa8:	2e00      	cmp	r6, #0
 8020faa:	f000 80fe 	beq.w	80211aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020fae:	44f4      	add	ip, lr
 8020fb0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020fb4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020fb8:	b2b6      	uxth	r6, r6
 8020fba:	b280      	uxth	r0, r0
 8020fbc:	fb00 fe06 	mul.w	lr, r0, r6
 8020fc0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020fc4:	0136      	lsls	r6, r6, #4
 8020fc6:	eba6 070e 	sub.w	r7, r6, lr
 8020fca:	b280      	uxth	r0, r0
 8020fcc:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020fd0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020fd4:	b2bf      	uxth	r7, r7
 8020fd6:	1a1b      	subs	r3, r3, r0
 8020fd8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020fdc:	b29b      	uxth	r3, r3
 8020fde:	fb0a f607 	mul.w	r6, sl, r7
 8020fe2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020fe6:	fb0b 6603 	mla	r6, fp, r3, r6
 8020fea:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020fee:	fb00 6609 	mla	r6, r0, r9, r6
 8020ff2:	fb0e 6608 	mla	r6, lr, r8, r6
 8020ff6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020ffa:	9600      	str	r6, [sp, #0]
 8020ffc:	2e00      	cmp	r6, #0
 8020ffe:	f000 80be 	beq.w	802117e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8021002:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021006:	fb0b fc0c 	mul.w	ip, fp, ip
 802100a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802100e:	fb0b f505 	mul.w	r5, fp, r5
 8021012:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021016:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802101a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802101e:	44dc      	add	ip, fp
 8021020:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021024:	9501      	str	r5, [sp, #4]
 8021026:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802102a:	9503      	str	r5, [sp, #12]
 802102c:	9d01      	ldr	r5, [sp, #4]
 802102e:	9e02      	ldr	r6, [sp, #8]
 8021030:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021034:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021038:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802103c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021040:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021044:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021048:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802104c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021050:	4465      	add	r5, ip
 8021052:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021056:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802105a:	fb09 fc0c 	mul.w	ip, r9, ip
 802105e:	fb09 f904 	mul.w	r9, r9, r4
 8021062:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8021066:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802106a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802106e:	fb08 f404 	mul.w	r4, r8, r4
 8021072:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021076:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802107a:	fb08 f802 	mul.w	r8, r8, r2
 802107e:	fb0a fa01 	mul.w	sl, sl, r1
 8021082:	0a22      	lsrs	r2, r4, #8
 8021084:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021088:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802108c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021090:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021094:	4414      	add	r4, r2
 8021096:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802109a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802109e:	0a2d      	lsrs	r5, r5, #8
 80210a0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80210a4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80210a8:	9a03      	ldr	r2, [sp, #12]
 80210aa:	8836      	ldrh	r6, [r6, #0]
 80210ac:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80210b0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80210b4:	437d      	muls	r5, r7
 80210b6:	4461      	add	r1, ip
 80210b8:	0a24      	lsrs	r4, r4, #8
 80210ba:	fb02 5503 	mla	r5, r2, r3, r5
 80210be:	0a09      	lsrs	r1, r1, #8
 80210c0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80210c4:	fb04 540e 	mla	r4, r4, lr, r5
 80210c8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80210cc:	fb01 4100 	mla	r1, r1, r0, r4
 80210d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80210d4:	0a09      	lsrs	r1, r1, #8
 80210d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80210da:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80210de:	fb07 f70a 	mul.w	r7, r7, sl
 80210e2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80210e6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80210ea:	fb03 7101 	mla	r1, r3, r1, r7
 80210ee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80210f2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80210f6:	fb0e 1e08 	mla	lr, lr, r8, r1
 80210fa:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80210fe:	fb00 e101 	mla	r1, r0, r1, lr
 8021102:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8021106:	9a00      	ldr	r2, [sp, #0]
 8021108:	b287      	uxth	r7, r0
 802110a:	437a      	muls	r2, r7
 802110c:	0a09      	lsrs	r1, r1, #8
 802110e:	1c53      	adds	r3, r2, #1
 8021110:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021114:	4321      	orrs	r1, r4
 8021116:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802111a:	1235      	asrs	r5, r6, #8
 802111c:	0c0a      	lsrs	r2, r1, #16
 802111e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021122:	b2db      	uxtb	r3, r3
 8021124:	fb12 f207 	smulbb	r2, r2, r7
 8021128:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802112c:	fb05 2503 	mla	r5, r5, r3, r2
 8021130:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8021134:	10f2      	asrs	r2, r6, #3
 8021136:	b2c8      	uxtb	r0, r1
 8021138:	00f6      	lsls	r6, r6, #3
 802113a:	fb14 f407 	smulbb	r4, r4, r7
 802113e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021142:	b2f6      	uxtb	r6, r6
 8021144:	fb10 f007 	smulbb	r0, r0, r7
 8021148:	fb02 4203 	mla	r2, r2, r3, r4
 802114c:	b2ad      	uxth	r5, r5
 802114e:	fb06 0303 	mla	r3, r6, r3, r0
 8021152:	b299      	uxth	r1, r3
 8021154:	b294      	uxth	r4, r2
 8021156:	1c6b      	adds	r3, r5, #1
 8021158:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802115c:	1c62      	adds	r2, r4, #1
 802115e:	1c4b      	adds	r3, r1, #1
 8021160:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021164:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021168:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802116c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021170:	0952      	lsrs	r2, r2, #5
 8021172:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021176:	432b      	orrs	r3, r5
 8021178:	4313      	orrs	r3, r2
 802117a:	9a02      	ldr	r2, [sp, #8]
 802117c:	8013      	strh	r3, [r2, #0]
 802117e:	b005      	add	sp, #20
 8021180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021184:	2500      	movs	r5, #0
 8021186:	e6e9      	b.n	8020f5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021188:	2100      	movs	r1, #0
 802118a:	460d      	mov	r5, r1
 802118c:	e6f3      	b.n	8020f76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802118e:	2100      	movs	r1, #0
 8021190:	e6f1      	b.n	8020f76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021192:	4631      	mov	r1, r6
 8021194:	e6ef      	b.n	8020f76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021196:	2400      	movs	r4, #0
 8021198:	e700      	b.n	8020f9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802119a:	2200      	movs	r2, #0
 802119c:	4614      	mov	r4, r2
 802119e:	e70b      	b.n	8020fb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80211a0:	4602      	mov	r2, r0
 80211a2:	4604      	mov	r4, r0
 80211a4:	e708      	b.n	8020fb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80211a6:	2200      	movs	r2, #0
 80211a8:	e706      	b.n	8020fb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80211aa:	4632      	mov	r2, r6
 80211ac:	e704      	b.n	8020fb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080211ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80211ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211b2:	b09f      	sub	sp, #124	; 0x7c
 80211b4:	921b      	str	r2, [sp, #108]	; 0x6c
 80211b6:	9309      	str	r3, [sp, #36]	; 0x24
 80211b8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80211ba:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80211be:	931c      	str	r3, [sp, #112]	; 0x70
 80211c0:	9119      	str	r1, [sp, #100]	; 0x64
 80211c2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80211c6:	901d      	str	r0, [sp, #116]	; 0x74
 80211c8:	6850      	ldr	r0, [r2, #4]
 80211ca:	6812      	ldr	r2, [r2, #0]
 80211cc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80211ce:	fb00 1303 	mla	r3, r0, r3, r1
 80211d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80211d6:	930c      	str	r3, [sp, #48]	; 0x30
 80211d8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80211da:	681b      	ldr	r3, [r3, #0]
 80211dc:	9312      	str	r3, [sp, #72]	; 0x48
 80211de:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80211e0:	685e      	ldr	r6, [r3, #4]
 80211e2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80211e6:	930d      	str	r3, [sp, #52]	; 0x34
 80211e8:	3604      	adds	r6, #4
 80211ea:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80211ec:	2b00      	cmp	r3, #0
 80211ee:	dc03      	bgt.n	80211f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80211f0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80211f2:	2b00      	cmp	r3, #0
 80211f4:	f340 8388 	ble.w	8021908 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80211f8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80211fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80211fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021202:	1e48      	subs	r0, r1, #1
 8021204:	1e57      	subs	r7, r2, #1
 8021206:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021208:	2b00      	cmp	r3, #0
 802120a:	f340 8195 	ble.w	8021538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802120e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021210:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021214:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021218:	d406      	bmi.n	8021228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802121a:	4584      	cmp	ip, r0
 802121c:	da04      	bge.n	8021228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802121e:	2b00      	cmp	r3, #0
 8021220:	db02      	blt.n	8021228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021222:	42bb      	cmp	r3, r7
 8021224:	f2c0 8189 	blt.w	802153a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8021228:	f11c 0c01 	adds.w	ip, ip, #1
 802122c:	f100 8177 	bmi.w	802151e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021230:	4561      	cmp	r1, ip
 8021232:	f2c0 8174 	blt.w	802151e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021236:	3301      	adds	r3, #1
 8021238:	f100 8171 	bmi.w	802151e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802123c:	429a      	cmp	r2, r3
 802123e:	f2c0 816e 	blt.w	802151e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021242:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021244:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8021246:	931a      	str	r3, [sp, #104]	; 0x68
 8021248:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802124a:	2b00      	cmp	r3, #0
 802124c:	f340 8193 	ble.w	8021576 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021250:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021252:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021256:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021258:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802125c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802125e:	141b      	asrs	r3, r3, #16
 8021260:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021264:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021268:	f100 81d6 	bmi.w	8021618 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802126c:	f100 38ff 	add.w	r8, r0, #4294967295
 8021270:	4543      	cmp	r3, r8
 8021272:	f280 81d1 	bge.w	8021618 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021276:	f1bc 0f00 	cmp.w	ip, #0
 802127a:	f2c0 81cd 	blt.w	8021618 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802127e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021282:	45c4      	cmp	ip, r8
 8021284:	f280 81c8 	bge.w	8021618 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021288:	b200      	sxth	r0, r0
 802128a:	fb0c 3300 	mla	r3, ip, r0, r3
 802128e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021290:	eb04 0803 	add.w	r8, r4, r3
 8021294:	5ce3      	ldrb	r3, [r4, r3]
 8021296:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802129a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802129e:	2a00      	cmp	r2, #0
 80212a0:	f000 81af 	beq.w	8021602 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80212a4:	f898 c001 	ldrb.w	ip, [r8, #1]
 80212a8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80212ac:	940e      	str	r4, [sp, #56]	; 0x38
 80212ae:	0e24      	lsrs	r4, r4, #24
 80212b0:	9415      	str	r4, [sp, #84]	; 0x54
 80212b2:	b179      	cbz	r1, 80212d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80212b4:	eb08 0c00 	add.w	ip, r8, r0
 80212b8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80212bc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80212c0:	900a      	str	r0, [sp, #40]	; 0x28
 80212c2:	0e00      	lsrs	r0, r0, #24
 80212c4:	9013      	str	r0, [sp, #76]	; 0x4c
 80212c6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80212ca:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80212ce:	900f      	str	r0, [sp, #60]	; 0x3c
 80212d0:	0e00      	lsrs	r0, r0, #24
 80212d2:	9016      	str	r0, [sp, #88]	; 0x58
 80212d4:	b292      	uxth	r2, r2
 80212d6:	b289      	uxth	r1, r1
 80212d8:	fb02 f901 	mul.w	r9, r2, r1
 80212dc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80212e0:	0112      	lsls	r2, r2, #4
 80212e2:	eba2 0809 	sub.w	r8, r2, r9
 80212e6:	b289      	uxth	r1, r1
 80212e8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80212ec:	9815      	ldr	r0, [sp, #84]	; 0x54
 80212ee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80212f0:	fa1f f888 	uxth.w	r8, r8
 80212f4:	1a52      	subs	r2, r2, r1
 80212f6:	b292      	uxth	r2, r2
 80212f8:	fb08 f000 	mul.w	r0, r8, r0
 80212fc:	fb02 000e 	mla	r0, r2, lr, r0
 8021300:	fb01 0004 	mla	r0, r1, r4, r0
 8021304:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021306:	fb09 0004 	mla	r0, r9, r4, r0
 802130a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802130e:	2800      	cmp	r0, #0
 8021310:	f000 80fa 	beq.w	8021508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021314:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021318:	d01b      	beq.n	8021352 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802131a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802131e:	fb0e fa0a 	mul.w	sl, lr, sl
 8021322:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021326:	fb0e fe03 	mul.w	lr, lr, r3
 802132a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802132e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021332:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021336:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802133a:	4453      	add	r3, sl
 802133c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021340:	0a1b      	lsrs	r3, r3, #8
 8021342:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021346:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802134a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802134e:	ea43 030c 	orr.w	r3, r3, ip
 8021352:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021354:	2cff      	cmp	r4, #255	; 0xff
 8021356:	d021      	beq.n	802139c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021358:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802135a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802135e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021360:	fb04 fb0b 	mul.w	fp, r4, fp
 8021364:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021366:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802136a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802136c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021370:	fb04 fa0a 	mul.w	sl, r4, sl
 8021374:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021378:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802137c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021380:	44de      	add	lr, fp
 8021382:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021386:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802138a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802138e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021392:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021396:	ea4e 040a 	orr.w	r4, lr, sl
 802139a:	940e      	str	r4, [sp, #56]	; 0x38
 802139c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802139e:	2cff      	cmp	r4, #255	; 0xff
 80213a0:	d021      	beq.n	80213e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80213a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80213a4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80213a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80213aa:	fb04 fb0b 	mul.w	fp, r4, fp
 80213ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80213b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80213b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80213b6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80213ba:	fb04 fa0a 	mul.w	sl, r4, sl
 80213be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80213c2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80213c6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80213ca:	44de      	add	lr, fp
 80213cc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80213d0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80213d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80213d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80213dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80213e0:	ea4e 040a 	orr.w	r4, lr, sl
 80213e4:	940a      	str	r4, [sp, #40]	; 0x28
 80213e6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80213e8:	2cff      	cmp	r4, #255	; 0xff
 80213ea:	d021      	beq.n	8021430 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80213ec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80213ee:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80213f2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80213f4:	fb04 fb0b 	mul.w	fp, r4, fp
 80213f8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80213fa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80213fe:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021400:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021404:	fb04 fa0a 	mul.w	sl, r4, sl
 8021408:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802140c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021410:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021414:	44de      	add	lr, fp
 8021416:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802141a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802141e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021422:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021426:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802142a:	ea4e 040a 	orr.w	r4, lr, sl
 802142e:	940f      	str	r4, [sp, #60]	; 0x3c
 8021430:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021432:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021436:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021438:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802143c:	fb08 fc0c 	mul.w	ip, r8, ip
 8021440:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021444:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021448:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802144a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802144e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021452:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021454:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021458:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802145c:	fb08 f80e 	mul.w	r8, r8, lr
 8021460:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021464:	fb02 8303 	mla	r3, r2, r3, r8
 8021468:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802146a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802146c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021470:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021472:	fb01 330a 	mla	r3, r1, sl, r3
 8021476:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802147a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802147c:	fb09 3901 	mla	r9, r9, r1, r3
 8021480:	4342      	muls	r2, r0
 8021482:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021486:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802148a:	883b      	ldrh	r3, [r7, #0]
 802148c:	1c50      	adds	r0, r2, #1
 802148e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021492:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021496:	ea4c 0c09 	orr.w	ip, ip, r9
 802149a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802149e:	1219      	asrs	r1, r3, #8
 80214a0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80214a4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80214a8:	b2c0      	uxtb	r0, r0
 80214aa:	fb12 f204 	smulbb	r2, r2, r4
 80214ae:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80214b2:	fb01 2100 	mla	r1, r1, r0, r2
 80214b6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80214ba:	10da      	asrs	r2, r3, #3
 80214bc:	fa5f fc8c 	uxtb.w	ip, ip
 80214c0:	00db      	lsls	r3, r3, #3
 80214c2:	fb1c fc04 	smulbb	ip, ip, r4
 80214c6:	b2db      	uxtb	r3, r3
 80214c8:	b289      	uxth	r1, r1
 80214ca:	fb03 c300 	mla	r3, r3, r0, ip
 80214ce:	fa1f fc83 	uxth.w	ip, r3
 80214d2:	1c4b      	adds	r3, r1, #1
 80214d4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80214d8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80214dc:	fb1e fe04 	smulbb	lr, lr, r4
 80214e0:	f10c 0301 	add.w	r3, ip, #1
 80214e4:	fb02 e200 	mla	r2, r2, r0, lr
 80214e8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80214ec:	b292      	uxth	r2, r2
 80214ee:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80214f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80214f6:	430b      	orrs	r3, r1
 80214f8:	1c51      	adds	r1, r2, #1
 80214fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80214fe:	0952      	lsrs	r2, r2, #5
 8021500:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021504:	4313      	orrs	r3, r2
 8021506:	803b      	strh	r3, [r7, #0]
 8021508:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802150a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802150c:	441a      	add	r2, r3
 802150e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021510:	9229      	str	r2, [sp, #164]	; 0xa4
 8021512:	441d      	add	r5, r3
 8021514:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021516:	3b01      	subs	r3, #1
 8021518:	3702      	adds	r7, #2
 802151a:	931a      	str	r3, [sp, #104]	; 0x68
 802151c:	e694      	b.n	8021248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802151e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021520:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021522:	441c      	add	r4, r3
 8021524:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021526:	9429      	str	r4, [sp, #164]	; 0xa4
 8021528:	441d      	add	r5, r3
 802152a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802152c:	3b01      	subs	r3, #1
 802152e:	9309      	str	r3, [sp, #36]	; 0x24
 8021530:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021532:	3302      	adds	r3, #2
 8021534:	930c      	str	r3, [sp, #48]	; 0x30
 8021536:	e666      	b.n	8021206 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021538:	d024      	beq.n	8021584 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802153a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802153c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802153e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021540:	3b01      	subs	r3, #1
 8021542:	fb00 4003 	mla	r0, r0, r3, r4
 8021546:	1400      	asrs	r0, r0, #16
 8021548:	f53f ae7b 	bmi.w	8021242 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802154c:	3901      	subs	r1, #1
 802154e:	4288      	cmp	r0, r1
 8021550:	f6bf ae77 	bge.w	8021242 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021554:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8021556:	fb01 5303 	mla	r3, r1, r3, r5
 802155a:	141b      	asrs	r3, r3, #16
 802155c:	f53f ae71 	bmi.w	8021242 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021560:	3a01      	subs	r2, #1
 8021562:	4293      	cmp	r3, r2
 8021564:	f6bf ae6d 	bge.w	8021242 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021568:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802156c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021570:	f1bb 0f00 	cmp.w	fp, #0
 8021574:	dc70      	bgt.n	8021658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8021576:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021578:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802157c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802157e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021582:	930c      	str	r3, [sp, #48]	; 0x30
 8021584:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021586:	2b00      	cmp	r3, #0
 8021588:	f340 81be 	ble.w	8021908 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802158c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021590:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021594:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021598:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802159a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802159e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80215a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80215a6:	eef0 6a62 	vmov.f32	s13, s5
 80215aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80215ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80215b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80215b6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80215ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80215be:	eef0 6a43 	vmov.f32	s13, s6
 80215c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80215c6:	ee12 2a90 	vmov	r2, s5
 80215ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80215ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80215d2:	ee13 2a10 	vmov	r2, s6
 80215d6:	932b      	str	r3, [sp, #172]	; 0xac
 80215d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80215da:	fb92 f3f3 	sdiv	r3, r2, r3
 80215de:	932c      	str	r3, [sp, #176]	; 0xb0
 80215e0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80215e2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80215e4:	3b01      	subs	r3, #1
 80215e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80215ea:	9319      	str	r3, [sp, #100]	; 0x64
 80215ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80215ee:	bf08      	it	eq
 80215f0:	4613      	moveq	r3, r2
 80215f2:	ee16 5a90 	vmov	r5, s13
 80215f6:	9309      	str	r3, [sp, #36]	; 0x24
 80215f8:	eeb0 3a67 	vmov.f32	s6, s15
 80215fc:	eef0 2a47 	vmov.f32	s5, s14
 8021600:	e5f3      	b.n	80211ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021602:	2900      	cmp	r1, #0
 8021604:	f43f ae66 	beq.w	80212d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021608:	f818 0000 	ldrb.w	r0, [r8, r0]
 802160c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021610:	900a      	str	r0, [sp, #40]	; 0x28
 8021612:	0e00      	lsrs	r0, r0, #24
 8021614:	9013      	str	r0, [sp, #76]	; 0x4c
 8021616:	e65d      	b.n	80212d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021618:	f113 0801 	adds.w	r8, r3, #1
 802161c:	f53f af74 	bmi.w	8021508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021620:	4540      	cmp	r0, r8
 8021622:	f6ff af71 	blt.w	8021508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021626:	f11c 0801 	adds.w	r8, ip, #1
 802162a:	f53f af6d 	bmi.w	8021508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802162e:	45c6      	cmp	lr, r8
 8021630:	f6ff af6a 	blt.w	8021508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021634:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8021636:	9302      	str	r3, [sp, #8]
 8021638:	b200      	sxth	r0, r0
 802163a:	fa0f f38e 	sxth.w	r3, lr
 802163e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021642:	e9cd c203 	strd	ip, r2, [sp, #12]
 8021646:	9301      	str	r3, [sp, #4]
 8021648:	9000      	str	r0, [sp, #0]
 802164a:	4633      	mov	r3, r6
 802164c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802164e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8021650:	4639      	mov	r1, r7
 8021652:	f7ff fc62 	bl	8020f1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8021656:	e757      	b.n	8021508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021658:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802165a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802165c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021660:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021662:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021666:	1427      	asrs	r7, r4, #16
 8021668:	142b      	asrs	r3, r5, #16
 802166a:	fb01 7303 	mla	r3, r1, r3, r7
 802166e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021670:	18e7      	adds	r7, r4, r3
 8021672:	5ce3      	ldrb	r3, [r4, r3]
 8021674:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021678:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802167c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021680:	2a00      	cmp	r2, #0
 8021682:	f000 8137 	beq.w	80218f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021686:	f897 e001 	ldrb.w	lr, [r7, #1]
 802168a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802168e:	9410      	str	r4, [sp, #64]	; 0x40
 8021690:	0e24      	lsrs	r4, r4, #24
 8021692:	9417      	str	r4, [sp, #92]	; 0x5c
 8021694:	b170      	cbz	r0, 80216b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021696:	eb07 0e01 	add.w	lr, r7, r1
 802169a:	5c79      	ldrb	r1, [r7, r1]
 802169c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80216a0:	910b      	str	r1, [sp, #44]	; 0x2c
 80216a2:	0e09      	lsrs	r1, r1, #24
 80216a4:	9114      	str	r1, [sp, #80]	; 0x50
 80216a6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80216aa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80216ae:	9111      	str	r1, [sp, #68]	; 0x44
 80216b0:	0e09      	lsrs	r1, r1, #24
 80216b2:	9118      	str	r1, [sp, #96]	; 0x60
 80216b4:	b292      	uxth	r2, r2
 80216b6:	b280      	uxth	r0, r0
 80216b8:	fb02 f800 	mul.w	r8, r2, r0
 80216bc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80216c0:	0112      	lsls	r2, r2, #4
 80216c2:	eba2 0e08 	sub.w	lr, r2, r8
 80216c6:	b280      	uxth	r0, r0
 80216c8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80216cc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80216ce:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80216d0:	fa1f fe8e 	uxth.w	lr, lr
 80216d4:	1a12      	subs	r2, r2, r0
 80216d6:	b292      	uxth	r2, r2
 80216d8:	fb0e f101 	mul.w	r1, lr, r1
 80216dc:	fb02 110c 	mla	r1, r2, ip, r1
 80216e0:	fb00 1104 	mla	r1, r0, r4, r1
 80216e4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80216e6:	fb08 1104 	mla	r1, r8, r4, r1
 80216ea:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80216ee:	2900      	cmp	r1, #0
 80216f0:	f000 80f5 	beq.w	80218de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80216f4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80216f8:	d019      	beq.n	802172e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80216fa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80216fe:	fb0c fa0a 	mul.w	sl, ip, sl
 8021702:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021706:	fb0c fc03 	mul.w	ip, ip, r3
 802170a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802170e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021712:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021716:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802171a:	4453      	add	r3, sl
 802171c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021720:	0a1b      	lsrs	r3, r3, #8
 8021722:	0a3f      	lsrs	r7, r7, #8
 8021724:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021728:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802172c:	433b      	orrs	r3, r7
 802172e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021730:	2cff      	cmp	r4, #255	; 0xff
 8021732:	d020      	beq.n	8021776 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8021734:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021736:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802173a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802173c:	4367      	muls	r7, r4
 802173e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021740:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021744:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021746:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802174a:	fb04 fa0a 	mul.w	sl, r4, sl
 802174e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021752:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021756:	44bc      	add	ip, r7
 8021758:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802175c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021760:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021764:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021768:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802176c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021770:	ea4c 040a 	orr.w	r4, ip, sl
 8021774:	9410      	str	r4, [sp, #64]	; 0x40
 8021776:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021778:	2cff      	cmp	r4, #255	; 0xff
 802177a:	d020      	beq.n	80217be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802177c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802177e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021782:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021784:	4367      	muls	r7, r4
 8021786:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021788:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802178c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802178e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021792:	fb04 fa0a 	mul.w	sl, r4, sl
 8021796:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802179a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802179e:	44bc      	add	ip, r7
 80217a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80217a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80217a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80217ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80217b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80217b8:	ea4c 040a 	orr.w	r4, ip, sl
 80217bc:	940b      	str	r4, [sp, #44]	; 0x2c
 80217be:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80217c0:	2cff      	cmp	r4, #255	; 0xff
 80217c2:	d020      	beq.n	8021806 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80217c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80217c6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80217ca:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80217cc:	4367      	muls	r7, r4
 80217ce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80217d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80217d4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80217d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80217da:	fb04 fa0a 	mul.w	sl, r4, sl
 80217de:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80217e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217e6:	44bc      	add	ip, r7
 80217e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80217ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80217f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80217f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80217f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021800:	ea4c 040a 	orr.w	r4, ip, sl
 8021804:	9411      	str	r4, [sp, #68]	; 0x44
 8021806:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021808:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802180c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802180e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021812:	fb0e f707 	mul.w	r7, lr, r7
 8021816:	fb02 770c 	mla	r7, r2, ip, r7
 802181a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802181e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021820:	fb00 770c 	mla	r7, r0, ip, r7
 8021824:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021828:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802182a:	fb08 770c 	mla	r7, r8, ip, r7
 802182e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021832:	fb0e fe0c 	mul.w	lr, lr, ip
 8021836:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802183a:	fb02 e303 	mla	r3, r2, r3, lr
 802183e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021840:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021842:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021846:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8021848:	fb00 330a 	mla	r3, r0, sl, r3
 802184c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8021850:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021854:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021856:	f8b9 0000 	ldrh.w	r0, [r9]
 802185a:	434b      	muls	r3, r1
 802185c:	0a3f      	lsrs	r7, r7, #8
 802185e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021862:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021866:	1c59      	adds	r1, r3, #1
 8021868:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802186c:	ea47 070c 	orr.w	r7, r7, ip
 8021870:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021874:	1202      	asrs	r2, r0, #8
 8021876:	0c3b      	lsrs	r3, r7, #16
 8021878:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802187c:	b2c9      	uxtb	r1, r1
 802187e:	fb13 f304 	smulbb	r3, r3, r4
 8021882:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021886:	fb02 3201 	mla	r2, r2, r1, r3
 802188a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802188e:	10c3      	asrs	r3, r0, #3
 8021890:	b2ff      	uxtb	r7, r7
 8021892:	00c0      	lsls	r0, r0, #3
 8021894:	b292      	uxth	r2, r2
 8021896:	fb1c fc04 	smulbb	ip, ip, r4
 802189a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802189e:	b2c0      	uxtb	r0, r0
 80218a0:	fb17 f704 	smulbb	r7, r7, r4
 80218a4:	fb03 c301 	mla	r3, r3, r1, ip
 80218a8:	fb00 7001 	mla	r0, r0, r1, r7
 80218ac:	f102 0c01 	add.w	ip, r2, #1
 80218b0:	b280      	uxth	r0, r0
 80218b2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80218b6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80218ba:	1c42      	adds	r2, r0, #1
 80218bc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80218c0:	b29b      	uxth	r3, r3
 80218c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80218c6:	ea42 020c 	orr.w	r2, r2, ip
 80218ca:	f103 0c01 	add.w	ip, r3, #1
 80218ce:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80218d2:	095b      	lsrs	r3, r3, #5
 80218d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80218d8:	431a      	orrs	r2, r3
 80218da:	f8a9 2000 	strh.w	r2, [r9]
 80218de:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80218e0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80218e2:	441a      	add	r2, r3
 80218e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80218e6:	9229      	str	r2, [sp, #164]	; 0xa4
 80218e8:	f109 0902 	add.w	r9, r9, #2
 80218ec:	441d      	add	r5, r3
 80218ee:	f10b 3bff 	add.w	fp, fp, #4294967295
 80218f2:	e63d      	b.n	8021570 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80218f4:	2800      	cmp	r0, #0
 80218f6:	f43f aedd 	beq.w	80216b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80218fa:	5c79      	ldrb	r1, [r7, r1]
 80218fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021900:	910b      	str	r1, [sp, #44]	; 0x2c
 8021902:	0e09      	lsrs	r1, r1, #24
 8021904:	9114      	str	r1, [sp, #80]	; 0x50
 8021906:	e6d5      	b.n	80216b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021908:	b01f      	add	sp, #124	; 0x7c
 802190a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802190e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802190e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021912:	b089      	sub	sp, #36	; 0x24
 8021914:	9101      	str	r1, [sp, #4]
 8021916:	9801      	ldr	r0, [sp, #4]
 8021918:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802191c:	8800      	ldrh	r0, [r0, #0]
 802191e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021922:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8021926:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802192a:	1206      	asrs	r6, r0, #8
 802192c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8021930:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021934:	9602      	str	r6, [sp, #8]
 8021936:	10c6      	asrs	r6, r0, #3
 8021938:	00c0      	lsls	r0, r0, #3
 802193a:	b2c0      	uxtb	r0, r0
 802193c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021940:	9004      	str	r0, [sp, #16]
 8021942:	2f00      	cmp	r7, #0
 8021944:	fb07 100c 	mla	r0, r7, ip, r1
 8021948:	9603      	str	r6, [sp, #12]
 802194a:	eb02 0e00 	add.w	lr, r2, r0
 802194e:	f2c0 810a 	blt.w	8021b66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021952:	45b8      	cmp	r8, r7
 8021954:	f340 8107 	ble.w	8021b66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021958:	2900      	cmp	r1, #0
 802195a:	f2c0 8102 	blt.w	8021b62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802195e:	458c      	cmp	ip, r1
 8021960:	f340 80ff 	ble.w	8021b62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021964:	5c12      	ldrb	r2, [r2, r0]
 8021966:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802196a:	1c4a      	adds	r2, r1, #1
 802196c:	f100 80fe 	bmi.w	8021b6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021970:	4594      	cmp	ip, r2
 8021972:	f340 80fb 	ble.w	8021b6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021976:	2d00      	cmp	r5, #0
 8021978:	f000 80fa 	beq.w	8021b70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802197c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021980:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021984:	3701      	adds	r7, #1
 8021986:	f100 80f7 	bmi.w	8021b78 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802198a:	45b8      	cmp	r8, r7
 802198c:	f340 80f4 	ble.w	8021b78 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021990:	2c00      	cmp	r4, #0
 8021992:	f000 80f4 	beq.w	8021b7e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8021996:	2900      	cmp	r1, #0
 8021998:	eb0e 020c 	add.w	r2, lr, ip
 802199c:	f2c0 80ea 	blt.w	8021b74 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80219a0:	458c      	cmp	ip, r1
 80219a2:	f340 80e7 	ble.w	8021b74 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80219a6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80219aa:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80219ae:	3101      	adds	r1, #1
 80219b0:	f100 80e8 	bmi.w	8021b84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80219b4:	458c      	cmp	ip, r1
 80219b6:	f340 80e5 	ble.w	8021b84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80219ba:	2d00      	cmp	r5, #0
 80219bc:	f000 80e4 	beq.w	8021b88 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80219c0:	7852      	ldrb	r2, [r2, #1]
 80219c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80219c6:	0e0b      	lsrs	r3, r1, #24
 80219c8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80219cc:	9300      	str	r3, [sp, #0]
 80219ce:	b2a4      	uxth	r4, r4
 80219d0:	b2ab      	uxth	r3, r5
 80219d2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80219d6:	fb03 f904 	mul.w	r9, r3, r4
 80219da:	fb0a f505 	mul.w	r5, sl, r5
 80219de:	011b      	lsls	r3, r3, #4
 80219e0:	eba3 0e09 	sub.w	lr, r3, r9
 80219e4:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80219e8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80219ec:	0a28      	lsrs	r0, r5, #8
 80219ee:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80219f2:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80219f6:	4405      	add	r5, r0
 80219f8:	0a2d      	lsrs	r5, r5, #8
 80219fa:	fb0a f303 	mul.w	r3, sl, r3
 80219fe:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021a02:	9005      	str	r0, [sp, #20]
 8021a04:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8021a08:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021a0c:	0a1b      	lsrs	r3, r3, #8
 8021a0e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021a12:	9306      	str	r3, [sp, #24]
 8021a14:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8021a18:	fb0b f303 	mul.w	r3, fp, r3
 8021a1c:	0a1d      	lsrs	r5, r3, #8
 8021a1e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021a22:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8021a26:	fb0b f606 	mul.w	r6, fp, r6
 8021a2a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021a2e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021a32:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021a36:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021a3a:	fb08 f707 	mul.w	r7, r8, r7
 8021a3e:	441d      	add	r5, r3
 8021a40:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021a44:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021a48:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021a4c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021a50:	fb08 fc0c 	mul.w	ip, r8, ip
 8021a54:	0a1b      	lsrs	r3, r3, #8
 8021a56:	9307      	str	r3, [sp, #28]
 8021a58:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021a5c:	0e0b      	lsrs	r3, r1, #24
 8021a5e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021a62:	435f      	muls	r7, r3
 8021a64:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021a68:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021a6c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021a70:	4460      	add	r0, ip
 8021a72:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021a76:	b2a4      	uxth	r4, r4
 8021a78:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021a7c:	0a2d      	lsrs	r5, r5, #8
 8021a7e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021a82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a86:	fa1f fe8e 	uxth.w	lr, lr
 8021a8a:	4359      	muls	r1, r3
 8021a8c:	1b12      	subs	r2, r2, r4
 8021a8e:	9b05      	ldr	r3, [sp, #20]
 8021a90:	44bc      	add	ip, r7
 8021a92:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021a96:	b292      	uxth	r2, r2
 8021a98:	fb05 f50e 	mul.w	r5, r5, lr
 8021a9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021aa0:	fb03 5502 	mla	r5, r3, r2, r5
 8021aa4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021aa8:	9b06      	ldr	r3, [sp, #24]
 8021aaa:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021aae:	0a36      	lsrs	r6, r6, #8
 8021ab0:	0a00      	lsrs	r0, r0, #8
 8021ab2:	fb0c 5509 	mla	r5, ip, r9, r5
 8021ab6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021aba:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021abe:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021ac2:	fb00 5504 	mla	r5, r0, r4, r5
 8021ac6:	fb0e f606 	mul.w	r6, lr, r6
 8021aca:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021ace:	0a09      	lsrs	r1, r1, #8
 8021ad0:	9b07      	ldr	r3, [sp, #28]
 8021ad2:	fb02 6000 	mla	r0, r2, r0, r6
 8021ad6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021ada:	fb09 0001 	mla	r0, r9, r1, r0
 8021ade:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021ae2:	fb0e fe0b 	mul.w	lr, lr, fp
 8021ae6:	fb04 0003 	mla	r0, r4, r3, r0
 8021aea:	fb02 e20a 	mla	r2, r2, sl, lr
 8021aee:	9b00      	ldr	r3, [sp, #0]
 8021af0:	fb04 2408 	mla	r4, r4, r8, r2
 8021af4:	fb09 4903 	mla	r9, r9, r3, r4
 8021af8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021afc:	9b02      	ldr	r3, [sp, #8]
 8021afe:	9a04      	ldr	r2, [sp, #16]
 8021b00:	fa5f f989 	uxtb.w	r9, r9
 8021b04:	fb03 f109 	mul.w	r1, r3, r9
 8021b08:	9b03      	ldr	r3, [sp, #12]
 8021b0a:	0a2d      	lsrs	r5, r5, #8
 8021b0c:	0a00      	lsrs	r0, r0, #8
 8021b0e:	fb03 f309 	mul.w	r3, r3, r9
 8021b12:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8021b16:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021b1a:	4305      	orrs	r5, r0
 8021b1c:	fb02 f909 	mul.w	r9, r2, r9
 8021b20:	1c58      	adds	r0, r3, #1
 8021b22:	1c4a      	adds	r2, r1, #1
 8021b24:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021b28:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021b2c:	0a2b      	lsrs	r3, r5, #8
 8021b2e:	0c2a      	lsrs	r2, r5, #16
 8021b30:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021b34:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021b38:	00db      	lsls	r3, r3, #3
 8021b3a:	0212      	lsls	r2, r2, #8
 8021b3c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021b40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b44:	4313      	orrs	r3, r2
 8021b46:	f109 0201 	add.w	r2, r9, #1
 8021b4a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021b4e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021b52:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021b56:	431d      	orrs	r5, r3
 8021b58:	9b01      	ldr	r3, [sp, #4]
 8021b5a:	801d      	strh	r5, [r3, #0]
 8021b5c:	b009      	add	sp, #36	; 0x24
 8021b5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b62:	2000      	movs	r0, #0
 8021b64:	e701      	b.n	802196a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021b66:	2600      	movs	r6, #0
 8021b68:	4630      	mov	r0, r6
 8021b6a:	e70b      	b.n	8021984 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021b6c:	2600      	movs	r6, #0
 8021b6e:	e709      	b.n	8021984 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021b70:	462e      	mov	r6, r5
 8021b72:	e707      	b.n	8021984 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021b74:	2700      	movs	r7, #0
 8021b76:	e71a      	b.n	80219ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021b78:	2100      	movs	r1, #0
 8021b7a:	460f      	mov	r7, r1
 8021b7c:	e723      	b.n	80219c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021b7e:	4621      	mov	r1, r4
 8021b80:	4627      	mov	r7, r4
 8021b82:	e720      	b.n	80219c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021b84:	2100      	movs	r1, #0
 8021b86:	e71e      	b.n	80219c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021b88:	4629      	mov	r1, r5
 8021b8a:	e71c      	b.n	80219c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021b8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b90:	b09b      	sub	sp, #108	; 0x6c
 8021b92:	9218      	str	r2, [sp, #96]	; 0x60
 8021b94:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021b96:	9116      	str	r1, [sp, #88]	; 0x58
 8021b98:	9307      	str	r3, [sp, #28]
 8021b9a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021b9e:	9019      	str	r0, [sp, #100]	; 0x64
 8021ba0:	6850      	ldr	r0, [r2, #4]
 8021ba2:	6812      	ldr	r2, [r2, #0]
 8021ba4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021ba6:	fb00 1303 	mla	r3, r0, r3, r1
 8021baa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021bae:	930a      	str	r3, [sp, #40]	; 0x28
 8021bb0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021bb2:	681b      	ldr	r3, [r3, #0]
 8021bb4:	930f      	str	r3, [sp, #60]	; 0x3c
 8021bb6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021bb8:	685e      	ldr	r6, [r3, #4]
 8021bba:	3604      	adds	r6, #4
 8021bbc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021bbe:	2b00      	cmp	r3, #0
 8021bc0:	dc03      	bgt.n	8021bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021bc2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021bc4:	2b00      	cmp	r3, #0
 8021bc6:	f340 8373 	ble.w	80222b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021bca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021bcc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021bd0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021bd4:	1e48      	subs	r0, r1, #1
 8021bd6:	1e57      	subs	r7, r2, #1
 8021bd8:	9b07      	ldr	r3, [sp, #28]
 8021bda:	2b00      	cmp	r3, #0
 8021bdc:	f340 8190 	ble.w	8021f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021be0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021be2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021be6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021bea:	d406      	bmi.n	8021bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bec:	4584      	cmp	ip, r0
 8021bee:	da04      	bge.n	8021bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bf0:	2b00      	cmp	r3, #0
 8021bf2:	db02      	blt.n	8021bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bf4:	42bb      	cmp	r3, r7
 8021bf6:	f2c0 8184 	blt.w	8021f02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021bfa:	f11c 0c01 	adds.w	ip, ip, #1
 8021bfe:	f100 8172 	bmi.w	8021ee6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c02:	4561      	cmp	r1, ip
 8021c04:	f2c0 816f 	blt.w	8021ee6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c08:	3301      	adds	r3, #1
 8021c0a:	f100 816c 	bmi.w	8021ee6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c0e:	429a      	cmp	r2, r3
 8021c10:	f2c0 8169 	blt.w	8021ee6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c14:	9b07      	ldr	r3, [sp, #28]
 8021c16:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021c18:	9317      	str	r3, [sp, #92]	; 0x5c
 8021c1a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021c1c:	2b00      	cmp	r3, #0
 8021c1e:	f340 818e 	ble.w	8021f3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021c22:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021c24:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021c28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021c2a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021c2e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021c30:	141b      	asrs	r3, r3, #16
 8021c32:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021c36:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021c3a:	f100 81d1 	bmi.w	8021fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021c3e:	f101 38ff 	add.w	r8, r1, #4294967295
 8021c42:	4543      	cmp	r3, r8
 8021c44:	f280 81cc 	bge.w	8021fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021c48:	f1bc 0f00 	cmp.w	ip, #0
 8021c4c:	f2c0 81c8 	blt.w	8021fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021c50:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021c54:	45c4      	cmp	ip, r8
 8021c56:	f280 81c3 	bge.w	8021fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021c5a:	b209      	sxth	r1, r1
 8021c5c:	fb0c 3301 	mla	r3, ip, r1, r3
 8021c60:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021c62:	eb04 0803 	add.w	r8, r4, r3
 8021c66:	5ce3      	ldrb	r3, [r4, r3]
 8021c68:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021c6c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021c70:	2a00      	cmp	r2, #0
 8021c72:	f000 81aa 	beq.w	8021fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021c76:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021c7a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021c7e:	940b      	str	r4, [sp, #44]	; 0x2c
 8021c80:	0e24      	lsrs	r4, r4, #24
 8021c82:	9412      	str	r4, [sp, #72]	; 0x48
 8021c84:	b178      	cbz	r0, 8021ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021c86:	eb08 0c01 	add.w	ip, r8, r1
 8021c8a:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021c8e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021c92:	9108      	str	r1, [sp, #32]
 8021c94:	0e09      	lsrs	r1, r1, #24
 8021c96:	9110      	str	r1, [sp, #64]	; 0x40
 8021c98:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021c9c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021ca0:	910c      	str	r1, [sp, #48]	; 0x30
 8021ca2:	0e09      	lsrs	r1, r1, #24
 8021ca4:	9113      	str	r1, [sp, #76]	; 0x4c
 8021ca6:	b292      	uxth	r2, r2
 8021ca8:	b280      	uxth	r0, r0
 8021caa:	fb02 f900 	mul.w	r9, r2, r0
 8021cae:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021cb2:	0112      	lsls	r2, r2, #4
 8021cb4:	eba2 0809 	sub.w	r8, r2, r9
 8021cb8:	b280      	uxth	r0, r0
 8021cba:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021cbe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021cc0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021cc2:	fa1f f888 	uxth.w	r8, r8
 8021cc6:	1a12      	subs	r2, r2, r0
 8021cc8:	b292      	uxth	r2, r2
 8021cca:	fb08 f101 	mul.w	r1, r8, r1
 8021cce:	fb02 110e 	mla	r1, r2, lr, r1
 8021cd2:	fb00 1104 	mla	r1, r0, r4, r1
 8021cd6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021cd8:	fb09 1104 	mla	r1, r9, r4, r1
 8021cdc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021ce0:	2900      	cmp	r1, #0
 8021ce2:	f000 80f5 	beq.w	8021ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021ce6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021cea:	d01b      	beq.n	8021d24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021cec:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021cf0:	fb0e fa0a 	mul.w	sl, lr, sl
 8021cf4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021cf8:	fb0e fe03 	mul.w	lr, lr, r3
 8021cfc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021d00:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021d04:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021d08:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021d0c:	4453      	add	r3, sl
 8021d0e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021d12:	0a1b      	lsrs	r3, r3, #8
 8021d14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021d18:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021d1c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021d20:	ea43 030c 	orr.w	r3, r3, ip
 8021d24:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021d26:	2cff      	cmp	r4, #255	; 0xff
 8021d28:	d021      	beq.n	8021d6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021d2a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021d2c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021d30:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021d32:	fb04 fb0b 	mul.w	fp, r4, fp
 8021d36:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021d38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021d3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021d3e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021d42:	fb04 fa0a 	mul.w	sl, r4, sl
 8021d46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d4a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021d4e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021d52:	44de      	add	lr, fp
 8021d54:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021d58:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021d5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021d60:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021d68:	ea4e 040a 	orr.w	r4, lr, sl
 8021d6c:	940b      	str	r4, [sp, #44]	; 0x2c
 8021d6e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021d70:	2cff      	cmp	r4, #255	; 0xff
 8021d72:	d021      	beq.n	8021db8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021d74:	9c08      	ldr	r4, [sp, #32]
 8021d76:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021d7a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021d7c:	fb04 fb0b 	mul.w	fp, r4, fp
 8021d80:	9c08      	ldr	r4, [sp, #32]
 8021d82:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021d86:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021d88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021d8c:	fb04 fa0a 	mul.w	sl, r4, sl
 8021d90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d94:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021d98:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021d9c:	44de      	add	lr, fp
 8021d9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021da2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021da6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021daa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021dae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021db2:	ea4e 040a 	orr.w	r4, lr, sl
 8021db6:	9408      	str	r4, [sp, #32]
 8021db8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021dba:	2cff      	cmp	r4, #255	; 0xff
 8021dbc:	d021      	beq.n	8021e02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021dbe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021dc0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021dc4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021dc6:	fb04 fb0b 	mul.w	fp, r4, fp
 8021dca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021dcc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021dd0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021dd2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021dd6:	fb04 fa0a 	mul.w	sl, r4, sl
 8021dda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021dde:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021de2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021de6:	44de      	add	lr, fp
 8021de8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021dec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021df0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021df4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021df8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021dfc:	ea4e 040a 	orr.w	r4, lr, sl
 8021e00:	940c      	str	r4, [sp, #48]	; 0x30
 8021e02:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021e04:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021e08:	9c08      	ldr	r4, [sp, #32]
 8021e0a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021e0e:	fb08 fc0c 	mul.w	ip, r8, ip
 8021e12:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021e16:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021e1a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021e1c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021e20:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021e24:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021e26:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021e2a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021e2e:	fb08 f80e 	mul.w	r8, r8, lr
 8021e32:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021e36:	fb02 8303 	mla	r3, r2, r3, r8
 8021e3a:	9a08      	ldr	r2, [sp, #32]
 8021e3c:	f8b7 8000 	ldrh.w	r8, [r7]
 8021e40:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021e44:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021e46:	fb00 330a 	mla	r3, r0, sl, r3
 8021e4a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021e4e:	fb09 3900 	mla	r9, r9, r0, r3
 8021e52:	43c9      	mvns	r1, r1
 8021e54:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021e58:	fa5f fe81 	uxtb.w	lr, r1
 8021e5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021e60:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021e64:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021e68:	fb02 f20e 	mul.w	r2, r2, lr
 8021e6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021e70:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021e74:	ea4c 0c09 	orr.w	ip, ip, r9
 8021e78:	1c53      	adds	r3, r2, #1
 8021e7a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021e7e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021e82:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021e86:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021e8a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021e8e:	4a63      	ldr	r2, [pc, #396]	; (802201c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021e90:	fb00 f00e 	mul.w	r0, r0, lr
 8021e94:	b2db      	uxtb	r3, r3
 8021e96:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021e9a:	1c43      	adds	r3, r0, #1
 8021e9c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021ea0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021ea4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021ea8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021eac:	b2c9      	uxtb	r1, r1
 8021eae:	00db      	lsls	r3, r3, #3
 8021eb0:	fb01 f10e 	mul.w	r1, r1, lr
 8021eb4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021eb8:	4313      	orrs	r3, r2
 8021eba:	1c4a      	adds	r2, r1, #1
 8021ebc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021ec0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021ec4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021ec8:	ea4c 0c03 	orr.w	ip, ip, r3
 8021ecc:	f8a7 c000 	strh.w	ip, [r7]
 8021ed0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021ed2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021ed4:	441a      	add	r2, r3
 8021ed6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021ed8:	9225      	str	r2, [sp, #148]	; 0x94
 8021eda:	441d      	add	r5, r3
 8021edc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021ede:	3b01      	subs	r3, #1
 8021ee0:	3702      	adds	r7, #2
 8021ee2:	9317      	str	r3, [sp, #92]	; 0x5c
 8021ee4:	e699      	b.n	8021c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021ee6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021ee8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021eea:	441c      	add	r4, r3
 8021eec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021eee:	9425      	str	r4, [sp, #148]	; 0x94
 8021ef0:	441d      	add	r5, r3
 8021ef2:	9b07      	ldr	r3, [sp, #28]
 8021ef4:	3b01      	subs	r3, #1
 8021ef6:	9307      	str	r3, [sp, #28]
 8021ef8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021efa:	3302      	adds	r3, #2
 8021efc:	930a      	str	r3, [sp, #40]	; 0x28
 8021efe:	e66b      	b.n	8021bd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021f00:	d024      	beq.n	8021f4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021f02:	9b07      	ldr	r3, [sp, #28]
 8021f04:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021f06:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021f08:	3b01      	subs	r3, #1
 8021f0a:	fb00 4003 	mla	r0, r0, r3, r4
 8021f0e:	1400      	asrs	r0, r0, #16
 8021f10:	f53f ae80 	bmi.w	8021c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021f14:	3901      	subs	r1, #1
 8021f16:	4288      	cmp	r0, r1
 8021f18:	f6bf ae7c 	bge.w	8021c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021f1c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021f1e:	fb01 5303 	mla	r3, r1, r3, r5
 8021f22:	141b      	asrs	r3, r3, #16
 8021f24:	f53f ae76 	bmi.w	8021c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021f28:	3a01      	subs	r2, #1
 8021f2a:	4293      	cmp	r3, r2
 8021f2c:	f6bf ae72 	bge.w	8021c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021f30:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021f34:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8021f38:	f1bb 0f00 	cmp.w	fp, #0
 8021f3c:	dc70      	bgt.n	8022020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021f3e:	9b07      	ldr	r3, [sp, #28]
 8021f40:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021f44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021f46:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021f4a:	930a      	str	r3, [sp, #40]	; 0x28
 8021f4c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021f4e:	2b00      	cmp	r3, #0
 8021f50:	f340 81ae 	ble.w	80222b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021f54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021f58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021f5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021f60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021f66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021f6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021f6e:	eef0 6a62 	vmov.f32	s13, s5
 8021f72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021f76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021f7e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8021f82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021f86:	eef0 6a43 	vmov.f32	s13, s6
 8021f8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021f8e:	ee12 2a90 	vmov	r2, s5
 8021f92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021f96:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f9a:	ee13 2a10 	vmov	r2, s6
 8021f9e:	9327      	str	r3, [sp, #156]	; 0x9c
 8021fa0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fa2:	fb92 f3f3 	sdiv	r3, r2, r3
 8021fa6:	9328      	str	r3, [sp, #160]	; 0xa0
 8021fa8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021faa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021fac:	3b01      	subs	r3, #1
 8021fae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021fb2:	9316      	str	r3, [sp, #88]	; 0x58
 8021fb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fb6:	bf08      	it	eq
 8021fb8:	4613      	moveq	r3, r2
 8021fba:	ee16 5a90 	vmov	r5, s13
 8021fbe:	9307      	str	r3, [sp, #28]
 8021fc0:	eeb0 3a67 	vmov.f32	s6, s15
 8021fc4:	eef0 2a47 	vmov.f32	s5, s14
 8021fc8:	e5f8      	b.n	8021bbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021fca:	2800      	cmp	r0, #0
 8021fcc:	f43f ae6b 	beq.w	8021ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021fd0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021fd4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021fd8:	9108      	str	r1, [sp, #32]
 8021fda:	0e09      	lsrs	r1, r1, #24
 8021fdc:	9110      	str	r1, [sp, #64]	; 0x40
 8021fde:	e662      	b.n	8021ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021fe0:	f113 0801 	adds.w	r8, r3, #1
 8021fe4:	f53f af74 	bmi.w	8021ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021fe8:	4541      	cmp	r1, r8
 8021fea:	f6ff af71 	blt.w	8021ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021fee:	f11c 0801 	adds.w	r8, ip, #1
 8021ff2:	f53f af6d 	bmi.w	8021ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021ff6:	45c6      	cmp	lr, r8
 8021ff8:	f6ff af6a 	blt.w	8021ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021ffc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022000:	b209      	sxth	r1, r1
 8022002:	fa0f f38e 	sxth.w	r3, lr
 8022006:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802200a:	9301      	str	r3, [sp, #4]
 802200c:	9100      	str	r1, [sp, #0]
 802200e:	4633      	mov	r3, r6
 8022010:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022012:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022014:	4639      	mov	r1, r7
 8022016:	f7ff fc7a 	bl	802190e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802201a:	e759      	b.n	8021ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802201c:	fffff800 	.word	0xfffff800
 8022020:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022022:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022024:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022028:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802202a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802202e:	1427      	asrs	r7, r4, #16
 8022030:	142b      	asrs	r3, r5, #16
 8022032:	fb01 7303 	mla	r3, r1, r3, r7
 8022036:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022038:	18e7      	adds	r7, r4, r3
 802203a:	5ce3      	ldrb	r3, [r4, r3]
 802203c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022040:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022044:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022048:	2a00      	cmp	r2, #0
 802204a:	f000 8127 	beq.w	802229c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802204e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022052:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022056:	940d      	str	r4, [sp, #52]	; 0x34
 8022058:	0e24      	lsrs	r4, r4, #24
 802205a:	9414      	str	r4, [sp, #80]	; 0x50
 802205c:	b170      	cbz	r0, 802207c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802205e:	eb07 0e01 	add.w	lr, r7, r1
 8022062:	5c79      	ldrb	r1, [r7, r1]
 8022064:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022068:	9109      	str	r1, [sp, #36]	; 0x24
 802206a:	0e09      	lsrs	r1, r1, #24
 802206c:	9111      	str	r1, [sp, #68]	; 0x44
 802206e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022072:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022076:	910e      	str	r1, [sp, #56]	; 0x38
 8022078:	0e09      	lsrs	r1, r1, #24
 802207a:	9115      	str	r1, [sp, #84]	; 0x54
 802207c:	b292      	uxth	r2, r2
 802207e:	b280      	uxth	r0, r0
 8022080:	fb02 f800 	mul.w	r8, r2, r0
 8022084:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022088:	0112      	lsls	r2, r2, #4
 802208a:	eba2 0e08 	sub.w	lr, r2, r8
 802208e:	b280      	uxth	r0, r0
 8022090:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022094:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022096:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022098:	fa1f fe8e 	uxth.w	lr, lr
 802209c:	1a09      	subs	r1, r1, r0
 802209e:	b289      	uxth	r1, r1
 80220a0:	fb0e f202 	mul.w	r2, lr, r2
 80220a4:	fb01 220c 	mla	r2, r1, ip, r2
 80220a8:	fb00 2204 	mla	r2, r0, r4, r2
 80220ac:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80220ae:	fb08 2204 	mla	r2, r8, r4, r2
 80220b2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80220b6:	2a00      	cmp	r2, #0
 80220b8:	f000 80e5 	beq.w	8022286 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80220bc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80220c0:	d019      	beq.n	80220f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80220c2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80220c6:	fb0c fa0a 	mul.w	sl, ip, sl
 80220ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80220ce:	fb0c fc03 	mul.w	ip, ip, r3
 80220d2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80220d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80220da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80220de:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80220e2:	4453      	add	r3, sl
 80220e4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80220e8:	0a1b      	lsrs	r3, r3, #8
 80220ea:	0a3f      	lsrs	r7, r7, #8
 80220ec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80220f0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80220f4:	433b      	orrs	r3, r7
 80220f6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80220f8:	2cff      	cmp	r4, #255	; 0xff
 80220fa:	d020      	beq.n	802213e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80220fc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80220fe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022102:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022104:	4367      	muls	r7, r4
 8022106:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022108:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802210c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802210e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022112:	fb04 fa0a 	mul.w	sl, r4, sl
 8022116:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802211a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802211e:	44bc      	add	ip, r7
 8022120:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022124:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022128:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802212c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022130:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022134:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022138:	ea4c 040a 	orr.w	r4, ip, sl
 802213c:	940d      	str	r4, [sp, #52]	; 0x34
 802213e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022140:	2cff      	cmp	r4, #255	; 0xff
 8022142:	d020      	beq.n	8022186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8022144:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022146:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802214a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802214c:	4367      	muls	r7, r4
 802214e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022150:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022154:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022156:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802215a:	fb04 fa0a 	mul.w	sl, r4, sl
 802215e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022162:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022166:	44bc      	add	ip, r7
 8022168:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802216c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022170:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022174:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022178:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802217c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022180:	ea4c 040a 	orr.w	r4, ip, sl
 8022184:	9409      	str	r4, [sp, #36]	; 0x24
 8022186:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022188:	2cff      	cmp	r4, #255	; 0xff
 802218a:	d020      	beq.n	80221ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 802218c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802218e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022192:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022194:	4367      	muls	r7, r4
 8022196:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022198:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802219c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802219e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80221a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80221a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80221aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221ae:	44bc      	add	ip, r7
 80221b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80221b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80221b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80221c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80221c8:	ea4c 040a 	orr.w	r4, ip, sl
 80221cc:	940e      	str	r4, [sp, #56]	; 0x38
 80221ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80221d0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80221d4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80221d6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80221da:	fb0e f707 	mul.w	r7, lr, r7
 80221de:	fb01 770c 	mla	r7, r1, ip, r7
 80221e2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80221e6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80221e8:	fb00 770c 	mla	r7, r0, ip, r7
 80221ec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80221f0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80221f2:	fb08 770c 	mla	r7, r8, ip, r7
 80221f6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80221fa:	fb0e fe0c 	mul.w	lr, lr, ip
 80221fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022202:	fb01 e303 	mla	r3, r1, r3, lr
 8022206:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022208:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802220c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802220e:	fb00 330a 	mla	r3, r0, sl, r3
 8022212:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8022216:	fb08 3c0c 	mla	ip, r8, ip, r3
 802221a:	f8b9 3000 	ldrh.w	r3, [r9]
 802221e:	43d2      	mvns	r2, r2
 8022220:	1218      	asrs	r0, r3, #8
 8022222:	b2d2      	uxtb	r2, r2
 8022224:	10d9      	asrs	r1, r3, #3
 8022226:	0a3f      	lsrs	r7, r7, #8
 8022228:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802222c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022230:	00db      	lsls	r3, r3, #3
 8022232:	4350      	muls	r0, r2
 8022234:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022238:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802223c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022240:	b2db      	uxtb	r3, r3
 8022242:	ea47 070c 	orr.w	r7, r7, ip
 8022246:	4351      	muls	r1, r2
 8022248:	4353      	muls	r3, r2
 802224a:	1c42      	adds	r2, r0, #1
 802224c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022250:	0c3a      	lsrs	r2, r7, #16
 8022252:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022256:	4a18      	ldr	r2, [pc, #96]	; (80222b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8022258:	b2c0      	uxtb	r0, r0
 802225a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802225e:	1c4a      	adds	r2, r1, #1
 8022260:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022264:	0a3a      	lsrs	r2, r7, #8
 8022266:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802226a:	00c9      	lsls	r1, r1, #3
 802226c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022270:	4301      	orrs	r1, r0
 8022272:	1c58      	adds	r0, r3, #1
 8022274:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022278:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802227c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022280:	4308      	orrs	r0, r1
 8022282:	f8a9 0000 	strh.w	r0, [r9]
 8022286:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022288:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802228a:	441a      	add	r2, r3
 802228c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802228e:	9225      	str	r2, [sp, #148]	; 0x94
 8022290:	f109 0902 	add.w	r9, r9, #2
 8022294:	441d      	add	r5, r3
 8022296:	f10b 3bff 	add.w	fp, fp, #4294967295
 802229a:	e64d      	b.n	8021f38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 802229c:	2800      	cmp	r0, #0
 802229e:	f43f aeed 	beq.w	802207c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80222a2:	5c79      	ldrb	r1, [r7, r1]
 80222a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80222a8:	9109      	str	r1, [sp, #36]	; 0x24
 80222aa:	0e09      	lsrs	r1, r1, #24
 80222ac:	9111      	str	r1, [sp, #68]	; 0x44
 80222ae:	e6e5      	b.n	802207c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80222b0:	b01b      	add	sp, #108	; 0x6c
 80222b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80222b6:	bf00      	nop
 80222b8:	fffff800 	.word	0xfffff800

080222bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80222bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222c0:	b085      	sub	sp, #20
 80222c2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80222c6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80222ca:	9103      	str	r1, [sp, #12]
 80222cc:	fb00 7406 	mla	r4, r0, r6, r7
 80222d0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80222d4:	2800      	cmp	r0, #0
 80222d6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80222da:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80222de:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80222e2:	9501      	str	r5, [sp, #4]
 80222e4:	eb03 0904 	add.w	r9, r3, r4
 80222e8:	f2c0 8150 	blt.w	802258c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80222ec:	4583      	cmp	fp, r0
 80222ee:	f340 814d 	ble.w	802258c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80222f2:	2f00      	cmp	r7, #0
 80222f4:	f2c0 8146 	blt.w	8022584 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80222f8:	42be      	cmp	r6, r7
 80222fa:	f340 8143 	ble.w	8022584 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80222fe:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022302:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8022306:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802230a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802230e:	4355      	muls	r5, r2
 8022310:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022314:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022318:	fb0c f203 	mul.w	r2, ip, r3
 802231c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022320:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022324:	441d      	add	r5, r3
 8022326:	f102 0320 	add.w	r3, r2, #32
 802232a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802232e:	0a1b      	lsrs	r3, r3, #8
 8022330:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022334:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022338:	431c      	orrs	r4, r3
 802233a:	1c7b      	adds	r3, r7, #1
 802233c:	f100 812b 	bmi.w	8022596 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022340:	429e      	cmp	r6, r3
 8022342:	f340 8128 	ble.w	8022596 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022346:	2900      	cmp	r1, #0
 8022348:	f000 8128 	beq.w	802259c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802234c:	9a01      	ldr	r2, [sp, #4]
 802234e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022352:	8855      	ldrh	r5, [r2, #2]
 8022354:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022358:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802235c:	fb08 f802 	mul.w	r8, r8, r2
 8022360:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022364:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022368:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802236c:	435d      	muls	r5, r3
 802236e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022372:	44d0      	add	r8, sl
 8022374:	f105 0a20 	add.w	sl, r5, #32
 8022378:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802237c:	0a2d      	lsrs	r5, r5, #8
 802237e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022382:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022386:	432a      	orrs	r2, r5
 8022388:	3001      	adds	r0, #1
 802238a:	f100 810d 	bmi.w	80225a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802238e:	4583      	cmp	fp, r0
 8022390:	f340 810a 	ble.w	80225a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022394:	f1be 0f00 	cmp.w	lr, #0
 8022398:	f000 810b 	beq.w	80225b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802239c:	2f00      	cmp	r7, #0
 802239e:	f2c0 8100 	blt.w	80225a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80223a2:	42be      	cmp	r6, r7
 80223a4:	f340 80fd 	ble.w	80225a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80223a8:	9801      	ldr	r0, [sp, #4]
 80223aa:	f819 5006 	ldrb.w	r5, [r9, r6]
 80223ae:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80223b2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80223b6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80223ba:	fb0a fa00 	mul.w	sl, sl, r0
 80223be:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80223c2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80223c6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80223ca:	fb05 f808 	mul.w	r8, r5, r8
 80223ce:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80223d2:	4482      	add	sl, r0
 80223d4:	f108 0020 	add.w	r0, r8, #32
 80223d8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80223dc:	0a00      	lsrs	r0, r0, #8
 80223de:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80223e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223e6:	ea4b 0b00 	orr.w	fp, fp, r0
 80223ea:	3701      	adds	r7, #1
 80223ec:	f100 80e6 	bmi.w	80225bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80223f0:	42be      	cmp	r6, r7
 80223f2:	f340 80e3 	ble.w	80225bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80223f6:	2900      	cmp	r1, #0
 80223f8:	f000 80e3 	beq.w	80225c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80223fc:	3601      	adds	r6, #1
 80223fe:	9801      	ldr	r0, [sp, #4]
 8022400:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022404:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022408:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802240c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022410:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022414:	fb09 f906 	mul.w	r9, r9, r6
 8022418:	fb07 f800 	mul.w	r8, r7, r0
 802241c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022420:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022424:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022428:	44d1      	add	r9, sl
 802242a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802242e:	f108 0020 	add.w	r0, r8, #32
 8022432:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022436:	0a00      	lsrs	r0, r0, #8
 8022438:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802243c:	4330      	orrs	r0, r6
 802243e:	b28e      	uxth	r6, r1
 8022440:	fa1f f98e 	uxth.w	r9, lr
 8022444:	fb06 f809 	mul.w	r8, r6, r9
 8022448:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802244c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022450:	0136      	lsls	r6, r6, #4
 8022452:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022456:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802245a:	9601      	str	r6, [sp, #4]
 802245c:	ea4a 0404 	orr.w	r4, sl, r4
 8022460:	fa1f f689 	uxth.w	r6, r9
 8022464:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022468:	fb11 f90e 	smulbb	r9, r1, lr
 802246c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022470:	9602      	str	r6, [sp, #8]
 8022472:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022476:	4626      	mov	r6, r4
 8022478:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802247c:	f1ce 0410 	rsb	r4, lr, #16
 8022480:	1a64      	subs	r4, r4, r1
 8022482:	ea4a 0202 	orr.w	r2, sl, r2
 8022486:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802248a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802248e:	434a      	muls	r2, r1
 8022490:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022494:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022498:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802249c:	fb04 2406 	mla	r4, r4, r6, r2
 80224a0:	ea4a 0000 	orr.w	r0, sl, r0
 80224a4:	fb09 4200 	mla	r2, r9, r0, r4
 80224a8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80224ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80224b0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80224b4:	ea44 0b0b 	orr.w	fp, r4, fp
 80224b8:	9c01      	ldr	r4, [sp, #4]
 80224ba:	9e02      	ldr	r6, [sp, #8]
 80224bc:	9903      	ldr	r1, [sp, #12]
 80224be:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80224c2:	1ba4      	subs	r4, r4, r6
 80224c4:	9e01      	ldr	r6, [sp, #4]
 80224c6:	8808      	ldrh	r0, [r1, #0]
 80224c8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80224cc:	eba6 0608 	sub.w	r6, r6, r8
 80224d0:	b2b6      	uxth	r6, r6
 80224d2:	b2a4      	uxth	r4, r4
 80224d4:	4373      	muls	r3, r6
 80224d6:	fb0c 3304 	mla	r3, ip, r4, r3
 80224da:	9c02      	ldr	r4, [sp, #8]
 80224dc:	fb04 3505 	mla	r5, r4, r5, r3
 80224e0:	fb08 5707 	mla	r7, r8, r7, r5
 80224e4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80224e8:	b289      	uxth	r1, r1
 80224ea:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80224ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80224f2:	434f      	muls	r7, r1
 80224f4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80224f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80224fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022500:	1c7b      	adds	r3, r7, #1
 8022502:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022506:	ea42 0e0e 	orr.w	lr, r2, lr
 802250a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802250e:	fa1f f28e 	uxth.w	r2, lr
 8022512:	1203      	asrs	r3, r0, #8
 8022514:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8022518:	b2ff      	uxtb	r7, r7
 802251a:	1215      	asrs	r5, r2, #8
 802251c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022520:	fb13 f307 	smulbb	r3, r3, r7
 8022524:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022528:	fb05 3501 	mla	r5, r5, r1, r3
 802252c:	10c3      	asrs	r3, r0, #3
 802252e:	10d4      	asrs	r4, r2, #3
 8022530:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022534:	fb13 f307 	smulbb	r3, r3, r7
 8022538:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802253c:	fb04 3401 	mla	r4, r4, r1, r3
 8022540:	00c3      	lsls	r3, r0, #3
 8022542:	00d2      	lsls	r2, r2, #3
 8022544:	b2db      	uxtb	r3, r3
 8022546:	fb13 f307 	smulbb	r3, r3, r7
 802254a:	b2d2      	uxtb	r2, r2
 802254c:	fb02 3101 	mla	r1, r2, r1, r3
 8022550:	b2ad      	uxth	r5, r5
 8022552:	b289      	uxth	r1, r1
 8022554:	b2a4      	uxth	r4, r4
 8022556:	1c6b      	adds	r3, r5, #1
 8022558:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802255c:	1c62      	adds	r2, r4, #1
 802255e:	1c4b      	adds	r3, r1, #1
 8022560:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022564:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022568:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802256c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022570:	0964      	lsrs	r4, r4, #5
 8022572:	432b      	orrs	r3, r5
 8022574:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022578:	9a03      	ldr	r2, [sp, #12]
 802257a:	4323      	orrs	r3, r4
 802257c:	8013      	strh	r3, [r2, #0]
 802257e:	b005      	add	sp, #20
 8022580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022584:	f04f 0c00 	mov.w	ip, #0
 8022588:	4664      	mov	r4, ip
 802258a:	e6d6      	b.n	802233a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802258c:	2300      	movs	r3, #0
 802258e:	469c      	mov	ip, r3
 8022590:	461a      	mov	r2, r3
 8022592:	461c      	mov	r4, r3
 8022594:	e6f8      	b.n	8022388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022596:	2300      	movs	r3, #0
 8022598:	461a      	mov	r2, r3
 802259a:	e6f5      	b.n	8022388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802259c:	460b      	mov	r3, r1
 802259e:	460a      	mov	r2, r1
 80225a0:	e6f2      	b.n	8022388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80225a2:	2500      	movs	r5, #0
 80225a4:	46ab      	mov	fp, r5
 80225a6:	e720      	b.n	80223ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80225a8:	2700      	movs	r7, #0
 80225aa:	463d      	mov	r5, r7
 80225ac:	4638      	mov	r0, r7
 80225ae:	46bb      	mov	fp, r7
 80225b0:	e745      	b.n	802243e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80225b2:	4677      	mov	r7, lr
 80225b4:	4675      	mov	r5, lr
 80225b6:	4670      	mov	r0, lr
 80225b8:	46f3      	mov	fp, lr
 80225ba:	e740      	b.n	802243e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80225bc:	2700      	movs	r7, #0
 80225be:	4638      	mov	r0, r7
 80225c0:	e73d      	b.n	802243e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80225c2:	460f      	mov	r7, r1
 80225c4:	4608      	mov	r0, r1
 80225c6:	e73a      	b.n	802243e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080225c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80225c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80225cc:	b097      	sub	sp, #92	; 0x5c
 80225ce:	9214      	str	r2, [sp, #80]	; 0x50
 80225d0:	9308      	str	r3, [sp, #32]
 80225d2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80225d4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80225d8:	9312      	str	r3, [sp, #72]	; 0x48
 80225da:	9111      	str	r1, [sp, #68]	; 0x44
 80225dc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80225e0:	9015      	str	r0, [sp, #84]	; 0x54
 80225e2:	6850      	ldr	r0, [r2, #4]
 80225e4:	6812      	ldr	r2, [r2, #0]
 80225e6:	fb00 1303 	mla	r3, r0, r3, r1
 80225ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80225ee:	9309      	str	r3, [sp, #36]	; 0x24
 80225f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225f2:	681b      	ldr	r3, [r3, #0]
 80225f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80225f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225f8:	685b      	ldr	r3, [r3, #4]
 80225fa:	930c      	str	r3, [sp, #48]	; 0x30
 80225fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022600:	930a      	str	r3, [sp, #40]	; 0x28
 8022602:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022604:	2b00      	cmp	r3, #0
 8022606:	dc03      	bgt.n	8022610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022608:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802260a:	2b00      	cmp	r3, #0
 802260c:	f340 83cb 	ble.w	8022da6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022610:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022612:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022616:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802261a:	1e48      	subs	r0, r1, #1
 802261c:	1e55      	subs	r5, r2, #1
 802261e:	9b08      	ldr	r3, [sp, #32]
 8022620:	2b00      	cmp	r3, #0
 8022622:	f340 81a3 	ble.w	802296c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8022626:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8022628:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802262a:	1436      	asrs	r6, r6, #16
 802262c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022630:	d406      	bmi.n	8022640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022632:	4286      	cmp	r6, r0
 8022634:	da04      	bge.n	8022640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022636:	2b00      	cmp	r3, #0
 8022638:	db02      	blt.n	8022640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802263a:	42ab      	cmp	r3, r5
 802263c:	f2c0 8197 	blt.w	802296e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022640:	3601      	adds	r6, #1
 8022642:	f100 8184 	bmi.w	802294e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022646:	42b1      	cmp	r1, r6
 8022648:	f2c0 8181 	blt.w	802294e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802264c:	3301      	adds	r3, #1
 802264e:	f100 817e 	bmi.w	802294e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022652:	429a      	cmp	r2, r3
 8022654:	f2c0 817b 	blt.w	802294e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022658:	9b08      	ldr	r3, [sp, #32]
 802265a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802265c:	9313      	str	r3, [sp, #76]	; 0x4c
 802265e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022662:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022664:	2b00      	cmp	r3, #0
 8022666:	f340 81a4 	ble.w	80229b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802266a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802266c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802266e:	1418      	asrs	r0, r3, #16
 8022670:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022672:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022676:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022678:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802267c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802267e:	142d      	asrs	r5, r5, #16
 8022680:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022684:	f100 81f8 	bmi.w	8022a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022688:	f102 3eff 	add.w	lr, r2, #4294967295
 802268c:	4575      	cmp	r5, lr
 802268e:	f280 81f3 	bge.w	8022a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022692:	2800      	cmp	r0, #0
 8022694:	f2c0 81f0 	blt.w	8022a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022698:	f103 3eff 	add.w	lr, r3, #4294967295
 802269c:	4570      	cmp	r0, lr
 802269e:	f280 81eb 	bge.w	8022a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80226a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80226a4:	b212      	sxth	r2, r2
 80226a6:	fb00 5002 	mla	r0, r0, r2, r5
 80226aa:	fa1f fe81 	uxth.w	lr, r1
 80226ae:	eb03 0a00 	add.w	sl, r3, r0
 80226b2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80226b6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80226ba:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80226be:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80226c2:	b29b      	uxth	r3, r3
 80226c4:	f1bc 0f00 	cmp.w	ip, #0
 80226c8:	f000 81b9 	beq.w	8022a3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80226cc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80226d0:	940d      	str	r4, [sp, #52]	; 0x34
 80226d2:	eb0a 0b02 	add.w	fp, sl, r2
 80226d6:	fa1f fa8c 	uxth.w	sl, ip
 80226da:	fb0a fe0e 	mul.w	lr, sl, lr
 80226de:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80226e2:	fa1f fa8a 	uxth.w	sl, sl
 80226e6:	eba5 050e 	sub.w	r5, r5, lr
 80226ea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80226ee:	940e      	str	r4, [sp, #56]	; 0x38
 80226f0:	eba3 030a 	sub.w	r3, r3, sl
 80226f4:	b2ad      	uxth	r5, r5
 80226f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80226f8:	b29b      	uxth	r3, r3
 80226fa:	fb08 f505 	mul.w	r5, r8, r5
 80226fe:	fb09 5303 	mla	r3, r9, r3, r5
 8022702:	fb0a 3304 	mla	r3, sl, r4, r3
 8022706:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022708:	fb0e 3304 	mla	r3, lr, r4, r3
 802270c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022710:	2b00      	cmp	r3, #0
 8022712:	f000 810f 	beq.w	8022934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022716:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022718:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802271c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022720:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022724:	f000 8190 	beq.w	8022a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8022728:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802272c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022730:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022734:	fb09 f000 	mul.w	r0, r9, r0
 8022738:	fb0a fe0e 	mul.w	lr, sl, lr
 802273c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022740:	f100 0b20 	add.w	fp, r0, #32
 8022744:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022748:	44ce      	add	lr, r9
 802274a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802274e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022752:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022756:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802275a:	ea4e 0909 	orr.w	r9, lr, r9
 802275e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022762:	8868      	ldrh	r0, [r5, #2]
 8022764:	d019      	beq.n	802279a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022766:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802276a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802276e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022772:	fb08 f800 	mul.w	r8, r8, r0
 8022776:	fb0a fe0e 	mul.w	lr, sl, lr
 802277a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802277e:	f108 0b20 	add.w	fp, r8, #32
 8022782:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022786:	4486      	add	lr, r0
 8022788:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802278c:	0a00      	lsrs	r0, r0, #8
 802278e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022792:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022796:	ea4e 0000 	orr.w	r0, lr, r0
 802279a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802279e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80227a2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80227a6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80227aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80227ae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80227b2:	ea4e 0909 	orr.w	r9, lr, r9
 80227b6:	ea4a 0000 	orr.w	r0, sl, r0
 80227ba:	f1bc 0f00 	cmp.w	ip, #0
 80227be:	f000 8145 	beq.w	8022a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80227c2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80227c6:	3a01      	subs	r2, #1
 80227c8:	0052      	lsls	r2, r2, #1
 80227ca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80227cc:	3202      	adds	r2, #2
 80227ce:	2cff      	cmp	r4, #255	; 0xff
 80227d0:	eb05 0e02 	add.w	lr, r5, r2
 80227d4:	5aaa      	ldrh	r2, [r5, r2]
 80227d6:	d018      	beq.n	802280a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80227d8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80227dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227e0:	fb04 fa02 	mul.w	sl, r4, r2
 80227e4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80227e8:	fb08 f805 	mul.w	r8, r8, r5
 80227ec:	f10a 0520 	add.w	r5, sl, #32
 80227f0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80227f4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80227f8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80227fc:	4442      	add	r2, r8
 80227fe:	0a2d      	lsrs	r5, r5, #8
 8022800:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022804:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022808:	432a      	orrs	r2, r5
 802280a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802280c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022810:	2cff      	cmp	r4, #255	; 0xff
 8022812:	d01a      	beq.n	802284a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8022814:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022818:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802281c:	fb04 fa05 	mul.w	sl, r4, r5
 8022820:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022824:	fb08 f80e 	mul.w	r8, r8, lr
 8022828:	f10a 0e20 	add.w	lr, sl, #32
 802282c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022830:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022834:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022838:	4445      	add	r5, r8
 802283a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802283e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022842:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022846:	ea45 050e 	orr.w	r5, r5, lr
 802284a:	fb1c fe01 	smulbb	lr, ip, r1
 802284e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022852:	f1cc 0810 	rsb	r8, ip, #16
 8022856:	eba8 0801 	sub.w	r8, r8, r1
 802285a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802285e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022862:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022866:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802286a:	4341      	muls	r1, r0
 802286c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022870:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022874:	ea4a 0202 	orr.w	r2, sl, r2
 8022878:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802287c:	fb09 1108 	mla	r1, r9, r8, r1
 8022880:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022884:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022888:	fb0c 1102 	mla	r1, ip, r2, r1
 802288c:	ea4b 0505 	orr.w	r5, fp, r5
 8022890:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022894:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022898:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802289c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80228a0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80228a4:	ea42 0e0e 	orr.w	lr, r2, lr
 80228a8:	fa1f f28e 	uxth.w	r2, lr
 80228ac:	2bff      	cmp	r3, #255	; 0xff
 80228ae:	d103      	bne.n	80228b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80228b0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80228b2:	29ff      	cmp	r1, #255	; 0xff
 80228b4:	f000 80de 	beq.w	8022a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80228b8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80228ba:	8838      	ldrh	r0, [r7, #0]
 80228bc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80228be:	434b      	muls	r3, r1
 80228c0:	f103 0c01 	add.w	ip, r3, #1
 80228c4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80228c8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80228cc:	fa5f fc83 	uxtb.w	ip, r3
 80228d0:	1203      	asrs	r3, r0, #8
 80228d2:	1215      	asrs	r5, r2, #8
 80228d4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80228d8:	fb13 f30c 	smulbb	r3, r3, ip
 80228dc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80228e0:	fb05 3501 	mla	r5, r5, r1, r3
 80228e4:	10c3      	asrs	r3, r0, #3
 80228e6:	10d1      	asrs	r1, r2, #3
 80228e8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80228ec:	fb13 f30c 	smulbb	r3, r3, ip
 80228f0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80228f4:	fb01 3104 	mla	r1, r1, r4, r3
 80228f8:	00c3      	lsls	r3, r0, #3
 80228fa:	00d2      	lsls	r2, r2, #3
 80228fc:	b2db      	uxtb	r3, r3
 80228fe:	b2d2      	uxtb	r2, r2
 8022900:	fb13 f30c 	smulbb	r3, r3, ip
 8022904:	b2ad      	uxth	r5, r5
 8022906:	fb02 3304 	mla	r3, r2, r4, r3
 802290a:	b29a      	uxth	r2, r3
 802290c:	1c6b      	adds	r3, r5, #1
 802290e:	b289      	uxth	r1, r1
 8022910:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022914:	1c53      	adds	r3, r2, #1
 8022916:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802291a:	1c4a      	adds	r2, r1, #1
 802291c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022920:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022924:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022928:	0949      	lsrs	r1, r1, #5
 802292a:	432b      	orrs	r3, r5
 802292c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022930:	430b      	orrs	r3, r1
 8022932:	803b      	strh	r3, [r7, #0]
 8022934:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022936:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022938:	4413      	add	r3, r2
 802293a:	9321      	str	r3, [sp, #132]	; 0x84
 802293c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802293e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022940:	441a      	add	r2, r3
 8022942:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022944:	9222      	str	r2, [sp, #136]	; 0x88
 8022946:	3b01      	subs	r3, #1
 8022948:	3702      	adds	r7, #2
 802294a:	9313      	str	r3, [sp, #76]	; 0x4c
 802294c:	e689      	b.n	8022662 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802294e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022950:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8022952:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8022954:	4433      	add	r3, r6
 8022956:	9321      	str	r3, [sp, #132]	; 0x84
 8022958:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802295a:	441c      	add	r4, r3
 802295c:	9b08      	ldr	r3, [sp, #32]
 802295e:	9422      	str	r4, [sp, #136]	; 0x88
 8022960:	3b01      	subs	r3, #1
 8022962:	9308      	str	r3, [sp, #32]
 8022964:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022966:	3302      	adds	r3, #2
 8022968:	9309      	str	r3, [sp, #36]	; 0x24
 802296a:	e658      	b.n	802261e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802296c:	d028      	beq.n	80229c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802296e:	9b08      	ldr	r3, [sp, #32]
 8022970:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022972:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022974:	3b01      	subs	r3, #1
 8022976:	fb00 5003 	mla	r0, r0, r3, r5
 802297a:	1400      	asrs	r0, r0, #16
 802297c:	f53f ae6c 	bmi.w	8022658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022980:	3901      	subs	r1, #1
 8022982:	4288      	cmp	r0, r1
 8022984:	f6bf ae68 	bge.w	8022658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022988:	9924      	ldr	r1, [sp, #144]	; 0x90
 802298a:	9822      	ldr	r0, [sp, #136]	; 0x88
 802298c:	fb01 0303 	mla	r3, r1, r3, r0
 8022990:	141b      	asrs	r3, r3, #16
 8022992:	f53f ae61 	bmi.w	8022658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022996:	3a01      	subs	r2, #1
 8022998:	4293      	cmp	r3, r2
 802299a:	f6bf ae5d 	bge.w	8022658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802299e:	9b08      	ldr	r3, [sp, #32]
 80229a0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80229a4:	9313      	str	r3, [sp, #76]	; 0x4c
 80229a6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80229aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80229ac:	2b00      	cmp	r3, #0
 80229ae:	f300 8082 	bgt.w	8022ab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80229b2:	9b08      	ldr	r3, [sp, #32]
 80229b4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80229b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229ba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80229be:	9309      	str	r3, [sp, #36]	; 0x24
 80229c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80229c2:	2b00      	cmp	r3, #0
 80229c4:	f340 81ef 	ble.w	8022da6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80229c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80229cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80229d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80229d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80229d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80229da:	ee31 1a05 	vadd.f32	s2, s2, s10
 80229de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80229e2:	eef0 6a62 	vmov.f32	s13, s5
 80229e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80229ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80229ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 80229f2:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80229f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80229fa:	eef0 6a43 	vmov.f32	s13, s6
 80229fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022a02:	ee12 2a90 	vmov	r2, s5
 8022a06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022a0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a0e:	ee13 2a10 	vmov	r2, s6
 8022a12:	9323      	str	r3, [sp, #140]	; 0x8c
 8022a14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a16:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a1a:	9324      	str	r3, [sp, #144]	; 0x90
 8022a1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022a1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022a20:	3b01      	subs	r3, #1
 8022a22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a26:	9311      	str	r3, [sp, #68]	; 0x44
 8022a28:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a2a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022a2e:	bf08      	it	eq
 8022a30:	4613      	moveq	r3, r2
 8022a32:	9308      	str	r3, [sp, #32]
 8022a34:	eeb0 3a67 	vmov.f32	s6, s15
 8022a38:	eef0 2a47 	vmov.f32	s5, s14
 8022a3c:	e5e1      	b.n	8022602 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022a3e:	fb08 f505 	mul.w	r5, r8, r5
 8022a42:	fb09 5303 	mla	r3, r9, r3, r5
 8022a46:	e661      	b.n	802270c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8022a48:	4681      	mov	r9, r0
 8022a4a:	e688      	b.n	802275e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022a4c:	f1c1 0210 	rsb	r2, r1, #16
 8022a50:	4341      	muls	r1, r0
 8022a52:	fb09 1902 	mla	r9, r9, r2, r1
 8022a56:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022a5a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022a5e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022a62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a66:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022a6a:	ea42 0909 	orr.w	r9, r2, r9
 8022a6e:	fa1f f289 	uxth.w	r2, r9
 8022a72:	e71b      	b.n	80228ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022a74:	803a      	strh	r2, [r7, #0]
 8022a76:	e75d      	b.n	8022934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a78:	f115 0e01 	adds.w	lr, r5, #1
 8022a7c:	f53f af5a 	bmi.w	8022934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a80:	4572      	cmp	r2, lr
 8022a82:	f6ff af57 	blt.w	8022934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a86:	f110 0e01 	adds.w	lr, r0, #1
 8022a8a:	f53f af53 	bmi.w	8022934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a8e:	4573      	cmp	r3, lr
 8022a90:	f6ff af50 	blt.w	8022934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a94:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022a96:	9502      	str	r5, [sp, #8]
 8022a98:	b21b      	sxth	r3, r3
 8022a9a:	b212      	sxth	r2, r2
 8022a9c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022aa0:	9301      	str	r3, [sp, #4]
 8022aa2:	9200      	str	r2, [sp, #0]
 8022aa4:	e9cd c405 	strd	ip, r4, [sp, #20]
 8022aa8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022aac:	4639      	mov	r1, r7
 8022aae:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022ab0:	f7ff fc04 	bl	80222bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022ab4:	e73e      	b.n	8022934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022ab6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022ab8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022abc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022abe:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022ac2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022ac4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022ac8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022aca:	141f      	asrs	r7, r3, #16
 8022acc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022ace:	141b      	asrs	r3, r3, #16
 8022ad0:	fb01 3707 	mla	r7, r1, r7, r3
 8022ad4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022ad6:	fa1f fc82 	uxth.w	ip, r2
 8022ada:	eb03 0a07 	add.w	sl, r3, r7
 8022ade:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022ae2:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022ae6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022aea:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022aee:	b29b      	uxth	r3, r3
 8022af0:	2d00      	cmp	r5, #0
 8022af2:	f000 813d 	beq.w	8022d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022af6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022afa:	940f      	str	r4, [sp, #60]	; 0x3c
 8022afc:	eb0a 0b01 	add.w	fp, sl, r1
 8022b00:	fa1f fa85 	uxth.w	sl, r5
 8022b04:	fb0a fc0c 	mul.w	ip, sl, ip
 8022b08:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022b0c:	fa1f fa8a 	uxth.w	sl, sl
 8022b10:	eba0 000c 	sub.w	r0, r0, ip
 8022b14:	eba3 030a 	sub.w	r3, r3, sl
 8022b18:	b280      	uxth	r0, r0
 8022b1a:	fb08 f000 	mul.w	r0, r8, r0
 8022b1e:	b29b      	uxth	r3, r3
 8022b20:	fb09 0303 	mla	r3, r9, r3, r0
 8022b24:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022b26:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022b2a:	9410      	str	r4, [sp, #64]	; 0x40
 8022b2c:	fb0a 3300 	mla	r3, sl, r0, r3
 8022b30:	fb0c 3304 	mla	r3, ip, r4, r3
 8022b34:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022b38:	2b00      	cmp	r3, #0
 8022b3a:	f000 810b 	beq.w	8022d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022b3e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022b40:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022b42:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022b46:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022b4a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022b4e:	f000 8114 	beq.w	8022d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022b52:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022b56:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022b5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022b5e:	fb09 f707 	mul.w	r7, r9, r7
 8022b62:	fb0a fc0c 	mul.w	ip, sl, ip
 8022b66:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022b6a:	f107 0b20 	add.w	fp, r7, #32
 8022b6e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022b72:	44cc      	add	ip, r9
 8022b74:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022b78:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022b7c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022b80:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022b84:	ea4c 0909 	orr.w	r9, ip, r9
 8022b88:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022b8c:	8847      	ldrh	r7, [r0, #2]
 8022b8e:	d019      	beq.n	8022bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022b90:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022b94:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022b98:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022b9c:	fb08 f807 	mul.w	r8, r8, r7
 8022ba0:	fb0a fc0c 	mul.w	ip, sl, ip
 8022ba4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022ba8:	f108 0b20 	add.w	fp, r8, #32
 8022bac:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022bb0:	44bc      	add	ip, r7
 8022bb2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022bb6:	0a3f      	lsrs	r7, r7, #8
 8022bb8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022bbc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022bc0:	ea4c 0707 	orr.w	r7, ip, r7
 8022bc4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022bc8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022bcc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022bd0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022bd4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022bd8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022bdc:	ea4c 0909 	orr.w	r9, ip, r9
 8022be0:	ea4a 0707 	orr.w	r7, sl, r7
 8022be4:	2d00      	cmp	r5, #0
 8022be6:	f000 80ca 	beq.w	8022d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022bea:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022bee:	3901      	subs	r1, #1
 8022bf0:	0049      	lsls	r1, r1, #1
 8022bf2:	3102      	adds	r1, #2
 8022bf4:	eb00 0c01 	add.w	ip, r0, r1
 8022bf8:	5a41      	ldrh	r1, [r0, r1]
 8022bfa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022bfc:	28ff      	cmp	r0, #255	; 0xff
 8022bfe:	d019      	beq.n	8022c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022c00:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022c02:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022c06:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c0a:	fb04 fa01 	mul.w	sl, r4, r1
 8022c0e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022c12:	fb08 f800 	mul.w	r8, r8, r0
 8022c16:	f10a 0020 	add.w	r0, sl, #32
 8022c1a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022c1e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022c22:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022c26:	4441      	add	r1, r8
 8022c28:	0a00      	lsrs	r0, r0, #8
 8022c2a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022c2e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c32:	4301      	orrs	r1, r0
 8022c34:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022c36:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022c3a:	2cff      	cmp	r4, #255	; 0xff
 8022c3c:	d01a      	beq.n	8022c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022c3e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022c42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c46:	fb04 fa00 	mul.w	sl, r4, r0
 8022c4a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022c4e:	fb08 f80c 	mul.w	r8, r8, ip
 8022c52:	f10a 0c20 	add.w	ip, sl, #32
 8022c56:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022c5a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022c5e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022c62:	4440      	add	r0, r8
 8022c64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022c68:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022c6c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022c70:	ea40 000c 	orr.w	r0, r0, ip
 8022c74:	fb15 fc02 	smulbb	ip, r5, r2
 8022c78:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022c7c:	f1c5 0810 	rsb	r8, r5, #16
 8022c80:	eba8 0802 	sub.w	r8, r8, r2
 8022c84:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022c88:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022c8c:	437a      	muls	r2, r7
 8022c8e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022c92:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022c96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c9a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022c9e:	fb09 2208 	mla	r2, r9, r8, r2
 8022ca2:	ea4a 0101 	orr.w	r1, sl, r1
 8022ca6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022caa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022cae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022cb2:	fb05 2201 	mla	r2, r5, r1, r2
 8022cb6:	ea4b 0000 	orr.w	r0, fp, r0
 8022cba:	fb0c 2200 	mla	r2, ip, r0, r2
 8022cbe:	0d57      	lsrs	r7, r2, #21
 8022cc0:	0952      	lsrs	r2, r2, #5
 8022cc2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022cc6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022cca:	433a      	orrs	r2, r7
 8022ccc:	2bff      	cmp	r3, #255	; 0xff
 8022cce:	b292      	uxth	r2, r2
 8022cd0:	d102      	bne.n	8022cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022cd2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022cd4:	29ff      	cmp	r1, #255	; 0xff
 8022cd6:	d063      	beq.n	8022da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022cd8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022cda:	f8be 1000 	ldrh.w	r1, [lr]
 8022cde:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022ce0:	4343      	muls	r3, r0
 8022ce2:	1c58      	adds	r0, r3, #1
 8022ce4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022ce8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022cec:	1208      	asrs	r0, r1, #8
 8022cee:	b2db      	uxtb	r3, r3
 8022cf0:	1215      	asrs	r5, r2, #8
 8022cf2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022cf6:	fb10 f003 	smulbb	r0, r0, r3
 8022cfa:	10cf      	asrs	r7, r1, #3
 8022cfc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022d00:	00c9      	lsls	r1, r1, #3
 8022d02:	fb05 0504 	mla	r5, r5, r4, r0
 8022d06:	b2c9      	uxtb	r1, r1
 8022d08:	10d0      	asrs	r0, r2, #3
 8022d0a:	00d2      	lsls	r2, r2, #3
 8022d0c:	fb11 f103 	smulbb	r1, r1, r3
 8022d10:	b2d2      	uxtb	r2, r2
 8022d12:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022d16:	fb02 1204 	mla	r2, r2, r4, r1
 8022d1a:	fb17 f703 	smulbb	r7, r7, r3
 8022d1e:	b2ad      	uxth	r5, r5
 8022d20:	b292      	uxth	r2, r2
 8022d22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022d26:	fb00 7004 	mla	r0, r0, r4, r7
 8022d2a:	1c6b      	adds	r3, r5, #1
 8022d2c:	1c57      	adds	r7, r2, #1
 8022d2e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022d32:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022d36:	b280      	uxth	r0, r0
 8022d38:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022d3c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022d40:	433d      	orrs	r5, r7
 8022d42:	1c47      	adds	r7, r0, #1
 8022d44:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022d48:	097f      	lsrs	r7, r7, #5
 8022d4a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d4e:	433d      	orrs	r5, r7
 8022d50:	f8ae 5000 	strh.w	r5, [lr]
 8022d54:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022d56:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022d58:	4413      	add	r3, r2
 8022d5a:	9321      	str	r3, [sp, #132]	; 0x84
 8022d5c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022d5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d60:	441a      	add	r2, r3
 8022d62:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022d64:	9222      	str	r2, [sp, #136]	; 0x88
 8022d66:	3b01      	subs	r3, #1
 8022d68:	f10e 0e02 	add.w	lr, lr, #2
 8022d6c:	9313      	str	r3, [sp, #76]	; 0x4c
 8022d6e:	e61c      	b.n	80229aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022d70:	fb08 f000 	mul.w	r0, r8, r0
 8022d74:	fb09 0303 	mla	r3, r9, r3, r0
 8022d78:	e6dc      	b.n	8022b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022d7a:	46b9      	mov	r9, r7
 8022d7c:	e704      	b.n	8022b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022d7e:	f1c2 0110 	rsb	r1, r2, #16
 8022d82:	437a      	muls	r2, r7
 8022d84:	fb09 2901 	mla	r9, r9, r1, r2
 8022d88:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022d8c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022d90:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022d94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d98:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d9c:	4302      	orrs	r2, r0
 8022d9e:	e795      	b.n	8022ccc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022da0:	f8ae 2000 	strh.w	r2, [lr]
 8022da4:	e7d6      	b.n	8022d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022da6:	b017      	add	sp, #92	; 0x5c
 8022da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022dac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022db0:	b085      	sub	sp, #20
 8022db2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022db6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022dba:	9103      	str	r1, [sp, #12]
 8022dbc:	fb00 7406 	mla	r4, r0, r6, r7
 8022dc0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022dc4:	2800      	cmp	r0, #0
 8022dc6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022dca:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022dce:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022dd2:	9501      	str	r5, [sp, #4]
 8022dd4:	eb02 0904 	add.w	r9, r2, r4
 8022dd8:	f2c0 8141 	blt.w	802305e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022ddc:	4583      	cmp	fp, r0
 8022dde:	f340 813e 	ble.w	802305e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022de2:	2f00      	cmp	r7, #0
 8022de4:	f2c0 8137 	blt.w	8023056 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022de8:	42be      	cmp	r6, r7
 8022dea:	f340 8134 	ble.w	8023056 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022dee:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022df2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022df6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022dfa:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022dfe:	4355      	muls	r5, r2
 8022e00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e04:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022e08:	fb0c f203 	mul.w	r2, ip, r3
 8022e0c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022e10:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022e14:	441d      	add	r5, r3
 8022e16:	f102 0320 	add.w	r3, r2, #32
 8022e1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022e1e:	0a1b      	lsrs	r3, r3, #8
 8022e20:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022e24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e28:	431c      	orrs	r4, r3
 8022e2a:	1c7b      	adds	r3, r7, #1
 8022e2c:	f100 811c 	bmi.w	8023068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022e30:	429e      	cmp	r6, r3
 8022e32:	f340 8119 	ble.w	8023068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022e36:	2900      	cmp	r1, #0
 8022e38:	f000 8119 	beq.w	802306e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022e3c:	9a01      	ldr	r2, [sp, #4]
 8022e3e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022e42:	8855      	ldrh	r5, [r2, #2]
 8022e44:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022e48:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022e4c:	fb08 f802 	mul.w	r8, r8, r2
 8022e50:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022e54:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022e58:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022e5c:	435d      	muls	r5, r3
 8022e5e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022e62:	44d0      	add	r8, sl
 8022e64:	f105 0a20 	add.w	sl, r5, #32
 8022e68:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022e6c:	0a2d      	lsrs	r5, r5, #8
 8022e6e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022e72:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022e76:	432a      	orrs	r2, r5
 8022e78:	3001      	adds	r0, #1
 8022e7a:	f100 80fe 	bmi.w	802307a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022e7e:	4583      	cmp	fp, r0
 8022e80:	f340 80fb 	ble.w	802307a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022e84:	f1be 0f00 	cmp.w	lr, #0
 8022e88:	f000 80fc 	beq.w	8023084 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022e8c:	2f00      	cmp	r7, #0
 8022e8e:	f2c0 80f1 	blt.w	8023074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022e92:	42be      	cmp	r6, r7
 8022e94:	f340 80ee 	ble.w	8023074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022e98:	9801      	ldr	r0, [sp, #4]
 8022e9a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022e9e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022ea2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022ea6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022eaa:	fb0a fa00 	mul.w	sl, sl, r0
 8022eae:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022eb2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022eb6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022eba:	fb05 f808 	mul.w	r8, r5, r8
 8022ebe:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022ec2:	4482      	add	sl, r0
 8022ec4:	f108 0020 	add.w	r0, r8, #32
 8022ec8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022ecc:	0a00      	lsrs	r0, r0, #8
 8022ece:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022ed2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022ed6:	ea4b 0b00 	orr.w	fp, fp, r0
 8022eda:	3701      	adds	r7, #1
 8022edc:	f100 80d7 	bmi.w	802308e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022ee0:	42be      	cmp	r6, r7
 8022ee2:	f340 80d4 	ble.w	802308e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022ee6:	2900      	cmp	r1, #0
 8022ee8:	f000 80d4 	beq.w	8023094 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022eec:	3601      	adds	r6, #1
 8022eee:	9801      	ldr	r0, [sp, #4]
 8022ef0:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022ef4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022ef8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022efc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022f00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f04:	fb09 f906 	mul.w	r9, r9, r6
 8022f08:	fb07 f800 	mul.w	r8, r7, r0
 8022f0c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022f10:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022f14:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022f18:	44d1      	add	r9, sl
 8022f1a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022f1e:	f108 0020 	add.w	r0, r8, #32
 8022f22:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022f26:	0a00      	lsrs	r0, r0, #8
 8022f28:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f2c:	4330      	orrs	r0, r6
 8022f2e:	b28e      	uxth	r6, r1
 8022f30:	fa1f f98e 	uxth.w	r9, lr
 8022f34:	fb06 f809 	mul.w	r8, r6, r9
 8022f38:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022f3c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022f40:	0136      	lsls	r6, r6, #4
 8022f42:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f46:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022f4a:	9601      	str	r6, [sp, #4]
 8022f4c:	ea4a 0404 	orr.w	r4, sl, r4
 8022f50:	fa1f f689 	uxth.w	r6, r9
 8022f54:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022f58:	fb11 f90e 	smulbb	r9, r1, lr
 8022f5c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022f60:	9602      	str	r6, [sp, #8]
 8022f62:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f66:	4626      	mov	r6, r4
 8022f68:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f6c:	f1ce 0410 	rsb	r4, lr, #16
 8022f70:	1a64      	subs	r4, r4, r1
 8022f72:	ea4a 0202 	orr.w	r2, sl, r2
 8022f76:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022f7a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022f7e:	434a      	muls	r2, r1
 8022f80:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022f84:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f88:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f8c:	fb04 2406 	mla	r4, r4, r6, r2
 8022f90:	ea4a 0000 	orr.w	r0, sl, r0
 8022f94:	fb09 4200 	mla	r2, r9, r0, r4
 8022f98:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022f9c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022fa0:	9801      	ldr	r0, [sp, #4]
 8022fa2:	9903      	ldr	r1, [sp, #12]
 8022fa4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022fa8:	ea44 0b0b 	orr.w	fp, r4, fp
 8022fac:	9c02      	ldr	r4, [sp, #8]
 8022fae:	8809      	ldrh	r1, [r1, #0]
 8022fb0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022fb4:	1b00      	subs	r0, r0, r4
 8022fb6:	9c01      	ldr	r4, [sp, #4]
 8022fb8:	eba4 0608 	sub.w	r6, r4, r8
 8022fbc:	b2b6      	uxth	r6, r6
 8022fbe:	b280      	uxth	r0, r0
 8022fc0:	4373      	muls	r3, r6
 8022fc2:	fb0c 3300 	mla	r3, ip, r0, r3
 8022fc6:	9802      	ldr	r0, [sp, #8]
 8022fc8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022fcc:	fb00 3505 	mla	r5, r0, r5, r3
 8022fd0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022fd4:	fb08 5707 	mla	r7, r8, r7, r5
 8022fd8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022fdc:	120b      	asrs	r3, r1, #8
 8022fde:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022fe2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022fe6:	b2ff      	uxtb	r7, r7
 8022fe8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022fec:	10c8      	asrs	r0, r1, #3
 8022fee:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022ff2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022ff6:	00c9      	lsls	r1, r1, #3
 8022ff8:	437b      	muls	r3, r7
 8022ffa:	ea42 0e0e 	orr.w	lr, r2, lr
 8022ffe:	b2c9      	uxtb	r1, r1
 8023000:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023004:	fa1f f28e 	uxth.w	r2, lr
 8023008:	4378      	muls	r0, r7
 802300a:	434f      	muls	r7, r1
 802300c:	1c59      	adds	r1, r3, #1
 802300e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023012:	1213      	asrs	r3, r2, #8
 8023014:	f023 0307 	bic.w	r3, r3, #7
 8023018:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802301c:	1c41      	adds	r1, r0, #1
 802301e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023022:	10d1      	asrs	r1, r2, #3
 8023024:	f021 0103 	bic.w	r1, r1, #3
 8023028:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802302c:	021b      	lsls	r3, r3, #8
 802302e:	00c9      	lsls	r1, r1, #3
 8023030:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023034:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023038:	430b      	orrs	r3, r1
 802303a:	1c79      	adds	r1, r7, #1
 802303c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8023040:	00d2      	lsls	r2, r2, #3
 8023042:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023046:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802304a:	431a      	orrs	r2, r3
 802304c:	9b03      	ldr	r3, [sp, #12]
 802304e:	801a      	strh	r2, [r3, #0]
 8023050:	b005      	add	sp, #20
 8023052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023056:	f04f 0c00 	mov.w	ip, #0
 802305a:	4664      	mov	r4, ip
 802305c:	e6e5      	b.n	8022e2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802305e:	2300      	movs	r3, #0
 8023060:	469c      	mov	ip, r3
 8023062:	461a      	mov	r2, r3
 8023064:	461c      	mov	r4, r3
 8023066:	e707      	b.n	8022e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023068:	2300      	movs	r3, #0
 802306a:	461a      	mov	r2, r3
 802306c:	e704      	b.n	8022e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802306e:	460b      	mov	r3, r1
 8023070:	460a      	mov	r2, r1
 8023072:	e701      	b.n	8022e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023074:	2500      	movs	r5, #0
 8023076:	46ab      	mov	fp, r5
 8023078:	e72f      	b.n	8022eda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802307a:	2700      	movs	r7, #0
 802307c:	463d      	mov	r5, r7
 802307e:	4638      	mov	r0, r7
 8023080:	46bb      	mov	fp, r7
 8023082:	e754      	b.n	8022f2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023084:	4677      	mov	r7, lr
 8023086:	4675      	mov	r5, lr
 8023088:	4670      	mov	r0, lr
 802308a:	46f3      	mov	fp, lr
 802308c:	e74f      	b.n	8022f2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802308e:	2700      	movs	r7, #0
 8023090:	4638      	mov	r0, r7
 8023092:	e74c      	b.n	8022f2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023094:	460f      	mov	r7, r1
 8023096:	4608      	mov	r0, r1
 8023098:	e749      	b.n	8022f2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0802309c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802309c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230a0:	b093      	sub	sp, #76	; 0x4c
 80230a2:	9210      	str	r2, [sp, #64]	; 0x40
 80230a4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80230a6:	910e      	str	r1, [sp, #56]	; 0x38
 80230a8:	9306      	str	r3, [sp, #24]
 80230aa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80230ae:	9011      	str	r0, [sp, #68]	; 0x44
 80230b0:	6850      	ldr	r0, [r2, #4]
 80230b2:	6812      	ldr	r2, [r2, #0]
 80230b4:	fb00 1303 	mla	r3, r0, r3, r1
 80230b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80230bc:	9307      	str	r3, [sp, #28]
 80230be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230c0:	681b      	ldr	r3, [r3, #0]
 80230c2:	9308      	str	r3, [sp, #32]
 80230c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230c6:	685b      	ldr	r3, [r3, #4]
 80230c8:	9309      	str	r3, [sp, #36]	; 0x24
 80230ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80230cc:	2b00      	cmp	r3, #0
 80230ce:	dc03      	bgt.n	80230d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80230d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80230d2:	2b00      	cmp	r3, #0
 80230d4:	f340 83b4 	ble.w	8023840 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80230d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80230de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80230e2:	1e48      	subs	r0, r1, #1
 80230e4:	1e55      	subs	r5, r2, #1
 80230e6:	9b06      	ldr	r3, [sp, #24]
 80230e8:	2b00      	cmp	r3, #0
 80230ea:	f340 8163 	ble.w	80233b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80230ee:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80230f0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80230f2:	1436      	asrs	r6, r6, #16
 80230f4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80230f8:	d406      	bmi.n	8023108 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80230fa:	4286      	cmp	r6, r0
 80230fc:	da04      	bge.n	8023108 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80230fe:	2b00      	cmp	r3, #0
 8023100:	db02      	blt.n	8023108 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023102:	42ab      	cmp	r3, r5
 8023104:	f2c0 8157 	blt.w	80233b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8023108:	3601      	adds	r6, #1
 802310a:	f100 8144 	bmi.w	8023396 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802310e:	42b1      	cmp	r1, r6
 8023110:	f2c0 8141 	blt.w	8023396 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023114:	3301      	adds	r3, #1
 8023116:	f100 813e 	bmi.w	8023396 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802311a:	429a      	cmp	r2, r3
 802311c:	f2c0 813b 	blt.w	8023396 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023120:	9b06      	ldr	r3, [sp, #24]
 8023122:	9f07      	ldr	r7, [sp, #28]
 8023124:	930f      	str	r3, [sp, #60]	; 0x3c
 8023126:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802312a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802312c:	2b00      	cmp	r3, #0
 802312e:	f340 8164 	ble.w	80233fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023132:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023134:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023136:	1418      	asrs	r0, r3, #16
 8023138:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802313a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802313e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023140:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023144:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023146:	142d      	asrs	r5, r5, #16
 8023148:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802314c:	f100 81ee 	bmi.w	802352c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023150:	f102 3eff 	add.w	lr, r2, #4294967295
 8023154:	4575      	cmp	r5, lr
 8023156:	f280 81e9 	bge.w	802352c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802315a:	2800      	cmp	r0, #0
 802315c:	f2c0 81e6 	blt.w	802352c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023160:	f103 3eff 	add.w	lr, r3, #4294967295
 8023164:	4570      	cmp	r0, lr
 8023166:	f280 81e1 	bge.w	802352c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802316a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802316c:	b212      	sxth	r2, r2
 802316e:	fb00 5002 	mla	r0, r0, r2, r5
 8023172:	fa1f fe81 	uxth.w	lr, r1
 8023176:	eb03 0a00 	add.w	sl, r3, r0
 802317a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802317e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023182:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023186:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802318a:	b29b      	uxth	r3, r3
 802318c:	f1bc 0f00 	cmp.w	ip, #0
 8023190:	f000 8179 	beq.w	8023486 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023194:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023198:	940a      	str	r4, [sp, #40]	; 0x28
 802319a:	eb0a 0b02 	add.w	fp, sl, r2
 802319e:	fa1f fa8c 	uxth.w	sl, ip
 80231a2:	fb0a fe0e 	mul.w	lr, sl, lr
 80231a6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80231aa:	fa1f fa8a 	uxth.w	sl, sl
 80231ae:	eba5 050e 	sub.w	r5, r5, lr
 80231b2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80231b6:	940b      	str	r4, [sp, #44]	; 0x2c
 80231b8:	eba3 030a 	sub.w	r3, r3, sl
 80231bc:	b2ad      	uxth	r5, r5
 80231be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80231c0:	b29b      	uxth	r3, r3
 80231c2:	fb08 f505 	mul.w	r5, r8, r5
 80231c6:	fb09 5303 	mla	r3, r9, r3, r5
 80231ca:	fb0a 3304 	mla	r3, sl, r4, r3
 80231ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80231d0:	fb0e 3304 	mla	r3, lr, r4, r3
 80231d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80231d8:	2b00      	cmp	r3, #0
 80231da:	f000 80cf 	beq.w	802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80231de:	9c08      	ldr	r4, [sp, #32]
 80231e0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80231e4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80231e8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80231ec:	f000 8150 	beq.w	8023490 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80231f0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80231f4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80231f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80231fc:	fb09 f000 	mul.w	r0, r9, r0
 8023200:	fb0a fe0e 	mul.w	lr, sl, lr
 8023204:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023208:	f100 0b20 	add.w	fp, r0, #32
 802320c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023210:	44ce      	add	lr, r9
 8023212:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8023216:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802321a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802321e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023222:	ea4e 0909 	orr.w	r9, lr, r9
 8023226:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802322a:	8868      	ldrh	r0, [r5, #2]
 802322c:	d019      	beq.n	8023262 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802322e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023232:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023236:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802323a:	fb08 f800 	mul.w	r8, r8, r0
 802323e:	fb0a fe0e 	mul.w	lr, sl, lr
 8023242:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8023246:	f108 0b20 	add.w	fp, r8, #32
 802324a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802324e:	4486      	add	lr, r0
 8023250:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023254:	0a00      	lsrs	r0, r0, #8
 8023256:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802325a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802325e:	ea4e 0000 	orr.w	r0, lr, r0
 8023262:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023266:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802326a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802326e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023272:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023276:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802327a:	ea4e 0909 	orr.w	r9, lr, r9
 802327e:	ea4a 0000 	orr.w	r0, sl, r0
 8023282:	f1bc 0f00 	cmp.w	ip, #0
 8023286:	f000 8105 	beq.w	8023494 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802328a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802328e:	3a01      	subs	r2, #1
 8023290:	0052      	lsls	r2, r2, #1
 8023292:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023294:	3202      	adds	r2, #2
 8023296:	2cff      	cmp	r4, #255	; 0xff
 8023298:	eb05 0e02 	add.w	lr, r5, r2
 802329c:	5aaa      	ldrh	r2, [r5, r2]
 802329e:	d018      	beq.n	80232d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80232a0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80232a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80232a8:	fb04 fa02 	mul.w	sl, r4, r2
 80232ac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80232b0:	fb08 f805 	mul.w	r8, r8, r5
 80232b4:	f10a 0520 	add.w	r5, sl, #32
 80232b8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80232bc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80232c0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80232c4:	4442      	add	r2, r8
 80232c6:	0a2d      	lsrs	r5, r5, #8
 80232c8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80232cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80232d0:	432a      	orrs	r2, r5
 80232d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80232d4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80232d8:	2cff      	cmp	r4, #255	; 0xff
 80232da:	d01a      	beq.n	8023312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80232dc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80232e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80232e4:	fb04 fa05 	mul.w	sl, r4, r5
 80232e8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80232ec:	fb08 f80e 	mul.w	r8, r8, lr
 80232f0:	f10a 0e20 	add.w	lr, sl, #32
 80232f4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80232f8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80232fc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023300:	4445      	add	r5, r8
 8023302:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023306:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802330a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802330e:	ea45 050e 	orr.w	r5, r5, lr
 8023312:	fb1c fe01 	smulbb	lr, ip, r1
 8023316:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802331a:	f1cc 0810 	rsb	r8, ip, #16
 802331e:	eba8 0801 	sub.w	r8, r8, r1
 8023322:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023326:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802332a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802332e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023332:	4341      	muls	r1, r0
 8023334:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023338:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802333c:	ea4a 0202 	orr.w	r2, sl, r2
 8023340:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023344:	fb09 1108 	mla	r1, r9, r8, r1
 8023348:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802334c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023350:	fb0c 1102 	mla	r1, ip, r2, r1
 8023354:	ea4b 0505 	orr.w	r5, fp, r5
 8023358:	fb0e 1e05 	mla	lr, lr, r5, r1
 802335c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023360:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023364:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023368:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802336c:	ea42 0e0e 	orr.w	lr, r2, lr
 8023370:	fa1f f28e 	uxth.w	r2, lr
 8023374:	2bff      	cmp	r3, #255	; 0xff
 8023376:	f040 80a1 	bne.w	80234bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802337a:	803a      	strh	r2, [r7, #0]
 802337c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802337e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023380:	4413      	add	r3, r2
 8023382:	931d      	str	r3, [sp, #116]	; 0x74
 8023384:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023386:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023388:	441a      	add	r2, r3
 802338a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802338c:	921e      	str	r2, [sp, #120]	; 0x78
 802338e:	3b01      	subs	r3, #1
 8023390:	3702      	adds	r7, #2
 8023392:	930f      	str	r3, [sp, #60]	; 0x3c
 8023394:	e6c9      	b.n	802312a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023396:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023398:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802339a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802339c:	4433      	add	r3, r6
 802339e:	931d      	str	r3, [sp, #116]	; 0x74
 80233a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80233a2:	441c      	add	r4, r3
 80233a4:	9b06      	ldr	r3, [sp, #24]
 80233a6:	941e      	str	r4, [sp, #120]	; 0x78
 80233a8:	3b01      	subs	r3, #1
 80233aa:	9306      	str	r3, [sp, #24]
 80233ac:	9b07      	ldr	r3, [sp, #28]
 80233ae:	3302      	adds	r3, #2
 80233b0:	9307      	str	r3, [sp, #28]
 80233b2:	e698      	b.n	80230e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80233b4:	d028      	beq.n	8023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80233b6:	9b06      	ldr	r3, [sp, #24]
 80233b8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80233ba:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80233bc:	3b01      	subs	r3, #1
 80233be:	fb00 5003 	mla	r0, r0, r3, r5
 80233c2:	1400      	asrs	r0, r0, #16
 80233c4:	f53f aeac 	bmi.w	8023120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80233c8:	3901      	subs	r1, #1
 80233ca:	4288      	cmp	r0, r1
 80233cc:	f6bf aea8 	bge.w	8023120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80233d0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80233d2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80233d4:	fb01 0303 	mla	r3, r1, r3, r0
 80233d8:	141b      	asrs	r3, r3, #16
 80233da:	f53f aea1 	bmi.w	8023120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80233de:	3a01      	subs	r2, #1
 80233e0:	4293      	cmp	r3, r2
 80233e2:	f6bf ae9d 	bge.w	8023120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80233e6:	9b06      	ldr	r3, [sp, #24]
 80233e8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80233ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80233ee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80233f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80233f4:	2b00      	cmp	r3, #0
 80233f6:	f300 80b6 	bgt.w	8023566 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80233fa:	9b06      	ldr	r3, [sp, #24]
 80233fc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023400:	9b07      	ldr	r3, [sp, #28]
 8023402:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023406:	9307      	str	r3, [sp, #28]
 8023408:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802340a:	2b00      	cmp	r3, #0
 802340c:	f340 8218 	ble.w	8023840 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023410:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023414:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023418:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802341c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802341e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023422:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023426:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802342a:	eef0 6a62 	vmov.f32	s13, s5
 802342e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023432:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023436:	ee77 2a62 	vsub.f32	s5, s14, s5
 802343a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802343e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023442:	eef0 6a43 	vmov.f32	s13, s6
 8023446:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802344a:	ee12 2a90 	vmov	r2, s5
 802344e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023452:	fb92 f3f3 	sdiv	r3, r2, r3
 8023456:	ee13 2a10 	vmov	r2, s6
 802345a:	931f      	str	r3, [sp, #124]	; 0x7c
 802345c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802345e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023462:	9320      	str	r3, [sp, #128]	; 0x80
 8023464:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023466:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023468:	3b01      	subs	r3, #1
 802346a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802346e:	930e      	str	r3, [sp, #56]	; 0x38
 8023470:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023472:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8023476:	bf08      	it	eq
 8023478:	4613      	moveq	r3, r2
 802347a:	9306      	str	r3, [sp, #24]
 802347c:	eeb0 3a67 	vmov.f32	s6, s15
 8023480:	eef0 2a47 	vmov.f32	s5, s14
 8023484:	e621      	b.n	80230ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8023486:	fb08 f505 	mul.w	r5, r8, r5
 802348a:	fb09 5303 	mla	r3, r9, r3, r5
 802348e:	e6a1      	b.n	80231d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023490:	4681      	mov	r9, r0
 8023492:	e6c8      	b.n	8023226 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023494:	f1c1 0210 	rsb	r2, r1, #16
 8023498:	4341      	muls	r1, r0
 802349a:	fb09 1902 	mla	r9, r9, r2, r1
 802349e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80234a2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80234a6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80234aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80234ae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80234b2:	ea42 0909 	orr.w	r9, r2, r9
 80234b6:	fa1f f289 	uxth.w	r2, r9
 80234ba:	e75b      	b.n	8023374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80234bc:	f8b7 c000 	ldrh.w	ip, [r7]
 80234c0:	43db      	mvns	r3, r3
 80234c2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80234c6:	fa5f fe83 	uxtb.w	lr, r3
 80234ca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80234ce:	fb00 f00e 	mul.w	r0, r0, lr
 80234d2:	1c41      	adds	r1, r0, #1
 80234d4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80234d8:	1211      	asrs	r1, r2, #8
 80234da:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80234de:	f021 0107 	bic.w	r1, r1, #7
 80234e2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80234e6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80234ea:	48d7      	ldr	r0, [pc, #860]	; (8023848 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80234ec:	fb05 f50e 	mul.w	r5, r5, lr
 80234f0:	b2c9      	uxtb	r1, r1
 80234f2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80234f6:	1c69      	adds	r1, r5, #1
 80234f8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80234fc:	10d1      	asrs	r1, r2, #3
 80234fe:	f021 0103 	bic.w	r1, r1, #3
 8023502:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8023506:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802350a:	b2db      	uxtb	r3, r3
 802350c:	00c9      	lsls	r1, r1, #3
 802350e:	fb03 f30e 	mul.w	r3, r3, lr
 8023512:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023516:	4301      	orrs	r1, r0
 8023518:	1c58      	adds	r0, r3, #1
 802351a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802351e:	00d2      	lsls	r2, r2, #3
 8023520:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023524:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023528:	430a      	orrs	r2, r1
 802352a:	e726      	b.n	802337a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802352c:	f115 0e01 	adds.w	lr, r5, #1
 8023530:	f53f af24 	bmi.w	802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023534:	4572      	cmp	r2, lr
 8023536:	f6ff af21 	blt.w	802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802353a:	f110 0e01 	adds.w	lr, r0, #1
 802353e:	f53f af1d 	bmi.w	802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023542:	4573      	cmp	r3, lr
 8023544:	f6ff af1a 	blt.w	802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023548:	b21b      	sxth	r3, r3
 802354a:	b212      	sxth	r2, r2
 802354c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8023550:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8023554:	9301      	str	r3, [sp, #4]
 8023556:	9200      	str	r2, [sp, #0]
 8023558:	4639      	mov	r1, r7
 802355a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802355e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023560:	f7ff fc24 	bl	8022dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023564:	e70a      	b.n	802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023566:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023568:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802356c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802356e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023572:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023574:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023578:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802357a:	141f      	asrs	r7, r3, #16
 802357c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802357e:	141b      	asrs	r3, r3, #16
 8023580:	fb01 3707 	mla	r7, r1, r7, r3
 8023584:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023586:	fa1f fc82 	uxth.w	ip, r2
 802358a:	eb03 0a07 	add.w	sl, r3, r7
 802358e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023592:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023596:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802359a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802359e:	b29b      	uxth	r3, r3
 80235a0:	2d00      	cmp	r5, #0
 80235a2:	f000 80fe 	beq.w	80237a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80235a6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80235aa:	940c      	str	r4, [sp, #48]	; 0x30
 80235ac:	eb0a 0b01 	add.w	fp, sl, r1
 80235b0:	fa1f fa85 	uxth.w	sl, r5
 80235b4:	fb0a fc0c 	mul.w	ip, sl, ip
 80235b8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80235bc:	fa1f fa8a 	uxth.w	sl, sl
 80235c0:	eba0 000c 	sub.w	r0, r0, ip
 80235c4:	eba3 030a 	sub.w	r3, r3, sl
 80235c8:	b280      	uxth	r0, r0
 80235ca:	fb08 f000 	mul.w	r0, r8, r0
 80235ce:	b29b      	uxth	r3, r3
 80235d0:	fb09 0303 	mla	r3, r9, r3, r0
 80235d4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80235d6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80235da:	940d      	str	r4, [sp, #52]	; 0x34
 80235dc:	fb0a 3300 	mla	r3, sl, r0, r3
 80235e0:	fb0c 3304 	mla	r3, ip, r4, r3
 80235e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80235e8:	2b00      	cmp	r3, #0
 80235ea:	f000 80cc 	beq.w	8023786 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80235ee:	9808      	ldr	r0, [sp, #32]
 80235f0:	9c08      	ldr	r4, [sp, #32]
 80235f2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80235f6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80235fa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80235fe:	f000 80d5 	beq.w	80237ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023602:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023606:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802360a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802360e:	fb09 f707 	mul.w	r7, r9, r7
 8023612:	fb0a fc0c 	mul.w	ip, sl, ip
 8023616:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802361a:	f107 0b20 	add.w	fp, r7, #32
 802361e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023622:	44cc      	add	ip, r9
 8023624:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023628:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802362c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023630:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023634:	ea4c 0909 	orr.w	r9, ip, r9
 8023638:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802363c:	8847      	ldrh	r7, [r0, #2]
 802363e:	d019      	beq.n	8023674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8023640:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023644:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023648:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802364c:	fb08 f807 	mul.w	r8, r8, r7
 8023650:	fb0a fc0c 	mul.w	ip, sl, ip
 8023654:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023658:	f108 0b20 	add.w	fp, r8, #32
 802365c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023660:	44bc      	add	ip, r7
 8023662:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023666:	0a3f      	lsrs	r7, r7, #8
 8023668:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802366c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023670:	ea4c 0707 	orr.w	r7, ip, r7
 8023674:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023678:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802367c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023680:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023684:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023688:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802368c:	ea4c 0909 	orr.w	r9, ip, r9
 8023690:	ea4a 0707 	orr.w	r7, sl, r7
 8023694:	2d00      	cmp	r5, #0
 8023696:	f000 808b 	beq.w	80237b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802369a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802369e:	3901      	subs	r1, #1
 80236a0:	0049      	lsls	r1, r1, #1
 80236a2:	3102      	adds	r1, #2
 80236a4:	eb00 0c01 	add.w	ip, r0, r1
 80236a8:	5a41      	ldrh	r1, [r0, r1]
 80236aa:	980c      	ldr	r0, [sp, #48]	; 0x30
 80236ac:	28ff      	cmp	r0, #255	; 0xff
 80236ae:	d019      	beq.n	80236e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80236b0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80236b2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80236b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80236ba:	fb04 fa01 	mul.w	sl, r4, r1
 80236be:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80236c2:	fb08 f800 	mul.w	r8, r8, r0
 80236c6:	f10a 0020 	add.w	r0, sl, #32
 80236ca:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80236ce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80236d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80236d6:	4441      	add	r1, r8
 80236d8:	0a00      	lsrs	r0, r0, #8
 80236da:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80236de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236e2:	4301      	orrs	r1, r0
 80236e4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80236e6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80236ea:	2cff      	cmp	r4, #255	; 0xff
 80236ec:	d01a      	beq.n	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80236ee:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80236f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236f6:	fb04 fa00 	mul.w	sl, r4, r0
 80236fa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80236fe:	fb08 f80c 	mul.w	r8, r8, ip
 8023702:	f10a 0c20 	add.w	ip, sl, #32
 8023706:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802370a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802370e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023712:	4440      	add	r0, r8
 8023714:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023718:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802371c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023720:	ea40 000c 	orr.w	r0, r0, ip
 8023724:	fb15 fc02 	smulbb	ip, r5, r2
 8023728:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802372c:	f1c5 0810 	rsb	r8, r5, #16
 8023730:	eba8 0802 	sub.w	r8, r8, r2
 8023734:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023738:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802373c:	437a      	muls	r2, r7
 802373e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023742:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023746:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802374a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802374e:	fb09 2208 	mla	r2, r9, r8, r2
 8023752:	ea4a 0101 	orr.w	r1, sl, r1
 8023756:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802375a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802375e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023762:	fb05 2201 	mla	r2, r5, r1, r2
 8023766:	ea4b 0000 	orr.w	r0, fp, r0
 802376a:	fb0c 2200 	mla	r2, ip, r0, r2
 802376e:	0d57      	lsrs	r7, r2, #21
 8023770:	0952      	lsrs	r2, r2, #5
 8023772:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023776:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802377a:	433a      	orrs	r2, r7
 802377c:	2bff      	cmp	r3, #255	; 0xff
 802377e:	b292      	uxth	r2, r2
 8023780:	d127      	bne.n	80237d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8023782:	f8ae 2000 	strh.w	r2, [lr]
 8023786:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023788:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802378a:	4413      	add	r3, r2
 802378c:	931d      	str	r3, [sp, #116]	; 0x74
 802378e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023790:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023792:	441a      	add	r2, r3
 8023794:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023796:	921e      	str	r2, [sp, #120]	; 0x78
 8023798:	3b01      	subs	r3, #1
 802379a:	f10e 0e02 	add.w	lr, lr, #2
 802379e:	930f      	str	r3, [sp, #60]	; 0x3c
 80237a0:	e627      	b.n	80233f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80237a2:	fb08 f000 	mul.w	r0, r8, r0
 80237a6:	fb09 0303 	mla	r3, r9, r3, r0
 80237aa:	e71b      	b.n	80235e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80237ac:	46b9      	mov	r9, r7
 80237ae:	e743      	b.n	8023638 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80237b0:	f1c2 0110 	rsb	r1, r2, #16
 80237b4:	437a      	muls	r2, r7
 80237b6:	fb09 2901 	mla	r9, r9, r1, r2
 80237ba:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80237be:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80237c2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80237c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80237ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80237ce:	4302      	orrs	r2, r0
 80237d0:	e7d4      	b.n	802377c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80237d2:	f8be 7000 	ldrh.w	r7, [lr]
 80237d6:	4c1c      	ldr	r4, [pc, #112]	; (8023848 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80237d8:	43db      	mvns	r3, r3
 80237da:	1238      	asrs	r0, r7, #8
 80237dc:	fa5f fc83 	uxtb.w	ip, r3
 80237e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80237e4:	10fd      	asrs	r5, r7, #3
 80237e6:	fb00 f00c 	mul.w	r0, r0, ip
 80237ea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80237ee:	fb05 f10c 	mul.w	r1, r5, ip
 80237f2:	1c45      	adds	r5, r0, #1
 80237f4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80237f8:	1215      	asrs	r5, r2, #8
 80237fa:	f025 0507 	bic.w	r5, r5, #7
 80237fe:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023802:	1c4d      	adds	r5, r1, #1
 8023804:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8023808:	10d1      	asrs	r1, r2, #3
 802380a:	f021 0103 	bic.w	r1, r1, #3
 802380e:	00fb      	lsls	r3, r7, #3
 8023810:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023814:	b2db      	uxtb	r3, r3
 8023816:	b2c0      	uxtb	r0, r0
 8023818:	00c9      	lsls	r1, r1, #3
 802381a:	fb03 f30c 	mul.w	r3, r3, ip
 802381e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023822:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8023826:	4308      	orrs	r0, r1
 8023828:	1c59      	adds	r1, r3, #1
 802382a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802382e:	00d2      	lsls	r2, r2, #3
 8023830:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023834:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8023838:	4318      	orrs	r0, r3
 802383a:	f8ae 0000 	strh.w	r0, [lr]
 802383e:	e7a2      	b.n	8023786 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023840:	b013      	add	sp, #76	; 0x4c
 8023842:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023846:	bf00      	nop
 8023848:	fffff800 	.word	0xfffff800

0802384c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802384c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023850:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8023854:	fb05 4c03 	mla	ip, r5, r3, r4
 8023858:	2d00      	cmp	r5, #0
 802385a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802385e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8023862:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8023866:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802386a:	8808      	ldrh	r0, [r1, #0]
 802386c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8023870:	f2c0 80a7 	blt.w	80239c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023874:	45aa      	cmp	sl, r5
 8023876:	f340 80a4 	ble.w	80239c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802387a:	2c00      	cmp	r4, #0
 802387c:	f2c0 809f 	blt.w	80239be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023880:	42a3      	cmp	r3, r4
 8023882:	f340 809c 	ble.w	80239be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023886:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802388a:	1c62      	adds	r2, r4, #1
 802388c:	f100 809c 	bmi.w	80239c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023890:	4293      	cmp	r3, r2
 8023892:	f340 8099 	ble.w	80239c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023896:	f1b9 0f00 	cmp.w	r9, #0
 802389a:	f000 8095 	beq.w	80239c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802389e:	f8be c002 	ldrh.w	ip, [lr, #2]
 80238a2:	3501      	adds	r5, #1
 80238a4:	f100 8094 	bmi.w	80239d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80238a8:	45aa      	cmp	sl, r5
 80238aa:	f340 8091 	ble.w	80239d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80238ae:	2f00      	cmp	r7, #0
 80238b0:	f000 808e 	beq.w	80239d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80238b4:	2c00      	cmp	r4, #0
 80238b6:	f2c0 8089 	blt.w	80239cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80238ba:	42a3      	cmp	r3, r4
 80238bc:	f340 8086 	ble.w	80239cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80238c0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80238c4:	3401      	adds	r4, #1
 80238c6:	f100 8086 	bmi.w	80239d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80238ca:	42a3      	cmp	r3, r4
 80238cc:	f340 8083 	ble.w	80239d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80238d0:	f1b9 0f00 	cmp.w	r9, #0
 80238d4:	d07f      	beq.n	80239d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80238d6:	3301      	adds	r3, #1
 80238d8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80238dc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80238e0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80238e4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80238e8:	fb19 fe07 	smulbb	lr, r9, r7
 80238ec:	ea44 0808 	orr.w	r8, r4, r8
 80238f0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80238f4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80238f8:	f1c7 0210 	rsb	r2, r7, #16
 80238fc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023900:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023904:	ea44 0c0c 	orr.w	ip, r4, ip
 8023908:	eba2 0209 	sub.w	r2, r2, r9
 802390c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023910:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023914:	fb04 f40c 	mul.w	r4, r4, ip
 8023918:	fb02 4808 	mla	r8, r2, r8, r4
 802391c:	041a      	lsls	r2, r3, #16
 802391e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023922:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023926:	4313      	orrs	r3, r2
 8023928:	042a      	lsls	r2, r5, #16
 802392a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802392e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023932:	fb0e 8303 	mla	r3, lr, r3, r8
 8023936:	432a      	orrs	r2, r5
 8023938:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802393c:	fb07 3202 	mla	r2, r7, r2, r3
 8023940:	0d53      	lsrs	r3, r2, #21
 8023942:	0952      	lsrs	r2, r2, #5
 8023944:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023948:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802394c:	431a      	orrs	r2, r3
 802394e:	b293      	uxth	r3, r2
 8023950:	b2b4      	uxth	r4, r6
 8023952:	1202      	asrs	r2, r0, #8
 8023954:	43f6      	mvns	r6, r6
 8023956:	b2f6      	uxtb	r6, r6
 8023958:	121d      	asrs	r5, r3, #8
 802395a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802395e:	fb12 f206 	smulbb	r2, r2, r6
 8023962:	10c7      	asrs	r7, r0, #3
 8023964:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023968:	00c0      	lsls	r0, r0, #3
 802396a:	fb05 2504 	mla	r5, r5, r4, r2
 802396e:	b2c0      	uxtb	r0, r0
 8023970:	10da      	asrs	r2, r3, #3
 8023972:	00db      	lsls	r3, r3, #3
 8023974:	b2db      	uxtb	r3, r3
 8023976:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802397a:	fb10 f006 	smulbb	r0, r0, r6
 802397e:	b2ad      	uxth	r5, r5
 8023980:	fb03 0004 	mla	r0, r3, r4, r0
 8023984:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023988:	fb17 f706 	smulbb	r7, r7, r6
 802398c:	b280      	uxth	r0, r0
 802398e:	1c6b      	adds	r3, r5, #1
 8023990:	fb02 7204 	mla	r2, r2, r4, r7
 8023994:	b292      	uxth	r2, r2
 8023996:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802399a:	1c43      	adds	r3, r0, #1
 802399c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80239a0:	1c50      	adds	r0, r2, #1
 80239a2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80239a6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80239aa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80239ae:	0952      	lsrs	r2, r2, #5
 80239b0:	432b      	orrs	r3, r5
 80239b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80239b6:	4313      	orrs	r3, r2
 80239b8:	800b      	strh	r3, [r1, #0]
 80239ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80239be:	4680      	mov	r8, r0
 80239c0:	e763      	b.n	802388a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80239c2:	4684      	mov	ip, r0
 80239c4:	4680      	mov	r8, r0
 80239c6:	e76c      	b.n	80238a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80239c8:	4684      	mov	ip, r0
 80239ca:	e76a      	b.n	80238a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80239cc:	4605      	mov	r5, r0
 80239ce:	e779      	b.n	80238c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80239d0:	4603      	mov	r3, r0
 80239d2:	4605      	mov	r5, r0
 80239d4:	e782      	b.n	80238dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80239d6:	4603      	mov	r3, r0
 80239d8:	e780      	b.n	80238dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080239da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80239da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239de:	b093      	sub	sp, #76	; 0x4c
 80239e0:	461d      	mov	r5, r3
 80239e2:	9210      	str	r2, [sp, #64]	; 0x40
 80239e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80239e6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80239ea:	920b      	str	r2, [sp, #44]	; 0x2c
 80239ec:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80239f0:	910a      	str	r1, [sp, #40]	; 0x28
 80239f2:	6859      	ldr	r1, [r3, #4]
 80239f4:	681b      	ldr	r3, [r3, #0]
 80239f6:	9011      	str	r0, [sp, #68]	; 0x44
 80239f8:	fb01 2707 	mla	r7, r1, r7, r2
 80239fc:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023a00:	9307      	str	r3, [sp, #28]
 8023a02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a04:	681b      	ldr	r3, [r3, #0]
 8023a06:	9309      	str	r3, [sp, #36]	; 0x24
 8023a08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a0a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023a0e:	43db      	mvns	r3, r3
 8023a10:	b2db      	uxtb	r3, r3
 8023a12:	9308      	str	r3, [sp, #32]
 8023a14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a16:	2b00      	cmp	r3, #0
 8023a18:	dc03      	bgt.n	8023a22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023a1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023a1c:	2b00      	cmp	r3, #0
 8023a1e:	f340 8203 	ble.w	8023e28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023a22:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a24:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023a28:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023a2c:	1e48      	subs	r0, r1, #1
 8023a2e:	f102 3cff 	add.w	ip, r2, #4294967295
 8023a32:	2d00      	cmp	r5, #0
 8023a34:	f340 80da 	ble.w	8023bec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023a38:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023a3c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023a40:	d406      	bmi.n	8023a50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023a42:	4586      	cmp	lr, r0
 8023a44:	da04      	bge.n	8023a50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023a46:	2b00      	cmp	r3, #0
 8023a48:	db02      	blt.n	8023a50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023a4a:	4563      	cmp	r3, ip
 8023a4c:	f2c0 80cf 	blt.w	8023bee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023a50:	f11e 0e01 	adds.w	lr, lr, #1
 8023a54:	f100 80c1 	bmi.w	8023bda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023a58:	4571      	cmp	r1, lr
 8023a5a:	f2c0 80be 	blt.w	8023bda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023a5e:	3301      	adds	r3, #1
 8023a60:	f100 80bb 	bmi.w	8023bda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023a64:	429a      	cmp	r2, r3
 8023a66:	f2c0 80b8 	blt.w	8023bda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023a6a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023a6e:	46a9      	mov	r9, r5
 8023a70:	f1b9 0f00 	cmp.w	r9, #0
 8023a74:	f340 80d8 	ble.w	8023c28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8023a78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a7a:	1421      	asrs	r1, r4, #16
 8023a7c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023a80:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023a84:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023a88:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023a8c:	f100 8111 	bmi.w	8023cb2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023a90:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023a94:	4551      	cmp	r1, sl
 8023a96:	f280 810c 	bge.w	8023cb2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023a9a:	2800      	cmp	r0, #0
 8023a9c:	f2c0 8109 	blt.w	8023cb2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023aa0:	f103 3aff 	add.w	sl, r3, #4294967295
 8023aa4:	4550      	cmp	r0, sl
 8023aa6:	f280 8104 	bge.w	8023cb2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023aaa:	fa0f f38e 	sxth.w	r3, lr
 8023aae:	fb00 1103 	mla	r1, r0, r3, r1
 8023ab2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023ab4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8023ab8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023abc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023ac0:	f1bc 0f00 	cmp.w	ip, #0
 8023ac4:	d007      	beq.n	8023ad6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8023ac6:	005b      	lsls	r3, r3, #1
 8023ac8:	eb0a 0003 	add.w	r0, sl, r3
 8023acc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023ad0:	930c      	str	r3, [sp, #48]	; 0x30
 8023ad2:	8843      	ldrh	r3, [r0, #2]
 8023ad4:	930d      	str	r3, [sp, #52]	; 0x34
 8023ad6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8023ada:	fb12 f30c 	smulbb	r3, r2, ip
 8023ade:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023ae2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023ae6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023aea:	10db      	asrs	r3, r3, #3
 8023aec:	ea40 000e 	orr.w	r0, r0, lr
 8023af0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023af4:	f1cc 0e10 	rsb	lr, ip, #16
 8023af8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023afc:	ebae 0e02 	sub.w	lr, lr, r2
 8023b00:	ea4a 0101 	orr.w	r1, sl, r1
 8023b04:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023b08:	4351      	muls	r1, r2
 8023b0a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023b0c:	9f08      	ldr	r7, [sp, #32]
 8023b0e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023b12:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023b16:	0410      	lsls	r0, r2, #16
 8023b18:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023b1c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023b20:	4310      	orrs	r0, r2
 8023b22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023b24:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023b26:	0412      	lsls	r2, r2, #16
 8023b28:	fb03 e000 	mla	r0, r3, r0, lr
 8023b2c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023b30:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023b34:	ea42 020e 	orr.w	r2, r2, lr
 8023b38:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023b3c:	fb03 0302 	mla	r3, r3, r2, r0
 8023b40:	0d5a      	lsrs	r2, r3, #21
 8023b42:	095b      	lsrs	r3, r3, #5
 8023b44:	f8b8 0000 	ldrh.w	r0, [r8]
 8023b48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023b4c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023b50:	4313      	orrs	r3, r2
 8023b52:	b29b      	uxth	r3, r3
 8023b54:	1201      	asrs	r1, r0, #8
 8023b56:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8023b5a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023b5e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023b62:	fb11 f107 	smulbb	r1, r1, r7
 8023b66:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023b6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023b6e:	00c0      	lsls	r0, r0, #3
 8023b70:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023b74:	b2c0      	uxtb	r0, r0
 8023b76:	10d9      	asrs	r1, r3, #3
 8023b78:	00db      	lsls	r3, r3, #3
 8023b7a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023b7e:	b2db      	uxtb	r3, r3
 8023b80:	fb10 f007 	smulbb	r0, r0, r7
 8023b84:	fa1f fc8c 	uxth.w	ip, ip
 8023b88:	fb03 0302 	mla	r3, r3, r2, r0
 8023b8c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023b90:	fb1e fe07 	smulbb	lr, lr, r7
 8023b94:	fb01 e102 	mla	r1, r1, r2, lr
 8023b98:	b29a      	uxth	r2, r3
 8023b9a:	f10c 0301 	add.w	r3, ip, #1
 8023b9e:	b289      	uxth	r1, r1
 8023ba0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023ba4:	1c53      	adds	r3, r2, #1
 8023ba6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023baa:	1c4a      	adds	r2, r1, #1
 8023bac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023bb0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023bb4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023bb8:	0949      	lsrs	r1, r1, #5
 8023bba:	ea43 030c 	orr.w	r3, r3, ip
 8023bbe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023bc2:	430b      	orrs	r3, r1
 8023bc4:	f8a8 3000 	strh.w	r3, [r8]
 8023bc8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023bca:	441c      	add	r4, r3
 8023bcc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023bce:	f108 0802 	add.w	r8, r8, #2
 8023bd2:	441e      	add	r6, r3
 8023bd4:	f109 39ff 	add.w	r9, r9, #4294967295
 8023bd8:	e74a      	b.n	8023a70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023bda:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023bdc:	441c      	add	r4, r3
 8023bde:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023be0:	441e      	add	r6, r3
 8023be2:	9b07      	ldr	r3, [sp, #28]
 8023be4:	3302      	adds	r3, #2
 8023be6:	3d01      	subs	r5, #1
 8023be8:	9307      	str	r3, [sp, #28]
 8023bea:	e722      	b.n	8023a32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023bec:	d022      	beq.n	8023c34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023bee:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023bf0:	1e6b      	subs	r3, r5, #1
 8023bf2:	fb00 4003 	mla	r0, r0, r3, r4
 8023bf6:	1400      	asrs	r0, r0, #16
 8023bf8:	f53f af37 	bmi.w	8023a6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023bfc:	3901      	subs	r1, #1
 8023bfe:	4288      	cmp	r0, r1
 8023c00:	f6bf af33 	bge.w	8023a6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c04:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023c06:	fb01 6303 	mla	r3, r1, r3, r6
 8023c0a:	141b      	asrs	r3, r3, #16
 8023c0c:	f53f af2d 	bmi.w	8023a6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c10:	3a01      	subs	r2, #1
 8023c12:	4293      	cmp	r3, r2
 8023c14:	f6bf af29 	bge.w	8023a6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c18:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023c1c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023c20:	46a8      	mov	r8, r5
 8023c22:	f1b8 0f00 	cmp.w	r8, #0
 8023c26:	dc5e      	bgt.n	8023ce6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023c28:	9b07      	ldr	r3, [sp, #28]
 8023c2a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023c2e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023c32:	9307      	str	r3, [sp, #28]
 8023c34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023c36:	2b00      	cmp	r3, #0
 8023c38:	f340 80f6 	ble.w	8023e28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023c3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023c40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023c44:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023c48:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023c4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023c52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023c56:	eef0 6a62 	vmov.f32	s13, s5
 8023c5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023c5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c62:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023c66:	ee16 4a90 	vmov	r4, s13
 8023c6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023c6e:	eef0 6a43 	vmov.f32	s13, s6
 8023c72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023c76:	ee12 2a90 	vmov	r2, s5
 8023c7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023c7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c82:	ee13 2a10 	vmov	r2, s6
 8023c86:	931f      	str	r3, [sp, #124]	; 0x7c
 8023c88:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c8e:	9320      	str	r3, [sp, #128]	; 0x80
 8023c90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023c92:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023c94:	3b01      	subs	r3, #1
 8023c96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c9a:	930a      	str	r3, [sp, #40]	; 0x28
 8023c9c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c9e:	ee16 6a90 	vmov	r6, s13
 8023ca2:	bf14      	ite	ne
 8023ca4:	461d      	movne	r5, r3
 8023ca6:	4615      	moveq	r5, r2
 8023ca8:	eeb0 3a67 	vmov.f32	s6, s15
 8023cac:	eef0 2a47 	vmov.f32	s5, s14
 8023cb0:	e6b0      	b.n	8023a14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023cb2:	f111 0a01 	adds.w	sl, r1, #1
 8023cb6:	d487      	bmi.n	8023bc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023cb8:	45d6      	cmp	lr, sl
 8023cba:	db85      	blt.n	8023bc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023cbc:	f110 0a01 	adds.w	sl, r0, #1
 8023cc0:	d482      	bmi.n	8023bc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023cc2:	4553      	cmp	r3, sl
 8023cc4:	db80      	blt.n	8023bc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023cc6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023cc8:	9101      	str	r1, [sp, #4]
 8023cca:	b21b      	sxth	r3, r3
 8023ccc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023cd0:	9300      	str	r3, [sp, #0]
 8023cd2:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023cd6:	fa0f f38e 	sxth.w	r3, lr
 8023cda:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023cdc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023cde:	4641      	mov	r1, r8
 8023ce0:	f7ff fdb4 	bl	802384c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023ce4:	e770      	b.n	8023bc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023ce6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023ce8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023cea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023cee:	1430      	asrs	r0, r6, #16
 8023cf0:	1423      	asrs	r3, r4, #16
 8023cf2:	fb01 3000 	mla	r0, r1, r0, r3
 8023cf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023cf8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023cfc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023d00:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023d04:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023d08:	8858      	ldrh	r0, [r3, #2]
 8023d0a:	f1be 0f00 	cmp.w	lr, #0
 8023d0e:	d00b      	beq.n	8023d28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023d10:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023d14:	3901      	subs	r1, #1
 8023d16:	0049      	lsls	r1, r1, #1
 8023d18:	3102      	adds	r1, #2
 8023d1a:	eb03 0b01 	add.w	fp, r3, r1
 8023d1e:	5a5b      	ldrh	r3, [r3, r1]
 8023d20:	930e      	str	r3, [sp, #56]	; 0x38
 8023d22:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023d26:	930f      	str	r3, [sp, #60]	; 0x3c
 8023d28:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023d2c:	fb12 f30e 	smulbb	r3, r2, lr
 8023d30:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023d34:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023d38:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023d3c:	10db      	asrs	r3, r3, #3
 8023d3e:	ea41 010c 	orr.w	r1, r1, ip
 8023d42:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023d46:	f1ce 0c10 	rsb	ip, lr, #16
 8023d4a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023d4e:	ebac 0c02 	sub.w	ip, ip, r2
 8023d52:	ea4b 0000 	orr.w	r0, fp, r0
 8023d56:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023d5a:	4350      	muls	r0, r2
 8023d5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023d5e:	9f08      	ldr	r7, [sp, #32]
 8023d60:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023d64:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023d68:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023d6c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023d70:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023d72:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023d74:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023d78:	0412      	lsls	r2, r2, #16
 8023d7a:	ea4b 0101 	orr.w	r1, fp, r1
 8023d7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023d82:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023d86:	fb03 c101 	mla	r1, r3, r1, ip
 8023d8a:	4302      	orrs	r2, r0
 8023d8c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023d90:	fb03 1202 	mla	r2, r3, r2, r1
 8023d94:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8023d98:	0952      	lsrs	r2, r2, #5
 8023d9a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023d9e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023da2:	f8b9 2000 	ldrh.w	r2, [r9]
 8023da6:	ea4b 0303 	orr.w	r3, fp, r3
 8023daa:	b29b      	uxth	r3, r3
 8023dac:	1211      	asrs	r1, r2, #8
 8023dae:	1218      	asrs	r0, r3, #8
 8023db0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023db4:	fb11 f107 	smulbb	r1, r1, r7
 8023db8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023dbc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023dc0:	00d2      	lsls	r2, r2, #3
 8023dc2:	fb00 100a 	mla	r0, r0, sl, r1
 8023dc6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023dca:	10d9      	asrs	r1, r3, #3
 8023dcc:	b2d2      	uxtb	r2, r2
 8023dce:	00db      	lsls	r3, r3, #3
 8023dd0:	fb1c fc07 	smulbb	ip, ip, r7
 8023dd4:	fb12 f207 	smulbb	r2, r2, r7
 8023dd8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023ddc:	b2db      	uxtb	r3, r3
 8023dde:	b280      	uxth	r0, r0
 8023de0:	fb01 c10a 	mla	r1, r1, sl, ip
 8023de4:	fb03 230a 	mla	r3, r3, sl, r2
 8023de8:	b29b      	uxth	r3, r3
 8023dea:	b289      	uxth	r1, r1
 8023dec:	1c42      	adds	r2, r0, #1
 8023dee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023df2:	f101 0c01 	add.w	ip, r1, #1
 8023df6:	1c5a      	adds	r2, r3, #1
 8023df8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023dfc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023e00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023e02:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023e06:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023e0a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023e0e:	4310      	orrs	r0, r2
 8023e10:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023e14:	441c      	add	r4, r3
 8023e16:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e18:	ea40 000c 	orr.w	r0, r0, ip
 8023e1c:	f829 0b02 	strh.w	r0, [r9], #2
 8023e20:	441e      	add	r6, r3
 8023e22:	f108 38ff 	add.w	r8, r8, #4294967295
 8023e26:	e6fc      	b.n	8023c22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023e28:	b013      	add	sp, #76	; 0x4c
 8023e2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023e2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023e2e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023e32:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023e36:	fb0e 4703 	mla	r7, lr, r3, r4
 8023e3a:	f1be 0f00 	cmp.w	lr, #0
 8023e3e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023e42:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8023e46:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8023e4a:	8808      	ldrh	r0, [r1, #0]
 8023e4c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023e50:	db60      	blt.n	8023f14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023e52:	45f1      	cmp	r9, lr
 8023e54:	dd5e      	ble.n	8023f14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023e56:	2c00      	cmp	r4, #0
 8023e58:	db5a      	blt.n	8023f10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023e5a:	42a3      	cmp	r3, r4
 8023e5c:	dd58      	ble.n	8023f10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023e5e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023e62:	1c62      	adds	r2, r4, #1
 8023e64:	d459      	bmi.n	8023f1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023e66:	4293      	cmp	r3, r2
 8023e68:	dd57      	ble.n	8023f1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023e6a:	2d00      	cmp	r5, #0
 8023e6c:	d055      	beq.n	8023f1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023e6e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023e72:	f11e 0e01 	adds.w	lr, lr, #1
 8023e76:	d454      	bmi.n	8023f22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023e78:	45f1      	cmp	r9, lr
 8023e7a:	dd52      	ble.n	8023f22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023e7c:	2e00      	cmp	r6, #0
 8023e7e:	d050      	beq.n	8023f22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023e80:	2c00      	cmp	r4, #0
 8023e82:	db4c      	blt.n	8023f1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023e84:	42a3      	cmp	r3, r4
 8023e86:	dd4a      	ble.n	8023f1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023e88:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023e8c:	3401      	adds	r4, #1
 8023e8e:	d405      	bmi.n	8023e9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023e90:	42a3      	cmp	r3, r4
 8023e92:	dd03      	ble.n	8023e9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023e94:	b115      	cbz	r5, 8023e9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023e96:	3301      	adds	r3, #1
 8023e98:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023e9c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023ea0:	fb15 f406 	smulbb	r4, r5, r6
 8023ea4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023ea8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023eac:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023eb0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023eb4:	ea43 0c0c 	orr.w	ip, r3, ip
 8023eb8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023ebc:	f1c6 0310 	rsb	r3, r6, #16
 8023ec0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023ec4:	1b5b      	subs	r3, r3, r5
 8023ec6:	ea4e 0707 	orr.w	r7, lr, r7
 8023eca:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023ece:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023ed2:	437d      	muls	r5, r7
 8023ed4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023ed8:	0403      	lsls	r3, r0, #16
 8023eda:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023ede:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023ee2:	4318      	orrs	r0, r3
 8023ee4:	0413      	lsls	r3, r2, #16
 8023ee6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023eea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023eee:	4313      	orrs	r3, r2
 8023ef0:	fb04 c000 	mla	r0, r4, r0, ip
 8023ef4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023ef8:	fb06 0003 	mla	r0, r6, r3, r0
 8023efc:	0d43      	lsrs	r3, r0, #21
 8023efe:	0940      	lsrs	r0, r0, #5
 8023f00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023f04:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023f08:	4318      	orrs	r0, r3
 8023f0a:	8008      	strh	r0, [r1, #0]
 8023f0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023f10:	4684      	mov	ip, r0
 8023f12:	e7a6      	b.n	8023e62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023f14:	4607      	mov	r7, r0
 8023f16:	4684      	mov	ip, r0
 8023f18:	e7ab      	b.n	8023e72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023f1a:	4607      	mov	r7, r0
 8023f1c:	e7a9      	b.n	8023e72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023f1e:	4602      	mov	r2, r0
 8023f20:	e7b4      	b.n	8023e8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023f22:	4602      	mov	r2, r0
 8023f24:	e7ba      	b.n	8023e9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023f26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023f26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f2a:	b08f      	sub	sp, #60	; 0x3c
 8023f2c:	461d      	mov	r5, r3
 8023f2e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023f30:	920c      	str	r2, [sp, #48]	; 0x30
 8023f32:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8023f36:	9107      	str	r1, [sp, #28]
 8023f38:	6859      	ldr	r1, [r3, #4]
 8023f3a:	681b      	ldr	r3, [r3, #0]
 8023f3c:	900d      	str	r0, [sp, #52]	; 0x34
 8023f3e:	fb01 2707 	mla	r7, r1, r7, r2
 8023f42:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023f46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f48:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023f4c:	f8d3 8000 	ldr.w	r8, [r3]
 8023f50:	9b07      	ldr	r3, [sp, #28]
 8023f52:	2b00      	cmp	r3, #0
 8023f54:	dc03      	bgt.n	8023f5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023f56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023f58:	2b00      	cmp	r3, #0
 8023f5a:	f340 8181 	ble.w	8024260 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023f5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023f64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023f68:	1e48      	subs	r0, r1, #1
 8023f6a:	f102 3cff 	add.w	ip, r2, #4294967295
 8023f6e:	2d00      	cmp	r5, #0
 8023f70:	f340 809b 	ble.w	80240aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023f74:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023f78:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023f7c:	d406      	bmi.n	8023f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023f7e:	4586      	cmp	lr, r0
 8023f80:	da04      	bge.n	8023f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023f82:	2b00      	cmp	r3, #0
 8023f84:	db02      	blt.n	8023f8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023f86:	4563      	cmp	r3, ip
 8023f88:	f2c0 8090 	blt.w	80240ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023f8c:	f11e 0e01 	adds.w	lr, lr, #1
 8023f90:	f100 8084 	bmi.w	802409c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023f94:	4571      	cmp	r1, lr
 8023f96:	f2c0 8081 	blt.w	802409c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023f9a:	3301      	adds	r3, #1
 8023f9c:	d47e      	bmi.n	802409c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023f9e:	429a      	cmp	r2, r3
 8023fa0:	db7c      	blt.n	802409c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023fa2:	46aa      	mov	sl, r5
 8023fa4:	46b9      	mov	r9, r7
 8023fa6:	f1ba 0f00 	cmp.w	sl, #0
 8023faa:	f340 8099 	ble.w	80240e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023fae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023fb0:	1421      	asrs	r1, r4, #16
 8023fb2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023fb6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023fba:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023fbe:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023fc2:	f100 80d0 	bmi.w	8024166 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023fc6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023fca:	4559      	cmp	r1, fp
 8023fcc:	f280 80cb 	bge.w	8024166 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023fd0:	2800      	cmp	r0, #0
 8023fd2:	f2c0 80c8 	blt.w	8024166 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023fd6:	f103 3bff 	add.w	fp, r3, #4294967295
 8023fda:	4558      	cmp	r0, fp
 8023fdc:	f280 80c3 	bge.w	8024166 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023fe0:	fa0f fe8e 	sxth.w	lr, lr
 8023fe4:	fb00 110e 	mla	r1, r0, lr, r1
 8023fe8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023fec:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023ff0:	8841      	ldrh	r1, [r0, #2]
 8023ff2:	f1bc 0f00 	cmp.w	ip, #0
 8023ff6:	d00b      	beq.n	8024010 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023ff8:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023ffc:	3b01      	subs	r3, #1
 8023ffe:	005b      	lsls	r3, r3, #1
 8024000:	3302      	adds	r3, #2
 8024002:	eb00 0e03 	add.w	lr, r0, r3
 8024006:	5ac3      	ldrh	r3, [r0, r3]
 8024008:	9308      	str	r3, [sp, #32]
 802400a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802400e:	9309      	str	r3, [sp, #36]	; 0x24
 8024010:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8024014:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024018:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802401c:	ea40 000b 	orr.w	r0, r0, fp
 8024020:	fb12 f30c 	smulbb	r3, r2, ip
 8024024:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024028:	10db      	asrs	r3, r3, #3
 802402a:	f1cc 0e10 	rsb	lr, ip, #16
 802402e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024032:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024036:	ebae 0e02 	sub.w	lr, lr, r2
 802403a:	ea4b 0101 	orr.w	r1, fp, r1
 802403e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024042:	4351      	muls	r1, r2
 8024044:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024046:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802404a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802404e:	0410      	lsls	r0, r2, #16
 8024050:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024054:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024058:	4310      	orrs	r0, r2
 802405a:	9a08      	ldr	r2, [sp, #32]
 802405c:	9908      	ldr	r1, [sp, #32]
 802405e:	0412      	lsls	r2, r2, #16
 8024060:	fb03 e000 	mla	r0, r3, r0, lr
 8024064:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024068:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802406c:	ea42 020e 	orr.w	r2, r2, lr
 8024070:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024074:	fb03 0302 	mla	r3, r3, r2, r0
 8024078:	0d5a      	lsrs	r2, r3, #21
 802407a:	095b      	lsrs	r3, r3, #5
 802407c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024080:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024084:	4313      	orrs	r3, r2
 8024086:	f8a9 3000 	strh.w	r3, [r9]
 802408a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802408c:	441c      	add	r4, r3
 802408e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024090:	f109 0902 	add.w	r9, r9, #2
 8024094:	441e      	add	r6, r3
 8024096:	f10a 3aff 	add.w	sl, sl, #4294967295
 802409a:	e784      	b.n	8023fa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802409c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802409e:	441c      	add	r4, r3
 80240a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80240a2:	3d01      	subs	r5, #1
 80240a4:	441e      	add	r6, r3
 80240a6:	3702      	adds	r7, #2
 80240a8:	e761      	b.n	8023f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80240aa:	d01d      	beq.n	80240e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80240ac:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80240ae:	1e6b      	subs	r3, r5, #1
 80240b0:	fb00 4003 	mla	r0, r0, r3, r4
 80240b4:	1400      	asrs	r0, r0, #16
 80240b6:	f53f af74 	bmi.w	8023fa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80240ba:	3901      	subs	r1, #1
 80240bc:	4288      	cmp	r0, r1
 80240be:	f6bf af70 	bge.w	8023fa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80240c2:	991c      	ldr	r1, [sp, #112]	; 0x70
 80240c4:	fb01 6303 	mla	r3, r1, r3, r6
 80240c8:	141b      	asrs	r3, r3, #16
 80240ca:	f53f af6a 	bmi.w	8023fa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80240ce:	3a01      	subs	r2, #1
 80240d0:	4293      	cmp	r3, r2
 80240d2:	f6bf af66 	bge.w	8023fa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80240d6:	46a9      	mov	r9, r5
 80240d8:	46ba      	mov	sl, r7
 80240da:	f1b9 0f00 	cmp.w	r9, #0
 80240de:	dc5a      	bgt.n	8024196 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80240e0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80240e4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80240e8:	9b07      	ldr	r3, [sp, #28]
 80240ea:	2b00      	cmp	r3, #0
 80240ec:	f340 80b8 	ble.w	8024260 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80240f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80240f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80240f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80240fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80240fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024102:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024106:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802410a:	eef0 6a62 	vmov.f32	s13, s5
 802410e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024112:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024116:	ee77 2a62 	vsub.f32	s5, s14, s5
 802411a:	ee16 4a90 	vmov	r4, s13
 802411e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024122:	eef0 6a43 	vmov.f32	s13, s6
 8024126:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802412a:	ee12 2a90 	vmov	r2, s5
 802412e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024132:	fb92 f3f3 	sdiv	r3, r2, r3
 8024136:	ee13 2a10 	vmov	r2, s6
 802413a:	931b      	str	r3, [sp, #108]	; 0x6c
 802413c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802413e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024142:	931c      	str	r3, [sp, #112]	; 0x70
 8024144:	9b07      	ldr	r3, [sp, #28]
 8024146:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024148:	3b01      	subs	r3, #1
 802414a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802414e:	9307      	str	r3, [sp, #28]
 8024150:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024152:	ee16 6a90 	vmov	r6, s13
 8024156:	bf14      	ite	ne
 8024158:	461d      	movne	r5, r3
 802415a:	4615      	moveq	r5, r2
 802415c:	eeb0 3a67 	vmov.f32	s6, s15
 8024160:	eef0 2a47 	vmov.f32	s5, s14
 8024164:	e6f4      	b.n	8023f50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8024166:	f111 0b01 	adds.w	fp, r1, #1
 802416a:	d48e      	bmi.n	802408a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802416c:	45de      	cmp	lr, fp
 802416e:	db8c      	blt.n	802408a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024170:	f110 0b01 	adds.w	fp, r0, #1
 8024174:	d489      	bmi.n	802408a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024176:	455b      	cmp	r3, fp
 8024178:	db87      	blt.n	802408a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802417a:	b21b      	sxth	r3, r3
 802417c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024180:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024184:	9300      	str	r3, [sp, #0]
 8024186:	4642      	mov	r2, r8
 8024188:	fa0f f38e 	sxth.w	r3, lr
 802418c:	4649      	mov	r1, r9
 802418e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024190:	f7ff fe4d 	bl	8023e2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024194:	e779      	b.n	802408a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024196:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024198:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802419c:	1420      	asrs	r0, r4, #16
 802419e:	1431      	asrs	r1, r6, #16
 80241a0:	fb03 0101 	mla	r1, r3, r1, r0
 80241a4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80241a8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80241ac:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80241b0:	8841      	ldrh	r1, [r0, #2]
 80241b2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80241b6:	f1be 0f00 	cmp.w	lr, #0
 80241ba:	d00b      	beq.n	80241d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80241bc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80241c0:	3b01      	subs	r3, #1
 80241c2:	005b      	lsls	r3, r3, #1
 80241c4:	3302      	adds	r3, #2
 80241c6:	eb00 0b03 	add.w	fp, r0, r3
 80241ca:	5ac3      	ldrh	r3, [r0, r3]
 80241cc:	930a      	str	r3, [sp, #40]	; 0x28
 80241ce:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80241d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80241d4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80241d8:	fb12 f30e 	smulbb	r3, r2, lr
 80241dc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80241e0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80241e4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80241e8:	10db      	asrs	r3, r3, #3
 80241ea:	ea40 000c 	orr.w	r0, r0, ip
 80241ee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80241f2:	f1ce 0c10 	rsb	ip, lr, #16
 80241f6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80241fa:	ebac 0c02 	sub.w	ip, ip, r2
 80241fe:	ea4b 0101 	orr.w	r1, fp, r1
 8024202:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024206:	4351      	muls	r1, r2
 8024208:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802420a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802420e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024212:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024216:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802421a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802421c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802421e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024222:	0412      	lsls	r2, r2, #16
 8024224:	ea4b 0000 	orr.w	r0, fp, r0
 8024228:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802422c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024230:	fb03 c000 	mla	r0, r3, r0, ip
 8024234:	ea42 0b0b 	orr.w	fp, r2, fp
 8024238:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802423c:	fb03 000b 	mla	r0, r3, fp, r0
 8024240:	0d43      	lsrs	r3, r0, #21
 8024242:	0940      	lsrs	r0, r0, #5
 8024244:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024248:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802424c:	4318      	orrs	r0, r3
 802424e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024250:	f82a 0b02 	strh.w	r0, [sl], #2
 8024254:	441c      	add	r4, r3
 8024256:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024258:	f109 39ff 	add.w	r9, r9, #4294967295
 802425c:	441e      	add	r6, r3
 802425e:	e73c      	b.n	80240da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024260:	b00f      	add	sp, #60	; 0x3c
 8024262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8024266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802426a:	b085      	sub	sp, #20
 802426c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024270:	9102      	str	r1, [sp, #8]
 8024272:	2c00      	cmp	r4, #0
 8024274:	fb04 7103 	mla	r1, r4, r3, r7
 8024278:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802427c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024280:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024284:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024288:	f2c0 811b 	blt.w	80244c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802428c:	45a6      	cmp	lr, r4
 802428e:	f340 8118 	ble.w	80244c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024292:	2f00      	cmp	r7, #0
 8024294:	f2c0 8113 	blt.w	80244be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024298:	42bb      	cmp	r3, r7
 802429a:	f340 8110 	ble.w	80244be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802429e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80242a2:	1c7a      	adds	r2, r7, #1
 80242a4:	f100 8110 	bmi.w	80244c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80242a8:	4293      	cmp	r3, r2
 80242aa:	f340 810d 	ble.w	80244c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80242ae:	2e00      	cmp	r6, #0
 80242b0:	f000 810c 	beq.w	80244cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80242b4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80242b8:	3401      	adds	r4, #1
 80242ba:	f100 810b 	bmi.w	80244d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80242be:	45a6      	cmp	lr, r4
 80242c0:	f340 8108 	ble.w	80244d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80242c4:	2800      	cmp	r0, #0
 80242c6:	f000 8108 	beq.w	80244da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80242ca:	2f00      	cmp	r7, #0
 80242cc:	f2c0 8100 	blt.w	80244d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80242d0:	42bb      	cmp	r3, r7
 80242d2:	f340 80fd 	ble.w	80244d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80242d6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80242da:	3701      	adds	r7, #1
 80242dc:	f100 8100 	bmi.w	80244e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80242e0:	42bb      	cmp	r3, r7
 80242e2:	f340 80fd 	ble.w	80244e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80242e6:	2e00      	cmp	r6, #0
 80242e8:	f000 80fc 	beq.w	80244e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80242ec:	3301      	adds	r3, #1
 80242ee:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80242f2:	b2b6      	uxth	r6, r6
 80242f4:	b280      	uxth	r0, r0
 80242f6:	fb00 fe06 	mul.w	lr, r0, r6
 80242fa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80242fe:	0136      	lsls	r6, r6, #4
 8024300:	eba6 070e 	sub.w	r7, r6, lr
 8024304:	b280      	uxth	r0, r0
 8024306:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802430a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802430e:	b2bf      	uxth	r7, r7
 8024310:	1a1b      	subs	r3, r3, r0
 8024312:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024316:	b29b      	uxth	r3, r3
 8024318:	fb0a f607 	mul.w	r6, sl, r7
 802431c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024320:	fb0b 6603 	mla	r6, fp, r3, r6
 8024324:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024328:	fb00 6609 	mla	r6, r0, r9, r6
 802432c:	fb0e 6608 	mla	r6, lr, r8, r6
 8024330:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024334:	9600      	str	r6, [sp, #0]
 8024336:	2e00      	cmp	r6, #0
 8024338:	f000 80be 	beq.w	80244b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802433c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024340:	fb0b fc0c 	mul.w	ip, fp, ip
 8024344:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024348:	fb0b f505 	mul.w	r5, fp, r5
 802434c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024350:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024354:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024358:	44dc      	add	ip, fp
 802435a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802435e:	9501      	str	r5, [sp, #4]
 8024360:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024364:	9503      	str	r5, [sp, #12]
 8024366:	9d01      	ldr	r5, [sp, #4]
 8024368:	9e02      	ldr	r6, [sp, #8]
 802436a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802436e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024372:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024376:	fb0a fc0c 	mul.w	ip, sl, ip
 802437a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802437e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024382:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024386:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802438a:	4465      	add	r5, ip
 802438c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024390:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024394:	fb09 fc0c 	mul.w	ip, r9, ip
 8024398:	fb09 f904 	mul.w	r9, r9, r4
 802439c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80243a0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80243a4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80243a8:	fb08 f404 	mul.w	r4, r8, r4
 80243ac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80243b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80243b4:	fb08 f802 	mul.w	r8, r8, r2
 80243b8:	fb0a fa01 	mul.w	sl, sl, r1
 80243bc:	0a22      	lsrs	r2, r4, #8
 80243be:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80243c2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80243c6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80243ca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80243ce:	4414      	add	r4, r2
 80243d0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80243d4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80243d8:	0a2d      	lsrs	r5, r5, #8
 80243da:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80243de:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80243e2:	9a03      	ldr	r2, [sp, #12]
 80243e4:	8836      	ldrh	r6, [r6, #0]
 80243e6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80243ea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80243ee:	437d      	muls	r5, r7
 80243f0:	4461      	add	r1, ip
 80243f2:	0a24      	lsrs	r4, r4, #8
 80243f4:	fb02 5503 	mla	r5, r2, r3, r5
 80243f8:	0a09      	lsrs	r1, r1, #8
 80243fa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80243fe:	fb04 540e 	mla	r4, r4, lr, r5
 8024402:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024406:	fb01 4100 	mla	r1, r1, r0, r4
 802440a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802440e:	0a09      	lsrs	r1, r1, #8
 8024410:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024414:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024418:	fb07 f70a 	mul.w	r7, r7, sl
 802441c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024420:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024424:	fb03 7101 	mla	r1, r3, r1, r7
 8024428:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802442c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024430:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024434:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024438:	fb00 e101 	mla	r1, r0, r1, lr
 802443c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024440:	9a00      	ldr	r2, [sp, #0]
 8024442:	b287      	uxth	r7, r0
 8024444:	437a      	muls	r2, r7
 8024446:	0a09      	lsrs	r1, r1, #8
 8024448:	1c53      	adds	r3, r2, #1
 802444a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802444e:	4321      	orrs	r1, r4
 8024450:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024454:	1235      	asrs	r5, r6, #8
 8024456:	0c0a      	lsrs	r2, r1, #16
 8024458:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802445c:	b2db      	uxtb	r3, r3
 802445e:	fb12 f207 	smulbb	r2, r2, r7
 8024462:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024466:	fb05 2503 	mla	r5, r5, r3, r2
 802446a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802446e:	10f2      	asrs	r2, r6, #3
 8024470:	b2c8      	uxtb	r0, r1
 8024472:	00f6      	lsls	r6, r6, #3
 8024474:	fb14 f407 	smulbb	r4, r4, r7
 8024478:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802447c:	b2f6      	uxtb	r6, r6
 802447e:	fb10 f007 	smulbb	r0, r0, r7
 8024482:	fb02 4203 	mla	r2, r2, r3, r4
 8024486:	b2ad      	uxth	r5, r5
 8024488:	fb06 0303 	mla	r3, r6, r3, r0
 802448c:	b299      	uxth	r1, r3
 802448e:	b294      	uxth	r4, r2
 8024490:	1c6b      	adds	r3, r5, #1
 8024492:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024496:	1c62      	adds	r2, r4, #1
 8024498:	1c4b      	adds	r3, r1, #1
 802449a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802449e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80244a2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80244a6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80244aa:	0952      	lsrs	r2, r2, #5
 80244ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244b0:	432b      	orrs	r3, r5
 80244b2:	4313      	orrs	r3, r2
 80244b4:	9a02      	ldr	r2, [sp, #8]
 80244b6:	8013      	strh	r3, [r2, #0]
 80244b8:	b005      	add	sp, #20
 80244ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244be:	2500      	movs	r5, #0
 80244c0:	e6ef      	b.n	80242a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80244c2:	2100      	movs	r1, #0
 80244c4:	460d      	mov	r5, r1
 80244c6:	e6f7      	b.n	80242b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80244c8:	2100      	movs	r1, #0
 80244ca:	e6f5      	b.n	80242b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80244cc:	4631      	mov	r1, r6
 80244ce:	e6f3      	b.n	80242b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80244d0:	2400      	movs	r4, #0
 80244d2:	e702      	b.n	80242da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80244d4:	2200      	movs	r2, #0
 80244d6:	4614      	mov	r4, r2
 80244d8:	e70b      	b.n	80242f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80244da:	4602      	mov	r2, r0
 80244dc:	4604      	mov	r4, r0
 80244de:	e708      	b.n	80242f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80244e0:	2200      	movs	r2, #0
 80244e2:	e706      	b.n	80242f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80244e4:	4632      	mov	r2, r6
 80244e6:	e704      	b.n	80242f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080244e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80244e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244ec:	b09d      	sub	sp, #116	; 0x74
 80244ee:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80244f2:	9219      	str	r2, [sp, #100]	; 0x64
 80244f4:	9307      	str	r3, [sp, #28]
 80244f6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80244f8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80244fc:	931a      	str	r3, [sp, #104]	; 0x68
 80244fe:	9117      	str	r1, [sp, #92]	; 0x5c
 8024500:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024504:	901b      	str	r0, [sp, #108]	; 0x6c
 8024506:	6850      	ldr	r0, [r2, #4]
 8024508:	6812      	ldr	r2, [r2, #0]
 802450a:	fb00 1303 	mla	r3, r0, r3, r1
 802450e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024512:	930a      	str	r3, [sp, #40]	; 0x28
 8024514:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024516:	681b      	ldr	r3, [r3, #0]
 8024518:	9310      	str	r3, [sp, #64]	; 0x40
 802451a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802451e:	930b      	str	r3, [sp, #44]	; 0x2c
 8024520:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024522:	2b00      	cmp	r3, #0
 8024524:	dc03      	bgt.n	802452e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8024526:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024528:	2b00      	cmp	r3, #0
 802452a:	f340 8375 	ble.w	8024c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802452e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024530:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024534:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024538:	1e48      	subs	r0, r1, #1
 802453a:	1e57      	subs	r7, r2, #1
 802453c:	9b07      	ldr	r3, [sp, #28]
 802453e:	2b00      	cmp	r3, #0
 8024540:	f340 818e 	ble.w	8024860 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8024544:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024548:	ea4f 4326 	mov.w	r3, r6, asr #16
 802454c:	d406      	bmi.n	802455c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802454e:	4584      	cmp	ip, r0
 8024550:	da04      	bge.n	802455c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024552:	2b00      	cmp	r3, #0
 8024554:	db02      	blt.n	802455c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024556:	42bb      	cmp	r3, r7
 8024558:	f2c0 8183 	blt.w	8024862 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802455c:	f11c 0c01 	adds.w	ip, ip, #1
 8024560:	f100 8173 	bmi.w	802484a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024564:	4561      	cmp	r1, ip
 8024566:	f2c0 8170 	blt.w	802484a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802456a:	3301      	adds	r3, #1
 802456c:	f100 816d 	bmi.w	802484a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024570:	429a      	cmp	r2, r3
 8024572:	f2c0 816a 	blt.w	802484a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024576:	9b07      	ldr	r3, [sp, #28]
 8024578:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802457a:	9318      	str	r3, [sp, #96]	; 0x60
 802457c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802457e:	2b00      	cmp	r3, #0
 8024580:	f340 818c 	ble.w	802489c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024584:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8024586:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024588:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802458c:	689b      	ldr	r3, [r3, #8]
 802458e:	1422      	asrs	r2, r4, #16
 8024590:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024594:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024598:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802459c:	f100 81cd 	bmi.w	802493a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80245a0:	f103 38ff 	add.w	r8, r3, #4294967295
 80245a4:	4542      	cmp	r2, r8
 80245a6:	f280 81c8 	bge.w	802493a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80245aa:	f1bc 0f00 	cmp.w	ip, #0
 80245ae:	f2c0 81c4 	blt.w	802493a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80245b2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80245b6:	45c4      	cmp	ip, r8
 80245b8:	f280 81bf 	bge.w	802493a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80245bc:	b21b      	sxth	r3, r3
 80245be:	fb0c 2203 	mla	r2, ip, r3, r2
 80245c2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80245c4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80245c8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80245cc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80245d0:	2800      	cmp	r0, #0
 80245d2:	f000 81a9 	beq.w	8024928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80245d6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80245da:	950c      	str	r5, [sp, #48]	; 0x30
 80245dc:	0e2d      	lsrs	r5, r5, #24
 80245de:	9513      	str	r5, [sp, #76]	; 0x4c
 80245e0:	b181      	cbz	r1, 8024604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80245e2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80245e6:	3b01      	subs	r3, #1
 80245e8:	009b      	lsls	r3, r3, #2
 80245ea:	3304      	adds	r3, #4
 80245ec:	eb08 0c03 	add.w	ip, r8, r3
 80245f0:	f858 3003 	ldr.w	r3, [r8, r3]
 80245f4:	9308      	str	r3, [sp, #32]
 80245f6:	0e1b      	lsrs	r3, r3, #24
 80245f8:	9311      	str	r3, [sp, #68]	; 0x44
 80245fa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80245fe:	930d      	str	r3, [sp, #52]	; 0x34
 8024600:	0e1b      	lsrs	r3, r3, #24
 8024602:	9314      	str	r3, [sp, #80]	; 0x50
 8024604:	b280      	uxth	r0, r0
 8024606:	b289      	uxth	r1, r1
 8024608:	fb00 f901 	mul.w	r9, r0, r1
 802460c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024610:	0100      	lsls	r0, r0, #4
 8024612:	eba0 0809 	sub.w	r8, r0, r9
 8024616:	b289      	uxth	r1, r1
 8024618:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802461c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802461e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024620:	fa1f f888 	uxth.w	r8, r8
 8024624:	1a5b      	subs	r3, r3, r1
 8024626:	b29b      	uxth	r3, r3
 8024628:	fb08 f000 	mul.w	r0, r8, r0
 802462c:	fb03 000e 	mla	r0, r3, lr, r0
 8024630:	fb01 0005 	mla	r0, r1, r5, r0
 8024634:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024636:	fb09 0005 	mla	r0, r9, r5, r0
 802463a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802463e:	2800      	cmp	r0, #0
 8024640:	f000 80fa 	beq.w	8024838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024644:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024648:	d01b      	beq.n	8024682 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802464a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802464e:	fb0e fa0a 	mul.w	sl, lr, sl
 8024652:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024656:	fb0e fe02 	mul.w	lr, lr, r2
 802465a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802465e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024662:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024666:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802466a:	4452      	add	r2, sl
 802466c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024670:	0a12      	lsrs	r2, r2, #8
 8024672:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024676:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802467a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802467e:	ea42 020c 	orr.w	r2, r2, ip
 8024682:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024684:	2dff      	cmp	r5, #255	; 0xff
 8024686:	d021      	beq.n	80246cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024688:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802468a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802468e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024690:	fb05 fb0b 	mul.w	fp, r5, fp
 8024694:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024696:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802469a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802469c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80246a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80246a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80246ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80246b0:	44de      	add	lr, fp
 80246b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80246b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80246ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80246be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80246c6:	ea4e 050a 	orr.w	r5, lr, sl
 80246ca:	950c      	str	r5, [sp, #48]	; 0x30
 80246cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80246ce:	2dff      	cmp	r5, #255	; 0xff
 80246d0:	d021      	beq.n	8024716 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80246d2:	9d08      	ldr	r5, [sp, #32]
 80246d4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80246d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80246da:	fb05 fb0b 	mul.w	fp, r5, fp
 80246de:	9d08      	ldr	r5, [sp, #32]
 80246e0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80246e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80246e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80246ea:	fb05 fa0a 	mul.w	sl, r5, sl
 80246ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246f2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80246f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80246fa:	44de      	add	lr, fp
 80246fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024700:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024704:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024708:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802470c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024710:	ea4e 050a 	orr.w	r5, lr, sl
 8024714:	9508      	str	r5, [sp, #32]
 8024716:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024718:	2dff      	cmp	r5, #255	; 0xff
 802471a:	d021      	beq.n	8024760 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802471c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802471e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024722:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024724:	fb05 fb0b 	mul.w	fp, r5, fp
 8024728:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802472a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802472e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024730:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024734:	fb05 fa0a 	mul.w	sl, r5, sl
 8024738:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802473c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024740:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024744:	44de      	add	lr, fp
 8024746:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802474a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802474e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024752:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024756:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802475a:	ea4e 050a 	orr.w	r5, lr, sl
 802475e:	950d      	str	r5, [sp, #52]	; 0x34
 8024760:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024762:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024766:	9d08      	ldr	r5, [sp, #32]
 8024768:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802476c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024770:	fb03 cc0e 	mla	ip, r3, lr, ip
 8024774:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024778:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802477a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802477e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024782:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024784:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024788:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802478c:	fb08 f80e 	mul.w	r8, r8, lr
 8024790:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024794:	fb03 8202 	mla	r2, r3, r2, r8
 8024798:	9b08      	ldr	r3, [sp, #32]
 802479a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802479c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80247a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80247a2:	fb01 220a 	mla	r2, r1, sl, r2
 80247a6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80247aa:	fb09 2901 	mla	r9, r9, r1, r2
 80247ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80247b0:	883b      	ldrh	r3, [r7, #0]
 80247b2:	4342      	muls	r2, r0
 80247b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80247bc:	1c50      	adds	r0, r2, #1
 80247be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247c2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80247c6:	ea4c 0c09 	orr.w	ip, ip, r9
 80247ca:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80247ce:	1219      	asrs	r1, r3, #8
 80247d0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80247d4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80247d8:	b2c0      	uxtb	r0, r0
 80247da:	fb12 f205 	smulbb	r2, r2, r5
 80247de:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80247e2:	fb01 2100 	mla	r1, r1, r0, r2
 80247e6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80247ea:	10da      	asrs	r2, r3, #3
 80247ec:	fa5f fc8c 	uxtb.w	ip, ip
 80247f0:	00db      	lsls	r3, r3, #3
 80247f2:	fb1c fc05 	smulbb	ip, ip, r5
 80247f6:	b2db      	uxtb	r3, r3
 80247f8:	b289      	uxth	r1, r1
 80247fa:	fb03 c300 	mla	r3, r3, r0, ip
 80247fe:	fa1f fc83 	uxth.w	ip, r3
 8024802:	1c4b      	adds	r3, r1, #1
 8024804:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024808:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802480c:	fb1e fe05 	smulbb	lr, lr, r5
 8024810:	f10c 0301 	add.w	r3, ip, #1
 8024814:	fb02 e200 	mla	r2, r2, r0, lr
 8024818:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802481c:	b292      	uxth	r2, r2
 802481e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024822:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024826:	430b      	orrs	r3, r1
 8024828:	1c51      	adds	r1, r2, #1
 802482a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802482e:	0952      	lsrs	r2, r2, #5
 8024830:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024834:	4313      	orrs	r3, r2
 8024836:	803b      	strh	r3, [r7, #0]
 8024838:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802483a:	441c      	add	r4, r3
 802483c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802483e:	441e      	add	r6, r3
 8024840:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024842:	3b01      	subs	r3, #1
 8024844:	3702      	adds	r7, #2
 8024846:	9318      	str	r3, [sp, #96]	; 0x60
 8024848:	e698      	b.n	802457c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802484a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802484c:	441c      	add	r4, r3
 802484e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024850:	441e      	add	r6, r3
 8024852:	9b07      	ldr	r3, [sp, #28]
 8024854:	3b01      	subs	r3, #1
 8024856:	9307      	str	r3, [sp, #28]
 8024858:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802485a:	3302      	adds	r3, #2
 802485c:	930a      	str	r3, [sp, #40]	; 0x28
 802485e:	e66d      	b.n	802453c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024860:	d023      	beq.n	80248aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024862:	9b07      	ldr	r3, [sp, #28]
 8024864:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8024866:	3b01      	subs	r3, #1
 8024868:	fb00 4003 	mla	r0, r0, r3, r4
 802486c:	1400      	asrs	r0, r0, #16
 802486e:	f53f ae82 	bmi.w	8024576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024872:	3901      	subs	r1, #1
 8024874:	4288      	cmp	r0, r1
 8024876:	f6bf ae7e 	bge.w	8024576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802487a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802487c:	fb01 6303 	mla	r3, r1, r3, r6
 8024880:	141b      	asrs	r3, r3, #16
 8024882:	f53f ae78 	bmi.w	8024576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024886:	3a01      	subs	r2, #1
 8024888:	4293      	cmp	r3, r2
 802488a:	f6bf ae74 	bge.w	8024576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802488e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024892:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024896:	f1bb 0f00 	cmp.w	fp, #0
 802489a:	dc6c      	bgt.n	8024976 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802489c:	9b07      	ldr	r3, [sp, #28]
 802489e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80248a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80248a4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80248a8:	930a      	str	r3, [sp, #40]	; 0x28
 80248aa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80248ac:	2b00      	cmp	r3, #0
 80248ae:	f340 81b3 	ble.w	8024c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80248b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80248b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80248ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80248be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80248c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80248c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80248c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80248cc:	eef0 6a62 	vmov.f32	s13, s5
 80248d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80248d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80248d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80248dc:	ee16 4a90 	vmov	r4, s13
 80248e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80248e4:	eef0 6a43 	vmov.f32	s13, s6
 80248e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80248ec:	ee12 2a90 	vmov	r2, s5
 80248f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80248f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80248f8:	ee13 2a10 	vmov	r2, s6
 80248fc:	9329      	str	r3, [sp, #164]	; 0xa4
 80248fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024900:	fb92 f3f3 	sdiv	r3, r2, r3
 8024904:	932a      	str	r3, [sp, #168]	; 0xa8
 8024906:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024908:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802490a:	3b01      	subs	r3, #1
 802490c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024910:	9317      	str	r3, [sp, #92]	; 0x5c
 8024912:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024914:	bf08      	it	eq
 8024916:	4613      	moveq	r3, r2
 8024918:	ee16 6a90 	vmov	r6, s13
 802491c:	9307      	str	r3, [sp, #28]
 802491e:	eeb0 3a67 	vmov.f32	s6, s15
 8024922:	eef0 2a47 	vmov.f32	s5, s14
 8024926:	e5fb      	b.n	8024520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024928:	2900      	cmp	r1, #0
 802492a:	f43f ae6b 	beq.w	8024604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802492e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024932:	9308      	str	r3, [sp, #32]
 8024934:	0e1b      	lsrs	r3, r3, #24
 8024936:	9311      	str	r3, [sp, #68]	; 0x44
 8024938:	e664      	b.n	8024604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802493a:	f112 0801 	adds.w	r8, r2, #1
 802493e:	f53f af7b 	bmi.w	8024838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024942:	4543      	cmp	r3, r8
 8024944:	f6ff af78 	blt.w	8024838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024948:	f11c 0801 	adds.w	r8, ip, #1
 802494c:	f53f af74 	bmi.w	8024838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024950:	45c6      	cmp	lr, r8
 8024952:	f6ff af71 	blt.w	8024838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024956:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8024958:	9201      	str	r2, [sp, #4]
 802495a:	fa0f f28e 	sxth.w	r2, lr
 802495e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8024962:	e9cd c002 	strd	ip, r0, [sp, #8]
 8024966:	9200      	str	r2, [sp, #0]
 8024968:	b21b      	sxth	r3, r3
 802496a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802496c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802496e:	4639      	mov	r1, r7
 8024970:	f7ff fc79 	bl	8024266 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024974:	e760      	b.n	8024838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024976:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024978:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802497a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802497e:	1427      	asrs	r7, r4, #16
 8024980:	1433      	asrs	r3, r6, #16
 8024982:	fb01 7303 	mla	r3, r1, r3, r7
 8024986:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802498a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802498e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024992:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024996:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802499a:	2a00      	cmp	r2, #0
 802499c:	f000 8133 	beq.w	8024c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80249a0:	687d      	ldr	r5, [r7, #4]
 80249a2:	950e      	str	r5, [sp, #56]	; 0x38
 80249a4:	0e2d      	lsrs	r5, r5, #24
 80249a6:	9515      	str	r5, [sp, #84]	; 0x54
 80249a8:	b178      	cbz	r0, 80249ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80249aa:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80249ae:	3901      	subs	r1, #1
 80249b0:	0089      	lsls	r1, r1, #2
 80249b2:	3104      	adds	r1, #4
 80249b4:	eb07 0e01 	add.w	lr, r7, r1
 80249b8:	5879      	ldr	r1, [r7, r1]
 80249ba:	9109      	str	r1, [sp, #36]	; 0x24
 80249bc:	0e09      	lsrs	r1, r1, #24
 80249be:	9112      	str	r1, [sp, #72]	; 0x48
 80249c0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80249c4:	910f      	str	r1, [sp, #60]	; 0x3c
 80249c6:	0e09      	lsrs	r1, r1, #24
 80249c8:	9116      	str	r1, [sp, #88]	; 0x58
 80249ca:	b292      	uxth	r2, r2
 80249cc:	b280      	uxth	r0, r0
 80249ce:	fb02 f800 	mul.w	r8, r2, r0
 80249d2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80249d6:	0112      	lsls	r2, r2, #4
 80249d8:	eba2 0e08 	sub.w	lr, r2, r8
 80249dc:	b280      	uxth	r0, r0
 80249de:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80249e2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80249e4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80249e6:	fa1f fe8e 	uxth.w	lr, lr
 80249ea:	1a12      	subs	r2, r2, r0
 80249ec:	b292      	uxth	r2, r2
 80249ee:	fb0e f101 	mul.w	r1, lr, r1
 80249f2:	fb02 110c 	mla	r1, r2, ip, r1
 80249f6:	fb00 1105 	mla	r1, r0, r5, r1
 80249fa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80249fc:	fb08 1105 	mla	r1, r8, r5, r1
 8024a00:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024a04:	2900      	cmp	r1, #0
 8024a06:	f000 80f5 	beq.w	8024bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8024a0a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024a0e:	d019      	beq.n	8024a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024a10:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024a14:	fb0c fa0a 	mul.w	sl, ip, sl
 8024a18:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a1c:	fb0c fc03 	mul.w	ip, ip, r3
 8024a20:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024a24:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a28:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024a2c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024a30:	4453      	add	r3, sl
 8024a32:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024a36:	0a1b      	lsrs	r3, r3, #8
 8024a38:	0a3f      	lsrs	r7, r7, #8
 8024a3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a3e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024a42:	433b      	orrs	r3, r7
 8024a44:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a46:	2dff      	cmp	r5, #255	; 0xff
 8024a48:	d020      	beq.n	8024a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8024a4a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a4c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a50:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a52:	436f      	muls	r7, r5
 8024a54:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a56:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024a5a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a5c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024a60:	fb05 fa0a 	mul.w	sl, r5, sl
 8024a64:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024a68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a6c:	44bc      	add	ip, r7
 8024a6e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024a72:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024a76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a86:	ea4c 050a 	orr.w	r5, ip, sl
 8024a8a:	950e      	str	r5, [sp, #56]	; 0x38
 8024a8c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a8e:	2dff      	cmp	r5, #255	; 0xff
 8024a90:	d020      	beq.n	8024ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024a92:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a94:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a98:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a9a:	436f      	muls	r7, r5
 8024a9c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024aa2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024aa4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024aa8:	fb05 fa0a 	mul.w	sl, r5, sl
 8024aac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024ab0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ab4:	44bc      	add	ip, r7
 8024ab6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024aba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024abe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024ac2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ac6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024aca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ace:	ea4c 050a 	orr.w	r5, ip, sl
 8024ad2:	9509      	str	r5, [sp, #36]	; 0x24
 8024ad4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024ad6:	2dff      	cmp	r5, #255	; 0xff
 8024ad8:	d020      	beq.n	8024b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8024ada:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024adc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024ae0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024ae2:	436f      	muls	r7, r5
 8024ae4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024ae6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024aea:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024aec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024af0:	fb05 fa0a 	mul.w	sl, r5, sl
 8024af4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024af8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024afc:	44bc      	add	ip, r7
 8024afe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b02:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b16:	ea4c 050a 	orr.w	r5, ip, sl
 8024b1a:	950f      	str	r5, [sp, #60]	; 0x3c
 8024b1c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024b1e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024b22:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024b24:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024b28:	fb0e f707 	mul.w	r7, lr, r7
 8024b2c:	fb02 770c 	mla	r7, r2, ip, r7
 8024b30:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b34:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024b36:	fb00 770c 	mla	r7, r0, ip, r7
 8024b3a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b3e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024b40:	fb08 770c 	mla	r7, r8, ip, r7
 8024b44:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024b48:	fb0e fe0c 	mul.w	lr, lr, ip
 8024b4c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b50:	fb02 e303 	mla	r3, r2, r3, lr
 8024b54:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024b56:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024b58:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024b5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024b5e:	fb00 330a 	mla	r3, r0, sl, r3
 8024b62:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024b66:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024b6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024b6c:	f8b9 0000 	ldrh.w	r0, [r9]
 8024b70:	4359      	muls	r1, r3
 8024b72:	0a3f      	lsrs	r7, r7, #8
 8024b74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b78:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024b7c:	1c4b      	adds	r3, r1, #1
 8024b7e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024b82:	ea47 070c 	orr.w	r7, r7, ip
 8024b86:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024b8a:	1202      	asrs	r2, r0, #8
 8024b8c:	0c3b      	lsrs	r3, r7, #16
 8024b8e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024b92:	b2c9      	uxtb	r1, r1
 8024b94:	fb13 f305 	smulbb	r3, r3, r5
 8024b98:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024b9c:	fb02 3201 	mla	r2, r2, r1, r3
 8024ba0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024ba4:	10c3      	asrs	r3, r0, #3
 8024ba6:	b2ff      	uxtb	r7, r7
 8024ba8:	00c0      	lsls	r0, r0, #3
 8024baa:	b2c0      	uxtb	r0, r0
 8024bac:	fb17 f705 	smulbb	r7, r7, r5
 8024bb0:	fb00 7001 	mla	r0, r0, r1, r7
 8024bb4:	b292      	uxth	r2, r2
 8024bb6:	fb1c fc05 	smulbb	ip, ip, r5
 8024bba:	b280      	uxth	r0, r0
 8024bbc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024bc0:	fb03 c301 	mla	r3, r3, r1, ip
 8024bc4:	1c51      	adds	r1, r2, #1
 8024bc6:	f100 0c01 	add.w	ip, r0, #1
 8024bca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024bce:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024bd2:	b29b      	uxth	r3, r3
 8024bd4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024bd8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024bdc:	ea4c 0202 	orr.w	r2, ip, r2
 8024be0:	f103 0c01 	add.w	ip, r3, #1
 8024be4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024be8:	095b      	lsrs	r3, r3, #5
 8024bea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024bee:	431a      	orrs	r2, r3
 8024bf0:	f8a9 2000 	strh.w	r2, [r9]
 8024bf4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024bf6:	441c      	add	r4, r3
 8024bf8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024bfa:	f109 0902 	add.w	r9, r9, #2
 8024bfe:	441e      	add	r6, r3
 8024c00:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024c04:	e647      	b.n	8024896 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024c06:	2800      	cmp	r0, #0
 8024c08:	f43f aedf 	beq.w	80249ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024c0c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024c10:	9109      	str	r1, [sp, #36]	; 0x24
 8024c12:	0e09      	lsrs	r1, r1, #24
 8024c14:	9112      	str	r1, [sp, #72]	; 0x48
 8024c16:	e6d8      	b.n	80249ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024c18:	b01d      	add	sp, #116	; 0x74
 8024c1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024c1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024c1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c22:	b085      	sub	sp, #20
 8024c24:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024c28:	9102      	str	r1, [sp, #8]
 8024c2a:	2c00      	cmp	r4, #0
 8024c2c:	fb04 7103 	mla	r1, r4, r3, r7
 8024c30:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024c34:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024c38:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024c3c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024c40:	f2c0 810c 	blt.w	8024e5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024c44:	45a6      	cmp	lr, r4
 8024c46:	f340 8109 	ble.w	8024e5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024c4a:	2f00      	cmp	r7, #0
 8024c4c:	f2c0 8104 	blt.w	8024e58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024c50:	42bb      	cmp	r3, r7
 8024c52:	f340 8101 	ble.w	8024e58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024c56:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024c5a:	1c7a      	adds	r2, r7, #1
 8024c5c:	f100 8101 	bmi.w	8024e62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024c60:	4293      	cmp	r3, r2
 8024c62:	f340 80fe 	ble.w	8024e62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024c66:	2e00      	cmp	r6, #0
 8024c68:	f000 80fd 	beq.w	8024e66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024c6c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024c70:	3401      	adds	r4, #1
 8024c72:	f100 80fc 	bmi.w	8024e6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024c76:	45a6      	cmp	lr, r4
 8024c78:	f340 80f9 	ble.w	8024e6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024c7c:	2800      	cmp	r0, #0
 8024c7e:	f000 80f9 	beq.w	8024e74 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024c82:	2f00      	cmp	r7, #0
 8024c84:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024c88:	f2c0 80ef 	blt.w	8024e6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024c8c:	42bb      	cmp	r3, r7
 8024c8e:	f340 80ec 	ble.w	8024e6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024c92:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024c96:	3701      	adds	r7, #1
 8024c98:	f100 80ef 	bmi.w	8024e7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024c9c:	42bb      	cmp	r3, r7
 8024c9e:	f340 80ec 	ble.w	8024e7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024ca2:	2e00      	cmp	r6, #0
 8024ca4:	f000 80eb 	beq.w	8024e7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024ca8:	6852      	ldr	r2, [r2, #4]
 8024caa:	b2b6      	uxth	r6, r6
 8024cac:	b280      	uxth	r0, r0
 8024cae:	fb00 fe06 	mul.w	lr, r0, r6
 8024cb2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024cb6:	0136      	lsls	r6, r6, #4
 8024cb8:	eba6 070e 	sub.w	r7, r6, lr
 8024cbc:	b280      	uxth	r0, r0
 8024cbe:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024cc2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024cc6:	b2bf      	uxth	r7, r7
 8024cc8:	1a1b      	subs	r3, r3, r0
 8024cca:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024cce:	b29b      	uxth	r3, r3
 8024cd0:	fb07 f60a 	mul.w	r6, r7, sl
 8024cd4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024cd8:	fb0b 6603 	mla	r6, fp, r3, r6
 8024cdc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024ce0:	fb00 6609 	mla	r6, r0, r9, r6
 8024ce4:	fb0e 6608 	mla	r6, lr, r8, r6
 8024ce8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024cec:	9600      	str	r6, [sp, #0]
 8024cee:	2e00      	cmp	r6, #0
 8024cf0:	f000 80af 	beq.w	8024e52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024cf4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024cf8:	fb0b fc0c 	mul.w	ip, fp, ip
 8024cfc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024d00:	fb0b f505 	mul.w	r5, fp, r5
 8024d04:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024d08:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024d0c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024d10:	44dc      	add	ip, fp
 8024d12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d16:	9501      	str	r5, [sp, #4]
 8024d18:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024d1c:	9503      	str	r5, [sp, #12]
 8024d1e:	9d01      	ldr	r5, [sp, #4]
 8024d20:	9e02      	ldr	r6, [sp, #8]
 8024d22:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024d26:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024d2a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024d2e:	fb0a fc0c 	mul.w	ip, sl, ip
 8024d32:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024d36:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024d3a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024d3e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024d42:	4465      	add	r5, ip
 8024d44:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024d48:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024d4c:	fb09 fc0c 	mul.w	ip, r9, ip
 8024d50:	fb09 f904 	mul.w	r9, r9, r4
 8024d54:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024d58:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024d5c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024d60:	fb08 f404 	mul.w	r4, r8, r4
 8024d64:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024d68:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024d6c:	fb08 f802 	mul.w	r8, r8, r2
 8024d70:	fb0a fa01 	mul.w	sl, sl, r1
 8024d74:	0a22      	lsrs	r2, r4, #8
 8024d76:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024d7a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024d7e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024d82:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024d86:	4414      	add	r4, r2
 8024d88:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024d8c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024d90:	0a2d      	lsrs	r5, r5, #8
 8024d92:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024d96:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024d9a:	9a03      	ldr	r2, [sp, #12]
 8024d9c:	8836      	ldrh	r6, [r6, #0]
 8024d9e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024da2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024da6:	437d      	muls	r5, r7
 8024da8:	4461      	add	r1, ip
 8024daa:	0a24      	lsrs	r4, r4, #8
 8024dac:	fb02 5503 	mla	r5, r2, r3, r5
 8024db0:	0a09      	lsrs	r1, r1, #8
 8024db2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024db6:	fb04 540e 	mla	r4, r4, lr, r5
 8024dba:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024dbe:	fb01 4100 	mla	r1, r1, r0, r4
 8024dc2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024dc6:	0a09      	lsrs	r1, r1, #8
 8024dc8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024dcc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024dd0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024dd4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024dd8:	fb07 f70a 	mul.w	r7, r7, sl
 8024ddc:	fb03 7101 	mla	r1, r3, r1, r7
 8024de0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024de4:	9b00      	ldr	r3, [sp, #0]
 8024de6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024dea:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024dee:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024df2:	fb00 e101 	mla	r1, r0, r1, lr
 8024df6:	43da      	mvns	r2, r3
 8024df8:	1233      	asrs	r3, r6, #8
 8024dfa:	b2d2      	uxtb	r2, r2
 8024dfc:	10f0      	asrs	r0, r6, #3
 8024dfe:	0a09      	lsrs	r1, r1, #8
 8024e00:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024e04:	00f6      	lsls	r6, r6, #3
 8024e06:	4353      	muls	r3, r2
 8024e08:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024e0c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024e10:	b2f6      	uxtb	r6, r6
 8024e12:	4321      	orrs	r1, r4
 8024e14:	4350      	muls	r0, r2
 8024e16:	4356      	muls	r6, r2
 8024e18:	1c5a      	adds	r2, r3, #1
 8024e1a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024e1e:	0c0b      	lsrs	r3, r1, #16
 8024e20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024e24:	1c42      	adds	r2, r0, #1
 8024e26:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024e2a:	0a0a      	lsrs	r2, r1, #8
 8024e2c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024e30:	021b      	lsls	r3, r3, #8
 8024e32:	00d2      	lsls	r2, r2, #3
 8024e34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024e38:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024e3c:	4313      	orrs	r3, r2
 8024e3e:	1c72      	adds	r2, r6, #1
 8024e40:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024e44:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024e48:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024e4c:	4319      	orrs	r1, r3
 8024e4e:	9b02      	ldr	r3, [sp, #8]
 8024e50:	8019      	strh	r1, [r3, #0]
 8024e52:	b005      	add	sp, #20
 8024e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024e58:	2500      	movs	r5, #0
 8024e5a:	e6fe      	b.n	8024c5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024e5c:	2100      	movs	r1, #0
 8024e5e:	460d      	mov	r5, r1
 8024e60:	e706      	b.n	8024c70 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024e62:	2100      	movs	r1, #0
 8024e64:	e704      	b.n	8024c70 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024e66:	4631      	mov	r1, r6
 8024e68:	e702      	b.n	8024c70 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024e6a:	2400      	movs	r4, #0
 8024e6c:	e713      	b.n	8024c96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024e6e:	2200      	movs	r2, #0
 8024e70:	4614      	mov	r4, r2
 8024e72:	e71a      	b.n	8024caa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024e74:	4602      	mov	r2, r0
 8024e76:	4604      	mov	r4, r0
 8024e78:	e717      	b.n	8024caa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024e7a:	2200      	movs	r2, #0
 8024e7c:	e715      	b.n	8024caa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024e7e:	4632      	mov	r2, r6
 8024e80:	e713      	b.n	8024caa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e88:	b09b      	sub	sp, #108	; 0x6c
 8024e8a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024e8e:	9218      	str	r2, [sp, #96]	; 0x60
 8024e90:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024e92:	9116      	str	r1, [sp, #88]	; 0x58
 8024e94:	9307      	str	r3, [sp, #28]
 8024e96:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024e9a:	9019      	str	r0, [sp, #100]	; 0x64
 8024e9c:	6850      	ldr	r0, [r2, #4]
 8024e9e:	6812      	ldr	r2, [r2, #0]
 8024ea0:	fb00 1303 	mla	r3, r0, r3, r1
 8024ea4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024ea8:	930a      	str	r3, [sp, #40]	; 0x28
 8024eaa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024eac:	681b      	ldr	r3, [r3, #0]
 8024eae:	930f      	str	r3, [sp, #60]	; 0x3c
 8024eb0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024eb2:	2b00      	cmp	r3, #0
 8024eb4:	dc03      	bgt.n	8024ebe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024eb6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024eb8:	2b00      	cmp	r3, #0
 8024eba:	f340 8386 	ble.w	80255ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024ebe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024ec0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024ec4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024ec8:	1e48      	subs	r0, r1, #1
 8024eca:	1e57      	subs	r7, r2, #1
 8024ecc:	9b07      	ldr	r3, [sp, #28]
 8024ece:	2b00      	cmp	r3, #0
 8024ed0:	f340 8166 	ble.w	80251a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024ed4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024ed8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024edc:	d406      	bmi.n	8024eec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024ede:	4584      	cmp	ip, r0
 8024ee0:	da04      	bge.n	8024eec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024ee2:	2b00      	cmp	r3, #0
 8024ee4:	db02      	blt.n	8024eec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024ee6:	42bb      	cmp	r3, r7
 8024ee8:	f2c0 815b 	blt.w	80251a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024eec:	f11c 0c01 	adds.w	ip, ip, #1
 8024ef0:	f100 814b 	bmi.w	802518a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024ef4:	4561      	cmp	r1, ip
 8024ef6:	f2c0 8148 	blt.w	802518a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024efa:	3301      	adds	r3, #1
 8024efc:	f100 8145 	bmi.w	802518a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f00:	429a      	cmp	r2, r3
 8024f02:	f2c0 8142 	blt.w	802518a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f06:	9b07      	ldr	r3, [sp, #28]
 8024f08:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024f0a:	9317      	str	r3, [sp, #92]	; 0x5c
 8024f0c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024f0e:	2b00      	cmp	r3, #0
 8024f10:	f340 8165 	ble.w	80251de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024f14:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8024f16:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f18:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024f1c:	689b      	ldr	r3, [r3, #8]
 8024f1e:	1422      	asrs	r2, r4, #16
 8024f20:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024f24:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024f28:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024f2c:	f100 81d5 	bmi.w	80252da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024f30:	f103 38ff 	add.w	r8, r3, #4294967295
 8024f34:	4542      	cmp	r2, r8
 8024f36:	f280 81d0 	bge.w	80252da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024f3a:	f1bc 0f00 	cmp.w	ip, #0
 8024f3e:	f2c0 81cc 	blt.w	80252da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024f42:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024f46:	45c4      	cmp	ip, r8
 8024f48:	f280 81c7 	bge.w	80252da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024f4c:	b21b      	sxth	r3, r3
 8024f4e:	fb0c 2203 	mla	r2, ip, r3, r2
 8024f52:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024f54:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024f58:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024f5c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024f60:	2900      	cmp	r1, #0
 8024f62:	f000 8182 	beq.w	802526a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024f66:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024f6a:	950b      	str	r5, [sp, #44]	; 0x2c
 8024f6c:	0e2d      	lsrs	r5, r5, #24
 8024f6e:	9512      	str	r5, [sp, #72]	; 0x48
 8024f70:	b180      	cbz	r0, 8024f94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024f72:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024f76:	3b01      	subs	r3, #1
 8024f78:	009b      	lsls	r3, r3, #2
 8024f7a:	3304      	adds	r3, #4
 8024f7c:	eb08 0c03 	add.w	ip, r8, r3
 8024f80:	f858 3003 	ldr.w	r3, [r8, r3]
 8024f84:	9308      	str	r3, [sp, #32]
 8024f86:	0e1b      	lsrs	r3, r3, #24
 8024f88:	9310      	str	r3, [sp, #64]	; 0x40
 8024f8a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024f8e:	930c      	str	r3, [sp, #48]	; 0x30
 8024f90:	0e1b      	lsrs	r3, r3, #24
 8024f92:	9313      	str	r3, [sp, #76]	; 0x4c
 8024f94:	b289      	uxth	r1, r1
 8024f96:	b280      	uxth	r0, r0
 8024f98:	fb01 f900 	mul.w	r9, r1, r0
 8024f9c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024fa0:	0109      	lsls	r1, r1, #4
 8024fa2:	eba1 0809 	sub.w	r8, r1, r9
 8024fa6:	b280      	uxth	r0, r0
 8024fa8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024fac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8024fae:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024fb0:	fa1f f888 	uxth.w	r8, r8
 8024fb4:	1a09      	subs	r1, r1, r0
 8024fb6:	b289      	uxth	r1, r1
 8024fb8:	fb08 f303 	mul.w	r3, r8, r3
 8024fbc:	fb01 330e 	mla	r3, r1, lr, r3
 8024fc0:	fb00 3305 	mla	r3, r0, r5, r3
 8024fc4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024fc6:	fb09 3305 	mla	r3, r9, r5, r3
 8024fca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024fce:	2b00      	cmp	r3, #0
 8024fd0:	f000 80d2 	beq.w	8025178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024fd4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024fd8:	d01b      	beq.n	8025012 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024fda:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024fde:	fb0e fa0a 	mul.w	sl, lr, sl
 8024fe2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024fe6:	fb0e fe02 	mul.w	lr, lr, r2
 8024fea:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024fee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024ff2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024ff6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024ffa:	4452      	add	r2, sl
 8024ffc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025000:	0a12      	lsrs	r2, r2, #8
 8025002:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025006:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802500a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802500e:	ea42 020c 	orr.w	r2, r2, ip
 8025012:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025014:	2dff      	cmp	r5, #255	; 0xff
 8025016:	d021      	beq.n	802505c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8025018:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802501a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802501e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025020:	fb05 fb0b 	mul.w	fp, r5, fp
 8025024:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025026:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802502a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802502c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025030:	fb05 fa0a 	mul.w	sl, r5, sl
 8025034:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025038:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802503c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025040:	44de      	add	lr, fp
 8025042:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025046:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802504a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802504e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025052:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025056:	ea4e 050a 	orr.w	r5, lr, sl
 802505a:	950b      	str	r5, [sp, #44]	; 0x2c
 802505c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802505e:	2dff      	cmp	r5, #255	; 0xff
 8025060:	d021      	beq.n	80250a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025062:	9d08      	ldr	r5, [sp, #32]
 8025064:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025068:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802506a:	fb05 fb0b 	mul.w	fp, r5, fp
 802506e:	9d08      	ldr	r5, [sp, #32]
 8025070:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025074:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025076:	fb05 fa0e 	mul.w	sl, r5, lr
 802507a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802507e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025082:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025086:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802508a:	44de      	add	lr, fp
 802508c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025090:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025094:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025098:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802509c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80250a0:	ea4e 050a 	orr.w	r5, lr, sl
 80250a4:	9508      	str	r5, [sp, #32]
 80250a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80250a8:	2dff      	cmp	r5, #255	; 0xff
 80250aa:	d021      	beq.n	80250f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80250ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80250ae:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80250b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80250b4:	fb05 fb0b 	mul.w	fp, r5, fp
 80250b8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80250ba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80250be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80250c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80250c4:	fb05 fa0a 	mul.w	sl, r5, sl
 80250c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250cc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80250d0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80250d4:	44de      	add	lr, fp
 80250d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80250da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80250de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80250e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80250ea:	ea4e 050a 	orr.w	r5, lr, sl
 80250ee:	950c      	str	r5, [sp, #48]	; 0x30
 80250f0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80250f2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80250f6:	9d08      	ldr	r5, [sp, #32]
 80250f8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80250fc:	fb08 fc0c 	mul.w	ip, r8, ip
 8025100:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025104:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025108:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802510a:	fb00 cc0e 	mla	ip, r0, lr, ip
 802510e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025112:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025114:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025118:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802511c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025120:	fb08 f80e 	mul.w	r8, r8, lr
 8025124:	fb01 8202 	mla	r2, r1, r2, r8
 8025128:	9908      	ldr	r1, [sp, #32]
 802512a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802512e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025130:	fb00 220a 	mla	r2, r0, sl, r2
 8025134:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8025138:	fb09 2900 	mla	r9, r9, r0, r2
 802513c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025140:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025144:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025148:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802514c:	ea4c 0c09 	orr.w	ip, ip, r9
 8025150:	2bff      	cmp	r3, #255	; 0xff
 8025152:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8025156:	f040 8091 	bne.w	802527c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802515a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802515e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8025162:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025166:	f022 0207 	bic.w	r2, r2, #7
 802516a:	431a      	orrs	r2, r3
 802516c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025170:	ea4c 0c02 	orr.w	ip, ip, r2
 8025174:	f8a7 c000 	strh.w	ip, [r7]
 8025178:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802517a:	441c      	add	r4, r3
 802517c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802517e:	441e      	add	r6, r3
 8025180:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025182:	3b01      	subs	r3, #1
 8025184:	3702      	adds	r7, #2
 8025186:	9317      	str	r3, [sp, #92]	; 0x5c
 8025188:	e6c0      	b.n	8024f0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802518a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802518c:	441c      	add	r4, r3
 802518e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025190:	441e      	add	r6, r3
 8025192:	9b07      	ldr	r3, [sp, #28]
 8025194:	3b01      	subs	r3, #1
 8025196:	9307      	str	r3, [sp, #28]
 8025198:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802519a:	3302      	adds	r3, #2
 802519c:	930a      	str	r3, [sp, #40]	; 0x28
 802519e:	e695      	b.n	8024ecc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80251a0:	d024      	beq.n	80251ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80251a2:	9b07      	ldr	r3, [sp, #28]
 80251a4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80251a6:	3b01      	subs	r3, #1
 80251a8:	fb00 4003 	mla	r0, r0, r3, r4
 80251ac:	1400      	asrs	r0, r0, #16
 80251ae:	f53f aeaa 	bmi.w	8024f06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80251b2:	3901      	subs	r1, #1
 80251b4:	4288      	cmp	r0, r1
 80251b6:	f6bf aea6 	bge.w	8024f06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80251ba:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80251bc:	fb01 6303 	mla	r3, r1, r3, r6
 80251c0:	141b      	asrs	r3, r3, #16
 80251c2:	f53f aea0 	bmi.w	8024f06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80251c6:	3a01      	subs	r2, #1
 80251c8:	4293      	cmp	r3, r2
 80251ca:	f6bf ae9c 	bge.w	8024f06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80251ce:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80251d2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80251d6:	f1bb 0f00 	cmp.w	fp, #0
 80251da:	f300 809a 	bgt.w	8025312 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80251de:	9b07      	ldr	r3, [sp, #28]
 80251e0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80251e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80251e6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80251ea:	930a      	str	r3, [sp, #40]	; 0x28
 80251ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80251ee:	2b00      	cmp	r3, #0
 80251f0:	f340 81eb 	ble.w	80255ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80251f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80251f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80251fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025200:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025202:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025206:	ee31 1a05 	vadd.f32	s2, s2, s10
 802520a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802520e:	eef0 6a62 	vmov.f32	s13, s5
 8025212:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025216:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802521a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802521e:	ee16 4a90 	vmov	r4, s13
 8025222:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025226:	eef0 6a43 	vmov.f32	s13, s6
 802522a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802522e:	ee12 2a90 	vmov	r2, s5
 8025232:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025236:	fb92 f3f3 	sdiv	r3, r2, r3
 802523a:	ee13 2a10 	vmov	r2, s6
 802523e:	9327      	str	r3, [sp, #156]	; 0x9c
 8025240:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025242:	fb92 f3f3 	sdiv	r3, r2, r3
 8025246:	9328      	str	r3, [sp, #160]	; 0xa0
 8025248:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802524a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802524c:	3b01      	subs	r3, #1
 802524e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025252:	9316      	str	r3, [sp, #88]	; 0x58
 8025254:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025256:	bf08      	it	eq
 8025258:	4613      	moveq	r3, r2
 802525a:	ee16 6a90 	vmov	r6, s13
 802525e:	9307      	str	r3, [sp, #28]
 8025260:	eeb0 3a67 	vmov.f32	s6, s15
 8025264:	eef0 2a47 	vmov.f32	s5, s14
 8025268:	e622      	b.n	8024eb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802526a:	2800      	cmp	r0, #0
 802526c:	f43f ae92 	beq.w	8024f94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025270:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025274:	9308      	str	r3, [sp, #32]
 8025276:	0e1b      	lsrs	r3, r3, #24
 8025278:	9310      	str	r3, [sp, #64]	; 0x40
 802527a:	e68b      	b.n	8024f94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802527c:	8839      	ldrh	r1, [r7, #0]
 802527e:	4dd4      	ldr	r5, [pc, #848]	; (80255d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025280:	43db      	mvns	r3, r3
 8025282:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8025286:	fa5f f883 	uxtb.w	r8, r3
 802528a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802528e:	fb0e fe08 	mul.w	lr, lr, r8
 8025292:	10c8      	asrs	r0, r1, #3
 8025294:	00cb      	lsls	r3, r1, #3
 8025296:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802529a:	f10e 0101 	add.w	r1, lr, #1
 802529e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80252a2:	fb00 f008 	mul.w	r0, r0, r8
 80252a6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80252aa:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80252ae:	f100 0e01 	add.w	lr, r0, #1
 80252b2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80252b6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80252ba:	b2db      	uxtb	r3, r3
 80252bc:	b2c9      	uxtb	r1, r1
 80252be:	00d2      	lsls	r2, r2, #3
 80252c0:	fb03 f308 	mul.w	r3, r3, r8
 80252c4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80252c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80252cc:	430a      	orrs	r2, r1
 80252ce:	1c59      	adds	r1, r3, #1
 80252d0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80252d4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80252d8:	e748      	b.n	802516c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80252da:	f112 0801 	adds.w	r8, r2, #1
 80252de:	f53f af4b 	bmi.w	8025178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80252e2:	4543      	cmp	r3, r8
 80252e4:	f6ff af48 	blt.w	8025178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80252e8:	f11c 0801 	adds.w	r8, ip, #1
 80252ec:	f53f af44 	bmi.w	8025178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80252f0:	45c6      	cmp	lr, r8
 80252f2:	f6ff af41 	blt.w	8025178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80252f6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80252fa:	fa0f f28e 	sxth.w	r2, lr
 80252fe:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025302:	9200      	str	r2, [sp, #0]
 8025304:	b21b      	sxth	r3, r3
 8025306:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025308:	9819      	ldr	r0, [sp, #100]	; 0x64
 802530a:	4639      	mov	r1, r7
 802530c:	f7ff fc87 	bl	8024c1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025310:	e732      	b.n	8025178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025312:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025314:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025316:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802531a:	1421      	asrs	r1, r4, #16
 802531c:	1433      	asrs	r3, r6, #16
 802531e:	fb07 1303 	mla	r3, r7, r3, r1
 8025322:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025324:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8025328:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802532c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025330:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025334:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025338:	2a00      	cmp	r2, #0
 802533a:	f000 8107 	beq.w	802554c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802533e:	684d      	ldr	r5, [r1, #4]
 8025340:	950d      	str	r5, [sp, #52]	; 0x34
 8025342:	0e2d      	lsrs	r5, r5, #24
 8025344:	9514      	str	r5, [sp, #80]	; 0x50
 8025346:	b178      	cbz	r0, 8025368 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025348:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802534c:	3f01      	subs	r7, #1
 802534e:	00bf      	lsls	r7, r7, #2
 8025350:	3704      	adds	r7, #4
 8025352:	eb01 0e07 	add.w	lr, r1, r7
 8025356:	59c9      	ldr	r1, [r1, r7]
 8025358:	9109      	str	r1, [sp, #36]	; 0x24
 802535a:	0e09      	lsrs	r1, r1, #24
 802535c:	9111      	str	r1, [sp, #68]	; 0x44
 802535e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025362:	910e      	str	r1, [sp, #56]	; 0x38
 8025364:	0e09      	lsrs	r1, r1, #24
 8025366:	9115      	str	r1, [sp, #84]	; 0x54
 8025368:	b292      	uxth	r2, r2
 802536a:	b280      	uxth	r0, r0
 802536c:	fb02 f900 	mul.w	r9, r2, r0
 8025370:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025374:	0112      	lsls	r2, r2, #4
 8025376:	eba2 0e09 	sub.w	lr, r2, r9
 802537a:	b280      	uxth	r0, r0
 802537c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025380:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025382:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025384:	fa1f fe8e 	uxth.w	lr, lr
 8025388:	1a09      	subs	r1, r1, r0
 802538a:	b289      	uxth	r1, r1
 802538c:	fb0e f202 	mul.w	r2, lr, r2
 8025390:	fb01 220c 	mla	r2, r1, ip, r2
 8025394:	fb00 2205 	mla	r2, r0, r5, r2
 8025398:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802539a:	fb09 2205 	mla	r2, r9, r5, r2
 802539e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80253a2:	2a00      	cmp	r2, #0
 80253a4:	f000 80c9 	beq.w	802553a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80253a8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80253ac:	d019      	beq.n	80253e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80253ae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80253b2:	fb0c fa0a 	mul.w	sl, ip, sl
 80253b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80253ba:	fb0c fc03 	mul.w	ip, ip, r3
 80253be:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80253c2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80253c6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80253ca:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80253ce:	4453      	add	r3, sl
 80253d0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80253d4:	0a1b      	lsrs	r3, r3, #8
 80253d6:	0a3f      	lsrs	r7, r7, #8
 80253d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80253dc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80253e0:	433b      	orrs	r3, r7
 80253e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80253e4:	2dff      	cmp	r5, #255	; 0xff
 80253e6:	d020      	beq.n	802542a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80253e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80253ea:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80253ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80253f0:	436f      	muls	r7, r5
 80253f2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80253f4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80253f8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80253fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80253fe:	fb05 fa0a 	mul.w	sl, r5, sl
 8025402:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025406:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802540a:	44bc      	add	ip, r7
 802540c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025410:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025414:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025418:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802541c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025420:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025424:	ea4c 050a 	orr.w	r5, ip, sl
 8025428:	950d      	str	r5, [sp, #52]	; 0x34
 802542a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802542c:	2dff      	cmp	r5, #255	; 0xff
 802542e:	d020      	beq.n	8025472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025430:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025432:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025436:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025438:	436f      	muls	r7, r5
 802543a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802543c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025440:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025442:	fb05 fa0c 	mul.w	sl, r5, ip
 8025446:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802544a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802544e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025452:	44bc      	add	ip, r7
 8025454:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025458:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802545c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025460:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025464:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025468:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802546c:	ea4c 050a 	orr.w	r5, ip, sl
 8025470:	9509      	str	r5, [sp, #36]	; 0x24
 8025472:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025474:	2dff      	cmp	r5, #255	; 0xff
 8025476:	d020      	beq.n	80254ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8025478:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802547a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802547e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025480:	436f      	muls	r7, r5
 8025482:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025484:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025488:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802548a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802548e:	fb05 fa0a 	mul.w	sl, r5, sl
 8025492:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025496:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802549a:	44bc      	add	ip, r7
 802549c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80254a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80254a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80254ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80254b4:	ea4c 050a 	orr.w	r5, ip, sl
 80254b8:	950e      	str	r5, [sp, #56]	; 0x38
 80254ba:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80254bc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80254c0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80254c2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80254c6:	fb0e f707 	mul.w	r7, lr, r7
 80254ca:	fb01 770c 	mla	r7, r1, ip, r7
 80254ce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80254d2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80254d4:	fb00 770c 	mla	r7, r0, ip, r7
 80254d8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80254dc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80254de:	fb09 770c 	mla	r7, r9, ip, r7
 80254e2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80254e6:	fb0e fe0c 	mul.w	lr, lr, ip
 80254ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80254ee:	fb01 e303 	mla	r3, r1, r3, lr
 80254f2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80254f4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80254f8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80254fa:	fb00 330a 	mla	r3, r0, sl, r3
 80254fe:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025502:	fb09 3c0c 	mla	ip, r9, ip, r3
 8025506:	0a3f      	lsrs	r7, r7, #8
 8025508:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802550c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025510:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025514:	ea47 070c 	orr.w	r7, r7, ip
 8025518:	2aff      	cmp	r2, #255	; 0xff
 802551a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802551e:	d11e      	bne.n	802555e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025520:	097a      	lsrs	r2, r7, #5
 8025522:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8025526:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802552a:	f023 0307 	bic.w	r3, r3, #7
 802552e:	4313      	orrs	r3, r2
 8025530:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025534:	431f      	orrs	r7, r3
 8025536:	f8a8 7000 	strh.w	r7, [r8]
 802553a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802553c:	441c      	add	r4, r3
 802553e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025540:	f108 0802 	add.w	r8, r8, #2
 8025544:	441e      	add	r6, r3
 8025546:	f10b 3bff 	add.w	fp, fp, #4294967295
 802554a:	e644      	b.n	80251d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802554c:	2800      	cmp	r0, #0
 802554e:	f43f af0b 	beq.w	8025368 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025552:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8025556:	9109      	str	r1, [sp, #36]	; 0x24
 8025558:	0e09      	lsrs	r1, r1, #24
 802555a:	9111      	str	r1, [sp, #68]	; 0x44
 802555c:	e704      	b.n	8025368 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802555e:	f8b8 1000 	ldrh.w	r1, [r8]
 8025562:	43d2      	mvns	r2, r2
 8025564:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8025568:	fa5f fe82 	uxtb.w	lr, r2
 802556c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025570:	fb0c fc0e 	mul.w	ip, ip, lr
 8025574:	10c8      	asrs	r0, r1, #3
 8025576:	00ca      	lsls	r2, r1, #3
 8025578:	f10c 0101 	add.w	r1, ip, #1
 802557c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025580:	0c39      	lsrs	r1, r7, #16
 8025582:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025586:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802558a:	4911      	ldr	r1, [pc, #68]	; (80255d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802558c:	fb00 f00e 	mul.w	r0, r0, lr
 8025590:	fa5f fc8c 	uxtb.w	ip, ip
 8025594:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8025598:	b2d2      	uxtb	r2, r2
 802559a:	1c41      	adds	r1, r0, #1
 802559c:	fb02 f20e 	mul.w	r2, r2, lr
 80255a0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80255a4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80255a8:	1c51      	adds	r1, r2, #1
 80255aa:	00c0      	lsls	r0, r0, #3
 80255ac:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80255b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80255b4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80255b8:	ea4c 0c00 	orr.w	ip, ip, r0
 80255bc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80255c0:	ea47 0c0c 	orr.w	ip, r7, ip
 80255c4:	f8a8 c000 	strh.w	ip, [r8]
 80255c8:	e7b7      	b.n	802553a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80255ca:	b01b      	add	sp, #108	; 0x6c
 80255cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80255d0:	fffff800 	.word	0xfffff800

080255d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80255d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80255d8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80255dc:	2d00      	cmp	r5, #0
 80255de:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80255e2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80255e6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80255ea:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80255ee:	fb05 0e03 	mla	lr, r5, r3, r0
 80255f2:	f2c0 808c 	blt.w	802570e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80255f6:	45a9      	cmp	r9, r5
 80255f8:	f340 8089 	ble.w	802570e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80255fc:	2800      	cmp	r0, #0
 80255fe:	f2c0 8084 	blt.w	802570a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025602:	4580      	cmp	r8, r0
 8025604:	f340 8081 	ble.w	802570a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025608:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802560c:	f01e 0f01 	tst.w	lr, #1
 8025610:	5d16      	ldrb	r6, [r2, r4]
 8025612:	bf0c      	ite	eq
 8025614:	f006 060f 	andeq.w	r6, r6, #15
 8025618:	1136      	asrne	r6, r6, #4
 802561a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802561e:	b2f6      	uxtb	r6, r6
 8025620:	1c44      	adds	r4, r0, #1
 8025622:	d477      	bmi.n	8025714 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025624:	45a0      	cmp	r8, r4
 8025626:	dd75      	ble.n	8025714 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025628:	2f00      	cmp	r7, #0
 802562a:	d075      	beq.n	8025718 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802562c:	f10e 0a01 	add.w	sl, lr, #1
 8025630:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025634:	f01a 0f01 	tst.w	sl, #1
 8025638:	5d14      	ldrb	r4, [r2, r4]
 802563a:	bf0c      	ite	eq
 802563c:	f004 040f 	andeq.w	r4, r4, #15
 8025640:	1124      	asrne	r4, r4, #4
 8025642:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025646:	b2e4      	uxtb	r4, r4
 8025648:	3501      	adds	r5, #1
 802564a:	d469      	bmi.n	8025720 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802564c:	45a9      	cmp	r9, r5
 802564e:	dd67      	ble.n	8025720 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025650:	f1bc 0f00 	cmp.w	ip, #0
 8025654:	d067      	beq.n	8025726 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8025656:	2800      	cmp	r0, #0
 8025658:	db60      	blt.n	802571c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802565a:	4580      	cmp	r8, r0
 802565c:	dd5e      	ble.n	802571c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802565e:	eb03 090e 	add.w	r9, r3, lr
 8025662:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025666:	f019 0f01 	tst.w	r9, #1
 802566a:	5d55      	ldrb	r5, [r2, r5]
 802566c:	bf0c      	ite	eq
 802566e:	f005 050f 	andeq.w	r5, r5, #15
 8025672:	112d      	asrne	r5, r5, #4
 8025674:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025678:	b2ed      	uxtb	r5, r5
 802567a:	3001      	adds	r0, #1
 802567c:	d456      	bmi.n	802572c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802567e:	4580      	cmp	r8, r0
 8025680:	dd54      	ble.n	802572c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025682:	2f00      	cmp	r7, #0
 8025684:	d054      	beq.n	8025730 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8025686:	3301      	adds	r3, #1
 8025688:	449e      	add	lr, r3
 802568a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802568e:	f01e 0f01 	tst.w	lr, #1
 8025692:	5cd0      	ldrb	r0, [r2, r3]
 8025694:	bf0c      	ite	eq
 8025696:	f000 000f 	andeq.w	r0, r0, #15
 802569a:	1100      	asrne	r0, r0, #4
 802569c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80256a0:	b2c3      	uxtb	r3, r0
 80256a2:	b2ba      	uxth	r2, r7
 80256a4:	fa1f fc8c 	uxth.w	ip, ip
 80256a8:	fb02 f00c 	mul.w	r0, r2, ip
 80256ac:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80256b0:	0112      	lsls	r2, r2, #4
 80256b2:	fa1f fc8c 	uxth.w	ip, ip
 80256b6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80256ba:	1a12      	subs	r2, r2, r0
 80256bc:	eba7 070c 	sub.w	r7, r7, ip
 80256c0:	b292      	uxth	r2, r2
 80256c2:	b2bf      	uxth	r7, r7
 80256c4:	4362      	muls	r2, r4
 80256c6:	fb06 2207 	mla	r2, r6, r7, r2
 80256ca:	fb0c 2505 	mla	r5, ip, r5, r2
 80256ce:	fb00 5303 	mla	r3, r0, r3, r5
 80256d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80256d6:	b1b3      	cbz	r3, 8025706 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80256d8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80256dc:	435a      	muls	r2, r3
 80256de:	1c53      	adds	r3, r2, #1
 80256e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80256e4:	4a2d      	ldr	r2, [pc, #180]	; (802579c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80256e6:	121b      	asrs	r3, r3, #8
 80256e8:	6812      	ldr	r2, [r2, #0]
 80256ea:	2bff      	cmp	r3, #255	; 0xff
 80256ec:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80256f0:	d120      	bne.n	8025734 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80256f2:	4b2b      	ldr	r3, [pc, #172]	; (80257a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80256f4:	0950      	lsrs	r0, r2, #5
 80256f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80256fa:	4033      	ands	r3, r6
 80256fc:	4318      	orrs	r0, r3
 80256fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025702:	4302      	orrs	r2, r0
 8025704:	800a      	strh	r2, [r1, #0]
 8025706:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802570a:	2600      	movs	r6, #0
 802570c:	e788      	b.n	8025620 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802570e:	2400      	movs	r4, #0
 8025710:	4626      	mov	r6, r4
 8025712:	e799      	b.n	8025648 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025714:	2400      	movs	r4, #0
 8025716:	e797      	b.n	8025648 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025718:	463c      	mov	r4, r7
 802571a:	e795      	b.n	8025648 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802571c:	2500      	movs	r5, #0
 802571e:	e7ac      	b.n	802567a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8025720:	2300      	movs	r3, #0
 8025722:	461d      	mov	r5, r3
 8025724:	e7bd      	b.n	80256a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025726:	4663      	mov	r3, ip
 8025728:	4665      	mov	r5, ip
 802572a:	e7ba      	b.n	80256a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802572c:	2300      	movs	r3, #0
 802572e:	e7b8      	b.n	80256a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025730:	463b      	mov	r3, r7
 8025732:	e7b6      	b.n	80256a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025734:	880d      	ldrh	r5, [r1, #0]
 8025736:	b29f      	uxth	r7, r3
 8025738:	122c      	asrs	r4, r5, #8
 802573a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802573e:	43db      	mvns	r3, r3
 8025740:	b2db      	uxtb	r3, r3
 8025742:	fb10 f007 	smulbb	r0, r0, r7
 8025746:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802574a:	fb04 0403 	mla	r4, r4, r3, r0
 802574e:	b2f6      	uxtb	r6, r6
 8025750:	10e8      	asrs	r0, r5, #3
 8025752:	b2d2      	uxtb	r2, r2
 8025754:	00ed      	lsls	r5, r5, #3
 8025756:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802575a:	fb12 f207 	smulbb	r2, r2, r7
 802575e:	fb16 f607 	smulbb	r6, r6, r7
 8025762:	b2ed      	uxtb	r5, r5
 8025764:	b2a4      	uxth	r4, r4
 8025766:	fb00 6603 	mla	r6, r0, r3, r6
 802576a:	fb05 2303 	mla	r3, r5, r3, r2
 802576e:	b29a      	uxth	r2, r3
 8025770:	1c63      	adds	r3, r4, #1
 8025772:	b2b0      	uxth	r0, r6
 8025774:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025778:	1c53      	adds	r3, r2, #1
 802577a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802577e:	1c42      	adds	r2, r0, #1
 8025780:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025784:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025788:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802578c:	0940      	lsrs	r0, r0, #5
 802578e:	4323      	orrs	r3, r4
 8025790:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025794:	4303      	orrs	r3, r0
 8025796:	800b      	strh	r3, [r1, #0]
 8025798:	e7b5      	b.n	8025706 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802579a:	bf00      	nop
 802579c:	200132cc 	.word	0x200132cc
 80257a0:	00fff800 	.word	0x00fff800

080257a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80257a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80257a8:	b097      	sub	sp, #92	; 0x5c
 80257aa:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80257ae:	9214      	str	r2, [sp, #80]	; 0x50
 80257b0:	9309      	str	r3, [sp, #36]	; 0x24
 80257b2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80257b4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80257b8:	910d      	str	r1, [sp, #52]	; 0x34
 80257ba:	930f      	str	r3, [sp, #60]	; 0x3c
 80257bc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80257c0:	9015      	str	r0, [sp, #84]	; 0x54
 80257c2:	6850      	ldr	r0, [r2, #4]
 80257c4:	6812      	ldr	r2, [r2, #0]
 80257c6:	fb00 1303 	mla	r3, r0, r3, r1
 80257ca:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80257ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257d0:	689b      	ldr	r3, [r3, #8]
 80257d2:	3301      	adds	r3, #1
 80257d4:	f023 0301 	bic.w	r3, r3, #1
 80257d8:	930a      	str	r3, [sp, #40]	; 0x28
 80257da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257dc:	681f      	ldr	r7, [r3, #0]
 80257de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80257e0:	2b00      	cmp	r3, #0
 80257e2:	dc03      	bgt.n	80257ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80257e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80257e6:	2b00      	cmp	r3, #0
 80257e8:	f340 8287 	ble.w	8025cfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80257ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80257f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80257f6:	1e48      	subs	r0, r1, #1
 80257f8:	f102 3cff 	add.w	ip, r2, #4294967295
 80257fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80257fe:	2b00      	cmp	r3, #0
 8025800:	f340 80c4 	ble.w	802598c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8025804:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025808:	ea4f 4326 	mov.w	r3, r6, asr #16
 802580c:	d406      	bmi.n	802581c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802580e:	4586      	cmp	lr, r0
 8025810:	da04      	bge.n	802581c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025812:	2b00      	cmp	r3, #0
 8025814:	db02      	blt.n	802581c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025816:	4563      	cmp	r3, ip
 8025818:	f2c0 80b9 	blt.w	802598e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802581c:	f11e 0e01 	adds.w	lr, lr, #1
 8025820:	f100 80aa 	bmi.w	8025978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025824:	4571      	cmp	r1, lr
 8025826:	f2c0 80a7 	blt.w	8025978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802582a:	3301      	adds	r3, #1
 802582c:	f100 80a4 	bmi.w	8025978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025830:	429a      	cmp	r2, r3
 8025832:	f2c0 80a1 	blt.w	8025978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025836:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025838:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802583c:	930e      	str	r3, [sp, #56]	; 0x38
 802583e:	46c8      	mov	r8, r9
 8025840:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025842:	2b00      	cmp	r3, #0
 8025844:	f340 80c3 	ble.w	80259ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8025848:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802584a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802584e:	1423      	asrs	r3, r4, #16
 8025850:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025854:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025858:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802585c:	f100 814d 	bmi.w	8025afa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025860:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025864:	455b      	cmp	r3, fp
 8025866:	f280 8148 	bge.w	8025afa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802586a:	2800      	cmp	r0, #0
 802586c:	f2c0 8145 	blt.w	8025afa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025870:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025874:	4558      	cmp	r0, fp
 8025876:	f280 8140 	bge.w	8025afa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802587a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802587c:	fb00 3305 	mla	r3, r0, r5, r3
 8025880:	0858      	lsrs	r0, r3, #1
 8025882:	07dd      	lsls	r5, r3, #31
 8025884:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025888:	bf54      	ite	pl
 802588a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802588e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025892:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025896:	fa5f fc8c 	uxtb.w	ip, ip
 802589a:	2a00      	cmp	r2, #0
 802589c:	f000 80db 	beq.w	8025a56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80258a0:	1c58      	adds	r0, r3, #1
 80258a2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80258a6:	07c0      	lsls	r0, r0, #31
 80258a8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80258ac:	bf54      	ite	pl
 80258ae:	f00e 0e0f 	andpl.w	lr, lr, #15
 80258b2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80258b6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80258ba:	fa5f f08e 	uxtb.w	r0, lr
 80258be:	9010      	str	r0, [sp, #64]	; 0x40
 80258c0:	b1c9      	cbz	r1, 80258f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80258c2:	4453      	add	r3, sl
 80258c4:	0858      	lsrs	r0, r3, #1
 80258c6:	07dd      	lsls	r5, r3, #31
 80258c8:	5c38      	ldrb	r0, [r7, r0]
 80258ca:	bf54      	ite	pl
 80258cc:	f000 000f 	andpl.w	r0, r0, #15
 80258d0:	1100      	asrmi	r0, r0, #4
 80258d2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80258d6:	3301      	adds	r3, #1
 80258d8:	b2c0      	uxtb	r0, r0
 80258da:	900b      	str	r0, [sp, #44]	; 0x2c
 80258dc:	0858      	lsrs	r0, r3, #1
 80258de:	07dd      	lsls	r5, r3, #31
 80258e0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80258e4:	bf54      	ite	pl
 80258e6:	f00e 030f 	andpl.w	r3, lr, #15
 80258ea:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80258ee:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80258f2:	b2db      	uxtb	r3, r3
 80258f4:	9311      	str	r3, [sp, #68]	; 0x44
 80258f6:	b292      	uxth	r2, r2
 80258f8:	b289      	uxth	r1, r1
 80258fa:	fb02 f301 	mul.w	r3, r2, r1
 80258fe:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025902:	0112      	lsls	r2, r2, #4
 8025904:	b289      	uxth	r1, r1
 8025906:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802590a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802590c:	1ad2      	subs	r2, r2, r3
 802590e:	1a40      	subs	r0, r0, r1
 8025910:	b292      	uxth	r2, r2
 8025912:	436a      	muls	r2, r5
 8025914:	b280      	uxth	r0, r0
 8025916:	fb0c 2c00 	mla	ip, ip, r0, r2
 802591a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802591c:	fb01 c102 	mla	r1, r1, r2, ip
 8025920:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025922:	fb03 1302 	mla	r3, r3, r2, r1
 8025926:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802592a:	b1db      	cbz	r3, 8025964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802592c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802592e:	4353      	muls	r3, r2
 8025930:	1c5a      	adds	r2, r3, #1
 8025932:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025936:	4ac6      	ldr	r2, [pc, #792]	; (8025c50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025938:	121b      	asrs	r3, r3, #8
 802593a:	6812      	ldr	r2, [r2, #0]
 802593c:	2bff      	cmp	r3, #255	; 0xff
 802593e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025942:	f040 8099 	bne.w	8025a78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8025946:	0953      	lsrs	r3, r2, #5
 8025948:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802594c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025950:	f02c 0c07 	bic.w	ip, ip, #7
 8025954:	ea43 0c0c 	orr.w	ip, r3, ip
 8025958:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802595c:	ea4c 0202 	orr.w	r2, ip, r2
 8025960:	f8a8 2000 	strh.w	r2, [r8]
 8025964:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025966:	441c      	add	r4, r3
 8025968:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802596a:	441e      	add	r6, r3
 802596c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802596e:	3b01      	subs	r3, #1
 8025970:	f108 0802 	add.w	r8, r8, #2
 8025974:	930e      	str	r3, [sp, #56]	; 0x38
 8025976:	e763      	b.n	8025840 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8025978:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802597a:	441c      	add	r4, r3
 802597c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802597e:	441e      	add	r6, r3
 8025980:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025982:	3b01      	subs	r3, #1
 8025984:	9309      	str	r3, [sp, #36]	; 0x24
 8025986:	f109 0902 	add.w	r9, r9, #2
 802598a:	e737      	b.n	80257fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802598c:	d024      	beq.n	80259d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802598e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025990:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025992:	3b01      	subs	r3, #1
 8025994:	fb00 4003 	mla	r0, r0, r3, r4
 8025998:	1400      	asrs	r0, r0, #16
 802599a:	f53f af4c 	bmi.w	8025836 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802599e:	3901      	subs	r1, #1
 80259a0:	4288      	cmp	r0, r1
 80259a2:	f6bf af48 	bge.w	8025836 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80259a6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80259a8:	fb01 6303 	mla	r3, r1, r3, r6
 80259ac:	141b      	asrs	r3, r3, #16
 80259ae:	f53f af42 	bmi.w	8025836 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80259b2:	3a01      	subs	r2, #1
 80259b4:	4293      	cmp	r3, r2
 80259b6:	f6bf af3e 	bge.w	8025836 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80259ba:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80259be:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80259c2:	930e      	str	r3, [sp, #56]	; 0x38
 80259c4:	46c8      	mov	r8, r9
 80259c6:	f1bb 0f00 	cmp.w	fp, #0
 80259ca:	f300 80b7 	bgt.w	8025b3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80259ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80259d0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80259d4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80259d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80259da:	2b00      	cmp	r3, #0
 80259dc:	f340 818d 	ble.w	8025cfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80259e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80259e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80259e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80259ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80259ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80259f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80259f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80259fa:	eef0 6a62 	vmov.f32	s13, s5
 80259fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025a02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025a06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025a0a:	ee16 4a90 	vmov	r4, s13
 8025a0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025a12:	eef0 6a43 	vmov.f32	s13, s6
 8025a16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025a1a:	ee12 2a90 	vmov	r2, s5
 8025a1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025a22:	fb92 f3f3 	sdiv	r3, r2, r3
 8025a26:	ee13 2a10 	vmov	r2, s6
 8025a2a:	9323      	str	r3, [sp, #140]	; 0x8c
 8025a2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025a2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025a32:	9324      	str	r3, [sp, #144]	; 0x90
 8025a34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025a36:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025a38:	3b01      	subs	r3, #1
 8025a3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025a3e:	930d      	str	r3, [sp, #52]	; 0x34
 8025a40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025a42:	bf08      	it	eq
 8025a44:	4613      	moveq	r3, r2
 8025a46:	ee16 6a90 	vmov	r6, s13
 8025a4a:	9309      	str	r3, [sp, #36]	; 0x24
 8025a4c:	eeb0 3a67 	vmov.f32	s6, s15
 8025a50:	eef0 2a47 	vmov.f32	s5, s14
 8025a54:	e6c3      	b.n	80257de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025a56:	2900      	cmp	r1, #0
 8025a58:	f43f af4d 	beq.w	80258f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025a5c:	eb0a 0003 	add.w	r0, sl, r3
 8025a60:	0843      	lsrs	r3, r0, #1
 8025a62:	07c0      	lsls	r0, r0, #31
 8025a64:	5cfb      	ldrb	r3, [r7, r3]
 8025a66:	bf54      	ite	pl
 8025a68:	f003 030f 	andpl.w	r3, r3, #15
 8025a6c:	111b      	asrmi	r3, r3, #4
 8025a6e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025a72:	b2db      	uxtb	r3, r3
 8025a74:	930b      	str	r3, [sp, #44]	; 0x2c
 8025a76:	e73e      	b.n	80258f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025a78:	f8b8 e000 	ldrh.w	lr, [r8]
 8025a7c:	fa1f fb83 	uxth.w	fp, r3
 8025a80:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025a84:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025a88:	43db      	mvns	r3, r3
 8025a8a:	b2db      	uxtb	r3, r3
 8025a8c:	fb11 f10b 	smulbb	r1, r1, fp
 8025a90:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025a94:	fb00 1003 	mla	r0, r0, r3, r1
 8025a98:	fa5f fc8c 	uxtb.w	ip, ip
 8025a9c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025aa0:	b2d2      	uxtb	r2, r2
 8025aa2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025aa6:	b280      	uxth	r0, r0
 8025aa8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025aac:	fb1c fc0b 	smulbb	ip, ip, fp
 8025ab0:	fa5f fe8e 	uxtb.w	lr, lr
 8025ab4:	fb12 fb0b 	smulbb	fp, r2, fp
 8025ab8:	fb01 cc03 	mla	ip, r1, r3, ip
 8025abc:	fb0e bb03 	mla	fp, lr, r3, fp
 8025ac0:	1c43      	adds	r3, r0, #1
 8025ac2:	fa1f fc8c 	uxth.w	ip, ip
 8025ac6:	fa1f fb8b 	uxth.w	fp, fp
 8025aca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025ace:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025ad2:	f10c 0101 	add.w	r1, ip, #1
 8025ad6:	f10b 0001 	add.w	r0, fp, #1
 8025ada:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025ade:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025ae2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025ae6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025aea:	4318      	orrs	r0, r3
 8025aec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025af0:	ea40 000c 	orr.w	r0, r0, ip
 8025af4:	f8a8 0000 	strh.w	r0, [r8]
 8025af8:	e734      	b.n	8025964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025afa:	f113 0b01 	adds.w	fp, r3, #1
 8025afe:	f53f af31 	bmi.w	8025964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b02:	45dc      	cmp	ip, fp
 8025b04:	f6ff af2e 	blt.w	8025964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b08:	f110 0b01 	adds.w	fp, r0, #1
 8025b0c:	f53f af2a 	bmi.w	8025964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b10:	45de      	cmp	lr, fp
 8025b12:	f6ff af27 	blt.w	8025964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b16:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b18:	9302      	str	r3, [sp, #8]
 8025b1a:	fa0f f38e 	sxth.w	r3, lr
 8025b1e:	9301      	str	r3, [sp, #4]
 8025b20:	fa0f f38c 	sxth.w	r3, ip
 8025b24:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025b28:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025b2c:	9300      	str	r3, [sp, #0]
 8025b2e:	463a      	mov	r2, r7
 8025b30:	4653      	mov	r3, sl
 8025b32:	4641      	mov	r1, r8
 8025b34:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025b36:	f7ff fd4d 	bl	80255d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025b3a:	e713      	b.n	8025964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b3c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025b3e:	1422      	asrs	r2, r4, #16
 8025b40:	1433      	asrs	r3, r6, #16
 8025b42:	fb05 2303 	mla	r3, r5, r3, r2
 8025b46:	085a      	lsrs	r2, r3, #1
 8025b48:	07dd      	lsls	r5, r3, #31
 8025b4a:	5cba      	ldrb	r2, [r7, r2]
 8025b4c:	bf54      	ite	pl
 8025b4e:	f002 020f 	andpl.w	r2, r2, #15
 8025b52:	1112      	asrmi	r2, r2, #4
 8025b54:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025b58:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025b5c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025b60:	b2d2      	uxtb	r2, r2
 8025b62:	2900      	cmp	r1, #0
 8025b64:	d076      	beq.n	8025c54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025b66:	f103 0e01 	add.w	lr, r3, #1
 8025b6a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025b6e:	f01e 0f01 	tst.w	lr, #1
 8025b72:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025b76:	bf0c      	ite	eq
 8025b78:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025b7c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025b80:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025b84:	fa5f f58c 	uxtb.w	r5, ip
 8025b88:	9512      	str	r5, [sp, #72]	; 0x48
 8025b8a:	b300      	cbz	r0, 8025bce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025b8c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b8e:	442b      	add	r3, r5
 8025b90:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025b94:	07dd      	lsls	r5, r3, #31
 8025b96:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025b9a:	bf54      	ite	pl
 8025b9c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025ba0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025ba4:	3301      	adds	r3, #1
 8025ba6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025baa:	fa5f f58c 	uxtb.w	r5, ip
 8025bae:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025bb2:	950c      	str	r5, [sp, #48]	; 0x30
 8025bb4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025bb8:	07dd      	lsls	r5, r3, #31
 8025bba:	bf54      	ite	pl
 8025bbc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025bc0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025bc4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025bc8:	fa5f f38c 	uxtb.w	r3, ip
 8025bcc:	9313      	str	r3, [sp, #76]	; 0x4c
 8025bce:	b289      	uxth	r1, r1
 8025bd0:	b280      	uxth	r0, r0
 8025bd2:	fb01 f300 	mul.w	r3, r1, r0
 8025bd6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025bda:	0109      	lsls	r1, r1, #4
 8025bdc:	b280      	uxth	r0, r0
 8025bde:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025be2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025be4:	1ac9      	subs	r1, r1, r3
 8025be6:	ebac 0c00 	sub.w	ip, ip, r0
 8025bea:	b289      	uxth	r1, r1
 8025bec:	4369      	muls	r1, r5
 8025bee:	fa1f fc8c 	uxth.w	ip, ip
 8025bf2:	fb02 120c 	mla	r2, r2, ip, r1
 8025bf6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025bf8:	fb00 2001 	mla	r0, r0, r1, r2
 8025bfc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025bfe:	fb03 0302 	mla	r3, r3, r2, r0
 8025c02:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025c06:	b1d3      	cbz	r3, 8025c3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025c08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025c0a:	4353      	muls	r3, r2
 8025c0c:	1c5a      	adds	r2, r3, #1
 8025c0e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025c12:	4a0f      	ldr	r2, [pc, #60]	; (8025c50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025c14:	121b      	asrs	r3, r3, #8
 8025c16:	6812      	ldr	r2, [r2, #0]
 8025c18:	2bff      	cmp	r3, #255	; 0xff
 8025c1a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025c1e:	d12d      	bne.n	8025c7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025c20:	0953      	lsrs	r3, r2, #5
 8025c22:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025c26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c2a:	f02c 0c07 	bic.w	ip, ip, #7
 8025c2e:	ea43 0c0c 	orr.w	ip, r3, ip
 8025c32:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025c36:	ea4c 0202 	orr.w	r2, ip, r2
 8025c3a:	f8a8 2000 	strh.w	r2, [r8]
 8025c3e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025c40:	441c      	add	r4, r3
 8025c42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025c44:	f108 0802 	add.w	r8, r8, #2
 8025c48:	441e      	add	r6, r3
 8025c4a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025c4e:	e6ba      	b.n	80259c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025c50:	200132cc 	.word	0x200132cc
 8025c54:	2800      	cmp	r0, #0
 8025c56:	d0ba      	beq.n	8025bce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025c58:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025c5a:	442b      	add	r3, r5
 8025c5c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025c60:	07db      	lsls	r3, r3, #31
 8025c62:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025c66:	bf54      	ite	pl
 8025c68:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025c6c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025c70:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025c74:	fa5f f38c 	uxtb.w	r3, ip
 8025c78:	930c      	str	r3, [sp, #48]	; 0x30
 8025c7a:	e7a8      	b.n	8025bce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025c7c:	f8b8 e000 	ldrh.w	lr, [r8]
 8025c80:	fa1f fa83 	uxth.w	sl, r3
 8025c84:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025c88:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025c8c:	43db      	mvns	r3, r3
 8025c8e:	b2db      	uxtb	r3, r3
 8025c90:	fb11 f10a 	smulbb	r1, r1, sl
 8025c94:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025c98:	fb00 1003 	mla	r0, r0, r3, r1
 8025c9c:	b2d2      	uxtb	r2, r2
 8025c9e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025ca2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025ca6:	fa5f fe8e 	uxtb.w	lr, lr
 8025caa:	fb12 f20a 	smulbb	r2, r2, sl
 8025cae:	fb0e 2203 	mla	r2, lr, r3, r2
 8025cb2:	fa5f fc8c 	uxtb.w	ip, ip
 8025cb6:	b280      	uxth	r0, r0
 8025cb8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025cbc:	b292      	uxth	r2, r2
 8025cbe:	fb1c fc0a 	smulbb	ip, ip, sl
 8025cc2:	fb01 cc03 	mla	ip, r1, r3, ip
 8025cc6:	1c43      	adds	r3, r0, #1
 8025cc8:	1c51      	adds	r1, r2, #1
 8025cca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025cce:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025cd2:	fa1f fc8c 	uxth.w	ip, ip
 8025cd6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025cda:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025cde:	4308      	orrs	r0, r1
 8025ce0:	f10c 0101 	add.w	r1, ip, #1
 8025ce4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025ce8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025cec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025cf0:	ea40 000c 	orr.w	r0, r0, ip
 8025cf4:	f8a8 0000 	strh.w	r0, [r8]
 8025cf8:	e7a1      	b.n	8025c3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025cfa:	b017      	add	sp, #92	; 0x5c
 8025cfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025d00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025d00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025d04:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025d08:	2d00      	cmp	r5, #0
 8025d0a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025d0e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025d12:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025d16:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025d1a:	fb05 0e03 	mla	lr, r5, r3, r0
 8025d1e:	f2c0 80b0 	blt.w	8025e82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025d22:	45a9      	cmp	r9, r5
 8025d24:	f340 80ad 	ble.w	8025e82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025d28:	2800      	cmp	r0, #0
 8025d2a:	f2c0 80a8 	blt.w	8025e7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025d2e:	4580      	cmp	r8, r0
 8025d30:	f340 80a5 	ble.w	8025e7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025d34:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025d38:	f01e 0f01 	tst.w	lr, #1
 8025d3c:	5d16      	ldrb	r6, [r2, r4]
 8025d3e:	bf0c      	ite	eq
 8025d40:	f006 060f 	andeq.w	r6, r6, #15
 8025d44:	1136      	asrne	r6, r6, #4
 8025d46:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025d4a:	b2f6      	uxtb	r6, r6
 8025d4c:	1c44      	adds	r4, r0, #1
 8025d4e:	f100 809b 	bmi.w	8025e88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025d52:	45a0      	cmp	r8, r4
 8025d54:	f340 8098 	ble.w	8025e88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025d58:	2f00      	cmp	r7, #0
 8025d5a:	f000 8097 	beq.w	8025e8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025d5e:	f10e 0a01 	add.w	sl, lr, #1
 8025d62:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025d66:	f01a 0f01 	tst.w	sl, #1
 8025d6a:	5d14      	ldrb	r4, [r2, r4]
 8025d6c:	bf0c      	ite	eq
 8025d6e:	f004 040f 	andeq.w	r4, r4, #15
 8025d72:	1124      	asrne	r4, r4, #4
 8025d74:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025d78:	b2e4      	uxtb	r4, r4
 8025d7a:	3501      	adds	r5, #1
 8025d7c:	f100 808a 	bmi.w	8025e94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025d80:	45a9      	cmp	r9, r5
 8025d82:	f340 8087 	ble.w	8025e94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025d86:	f1bc 0f00 	cmp.w	ip, #0
 8025d8a:	f000 8086 	beq.w	8025e9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025d8e:	2800      	cmp	r0, #0
 8025d90:	db7e      	blt.n	8025e90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025d92:	4580      	cmp	r8, r0
 8025d94:	dd7c      	ble.n	8025e90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025d96:	eb03 090e 	add.w	r9, r3, lr
 8025d9a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025d9e:	f019 0f01 	tst.w	r9, #1
 8025da2:	5d55      	ldrb	r5, [r2, r5]
 8025da4:	bf0c      	ite	eq
 8025da6:	f005 050f 	andeq.w	r5, r5, #15
 8025daa:	112d      	asrne	r5, r5, #4
 8025dac:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025db0:	b2ed      	uxtb	r5, r5
 8025db2:	3001      	adds	r0, #1
 8025db4:	d474      	bmi.n	8025ea0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025db6:	4580      	cmp	r8, r0
 8025db8:	dd72      	ble.n	8025ea0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025dba:	2f00      	cmp	r7, #0
 8025dbc:	d072      	beq.n	8025ea4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025dbe:	3301      	adds	r3, #1
 8025dc0:	449e      	add	lr, r3
 8025dc2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025dc6:	f01e 0f01 	tst.w	lr, #1
 8025dca:	5cd0      	ldrb	r0, [r2, r3]
 8025dcc:	bf0c      	ite	eq
 8025dce:	f000 000f 	andeq.w	r0, r0, #15
 8025dd2:	1100      	asrne	r0, r0, #4
 8025dd4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025dd8:	b2c3      	uxtb	r3, r0
 8025dda:	b2ba      	uxth	r2, r7
 8025ddc:	fa1f fc8c 	uxth.w	ip, ip
 8025de0:	fb02 f00c 	mul.w	r0, r2, ip
 8025de4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025de8:	0112      	lsls	r2, r2, #4
 8025dea:	fa1f fc8c 	uxth.w	ip, ip
 8025dee:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025df2:	1a12      	subs	r2, r2, r0
 8025df4:	eba7 070c 	sub.w	r7, r7, ip
 8025df8:	b292      	uxth	r2, r2
 8025dfa:	b2bf      	uxth	r7, r7
 8025dfc:	4362      	muls	r2, r4
 8025dfe:	fb06 2207 	mla	r2, r6, r7, r2
 8025e02:	fb0c 2505 	mla	r5, ip, r5, r2
 8025e06:	fb00 5303 	mla	r3, r0, r3, r5
 8025e0a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025e0e:	b3a3      	cbz	r3, 8025e7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025e10:	4a25      	ldr	r2, [pc, #148]	; (8025ea8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025e12:	880e      	ldrh	r6, [r1, #0]
 8025e14:	6815      	ldr	r5, [r2, #0]
 8025e16:	1234      	asrs	r4, r6, #8
 8025e18:	b29a      	uxth	r2, r3
 8025e1a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025e1e:	43db      	mvns	r3, r3
 8025e20:	b2db      	uxtb	r3, r3
 8025e22:	fb10 f002 	smulbb	r0, r0, r2
 8025e26:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025e2a:	fb04 0403 	mla	r4, r4, r3, r0
 8025e2e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025e32:	10f0      	asrs	r0, r6, #3
 8025e34:	b2ed      	uxtb	r5, r5
 8025e36:	00f6      	lsls	r6, r6, #3
 8025e38:	fb17 f702 	smulbb	r7, r7, r2
 8025e3c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025e40:	fb15 f202 	smulbb	r2, r5, r2
 8025e44:	b2f6      	uxtb	r6, r6
 8025e46:	b2a4      	uxth	r4, r4
 8025e48:	fb00 7003 	mla	r0, r0, r3, r7
 8025e4c:	fb06 2303 	mla	r3, r6, r3, r2
 8025e50:	b29a      	uxth	r2, r3
 8025e52:	1c63      	adds	r3, r4, #1
 8025e54:	b280      	uxth	r0, r0
 8025e56:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025e5a:	1c53      	adds	r3, r2, #1
 8025e5c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025e60:	1c42      	adds	r2, r0, #1
 8025e62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025e66:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025e6a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025e6e:	0940      	lsrs	r0, r0, #5
 8025e70:	4323      	orrs	r3, r4
 8025e72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025e76:	4303      	orrs	r3, r0
 8025e78:	800b      	strh	r3, [r1, #0]
 8025e7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025e7e:	2600      	movs	r6, #0
 8025e80:	e764      	b.n	8025d4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8025e82:	2400      	movs	r4, #0
 8025e84:	4626      	mov	r6, r4
 8025e86:	e778      	b.n	8025d7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025e88:	2400      	movs	r4, #0
 8025e8a:	e776      	b.n	8025d7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025e8c:	463c      	mov	r4, r7
 8025e8e:	e774      	b.n	8025d7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025e90:	2500      	movs	r5, #0
 8025e92:	e78e      	b.n	8025db2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025e94:	2300      	movs	r3, #0
 8025e96:	461d      	mov	r5, r3
 8025e98:	e79f      	b.n	8025dda <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025e9a:	4663      	mov	r3, ip
 8025e9c:	4665      	mov	r5, ip
 8025e9e:	e79c      	b.n	8025dda <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025ea0:	2300      	movs	r3, #0
 8025ea2:	e79a      	b.n	8025dda <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025ea4:	463b      	mov	r3, r7
 8025ea6:	e798      	b.n	8025dda <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025ea8:	200132cc 	.word	0x200132cc

08025eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025eb0:	b093      	sub	sp, #76	; 0x4c
 8025eb2:	461d      	mov	r5, r3
 8025eb4:	920c      	str	r2, [sp, #48]	; 0x30
 8025eb6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025eb8:	9107      	str	r1, [sp, #28]
 8025eba:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025ebe:	9011      	str	r0, [sp, #68]	; 0x44
 8025ec0:	6850      	ldr	r0, [r2, #4]
 8025ec2:	6812      	ldr	r2, [r2, #0]
 8025ec4:	fb00 1303 	mla	r3, r0, r3, r1
 8025ec8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025ecc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ece:	689b      	ldr	r3, [r3, #8]
 8025ed0:	3301      	adds	r3, #1
 8025ed2:	f023 0301 	bic.w	r3, r3, #1
 8025ed6:	9306      	str	r3, [sp, #24]
 8025ed8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025eda:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025ede:	681f      	ldr	r7, [r3, #0]
 8025ee0:	9b07      	ldr	r3, [sp, #28]
 8025ee2:	2b00      	cmp	r3, #0
 8025ee4:	dc03      	bgt.n	8025eee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025ee6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025ee8:	2b00      	cmp	r3, #0
 8025eea:	f340 8267 	ble.w	80263bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025eee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ef0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025ef4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025ef8:	1e48      	subs	r0, r1, #1
 8025efa:	f102 3cff 	add.w	ip, r2, #4294967295
 8025efe:	2d00      	cmp	r5, #0
 8025f00:	f340 80b8 	ble.w	8026074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025f04:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025f08:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025f0c:	d406      	bmi.n	8025f1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025f0e:	4586      	cmp	lr, r0
 8025f10:	da04      	bge.n	8025f1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025f12:	2b00      	cmp	r3, #0
 8025f14:	db02      	blt.n	8025f1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025f16:	4563      	cmp	r3, ip
 8025f18:	f2c0 80ad 	blt.w	8026076 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025f1c:	f11e 0e01 	adds.w	lr, lr, #1
 8025f20:	f100 80a0 	bmi.w	8026064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025f24:	4571      	cmp	r1, lr
 8025f26:	f2c0 809d 	blt.w	8026064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025f2a:	3301      	adds	r3, #1
 8025f2c:	f100 809a 	bmi.w	8026064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025f30:	429a      	cmp	r2, r3
 8025f32:	f2c0 8097 	blt.w	8026064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025f36:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025f3a:	9509      	str	r5, [sp, #36]	; 0x24
 8025f3c:	46c8      	mov	r8, r9
 8025f3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025f40:	2b00      	cmp	r3, #0
 8025f42:	f340 80b6 	ble.w	80260b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8025f46:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8025f4a:	9308      	str	r3, [sp, #32]
 8025f4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f4e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025f52:	1423      	asrs	r3, r4, #16
 8025f54:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025f58:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025f5c:	f100 813e 	bmi.w	80261dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025f60:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025f64:	455b      	cmp	r3, fp
 8025f66:	f280 8139 	bge.w	80261dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025f6a:	2800      	cmp	r0, #0
 8025f6c:	f2c0 8136 	blt.w	80261dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025f70:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025f74:	4558      	cmp	r0, fp
 8025f76:	f280 8131 	bge.w	80261dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025f7a:	9a06      	ldr	r2, [sp, #24]
 8025f7c:	fb00 3302 	mla	r3, r0, r2, r3
 8025f80:	0858      	lsrs	r0, r3, #1
 8025f82:	07da      	lsls	r2, r3, #31
 8025f84:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025f88:	9a08      	ldr	r2, [sp, #32]
 8025f8a:	bf54      	ite	pl
 8025f8c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025f90:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025f94:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025f98:	fa5f fc8c 	uxtb.w	ip, ip
 8025f9c:	2a00      	cmp	r2, #0
 8025f9e:	f000 80cb 	beq.w	8026138 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025fa2:	1c58      	adds	r0, r3, #1
 8025fa4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025fa8:	07c0      	lsls	r0, r0, #31
 8025faa:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025fae:	bf54      	ite	pl
 8025fb0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025fb4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025fb8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025fbc:	fa5f fe8e 	uxtb.w	lr, lr
 8025fc0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025fc4:	b1b9      	cbz	r1, 8025ff6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025fc6:	4453      	add	r3, sl
 8025fc8:	0858      	lsrs	r0, r3, #1
 8025fca:	07da      	lsls	r2, r3, #31
 8025fcc:	5c38      	ldrb	r0, [r7, r0]
 8025fce:	bf54      	ite	pl
 8025fd0:	f000 000f 	andpl.w	r0, r0, #15
 8025fd4:	1100      	asrmi	r0, r0, #4
 8025fd6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025fda:	b2c0      	uxtb	r0, r0
 8025fdc:	900a      	str	r0, [sp, #40]	; 0x28
 8025fde:	1c58      	adds	r0, r3, #1
 8025fe0:	0843      	lsrs	r3, r0, #1
 8025fe2:	07c2      	lsls	r2, r0, #31
 8025fe4:	5cfb      	ldrb	r3, [r7, r3]
 8025fe6:	bf54      	ite	pl
 8025fe8:	f003 030f 	andpl.w	r3, r3, #15
 8025fec:	111b      	asrmi	r3, r3, #4
 8025fee:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025ff2:	b2db      	uxtb	r3, r3
 8025ff4:	930e      	str	r3, [sp, #56]	; 0x38
 8025ff6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025ffa:	b289      	uxth	r1, r1
 8025ffc:	fb02 f301 	mul.w	r3, r2, r1
 8026000:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026004:	0112      	lsls	r2, r2, #4
 8026006:	b289      	uxth	r1, r1
 8026008:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802600c:	1a40      	subs	r0, r0, r1
 802600e:	fa1f fe80 	uxth.w	lr, r0
 8026012:	1ad2      	subs	r2, r2, r3
 8026014:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026016:	b292      	uxth	r2, r2
 8026018:	4342      	muls	r2, r0
 802601a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802601e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026020:	fb01 c102 	mla	r1, r1, r2, ip
 8026024:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026026:	fb03 1302 	mla	r3, r3, r2, r1
 802602a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802602e:	2bff      	cmp	r3, #255	; 0xff
 8026030:	f040 8093 	bne.w	802615a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026034:	4bbe      	ldr	r3, [pc, #760]	; (8026330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026036:	681a      	ldr	r2, [r3, #0]
 8026038:	4bbe      	ldr	r3, [pc, #760]	; (8026334 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802603a:	0951      	lsrs	r1, r2, #5
 802603c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026040:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026044:	430b      	orrs	r3, r1
 8026046:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802604a:	4313      	orrs	r3, r2
 802604c:	f8a8 3000 	strh.w	r3, [r8]
 8026050:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026052:	441c      	add	r4, r3
 8026054:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026056:	441e      	add	r6, r3
 8026058:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802605a:	3b01      	subs	r3, #1
 802605c:	f108 0802 	add.w	r8, r8, #2
 8026060:	9309      	str	r3, [sp, #36]	; 0x24
 8026062:	e76c      	b.n	8025f3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026064:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026066:	441c      	add	r4, r3
 8026068:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802606a:	3d01      	subs	r5, #1
 802606c:	441e      	add	r6, r3
 802606e:	f109 0902 	add.w	r9, r9, #2
 8026072:	e744      	b.n	8025efe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026074:	d021      	beq.n	80260ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8026076:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026078:	1e6b      	subs	r3, r5, #1
 802607a:	fb00 4003 	mla	r0, r0, r3, r4
 802607e:	1400      	asrs	r0, r0, #16
 8026080:	f53f af59 	bmi.w	8025f36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026084:	3901      	subs	r1, #1
 8026086:	4288      	cmp	r0, r1
 8026088:	f6bf af55 	bge.w	8025f36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802608c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802608e:	fb01 6303 	mla	r3, r1, r3, r6
 8026092:	141b      	asrs	r3, r3, #16
 8026094:	f53f af4f 	bmi.w	8025f36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026098:	3a01      	subs	r2, #1
 802609a:	4293      	cmp	r3, r2
 802609c:	f6bf af4b 	bge.w	8025f36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80260a0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80260a4:	9308      	str	r3, [sp, #32]
 80260a6:	46a8      	mov	r8, r5
 80260a8:	46ce      	mov	lr, r9
 80260aa:	f1b8 0f00 	cmp.w	r8, #0
 80260ae:	f300 80b5 	bgt.w	802621c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80260b2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80260b6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80260ba:	9b07      	ldr	r3, [sp, #28]
 80260bc:	2b00      	cmp	r3, #0
 80260be:	f340 817d 	ble.w	80263bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80260c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80260c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80260ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80260ce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80260d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80260d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80260d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80260dc:	eef0 6a62 	vmov.f32	s13, s5
 80260e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80260e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80260e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80260ec:	ee16 4a90 	vmov	r4, s13
 80260f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80260f4:	eef0 6a43 	vmov.f32	s13, s6
 80260f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80260fc:	ee12 2a90 	vmov	r2, s5
 8026100:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026104:	fb92 f3f3 	sdiv	r3, r2, r3
 8026108:	ee13 2a10 	vmov	r2, s6
 802610c:	931f      	str	r3, [sp, #124]	; 0x7c
 802610e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026110:	fb92 f3f3 	sdiv	r3, r2, r3
 8026114:	9320      	str	r3, [sp, #128]	; 0x80
 8026116:	9b07      	ldr	r3, [sp, #28]
 8026118:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802611a:	3b01      	subs	r3, #1
 802611c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026120:	9307      	str	r3, [sp, #28]
 8026122:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026124:	ee16 6a90 	vmov	r6, s13
 8026128:	bf14      	ite	ne
 802612a:	461d      	movne	r5, r3
 802612c:	4615      	moveq	r5, r2
 802612e:	eeb0 3a67 	vmov.f32	s6, s15
 8026132:	eef0 2a47 	vmov.f32	s5, s14
 8026136:	e6d3      	b.n	8025ee0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8026138:	2900      	cmp	r1, #0
 802613a:	f43f af5c 	beq.w	8025ff6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802613e:	eb0a 0003 	add.w	r0, sl, r3
 8026142:	0843      	lsrs	r3, r0, #1
 8026144:	07c0      	lsls	r0, r0, #31
 8026146:	5cfb      	ldrb	r3, [r7, r3]
 8026148:	bf54      	ite	pl
 802614a:	f003 030f 	andpl.w	r3, r3, #15
 802614e:	111b      	asrmi	r3, r3, #4
 8026150:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026154:	b2db      	uxtb	r3, r3
 8026156:	930a      	str	r3, [sp, #40]	; 0x28
 8026158:	e74d      	b.n	8025ff6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802615a:	2b00      	cmp	r3, #0
 802615c:	f43f af78 	beq.w	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026160:	4a73      	ldr	r2, [pc, #460]	; (8026330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026162:	f8b8 c000 	ldrh.w	ip, [r8]
 8026166:	6810      	ldr	r0, [r2, #0]
 8026168:	fa1f fe83 	uxth.w	lr, r3
 802616c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026170:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026174:	43db      	mvns	r3, r3
 8026176:	b2db      	uxtb	r3, r3
 8026178:	fb12 f20e 	smulbb	r2, r2, lr
 802617c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026180:	fb01 2103 	mla	r1, r1, r3, r2
 8026184:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026188:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802618c:	b2c0      	uxtb	r0, r0
 802618e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026192:	fb1b fb0e 	smulbb	fp, fp, lr
 8026196:	b289      	uxth	r1, r1
 8026198:	fb10 fe0e 	smulbb	lr, r0, lr
 802619c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80261a0:	fa5f fc8c 	uxtb.w	ip, ip
 80261a4:	fb02 b203 	mla	r2, r2, r3, fp
 80261a8:	1c48      	adds	r0, r1, #1
 80261aa:	fb0c e303 	mla	r3, ip, r3, lr
 80261ae:	b292      	uxth	r2, r2
 80261b0:	b29b      	uxth	r3, r3
 80261b2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80261b6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80261ba:	f102 0b01 	add.w	fp, r2, #1
 80261be:	1c59      	adds	r1, r3, #1
 80261c0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80261c4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80261c8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80261cc:	0952      	lsrs	r2, r2, #5
 80261ce:	4301      	orrs	r1, r0
 80261d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80261d4:	4311      	orrs	r1, r2
 80261d6:	f8a8 1000 	strh.w	r1, [r8]
 80261da:	e739      	b.n	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261dc:	f113 0b01 	adds.w	fp, r3, #1
 80261e0:	f53f af36 	bmi.w	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261e4:	45dc      	cmp	ip, fp
 80261e6:	f6ff af33 	blt.w	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261ea:	f110 0b01 	adds.w	fp, r0, #1
 80261ee:	f53f af2f 	bmi.w	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261f2:	45de      	cmp	lr, fp
 80261f4:	f6ff af2c 	blt.w	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261f8:	9a08      	ldr	r2, [sp, #32]
 80261fa:	9302      	str	r3, [sp, #8]
 80261fc:	fa0f f38e 	sxth.w	r3, lr
 8026200:	9301      	str	r3, [sp, #4]
 8026202:	fa0f f38c 	sxth.w	r3, ip
 8026206:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802620a:	9105      	str	r1, [sp, #20]
 802620c:	9300      	str	r3, [sp, #0]
 802620e:	463a      	mov	r2, r7
 8026210:	4653      	mov	r3, sl
 8026212:	4641      	mov	r1, r8
 8026214:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026216:	f7ff fd73 	bl	8025d00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802621a:	e719      	b.n	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802621c:	9906      	ldr	r1, [sp, #24]
 802621e:	1422      	asrs	r2, r4, #16
 8026220:	1433      	asrs	r3, r6, #16
 8026222:	fb01 2303 	mla	r3, r1, r3, r2
 8026226:	085a      	lsrs	r2, r3, #1
 8026228:	07d9      	lsls	r1, r3, #31
 802622a:	5cba      	ldrb	r2, [r7, r2]
 802622c:	bf54      	ite	pl
 802622e:	f002 020f 	andpl.w	r2, r2, #15
 8026232:	1112      	asrmi	r2, r2, #4
 8026234:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026238:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802623c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026240:	b2d2      	uxtb	r2, r2
 8026242:	2800      	cmp	r0, #0
 8026244:	d062      	beq.n	802630c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8026246:	f103 0a01 	add.w	sl, r3, #1
 802624a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802624e:	f01a 0f01 	tst.w	sl, #1
 8026252:	5c79      	ldrb	r1, [r7, r1]
 8026254:	bf0c      	ite	eq
 8026256:	f001 010f 	andeq.w	r1, r1, #15
 802625a:	1109      	asrne	r1, r1, #4
 802625c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026260:	b2c9      	uxtb	r1, r1
 8026262:	910f      	str	r1, [sp, #60]	; 0x3c
 8026264:	f1bc 0f00 	cmp.w	ip, #0
 8026268:	d019      	beq.n	802629e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802626a:	9908      	ldr	r1, [sp, #32]
 802626c:	440b      	add	r3, r1
 802626e:	0859      	lsrs	r1, r3, #1
 8026270:	f013 0f01 	tst.w	r3, #1
 8026274:	5c79      	ldrb	r1, [r7, r1]
 8026276:	bf0c      	ite	eq
 8026278:	f001 010f 	andeq.w	r1, r1, #15
 802627c:	1109      	asrne	r1, r1, #4
 802627e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026282:	b2c9      	uxtb	r1, r1
 8026284:	3301      	adds	r3, #1
 8026286:	910b      	str	r1, [sp, #44]	; 0x2c
 8026288:	0859      	lsrs	r1, r3, #1
 802628a:	07db      	lsls	r3, r3, #31
 802628c:	5c79      	ldrb	r1, [r7, r1]
 802628e:	bf54      	ite	pl
 8026290:	f001 010f 	andpl.w	r1, r1, #15
 8026294:	1109      	asrmi	r1, r1, #4
 8026296:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802629a:	b2c9      	uxtb	r1, r1
 802629c:	9110      	str	r1, [sp, #64]	; 0x40
 802629e:	b280      	uxth	r0, r0
 80262a0:	fa1f fc8c 	uxth.w	ip, ip
 80262a4:	fb00 f30c 	mul.w	r3, r0, ip
 80262a8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80262ac:	0100      	lsls	r0, r0, #4
 80262ae:	fa1f fc8c 	uxth.w	ip, ip
 80262b2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80262b6:	eba1 010c 	sub.w	r1, r1, ip
 80262ba:	fa1f fa81 	uxth.w	sl, r1
 80262be:	1ac0      	subs	r0, r0, r3
 80262c0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80262c2:	b280      	uxth	r0, r0
 80262c4:	4348      	muls	r0, r1
 80262c6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80262c8:	fb02 020a 	mla	r2, r2, sl, r0
 80262cc:	fb0c 2c01 	mla	ip, ip, r1, r2
 80262d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80262d2:	fb03 c302 	mla	r3, r3, r2, ip
 80262d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80262da:	2bff      	cmp	r3, #255	; 0xff
 80262dc:	d12c      	bne.n	8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80262de:	4b14      	ldr	r3, [pc, #80]	; (8026330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80262e0:	681a      	ldr	r2, [r3, #0]
 80262e2:	4b14      	ldr	r3, [pc, #80]	; (8026334 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80262e4:	0951      	lsrs	r1, r2, #5
 80262e6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80262ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80262ee:	430b      	orrs	r3, r1
 80262f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80262f4:	4313      	orrs	r3, r2
 80262f6:	f8ae 3000 	strh.w	r3, [lr]
 80262fa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80262fc:	441c      	add	r4, r3
 80262fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026300:	f10e 0e02 	add.w	lr, lr, #2
 8026304:	441e      	add	r6, r3
 8026306:	f108 38ff 	add.w	r8, r8, #4294967295
 802630a:	e6ce      	b.n	80260aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802630c:	f1bc 0f00 	cmp.w	ip, #0
 8026310:	d0c5      	beq.n	802629e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026312:	9908      	ldr	r1, [sp, #32]
 8026314:	440b      	add	r3, r1
 8026316:	0859      	lsrs	r1, r3, #1
 8026318:	07db      	lsls	r3, r3, #31
 802631a:	5c79      	ldrb	r1, [r7, r1]
 802631c:	bf54      	ite	pl
 802631e:	f001 010f 	andpl.w	r1, r1, #15
 8026322:	1109      	asrmi	r1, r1, #4
 8026324:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026328:	b2c9      	uxtb	r1, r1
 802632a:	910b      	str	r1, [sp, #44]	; 0x2c
 802632c:	e7b7      	b.n	802629e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802632e:	bf00      	nop
 8026330:	200132cc 	.word	0x200132cc
 8026334:	fffff800 	.word	0xfffff800
 8026338:	2b00      	cmp	r3, #0
 802633a:	d0de      	beq.n	80262fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802633c:	4a21      	ldr	r2, [pc, #132]	; (80263c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802633e:	f8be c000 	ldrh.w	ip, [lr]
 8026342:	6810      	ldr	r0, [r2, #0]
 8026344:	fa1f fa83 	uxth.w	sl, r3
 8026348:	ea4f 212c 	mov.w	r1, ip, asr #8
 802634c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026350:	43db      	mvns	r3, r3
 8026352:	b2db      	uxtb	r3, r3
 8026354:	fb12 f20a 	smulbb	r2, r2, sl
 8026358:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802635c:	fb01 2103 	mla	r1, r1, r3, r2
 8026360:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026364:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026368:	b2c0      	uxtb	r0, r0
 802636a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802636e:	fa5f fc8c 	uxtb.w	ip, ip
 8026372:	fb10 f00a 	smulbb	r0, r0, sl
 8026376:	fb0c 0003 	mla	r0, ip, r3, r0
 802637a:	b289      	uxth	r1, r1
 802637c:	fb1b fb0a 	smulbb	fp, fp, sl
 8026380:	b280      	uxth	r0, r0
 8026382:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026386:	fb02 b203 	mla	r2, r2, r3, fp
 802638a:	1c4b      	adds	r3, r1, #1
 802638c:	f100 0b01 	add.w	fp, r0, #1
 8026390:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026394:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026398:	b292      	uxth	r2, r2
 802639a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802639e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80263a2:	ea4b 0101 	orr.w	r1, fp, r1
 80263a6:	f102 0b01 	add.w	fp, r2, #1
 80263aa:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80263ae:	0952      	lsrs	r2, r2, #5
 80263b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80263b4:	4311      	orrs	r1, r2
 80263b6:	f8ae 1000 	strh.w	r1, [lr]
 80263ba:	e79e      	b.n	80262fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80263bc:	b013      	add	sp, #76	; 0x4c
 80263be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80263c2:	bf00      	nop
 80263c4:	200132cc 	.word	0x200132cc

080263c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80263c8:	b570      	push	{r4, r5, r6, lr}
 80263ca:	1208      	asrs	r0, r1, #8
 80263cc:	b29e      	uxth	r6, r3
 80263ce:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80263d2:	1213      	asrs	r3, r2, #8
 80263d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80263d8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80263dc:	fb13 f305 	smulbb	r3, r3, r5
 80263e0:	fb10 f006 	smulbb	r0, r0, r6
 80263e4:	4418      	add	r0, r3
 80263e6:	10cc      	asrs	r4, r1, #3
 80263e8:	10d3      	asrs	r3, r2, #3
 80263ea:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80263ee:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80263f2:	fb13 f305 	smulbb	r3, r3, r5
 80263f6:	fb14 f406 	smulbb	r4, r4, r6
 80263fa:	00c9      	lsls	r1, r1, #3
 80263fc:	00d2      	lsls	r2, r2, #3
 80263fe:	441c      	add	r4, r3
 8026400:	b2d2      	uxtb	r2, r2
 8026402:	b2cb      	uxtb	r3, r1
 8026404:	fb12 f205 	smulbb	r2, r2, r5
 8026408:	b280      	uxth	r0, r0
 802640a:	fb13 f306 	smulbb	r3, r3, r6
 802640e:	4413      	add	r3, r2
 8026410:	1c42      	adds	r2, r0, #1
 8026412:	b29b      	uxth	r3, r3
 8026414:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026418:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802641c:	1c58      	adds	r0, r3, #1
 802641e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026422:	b2a4      	uxth	r4, r4
 8026424:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026428:	4310      	orrs	r0, r2
 802642a:	1c62      	adds	r2, r4, #1
 802642c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026430:	0964      	lsrs	r4, r4, #5
 8026432:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026436:	4320      	orrs	r0, r4
 8026438:	bd70      	pop	{r4, r5, r6, pc}
	...

0802643c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802643c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026440:	b08f      	sub	sp, #60	; 0x3c
 8026442:	461c      	mov	r4, r3
 8026444:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026448:	9004      	str	r0, [sp, #16]
 802644a:	460d      	mov	r5, r1
 802644c:	4616      	mov	r6, r2
 802644e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026450:	2f00      	cmp	r7, #0
 8026452:	f000 80f6 	beq.w	8026642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8026456:	6820      	ldr	r0, [r4, #0]
 8026458:	6861      	ldr	r1, [r4, #4]
 802645a:	aa0a      	add	r2, sp, #40	; 0x28
 802645c:	c203      	stmia	r2!, {r0, r1}
 802645e:	6818      	ldr	r0, [r3, #0]
 8026460:	6859      	ldr	r1, [r3, #4]
 8026462:	aa0c      	add	r2, sp, #48	; 0x30
 8026464:	c203      	stmia	r2!, {r0, r1}
 8026466:	a80a      	add	r0, sp, #40	; 0x28
 8026468:	f7ef fa5e 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802646c:	4621      	mov	r1, r4
 802646e:	a80c      	add	r0, sp, #48	; 0x30
 8026470:	f7ef fa9e 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026474:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026478:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802647c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026480:	f002 0301 	and.w	r3, r2, #1
 8026484:	9306      	str	r3, [sp, #24]
 8026486:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802648a:	f003 0101 	and.w	r1, r3, #1
 802648e:	9105      	str	r1, [sp, #20]
 8026490:	9805      	ldr	r0, [sp, #20]
 8026492:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026496:	4403      	add	r3, r0
 8026498:	fb01 2303 	mla	r3, r1, r3, r2
 802649c:	f04f 0802 	mov.w	r8, #2
 80264a0:	fb93 f3f8 	sdiv	r3, r3, r8
 80264a4:	441d      	add	r5, r3
 80264a6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80264aa:	441a      	add	r2, r3
 80264ac:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80264b0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80264b4:	4419      	add	r1, r3
 80264b6:	4b64      	ldr	r3, [pc, #400]	; (8026648 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80264b8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80264bc:	6818      	ldr	r0, [r3, #0]
 80264be:	6803      	ldr	r3, [r0, #0]
 80264c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80264c2:	4798      	blx	r3
 80264c4:	4a61      	ldr	r2, [pc, #388]	; (802664c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80264c6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80264ca:	8813      	ldrh	r3, [r2, #0]
 80264cc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80264d0:	2fff      	cmp	r7, #255	; 0xff
 80264d2:	fb03 a404 	mla	r4, r3, r4, sl
 80264d6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80264da:	f106 0604 	add.w	r6, r6, #4
 80264de:	4611      	mov	r1, r2
 80264e0:	fb03 fb0b 	mul.w	fp, r3, fp
 80264e4:	d06b      	beq.n	80265be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80264e6:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80264ea:	9303      	str	r3, [sp, #12]
 80264ec:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80264f0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80264f4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80264f8:	9b07      	ldr	r3, [sp, #28]
 80264fa:	42a3      	cmp	r3, r4
 80264fc:	f240 809c 	bls.w	8026638 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026500:	9b06      	ldr	r3, [sp, #24]
 8026502:	2b00      	cmp	r3, #0
 8026504:	d039      	beq.n	802657a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8026506:	782b      	ldrb	r3, [r5, #0]
 8026508:	8822      	ldrh	r2, [r4, #0]
 802650a:	9804      	ldr	r0, [sp, #16]
 802650c:	f003 030f 	and.w	r3, r3, #15
 8026510:	f105 0801 	add.w	r8, r5, #1
 8026514:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026518:	9b03      	ldr	r3, [sp, #12]
 802651a:	9300      	str	r3, [sp, #0]
 802651c:	463b      	mov	r3, r7
 802651e:	f7ff ff53 	bl	80263c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026522:	f824 0b02 	strh.w	r0, [r4], #2
 8026526:	f109 3bff 	add.w	fp, r9, #4294967295
 802652a:	f1bb 0f01 	cmp.w	fp, #1
 802652e:	46a2      	mov	sl, r4
 8026530:	f104 0404 	add.w	r4, r4, #4
 8026534:	dd24      	ble.n	8026580 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8026536:	f898 3000 	ldrb.w	r3, [r8]
 802653a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802653e:	9804      	ldr	r0, [sp, #16]
 8026540:	091b      	lsrs	r3, r3, #4
 8026542:	f1ab 0b02 	sub.w	fp, fp, #2
 8026546:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802654a:	9b03      	ldr	r3, [sp, #12]
 802654c:	9300      	str	r3, [sp, #0]
 802654e:	463b      	mov	r3, r7
 8026550:	f7ff ff3a 	bl	80263c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026554:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026558:	f818 3b01 	ldrb.w	r3, [r8], #1
 802655c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026560:	9804      	ldr	r0, [sp, #16]
 8026562:	f003 030f 	and.w	r3, r3, #15
 8026566:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802656a:	9b03      	ldr	r3, [sp, #12]
 802656c:	9300      	str	r3, [sp, #0]
 802656e:	463b      	mov	r3, r7
 8026570:	f7ff ff2a 	bl	80263c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026574:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026578:	e7d7      	b.n	802652a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802657a:	46a8      	mov	r8, r5
 802657c:	46cb      	mov	fp, r9
 802657e:	e7d4      	b.n	802652a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026580:	d10e      	bne.n	80265a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026582:	f898 3000 	ldrb.w	r3, [r8]
 8026586:	f8ba 2000 	ldrh.w	r2, [sl]
 802658a:	9804      	ldr	r0, [sp, #16]
 802658c:	091b      	lsrs	r3, r3, #4
 802658e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026592:	9b03      	ldr	r3, [sp, #12]
 8026594:	9300      	str	r3, [sp, #0]
 8026596:	463b      	mov	r3, r7
 8026598:	f7ff ff16 	bl	80263c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802659c:	f82a 0b02 	strh.w	r0, [sl], #2
 80265a0:	9b08      	ldr	r3, [sp, #32]
 80265a2:	9a05      	ldr	r2, [sp, #20]
 80265a4:	881c      	ldrh	r4, [r3, #0]
 80265a6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80265aa:	eba4 0409 	sub.w	r4, r4, r9
 80265ae:	4413      	add	r3, r2
 80265b0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80265b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80265b6:	fb93 f3f2 	sdiv	r3, r3, r2
 80265ba:	441d      	add	r5, r3
 80265bc:	e79c      	b.n	80264f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80265be:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80265c2:	45a3      	cmp	fp, r4
 80265c4:	d938      	bls.n	8026638 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80265c6:	9b06      	ldr	r3, [sp, #24]
 80265c8:	b1f3      	cbz	r3, 8026608 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80265ca:	782b      	ldrb	r3, [r5, #0]
 80265cc:	f003 030f 	and.w	r3, r3, #15
 80265d0:	1c6a      	adds	r2, r5, #1
 80265d2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80265d6:	8023      	strh	r3, [r4, #0]
 80265d8:	f109 30ff 	add.w	r0, r9, #4294967295
 80265dc:	3402      	adds	r4, #2
 80265de:	2801      	cmp	r0, #1
 80265e0:	4623      	mov	r3, r4
 80265e2:	f104 0404 	add.w	r4, r4, #4
 80265e6:	dd12      	ble.n	802660e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80265e8:	7813      	ldrb	r3, [r2, #0]
 80265ea:	091b      	lsrs	r3, r3, #4
 80265ec:	3802      	subs	r0, #2
 80265ee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80265f2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80265f6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80265fa:	f003 030f 	and.w	r3, r3, #15
 80265fe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026602:	f824 3c02 	strh.w	r3, [r4, #-2]
 8026606:	e7ea      	b.n	80265de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026608:	462a      	mov	r2, r5
 802660a:	4648      	mov	r0, r9
 802660c:	e7e7      	b.n	80265de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802660e:	d106      	bne.n	802661e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026610:	7812      	ldrb	r2, [r2, #0]
 8026612:	0912      	lsrs	r2, r2, #4
 8026614:	3302      	adds	r3, #2
 8026616:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802661a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802661e:	880c      	ldrh	r4, [r1, #0]
 8026620:	9a05      	ldr	r2, [sp, #20]
 8026622:	eba4 0409 	sub.w	r4, r4, r9
 8026626:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802662a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802662e:	4413      	add	r3, r2
 8026630:	fb93 f3f8 	sdiv	r3, r3, r8
 8026634:	441d      	add	r5, r3
 8026636:	e7c4      	b.n	80265c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8026638:	4b03      	ldr	r3, [pc, #12]	; (8026648 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802663a:	6818      	ldr	r0, [r3, #0]
 802663c:	6803      	ldr	r3, [r0, #0]
 802663e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026640:	4798      	blx	r3
 8026642:	b00f      	add	sp, #60	; 0x3c
 8026644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026648:	200132bc 	.word	0x200132bc
 802664c:	200132b6 	.word	0x200132b6

08026650 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8026650:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026652:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8026656:	2dff      	cmp	r5, #255	; 0xff
 8026658:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802665c:	d10c      	bne.n	8026678 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802665e:	2bff      	cmp	r3, #255	; 0xff
 8026660:	d10a      	bne.n	8026678 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026662:	4b25      	ldr	r3, [pc, #148]	; (80266f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8026664:	0948      	lsrs	r0, r1, #5
 8026666:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802666a:	403b      	ands	r3, r7
 802666c:	4318      	orrs	r0, r3
 802666e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026672:	4308      	orrs	r0, r1
 8026674:	b280      	uxth	r0, r0
 8026676:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026678:	fb15 f503 	smulbb	r5, r5, r3
 802667c:	b2ab      	uxth	r3, r5
 802667e:	1c5d      	adds	r5, r3, #1
 8026680:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026684:	1214      	asrs	r4, r2, #8
 8026686:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802668a:	fa1f fc85 	uxth.w	ip, r5
 802668e:	10d6      	asrs	r6, r2, #3
 8026690:	00d0      	lsls	r0, r2, #3
 8026692:	43ed      	mvns	r5, r5
 8026694:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026698:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802669c:	b2eb      	uxtb	r3, r5
 802669e:	b2c0      	uxtb	r0, r0
 80266a0:	fb12 f20c 	smulbb	r2, r2, ip
 80266a4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80266a8:	fb04 2403 	mla	r4, r4, r3, r2
 80266ac:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80266b0:	b2c8      	uxtb	r0, r1
 80266b2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80266b6:	b2fd      	uxtb	r5, r7
 80266b8:	fb10 f00c 	smulbb	r0, r0, ip
 80266bc:	b2a4      	uxth	r4, r4
 80266be:	fb02 0003 	mla	r0, r2, r3, r0
 80266c2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80266c6:	fb15 f50c 	smulbb	r5, r5, ip
 80266ca:	fb06 5503 	mla	r5, r6, r3, r5
 80266ce:	b283      	uxth	r3, r0
 80266d0:	1c60      	adds	r0, r4, #1
 80266d2:	b2ad      	uxth	r5, r5
 80266d4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80266d8:	1c58      	adds	r0, r3, #1
 80266da:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80266de:	1c6b      	adds	r3, r5, #1
 80266e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80266e4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80266e8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80266ec:	096d      	lsrs	r5, r5, #5
 80266ee:	4320      	orrs	r0, r4
 80266f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80266f4:	4328      	orrs	r0, r5
 80266f6:	e7be      	b.n	8026676 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80266f8:	00fff800 	.word	0x00fff800

080266fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80266fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026700:	461c      	mov	r4, r3
 8026702:	b08d      	sub	sp, #52	; 0x34
 8026704:	460d      	mov	r5, r1
 8026706:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8026708:	6861      	ldr	r1, [r4, #4]
 802670a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802670e:	4680      	mov	r8, r0
 8026710:	6820      	ldr	r0, [r4, #0]
 8026712:	4616      	mov	r6, r2
 8026714:	aa08      	add	r2, sp, #32
 8026716:	c203      	stmia	r2!, {r0, r1}
 8026718:	6818      	ldr	r0, [r3, #0]
 802671a:	6859      	ldr	r1, [r3, #4]
 802671c:	aa0a      	add	r2, sp, #40	; 0x28
 802671e:	c203      	stmia	r2!, {r0, r1}
 8026720:	a808      	add	r0, sp, #32
 8026722:	f7ef f901 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026726:	4621      	mov	r1, r4
 8026728:	a80a      	add	r0, sp, #40	; 0x28
 802672a:	f7ef f941 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802672e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8026732:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8026736:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802673a:	f002 0301 	and.w	r3, r2, #1
 802673e:	9303      	str	r3, [sp, #12]
 8026740:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026744:	f003 0101 	and.w	r1, r3, #1
 8026748:	9102      	str	r1, [sp, #8]
 802674a:	9802      	ldr	r0, [sp, #8]
 802674c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8026750:	4403      	add	r3, r0
 8026752:	fb01 2303 	mla	r3, r1, r3, r2
 8026756:	f04f 0a02 	mov.w	sl, #2
 802675a:	fb93 f3fa 	sdiv	r3, r3, sl
 802675e:	441d      	add	r5, r3
 8026760:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8026764:	441a      	add	r2, r3
 8026766:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802676a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802676e:	4a3f      	ldr	r2, [pc, #252]	; (802686c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8026770:	9205      	str	r2, [sp, #20]
 8026772:	4419      	add	r1, r3
 8026774:	6810      	ldr	r0, [r2, #0]
 8026776:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802677a:	6803      	ldr	r3, [r0, #0]
 802677c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802677e:	4798      	blx	r3
 8026780:	4b3b      	ldr	r3, [pc, #236]	; (8026870 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026782:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8026786:	8819      	ldrh	r1, [r3, #0]
 8026788:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802678c:	fb01 c404 	mla	r4, r1, r4, ip
 8026790:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026794:	434f      	muls	r7, r1
 8026796:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802679a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802679e:	3604      	adds	r6, #4
 80267a0:	9204      	str	r2, [sp, #16]
 80267a2:	9b04      	ldr	r3, [sp, #16]
 80267a4:	429c      	cmp	r4, r3
 80267a6:	d258      	bcs.n	802685a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80267a8:	9b03      	ldr	r3, [sp, #12]
 80267aa:	2b00      	cmp	r3, #0
 80267ac:	d034      	beq.n	8026818 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80267ae:	782b      	ldrb	r3, [r5, #0]
 80267b0:	f003 030f 	and.w	r3, r3, #15
 80267b4:	1c6f      	adds	r7, r5, #1
 80267b6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80267ba:	0e0b      	lsrs	r3, r1, #24
 80267bc:	d006      	beq.n	80267cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80267be:	8822      	ldrh	r2, [r4, #0]
 80267c0:	9300      	str	r3, [sp, #0]
 80267c2:	4640      	mov	r0, r8
 80267c4:	464b      	mov	r3, r9
 80267c6:	f7ff ff43 	bl	8026650 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80267ca:	8020      	strh	r0, [r4, #0]
 80267cc:	3402      	adds	r4, #2
 80267ce:	f10b 3aff 	add.w	sl, fp, #4294967295
 80267d2:	f1ba 0f01 	cmp.w	sl, #1
 80267d6:	dd22      	ble.n	802681e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80267d8:	783b      	ldrb	r3, [r7, #0]
 80267da:	091b      	lsrs	r3, r3, #4
 80267dc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80267e0:	0e0b      	lsrs	r3, r1, #24
 80267e2:	d006      	beq.n	80267f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80267e4:	8822      	ldrh	r2, [r4, #0]
 80267e6:	9300      	str	r3, [sp, #0]
 80267e8:	4640      	mov	r0, r8
 80267ea:	464b      	mov	r3, r9
 80267ec:	f7ff ff30 	bl	8026650 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80267f0:	8020      	strh	r0, [r4, #0]
 80267f2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80267f6:	f003 030f 	and.w	r3, r3, #15
 80267fa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80267fe:	0e0b      	lsrs	r3, r1, #24
 8026800:	d006      	beq.n	8026810 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026802:	8862      	ldrh	r2, [r4, #2]
 8026804:	9300      	str	r3, [sp, #0]
 8026806:	4640      	mov	r0, r8
 8026808:	464b      	mov	r3, r9
 802680a:	f7ff ff21 	bl	8026650 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802680e:	8060      	strh	r0, [r4, #2]
 8026810:	3404      	adds	r4, #4
 8026812:	f1aa 0a02 	sub.w	sl, sl, #2
 8026816:	e7dc      	b.n	80267d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026818:	462f      	mov	r7, r5
 802681a:	46da      	mov	sl, fp
 802681c:	e7d9      	b.n	80267d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802681e:	d10d      	bne.n	802683c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026820:	783b      	ldrb	r3, [r7, #0]
 8026822:	091b      	lsrs	r3, r3, #4
 8026824:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026828:	0e0b      	lsrs	r3, r1, #24
 802682a:	d006      	beq.n	802683a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802682c:	8822      	ldrh	r2, [r4, #0]
 802682e:	9300      	str	r3, [sp, #0]
 8026830:	4640      	mov	r0, r8
 8026832:	464b      	mov	r3, r9
 8026834:	f7ff ff0c 	bl	8026650 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026838:	8020      	strh	r0, [r4, #0]
 802683a:	3402      	adds	r4, #2
 802683c:	9b06      	ldr	r3, [sp, #24]
 802683e:	9a02      	ldr	r2, [sp, #8]
 8026840:	881b      	ldrh	r3, [r3, #0]
 8026842:	eba3 030b 	sub.w	r3, r3, fp
 8026846:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802684a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802684e:	4413      	add	r3, r2
 8026850:	9a07      	ldr	r2, [sp, #28]
 8026852:	fb93 f3f2 	sdiv	r3, r3, r2
 8026856:	441d      	add	r5, r3
 8026858:	e7a3      	b.n	80267a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802685a:	9b05      	ldr	r3, [sp, #20]
 802685c:	6818      	ldr	r0, [r3, #0]
 802685e:	6803      	ldr	r3, [r0, #0]
 8026860:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026862:	4798      	blx	r3
 8026864:	b00d      	add	sp, #52	; 0x34
 8026866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802686a:	bf00      	nop
 802686c:	200132bc 	.word	0x200132bc
 8026870:	200132b6 	.word	0x200132b6

08026874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8026874:	b570      	push	{r4, r5, r6, lr}
 8026876:	1214      	asrs	r4, r2, #8
 8026878:	788d      	ldrb	r5, [r1, #2]
 802687a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802687e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026882:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026886:	fb15 f503 	smulbb	r5, r5, r3
 802688a:	fb04 5506 	mla	r5, r4, r6, r5
 802688e:	10d0      	asrs	r0, r2, #3
 8026890:	784c      	ldrb	r4, [r1, #1]
 8026892:	7809      	ldrb	r1, [r1, #0]
 8026894:	00d2      	lsls	r2, r2, #3
 8026896:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802689a:	b2d2      	uxtb	r2, r2
 802689c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80268a0:	fb14 f403 	smulbb	r4, r4, r3
 80268a4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80268a8:	fb11 f303 	smulbb	r3, r1, r3
 80268ac:	fb00 4406 	mla	r4, r0, r6, r4
 80268b0:	fb02 3306 	mla	r3, r2, r6, r3
 80268b4:	b2ad      	uxth	r5, r5
 80268b6:	b29b      	uxth	r3, r3
 80268b8:	b2a4      	uxth	r4, r4
 80268ba:	1c68      	adds	r0, r5, #1
 80268bc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80268c0:	1c62      	adds	r2, r4, #1
 80268c2:	1c58      	adds	r0, r3, #1
 80268c4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80268c8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80268cc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80268d0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80268d4:	0964      	lsrs	r4, r4, #5
 80268d6:	4328      	orrs	r0, r5
 80268d8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80268dc:	4320      	orrs	r0, r4
 80268de:	bd70      	pop	{r4, r5, r6, pc}

080268e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80268e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80268e4:	b08f      	sub	sp, #60	; 0x3c
 80268e6:	461c      	mov	r4, r3
 80268e8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80268ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80268ee:	4682      	mov	sl, r0
 80268f0:	460e      	mov	r6, r1
 80268f2:	4615      	mov	r5, r2
 80268f4:	2f00      	cmp	r7, #0
 80268f6:	f000 8142 	beq.w	8026b7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80268fa:	6820      	ldr	r0, [r4, #0]
 80268fc:	6861      	ldr	r1, [r4, #4]
 80268fe:	aa0a      	add	r2, sp, #40	; 0x28
 8026900:	c203      	stmia	r2!, {r0, r1}
 8026902:	6818      	ldr	r0, [r3, #0]
 8026904:	6859      	ldr	r1, [r3, #4]
 8026906:	aa0c      	add	r2, sp, #48	; 0x30
 8026908:	c203      	stmia	r2!, {r0, r1}
 802690a:	a80a      	add	r0, sp, #40	; 0x28
 802690c:	f7ef f80c 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026910:	4621      	mov	r1, r4
 8026912:	a80c      	add	r0, sp, #48	; 0x30
 8026914:	f7ef f84c 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026918:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802691c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026920:	f002 0301 	and.w	r3, r2, #1
 8026924:	9306      	str	r3, [sp, #24]
 8026926:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802692a:	f003 0101 	and.w	r1, r3, #1
 802692e:	9105      	str	r1, [sp, #20]
 8026930:	9805      	ldr	r0, [sp, #20]
 8026932:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026936:	4403      	add	r3, r0
 8026938:	fb01 2303 	mla	r3, r1, r3, r2
 802693c:	f04f 0802 	mov.w	r8, #2
 8026940:	fb93 f3f8 	sdiv	r3, r3, r8
 8026944:	441e      	add	r6, r3
 8026946:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802694a:	441a      	add	r2, r3
 802694c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026950:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026954:	4419      	add	r1, r3
 8026956:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802695a:	9303      	str	r3, [sp, #12]
 802695c:	4b89      	ldr	r3, [pc, #548]	; (8026b84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802695e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026962:	6818      	ldr	r0, [r3, #0]
 8026964:	6803      	ldr	r3, [r0, #0]
 8026966:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026968:	4798      	blx	r3
 802696a:	4a87      	ldr	r2, [pc, #540]	; (8026b88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802696c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026970:	8813      	ldrh	r3, [r2, #0]
 8026972:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8026976:	2fff      	cmp	r7, #255	; 0xff
 8026978:	fb03 9404 	mla	r4, r3, r4, r9
 802697c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026980:	f105 0504 	add.w	r5, r5, #4
 8026984:	4694      	mov	ip, r2
 8026986:	fb03 f30b 	mul.w	r3, r3, fp
 802698a:	d071      	beq.n	8026a70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802698c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026990:	43f9      	mvns	r1, r7
 8026992:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026996:	b2c9      	uxtb	r1, r1
 8026998:	9104      	str	r1, [sp, #16]
 802699a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802699e:	9b07      	ldr	r3, [sp, #28]
 80269a0:	42a3      	cmp	r3, r4
 80269a2:	f240 80e7 	bls.w	8026b74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80269a6:	9b06      	ldr	r3, [sp, #24]
 80269a8:	2b00      	cmp	r3, #0
 80269aa:	d03d      	beq.n	8026a28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80269ac:	7831      	ldrb	r1, [r6, #0]
 80269ae:	9b04      	ldr	r3, [sp, #16]
 80269b0:	8822      	ldrh	r2, [r4, #0]
 80269b2:	9300      	str	r3, [sp, #0]
 80269b4:	f001 010f 	and.w	r1, r1, #15
 80269b8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80269bc:	463b      	mov	r3, r7
 80269be:	4429      	add	r1, r5
 80269c0:	4650      	mov	r0, sl
 80269c2:	f7ff ff57 	bl	8026874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80269c6:	9b03      	ldr	r3, [sp, #12]
 80269c8:	f824 0b02 	strh.w	r0, [r4], #2
 80269cc:	f106 0801 	add.w	r8, r6, #1
 80269d0:	f103 3bff 	add.w	fp, r3, #4294967295
 80269d4:	f1bb 0f01 	cmp.w	fp, #1
 80269d8:	46a1      	mov	r9, r4
 80269da:	f104 0404 	add.w	r4, r4, #4
 80269de:	dd27      	ble.n	8026a30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80269e0:	f898 1000 	ldrb.w	r1, [r8]
 80269e4:	9b04      	ldr	r3, [sp, #16]
 80269e6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80269ea:	9300      	str	r3, [sp, #0]
 80269ec:	0909      	lsrs	r1, r1, #4
 80269ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80269f2:	463b      	mov	r3, r7
 80269f4:	4429      	add	r1, r5
 80269f6:	4650      	mov	r0, sl
 80269f8:	f7ff ff3c 	bl	8026874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80269fc:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026a00:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026a04:	9b04      	ldr	r3, [sp, #16]
 8026a06:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026a0a:	9300      	str	r3, [sp, #0]
 8026a0c:	f001 010f 	and.w	r1, r1, #15
 8026a10:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026a14:	463b      	mov	r3, r7
 8026a16:	4429      	add	r1, r5
 8026a18:	4650      	mov	r0, sl
 8026a1a:	f7ff ff2b 	bl	8026874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026a1e:	f1ab 0b02 	sub.w	fp, fp, #2
 8026a22:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026a26:	e7d5      	b.n	80269d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026a28:	46b0      	mov	r8, r6
 8026a2a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026a2e:	e7d1      	b.n	80269d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026a30:	d10f      	bne.n	8026a52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026a32:	f898 1000 	ldrb.w	r1, [r8]
 8026a36:	9b04      	ldr	r3, [sp, #16]
 8026a38:	f8b9 2000 	ldrh.w	r2, [r9]
 8026a3c:	9300      	str	r3, [sp, #0]
 8026a3e:	0909      	lsrs	r1, r1, #4
 8026a40:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026a44:	463b      	mov	r3, r7
 8026a46:	4429      	add	r1, r5
 8026a48:	4650      	mov	r0, sl
 8026a4a:	f7ff ff13 	bl	8026874 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026a4e:	f829 0b02 	strh.w	r0, [r9], #2
 8026a52:	9b08      	ldr	r3, [sp, #32]
 8026a54:	9a05      	ldr	r2, [sp, #20]
 8026a56:	881c      	ldrh	r4, [r3, #0]
 8026a58:	9b03      	ldr	r3, [sp, #12]
 8026a5a:	1ae4      	subs	r4, r4, r3
 8026a5c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026a60:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026a64:	4413      	add	r3, r2
 8026a66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026a68:	fb93 f3f2 	sdiv	r3, r3, r2
 8026a6c:	441e      	add	r6, r3
 8026a6e:	e796      	b.n	802699e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026a70:	4f46      	ldr	r7, [pc, #280]	; (8026b8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026a72:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026a76:	42a3      	cmp	r3, r4
 8026a78:	d97c      	bls.n	8026b74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026a7a:	9a06      	ldr	r2, [sp, #24]
 8026a7c:	2a00      	cmp	r2, #0
 8026a7e:	d054      	beq.n	8026b2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026a80:	7830      	ldrb	r0, [r6, #0]
 8026a82:	f000 000f 	and.w	r0, r0, #15
 8026a86:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026a8a:	eb05 0e00 	add.w	lr, r5, r0
 8026a8e:	5c28      	ldrb	r0, [r5, r0]
 8026a90:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026a94:	f89e e001 	ldrb.w	lr, [lr, #1]
 8026a98:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026a9c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026aa0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026aa4:	ea42 020e 	orr.w	r2, r2, lr
 8026aa8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026aac:	f824 2b02 	strh.w	r2, [r4], #2
 8026ab0:	9a03      	ldr	r2, [sp, #12]
 8026ab2:	1c71      	adds	r1, r6, #1
 8026ab4:	f102 3eff 	add.w	lr, r2, #4294967295
 8026ab8:	f1be 0f01 	cmp.w	lr, #1
 8026abc:	4620      	mov	r0, r4
 8026abe:	f104 0404 	add.w	r4, r4, #4
 8026ac2:	dd36      	ble.n	8026b32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026ac4:	7808      	ldrb	r0, [r1, #0]
 8026ac6:	0900      	lsrs	r0, r0, #4
 8026ac8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026acc:	eb05 0a00 	add.w	sl, r5, r0
 8026ad0:	f1ae 0e02 	sub.w	lr, lr, #2
 8026ad4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026ad8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026adc:	00d2      	lsls	r2, r2, #3
 8026ade:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026ae2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026ae6:	ea49 0202 	orr.w	r2, r9, r2
 8026aea:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026aee:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026af2:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026af6:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026afa:	f000 000f 	and.w	r0, r0, #15
 8026afe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026b02:	eb05 0a00 	add.w	sl, r5, r0
 8026b06:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026b0a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026b0e:	00d2      	lsls	r2, r2, #3
 8026b10:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026b14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026b18:	ea49 0202 	orr.w	r2, r9, r2
 8026b1c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026b20:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026b24:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026b28:	e7c6      	b.n	8026ab8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026b2a:	4631      	mov	r1, r6
 8026b2c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026b30:	e7c2      	b.n	8026ab8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026b32:	d111      	bne.n	8026b58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026b34:	7809      	ldrb	r1, [r1, #0]
 8026b36:	0909      	lsrs	r1, r1, #4
 8026b38:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026b3c:	186c      	adds	r4, r5, r1
 8026b3e:	5c69      	ldrb	r1, [r5, r1]
 8026b40:	78a2      	ldrb	r2, [r4, #2]
 8026b42:	7864      	ldrb	r4, [r4, #1]
 8026b44:	00e4      	lsls	r4, r4, #3
 8026b46:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026b4a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026b4e:	4322      	orrs	r2, r4
 8026b50:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026b54:	f820 2b02 	strh.w	r2, [r0], #2
 8026b58:	9a03      	ldr	r2, [sp, #12]
 8026b5a:	f8bc 4000 	ldrh.w	r4, [ip]
 8026b5e:	9905      	ldr	r1, [sp, #20]
 8026b60:	1aa4      	subs	r4, r4, r2
 8026b62:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8026b66:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026b6a:	440a      	add	r2, r1
 8026b6c:	fb92 f2f8 	sdiv	r2, r2, r8
 8026b70:	4416      	add	r6, r2
 8026b72:	e780      	b.n	8026a76 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026b74:	4b03      	ldr	r3, [pc, #12]	; (8026b84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026b76:	6818      	ldr	r0, [r3, #0]
 8026b78:	6803      	ldr	r3, [r0, #0]
 8026b7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026b7c:	4798      	blx	r3
 8026b7e:	b00f      	add	sp, #60	; 0x3c
 8026b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b84:	200132bc 	.word	0x200132bc
 8026b88:	200132b6 	.word	0x200132b6
 8026b8c:	fffff800 	.word	0xfffff800

08026b90 <CRC_Lock>:
 8026b90:	b530      	push	{r4, r5, lr}
 8026b92:	4a20      	ldr	r2, [pc, #128]	; (8026c14 <CRC_Lock+0x84>)
 8026b94:	6813      	ldr	r3, [r2, #0]
 8026b96:	f023 0301 	bic.w	r3, r3, #1
 8026b9a:	6013      	str	r3, [r2, #0]
 8026b9c:	4b1e      	ldr	r3, [pc, #120]	; (8026c18 <CRC_Lock+0x88>)
 8026b9e:	681a      	ldr	r2, [r3, #0]
 8026ba0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026ba4:	4022      	ands	r2, r4
 8026ba6:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026baa:	42aa      	cmp	r2, r5
 8026bac:	d005      	beq.n	8026bba <CRC_Lock+0x2a>
 8026bae:	681b      	ldr	r3, [r3, #0]
 8026bb0:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026bb4:	4023      	ands	r3, r4
 8026bb6:	4293      	cmp	r3, r2
 8026bb8:	d124      	bne.n	8026c04 <CRC_Lock+0x74>
 8026bba:	4b18      	ldr	r3, [pc, #96]	; (8026c1c <CRC_Lock+0x8c>)
 8026bbc:	681b      	ldr	r3, [r3, #0]
 8026bbe:	bb0b      	cbnz	r3, 8026c04 <CRC_Lock+0x74>
 8026bc0:	4b17      	ldr	r3, [pc, #92]	; (8026c20 <CRC_Lock+0x90>)
 8026bc2:	681a      	ldr	r2, [r3, #0]
 8026bc4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026bc8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026bcc:	d00d      	beq.n	8026bea <CRC_Lock+0x5a>
 8026bce:	681a      	ldr	r2, [r3, #0]
 8026bd0:	f240 4483 	movw	r4, #1155	; 0x483
 8026bd4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026bd8:	42a2      	cmp	r2, r4
 8026bda:	d006      	beq.n	8026bea <CRC_Lock+0x5a>
 8026bdc:	681b      	ldr	r3, [r3, #0]
 8026bde:	f240 4285 	movw	r2, #1157	; 0x485
 8026be2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026be6:	4293      	cmp	r3, r2
 8026be8:	d10c      	bne.n	8026c04 <CRC_Lock+0x74>
 8026bea:	4b0e      	ldr	r3, [pc, #56]	; (8026c24 <CRC_Lock+0x94>)
 8026bec:	2201      	movs	r2, #1
 8026bee:	601a      	str	r2, [r3, #0]
 8026bf0:	681a      	ldr	r2, [r3, #0]
 8026bf2:	2a00      	cmp	r2, #0
 8026bf4:	d1fc      	bne.n	8026bf0 <CRC_Lock+0x60>
 8026bf6:	4b0c      	ldr	r3, [pc, #48]	; (8026c28 <CRC_Lock+0x98>)
 8026bf8:	6018      	str	r0, [r3, #0]
 8026bfa:	6818      	ldr	r0, [r3, #0]
 8026bfc:	1a43      	subs	r3, r0, r1
 8026bfe:	4258      	negs	r0, r3
 8026c00:	4158      	adcs	r0, r3
 8026c02:	bd30      	pop	{r4, r5, pc}
 8026c04:	4b09      	ldr	r3, [pc, #36]	; (8026c2c <CRC_Lock+0x9c>)
 8026c06:	2201      	movs	r2, #1
 8026c08:	601a      	str	r2, [r3, #0]
 8026c0a:	681a      	ldr	r2, [r3, #0]
 8026c0c:	2a00      	cmp	r2, #0
 8026c0e:	d1fc      	bne.n	8026c0a <CRC_Lock+0x7a>
 8026c10:	4b07      	ldr	r3, [pc, #28]	; (8026c30 <CRC_Lock+0xa0>)
 8026c12:	e7f1      	b.n	8026bf8 <CRC_Lock+0x68>
 8026c14:	e0002000 	.word	0xe0002000
 8026c18:	e000ed00 	.word	0xe000ed00
 8026c1c:	e0042000 	.word	0xe0042000
 8026c20:	5c001000 	.word	0x5c001000
 8026c24:	58024c08 	.word	0x58024c08
 8026c28:	58024c00 	.word	0x58024c00
 8026c2c:	40023008 	.word	0x40023008
 8026c30:	40023000 	.word	0x40023000

08026c34 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026c34:	6101      	str	r1, [r0, #16]
 8026c36:	4770      	bx	lr

08026c38 <_ZN8touchgfx8Gestures4tickEv>:
 8026c38:	7b83      	ldrb	r3, [r0, #14]
 8026c3a:	b14b      	cbz	r3, 8026c50 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026c3c:	8903      	ldrh	r3, [r0, #8]
 8026c3e:	3301      	adds	r3, #1
 8026c40:	b29b      	uxth	r3, r3
 8026c42:	2b07      	cmp	r3, #7
 8026c44:	8103      	strh	r3, [r0, #8]
 8026c46:	bf81      	itttt	hi
 8026c48:	2300      	movhi	r3, #0
 8026c4a:	8143      	strhhi	r3, [r0, #10]
 8026c4c:	8183      	strhhi	r3, [r0, #12]
 8026c4e:	7383      	strbhi	r3, [r0, #14]
 8026c50:	4770      	bx	lr
	...

08026c54 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026c54:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026c58:	4698      	mov	r8, r3
 8026c5a:	8883      	ldrh	r3, [r0, #4]
 8026c5c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026c60:	eba8 0303 	sub.w	r3, r8, r3
 8026c64:	b21b      	sxth	r3, r3
 8026c66:	4604      	mov	r4, r0
 8026c68:	2b00      	cmp	r3, #0
 8026c6a:	4617      	mov	r7, r2
 8026c6c:	4a18      	ldr	r2, [pc, #96]	; (8026cd0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026c6e:	9200      	str	r2, [sp, #0]
 8026c70:	bfb8      	it	lt
 8026c72:	425b      	neglt	r3, r3
 8026c74:	8aa2      	ldrh	r2, [r4, #20]
 8026c76:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026c7a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026c7e:	b21b      	sxth	r3, r3
 8026c80:	460e      	mov	r6, r1
 8026c82:	4293      	cmp	r3, r2
 8026c84:	88c1      	ldrh	r1, [r0, #6]
 8026c86:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026c8a:	f04f 0000 	mov.w	r0, #0
 8026c8e:	f88d 0004 	strb.w	r0, [sp, #4]
 8026c92:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026c96:	dc07      	bgt.n	8026ca8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026c98:	1a69      	subs	r1, r5, r1
 8026c9a:	b209      	sxth	r1, r1
 8026c9c:	2900      	cmp	r1, #0
 8026c9e:	bfb8      	it	lt
 8026ca0:	4249      	neglt	r1, r1
 8026ca2:	b209      	sxth	r1, r1
 8026ca4:	428a      	cmp	r2, r1
 8026ca6:	da10      	bge.n	8026cca <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026ca8:	6920      	ldr	r0, [r4, #16]
 8026caa:	6803      	ldr	r3, [r0, #0]
 8026cac:	4669      	mov	r1, sp
 8026cae:	685b      	ldr	r3, [r3, #4]
 8026cb0:	4798      	blx	r3
 8026cb2:	eba8 0606 	sub.w	r6, r8, r6
 8026cb6:	2300      	movs	r3, #0
 8026cb8:	1bef      	subs	r7, r5, r7
 8026cba:	2001      	movs	r0, #1
 8026cbc:	8123      	strh	r3, [r4, #8]
 8026cbe:	8166      	strh	r6, [r4, #10]
 8026cc0:	81a7      	strh	r7, [r4, #12]
 8026cc2:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026cc6:	80e5      	strh	r5, [r4, #6]
 8026cc8:	73a0      	strb	r0, [r4, #14]
 8026cca:	b004      	add	sp, #16
 8026ccc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026cd0:	0802ef70 	.word	0x0802ef70

08026cd4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026cd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026cd6:	461e      	mov	r6, r3
 8026cd8:	1e4b      	subs	r3, r1, #1
 8026cda:	2b01      	cmp	r3, #1
 8026cdc:	b085      	sub	sp, #20
 8026cde:	4604      	mov	r4, r0
 8026ce0:	460d      	mov	r5, r1
 8026ce2:	4617      	mov	r7, r2
 8026ce4:	d84b      	bhi.n	8026d7e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026ce6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026cea:	1cd3      	adds	r3, r2, #3
 8026cec:	b29b      	uxth	r3, r3
 8026cee:	2b06      	cmp	r3, #6
 8026cf0:	d916      	bls.n	8026d20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026cf2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026d94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026cf6:	f8cd c004 	str.w	ip, [sp, #4]
 8026cfa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026cfe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026d02:	6900      	ldr	r0, [r0, #16]
 8026d04:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026d08:	f04f 0c00 	mov.w	ip, #0
 8026d0c:	f88d c008 	strb.w	ip, [sp, #8]
 8026d10:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026d14:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026d18:	6803      	ldr	r3, [r0, #0]
 8026d1a:	a901      	add	r1, sp, #4
 8026d1c:	689b      	ldr	r3, [r3, #8]
 8026d1e:	4798      	blx	r3
 8026d20:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026d24:	1cd3      	adds	r3, r2, #3
 8026d26:	b29b      	uxth	r3, r3
 8026d28:	2b06      	cmp	r3, #6
 8026d2a:	d916      	bls.n	8026d5a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026d2c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026d94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026d30:	f8cd c004 	str.w	ip, [sp, #4]
 8026d34:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026d38:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026d3c:	6920      	ldr	r0, [r4, #16]
 8026d3e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026d42:	f04f 0c01 	mov.w	ip, #1
 8026d46:	f88d c008 	strb.w	ip, [sp, #8]
 8026d4a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026d4e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026d52:	6803      	ldr	r3, [r0, #0]
 8026d54:	a901      	add	r1, sp, #4
 8026d56:	689b      	ldr	r3, [r3, #8]
 8026d58:	4798      	blx	r3
 8026d5a:	4b0d      	ldr	r3, [pc, #52]	; (8026d90 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026d5c:	9301      	str	r3, [sp, #4]
 8026d5e:	6920      	ldr	r0, [r4, #16]
 8026d60:	f88d 5008 	strb.w	r5, [sp, #8]
 8026d64:	2300      	movs	r3, #0
 8026d66:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026d6a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026d6e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026d72:	6803      	ldr	r3, [r0, #0]
 8026d74:	a901      	add	r1, sp, #4
 8026d76:	681b      	ldr	r3, [r3, #0]
 8026d78:	4798      	blx	r3
 8026d7a:	b005      	add	sp, #20
 8026d7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026d7e:	2900      	cmp	r1, #0
 8026d80:	d1eb      	bne.n	8026d5a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026d82:	80a2      	strh	r2, [r4, #4]
 8026d84:	80c6      	strh	r6, [r0, #6]
 8026d86:	60a1      	str	r1, [r4, #8]
 8026d88:	81a1      	strh	r1, [r4, #12]
 8026d8a:	73a1      	strb	r1, [r4, #14]
 8026d8c:	e7e5      	b.n	8026d5a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026d8e:	bf00      	nop
 8026d90:	0802ef5c 	.word	0x0802ef5c
 8026d94:	0802ef84 	.word	0x0802ef84

08026d98 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8026d98:	10c9      	asrs	r1, r1, #3
 8026d9a:	2900      	cmp	r1, #0
 8026d9c:	bfb8      	it	lt
 8026d9e:	4249      	neglt	r1, r1
 8026da0:	2801      	cmp	r0, #1
 8026da2:	d108      	bne.n	8026db6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026da4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026da8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026dac:	4601      	mov	r1, r0
 8026dae:	dd02      	ble.n	8026db6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026db0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026db4:	4770      	bx	lr
 8026db6:	29ff      	cmp	r1, #255	; 0xff
 8026db8:	bfa8      	it	ge
 8026dba:	21ff      	movge	r1, #255	; 0xff
 8026dbc:	4608      	mov	r0, r1
 8026dbe:	4770      	bx	lr

08026dc0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026dc0:	b410      	push	{r4}
 8026dc2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026dc6:	429c      	cmp	r4, r3
 8026dc8:	d803      	bhi.n	8026dd2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026dca:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026dce:	f7ed b8b1 	b.w	8013f34 <_ZN8touchgfx7Outline6lineToEii>
 8026dd2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026dd6:	4770      	bx	lr

08026dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ddc:	b08b      	sub	sp, #44	; 0x2c
 8026dde:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026de2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8026de6:	9308      	str	r3, [sp, #32]
 8026de8:	4606      	mov	r6, r0
 8026dea:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026dee:	9309      	str	r3, [sp, #36]	; 0x24
 8026df0:	468a      	mov	sl, r1
 8026df2:	f7ed fa0c 	bl	801420e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026df6:	68b5      	ldr	r5, [r6, #8]
 8026df8:	4604      	mov	r4, r0
 8026dfa:	2d00      	cmp	r5, #0
 8026dfc:	d044      	beq.n	8026e88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026dfe:	6873      	ldr	r3, [r6, #4]
 8026e00:	42ab      	cmp	r3, r5
 8026e02:	d33d      	bcc.n	8026e80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026e04:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026e08:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026e0c:	eb02 0b03 	add.w	fp, r2, r3
 8026e10:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026e14:	fb02 1203 	mla	r2, r2, r3, r1
 8026e18:	9205      	str	r2, [sp, #20]
 8026e1a:	1e6a      	subs	r2, r5, #1
 8026e1c:	9204      	str	r2, [sp, #16]
 8026e1e:	f04f 0800 	mov.w	r8, #0
 8026e22:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026e26:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026e2a:	454b      	cmp	r3, r9
 8026e2c:	463a      	mov	r2, r7
 8026e2e:	d008      	beq.n	8026e42 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026e30:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026e34:	eb03 0b09 	add.w	fp, r3, r9
 8026e38:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026e3c:	fb03 1309 	mla	r3, r3, r9, r1
 8026e40:	9305      	str	r3, [sp, #20]
 8026e42:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8026e46:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8026e4a:	4498      	add	r8, r3
 8026e4c:	9b04      	ldr	r3, [sp, #16]
 8026e4e:	3b01      	subs	r3, #1
 8026e50:	9304      	str	r3, [sp, #16]
 8026e52:	9b04      	ldr	r3, [sp, #16]
 8026e54:	3301      	adds	r3, #1
 8026e56:	d015      	beq.n	8026e84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8026e58:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026e5c:	42bb      	cmp	r3, r7
 8026e5e:	d117      	bne.n	8026e90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026e60:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026e64:	9b04      	ldr	r3, [sp, #16]
 8026e66:	4548      	cmp	r0, r9
 8026e68:	f103 33ff 	add.w	r3, r3, #4294967295
 8026e6c:	d17f      	bne.n	8026f6e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026e6e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026e72:	4401      	add	r1, r0
 8026e74:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026e78:	4480      	add	r8, r0
 8026e7a:	e7e9      	b.n	8026e50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026e7c:	461f      	mov	r7, r3
 8026e7e:	e044      	b.n	8026f0a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8026e80:	2000      	movs	r0, #0
 8026e82:	e002      	b.n	8026e8a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026e84:	2900      	cmp	r1, #0
 8026e86:	d16f      	bne.n	8026f68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026e88:	2001      	movs	r0, #1
 8026e8a:	b00b      	add	sp, #44	; 0x2c
 8026e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e90:	2900      	cmp	r1, #0
 8026e92:	d030      	beq.n	8026ef6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026e94:	2f00      	cmp	r7, #0
 8026e96:	db29      	blt.n	8026eec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026e98:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026e9c:	42bb      	cmp	r3, r7
 8026e9e:	dd25      	ble.n	8026eec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026ea0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026ea4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026ea8:	f7ff ff76 	bl	8026d98 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026eac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026eae:	fb10 f003 	smulbb	r0, r0, r3
 8026eb2:	b280      	uxth	r0, r0
 8026eb4:	1c41      	adds	r1, r0, #1
 8026eb6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026eba:	1209      	asrs	r1, r1, #8
 8026ebc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026ec0:	d014      	beq.n	8026eec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026ec2:	9808      	ldr	r0, [sp, #32]
 8026ec4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026ec6:	b2c9      	uxtb	r1, r1
 8026ec8:	b2ba      	uxth	r2, r7
 8026eca:	9102      	str	r1, [sp, #8]
 8026ecc:	2101      	movs	r1, #1
 8026ece:	4413      	add	r3, r2
 8026ed0:	9101      	str	r1, [sp, #4]
 8026ed2:	4402      	add	r2, r0
 8026ed4:	fa0f f18b 	sxth.w	r1, fp
 8026ed8:	f8da 0000 	ldr.w	r0, [sl]
 8026edc:	9100      	str	r1, [sp, #0]
 8026ede:	6941      	ldr	r1, [r0, #20]
 8026ee0:	b21b      	sxth	r3, r3
 8026ee2:	460d      	mov	r5, r1
 8026ee4:	b212      	sxth	r2, r2
 8026ee6:	9905      	ldr	r1, [sp, #20]
 8026ee8:	4650      	mov	r0, sl
 8026eea:	47a8      	blx	r5
 8026eec:	9b04      	ldr	r3, [sp, #16]
 8026eee:	3301      	adds	r3, #1
 8026ef0:	f107 0201 	add.w	r2, r7, #1
 8026ef4:	d0c8      	beq.n	8026e88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026ef6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026efa:	1abb      	subs	r3, r7, r2
 8026efc:	2b00      	cmp	r3, #0
 8026efe:	dd31      	ble.n	8026f64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f00:	2a00      	cmp	r2, #0
 8026f02:	dabb      	bge.n	8026e7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026f04:	2f00      	cmp	r7, #0
 8026f06:	dd2d      	ble.n	8026f64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f08:	2200      	movs	r2, #0
 8026f0a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026f0e:	19d1      	adds	r1, r2, r7
 8026f10:	4299      	cmp	r1, r3
 8026f12:	db02      	blt.n	8026f1a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026f14:	1a9f      	subs	r7, r3, r2
 8026f16:	2f00      	cmp	r7, #0
 8026f18:	dd24      	ble.n	8026f64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f1a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026f1e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026f22:	f7ff ff39 	bl	8026d98 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026f26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026f28:	fb10 f003 	smulbb	r0, r0, r3
 8026f2c:	b280      	uxth	r0, r0
 8026f2e:	1c41      	adds	r1, r0, #1
 8026f30:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026f34:	1209      	asrs	r1, r1, #8
 8026f36:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026f3a:	d013      	beq.n	8026f64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f3c:	9808      	ldr	r0, [sp, #32]
 8026f3e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026f40:	b292      	uxth	r2, r2
 8026f42:	b2c9      	uxtb	r1, r1
 8026f44:	4413      	add	r3, r2
 8026f46:	9102      	str	r1, [sp, #8]
 8026f48:	4402      	add	r2, r0
 8026f4a:	b23f      	sxth	r7, r7
 8026f4c:	f8da 0000 	ldr.w	r0, [sl]
 8026f50:	9701      	str	r7, [sp, #4]
 8026f52:	fa0f f18b 	sxth.w	r1, fp
 8026f56:	9100      	str	r1, [sp, #0]
 8026f58:	6947      	ldr	r7, [r0, #20]
 8026f5a:	9905      	ldr	r1, [sp, #20]
 8026f5c:	b21b      	sxth	r3, r3
 8026f5e:	b212      	sxth	r2, r2
 8026f60:	4650      	mov	r0, sl
 8026f62:	47b8      	blx	r7
 8026f64:	464b      	mov	r3, r9
 8026f66:	e75c      	b.n	8026e22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8026f68:	2f00      	cmp	r7, #0
 8026f6a:	da95      	bge.n	8026e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026f6c:	e78c      	b.n	8026e88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026f6e:	2900      	cmp	r1, #0
 8026f70:	d0f8      	beq.n	8026f64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f72:	e78f      	b.n	8026e94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026f74 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026f74:	4b4b      	ldr	r3, [pc, #300]	; (80270a4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8026f76:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8026f7a:	2500      	movs	r5, #0
 8026f7c:	f100 0620 	add.w	r6, r0, #32
 8026f80:	4604      	mov	r4, r0
 8026f82:	e9c0 3100 	strd	r3, r1, [r0]
 8026f86:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8026f8a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8026f8e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8026f92:	f100 0718 	add.w	r7, r0, #24
 8026f96:	4630      	mov	r0, r6
 8026f98:	4690      	mov	r8, r2
 8026f9a:	f7ec fb03 	bl	80135a4 <_ZN8touchgfx7OutlineC1Ev>
 8026f9e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8026fa2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8026fa6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8026faa:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8026fae:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8026fb2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8026fb6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8026fba:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026fbe:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026fc2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8026fc6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8026fca:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026fce:	9500      	str	r5, [sp, #0]
 8026fd0:	4410      	add	r0, r2
 8026fd2:	b280      	uxth	r0, r0
 8026fd4:	fa0f fa80 	sxth.w	sl, r0
 8026fd8:	45aa      	cmp	sl, r5
 8026fda:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026fde:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026fe2:	dd5c      	ble.n	802709e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026fe4:	4591      	cmp	r9, r2
 8026fe6:	dd5a      	ble.n	802709e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026fe8:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026fec:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026ff0:	440b      	add	r3, r1
 8026ff2:	b29b      	uxth	r3, r3
 8026ff4:	b21d      	sxth	r5, r3
 8026ff6:	2d00      	cmp	r5, #0
 8026ff8:	dd51      	ble.n	802709e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026ffa:	458e      	cmp	lr, r1
 8026ffc:	dd4f      	ble.n	802709e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026ffe:	45d1      	cmp	r9, sl
 8027000:	bfb8      	it	lt
 8027002:	fa1f f089 	uxthlt.w	r0, r9
 8027006:	45ae      	cmp	lr, r5
 8027008:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802700c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8027010:	bfb8      	it	lt
 8027012:	fa1f f38e 	uxthlt.w	r3, lr
 8027016:	1a80      	subs	r0, r0, r2
 8027018:	1a5b      	subs	r3, r3, r1
 802701a:	f8ad 0004 	strh.w	r0, [sp, #4]
 802701e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027022:	f8ad 2000 	strh.w	r2, [sp]
 8027026:	f8ad 1002 	strh.w	r1, [sp, #2]
 802702a:	466d      	mov	r5, sp
 802702c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8027030:	e887 0003 	stmia.w	r7, {r0, r1}
 8027034:	f8dc 3000 	ldr.w	r3, [ip]
 8027038:	4660      	mov	r0, ip
 802703a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802703c:	4639      	mov	r1, r7
 802703e:	4798      	blx	r3
 8027040:	6861      	ldr	r1, [r4, #4]
 8027042:	4628      	mov	r0, r5
 8027044:	3104      	adds	r1, #4
 8027046:	f7ee fcb3 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802704a:	4638      	mov	r0, r7
 802704c:	f7ee fc6c 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027050:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027054:	f8bd 2000 	ldrh.w	r2, [sp]
 8027058:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802705c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8027060:	4630      	mov	r0, r6
 8027062:	f7ec fa83 	bl	801356c <_ZN8touchgfx7Outline5resetEv>
 8027066:	f9bd 3000 	ldrsh.w	r3, [sp]
 802706a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802706e:	015b      	lsls	r3, r3, #5
 8027070:	60a3      	str	r3, [r4, #8]
 8027072:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027076:	015b      	lsls	r3, r3, #5
 8027078:	60e3      	str	r3, [r4, #12]
 802707a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802707e:	015b      	lsls	r3, r3, #5
 8027080:	6123      	str	r3, [r4, #16]
 8027082:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8027086:	015b      	lsls	r3, r3, #5
 8027088:	6163      	str	r3, [r4, #20]
 802708a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802708e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8027092:	4620      	mov	r0, r4
 8027094:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8027098:	b002      	add	sp, #8
 802709a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802709e:	2300      	movs	r3, #0
 80270a0:	9301      	str	r3, [sp, #4]
 80270a2:	e7c2      	b.n	802702a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 80270a4:	0802f2a8 	.word	0x0802f2a8

080270a8 <_ZN8touchgfx6Canvas5closeEv>:
 80270a8:	b538      	push	{r3, r4, r5, lr}
 80270aa:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80270ae:	4604      	mov	r4, r0
 80270b0:	b193      	cbz	r3, 80270d8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80270b2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80270b6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80270ba:	4213      	tst	r3, r2
 80270bc:	d10c      	bne.n	80270d8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80270be:	f100 0520 	add.w	r5, r0, #32
 80270c2:	b123      	cbz	r3, 80270ce <_ZN8touchgfx6Canvas5closeEv+0x26>
 80270c4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80270c8:	4628      	mov	r0, r5
 80270ca:	f7ff fe79 	bl	8026dc0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80270ce:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80270d2:	4628      	mov	r0, r5
 80270d4:	f7ff fe74 	bl	8026dc0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80270d8:	2300      	movs	r3, #0
 80270da:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80270de:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80270e2:	4298      	cmp	r0, r3
 80270e4:	bf34      	ite	cc
 80270e6:	2000      	movcc	r0, #0
 80270e8:	2001      	movcs	r0, #1
 80270ea:	bd38      	pop	{r3, r4, r5, pc}

080270ec <_ZN8touchgfx6Canvas6renderEh>:
 80270ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80270f0:	4604      	mov	r4, r0
 80270f2:	6840      	ldr	r0, [r0, #4]
 80270f4:	6803      	ldr	r3, [r0, #0]
 80270f6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80270f8:	460d      	mov	r5, r1
 80270fa:	4798      	blx	r3
 80270fc:	fb10 f105 	smulbb	r1, r0, r5
 8027100:	b289      	uxth	r1, r1
 8027102:	1c4d      	adds	r5, r1, #1
 8027104:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8027108:	122d      	asrs	r5, r5, #8
 802710a:	f000 809d 	beq.w	8027248 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802710e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8027112:	2b00      	cmp	r3, #0
 8027114:	f000 8098 	beq.w	8027248 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027118:	4620      	mov	r0, r4
 802711a:	f7ff ffc5 	bl	80270a8 <_ZN8touchgfx6Canvas5closeEv>
 802711e:	4607      	mov	r7, r0
 8027120:	2800      	cmp	r0, #0
 8027122:	d048      	beq.n	80271b6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027124:	6863      	ldr	r3, [r4, #4]
 8027126:	4e49      	ldr	r6, [pc, #292]	; (802724c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8027128:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802712a:	6837      	ldr	r7, [r6, #0]
 802712c:	6803      	ldr	r3, [r0, #0]
 802712e:	689b      	ldr	r3, [r3, #8]
 8027130:	4798      	blx	r3
 8027132:	4601      	mov	r1, r0
 8027134:	4638      	mov	r0, r7
 8027136:	f7ea f9bb 	bl	80114b0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802713a:	4607      	mov	r7, r0
 802713c:	f7dc fe06 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 8027140:	6803      	ldr	r3, [r0, #0]
 8027142:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8027144:	4798      	blx	r3
 8027146:	4680      	mov	r8, r0
 8027148:	f7dc fe00 	bl	8003d4c <_ZN8touchgfx3HAL3lcdEv>
 802714c:	6803      	ldr	r3, [r0, #0]
 802714e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027150:	4798      	blx	r3
 8027152:	280b      	cmp	r0, #11
 8027154:	d85d      	bhi.n	8027212 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8027156:	e8df f000 	tbb	[pc, r0]
 802715a:	5e53      	.short	0x5e53
 802715c:	325c066e 	.word	0x325c066e
 8027160:	67676742 	.word	0x67676742
 8027164:	6767      	.short	0x6767
 8027166:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802716a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802716e:	2208      	movs	r2, #8
 8027170:	fb91 f2f2 	sdiv	r2, r1, r2
 8027174:	fb08 2303 	mla	r3, r8, r3, r2
 8027178:	441f      	add	r7, r3
 802717a:	424b      	negs	r3, r1
 802717c:	f003 0307 	and.w	r3, r3, #7
 8027180:	f001 0107 	and.w	r1, r1, #7
 8027184:	bf58      	it	pl
 8027186:	4259      	negpl	r1, r3
 8027188:	b2c9      	uxtb	r1, r1
 802718a:	b2ed      	uxtb	r5, r5
 802718c:	e9cd 1500 	strd	r1, r5, [sp]
 8027190:	6860      	ldr	r0, [r4, #4]
 8027192:	463a      	mov	r2, r7
 8027194:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8027196:	fa0f f388 	sxth.w	r3, r8
 802719a:	f104 0020 	add.w	r0, r4, #32
 802719e:	f7ff fe1b 	bl	8026dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80271a2:	6863      	ldr	r3, [r4, #4]
 80271a4:	4607      	mov	r7, r0
 80271a6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80271a8:	6803      	ldr	r3, [r0, #0]
 80271aa:	691b      	ldr	r3, [r3, #16]
 80271ac:	4798      	blx	r3
 80271ae:	6830      	ldr	r0, [r6, #0]
 80271b0:	6803      	ldr	r3, [r0, #0]
 80271b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80271b4:	4798      	blx	r3
 80271b6:	4638      	mov	r0, r7
 80271b8:	b002      	add	sp, #8
 80271ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80271be:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80271c2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80271c6:	2204      	movs	r2, #4
 80271c8:	fb91 f2f2 	sdiv	r2, r1, r2
 80271cc:	fb08 2303 	mla	r3, r8, r3, r2
 80271d0:	441f      	add	r7, r3
 80271d2:	424b      	negs	r3, r1
 80271d4:	f003 0303 	and.w	r3, r3, #3
 80271d8:	f001 0103 	and.w	r1, r1, #3
 80271dc:	e7d2      	b.n	8027184 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80271de:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80271e2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80271e6:	2900      	cmp	r1, #0
 80271e8:	f04f 0202 	mov.w	r2, #2
 80271ec:	fb91 f2f2 	sdiv	r2, r1, r2
 80271f0:	f001 0101 	and.w	r1, r1, #1
 80271f4:	fb08 2303 	mla	r3, r8, r3, r2
 80271f8:	441f      	add	r7, r3
 80271fa:	bfb8      	it	lt
 80271fc:	4249      	neglt	r1, r1
 80271fe:	e7c3      	b.n	8027188 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027200:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027204:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027208:	fb08 f303 	mul.w	r3, r8, r3
 802720c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027210:	441f      	add	r7, r3
 8027212:	2100      	movs	r1, #0
 8027214:	e7b9      	b.n	802718a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8027216:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802721a:	fb08 f203 	mul.w	r2, r8, r3
 802721e:	8b23      	ldrh	r3, [r4, #24]
 8027220:	2103      	movs	r1, #3
 8027222:	fb13 2301 	smlabb	r3, r3, r1, r2
 8027226:	e7f3      	b.n	8027210 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027228:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802722c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027230:	fb08 2303 	mla	r3, r8, r3, r2
 8027234:	e7ec      	b.n	8027210 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027236:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802723a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802723e:	fb08 f303 	mul.w	r3, r8, r3
 8027242:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8027246:	e7e3      	b.n	8027210 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027248:	2701      	movs	r7, #1
 802724a:	e7b4      	b.n	80271b6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 802724c:	200132bc 	.word	0x200132bc

08027250 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027250:	b510      	push	{r4, lr}
 8027252:	4b07      	ldr	r3, [pc, #28]	; (8027270 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8027254:	781b      	ldrb	r3, [r3, #0]
 8027256:	2b01      	cmp	r3, #1
 8027258:	d108      	bne.n	802726c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802725a:	6843      	ldr	r3, [r0, #4]
 802725c:	6814      	ldr	r4, [r2, #0]
 802725e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027262:	680b      	ldr	r3, [r1, #0]
 8027264:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8027268:	6013      	str	r3, [r2, #0]
 802726a:	600c      	str	r4, [r1, #0]
 802726c:	bd10      	pop	{r4, pc}
 802726e:	bf00      	nop
 8027270:	200132b4 	.word	0x200132b4

08027274 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027274:	b513      	push	{r0, r1, r4, lr}
 8027276:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802727a:	4604      	mov	r4, r0
 802727c:	e9cd 2100 	strd	r2, r1, [sp]
 8027280:	b9a3      	cbnz	r3, 80272ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027282:	466a      	mov	r2, sp
 8027284:	a901      	add	r1, sp, #4
 8027286:	4620      	mov	r0, r4
 8027288:	f7ff ffe2 	bl	8027250 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802728c:	68a3      	ldr	r3, [r4, #8]
 802728e:	9901      	ldr	r1, [sp, #4]
 8027290:	9a00      	ldr	r2, [sp, #0]
 8027292:	1ac9      	subs	r1, r1, r3
 8027294:	68e3      	ldr	r3, [r4, #12]
 8027296:	9101      	str	r1, [sp, #4]
 8027298:	1ad2      	subs	r2, r2, r3
 802729a:	2a00      	cmp	r2, #0
 802729c:	9200      	str	r2, [sp, #0]
 802729e:	da0b      	bge.n	80272b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80272a0:	2301      	movs	r3, #1
 80272a2:	2900      	cmp	r1, #0
 80272a4:	da0e      	bge.n	80272c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80272a6:	f043 0304 	orr.w	r3, r3, #4
 80272aa:	e013      	b.n	80272d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80272ac:	f7ff fefc 	bl	80270a8 <_ZN8touchgfx6Canvas5closeEv>
 80272b0:	2800      	cmp	r0, #0
 80272b2:	d1e6      	bne.n	8027282 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80272b4:	b002      	add	sp, #8
 80272b6:	bd10      	pop	{r4, pc}
 80272b8:	6963      	ldr	r3, [r4, #20]
 80272ba:	429a      	cmp	r2, r3
 80272bc:	bfac      	ite	ge
 80272be:	2302      	movge	r3, #2
 80272c0:	2300      	movlt	r3, #0
 80272c2:	e7ee      	b.n	80272a2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80272c4:	6920      	ldr	r0, [r4, #16]
 80272c6:	4281      	cmp	r1, r0
 80272c8:	bfac      	ite	ge
 80272ca:	2008      	movge	r0, #8
 80272cc:	2000      	movlt	r0, #0
 80272ce:	4318      	orrs	r0, r3
 80272d0:	b2c3      	uxtb	r3, r0
 80272d2:	b158      	cbz	r0, 80272ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80272d4:	2200      	movs	r2, #0
 80272d6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80272da:	9901      	ldr	r1, [sp, #4]
 80272dc:	9a00      	ldr	r2, [sp, #0]
 80272de:	66a1      	str	r1, [r4, #104]	; 0x68
 80272e0:	66e2      	str	r2, [r4, #108]	; 0x6c
 80272e2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80272e6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80272ea:	e7e3      	b.n	80272b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80272ec:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80272f0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80272f4:	4298      	cmp	r0, r3
 80272f6:	d803      	bhi.n	8027300 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80272f8:	f104 0020 	add.w	r0, r4, #32
 80272fc:	f7ec fe34 	bl	8013f68 <_ZN8touchgfx7Outline6moveToEii>
 8027300:	2301      	movs	r3, #1
 8027302:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027306:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802730a:	2300      	movs	r3, #0
 802730c:	e7e5      	b.n	80272da <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802730e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027310:	ab02      	add	r3, sp, #8
 8027312:	4604      	mov	r4, r0
 8027314:	f843 2d08 	str.w	r2, [r3, #-8]!
 8027318:	9101      	str	r1, [sp, #4]
 802731a:	461a      	mov	r2, r3
 802731c:	a901      	add	r1, sp, #4
 802731e:	f7ff ff97 	bl	8027250 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027322:	68a3      	ldr	r3, [r4, #8]
 8027324:	9901      	ldr	r1, [sp, #4]
 8027326:	9a00      	ldr	r2, [sp, #0]
 8027328:	1ac9      	subs	r1, r1, r3
 802732a:	68e3      	ldr	r3, [r4, #12]
 802732c:	9101      	str	r1, [sp, #4]
 802732e:	1ad2      	subs	r2, r2, r3
 8027330:	2a00      	cmp	r2, #0
 8027332:	9200      	str	r2, [sp, #0]
 8027334:	db1c      	blt.n	8027370 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8027336:	6963      	ldr	r3, [r4, #20]
 8027338:	429a      	cmp	r2, r3
 802733a:	bfac      	ite	ge
 802733c:	2002      	movge	r0, #2
 802733e:	2000      	movlt	r0, #0
 8027340:	2900      	cmp	r1, #0
 8027342:	db17      	blt.n	8027374 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8027344:	6923      	ldr	r3, [r4, #16]
 8027346:	4299      	cmp	r1, r3
 8027348:	bfac      	ite	ge
 802734a:	2308      	movge	r3, #8
 802734c:	2300      	movlt	r3, #0
 802734e:	4303      	orrs	r3, r0
 8027350:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8027354:	b2dd      	uxtb	r5, r3
 8027356:	b978      	cbnz	r0, 8027378 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8027358:	f104 0020 	add.w	r0, r4, #32
 802735c:	f7ff fd30 	bl	8026dc0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027360:	9b01      	ldr	r3, [sp, #4]
 8027362:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027364:	9b00      	ldr	r3, [sp, #0]
 8027366:	6623      	str	r3, [r4, #96]	; 0x60
 8027368:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802736c:	b002      	add	sp, #8
 802736e:	bd70      	pop	{r4, r5, r6, pc}
 8027370:	2001      	movs	r0, #1
 8027372:	e7e5      	b.n	8027340 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027374:	2304      	movs	r3, #4
 8027376:	e7ea      	b.n	802734e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8027378:	b113      	cbz	r3, 8027380 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802737a:	ea10 0305 	ands.w	r3, r0, r5
 802737e:	d11c      	bne.n	80273ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027380:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027384:	f104 0620 	add.w	r6, r4, #32
 8027388:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802738c:	b98b      	cbnz	r3, 80273b2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802738e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027392:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027396:	4298      	cmp	r0, r3
 8027398:	d802      	bhi.n	80273a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802739a:	4630      	mov	r0, r6
 802739c:	f7ec fde4 	bl	8013f68 <_ZN8touchgfx7Outline6moveToEii>
 80273a0:	2301      	movs	r3, #1
 80273a2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80273a6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80273aa:	e9dd 2100 	ldrd	r2, r1, [sp]
 80273ae:	4630      	mov	r0, r6
 80273b0:	e7d4      	b.n	802735c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80273b2:	4630      	mov	r0, r6
 80273b4:	f7ff fd04 	bl	8026dc0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80273b8:	e7f7      	b.n	80273aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80273ba:	461d      	mov	r5, r3
 80273bc:	e7d0      	b.n	8027360 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080273c0 <_ZN8touchgfx6CanvasD1Ev>:
 80273c0:	b510      	push	{r4, lr}
 80273c2:	4b04      	ldr	r3, [pc, #16]	; (80273d4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80273c4:	4604      	mov	r4, r0
 80273c6:	f840 3b20 	str.w	r3, [r0], #32
 80273ca:	f7ec f8c7 	bl	801355c <_ZN8touchgfx7OutlineD1Ev>
 80273ce:	4620      	mov	r0, r4
 80273d0:	bd10      	pop	{r4, pc}
 80273d2:	bf00      	nop
 80273d4:	0802f2a8 	.word	0x0802f2a8

080273d8 <_ZN8touchgfx6CanvasD0Ev>:
 80273d8:	b510      	push	{r4, lr}
 80273da:	4604      	mov	r4, r0
 80273dc:	f7ff fff0 	bl	80273c0 <_ZN8touchgfx6CanvasD1Ev>
 80273e0:	4620      	mov	r0, r4
 80273e2:	2170      	movs	r1, #112	; 0x70
 80273e4:	f002 fd09 	bl	8029dfa <_ZdlPvj>
 80273e8:	4620      	mov	r0, r4
 80273ea:	bd10      	pop	{r4, pc}

080273ec <_ZN8touchgfx6CircleD1Ev>:
 80273ec:	4770      	bx	lr

080273ee <_ZN8touchgfx6CircleD0Ev>:
 80273ee:	b510      	push	{r4, lr}
 80273f0:	2148      	movs	r1, #72	; 0x48
 80273f2:	4604      	mov	r4, r0
 80273f4:	f002 fd01 	bl	8029dfa <_ZdlPvj>
 80273f8:	4620      	mov	r0, r4
 80273fa:	bd10      	pop	{r4, pc}

080273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 80273fc:	b508      	push	{r3, lr}
 80273fe:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027402:	f7ea fbab 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027406:	bd08      	pop	{r3, pc}

08027408 <_ZN8touchgfx6CircleC1Ev>:
 8027408:	b510      	push	{r4, lr}
 802740a:	4604      	mov	r4, r0
 802740c:	f7ea fa42 	bl	8011894 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027410:	4b08      	ldr	r3, [pc, #32]	; (8027434 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8027412:	6023      	str	r3, [r4, #0]
 8027414:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8027418:	2300      	movs	r3, #0
 802741a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802741e:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027422:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8027426:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802742a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802742e:	60a3      	str	r3, [r4, #8]
 8027430:	4620      	mov	r0, r4
 8027432:	bd10      	pop	{r4, pc}
 8027434:	0802f2bc 	.word	0x0802f2bc

08027438 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8027438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802743c:	428a      	cmp	r2, r1
 802743e:	4680      	mov	r8, r0
 8027440:	4610      	mov	r0, r2
 8027442:	4699      	mov	r9, r3
 8027444:	bfa6      	itte	ge
 8027446:	460a      	movge	r2, r1
 8027448:	4603      	movge	r3, r0
 802744a:	460b      	movlt	r3, r1
 802744c:	1a99      	subs	r1, r3, r2
 802744e:	b085      	sub	sp, #20
 8027450:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8027454:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8027458:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802745a:	bfa4      	itt	ge
 802745c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027460:	2200      	movge	r2, #0
 8027462:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8027466:	9300      	str	r3, [sp, #0]
 8027468:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802746c:	f102 0b01 	add.w	fp, r2, #1
 8027470:	2c00      	cmp	r4, #0
 8027472:	f040 80af 	bne.w	80275d4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8027476:	4610      	mov	r0, r2
 8027478:	9201      	str	r2, [sp, #4]
 802747a:	f7ea fb6f 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802747e:	a903      	add	r1, sp, #12
 8027480:	9003      	str	r0, [sp, #12]
 8027482:	4650      	mov	r0, sl
 8027484:	f7ea fa32 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027488:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802748c:	9a01      	ldr	r2, [sp, #4]
 802748e:	4408      	add	r0, r1
 8027490:	f8d9 1000 	ldr.w	r1, [r9]
 8027494:	4281      	cmp	r1, r0
 8027496:	bfc8      	it	gt
 8027498:	f8c9 0000 	strgt.w	r0, [r9]
 802749c:	6839      	ldr	r1, [r7, #0]
 802749e:	4288      	cmp	r0, r1
 80274a0:	bfc8      	it	gt
 80274a2:	6038      	strgt	r0, [r7, #0]
 80274a4:	4610      	mov	r0, r2
 80274a6:	f7ff ffa9 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80274aa:	a903      	add	r1, sp, #12
 80274ac:	9003      	str	r0, [sp, #12]
 80274ae:	4650      	mov	r0, sl
 80274b0:	f7ea fa1c 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274b4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80274b8:	1a10      	subs	r0, r2, r0
 80274ba:	6832      	ldr	r2, [r6, #0]
 80274bc:	4282      	cmp	r2, r0
 80274be:	bfc8      	it	gt
 80274c0:	6030      	strgt	r0, [r6, #0]
 80274c2:	682a      	ldr	r2, [r5, #0]
 80274c4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80274c8:	4290      	cmp	r0, r2
 80274ca:	fb9b f2f1 	sdiv	r2, fp, r1
 80274ce:	fb01 b212 	mls	r2, r1, r2, fp
 80274d2:	eba1 0202 	sub.w	r2, r1, r2
 80274d6:	bfc8      	it	gt
 80274d8:	6028      	strgt	r0, [r5, #0]
 80274da:	fb92 f0f1 	sdiv	r0, r2, r1
 80274de:	fb01 2210 	mls	r2, r1, r0, r2
 80274e2:	4493      	add	fp, r2
 80274e4:	9b00      	ldr	r3, [sp, #0]
 80274e6:	455b      	cmp	r3, fp
 80274e8:	db2a      	blt.n	8027540 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80274ea:	4658      	mov	r0, fp
 80274ec:	f7ea fb36 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80274f0:	a903      	add	r1, sp, #12
 80274f2:	9003      	str	r0, [sp, #12]
 80274f4:	4650      	mov	r0, sl
 80274f6:	f7ea f9f9 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274fa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80274fe:	4410      	add	r0, r2
 8027500:	f8d9 2000 	ldr.w	r2, [r9]
 8027504:	4282      	cmp	r2, r0
 8027506:	bfc8      	it	gt
 8027508:	f8c9 0000 	strgt.w	r0, [r9]
 802750c:	683a      	ldr	r2, [r7, #0]
 802750e:	4290      	cmp	r0, r2
 8027510:	bfc8      	it	gt
 8027512:	6038      	strgt	r0, [r7, #0]
 8027514:	4658      	mov	r0, fp
 8027516:	f7ff ff71 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802751a:	a903      	add	r1, sp, #12
 802751c:	9003      	str	r0, [sp, #12]
 802751e:	4650      	mov	r0, sl
 8027520:	f7ea f9e4 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027524:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027528:	1a10      	subs	r0, r2, r0
 802752a:	6832      	ldr	r2, [r6, #0]
 802752c:	4282      	cmp	r2, r0
 802752e:	bfc8      	it	gt
 8027530:	6030      	strgt	r0, [r6, #0]
 8027532:	682a      	ldr	r2, [r5, #0]
 8027534:	4290      	cmp	r0, r2
 8027536:	bfc8      	it	gt
 8027538:	6028      	strgt	r0, [r5, #0]
 802753a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802753e:	e7d1      	b.n	80274e4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8027540:	9b00      	ldr	r3, [sp, #0]
 8027542:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027546:	455b      	cmp	r3, fp
 8027548:	dd27      	ble.n	802759a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802754a:	4618      	mov	r0, r3
 802754c:	f7ea fb06 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027550:	a903      	add	r1, sp, #12
 8027552:	9003      	str	r0, [sp, #12]
 8027554:	4650      	mov	r0, sl
 8027556:	f7ea f9c9 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802755a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802755e:	4410      	add	r0, r2
 8027560:	f8d9 2000 	ldr.w	r2, [r9]
 8027564:	4282      	cmp	r2, r0
 8027566:	bfc8      	it	gt
 8027568:	f8c9 0000 	strgt.w	r0, [r9]
 802756c:	683a      	ldr	r2, [r7, #0]
 802756e:	4290      	cmp	r0, r2
 8027570:	bfc8      	it	gt
 8027572:	6038      	strgt	r0, [r7, #0]
 8027574:	9800      	ldr	r0, [sp, #0]
 8027576:	f7ff ff41 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802757a:	a903      	add	r1, sp, #12
 802757c:	9003      	str	r0, [sp, #12]
 802757e:	4650      	mov	r0, sl
 8027580:	f7ea f9b4 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027584:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027588:	1a10      	subs	r0, r2, r0
 802758a:	6832      	ldr	r2, [r6, #0]
 802758c:	4282      	cmp	r2, r0
 802758e:	bfc8      	it	gt
 8027590:	6030      	strgt	r0, [r6, #0]
 8027592:	682a      	ldr	r2, [r5, #0]
 8027594:	4290      	cmp	r0, r2
 8027596:	bfc8      	it	gt
 8027598:	6028      	strgt	r0, [r5, #0]
 802759a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802759e:	f8d9 1000 	ldr.w	r1, [r9]
 80275a2:	4291      	cmp	r1, r2
 80275a4:	bfc8      	it	gt
 80275a6:	f8c9 2000 	strgt.w	r2, [r9]
 80275aa:	683a      	ldr	r2, [r7, #0]
 80275ac:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80275b0:	429a      	cmp	r2, r3
 80275b2:	bfb8      	it	lt
 80275b4:	603b      	strlt	r3, [r7, #0]
 80275b6:	6832      	ldr	r2, [r6, #0]
 80275b8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80275bc:	429a      	cmp	r2, r3
 80275be:	bfc8      	it	gt
 80275c0:	6033      	strgt	r3, [r6, #0]
 80275c2:	682a      	ldr	r2, [r5, #0]
 80275c4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80275c8:	429a      	cmp	r2, r3
 80275ca:	da00      	bge.n	80275ce <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80275cc:	602b      	str	r3, [r5, #0]
 80275ce:	b005      	add	sp, #20
 80275d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80275d4:	2002      	movs	r0, #2
 80275d6:	3401      	adds	r4, #1
 80275d8:	fb94 f4f0 	sdiv	r4, r4, r0
 80275dc:	4610      	mov	r0, r2
 80275de:	9201      	str	r2, [sp, #4]
 80275e0:	f7ea fabc 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80275e4:	a903      	add	r1, sp, #12
 80275e6:	9003      	str	r0, [sp, #12]
 80275e8:	4650      	mov	r0, sl
 80275ea:	f7ea f97f 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275ee:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80275f2:	9a01      	ldr	r2, [sp, #4]
 80275f4:	4408      	add	r0, r1
 80275f6:	f8d9 1000 	ldr.w	r1, [r9]
 80275fa:	1b03      	subs	r3, r0, r4
 80275fc:	4299      	cmp	r1, r3
 80275fe:	bfc8      	it	gt
 8027600:	f8c9 3000 	strgt.w	r3, [r9]
 8027604:	6839      	ldr	r1, [r7, #0]
 8027606:	428b      	cmp	r3, r1
 8027608:	bfc8      	it	gt
 802760a:	603b      	strgt	r3, [r7, #0]
 802760c:	f8d9 1000 	ldr.w	r1, [r9]
 8027610:	4420      	add	r0, r4
 8027612:	4281      	cmp	r1, r0
 8027614:	bfc8      	it	gt
 8027616:	f8c9 0000 	strgt.w	r0, [r9]
 802761a:	6839      	ldr	r1, [r7, #0]
 802761c:	4288      	cmp	r0, r1
 802761e:	bfc8      	it	gt
 8027620:	6038      	strgt	r0, [r7, #0]
 8027622:	4610      	mov	r0, r2
 8027624:	f7ff feea 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027628:	a903      	add	r1, sp, #12
 802762a:	9003      	str	r0, [sp, #12]
 802762c:	4650      	mov	r0, sl
 802762e:	f7ea f95d 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027632:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027636:	1a10      	subs	r0, r2, r0
 8027638:	6832      	ldr	r2, [r6, #0]
 802763a:	1b01      	subs	r1, r0, r4
 802763c:	428a      	cmp	r2, r1
 802763e:	bfc8      	it	gt
 8027640:	6031      	strgt	r1, [r6, #0]
 8027642:	682a      	ldr	r2, [r5, #0]
 8027644:	4291      	cmp	r1, r2
 8027646:	bfc8      	it	gt
 8027648:	6029      	strgt	r1, [r5, #0]
 802764a:	6832      	ldr	r2, [r6, #0]
 802764c:	4420      	add	r0, r4
 802764e:	4282      	cmp	r2, r0
 8027650:	bfc8      	it	gt
 8027652:	6030      	strgt	r0, [r6, #0]
 8027654:	682a      	ldr	r2, [r5, #0]
 8027656:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802765a:	4290      	cmp	r0, r2
 802765c:	fb9b f2f1 	sdiv	r2, fp, r1
 8027660:	fb01 b212 	mls	r2, r1, r2, fp
 8027664:	eba1 0202 	sub.w	r2, r1, r2
 8027668:	bfc8      	it	gt
 802766a:	6028      	strgt	r0, [r5, #0]
 802766c:	fb92 f0f1 	sdiv	r0, r2, r1
 8027670:	fb01 2210 	mls	r2, r1, r0, r2
 8027674:	4493      	add	fp, r2
 8027676:	9b00      	ldr	r3, [sp, #0]
 8027678:	455b      	cmp	r3, fp
 802767a:	db40      	blt.n	80276fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802767c:	4658      	mov	r0, fp
 802767e:	f7ea fa6d 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027682:	a903      	add	r1, sp, #12
 8027684:	9003      	str	r0, [sp, #12]
 8027686:	4650      	mov	r0, sl
 8027688:	f7ea f930 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802768c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027690:	4410      	add	r0, r2
 8027692:	f8d9 2000 	ldr.w	r2, [r9]
 8027696:	1b01      	subs	r1, r0, r4
 8027698:	428a      	cmp	r2, r1
 802769a:	bfc8      	it	gt
 802769c:	f8c9 1000 	strgt.w	r1, [r9]
 80276a0:	683a      	ldr	r2, [r7, #0]
 80276a2:	4291      	cmp	r1, r2
 80276a4:	bfc8      	it	gt
 80276a6:	6039      	strgt	r1, [r7, #0]
 80276a8:	f8d9 2000 	ldr.w	r2, [r9]
 80276ac:	4420      	add	r0, r4
 80276ae:	4282      	cmp	r2, r0
 80276b0:	bfc8      	it	gt
 80276b2:	f8c9 0000 	strgt.w	r0, [r9]
 80276b6:	683a      	ldr	r2, [r7, #0]
 80276b8:	4290      	cmp	r0, r2
 80276ba:	bfc8      	it	gt
 80276bc:	6038      	strgt	r0, [r7, #0]
 80276be:	4658      	mov	r0, fp
 80276c0:	f7ff fe9c 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80276c4:	a903      	add	r1, sp, #12
 80276c6:	9003      	str	r0, [sp, #12]
 80276c8:	4650      	mov	r0, sl
 80276ca:	f7ea f90f 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80276ce:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80276d2:	1a10      	subs	r0, r2, r0
 80276d4:	6832      	ldr	r2, [r6, #0]
 80276d6:	1b01      	subs	r1, r0, r4
 80276d8:	428a      	cmp	r2, r1
 80276da:	bfc8      	it	gt
 80276dc:	6031      	strgt	r1, [r6, #0]
 80276de:	682a      	ldr	r2, [r5, #0]
 80276e0:	4291      	cmp	r1, r2
 80276e2:	bfc8      	it	gt
 80276e4:	6029      	strgt	r1, [r5, #0]
 80276e6:	6832      	ldr	r2, [r6, #0]
 80276e8:	4420      	add	r0, r4
 80276ea:	4282      	cmp	r2, r0
 80276ec:	bfc8      	it	gt
 80276ee:	6030      	strgt	r0, [r6, #0]
 80276f0:	682a      	ldr	r2, [r5, #0]
 80276f2:	4290      	cmp	r0, r2
 80276f4:	bfc8      	it	gt
 80276f6:	6028      	strgt	r0, [r5, #0]
 80276f8:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80276fc:	e7bb      	b.n	8027676 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 80276fe:	9b00      	ldr	r3, [sp, #0]
 8027700:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027704:	455b      	cmp	r3, fp
 8027706:	f77f af62 	ble.w	80275ce <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802770a:	4618      	mov	r0, r3
 802770c:	f7ea fa26 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027710:	a903      	add	r1, sp, #12
 8027712:	9003      	str	r0, [sp, #12]
 8027714:	4650      	mov	r0, sl
 8027716:	f7ea f8e9 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802771a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802771e:	4410      	add	r0, r2
 8027720:	f8d9 2000 	ldr.w	r2, [r9]
 8027724:	1b01      	subs	r1, r0, r4
 8027726:	428a      	cmp	r2, r1
 8027728:	bfc8      	it	gt
 802772a:	f8c9 1000 	strgt.w	r1, [r9]
 802772e:	683a      	ldr	r2, [r7, #0]
 8027730:	4291      	cmp	r1, r2
 8027732:	bfc8      	it	gt
 8027734:	6039      	strgt	r1, [r7, #0]
 8027736:	f8d9 2000 	ldr.w	r2, [r9]
 802773a:	4420      	add	r0, r4
 802773c:	4282      	cmp	r2, r0
 802773e:	bfc8      	it	gt
 8027740:	f8c9 0000 	strgt.w	r0, [r9]
 8027744:	683b      	ldr	r3, [r7, #0]
 8027746:	4298      	cmp	r0, r3
 8027748:	bfc8      	it	gt
 802774a:	6038      	strgt	r0, [r7, #0]
 802774c:	9800      	ldr	r0, [sp, #0]
 802774e:	f7ff fe55 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027752:	a903      	add	r1, sp, #12
 8027754:	9003      	str	r0, [sp, #12]
 8027756:	4650      	mov	r0, sl
 8027758:	f7ea f8c8 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802775c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027760:	6832      	ldr	r2, [r6, #0]
 8027762:	1a18      	subs	r0, r3, r0
 8027764:	1b03      	subs	r3, r0, r4
 8027766:	429a      	cmp	r2, r3
 8027768:	bfc8      	it	gt
 802776a:	6033      	strgt	r3, [r6, #0]
 802776c:	682a      	ldr	r2, [r5, #0]
 802776e:	4293      	cmp	r3, r2
 8027770:	bfc8      	it	gt
 8027772:	602b      	strgt	r3, [r5, #0]
 8027774:	6833      	ldr	r3, [r6, #0]
 8027776:	4404      	add	r4, r0
 8027778:	42a3      	cmp	r3, r4
 802777a:	bfc8      	it	gt
 802777c:	6034      	strgt	r4, [r6, #0]
 802777e:	682b      	ldr	r3, [r5, #0]
 8027780:	429c      	cmp	r4, r3
 8027782:	bfc8      	it	gt
 8027784:	602c      	strgt	r4, [r5, #0]
 8027786:	e722      	b.n	80275ce <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08027788 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8027788:	b530      	push	{r4, r5, lr}
 802778a:	4604      	mov	r4, r0
 802778c:	4608      	mov	r0, r1
 802778e:	4611      	mov	r1, r2
 8027790:	461a      	mov	r2, r3
 8027792:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8027796:	b089      	sub	sp, #36	; 0x24
 8027798:	015b      	lsls	r3, r3, #5
 802779a:	9304      	str	r3, [sp, #16]
 802779c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80277a0:	2500      	movs	r5, #0
 80277a2:	015b      	lsls	r3, r3, #5
 80277a4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80277a8:	ab07      	add	r3, sp, #28
 80277aa:	9302      	str	r3, [sp, #8]
 80277ac:	ab06      	add	r3, sp, #24
 80277ae:	9301      	str	r3, [sp, #4]
 80277b0:	ab05      	add	r3, sp, #20
 80277b2:	9300      	str	r3, [sp, #0]
 80277b4:	ab04      	add	r3, sp, #16
 80277b6:	9505      	str	r5, [sp, #20]
 80277b8:	f7ff fe3e 	bl	8027438 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80277bc:	2520      	movs	r5, #32
 80277be:	9a04      	ldr	r2, [sp, #16]
 80277c0:	9805      	ldr	r0, [sp, #20]
 80277c2:	fb92 f2f5 	sdiv	r2, r2, r5
 80277c6:	fb90 f0f5 	sdiv	r0, r0, r5
 80277ca:	b292      	uxth	r2, r2
 80277cc:	3002      	adds	r0, #2
 80277ce:	1a80      	subs	r0, r0, r2
 80277d0:	9b06      	ldr	r3, [sp, #24]
 80277d2:	9907      	ldr	r1, [sp, #28]
 80277d4:	fb93 f3f5 	sdiv	r3, r3, r5
 80277d8:	fb91 f1f5 	sdiv	r1, r1, r5
 80277dc:	b29b      	uxth	r3, r3
 80277de:	3102      	adds	r1, #2
 80277e0:	1ac9      	subs	r1, r1, r3
 80277e2:	3a01      	subs	r2, #1
 80277e4:	3b01      	subs	r3, #1
 80277e6:	80a0      	strh	r0, [r4, #4]
 80277e8:	4620      	mov	r0, r4
 80277ea:	8022      	strh	r2, [r4, #0]
 80277ec:	8063      	strh	r3, [r4, #2]
 80277ee:	80e1      	strh	r1, [r4, #6]
 80277f0:	b009      	add	sp, #36	; 0x24
 80277f2:	bd30      	pop	{r4, r5, pc}

080277f4 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 80277f4:	b510      	push	{r4, lr}
 80277f6:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 80277fa:	4604      	mov	r4, r0
 80277fc:	f7ff ffc4 	bl	8027788 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027800:	4620      	mov	r0, r4
 8027802:	bd10      	pop	{r4, pc}

08027804 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8027804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027806:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802780a:	4606      	mov	r6, r0
 802780c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8027810:	6813      	ldr	r3, [r2, #0]
 8027812:	42a5      	cmp	r5, r4
 8027814:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8027818:	da2b      	bge.n	8027872 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802781a:	42a3      	cmp	r3, r4
 802781c:	dd14      	ble.n	8027848 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802781e:	b168      	cbz	r0, 802783c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027820:	4267      	negs	r7, r4
 8027822:	fb97 f2f0 	sdiv	r2, r7, r0
 8027826:	fb00 7212 	mls	r2, r0, r2, r7
 802782a:	1a82      	subs	r2, r0, r2
 802782c:	fb92 f7f0 	sdiv	r7, r2, r0
 8027830:	fb00 2017 	mls	r0, r0, r7, r2
 8027834:	1a24      	subs	r4, r4, r0
 8027836:	42ac      	cmp	r4, r5
 8027838:	bfb8      	it	lt
 802783a:	462c      	movlt	r4, r5
 802783c:	4630      	mov	r0, r6
 802783e:	4622      	mov	r2, r4
 8027840:	f7ff ffa2 	bl	8027788 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027844:	4630      	mov	r0, r6
 8027846:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8027848:	42ab      	cmp	r3, r5
 802784a:	dd0e      	ble.n	802786a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802784c:	b168      	cbz	r0, 802786a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802784e:	425f      	negs	r7, r3
 8027850:	fb97 f2f0 	sdiv	r2, r7, r0
 8027854:	fb00 7212 	mls	r2, r0, r2, r7
 8027858:	1a82      	subs	r2, r0, r2
 802785a:	fb92 f7f0 	sdiv	r7, r2, r0
 802785e:	fb00 2017 	mls	r0, r0, r7, r2
 8027862:	1a1b      	subs	r3, r3, r0
 8027864:	42ab      	cmp	r3, r5
 8027866:	bfb8      	it	lt
 8027868:	462b      	movlt	r3, r5
 802786a:	4622      	mov	r2, r4
 802786c:	461c      	mov	r4, r3
 802786e:	4613      	mov	r3, r2
 8027870:	e7e4      	b.n	802783c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027872:	42a3      	cmp	r3, r4
 8027874:	da10      	bge.n	8027898 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8027876:	b148      	cbz	r0, 802788c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8027878:	fb94 f2f0 	sdiv	r2, r4, r0
 802787c:	fb00 4212 	mls	r2, r0, r2, r4
 8027880:	1a82      	subs	r2, r0, r2
 8027882:	fb92 f7f0 	sdiv	r7, r2, r0
 8027886:	fb00 2017 	mls	r0, r0, r7, r2
 802788a:	4404      	add	r4, r0
 802788c:	42a5      	cmp	r5, r4
 802788e:	bfa8      	it	ge
 8027890:	4625      	movge	r5, r4
 8027892:	461c      	mov	r4, r3
 8027894:	462b      	mov	r3, r5
 8027896:	e7d1      	b.n	802783c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027898:	42ab      	cmp	r3, r5
 802789a:	dacf      	bge.n	802783c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802789c:	2800      	cmp	r0, #0
 802789e:	d0cd      	beq.n	802783c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80278a0:	fb93 f2f0 	sdiv	r2, r3, r0
 80278a4:	fb00 3212 	mls	r2, r0, r2, r3
 80278a8:	1a82      	subs	r2, r0, r2
 80278aa:	fb92 f7f0 	sdiv	r7, r2, r0
 80278ae:	fb00 2017 	mls	r0, r0, r7, r2
 80278b2:	4403      	add	r3, r0
 80278b4:	42ab      	cmp	r3, r5
 80278b6:	bfa8      	it	ge
 80278b8:	462b      	movge	r3, r5
 80278ba:	e7bf      	b.n	802783c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080278bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80278bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80278c0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80278c4:	42ae      	cmp	r6, r5
 80278c6:	bfa2      	ittt	ge
 80278c8:	4633      	movge	r3, r6
 80278ca:	462e      	movge	r6, r5
 80278cc:	461d      	movge	r5, r3
 80278ce:	1bab      	subs	r3, r5, r6
 80278d0:	468b      	mov	fp, r1
 80278d2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80278d4:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80278d8:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80278dc:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80278e0:	f04f 0220 	mov.w	r2, #32
 80278e4:	b0ab      	sub	sp, #172	; 0xac
 80278e6:	4604      	mov	r4, r0
 80278e8:	bfa4      	itt	ge
 80278ea:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80278ee:	2600      	movge	r6, #0
 80278f0:	fb99 f9f2 	sdiv	r9, r9, r2
 80278f4:	fb9a faf2 	sdiv	sl, sl, r2
 80278f8:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80278fa:	2900      	cmp	r1, #0
 80278fc:	f000 80f5 	beq.w	8027aea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8027900:	f9bb 0000 	ldrsh.w	r0, [fp]
 8027904:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8027908:	eba9 0700 	sub.w	r7, r9, r0
 802790c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8027910:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8027914:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8027918:	ebaa 0802 	sub.w	r8, sl, r2
 802791c:	4407      	add	r7, r0
 802791e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8027922:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8027926:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802792a:	b23f      	sxth	r7, r7
 802792c:	4490      	add	r8, r2
 802792e:	eba9 0707 	sub.w	r7, r9, r7
 8027932:	fa0f f888 	sxth.w	r8, r8
 8027936:	ebaa 0808 	sub.w	r8, sl, r8
 802793a:	2f00      	cmp	r7, #0
 802793c:	bfb8      	it	lt
 802793e:	427f      	neglt	r7, r7
 8027940:	f1b8 0f00 	cmp.w	r8, #0
 8027944:	bfb8      	it	lt
 8027946:	f1c8 0800 	rsblt	r8, r8, #0
 802794a:	45bc      	cmp	ip, r7
 802794c:	bfcc      	ite	gt
 802794e:	f10c 0701 	addgt.w	r7, ip, #1
 8027952:	3701      	addle	r7, #1
 8027954:	4540      	cmp	r0, r8
 8027956:	bfc8      	it	gt
 8027958:	f100 0801 	addgt.w	r8, r0, #1
 802795c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8027960:	f100 0001 	add.w	r0, r0, #1
 8027964:	ea4f 0060 	mov.w	r0, r0, asr #1
 8027968:	f04f 0202 	mov.w	r2, #2
 802796c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8027970:	fb91 f1f2 	sdiv	r1, r1, r2
 8027974:	eba3 0301 	sub.w	r3, r3, r1
 8027978:	bfd8      	it	le
 802797a:	f108 0801 	addle.w	r8, r8, #1
 802797e:	9201      	str	r2, [sp, #4]
 8027980:	930d      	str	r3, [sp, #52]	; 0x34
 8027982:	f7ea f8cb 	bl	8011b1c <_ZN8touchgfx7CWRUtil4sineEi>
 8027986:	a92a      	add	r1, sp, #168	; 0xa8
 8027988:	fb08 f808 	mul.w	r8, r8, r8
 802798c:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027990:	a80d      	add	r0, sp, #52	; 0x34
 8027992:	f7e9 ffab 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027996:	fb07 8707 	mla	r7, r7, r7, r8
 802799a:	f04f 0c20 	mov.w	ip, #32
 802799e:	fb90 f0fc 	sdiv	r0, r0, ip
 80279a2:	4340      	muls	r0, r0
 80279a4:	4287      	cmp	r7, r0
 80279a6:	9a01      	ldr	r2, [sp, #4]
 80279a8:	da04      	bge.n	80279b4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80279aa:	2401      	movs	r4, #1
 80279ac:	4620      	mov	r0, r4
 80279ae:	b02b      	add	sp, #172	; 0xac
 80279b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80279b4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80279b6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80279b8:	fb91 f3f2 	sdiv	r3, r1, r2
 80279bc:	4403      	add	r3, r0
 80279be:	fb93 f3fc 	sdiv	r3, r3, ip
 80279c2:	f9bb 1000 	ldrsh.w	r1, [fp]
 80279c6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80279ca:	440a      	add	r2, r1
 80279cc:	b212      	sxth	r2, r2
 80279ce:	454a      	cmp	r2, r9
 80279d0:	bfa8      	it	ge
 80279d2:	464a      	movge	r2, r9
 80279d4:	428a      	cmp	r2, r1
 80279d6:	bfac      	ite	ge
 80279d8:	eba9 0902 	subge.w	r9, r9, r2
 80279dc:	eba9 0901 	sublt.w	r9, r9, r1
 80279e0:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80279e4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80279e8:	440a      	add	r2, r1
 80279ea:	b212      	sxth	r2, r2
 80279ec:	4552      	cmp	r2, sl
 80279ee:	bfa8      	it	ge
 80279f0:	4652      	movge	r2, sl
 80279f2:	428a      	cmp	r2, r1
 80279f4:	bfac      	ite	ge
 80279f6:	ebaa 0a02 	subge.w	sl, sl, r2
 80279fa:	ebaa 0a01 	sublt.w	sl, sl, r1
 80279fe:	3301      	adds	r3, #1
 8027a00:	fb0a fa0a 	mul.w	sl, sl, sl
 8027a04:	fb09 a909 	mla	r9, r9, r9, sl
 8027a08:	435b      	muls	r3, r3
 8027a0a:	4599      	cmp	r9, r3
 8027a0c:	dccd      	bgt.n	80279aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027a0e:	465a      	mov	r2, fp
 8027a10:	4621      	mov	r1, r4
 8027a12:	a80e      	add	r0, sp, #56	; 0x38
 8027a14:	f7ff faae 	bl	8026f74 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8027a18:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8027a1a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027a1c:	9209      	str	r2, [sp, #36]	; 0x24
 8027a1e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027a22:	930a      	str	r3, [sp, #40]	; 0x28
 8027a24:	dd07      	ble.n	8027a36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8027a26:	2102      	movs	r1, #2
 8027a28:	fb93 f3f1 	sdiv	r3, r3, r1
 8027a2c:	4413      	add	r3, r2
 8027a2e:	930a      	str	r3, [sp, #40]	; 0x28
 8027a30:	fb93 f3f1 	sdiv	r3, r3, r1
 8027a34:	9309      	str	r3, [sp, #36]	; 0x24
 8027a36:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027a3a:	4630      	mov	r0, r6
 8027a3c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027a40:	930b      	str	r3, [sp, #44]	; 0x2c
 8027a42:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8027a46:	f7ea f889 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027a4a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027a4e:	f04f 0a02 	mov.w	sl, #2
 8027a52:	f849 0d74 	str.w	r0, [r9, #-116]!
 8027a56:	a80b      	add	r0, sp, #44	; 0x2c
 8027a58:	4649      	mov	r1, r9
 8027a5a:	f7e9 ff47 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a5e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027a60:	fb90 f0fa 	sdiv	r0, r0, sl
 8027a64:	eb00 0b03 	add.w	fp, r0, r3
 8027a68:	4630      	mov	r0, r6
 8027a6a:	f7ff fcc7 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a6e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027a72:	017f      	lsls	r7, r7, #5
 8027a74:	f848 0d78 	str.w	r0, [r8, #-120]!
 8027a78:	a80b      	add	r0, sp, #44	; 0x2c
 8027a7a:	4641      	mov	r1, r8
 8027a7c:	f7e9 ff36 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a80:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027a82:	fb90 f0fa 	sdiv	r0, r0, sl
 8027a86:	4659      	mov	r1, fp
 8027a88:	1a12      	subs	r2, r2, r0
 8027a8a:	a80e      	add	r0, sp, #56	; 0x38
 8027a8c:	f7ff fbf2 	bl	8027274 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027a90:	f106 0a20 	add.w	sl, r6, #32
 8027a94:	bb67      	cbnz	r7, 8027af0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8027a96:	46b3      	mov	fp, r6
 8027a98:	45aa      	cmp	sl, r5
 8027a9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027a9c:	dc33      	bgt.n	8027b06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027a9e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027aa0:	4650      	mov	r0, sl
 8027aa2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8027aa6:	920b      	str	r2, [sp, #44]	; 0x2c
 8027aa8:	f7ea f858 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027aac:	4641      	mov	r1, r8
 8027aae:	900c      	str	r0, [sp, #48]	; 0x30
 8027ab0:	a80b      	add	r0, sp, #44	; 0x2c
 8027ab2:	f7e9 ff1b 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ab6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8027ab8:	2302      	movs	r3, #2
 8027aba:	fb90 f0f3 	sdiv	r0, r0, r3
 8027abe:	eb00 0b02 	add.w	fp, r0, r2
 8027ac2:	4650      	mov	r0, sl
 8027ac4:	f7ff fc9a 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ac8:	4649      	mov	r1, r9
 8027aca:	900d      	str	r0, [sp, #52]	; 0x34
 8027acc:	a80b      	add	r0, sp, #44	; 0x2c
 8027ace:	f7e9 ff0d 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ad2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027ad4:	2302      	movs	r3, #2
 8027ad6:	4659      	mov	r1, fp
 8027ad8:	fb90 f0f3 	sdiv	r0, r0, r3
 8027adc:	1a12      	subs	r2, r2, r0
 8027ade:	a80e      	add	r0, sp, #56	; 0x38
 8027ae0:	46d3      	mov	fp, sl
 8027ae2:	f7ff fc14 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027ae6:	44ba      	add	sl, r7
 8027ae8:	e7d6      	b.n	8027a98 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8027aea:	fb93 f3f2 	sdiv	r3, r3, r2
 8027aee:	e768      	b.n	80279c2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027af0:	fb9a f2f7 	sdiv	r2, sl, r7
 8027af4:	fb07 a212 	mls	r2, r7, r2, sl
 8027af8:	1aba      	subs	r2, r7, r2
 8027afa:	fb92 f1f7 	sdiv	r1, r2, r7
 8027afe:	fb07 2211 	mls	r2, r7, r1, r2
 8027b02:	4492      	add	sl, r2
 8027b04:	e7c7      	b.n	8027a96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8027b06:	45ab      	cmp	fp, r5
 8027b08:	da23      	bge.n	8027b52 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8027b0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027b0c:	4628      	mov	r0, r5
 8027b0e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027b12:	920b      	str	r2, [sp, #44]	; 0x2c
 8027b14:	f7ea f822 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b18:	4641      	mov	r1, r8
 8027b1a:	900c      	str	r0, [sp, #48]	; 0x30
 8027b1c:	a80b      	add	r0, sp, #44	; 0x2c
 8027b1e:	f7e9 fee5 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b22:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027b24:	f04f 0a02 	mov.w	sl, #2
 8027b28:	fb90 f0fa 	sdiv	r0, r0, sl
 8027b2c:	4403      	add	r3, r0
 8027b2e:	4628      	mov	r0, r5
 8027b30:	9301      	str	r3, [sp, #4]
 8027b32:	f7ff fc63 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b36:	4649      	mov	r1, r9
 8027b38:	900d      	str	r0, [sp, #52]	; 0x34
 8027b3a:	a80b      	add	r0, sp, #44	; 0x2c
 8027b3c:	f7e9 fed6 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b40:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b42:	9b01      	ldr	r3, [sp, #4]
 8027b44:	fb90 f0fa 	sdiv	r0, r0, sl
 8027b48:	4619      	mov	r1, r3
 8027b4a:	1a12      	subs	r2, r2, r0
 8027b4c:	a80e      	add	r0, sp, #56	; 0x38
 8027b4e:	f7ff fbde 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027b54:	b99b      	cbnz	r3, 8027b7e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8027b56:	1bad      	subs	r5, r5, r6
 8027b58:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027b5c:	da04      	bge.n	8027b68 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027b5e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027b62:	a80e      	add	r0, sp, #56	; 0x38
 8027b64:	f7ff fbd3 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b68:	21ff      	movs	r1, #255	; 0xff
 8027b6a:	a80e      	add	r0, sp, #56	; 0x38
 8027b6c:	f7ff fabe 	bl	80270ec <_ZN8touchgfx6Canvas6renderEh>
 8027b70:	4604      	mov	r4, r0
 8027b72:	4b8a      	ldr	r3, [pc, #552]	; (8027d9c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027b74:	930e      	str	r3, [sp, #56]	; 0x38
 8027b76:	a816      	add	r0, sp, #88	; 0x58
 8027b78:	f7eb fcf0 	bl	801355c <_ZN8touchgfx7OutlineD1Ev>
 8027b7c:	e716      	b.n	80279ac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027b7e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027b82:	429a      	cmp	r2, r3
 8027b84:	f0c0 8107 	bcc.w	8027d96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8027b88:	1bab      	subs	r3, r5, r6
 8027b8a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027b8e:	9301      	str	r3, [sp, #4]
 8027b90:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027b94:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8027b98:	da43      	bge.n	8027c22 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027b9a:	4628      	mov	r0, r5
 8027b9c:	f7e9 ffde 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ba0:	4649      	mov	r1, r9
 8027ba2:	900d      	str	r0, [sp, #52]	; 0x34
 8027ba4:	a809      	add	r0, sp, #36	; 0x24
 8027ba6:	f7e9 fea1 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027baa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027bac:	18c3      	adds	r3, r0, r3
 8027bae:	4628      	mov	r0, r5
 8027bb0:	9303      	str	r3, [sp, #12]
 8027bb2:	f7ff fc23 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bb6:	4649      	mov	r1, r9
 8027bb8:	900d      	str	r0, [sp, #52]	; 0x34
 8027bba:	a809      	add	r0, sp, #36	; 0x24
 8027bbc:	f7e9 fe96 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bc0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027bc2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8027bc6:	1a1b      	subs	r3, r3, r0
 8027bc8:	9302      	str	r3, [sp, #8]
 8027bca:	9204      	str	r2, [sp, #16]
 8027bcc:	eb0a 0305 	add.w	r3, sl, r5
 8027bd0:	9a04      	ldr	r2, [sp, #16]
 8027bd2:	4293      	cmp	r3, r2
 8027bd4:	da25      	bge.n	8027c22 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027bd6:	4618      	mov	r0, r3
 8027bd8:	9306      	str	r3, [sp, #24]
 8027bda:	f7e9 ffbf 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027bde:	4649      	mov	r1, r9
 8027be0:	900d      	str	r0, [sp, #52]	; 0x34
 8027be2:	a80a      	add	r0, sp, #40	; 0x28
 8027be4:	f7e9 fe82 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027be8:	9b03      	ldr	r3, [sp, #12]
 8027bea:	2202      	movs	r2, #2
 8027bec:	fb90 f0f2 	sdiv	r0, r0, r2
 8027bf0:	18c3      	adds	r3, r0, r3
 8027bf2:	9305      	str	r3, [sp, #20]
 8027bf4:	9b06      	ldr	r3, [sp, #24]
 8027bf6:	9207      	str	r2, [sp, #28]
 8027bf8:	4618      	mov	r0, r3
 8027bfa:	f7ff fbff 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bfe:	a92a      	add	r1, sp, #168	; 0xa8
 8027c00:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027c04:	a80a      	add	r0, sp, #40	; 0x28
 8027c06:	f7e9 fe71 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c0a:	9b02      	ldr	r3, [sp, #8]
 8027c0c:	9a07      	ldr	r2, [sp, #28]
 8027c0e:	9905      	ldr	r1, [sp, #20]
 8027c10:	fb90 f2f2 	sdiv	r2, r0, r2
 8027c14:	a80e      	add	r0, sp, #56	; 0x38
 8027c16:	1a9a      	subs	r2, r3, r2
 8027c18:	f7ff fb79 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c1c:	9b06      	ldr	r3, [sp, #24]
 8027c1e:	4453      	add	r3, sl
 8027c20:	e7d6      	b.n	8027bd0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027c22:	45ab      	cmp	fp, r5
 8027c24:	da25      	bge.n	8027c72 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027c26:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027c2a:	4628      	mov	r0, r5
 8027c2c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027c30:	930b      	str	r3, [sp, #44]	; 0x2c
 8027c32:	f7e9 ff93 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c36:	4641      	mov	r1, r8
 8027c38:	900c      	str	r0, [sp, #48]	; 0x30
 8027c3a:	a80b      	add	r0, sp, #44	; 0x2c
 8027c3c:	f7e9 fe56 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c40:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027c42:	2202      	movs	r2, #2
 8027c44:	fb90 f0f2 	sdiv	r0, r0, r2
 8027c48:	eb00 0903 	add.w	r9, r0, r3
 8027c4c:	4628      	mov	r0, r5
 8027c4e:	9202      	str	r2, [sp, #8]
 8027c50:	f7ff fbd4 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c54:	a92a      	add	r1, sp, #168	; 0xa8
 8027c56:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027c5a:	a80b      	add	r0, sp, #44	; 0x2c
 8027c5c:	f7e9 fe46 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c60:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027c62:	9a02      	ldr	r2, [sp, #8]
 8027c64:	fb90 f2f2 	sdiv	r2, r0, r2
 8027c68:	4649      	mov	r1, r9
 8027c6a:	1a9a      	subs	r2, r3, r2
 8027c6c:	a80e      	add	r0, sp, #56	; 0x38
 8027c6e:	f7ff fb4e 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c72:	46d9      	mov	r9, fp
 8027c74:	2502      	movs	r5, #2
 8027c76:	45b1      	cmp	r9, r6
 8027c78:	db25      	blt.n	8027cc6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027c7a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027c7e:	4648      	mov	r0, r9
 8027c80:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027c84:	930b      	str	r3, [sp, #44]	; 0x2c
 8027c86:	f7e9 ff69 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c8a:	4641      	mov	r1, r8
 8027c8c:	900c      	str	r0, [sp, #48]	; 0x30
 8027c8e:	a80b      	add	r0, sp, #44	; 0x2c
 8027c90:	f7e9 fe2c 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c94:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027c96:	fb90 f0f5 	sdiv	r0, r0, r5
 8027c9a:	eb00 0b03 	add.w	fp, r0, r3
 8027c9e:	4648      	mov	r0, r9
 8027ca0:	f7ff fbac 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ca4:	a90d      	add	r1, sp, #52	; 0x34
 8027ca6:	900d      	str	r0, [sp, #52]	; 0x34
 8027ca8:	a80b      	add	r0, sp, #44	; 0x2c
 8027caa:	f7e9 fe1f 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cae:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027cb0:	fb90 f0f5 	sdiv	r0, r0, r5
 8027cb4:	4659      	mov	r1, fp
 8027cb6:	1a12      	subs	r2, r2, r0
 8027cb8:	a80e      	add	r0, sp, #56	; 0x38
 8027cba:	46cb      	mov	fp, r9
 8027cbc:	f7ff fb27 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027cc0:	eba9 0907 	sub.w	r9, r9, r7
 8027cc4:	e7d7      	b.n	8027c76 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027cc6:	455e      	cmp	r6, fp
 8027cc8:	da22      	bge.n	8027d10 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027cca:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027cce:	4630      	mov	r0, r6
 8027cd0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027cd4:	930b      	str	r3, [sp, #44]	; 0x2c
 8027cd6:	f7e9 ff41 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027cda:	4641      	mov	r1, r8
 8027cdc:	900c      	str	r0, [sp, #48]	; 0x30
 8027cde:	a80b      	add	r0, sp, #44	; 0x2c
 8027ce0:	f7e9 fe04 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ce4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027ce6:	2502      	movs	r5, #2
 8027ce8:	fb90 f0f5 	sdiv	r0, r0, r5
 8027cec:	4407      	add	r7, r0
 8027cee:	4630      	mov	r0, r6
 8027cf0:	f7ff fb84 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027cf4:	a92a      	add	r1, sp, #168	; 0xa8
 8027cf6:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027cfa:	a80b      	add	r0, sp, #44	; 0x2c
 8027cfc:	f7e9 fdf6 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d00:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027d02:	fb90 f0f5 	sdiv	r0, r0, r5
 8027d06:	4639      	mov	r1, r7
 8027d08:	1a12      	subs	r2, r2, r0
 8027d0a:	a80e      	add	r0, sp, #56	; 0x38
 8027d0c:	f7ff faff 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027d10:	9b01      	ldr	r3, [sp, #4]
 8027d12:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027d16:	f6bf af27 	bge.w	8027b68 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027d1a:	4630      	mov	r0, r6
 8027d1c:	f7e9 ff1e 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d20:	ad2a      	add	r5, sp, #168	; 0xa8
 8027d22:	f04f 0b02 	mov.w	fp, #2
 8027d26:	f845 0d74 	str.w	r0, [r5, #-116]!
 8027d2a:	a809      	add	r0, sp, #36	; 0x24
 8027d2c:	4629      	mov	r1, r5
 8027d2e:	f7e9 fddd 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d32:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027d34:	eb00 0903 	add.w	r9, r0, r3
 8027d38:	4630      	mov	r0, r6
 8027d3a:	f7ff fb5f 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d3e:	4629      	mov	r1, r5
 8027d40:	900d      	str	r0, [sp, #52]	; 0x34
 8027d42:	a809      	add	r0, sp, #36	; 0x24
 8027d44:	f7e9 fdd2 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d48:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027d4a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027d4e:	eba3 0800 	sub.w	r8, r3, r0
 8027d52:	4454      	add	r4, sl
 8027d54:	42a6      	cmp	r6, r4
 8027d56:	f77f af07 	ble.w	8027b68 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027d5a:	4620      	mov	r0, r4
 8027d5c:	f7e9 fefe 	bl	8011b5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d60:	4629      	mov	r1, r5
 8027d62:	900d      	str	r0, [sp, #52]	; 0x34
 8027d64:	a80a      	add	r0, sp, #40	; 0x28
 8027d66:	f7e9 fdc1 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d6a:	fb90 f0fb 	sdiv	r0, r0, fp
 8027d6e:	eb00 0709 	add.w	r7, r0, r9
 8027d72:	4620      	mov	r0, r4
 8027d74:	f7ff fb42 	bl	80273fc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d78:	a90c      	add	r1, sp, #48	; 0x30
 8027d7a:	900c      	str	r0, [sp, #48]	; 0x30
 8027d7c:	a80a      	add	r0, sp, #40	; 0x28
 8027d7e:	f7e9 fdb5 	bl	80118ec <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d82:	4639      	mov	r1, r7
 8027d84:	fb90 f2fb 	sdiv	r2, r0, fp
 8027d88:	a80e      	add	r0, sp, #56	; 0x38
 8027d8a:	eba8 0202 	sub.w	r2, r8, r2
 8027d8e:	f7ff fabe 	bl	802730e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027d92:	4454      	add	r4, sl
 8027d94:	e7de      	b.n	8027d54 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8027d96:	2400      	movs	r4, #0
 8027d98:	e6eb      	b.n	8027b72 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8027d9a:	bf00      	nop
 8027d9c:	0802f2a8 	.word	0x0802f2a8

08027da0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027da0:	b570      	push	{r4, r5, r6, lr}
 8027da2:	790b      	ldrb	r3, [r1, #4]
 8027da4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8027da8:	2b00      	cmp	r3, #0
 8027daa:	bf0c      	ite	eq
 8027dac:	2301      	moveq	r3, #1
 8027dae:	2300      	movne	r3, #0
 8027db0:	4604      	mov	r4, r0
 8027db2:	460e      	mov	r6, r1
 8027db4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8027db8:	d109      	bne.n	8027dce <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8027dba:	b14d      	cbz	r5, 8027dd0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027dbc:	7933      	ldrb	r3, [r6, #4]
 8027dbe:	2b01      	cmp	r3, #1
 8027dc0:	d10c      	bne.n	8027ddc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027dc2:	6823      	ldr	r3, [r4, #0]
 8027dc4:	4620      	mov	r0, r4
 8027dc6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8027dc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027dcc:	4718      	bx	r3
 8027dce:	b12d      	cbz	r5, 8027ddc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027dd0:	6823      	ldr	r3, [r4, #0]
 8027dd2:	4620      	mov	r0, r4
 8027dd4:	695b      	ldr	r3, [r3, #20]
 8027dd6:	4798      	blx	r3
 8027dd8:	2d00      	cmp	r5, #0
 8027dda:	d1ef      	bne.n	8027dbc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027ddc:	bd70      	pop	{r4, r5, r6, pc}

08027dde <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027dde:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027de2:	4770      	bx	lr

08027de4 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027de4:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8027de8:	4770      	bx	lr

08027dea <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8027dea:	6802      	ldr	r2, [r0, #0]
 8027dec:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027df0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027df2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027df6:	4710      	bx	r2

08027df8 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8027df8:	6802      	ldr	r2, [r0, #0]
 8027dfa:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027dfe:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027e00:	eef0 0a40 	vmov.f32	s1, s0
 8027e04:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e08:	4710      	bx	r2

08027e0a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8027e0a:	6802      	ldr	r2, [r0, #0]
 8027e0c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027e10:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027e12:	eeb0 1a40 	vmov.f32	s2, s0
 8027e16:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e1a:	4710      	bx	r2

08027e1c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027e1c:	6802      	ldr	r2, [r0, #0]
 8027e1e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027e22:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027e24:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027e28:	4710      	bx	r2

08027e2a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8027e2a:	6802      	ldr	r2, [r0, #0]
 8027e2c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027e30:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027e32:	eef0 0a40 	vmov.f32	s1, s0
 8027e36:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e3a:	4710      	bx	r2

08027e3c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027e3c:	6802      	ldr	r2, [r0, #0]
 8027e3e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027e42:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027e44:	eeb0 1a40 	vmov.f32	s2, s0
 8027e48:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e4c:	4710      	bx	r2

08027e4e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027e4e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e52:	4770      	bx	lr

08027e54 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027e54:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8027e58:	4770      	bx	lr

08027e5a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8027e5a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027e5e:	4770      	bx	lr

08027e60 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027e60:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027e64:	4770      	bx	lr

08027e66 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8027e66:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8027e6a:	4770      	bx	lr

08027e6c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027e6c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027e70:	4770      	bx	lr

08027e72 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027e72:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027e76:	4770      	bx	lr

08027e78 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8027e78:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027e7c:	4770      	bx	lr

08027e7e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8027e7e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8027e82:	4770      	bx	lr

08027e84 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027e84:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8027e88:	4770      	bx	lr

08027e8a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8027e8a:	ee07 2a90 	vmov	s15, r2
 8027e8e:	6803      	ldr	r3, [r0, #0]
 8027e90:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027e94:	ee07 1a90 	vmov	s15, r1
 8027e98:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027e9c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027ea0:	4718      	bx	r3

08027ea2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027ea2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8027ea6:	4770      	bx	lr

08027ea8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8027ea8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027eac:	4770      	bx	lr

08027eae <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027eae:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027eb2:	4770      	bx	lr

08027eb4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027eb4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8027eb8:	4770      	bx	lr

08027eba <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8027eba:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027ebe:	4770      	bx	lr

08027ec0 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027ec0:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027ec4:	4770      	bx	lr

08027ec6 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8027ec6:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8027eca:	4770      	bx	lr

08027ecc <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027ecc:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027ed0:	4770      	bx	lr

08027ed2 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027ed2:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8027ed6:	4770      	bx	lr

08027ed8 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8027ed8:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027edc:	4770      	bx	lr

08027ede <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027ede:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027ee2:	4770      	bx	lr

08027ee4 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027ee4:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8027ee8:	4770      	bx	lr

08027eea <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8027eea:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027eee:	4770      	bx	lr

08027ef0 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027ef0:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027ef4:	4770      	bx	lr

08027ef6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8027ef6:	b510      	push	{r4, lr}
 8027ef8:	ed2d 8b04 	vpush	{d8-d9}
 8027efc:	6803      	ldr	r3, [r0, #0]
 8027efe:	4604      	mov	r4, r0
 8027f00:	699b      	ldr	r3, [r3, #24]
 8027f02:	eeb0 8a40 	vmov.f32	s16, s0
 8027f06:	eef0 8a60 	vmov.f32	s17, s1
 8027f0a:	eeb0 9a41 	vmov.f32	s18, s2
 8027f0e:	4798      	blx	r3
 8027f10:	6823      	ldr	r3, [r4, #0]
 8027f12:	4620      	mov	r0, r4
 8027f14:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8027f16:	eeb0 1a49 	vmov.f32	s2, s18
 8027f1a:	eef0 0a68 	vmov.f32	s1, s17
 8027f1e:	eeb0 0a48 	vmov.f32	s0, s16
 8027f22:	4798      	blx	r3
 8027f24:	ecbd 8b04 	vpop	{d8-d9}
 8027f28:	6823      	ldr	r3, [r4, #0]
 8027f2a:	4620      	mov	r0, r4
 8027f2c:	699b      	ldr	r3, [r3, #24]
 8027f2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027f32:	4718      	bx	r3

08027f34 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027f34:	b510      	push	{r4, lr}
 8027f36:	ed2d 8b02 	vpush	{d8}
 8027f3a:	6803      	ldr	r3, [r0, #0]
 8027f3c:	4604      	mov	r4, r0
 8027f3e:	699b      	ldr	r3, [r3, #24]
 8027f40:	eeb0 8a40 	vmov.f32	s16, s0
 8027f44:	4798      	blx	r3
 8027f46:	6823      	ldr	r3, [r4, #0]
 8027f48:	4620      	mov	r0, r4
 8027f4a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027f4e:	eeb0 0a48 	vmov.f32	s0, s16
 8027f52:	4798      	blx	r3
 8027f54:	ecbd 8b02 	vpop	{d8}
 8027f58:	6823      	ldr	r3, [r4, #0]
 8027f5a:	4620      	mov	r0, r4
 8027f5c:	699b      	ldr	r3, [r3, #24]
 8027f5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027f62:	4718      	bx	r3

08027f64 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8027f64:	2200      	movs	r2, #0
 8027f66:	8002      	strh	r2, [r0, #0]
 8027f68:	8042      	strh	r2, [r0, #2]
 8027f6a:	8082      	strh	r2, [r0, #4]
 8027f6c:	80c2      	strh	r2, [r0, #6]
 8027f6e:	4770      	bx	lr

08027f70 <_ZN8touchgfx13TextureMapperD1Ev>:
 8027f70:	4770      	bx	lr

08027f72 <_ZN8touchgfx13TextureMapperD0Ev>:
 8027f72:	b510      	push	{r4, lr}
 8027f74:	2190      	movs	r1, #144	; 0x90
 8027f76:	4604      	mov	r4, r0
 8027f78:	f001 ff3f 	bl	8029dfa <_ZdlPvj>
 8027f7c:	4620      	mov	r0, r4
 8027f7e:	bd10      	pop	{r4, pc}

08027f80 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8027f80:	b538      	push	{r3, r4, r5, lr}
 8027f82:	2500      	movs	r5, #0
 8027f84:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8027f88:	2301      	movs	r3, #1
 8027f8a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8027f8e:	4b1f      	ldr	r3, [pc, #124]	; (802800c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8027f90:	8085      	strh	r5, [r0, #4]
 8027f92:	80c5      	strh	r5, [r0, #6]
 8027f94:	8105      	strh	r5, [r0, #8]
 8027f96:	8145      	strh	r5, [r0, #10]
 8027f98:	8185      	strh	r5, [r0, #12]
 8027f9a:	81c5      	strh	r5, [r0, #14]
 8027f9c:	8205      	strh	r5, [r0, #16]
 8027f9e:	8245      	strh	r5, [r0, #18]
 8027fa0:	61c5      	str	r5, [r0, #28]
 8027fa2:	8405      	strh	r5, [r0, #32]
 8027fa4:	8445      	strh	r5, [r0, #34]	; 0x22
 8027fa6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8027faa:	6003      	str	r3, [r0, #0]
 8027fac:	880b      	ldrh	r3, [r1, #0]
 8027fae:	84c3      	strh	r3, [r0, #38]	; 0x26
 8027fb0:	23ff      	movs	r3, #255	; 0xff
 8027fb2:	4604      	mov	r4, r0
 8027fb4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8027fb8:	f7eb f96b 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027fbc:	4b14      	ldr	r3, [pc, #80]	; (8028010 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027fbe:	6023      	str	r3, [r4, #0]
 8027fc0:	2300      	movs	r3, #0
 8027fc2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8027fc6:	4913      	ldr	r1, [pc, #76]	; (8028014 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8027fc8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027fca:	6323      	str	r3, [r4, #48]	; 0x30
 8027fcc:	6363      	str	r3, [r4, #52]	; 0x34
 8027fce:	63a3      	str	r3, [r4, #56]	; 0x38
 8027fd0:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027fd2:	6463      	str	r3, [r4, #68]	; 0x44
 8027fd4:	64a3      	str	r3, [r4, #72]	; 0x48
 8027fd6:	6523      	str	r3, [r4, #80]	; 0x50
 8027fd8:	6563      	str	r3, [r4, #84]	; 0x54
 8027fda:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027fdc:	6623      	str	r3, [r4, #96]	; 0x60
 8027fde:	66a3      	str	r3, [r4, #104]	; 0x68
 8027fe0:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027fe2:	6763      	str	r3, [r4, #116]	; 0x74
 8027fe4:	67a3      	str	r3, [r4, #120]	; 0x78
 8027fe6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8027fea:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027fee:	230c      	movs	r3, #12
 8027ff0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027ff4:	6422      	str	r2, [r4, #64]	; 0x40
 8027ff6:	64e1      	str	r1, [r4, #76]	; 0x4c
 8027ff8:	65a1      	str	r1, [r4, #88]	; 0x58
 8027ffa:	6662      	str	r2, [r4, #100]	; 0x64
 8027ffc:	6722      	str	r2, [r4, #112]	; 0x70
 8027ffe:	67e2      	str	r2, [r4, #124]	; 0x7c
 8028000:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8028004:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8028008:	4620      	mov	r0, r4
 802800a:	bd38      	pop	{r3, r4, r5, pc}
 802800c:	0802ed50 	.word	0x0802ed50
 8028010:	0802f334 	.word	0x0802f334
 8028014:	447a0000 	.word	0x447a0000

08028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8028018:	b570      	push	{r4, r5, r6, lr}
 802801a:	ed2d 8b04 	vpush	{d8-d9}
 802801e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8028022:	add0      	add	r5, sp, #832	; 0x340
 8028024:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8028026:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802802a:	4604      	mov	r4, r0
 802802c:	4628      	mov	r0, r5
 802802e:	f7f1 fa7f 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028032:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8028034:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8028038:	4606      	mov	r6, r0
 802803a:	4628      	mov	r0, r5
 802803c:	f7f1 faac 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028040:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8028044:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8028048:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802804a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802804e:	9312      	str	r3, [sp, #72]	; 0x48
 8028050:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028054:	1c72      	adds	r2, r6, #1
 8028056:	3001      	adds	r0, #1
 8028058:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802805c:	ee07 2a90 	vmov	s15, r2
 8028060:	ee06 0a90 	vmov	s13, r0
 8028064:	ee36 6a47 	vsub.f32	s12, s12, s14
 8028068:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802806c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8028070:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028074:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8028078:	9316      	str	r3, [sp, #88]	; 0x58
 802807a:	931a      	str	r3, [sp, #104]	; 0x68
 802807c:	931e      	str	r3, [sp, #120]	; 0x78
 802807e:	2300      	movs	r3, #0
 8028080:	9320      	str	r3, [sp, #128]	; 0x80
 8028082:	9321      	str	r3, [sp, #132]	; 0x84
 8028084:	9322      	str	r3, [sp, #136]	; 0x88
 8028086:	9324      	str	r3, [sp, #144]	; 0x90
 8028088:	9325      	str	r3, [sp, #148]	; 0x94
 802808a:	9326      	str	r3, [sp, #152]	; 0x98
 802808c:	9328      	str	r3, [sp, #160]	; 0xa0
 802808e:	9329      	str	r3, [sp, #164]	; 0xa4
 8028090:	932a      	str	r3, [sp, #168]	; 0xa8
 8028092:	932c      	str	r3, [sp, #176]	; 0xb0
 8028094:	932d      	str	r3, [sp, #180]	; 0xb4
 8028096:	932e      	str	r3, [sp, #184]	; 0xb8
 8028098:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802809c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80280a0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80280a4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80280a8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 80280ac:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 80280b0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 80280b4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80280b8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80280bc:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 80280c0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80280c4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80280c8:	a830      	add	r0, sp, #192	; 0xc0
 80280ca:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80280ce:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80280d2:	f000 fc43 	bl	802895c <_ZN8touchgfx9Matrix4x4C1Ev>
 80280d6:	eeb1 0a49 	vneg.f32	s0, s18
 80280da:	a830      	add	r0, sp, #192	; 0xc0
 80280dc:	f000 fd12 	bl	8028b04 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80280e0:	eeb1 0a68 	vneg.f32	s0, s17
 80280e4:	f000 fd1c 	bl	8028b20 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80280e8:	eeb1 0a48 	vneg.f32	s0, s16
 80280ec:	f000 fd27 	bl	8028b3e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80280f0:	a840      	add	r0, sp, #256	; 0x100
 80280f2:	f000 fc33 	bl	802895c <_ZN8touchgfx9Matrix4x4C1Ev>
 80280f6:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 80280fa:	a840      	add	r0, sp, #256	; 0x100
 80280fc:	f000 fc86 	bl	8028a0c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8028100:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8028104:	f000 fcac 	bl	8028a60 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8028108:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802810c:	f000 fcd1 	bl	8028ab2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8028110:	a850      	add	r0, sp, #320	; 0x140
 8028112:	f000 fc23 	bl	802895c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028116:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802811a:	a850      	add	r0, sp, #320	; 0x140
 802811c:	f000 fd1e 	bl	8028b5c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8028120:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028124:	f000 fd26 	bl	8028b74 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8028128:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802812c:	f000 fd2f 	bl	8028b8e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8028130:	a860      	add	r0, sp, #384	; 0x180
 8028132:	f000 fc13 	bl	802895c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028136:	eeb0 0a49 	vmov.f32	s0, s18
 802813a:	a860      	add	r0, sp, #384	; 0x180
 802813c:	f000 fce2 	bl	8028b04 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028140:	eeb0 0a68 	vmov.f32	s0, s17
 8028144:	f000 fcec 	bl	8028b20 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028148:	eeb0 0a48 	vmov.f32	s0, s16
 802814c:	f000 fcf7 	bl	8028b3e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028150:	aa50      	add	r2, sp, #320	; 0x140
 8028152:	a960      	add	r1, sp, #384	; 0x180
 8028154:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028156:	f000 fc1b 	bl	8028990 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802815a:	4628      	mov	r0, r5
 802815c:	aa40      	add	r2, sp, #256	; 0x100
 802815e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028160:	f000 fc16 	bl	8028990 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028164:	4629      	mov	r1, r5
 8028166:	aa30      	add	r2, sp, #192	; 0xc0
 8028168:	a870      	add	r0, sp, #448	; 0x1c0
 802816a:	f000 fc11 	bl	8028990 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802816e:	a880      	add	r0, sp, #512	; 0x200
 8028170:	f000 fbf4 	bl	802895c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028174:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028178:	a880      	add	r0, sp, #512	; 0x200
 802817a:	eeb1 0a40 	vneg.f32	s0, s0
 802817e:	f000 fcc1 	bl	8028b04 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028182:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028186:	a880      	add	r0, sp, #512	; 0x200
 8028188:	eeb1 0a40 	vneg.f32	s0, s0
 802818c:	f000 fcc8 	bl	8028b20 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028190:	a890      	add	r0, sp, #576	; 0x240
 8028192:	f000 fbe3 	bl	802895c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028196:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802819a:	a890      	add	r0, sp, #576	; 0x240
 802819c:	f000 fc26 	bl	80289ec <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80281a0:	a8a0      	add	r0, sp, #640	; 0x280
 80281a2:	f000 fbdb 	bl	802895c <_ZN8touchgfx9Matrix4x4C1Ev>
 80281a6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80281aa:	a8a0      	add	r0, sp, #640	; 0x280
 80281ac:	f000 fcaa 	bl	8028b04 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80281b0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80281b4:	f000 fcb4 	bl	8028b20 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80281b8:	aa90      	add	r2, sp, #576	; 0x240
 80281ba:	a9a0      	add	r1, sp, #640	; 0x280
 80281bc:	a8b0      	add	r0, sp, #704	; 0x2c0
 80281be:	f000 fbe7 	bl	8028990 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80281c2:	4628      	mov	r0, r5
 80281c4:	aa80      	add	r2, sp, #512	; 0x200
 80281c6:	a9b0      	add	r1, sp, #704	; 0x2c0
 80281c8:	f000 fbe2 	bl	8028990 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80281cc:	4629      	mov	r1, r5
 80281ce:	aa70      	add	r2, sp, #448	; 0x1c0
 80281d0:	4668      	mov	r0, sp
 80281d2:	466d      	mov	r5, sp
 80281d4:	f000 fbdc 	bl	8028990 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80281d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80281da:	ae70      	add	r6, sp, #448	; 0x1c0
 80281dc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80281de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80281e0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80281e2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80281e4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80281e6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80281ea:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80281ee:	2500      	movs	r5, #0
 80281f0:	0129      	lsls	r1, r5, #4
 80281f2:	ab20      	add	r3, sp, #128	; 0x80
 80281f4:	185e      	adds	r6, r3, r1
 80281f6:	ab10      	add	r3, sp, #64	; 0x40
 80281f8:	4419      	add	r1, r3
 80281fa:	a870      	add	r0, sp, #448	; 0x1c0
 80281fc:	f000 fb7e 	bl	80288fc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028200:	3501      	adds	r5, #1
 8028202:	2d04      	cmp	r5, #4
 8028204:	ed86 0a00 	vstr	s0, [r6]
 8028208:	edc6 0a01 	vstr	s1, [r6, #4]
 802820c:	ed86 1a02 	vstr	s2, [r6, #8]
 8028210:	edc6 1a03 	vstr	s3, [r6, #12]
 8028214:	d1ec      	bne.n	80281f0 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8028216:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802821a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802821e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028222:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028226:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802822a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802822e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8028232:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8028236:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802823a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802823e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8028242:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8028246:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802824a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802824e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8028252:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028256:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802825a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802825e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028262:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028266:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802826a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802826e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028272:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028276:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802827a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802827e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028282:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8028286:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802828a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802828e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028292:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8028296:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802829a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802829e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80282a2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80282a6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80282aa:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80282ae:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80282b2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80282b6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80282ba:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80282be:	ecbd 8b04 	vpop	{d8-d9}
 80282c2:	bd70      	pop	{r4, r5, r6, pc}

080282c4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80282c4:	b510      	push	{r4, lr}
 80282c6:	4604      	mov	r4, r0
 80282c8:	f7ea ffe3 	bl	8013292 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80282cc:	4620      	mov	r0, r4
 80282ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80282d2:	f7ff bea1 	b.w	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282d6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80282d6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80282da:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 80282de:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 80282e2:	f7ff be99 	b.w	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282e6 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 80282e6:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 80282ea:	f7ff be95 	b.w	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282ee <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 80282ee:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 80282f2:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 80282f6:	f7ff be8f 	b.w	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282fa <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 80282fa:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80282fe:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028302:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028306:	bfd8      	it	le
 8028308:	eeb0 0a67 	vmovle.f32	s0, s15
 802830c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028310:	f7ff be82 	b.w	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028314 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028314:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8028318:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802831c:	f7ff be7c 	b.w	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028320 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028320:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028324:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028328:	f7ff be76 	b.w	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802832c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802832c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028330:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028334:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8028338:	f7ff be6e 	b.w	8028018 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802833c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802833c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028340:	ed2d 8b04 	vpush	{d8-d9}
 8028344:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8028348:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802834c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028350:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8028354:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802835c:	bf54      	ite	pl
 802835e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028362:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028366:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802836a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802836e:	bfd8      	it	le
 8028370:	eeb0 0a49 	vmovle.f32	s0, s18
 8028374:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802837c:	bfd8      	it	le
 802837e:	eeb0 0a68 	vmovle.f32	s0, s17
 8028382:	460c      	mov	r4, r1
 8028384:	4607      	mov	r7, r0
 8028386:	f001 fe4f 	bl	802a028 <floorf>
 802838a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802838e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028392:	bf58      	it	pl
 8028394:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028398:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802839c:	bf56      	itet	pl
 802839e:	ee10 3a10 	vmovpl	r3, s0
 80283a2:	2600      	movmi	r6, #0
 80283a4:	b21e      	sxthpl	r6, r3
 80283a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283aa:	bfd8      	it	le
 80283ac:	eeb0 8a69 	vmovle.f32	s16, s19
 80283b0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80283b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283b8:	bf58      	it	pl
 80283ba:	eeb0 8a49 	vmovpl.f32	s16, s18
 80283be:	eef4 8ac8 	vcmpe.f32	s17, s16
 80283c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283c6:	bf54      	ite	pl
 80283c8:	eeb0 0a68 	vmovpl.f32	s0, s17
 80283cc:	eeb0 0a48 	vmovmi.f32	s0, s16
 80283d0:	f001 fde8 	bl	8029fa4 <ceilf>
 80283d4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80283d8:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 80283dc:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 80283e0:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 80283e4:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 80283e8:	ee07 8a90 	vmov	s15, r8
 80283ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80283f0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80283f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283f8:	bfd8      	it	le
 80283fa:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80283fe:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028402:	bfdc      	itt	le
 8028404:	ee10 3a10 	vmovle	r3, s0
 8028408:	fa0f f883 	sxthle.w	r8, r3
 802840c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028410:	bf54      	ite	pl
 8028412:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028416:	eeb0 0a48 	vmovmi.f32	s0, s16
 802841a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802841e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028422:	bfd8      	it	le
 8028424:	eeb0 0a49 	vmovle.f32	s0, s18
 8028428:	eef4 8ac0 	vcmpe.f32	s17, s0
 802842c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028430:	bfd8      	it	le
 8028432:	eeb0 0a68 	vmovle.f32	s0, s17
 8028436:	f001 fdf7 	bl	802a028 <floorf>
 802843a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802843e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028442:	bf58      	it	pl
 8028444:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028448:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802844c:	bf56      	itet	pl
 802844e:	ee10 3a10 	vmovpl	r3, s0
 8028452:	2500      	movmi	r5, #0
 8028454:	b21d      	sxthpl	r5, r3
 8028456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802845a:	bfd8      	it	le
 802845c:	eeb0 8a69 	vmovle.f32	s16, s19
 8028460:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028468:	bf58      	it	pl
 802846a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802846e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028476:	bf54      	ite	pl
 8028478:	eeb0 0a68 	vmovpl.f32	s0, s17
 802847c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028480:	f001 fd90 	bl	8029fa4 <ceilf>
 8028484:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8028488:	803e      	strh	r6, [r7, #0]
 802848a:	ee07 3a90 	vmov	s15, r3
 802848e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028492:	807d      	strh	r5, [r7, #2]
 8028494:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802849c:	bfd8      	it	le
 802849e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80284a2:	eba8 0606 	sub.w	r6, r8, r6
 80284a6:	bfdc      	itt	le
 80284a8:	ee10 3a10 	vmovle	r3, s0
 80284ac:	b21b      	sxthle	r3, r3
 80284ae:	1b5d      	subs	r5, r3, r5
 80284b0:	80be      	strh	r6, [r7, #4]
 80284b2:	80fd      	strh	r5, [r7, #6]
 80284b4:	ecbd 8b04 	vpop	{d8-d9}
 80284b8:	4638      	mov	r0, r7
 80284ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080284be <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80284be:	b513      	push	{r0, r1, r4, lr}
 80284c0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80284c4:	4604      	mov	r4, r0
 80284c6:	b143      	cbz	r3, 80284da <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80284c8:	4601      	mov	r1, r0
 80284ca:	4668      	mov	r0, sp
 80284cc:	f7ff ff36 	bl	802833c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80284d0:	6823      	ldr	r3, [r4, #0]
 80284d2:	4669      	mov	r1, sp
 80284d4:	691b      	ldr	r3, [r3, #16]
 80284d6:	4620      	mov	r0, r4
 80284d8:	4798      	blx	r3
 80284da:	b002      	add	sp, #8
 80284dc:	bd10      	pop	{r4, pc}

080284de <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80284de:	4603      	mov	r3, r0
 80284e0:	3026      	adds	r0, #38	; 0x26
 80284e2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80284e6:	b90b      	cbnz	r3, 80284ec <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 80284e8:	f7ee bdfa 	b.w	80170e0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 80284ec:	f7ee be08 	b.w	8017100 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

080284f0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 80284f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284f4:	ed2d 8b04 	vpush	{d8-d9}
 80284f8:	4604      	mov	r4, r0
 80284fa:	469b      	mov	fp, r3
 80284fc:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028500:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028504:	f9b1 6000 	ldrsh.w	r6, [r1]
 8028508:	8888      	ldrh	r0, [r1, #4]
 802850a:	b0b3      	sub	sp, #204	; 0xcc
 802850c:	4430      	add	r0, r6
 802850e:	b280      	uxth	r0, r0
 8028510:	9206      	str	r2, [sp, #24]
 8028512:	fa0f fe80 	sxth.w	lr, r0
 8028516:	2200      	movs	r2, #0
 8028518:	4596      	cmp	lr, r2
 802851a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802851e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8028522:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8028526:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8028528:	9211      	str	r2, [sp, #68]	; 0x44
 802852a:	f340 8129 	ble.w	8028780 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802852e:	45b4      	cmp	ip, r6
 8028530:	f340 8126 	ble.w	8028780 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028534:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8028538:	88ca      	ldrh	r2, [r1, #6]
 802853a:	442a      	add	r2, r5
 802853c:	b292      	uxth	r2, r2
 802853e:	b211      	sxth	r1, r2
 8028540:	2900      	cmp	r1, #0
 8028542:	f340 811d 	ble.w	8028780 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028546:	42ab      	cmp	r3, r5
 8028548:	f340 811a 	ble.w	8028780 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802854c:	45f4      	cmp	ip, lr
 802854e:	bfb8      	it	lt
 8028550:	fa1f f08c 	uxthlt.w	r0, ip
 8028554:	428b      	cmp	r3, r1
 8028556:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802855a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802855e:	bfb8      	it	lt
 8028560:	b29a      	uxthlt	r2, r3
 8028562:	1b80      	subs	r0, r0, r6
 8028564:	1b52      	subs	r2, r2, r5
 8028566:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802856a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802856e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8028572:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8028576:	ab11      	add	r3, sp, #68	; 0x44
 8028578:	e893 0003 	ldmia.w	r3, {r0, r1}
 802857c:	6822      	ldr	r2, [r4, #0]
 802857e:	9307      	str	r3, [sp, #28]
 8028580:	ad13      	add	r5, sp, #76	; 0x4c
 8028582:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8028584:	e885 0003 	stmia.w	r5, {r0, r1}
 8028588:	4629      	mov	r1, r5
 802858a:	4620      	mov	r0, r4
 802858c:	4790      	blx	r2
 802858e:	4621      	mov	r1, r4
 8028590:	a815      	add	r0, sp, #84	; 0x54
 8028592:	f7ee fd01 	bl	8016f98 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8028596:	a815      	add	r0, sp, #84	; 0x54
 8028598:	f7ed f9c6 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802859c:	9b07      	ldr	r3, [sp, #28]
 802859e:	1d26      	adds	r6, r4, #4
 80285a0:	4618      	mov	r0, r3
 80285a2:	4631      	mov	r1, r6
 80285a4:	f7ed fa04 	bl	80159b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80285a8:	4628      	mov	r0, r5
 80285aa:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80285ae:	f7ed f9bb 	bl	8015928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80285b2:	4628      	mov	r0, r5
 80285b4:	f7f1 f8a8 	bl	8019708 <_ZNK8touchgfx6Bitmap7getDataEv>
 80285b8:	9007      	str	r0, [sp, #28]
 80285ba:	2800      	cmp	r0, #0
 80285bc:	f000 80db 	beq.w	8028776 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80285c0:	f8db 2000 	ldr.w	r2, [fp]
 80285c4:	9209      	str	r2, [sp, #36]	; 0x24
 80285c6:	f8db 2004 	ldr.w	r2, [fp, #4]
 80285ca:	920a      	str	r2, [sp, #40]	; 0x28
 80285cc:	f8db 2008 	ldr.w	r2, [fp, #8]
 80285d0:	920b      	str	r2, [sp, #44]	; 0x2c
 80285d2:	f8db 200c 	ldr.w	r2, [fp, #12]
 80285d6:	920c      	str	r2, [sp, #48]	; 0x30
 80285d8:	f8da 2000 	ldr.w	r2, [sl]
 80285dc:	920d      	str	r2, [sp, #52]	; 0x34
 80285de:	f8da 2004 	ldr.w	r2, [sl, #4]
 80285e2:	920e      	str	r2, [sp, #56]	; 0x38
 80285e4:	f8da 2008 	ldr.w	r2, [sl, #8]
 80285e8:	920f      	str	r2, [sp, #60]	; 0x3c
 80285ea:	f8da 200c 	ldr.w	r2, [sl, #12]
 80285ee:	9210      	str	r2, [sp, #64]	; 0x40
 80285f0:	a90d      	add	r1, sp, #52	; 0x34
 80285f2:	4632      	mov	r2, r6
 80285f4:	a809      	add	r0, sp, #36	; 0x24
 80285f6:	f7ed f9bf 	bl	8015978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80285fa:	4632      	mov	r2, r6
 80285fc:	a90e      	add	r1, sp, #56	; 0x38
 80285fe:	a80a      	add	r0, sp, #40	; 0x28
 8028600:	f7ed f9ba 	bl	8015978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028604:	4632      	mov	r2, r6
 8028606:	a90f      	add	r1, sp, #60	; 0x3c
 8028608:	a80b      	add	r0, sp, #44	; 0x2c
 802860a:	f7ed f9b5 	bl	8015978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802860e:	4632      	mov	r2, r6
 8028610:	a910      	add	r1, sp, #64	; 0x40
 8028612:	a80c      	add	r0, sp, #48	; 0x30
 8028614:	f7ed f9b0 	bl	8015978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028618:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802861c:	edd7 4a00 	vldr	s9, [r7]
 8028620:	edd7 5a01 	vldr	s11, [r7, #4]
 8028624:	ed98 4a00 	vldr	s8, [r8]
 8028628:	ed98 5a01 	vldr	s10, [r8, #4]
 802862c:	ed99 9a00 	vldr	s18, [r9]
 8028630:	ed99 8a01 	vldr	s16, [r9, #4]
 8028634:	edd9 8a02 	vldr	s17, [r9, #8]
 8028638:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802863c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8028640:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8028644:	eef0 6a67 	vmov.f32	s13, s15
 8028648:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802864c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8028650:	eeb0 7a67 	vmov.f32	s14, s15
 8028654:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8028658:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802865c:	eeb0 6a67 	vmov.f32	s12, s15
 8028660:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028664:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8028668:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802866c:	ee16 6a10 	vmov	r6, s12
 8028670:	eeb0 6a67 	vmov.f32	s12, s15
 8028674:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028678:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802867c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028680:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8028684:	68ff      	ldr	r7, [r7, #12]
 8028686:	9624      	str	r6, [sp, #144]	; 0x90
 8028688:	ee16 0a10 	vmov	r0, s12
 802868c:	eeb0 6a67 	vmov.f32	s12, s15
 8028690:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028694:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8028698:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802869c:	ee16 1a10 	vmov	r1, s12
 80286a0:	eeb0 6a67 	vmov.f32	s12, s15
 80286a4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80286a8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80286ac:	ee16 2a10 	vmov	r2, s12
 80286b0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80286b4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80286b8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80286bc:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80286c0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80286c4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80286c8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80286cc:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80286d0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80286d4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80286d8:	922d      	str	r2, [sp, #180]	; 0xb4
 80286da:	4a2b      	ldr	r2, [pc, #172]	; (8028788 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80286dc:	9b06      	ldr	r3, [sp, #24]
 80286de:	8812      	ldrh	r2, [r2, #0]
 80286e0:	9317      	str	r3, [sp, #92]	; 0x5c
 80286e2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80286e6:	9b07      	ldr	r3, [sp, #28]
 80286e8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80286ec:	4628      	mov	r0, r5
 80286ee:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80286f2:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80286f6:	9218      	str	r2, [sp, #96]	; 0x60
 80286f8:	9319      	str	r3, [sp, #100]	; 0x64
 80286fa:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 80286fe:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8028702:	9731      	str	r7, [sp, #196]	; 0xc4
 8028704:	f7f1 f830 	bl	8019768 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8028708:	901a      	str	r0, [sp, #104]	; 0x68
 802870a:	4628      	mov	r0, r5
 802870c:	f7f0 ff10 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028710:	901b      	str	r0, [sp, #108]	; 0x6c
 8028712:	4628      	mov	r0, r5
 8028714:	f7f0 ff40 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028718:	901c      	str	r0, [sp, #112]	; 0x70
 802871a:	4628      	mov	r0, r5
 802871c:	f7f0 ff08 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028720:	eeb4 9a48 	vcmp.f32	s18, s16
 8028724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028728:	901d      	str	r0, [sp, #116]	; 0x74
 802872a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802872e:	d107      	bne.n	8028740 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8028730:	eeb4 8a68 	vcmp.f32	s16, s17
 8028734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028738:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802873c:	bf08      	it	eq
 802873e:	461e      	moveq	r6, r3
 8028740:	4b12      	ldr	r3, [pc, #72]	; (802878c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8028742:	681b      	ldr	r3, [r3, #0]
 8028744:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8028748:	b10a      	cbz	r2, 802874e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802874a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802874c:	b905      	cbnz	r5, 8028750 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802874e:	689d      	ldr	r5, [r3, #8]
 8028750:	682b      	ldr	r3, [r5, #0]
 8028752:	4620      	mov	r0, r4
 8028754:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8028756:	f7ff fec2 	bl	80284de <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802875a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802875e:	9604      	str	r6, [sp, #16]
 8028760:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8028764:	ab13      	add	r3, sp, #76	; 0x4c
 8028766:	9301      	str	r3, [sp, #4]
 8028768:	ab15      	add	r3, sp, #84	; 0x54
 802876a:	9300      	str	r3, [sp, #0]
 802876c:	aa1e      	add	r2, sp, #120	; 0x78
 802876e:	ab19      	add	r3, sp, #100	; 0x64
 8028770:	a917      	add	r1, sp, #92	; 0x5c
 8028772:	4628      	mov	r0, r5
 8028774:	47b8      	blx	r7
 8028776:	b033      	add	sp, #204	; 0xcc
 8028778:	ecbd 8b04 	vpop	{d8-d9}
 802877c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028780:	2300      	movs	r3, #0
 8028782:	9312      	str	r3, [sp, #72]	; 0x48
 8028784:	e6f7      	b.n	8028576 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8028786:	bf00      	nop
 8028788:	200132b6 	.word	0x200132b6
 802878c:	200132bc 	.word	0x200132bc

08028790 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028794:	ed2d 8b02 	vpush	{d8}
 8028798:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802879c:	b098      	sub	sp, #96	; 0x60
 802879e:	4604      	mov	r4, r0
 80287a0:	4688      	mov	r8, r1
 80287a2:	2b00      	cmp	r3, #0
 80287a4:	d077      	beq.n	8028896 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80287a6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80287aa:	4628      	mov	r0, r5
 80287ac:	f7f0 fec0 	bl	8019530 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80287b0:	ee07 0a90 	vmov	s15, r0
 80287b4:	4628      	mov	r0, r5
 80287b6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80287ba:	f7f0 feed 	bl	8019598 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80287be:	4b4e      	ldr	r3, [pc, #312]	; (80288f8 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80287c0:	781b      	ldrb	r3, [r3, #0]
 80287c2:	ee07 0a90 	vmov	s15, r0
 80287c6:	2b01      	cmp	r3, #1
 80287c8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80287cc:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80287d0:	d066      	beq.n	80288a0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80287d2:	eeb0 6a47 	vmov.f32	s12, s14
 80287d6:	ee17 3a10 	vmov	r3, s14
 80287da:	eeb0 4a48 	vmov.f32	s8, s16
 80287de:	eeb0 7a48 	vmov.f32	s14, s16
 80287e2:	eef0 4a67 	vmov.f32	s9, s15
 80287e6:	eeb0 8a67 	vmov.f32	s16, s15
 80287ea:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 80287ee:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 80287f2:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 80287f6:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 80287fa:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 80287fe:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8028802:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8028804:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8028806:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8028808:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802880c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8028810:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028814:	ee73 1a65 	vsub.f32	s3, s6, s11
 8028818:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802881c:	ee32 1a45 	vsub.f32	s2, s4, s10
 8028820:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8028824:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8028828:	eee1 6a21 	vfma.f32	s13, s2, s3
 802882c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8028830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028834:	dd3d      	ble.n	80288b2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8028836:	ed8d 5a04 	vstr	s10, [sp, #16]
 802883a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802883e:	edcd 2a06 	vstr	s5, [sp, #24]
 8028842:	f8cd c01c 	str.w	ip, [sp, #28]
 8028846:	edcd 5a08 	vstr	s11, [sp, #32]
 802884a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802884e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8028852:	970b      	str	r7, [sp, #44]	; 0x2c
 8028854:	960c      	str	r6, [sp, #48]	; 0x30
 8028856:	950d      	str	r5, [sp, #52]	; 0x34
 8028858:	920e      	str	r2, [sp, #56]	; 0x38
 802885a:	900f      	str	r0, [sp, #60]	; 0x3c
 802885c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8028860:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8028864:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8028868:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802886c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8028870:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8028874:	9316      	str	r3, [sp, #88]	; 0x58
 8028876:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802887a:	ab14      	add	r3, sp, #80	; 0x50
 802887c:	9303      	str	r3, [sp, #12]
 802887e:	ab10      	add	r3, sp, #64	; 0x40
 8028880:	9302      	str	r3, [sp, #8]
 8028882:	ab0c      	add	r3, sp, #48	; 0x30
 8028884:	9301      	str	r3, [sp, #4]
 8028886:	ab08      	add	r3, sp, #32
 8028888:	9300      	str	r3, [sp, #0]
 802888a:	2200      	movs	r2, #0
 802888c:	ab04      	add	r3, sp, #16
 802888e:	4641      	mov	r1, r8
 8028890:	4620      	mov	r0, r4
 8028892:	f7ff fe2d 	bl	80284f0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8028896:	b018      	add	sp, #96	; 0x60
 8028898:	ecbd 8b02 	vpop	{d8}
 802889c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80288a0:	eeb0 6a48 	vmov.f32	s12, s16
 80288a4:	eef0 4a47 	vmov.f32	s9, s14
 80288a8:	ee17 3a90 	vmov	r3, s15
 80288ac:	eeb0 4a67 	vmov.f32	s8, s15
 80288b0:	e79b      	b.n	80287ea <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80288b2:	ed8d 5a05 	vstr	s10, [sp, #20]
 80288b6:	ed8d 2a04 	vstr	s4, [sp, #16]
 80288ba:	f8cd c018 	str.w	ip, [sp, #24]
 80288be:	edcd 2a07 	vstr	s5, [sp, #28]
 80288c2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80288c6:	ed8d 3a08 	vstr	s6, [sp, #32]
 80288ca:	970a      	str	r7, [sp, #40]	; 0x28
 80288cc:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80288d0:	960d      	str	r6, [sp, #52]	; 0x34
 80288d2:	950c      	str	r5, [sp, #48]	; 0x30
 80288d4:	900e      	str	r0, [sp, #56]	; 0x38
 80288d6:	920f      	str	r2, [sp, #60]	; 0x3c
 80288d8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80288dc:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80288e0:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80288e4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80288e8:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80288ec:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80288f0:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 80288f4:	9317      	str	r3, [sp, #92]	; 0x5c
 80288f6:	e7c0      	b.n	802887a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 80288f8:	200132b4 	.word	0x200132b4

080288fc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 80288fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80288fe:	b08d      	sub	sp, #52	; 0x34
 8028900:	2300      	movs	r3, #0
 8028902:	9304      	str	r3, [sp, #16]
 8028904:	9305      	str	r3, [sp, #20]
 8028906:	9306      	str	r3, [sp, #24]
 8028908:	aa04      	add	r2, sp, #16
 802890a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802890e:	9307      	str	r3, [sp, #28]
 8028910:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8028914:	4613      	mov	r3, r2
 8028916:	f101 0710 	add.w	r7, r1, #16
 802891a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8028958 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802891e:	460c      	mov	r4, r1
 8028920:	4605      	mov	r5, r0
 8028922:	ecb4 7a01 	vldmia	r4!, {s14}
 8028926:	ecf5 6a01 	vldmia	r5!, {s13}
 802892a:	42bc      	cmp	r4, r7
 802892c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028930:	d1f7      	bne.n	8028922 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8028932:	3010      	adds	r0, #16
 8028934:	42b0      	cmp	r0, r6
 8028936:	ece2 7a01 	vstmia	r2!, {s15}
 802893a:	d1ee      	bne.n	802891a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802893c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802893e:	ac0c      	add	r4, sp, #48	; 0x30
 8028940:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8028944:	ed9d 0a08 	vldr	s0, [sp, #32]
 8028948:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802894c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8028950:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8028954:	b00d      	add	sp, #52	; 0x34
 8028956:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028958:	00000000 	.word	0x00000000

0802895c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802895c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802898c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8028960:	2300      	movs	r3, #0
 8028962:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028966:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802896a:	2200      	movs	r2, #0
 802896c:	4293      	cmp	r3, r2
 802896e:	f102 0201 	add.w	r2, r2, #1
 8028972:	bf14      	ite	ne
 8028974:	eef0 6a47 	vmovne.f32	s13, s14
 8028978:	eef0 6a67 	vmoveq.f32	s13, s15
 802897c:	2a04      	cmp	r2, #4
 802897e:	ece1 6a01 	vstmia	r1!, {s13}
 8028982:	d1f3      	bne.n	802896c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8028984:	3301      	adds	r3, #1
 8028986:	2b04      	cmp	r3, #4
 8028988:	d1ed      	bne.n	8028966 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802898a:	4770      	bx	lr
 802898c:	00000000 	.word	0x00000000

08028990 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028990:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028994:	460c      	mov	r4, r1
 8028996:	4605      	mov	r5, r0
 8028998:	4690      	mov	r8, r2
 802899a:	f7ff ffdf 	bl	802895c <_ZN8touchgfx9Matrix4x4C1Ev>
 802899e:	4628      	mov	r0, r5
 80289a0:	4621      	mov	r1, r4
 80289a2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80289a6:	2300      	movs	r3, #0
 80289a8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80289e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80289ac:	eb08 0603 	add.w	r6, r8, r3
 80289b0:	460f      	mov	r7, r1
 80289b2:	2400      	movs	r4, #0
 80289b4:	4632      	mov	r2, r6
 80289b6:	ecf7 6a01 	vldmia	r7!, {s13}
 80289ba:	ed92 7a00 	vldr	s14, [r2]
 80289be:	3401      	adds	r4, #1
 80289c0:	2c04      	cmp	r4, #4
 80289c2:	f106 0610 	add.w	r6, r6, #16
 80289c6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80289ca:	d1f3      	bne.n	80289b4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80289cc:	18c2      	adds	r2, r0, r3
 80289ce:	3304      	adds	r3, #4
 80289d0:	2b10      	cmp	r3, #16
 80289d2:	edc2 7a00 	vstr	s15, [r2]
 80289d6:	d1e7      	bne.n	80289a8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80289d8:	3110      	adds	r1, #16
 80289da:	4561      	cmp	r1, ip
 80289dc:	f100 0010 	add.w	r0, r0, #16
 80289e0:	d1e1      	bne.n	80289a6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80289e2:	4628      	mov	r0, r5
 80289e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80289e8:	00000000 	.word	0x00000000

080289ec <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80289ec:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80289f0:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80289f4:	f100 0320 	add.w	r3, r0, #32
 80289f8:	3030      	adds	r0, #48	; 0x30
 80289fa:	ecf3 7a01 	vldmia	r3!, {s15}
 80289fe:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028a02:	4283      	cmp	r3, r0
 8028a04:	edc3 7a03 	vstr	s15, [r3, #12]
 8028a08:	d1f7      	bne.n	80289fa <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8028a0a:	4770      	bx	lr

08028a0c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028a0c:	b510      	push	{r4, lr}
 8028a0e:	ed2d 8b02 	vpush	{d8}
 8028a12:	4604      	mov	r4, r0
 8028a14:	eef0 8a40 	vmov.f32	s17, s0
 8028a18:	f001 fa7a 	bl	8029f10 <sinf>
 8028a1c:	eeb0 8a40 	vmov.f32	s16, s0
 8028a20:	eeb0 0a68 	vmov.f32	s0, s17
 8028a24:	f001 fa30 	bl	8029e88 <cosf>
 8028a28:	f104 0310 	add.w	r3, r4, #16
 8028a2c:	f104 0220 	add.w	r2, r4, #32
 8028a30:	eeb1 6a48 	vneg.f32	s12, s16
 8028a34:	edd3 7a04 	vldr	s15, [r3, #16]
 8028a38:	edd3 6a00 	vldr	s13, [r3]
 8028a3c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028a40:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a44:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028a48:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028a4c:	eca3 7a01 	vstmia	r3!, {s14}
 8028a50:	429a      	cmp	r2, r3
 8028a52:	edc3 7a03 	vstr	s15, [r3, #12]
 8028a56:	d1ed      	bne.n	8028a34 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8028a58:	ecbd 8b02 	vpop	{d8}
 8028a5c:	4620      	mov	r0, r4
 8028a5e:	bd10      	pop	{r4, pc}

08028a60 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028a60:	b510      	push	{r4, lr}
 8028a62:	ed2d 8b02 	vpush	{d8}
 8028a66:	4604      	mov	r4, r0
 8028a68:	eef0 8a40 	vmov.f32	s17, s0
 8028a6c:	f001 fa50 	bl	8029f10 <sinf>
 8028a70:	eeb0 8a40 	vmov.f32	s16, s0
 8028a74:	eeb0 0a68 	vmov.f32	s0, s17
 8028a78:	f001 fa06 	bl	8029e88 <cosf>
 8028a7c:	4623      	mov	r3, r4
 8028a7e:	f104 0210 	add.w	r2, r4, #16
 8028a82:	eeb1 6a48 	vneg.f32	s12, s16
 8028a86:	edd3 7a08 	vldr	s15, [r3, #32]
 8028a8a:	edd3 6a00 	vldr	s13, [r3]
 8028a8e:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028a92:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a96:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028a9a:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028a9e:	eca3 7a01 	vstmia	r3!, {s14}
 8028aa2:	429a      	cmp	r2, r3
 8028aa4:	edc3 7a07 	vstr	s15, [r3, #28]
 8028aa8:	d1ed      	bne.n	8028a86 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8028aaa:	ecbd 8b02 	vpop	{d8}
 8028aae:	4620      	mov	r0, r4
 8028ab0:	bd10      	pop	{r4, pc}

08028ab2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028ab2:	b510      	push	{r4, lr}
 8028ab4:	ed2d 8b02 	vpush	{d8}
 8028ab8:	4604      	mov	r4, r0
 8028aba:	eef0 8a40 	vmov.f32	s17, s0
 8028abe:	f001 fa27 	bl	8029f10 <sinf>
 8028ac2:	eeb0 8a40 	vmov.f32	s16, s0
 8028ac6:	eeb0 0a68 	vmov.f32	s0, s17
 8028aca:	f001 f9dd 	bl	8029e88 <cosf>
 8028ace:	4623      	mov	r3, r4
 8028ad0:	f104 0210 	add.w	r2, r4, #16
 8028ad4:	eeb1 6a48 	vneg.f32	s12, s16
 8028ad8:	edd3 7a04 	vldr	s15, [r3, #16]
 8028adc:	edd3 6a00 	vldr	s13, [r3]
 8028ae0:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028ae4:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028ae8:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028aec:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028af0:	eca3 7a01 	vstmia	r3!, {s14}
 8028af4:	429a      	cmp	r2, r3
 8028af6:	edc3 7a03 	vstr	s15, [r3, #12]
 8028afa:	d1ed      	bne.n	8028ad8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028afc:	ecbd 8b02 	vpop	{d8}
 8028b00:	4620      	mov	r0, r4
 8028b02:	bd10      	pop	{r4, pc}

08028b04 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028b04:	4603      	mov	r3, r0
 8028b06:	f100 0210 	add.w	r2, r0, #16
 8028b0a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028b0e:	edd3 7a00 	vldr	s15, [r3]
 8028b12:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028b16:	ece3 7a01 	vstmia	r3!, {s15}
 8028b1a:	4293      	cmp	r3, r2
 8028b1c:	d1f5      	bne.n	8028b0a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028b1e:	4770      	bx	lr

08028b20 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028b20:	f100 0310 	add.w	r3, r0, #16
 8028b24:	f100 0220 	add.w	r2, r0, #32
 8028b28:	ed93 7a08 	vldr	s14, [r3, #32]
 8028b2c:	edd3 7a00 	vldr	s15, [r3]
 8028b30:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028b34:	ece3 7a01 	vstmia	r3!, {s15}
 8028b38:	4293      	cmp	r3, r2
 8028b3a:	d1f5      	bne.n	8028b28 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028b3c:	4770      	bx	lr

08028b3e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028b3e:	f100 0320 	add.w	r3, r0, #32
 8028b42:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028b46:	ed93 7a04 	vldr	s14, [r3, #16]
 8028b4a:	edd3 7a00 	vldr	s15, [r3]
 8028b4e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028b52:	ece3 7a01 	vstmia	r3!, {s15}
 8028b56:	4293      	cmp	r3, r2
 8028b58:	d1f5      	bne.n	8028b46 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8028b5a:	4770      	bx	lr

08028b5c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028b5c:	4603      	mov	r3, r0
 8028b5e:	f100 0210 	add.w	r2, r0, #16
 8028b62:	edd3 7a00 	vldr	s15, [r3]
 8028b66:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b6a:	ece3 7a01 	vstmia	r3!, {s15}
 8028b6e:	4293      	cmp	r3, r2
 8028b70:	d1f7      	bne.n	8028b62 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028b72:	4770      	bx	lr

08028b74 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028b74:	f100 0310 	add.w	r3, r0, #16
 8028b78:	f100 0220 	add.w	r2, r0, #32
 8028b7c:	edd3 7a00 	vldr	s15, [r3]
 8028b80:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b84:	ece3 7a01 	vstmia	r3!, {s15}
 8028b88:	4293      	cmp	r3, r2
 8028b8a:	d1f7      	bne.n	8028b7c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028b8c:	4770      	bx	lr

08028b8e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028b8e:	f100 0320 	add.w	r3, r0, #32
 8028b92:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028b96:	edd3 7a00 	vldr	s15, [r3]
 8028b9a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b9e:	ece3 7a01 	vstmia	r3!, {s15}
 8028ba2:	4293      	cmp	r3, r2
 8028ba4:	d1f7      	bne.n	8028b96 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8028ba6:	4770      	bx	lr

08028ba8 <arm_max_f32>:
 8028ba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028bac:	1e4f      	subs	r7, r1, #1
 8028bae:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028bb2:	f100 0e04 	add.w	lr, r0, #4
 8028bb6:	edd0 7a00 	vldr	s15, [r0]
 8028bba:	d058      	beq.n	8028c6e <arm_max_f32+0xc6>
 8028bbc:	3014      	adds	r0, #20
 8028bbe:	46c4      	mov	ip, r8
 8028bc0:	2604      	movs	r6, #4
 8028bc2:	2400      	movs	r4, #0
 8028bc4:	ed10 6a04 	vldr	s12, [r0, #-16]
 8028bc8:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028bcc:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028bd0:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028bd4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8028bd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028bdc:	bfc8      	it	gt
 8028bde:	eef0 7a46 	vmovgt.f32	s15, s12
 8028be2:	f1a6 0503 	sub.w	r5, r6, #3
 8028be6:	eef4 7ae6 	vcmpe.f32	s15, s13
 8028bea:	bfc8      	it	gt
 8028bec:	462c      	movgt	r4, r5
 8028bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028bf2:	bf48      	it	mi
 8028bf4:	eef0 7a66 	vmovmi.f32	s15, s13
 8028bf8:	f1a6 0502 	sub.w	r5, r6, #2
 8028bfc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028c00:	bf48      	it	mi
 8028c02:	462c      	movmi	r4, r5
 8028c04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c08:	bf48      	it	mi
 8028c0a:	eef0 7a47 	vmovmi.f32	s15, s14
 8028c0e:	f106 35ff 	add.w	r5, r6, #4294967295
 8028c12:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028c16:	bf48      	it	mi
 8028c18:	462c      	movmi	r4, r5
 8028c1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c1e:	bf48      	it	mi
 8028c20:	4634      	movmi	r4, r6
 8028c22:	bf48      	it	mi
 8028c24:	eef0 7a65 	vmovmi.f32	s15, s11
 8028c28:	f1bc 0c01 	subs.w	ip, ip, #1
 8028c2c:	f106 0604 	add.w	r6, r6, #4
 8028c30:	f100 0010 	add.w	r0, r0, #16
 8028c34:	d1c6      	bne.n	8028bc4 <arm_max_f32+0x1c>
 8028c36:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028c3a:	f017 0003 	ands.w	r0, r7, #3
 8028c3e:	d018      	beq.n	8028c72 <arm_max_f32+0xca>
 8028c40:	1a08      	subs	r0, r1, r0
 8028c42:	ecbe 7a01 	vldmia	lr!, {s14}
 8028c46:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028c4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c4e:	bfc8      	it	gt
 8028c50:	4604      	movgt	r4, r0
 8028c52:	f100 0001 	add.w	r0, r0, #1
 8028c56:	bfd8      	it	le
 8028c58:	eeb0 7a67 	vmovle.f32	s14, s15
 8028c5c:	4288      	cmp	r0, r1
 8028c5e:	eef0 7a47 	vmov.f32	s15, s14
 8028c62:	d1ee      	bne.n	8028c42 <arm_max_f32+0x9a>
 8028c64:	ed82 7a00 	vstr	s14, [r2]
 8028c68:	601c      	str	r4, [r3, #0]
 8028c6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028c6e:	4644      	mov	r4, r8
 8028c70:	e7e3      	b.n	8028c3a <arm_max_f32+0x92>
 8028c72:	eeb0 7a67 	vmov.f32	s14, s15
 8028c76:	e7f5      	b.n	8028c64 <arm_max_f32+0xbc>

08028c78 <arm_rfft_fast_init_f32>:
 8028c78:	084b      	lsrs	r3, r1, #1
 8028c7a:	2b80      	cmp	r3, #128	; 0x80
 8028c7c:	b410      	push	{r4}
 8028c7e:	8201      	strh	r1, [r0, #16]
 8028c80:	8003      	strh	r3, [r0, #0]
 8028c82:	d047      	beq.n	8028d14 <arm_rfft_fast_init_f32+0x9c>
 8028c84:	d917      	bls.n	8028cb6 <arm_rfft_fast_init_f32+0x3e>
 8028c86:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028c8a:	d03d      	beq.n	8028d08 <arm_rfft_fast_init_f32+0x90>
 8028c8c:	d929      	bls.n	8028ce2 <arm_rfft_fast_init_f32+0x6a>
 8028c8e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028c92:	d020      	beq.n	8028cd6 <arm_rfft_fast_init_f32+0x5e>
 8028c94:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028c98:	d113      	bne.n	8028cc2 <arm_rfft_fast_init_f32+0x4a>
 8028c9a:	4921      	ldr	r1, [pc, #132]	; (8028d20 <arm_rfft_fast_init_f32+0xa8>)
 8028c9c:	4a21      	ldr	r2, [pc, #132]	; (8028d24 <arm_rfft_fast_init_f32+0xac>)
 8028c9e:	4b22      	ldr	r3, [pc, #136]	; (8028d28 <arm_rfft_fast_init_f32+0xb0>)
 8028ca0:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028ca4:	8184      	strh	r4, [r0, #12]
 8028ca6:	6081      	str	r1, [r0, #8]
 8028ca8:	6042      	str	r2, [r0, #4]
 8028caa:	6143      	str	r3, [r0, #20]
 8028cac:	2000      	movs	r0, #0
 8028cae:	b240      	sxtb	r0, r0
 8028cb0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028cb4:	4770      	bx	lr
 8028cb6:	2b20      	cmp	r3, #32
 8028cb8:	d01c      	beq.n	8028cf4 <arm_rfft_fast_init_f32+0x7c>
 8028cba:	2b40      	cmp	r3, #64	; 0x40
 8028cbc:	d006      	beq.n	8028ccc <arm_rfft_fast_init_f32+0x54>
 8028cbe:	2b10      	cmp	r3, #16
 8028cc0:	d01d      	beq.n	8028cfe <arm_rfft_fast_init_f32+0x86>
 8028cc2:	20ff      	movs	r0, #255	; 0xff
 8028cc4:	b240      	sxtb	r0, r0
 8028cc6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028cca:	4770      	bx	lr
 8028ccc:	2438      	movs	r4, #56	; 0x38
 8028cce:	4917      	ldr	r1, [pc, #92]	; (8028d2c <arm_rfft_fast_init_f32+0xb4>)
 8028cd0:	4a17      	ldr	r2, [pc, #92]	; (8028d30 <arm_rfft_fast_init_f32+0xb8>)
 8028cd2:	4b18      	ldr	r3, [pc, #96]	; (8028d34 <arm_rfft_fast_init_f32+0xbc>)
 8028cd4:	e7e6      	b.n	8028ca4 <arm_rfft_fast_init_f32+0x2c>
 8028cd6:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028cda:	4917      	ldr	r1, [pc, #92]	; (8028d38 <arm_rfft_fast_init_f32+0xc0>)
 8028cdc:	4a17      	ldr	r2, [pc, #92]	; (8028d3c <arm_rfft_fast_init_f32+0xc4>)
 8028cde:	4b18      	ldr	r3, [pc, #96]	; (8028d40 <arm_rfft_fast_init_f32+0xc8>)
 8028ce0:	e7e0      	b.n	8028ca4 <arm_rfft_fast_init_f32+0x2c>
 8028ce2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028ce6:	d1ec      	bne.n	8028cc2 <arm_rfft_fast_init_f32+0x4a>
 8028ce8:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028cec:	4915      	ldr	r1, [pc, #84]	; (8028d44 <arm_rfft_fast_init_f32+0xcc>)
 8028cee:	4a16      	ldr	r2, [pc, #88]	; (8028d48 <arm_rfft_fast_init_f32+0xd0>)
 8028cf0:	4b16      	ldr	r3, [pc, #88]	; (8028d4c <arm_rfft_fast_init_f32+0xd4>)
 8028cf2:	e7d7      	b.n	8028ca4 <arm_rfft_fast_init_f32+0x2c>
 8028cf4:	2430      	movs	r4, #48	; 0x30
 8028cf6:	4916      	ldr	r1, [pc, #88]	; (8028d50 <arm_rfft_fast_init_f32+0xd8>)
 8028cf8:	4a16      	ldr	r2, [pc, #88]	; (8028d54 <arm_rfft_fast_init_f32+0xdc>)
 8028cfa:	4b17      	ldr	r3, [pc, #92]	; (8028d58 <arm_rfft_fast_init_f32+0xe0>)
 8028cfc:	e7d2      	b.n	8028ca4 <arm_rfft_fast_init_f32+0x2c>
 8028cfe:	2414      	movs	r4, #20
 8028d00:	4916      	ldr	r1, [pc, #88]	; (8028d5c <arm_rfft_fast_init_f32+0xe4>)
 8028d02:	4a17      	ldr	r2, [pc, #92]	; (8028d60 <arm_rfft_fast_init_f32+0xe8>)
 8028d04:	4b17      	ldr	r3, [pc, #92]	; (8028d64 <arm_rfft_fast_init_f32+0xec>)
 8028d06:	e7cd      	b.n	8028ca4 <arm_rfft_fast_init_f32+0x2c>
 8028d08:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028d0c:	4916      	ldr	r1, [pc, #88]	; (8028d68 <arm_rfft_fast_init_f32+0xf0>)
 8028d0e:	4a17      	ldr	r2, [pc, #92]	; (8028d6c <arm_rfft_fast_init_f32+0xf4>)
 8028d10:	4b17      	ldr	r3, [pc, #92]	; (8028d70 <arm_rfft_fast_init_f32+0xf8>)
 8028d12:	e7c7      	b.n	8028ca4 <arm_rfft_fast_init_f32+0x2c>
 8028d14:	24d0      	movs	r4, #208	; 0xd0
 8028d16:	4917      	ldr	r1, [pc, #92]	; (8028d74 <arm_rfft_fast_init_f32+0xfc>)
 8028d18:	4a17      	ldr	r2, [pc, #92]	; (8028d78 <arm_rfft_fast_init_f32+0x100>)
 8028d1a:	4b18      	ldr	r3, [pc, #96]	; (8028d7c <arm_rfft_fast_init_f32+0x104>)
 8028d1c:	e7c2      	b.n	8028ca4 <arm_rfft_fast_init_f32+0x2c>
 8028d1e:	bf00      	nop
 8028d20:	0803e248 	.word	0x0803e248
 8028d24:	0802f440 	.word	0x0802f440
 8028d28:	080355b0 	.word	0x080355b0
 8028d2c:	08033540 	.word	0x08033540
 8028d30:	08040008 	.word	0x08040008
 8028d34:	080424f8 	.word	0x080424f8
 8028d38:	0803bf30 	.word	0x0803bf30
 8028d3c:	08039e30 	.word	0x08039e30
 8028d40:	080335b0 	.word	0x080335b0
 8028d44:	08042188 	.word	0x08042188
 8028d48:	080395b0 	.word	0x080395b0
 8028d4c:	08040208 	.word	0x08040208
 8028d50:	0803cde8 	.word	0x0803cde8
 8028d54:	0803be30 	.word	0x0803be30
 8028d58:	08033440 	.word	0x08033440
 8028d5c:	0803cd40 	.word	0x0803cd40
 8028d60:	08039db0 	.word	0x08039db0
 8028d64:	0803cd68 	.word	0x0803cd68
 8028d68:	08040a08 	.word	0x08040a08
 8028d6c:	0803d248 	.word	0x0803d248
 8028d70:	08040d88 	.word	0x08040d88
 8028d74:	080426f8 	.word	0x080426f8
 8028d78:	0803ce48 	.word	0x0803ce48
 8028d7c:	08041d88 	.word	0x08041d88

08028d80 <arm_rfft_fast_f32>:
 8028d80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028d84:	8a06      	ldrh	r6, [r0, #16]
 8028d86:	0876      	lsrs	r6, r6, #1
 8028d88:	4607      	mov	r7, r0
 8028d8a:	4615      	mov	r5, r2
 8028d8c:	8006      	strh	r6, [r0, #0]
 8028d8e:	460c      	mov	r4, r1
 8028d90:	2b00      	cmp	r3, #0
 8028d92:	d15c      	bne.n	8028e4e <arm_rfft_fast_f32+0xce>
 8028d94:	461a      	mov	r2, r3
 8028d96:	2301      	movs	r3, #1
 8028d98:	f000 fbe6 	bl	8029568 <arm_cfft_f32>
 8028d9c:	edd4 7a00 	vldr	s15, [r4]
 8028da0:	ed94 7a01 	vldr	s14, [r4, #4]
 8028da4:	883e      	ldrh	r6, [r7, #0]
 8028da6:	6978      	ldr	r0, [r7, #20]
 8028da8:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028dac:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028db0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028db4:	ee77 6a87 	vadd.f32	s13, s15, s14
 8028db8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028dbc:	3e01      	subs	r6, #1
 8028dbe:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028dc2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028dc6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8028dca:	ed85 7a00 	vstr	s14, [r5]
 8028dce:	edc5 7a01 	vstr	s15, [r5, #4]
 8028dd2:	3010      	adds	r0, #16
 8028dd4:	f105 0210 	add.w	r2, r5, #16
 8028dd8:	3b08      	subs	r3, #8
 8028dda:	f104 0110 	add.w	r1, r4, #16
 8028dde:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028de2:	ed93 5a02 	vldr	s10, [r3, #8]
 8028de6:	ed11 7a01 	vldr	s14, [r1, #-4]
 8028dea:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028dee:	edd3 5a03 	vldr	s11, [r3, #12]
 8028df2:	ed50 6a01 	vldr	s13, [r0, #-4]
 8028df6:	ee75 7a64 	vsub.f32	s15, s10, s9
 8028dfa:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028dfe:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028e02:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028e06:	ee66 4a27 	vmul.f32	s9, s12, s15
 8028e0a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028e0e:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028e12:	ee26 6a04 	vmul.f32	s12, s12, s8
 8028e16:	ee66 6a84 	vmul.f32	s13, s13, s8
 8028e1a:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028e1e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028e22:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028e26:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028e2a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028e2e:	3e01      	subs	r6, #1
 8028e30:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028e34:	ed42 7a01 	vstr	s15, [r2, #-4]
 8028e38:	f1a3 0308 	sub.w	r3, r3, #8
 8028e3c:	f101 0108 	add.w	r1, r1, #8
 8028e40:	f100 0008 	add.w	r0, r0, #8
 8028e44:	f102 0208 	add.w	r2, r2, #8
 8028e48:	d1c9      	bne.n	8028dde <arm_rfft_fast_f32+0x5e>
 8028e4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028e4e:	edd1 7a00 	vldr	s15, [r1]
 8028e52:	edd1 6a01 	vldr	s13, [r1, #4]
 8028e56:	6941      	ldr	r1, [r0, #20]
 8028e58:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028e5c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028e60:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028e64:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028e68:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028e6c:	3e01      	subs	r6, #1
 8028e6e:	ed82 7a00 	vstr	s14, [r2]
 8028e72:	edc2 7a01 	vstr	s15, [r2, #4]
 8028e76:	00f0      	lsls	r0, r6, #3
 8028e78:	b3ee      	cbz	r6, 8028ef6 <arm_rfft_fast_f32+0x176>
 8028e7a:	3808      	subs	r0, #8
 8028e7c:	f101 0e10 	add.w	lr, r1, #16
 8028e80:	4420      	add	r0, r4
 8028e82:	f104 0110 	add.w	r1, r4, #16
 8028e86:	f102 0c10 	add.w	ip, r2, #16
 8028e8a:	ed90 7a02 	vldr	s14, [r0, #8]
 8028e8e:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028e92:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8028e96:	ed90 4a03 	vldr	s8, [r0, #12]
 8028e9a:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028e9e:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028ea2:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8028ea6:	ee74 4a05 	vadd.f32	s9, s8, s10
 8028eaa:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028eae:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028eb2:	ee35 5a44 	vsub.f32	s10, s10, s8
 8028eb6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8028eba:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028ebe:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028ec2:	ee26 6a24 	vmul.f32	s12, s12, s9
 8028ec6:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8028eca:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028ece:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028ed2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028ed6:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028eda:	3e01      	subs	r6, #1
 8028edc:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028ee0:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028ee4:	f1a0 0008 	sub.w	r0, r0, #8
 8028ee8:	f101 0108 	add.w	r1, r1, #8
 8028eec:	f10e 0e08 	add.w	lr, lr, #8
 8028ef0:	f10c 0c08 	add.w	ip, ip, #8
 8028ef4:	d1c9      	bne.n	8028e8a <arm_rfft_fast_f32+0x10a>
 8028ef6:	4638      	mov	r0, r7
 8028ef8:	4629      	mov	r1, r5
 8028efa:	461a      	mov	r2, r3
 8028efc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028f00:	2301      	movs	r3, #1
 8028f02:	f000 bb31 	b.w	8029568 <arm_cfft_f32>
 8028f06:	bf00      	nop

08028f08 <arm_cfft_radix8by2_f32>:
 8028f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028f0c:	ed2d 8b08 	vpush	{d8-d11}
 8028f10:	f8b0 e000 	ldrh.w	lr, [r0]
 8028f14:	6842      	ldr	r2, [r0, #4]
 8028f16:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028f1a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028f1e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028f22:	4607      	mov	r7, r0
 8028f24:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8028f28:	f000 80af 	beq.w	802908a <arm_cfft_radix8by2_f32+0x182>
 8028f2c:	3310      	adds	r3, #16
 8028f2e:	18ce      	adds	r6, r1, r3
 8028f30:	3210      	adds	r2, #16
 8028f32:	4443      	add	r3, r8
 8028f34:	f101 0510 	add.w	r5, r1, #16
 8028f38:	f108 0410 	add.w	r4, r8, #16
 8028f3c:	ed54 1a04 	vldr	s3, [r4, #-16]
 8028f40:	ed13 4a04 	vldr	s8, [r3, #-16]
 8028f44:	ed53 3a03 	vldr	s7, [r3, #-12]
 8028f48:	ed53 5a02 	vldr	s11, [r3, #-8]
 8028f4c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8028f50:	ed54 6a03 	vldr	s13, [r4, #-12]
 8028f54:	ed14 0a02 	vldr	s0, [r4, #-8]
 8028f58:	ed16 2a04 	vldr	s4, [r6, #-16]
 8028f5c:	ed56 2a03 	vldr	s5, [r6, #-12]
 8028f60:	ed15 6a03 	vldr	s12, [r5, #-12]
 8028f64:	ed15 7a01 	vldr	s14, [r5, #-4]
 8028f68:	ed15 3a04 	vldr	s6, [r5, #-16]
 8028f6c:	ed54 7a01 	vldr	s15, [r4, #-4]
 8028f70:	ed56 0a02 	vldr	s1, [r6, #-8]
 8028f74:	ed16 1a01 	vldr	s2, [r6, #-4]
 8028f78:	ed55 4a02 	vldr	s9, [r5, #-8]
 8028f7c:	ee73 ba21 	vadd.f32	s23, s6, s3
 8028f80:	ee36 ba26 	vadd.f32	s22, s12, s13
 8028f84:	ee37 aa27 	vadd.f32	s20, s14, s15
 8028f88:	ee72 9a04 	vadd.f32	s19, s4, s8
 8028f8c:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8028f90:	ee31 8a05 	vadd.f32	s16, s2, s10
 8028f94:	ee74 aa80 	vadd.f32	s21, s9, s0
 8028f98:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8028f9c:	ed45 ba04 	vstr	s23, [r5, #-16]
 8028fa0:	ed05 ba03 	vstr	s22, [r5, #-12]
 8028fa4:	ed45 aa02 	vstr	s21, [r5, #-8]
 8028fa8:	ed05 aa01 	vstr	s20, [r5, #-4]
 8028fac:	ed06 8a01 	vstr	s16, [r6, #-4]
 8028fb0:	ed46 9a04 	vstr	s19, [r6, #-16]
 8028fb4:	ed06 9a03 	vstr	s18, [r6, #-12]
 8028fb8:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028fbc:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028fc0:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028fc4:	ed12 6a03 	vldr	s12, [r2, #-12]
 8028fc8:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028fcc:	ee33 3a61 	vsub.f32	s6, s6, s3
 8028fd0:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028fd4:	ee26 8a86 	vmul.f32	s16, s13, s12
 8028fd8:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028fdc:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028fe0:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028fe4:	ee23 3a06 	vmul.f32	s6, s6, s12
 8028fe8:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028fec:	ee23 6a86 	vmul.f32	s12, s7, s12
 8028ff0:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028ff4:	ee36 6a04 	vadd.f32	s12, s12, s8
 8028ff8:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028ffc:	ee72 3a63 	vsub.f32	s7, s4, s7
 8029000:	ee71 2a88 	vadd.f32	s5, s3, s16
 8029004:	ed44 6a03 	vstr	s13, [r4, #-12]
 8029008:	ed44 2a04 	vstr	s5, [r4, #-16]
 802900c:	ed43 3a04 	vstr	s7, [r3, #-16]
 8029010:	ed03 6a03 	vstr	s12, [r3, #-12]
 8029014:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029018:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802901c:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029020:	ed52 5a02 	vldr	s11, [r2, #-8]
 8029024:	ee35 6a41 	vsub.f32	s12, s10, s2
 8029028:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802902c:	ee67 3a87 	vmul.f32	s7, s15, s14
 8029030:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029034:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8029038:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802903c:	ee64 4a87 	vmul.f32	s9, s9, s14
 8029040:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8029044:	ee26 7a07 	vmul.f32	s14, s12, s14
 8029048:	ee26 6a25 	vmul.f32	s12, s12, s11
 802904c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8029050:	ee74 5a23 	vadd.f32	s11, s8, s7
 8029054:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029058:	ee37 7a26 	vadd.f32	s14, s14, s13
 802905c:	f1be 0e01 	subs.w	lr, lr, #1
 8029060:	ed44 5a02 	vstr	s11, [r4, #-8]
 8029064:	f105 0510 	add.w	r5, r5, #16
 8029068:	ed44 7a01 	vstr	s15, [r4, #-4]
 802906c:	f106 0610 	add.w	r6, r6, #16
 8029070:	ed03 6a02 	vstr	s12, [r3, #-8]
 8029074:	ed03 7a01 	vstr	s14, [r3, #-4]
 8029078:	f102 0210 	add.w	r2, r2, #16
 802907c:	f104 0410 	add.w	r4, r4, #16
 8029080:	f103 0310 	add.w	r3, r3, #16
 8029084:	f47f af5a 	bne.w	8028f3c <arm_cfft_radix8by2_f32+0x34>
 8029088:	687a      	ldr	r2, [r7, #4]
 802908a:	fa1f f48c 	uxth.w	r4, ip
 802908e:	4608      	mov	r0, r1
 8029090:	2302      	movs	r3, #2
 8029092:	4621      	mov	r1, r4
 8029094:	f000 fbca 	bl	802982c <arm_radix8_butterfly_f32>
 8029098:	ecbd 8b08 	vpop	{d8-d11}
 802909c:	4640      	mov	r0, r8
 802909e:	4621      	mov	r1, r4
 80290a0:	687a      	ldr	r2, [r7, #4]
 80290a2:	2302      	movs	r3, #2
 80290a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80290a8:	f000 bbc0 	b.w	802982c <arm_radix8_butterfly_f32>

080290ac <arm_cfft_radix8by4_f32>:
 80290ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80290b0:	ed2d 8b0a 	vpush	{d8-d12}
 80290b4:	8802      	ldrh	r2, [r0, #0]
 80290b6:	ed91 6a00 	vldr	s12, [r1]
 80290ba:	b08f      	sub	sp, #60	; 0x3c
 80290bc:	460f      	mov	r7, r1
 80290be:	0852      	lsrs	r2, r2, #1
 80290c0:	0093      	lsls	r3, r2, #2
 80290c2:	900c      	str	r0, [sp, #48]	; 0x30
 80290c4:	9103      	str	r1, [sp, #12]
 80290c6:	6841      	ldr	r1, [r0, #4]
 80290c8:	ed97 7a01 	vldr	s14, [r7, #4]
 80290cc:	4638      	mov	r0, r7
 80290ce:	4418      	add	r0, r3
 80290d0:	4606      	mov	r6, r0
 80290d2:	9009      	str	r0, [sp, #36]	; 0x24
 80290d4:	4418      	add	r0, r3
 80290d6:	edd0 6a00 	vldr	s13, [r0]
 80290da:	edd6 3a00 	vldr	s7, [r6]
 80290de:	edd6 2a01 	vldr	s5, [r6, #4]
 80290e2:	edd0 7a01 	vldr	s15, [r0, #4]
 80290e6:	900a      	str	r0, [sp, #40]	; 0x28
 80290e8:	ee76 5a26 	vadd.f32	s11, s12, s13
 80290ec:	4604      	mov	r4, r0
 80290ee:	4625      	mov	r5, r4
 80290f0:	441c      	add	r4, r3
 80290f2:	ed94 4a00 	vldr	s8, [r4]
 80290f6:	ed94 5a01 	vldr	s10, [r4, #4]
 80290fa:	9401      	str	r4, [sp, #4]
 80290fc:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8029100:	4630      	mov	r0, r6
 8029102:	ee74 4a24 	vadd.f32	s9, s8, s9
 8029106:	463e      	mov	r6, r7
 8029108:	ee14 ea90 	vmov	lr, s9
 802910c:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029110:	f846 eb08 	str.w	lr, [r6], #8
 8029114:	ee37 6a27 	vadd.f32	s12, s14, s15
 8029118:	edd0 4a01 	vldr	s9, [r0, #4]
 802911c:	9604      	str	r6, [sp, #16]
 802911e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029122:	9e01      	ldr	r6, [sp, #4]
 8029124:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8029128:	ed96 2a01 	vldr	s4, [r6, #4]
 802912c:	ee36 7a24 	vadd.f32	s14, s12, s9
 8029130:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8029134:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8029138:	ee36 6a62 	vsub.f32	s12, s12, s5
 802913c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029140:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029144:	ee73 3a45 	vsub.f32	s7, s6, s10
 8029148:	4604      	mov	r4, r0
 802914a:	ee36 6a45 	vsub.f32	s12, s12, s10
 802914e:	ee75 6a26 	vadd.f32	s13, s10, s13
 8029152:	46a3      	mov	fp, r4
 8029154:	ee37 7a02 	vadd.f32	s14, s14, s4
 8029158:	ee34 5a84 	vadd.f32	s10, s9, s8
 802915c:	ee13 8a90 	vmov	r8, s7
 8029160:	46a4      	mov	ip, r4
 8029162:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8029166:	ed87 7a01 	vstr	s14, [r7, #4]
 802916a:	f84b 8b08 	str.w	r8, [fp], #8
 802916e:	f1ac 0704 	sub.w	r7, ip, #4
 8029172:	ed8c 5a01 	vstr	s10, [ip, #4]
 8029176:	f101 0c08 	add.w	ip, r1, #8
 802917a:	462c      	mov	r4, r5
 802917c:	f8cd c014 	str.w	ip, [sp, #20]
 8029180:	ee15 ca90 	vmov	ip, s11
 8029184:	f844 cb08 	str.w	ip, [r4], #8
 8029188:	9407      	str	r4, [sp, #28]
 802918a:	f101 0410 	add.w	r4, r1, #16
 802918e:	ed85 6a01 	vstr	s12, [r5, #4]
 8029192:	0852      	lsrs	r2, r2, #1
 8029194:	9402      	str	r4, [sp, #8]
 8029196:	462c      	mov	r4, r5
 8029198:	f101 0518 	add.w	r5, r1, #24
 802919c:	920b      	str	r2, [sp, #44]	; 0x2c
 802919e:	46b2      	mov	sl, r6
 80291a0:	9506      	str	r5, [sp, #24]
 80291a2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 80291a6:	3a02      	subs	r2, #2
 80291a8:	ee16 5a90 	vmov	r5, s13
 80291ac:	46b6      	mov	lr, r6
 80291ae:	4630      	mov	r0, r6
 80291b0:	0852      	lsrs	r2, r2, #1
 80291b2:	f84a 5b08 	str.w	r5, [sl], #8
 80291b6:	f1a0 0604 	sub.w	r6, r0, #4
 80291ba:	edce 7a01 	vstr	s15, [lr, #4]
 80291be:	9208      	str	r2, [sp, #32]
 80291c0:	f000 8130 	beq.w	8029424 <arm_cfft_radix8by4_f32+0x378>
 80291c4:	4691      	mov	r9, r2
 80291c6:	9a03      	ldr	r2, [sp, #12]
 80291c8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80291cc:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80291d0:	3b08      	subs	r3, #8
 80291d2:	f102 0510 	add.w	r5, r2, #16
 80291d6:	f101 0c20 	add.w	ip, r1, #32
 80291da:	f1a4 020c 	sub.w	r2, r4, #12
 80291de:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 80291e2:	4433      	add	r3, r6
 80291e4:	3410      	adds	r4, #16
 80291e6:	4650      	mov	r0, sl
 80291e8:	4659      	mov	r1, fp
 80291ea:	ed55 3a02 	vldr	s7, [r5, #-8]
 80291ee:	ed14 5a02 	vldr	s10, [r4, #-8]
 80291f2:	ed91 7a00 	vldr	s14, [r1]
 80291f6:	edd0 7a00 	vldr	s15, [r0]
 80291fa:	ed15 4a01 	vldr	s8, [r5, #-4]
 80291fe:	ed54 5a01 	vldr	s11, [r4, #-4]
 8029202:	edd0 6a01 	vldr	s13, [r0, #4]
 8029206:	ed91 6a01 	vldr	s12, [r1, #4]
 802920a:	ee33 8a85 	vadd.f32	s16, s7, s10
 802920e:	ee34 0a25 	vadd.f32	s0, s8, s11
 8029212:	ee78 4a07 	vadd.f32	s9, s16, s14
 8029216:	ee74 5a65 	vsub.f32	s11, s8, s11
 802921a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802921e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8029222:	ed45 4a02 	vstr	s9, [r5, #-8]
 8029226:	edd1 4a01 	vldr	s9, [r1, #4]
 802922a:	ed90 4a01 	vldr	s8, [r0, #4]
 802922e:	ee70 4a24 	vadd.f32	s9, s0, s9
 8029232:	ee76 aa05 	vadd.f32	s21, s12, s10
 8029236:	ee74 4a84 	vadd.f32	s9, s9, s8
 802923a:	ee35 aac7 	vsub.f32	s20, s11, s14
 802923e:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029242:	edd6 1a00 	vldr	s3, [r6]
 8029246:	edd7 0a00 	vldr	s1, [r7]
 802924a:	ed92 4a02 	vldr	s8, [r2, #8]
 802924e:	edd3 3a02 	vldr	s7, [r3, #8]
 8029252:	ed93 2a01 	vldr	s4, [r3, #4]
 8029256:	ed16 1a01 	vldr	s2, [r6, #-4]
 802925a:	edd2 2a01 	vldr	s5, [r2, #4]
 802925e:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029262:	ee70 4aa1 	vadd.f32	s9, s1, s3
 8029266:	ee39 3a81 	vadd.f32	s6, s19, s2
 802926a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802926e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029272:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8029276:	ee7a aae6 	vsub.f32	s21, s21, s13
 802927a:	ee18 aa90 	vmov	sl, s17
 802927e:	f847 a908 	str.w	sl, [r7], #-8
 8029282:	edd2 8a01 	vldr	s17, [r2, #4]
 8029286:	ed93 9a01 	vldr	s18, [r3, #4]
 802928a:	ee73 8a28 	vadd.f32	s17, s6, s17
 802928e:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029292:	ee78 8a89 	vadd.f32	s17, s17, s18
 8029296:	ee74 0a63 	vsub.f32	s1, s8, s7
 802929a:	edc7 8a01 	vstr	s17, [r7, #4]
 802929e:	ed18 ba02 	vldr	s22, [r8, #-8]
 80292a2:	ed58 8a01 	vldr	s17, [r8, #-4]
 80292a6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 80292aa:	ee6a ba28 	vmul.f32	s23, s20, s17
 80292ae:	ee2a ca8b 	vmul.f32	s24, s21, s22
 80292b2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 80292b6:	ee30 9a81 	vadd.f32	s18, s1, s2
 80292ba:	ee79 9a82 	vadd.f32	s19, s19, s4
 80292be:	ee3c ca2b 	vadd.f32	s24, s24, s23
 80292c2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 80292c6:	ee69 baa8 	vmul.f32	s23, s19, s17
 80292ca:	ee2a aa0b 	vmul.f32	s20, s20, s22
 80292ce:	ee69 9a8b 	vmul.f32	s19, s19, s22
 80292d2:	ee69 8a28 	vmul.f32	s17, s18, s17
 80292d6:	ee29 ba0b 	vmul.f32	s22, s18, s22
 80292da:	ee1c aa10 	vmov	sl, s24
 80292de:	ee78 8aa9 	vadd.f32	s17, s17, s19
 80292e2:	f841 ab08 	str.w	sl, [r1], #8
 80292e6:	ee3a aa6a 	vsub.f32	s20, s20, s21
 80292ea:	ee3b bacb 	vsub.f32	s22, s23, s22
 80292ee:	ee34 4ac4 	vsub.f32	s8, s9, s8
 80292f2:	ee33 3a62 	vsub.f32	s6, s6, s5
 80292f6:	ed01 aa01 	vstr	s20, [r1, #-4]
 80292fa:	edc2 8a01 	vstr	s17, [r2, #4]
 80292fe:	ed82 ba02 	vstr	s22, [r2, #8]
 8029302:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8029306:	ee74 3a63 	vsub.f32	s7, s8, s7
 802930a:	ee38 8a47 	vsub.f32	s16, s16, s14
 802930e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8029312:	ee30 0a46 	vsub.f32	s0, s0, s12
 8029316:	ee33 3a42 	vsub.f32	s6, s6, s4
 802931a:	ee38 8a67 	vsub.f32	s16, s16, s15
 802931e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029322:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 8029326:	ee63 8a04 	vmul.f32	s17, s6, s8
 802932a:	ee28 aa24 	vmul.f32	s20, s16, s9
 802932e:	ee60 9a04 	vmul.f32	s19, s0, s8
 8029332:	ee28 8a04 	vmul.f32	s16, s16, s8
 8029336:	ee20 0a24 	vmul.f32	s0, s0, s9
 802933a:	ee63 3a84 	vmul.f32	s7, s7, s8
 802933e:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029342:	ee7a 9a29 	vadd.f32	s19, s20, s19
 8029346:	ee14 aa10 	vmov	sl, s8
 802934a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802934e:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029352:	ed44 9a02 	vstr	s19, [r4, #-8]
 8029356:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802935a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802935e:	f846 a908 	str.w	sl, [r6], #-8
 8029362:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029366:	ee35 7a87 	vadd.f32	s14, s11, s14
 802936a:	edc6 3a01 	vstr	s7, [r6, #4]
 802936e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029372:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029376:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802937a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802937e:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029382:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029386:	ee72 2a62 	vsub.f32	s5, s4, s5
 802938a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802938e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029392:	ee75 5a25 	vadd.f32	s11, s10, s11
 8029396:	ee62 0a86 	vmul.f32	s1, s5, s12
 802939a:	ee66 6a86 	vmul.f32	s13, s13, s12
 802939e:	ee67 7a87 	vmul.f32	s15, s15, s14
 80293a2:	ee21 6a06 	vmul.f32	s12, s2, s12
 80293a6:	ee62 2a87 	vmul.f32	s5, s5, s14
 80293aa:	ee21 1a07 	vmul.f32	s2, s2, s14
 80293ae:	ee15 aa90 	vmov	sl, s11
 80293b2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80293b6:	f840 ab08 	str.w	sl, [r0], #8
 80293ba:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80293be:	ee76 2a22 	vadd.f32	s5, s12, s5
 80293c2:	f1b9 0901 	subs.w	r9, r9, #1
 80293c6:	ed40 7a01 	vstr	s15, [r0, #-4]
 80293ca:	f105 0508 	add.w	r5, r5, #8
 80293ce:	ed83 1a02 	vstr	s2, [r3, #8]
 80293d2:	edc3 2a01 	vstr	s5, [r3, #4]
 80293d6:	f108 0808 	add.w	r8, r8, #8
 80293da:	f1a2 0208 	sub.w	r2, r2, #8
 80293de:	f10c 0c10 	add.w	ip, ip, #16
 80293e2:	f104 0408 	add.w	r4, r4, #8
 80293e6:	f10e 0e18 	add.w	lr, lr, #24
 80293ea:	f1a3 0308 	sub.w	r3, r3, #8
 80293ee:	f47f aefc 	bne.w	80291ea <arm_cfft_radix8by4_f32+0x13e>
 80293f2:	9908      	ldr	r1, [sp, #32]
 80293f4:	9802      	ldr	r0, [sp, #8]
 80293f6:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 80293fa:	00cb      	lsls	r3, r1, #3
 80293fc:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8029400:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8029404:	9102      	str	r1, [sp, #8]
 8029406:	9904      	ldr	r1, [sp, #16]
 8029408:	4419      	add	r1, r3
 802940a:	9104      	str	r1, [sp, #16]
 802940c:	9905      	ldr	r1, [sp, #20]
 802940e:	4419      	add	r1, r3
 8029410:	9105      	str	r1, [sp, #20]
 8029412:	9907      	ldr	r1, [sp, #28]
 8029414:	449b      	add	fp, r3
 8029416:	4419      	add	r1, r3
 8029418:	449a      	add	sl, r3
 802941a:	9b06      	ldr	r3, [sp, #24]
 802941c:	9107      	str	r1, [sp, #28]
 802941e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8029422:	9306      	str	r3, [sp, #24]
 8029424:	9a04      	ldr	r2, [sp, #16]
 8029426:	9807      	ldr	r0, [sp, #28]
 8029428:	edd2 3a00 	vldr	s7, [r2]
 802942c:	ed90 4a00 	vldr	s8, [r0]
 8029430:	eddb 7a00 	vldr	s15, [fp]
 8029434:	ed9a 3a00 	vldr	s6, [sl]
 8029438:	edd2 4a01 	vldr	s9, [r2, #4]
 802943c:	ed90 7a01 	vldr	s14, [r0, #4]
 8029440:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029444:	edda 5a01 	vldr	s11, [sl, #4]
 8029448:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802944c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802944e:	ee73 6a84 	vadd.f32	s13, s7, s8
 8029452:	ee34 6a87 	vadd.f32	s12, s9, s14
 8029456:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802945a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802945e:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029462:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8029466:	ed82 5a00 	vstr	s10, [r2]
 802946a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802946e:	edda 4a01 	vldr	s9, [sl, #4]
 8029472:	ee36 5a05 	vadd.f32	s10, s12, s10
 8029476:	ee72 3a04 	vadd.f32	s7, s4, s8
 802947a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802947e:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029482:	ed82 5a01 	vstr	s10, [r2, #4]
 8029486:	9a05      	ldr	r2, [sp, #20]
 8029488:	ee34 5a83 	vadd.f32	s10, s9, s6
 802948c:	edd2 1a00 	vldr	s3, [r2]
 8029490:	edd2 2a01 	vldr	s5, [r2, #4]
 8029494:	9a02      	ldr	r2, [sp, #8]
 8029496:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802949a:	ee36 6a42 	vsub.f32	s12, s12, s4
 802949e:	ee63 4aa1 	vmul.f32	s9, s7, s3
 80294a2:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80294a6:	ee65 2a22 	vmul.f32	s5, s10, s5
 80294aa:	ee25 5a21 	vmul.f32	s10, s10, s3
 80294ae:	ee74 2aa2 	vadd.f32	s5, s9, s5
 80294b2:	ee35 5a63 	vsub.f32	s10, s10, s7
 80294b6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80294ba:	edcb 2a00 	vstr	s5, [fp]
 80294be:	ed8b 5a01 	vstr	s10, [fp, #4]
 80294c2:	edd2 3a01 	vldr	s7, [r2, #4]
 80294c6:	ed92 5a00 	vldr	s10, [r2]
 80294ca:	9a06      	ldr	r2, [sp, #24]
 80294cc:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80294d0:	ee36 6a65 	vsub.f32	s12, s12, s11
 80294d4:	ee66 4a85 	vmul.f32	s9, s13, s10
 80294d8:	ee26 5a05 	vmul.f32	s10, s12, s10
 80294dc:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80294e0:	ee26 6a23 	vmul.f32	s12, s12, s7
 80294e4:	ee75 6a66 	vsub.f32	s13, s10, s13
 80294e8:	ee34 6a86 	vadd.f32	s12, s9, s12
 80294ec:	ee34 4a42 	vsub.f32	s8, s8, s4
 80294f0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80294f4:	edc0 6a01 	vstr	s13, [r0, #4]
 80294f8:	ed80 6a00 	vstr	s12, [r0]
 80294fc:	ed92 6a01 	vldr	s12, [r2, #4]
 8029500:	9803      	ldr	r0, [sp, #12]
 8029502:	ee77 7a43 	vsub.f32	s15, s14, s6
 8029506:	ee75 5a84 	vadd.f32	s11, s11, s8
 802950a:	ed92 7a00 	vldr	s14, [r2]
 802950e:	ee65 6a87 	vmul.f32	s13, s11, s14
 8029512:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029516:	ee65 5a86 	vmul.f32	s11, s11, s12
 802951a:	ee67 7a86 	vmul.f32	s15, s15, s12
 802951e:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029522:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8029526:	edca 5a01 	vstr	s11, [sl, #4]
 802952a:	edca 7a00 	vstr	s15, [sl]
 802952e:	6872      	ldr	r2, [r6, #4]
 8029530:	4621      	mov	r1, r4
 8029532:	2304      	movs	r3, #4
 8029534:	f000 f97a 	bl	802982c <arm_radix8_butterfly_f32>
 8029538:	9809      	ldr	r0, [sp, #36]	; 0x24
 802953a:	6872      	ldr	r2, [r6, #4]
 802953c:	4621      	mov	r1, r4
 802953e:	2304      	movs	r3, #4
 8029540:	f000 f974 	bl	802982c <arm_radix8_butterfly_f32>
 8029544:	980a      	ldr	r0, [sp, #40]	; 0x28
 8029546:	6872      	ldr	r2, [r6, #4]
 8029548:	4621      	mov	r1, r4
 802954a:	2304      	movs	r3, #4
 802954c:	f000 f96e 	bl	802982c <arm_radix8_butterfly_f32>
 8029550:	9801      	ldr	r0, [sp, #4]
 8029552:	6872      	ldr	r2, [r6, #4]
 8029554:	4621      	mov	r1, r4
 8029556:	2304      	movs	r3, #4
 8029558:	b00f      	add	sp, #60	; 0x3c
 802955a:	ecbd 8b0a 	vpop	{d8-d12}
 802955e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029562:	f000 b963 	b.w	802982c <arm_radix8_butterfly_f32>
 8029566:	bf00      	nop

08029568 <arm_cfft_f32>:
 8029568:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802956c:	2a01      	cmp	r2, #1
 802956e:	4606      	mov	r6, r0
 8029570:	4617      	mov	r7, r2
 8029572:	460c      	mov	r4, r1
 8029574:	4698      	mov	r8, r3
 8029576:	8805      	ldrh	r5, [r0, #0]
 8029578:	d054      	beq.n	8029624 <arm_cfft_f32+0xbc>
 802957a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802957e:	d04c      	beq.n	802961a <arm_cfft_f32+0xb2>
 8029580:	d916      	bls.n	80295b0 <arm_cfft_f32+0x48>
 8029582:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8029586:	d01a      	beq.n	80295be <arm_cfft_f32+0x56>
 8029588:	d95c      	bls.n	8029644 <arm_cfft_f32+0xdc>
 802958a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802958e:	d044      	beq.n	802961a <arm_cfft_f32+0xb2>
 8029590:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8029594:	d105      	bne.n	80295a2 <arm_cfft_f32+0x3a>
 8029596:	4620      	mov	r0, r4
 8029598:	4629      	mov	r1, r5
 802959a:	6872      	ldr	r2, [r6, #4]
 802959c:	2301      	movs	r3, #1
 802959e:	f000 f945 	bl	802982c <arm_radix8_butterfly_f32>
 80295a2:	f1b8 0f00 	cmp.w	r8, #0
 80295a6:	d111      	bne.n	80295cc <arm_cfft_f32+0x64>
 80295a8:	2f01      	cmp	r7, #1
 80295aa:	d016      	beq.n	80295da <arm_cfft_f32+0x72>
 80295ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80295b0:	2d20      	cmp	r5, #32
 80295b2:	d032      	beq.n	802961a <arm_cfft_f32+0xb2>
 80295b4:	d94a      	bls.n	802964c <arm_cfft_f32+0xe4>
 80295b6:	2d40      	cmp	r5, #64	; 0x40
 80295b8:	d0ed      	beq.n	8029596 <arm_cfft_f32+0x2e>
 80295ba:	2d80      	cmp	r5, #128	; 0x80
 80295bc:	d1f1      	bne.n	80295a2 <arm_cfft_f32+0x3a>
 80295be:	4630      	mov	r0, r6
 80295c0:	4621      	mov	r1, r4
 80295c2:	f7ff fca1 	bl	8028f08 <arm_cfft_radix8by2_f32>
 80295c6:	f1b8 0f00 	cmp.w	r8, #0
 80295ca:	d0ed      	beq.n	80295a8 <arm_cfft_f32+0x40>
 80295cc:	4620      	mov	r0, r4
 80295ce:	89b1      	ldrh	r1, [r6, #12]
 80295d0:	68b2      	ldr	r2, [r6, #8]
 80295d2:	f7d6 fe0d 	bl	80001f0 <arm_bitreversal_32>
 80295d6:	2f01      	cmp	r7, #1
 80295d8:	d1e8      	bne.n	80295ac <arm_cfft_f32+0x44>
 80295da:	ee07 5a90 	vmov	s15, r5
 80295de:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80295e2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80295e6:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 80295ea:	2d00      	cmp	r5, #0
 80295ec:	d0de      	beq.n	80295ac <arm_cfft_f32+0x44>
 80295ee:	f104 0108 	add.w	r1, r4, #8
 80295f2:	2300      	movs	r3, #0
 80295f4:	3301      	adds	r3, #1
 80295f6:	429d      	cmp	r5, r3
 80295f8:	f101 0108 	add.w	r1, r1, #8
 80295fc:	ed11 7a04 	vldr	s14, [r1, #-16]
 8029600:	ed51 7a03 	vldr	s15, [r1, #-12]
 8029604:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029608:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802960c:	ed01 7a04 	vstr	s14, [r1, #-16]
 8029610:	ed41 7a03 	vstr	s15, [r1, #-12]
 8029614:	d1ee      	bne.n	80295f4 <arm_cfft_f32+0x8c>
 8029616:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802961a:	4630      	mov	r0, r6
 802961c:	4621      	mov	r1, r4
 802961e:	f7ff fd45 	bl	80290ac <arm_cfft_radix8by4_f32>
 8029622:	e7be      	b.n	80295a2 <arm_cfft_f32+0x3a>
 8029624:	b1ad      	cbz	r5, 8029652 <arm_cfft_f32+0xea>
 8029626:	f101 030c 	add.w	r3, r1, #12
 802962a:	2200      	movs	r2, #0
 802962c:	ed53 7a02 	vldr	s15, [r3, #-8]
 8029630:	3201      	adds	r2, #1
 8029632:	eef1 7a67 	vneg.f32	s15, s15
 8029636:	4295      	cmp	r5, r2
 8029638:	ed43 7a02 	vstr	s15, [r3, #-8]
 802963c:	f103 0308 	add.w	r3, r3, #8
 8029640:	d1f4      	bne.n	802962c <arm_cfft_f32+0xc4>
 8029642:	e79a      	b.n	802957a <arm_cfft_f32+0x12>
 8029644:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8029648:	d0a5      	beq.n	8029596 <arm_cfft_f32+0x2e>
 802964a:	e7aa      	b.n	80295a2 <arm_cfft_f32+0x3a>
 802964c:	2d10      	cmp	r5, #16
 802964e:	d0b6      	beq.n	80295be <arm_cfft_f32+0x56>
 8029650:	e7a7      	b.n	80295a2 <arm_cfft_f32+0x3a>
 8029652:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029656:	d894      	bhi.n	8029582 <arm_cfft_f32+0x1a>
 8029658:	e7aa      	b.n	80295b0 <arm_cfft_f32+0x48>
 802965a:	bf00      	nop

0802965c <arm_cmplx_mag_f32>:
 802965c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029660:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8029664:	b084      	sub	sp, #16
 8029666:	d07f      	beq.n	8029768 <arm_cmplx_mag_f32+0x10c>
 8029668:	2700      	movs	r7, #0
 802966a:	f100 0420 	add.w	r4, r0, #32
 802966e:	f101 0510 	add.w	r5, r1, #16
 8029672:	4646      	mov	r6, r8
 8029674:	e05a      	b.n	802972c <arm_cmplx_mag_f32+0xd0>
 8029676:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802967a:	eeb4 0a40 	vcmp.f32	s0, s0
 802967e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029682:	f040 80a4 	bne.w	80297ce <arm_cmplx_mag_f32+0x172>
 8029686:	ed05 0a04 	vstr	s0, [r5, #-16]
 802968a:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802968e:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8029692:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029696:	ee20 0a00 	vmul.f32	s0, s0, s0
 802969a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802969e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80296a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296a6:	f2c0 808f 	blt.w	80297c8 <arm_cmplx_mag_f32+0x16c>
 80296aa:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80296ae:	eeb4 0a40 	vcmp.f32	s0, s0
 80296b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296b6:	f040 80af 	bne.w	8029818 <arm_cmplx_mag_f32+0x1bc>
 80296ba:	ed05 0a03 	vstr	s0, [r5, #-12]
 80296be:	ed54 7a04 	vldr	s15, [r4, #-16]
 80296c2:	ed14 0a03 	vldr	s0, [r4, #-12]
 80296c6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80296ca:	ee20 0a00 	vmul.f32	s0, s0, s0
 80296ce:	ee77 7a80 	vadd.f32	s15, s15, s0
 80296d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80296d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296da:	db72      	blt.n	80297c2 <arm_cmplx_mag_f32+0x166>
 80296dc:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80296e0:	eeb4 0a40 	vcmp.f32	s0, s0
 80296e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296e8:	f040 808c 	bne.w	8029804 <arm_cmplx_mag_f32+0x1a8>
 80296ec:	ed05 0a02 	vstr	s0, [r5, #-8]
 80296f0:	ed54 7a02 	vldr	s15, [r4, #-8]
 80296f4:	ed14 0a01 	vldr	s0, [r4, #-4]
 80296f8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80296fc:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029700:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029704:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802970c:	db20      	blt.n	8029750 <arm_cmplx_mag_f32+0xf4>
 802970e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029712:	eeb4 0a40 	vcmp.f32	s0, s0
 8029716:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802971a:	d169      	bne.n	80297f0 <arm_cmplx_mag_f32+0x194>
 802971c:	3e01      	subs	r6, #1
 802971e:	ed05 0a01 	vstr	s0, [r5, #-4]
 8029722:	f104 0420 	add.w	r4, r4, #32
 8029726:	f105 0510 	add.w	r5, r5, #16
 802972a:	d019      	beq.n	8029760 <arm_cmplx_mag_f32+0x104>
 802972c:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8029730:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8029734:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029738:	ee20 0a00 	vmul.f32	s0, s0, s0
 802973c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029740:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029748:	da95      	bge.n	8029676 <arm_cmplx_mag_f32+0x1a>
 802974a:	f845 7c10 	str.w	r7, [r5, #-16]
 802974e:	e79c      	b.n	802968a <arm_cmplx_mag_f32+0x2e>
 8029750:	3e01      	subs	r6, #1
 8029752:	f845 7c04 	str.w	r7, [r5, #-4]
 8029756:	f104 0420 	add.w	r4, r4, #32
 802975a:	f105 0510 	add.w	r5, r5, #16
 802975e:	d1e5      	bne.n	802972c <arm_cmplx_mag_f32+0xd0>
 8029760:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8029764:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 8029768:	f012 0503 	ands.w	r5, r2, #3
 802976c:	d026      	beq.n	80297bc <arm_cmplx_mag_f32+0x160>
 802976e:	2600      	movs	r6, #0
 8029770:	f100 0408 	add.w	r4, r0, #8
 8029774:	e00c      	b.n	8029790 <arm_cmplx_mag_f32+0x134>
 8029776:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802977a:	eeb4 0a40 	vcmp.f32	s0, s0
 802977e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029782:	d12e      	bne.n	80297e2 <arm_cmplx_mag_f32+0x186>
 8029784:	3d01      	subs	r5, #1
 8029786:	ed01 0a01 	vstr	s0, [r1, #-4]
 802978a:	f104 0408 	add.w	r4, r4, #8
 802978e:	d015      	beq.n	80297bc <arm_cmplx_mag_f32+0x160>
 8029790:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029794:	ed14 0a01 	vldr	s0, [r4, #-4]
 8029798:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802979c:	ee20 0a00 	vmul.f32	s0, s0, s0
 80297a0:	3104      	adds	r1, #4
 80297a2:	ee77 7a80 	vadd.f32	s15, s15, s0
 80297a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80297aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297ae:	dae2      	bge.n	8029776 <arm_cmplx_mag_f32+0x11a>
 80297b0:	3d01      	subs	r5, #1
 80297b2:	f841 6c04 	str.w	r6, [r1, #-4]
 80297b6:	f104 0408 	add.w	r4, r4, #8
 80297ba:	d1e9      	bne.n	8029790 <arm_cmplx_mag_f32+0x134>
 80297bc:	b004      	add	sp, #16
 80297be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80297c2:	f845 7c08 	str.w	r7, [r5, #-8]
 80297c6:	e793      	b.n	80296f0 <arm_cmplx_mag_f32+0x94>
 80297c8:	f845 7c0c 	str.w	r7, [r5, #-12]
 80297cc:	e777      	b.n	80296be <arm_cmplx_mag_f32+0x62>
 80297ce:	eeb0 0a67 	vmov.f32	s0, s15
 80297d2:	9203      	str	r2, [sp, #12]
 80297d4:	9102      	str	r1, [sp, #8]
 80297d6:	9001      	str	r0, [sp, #4]
 80297d8:	f000 fb38 	bl	8029e4c <sqrtf>
 80297dc:	a801      	add	r0, sp, #4
 80297de:	c807      	ldmia	r0, {r0, r1, r2}
 80297e0:	e751      	b.n	8029686 <arm_cmplx_mag_f32+0x2a>
 80297e2:	eeb0 0a67 	vmov.f32	s0, s15
 80297e6:	9101      	str	r1, [sp, #4]
 80297e8:	f000 fb30 	bl	8029e4c <sqrtf>
 80297ec:	9901      	ldr	r1, [sp, #4]
 80297ee:	e7c9      	b.n	8029784 <arm_cmplx_mag_f32+0x128>
 80297f0:	eeb0 0a67 	vmov.f32	s0, s15
 80297f4:	9203      	str	r2, [sp, #12]
 80297f6:	9102      	str	r1, [sp, #8]
 80297f8:	9001      	str	r0, [sp, #4]
 80297fa:	f000 fb27 	bl	8029e4c <sqrtf>
 80297fe:	a801      	add	r0, sp, #4
 8029800:	c807      	ldmia	r0, {r0, r1, r2}
 8029802:	e78b      	b.n	802971c <arm_cmplx_mag_f32+0xc0>
 8029804:	eeb0 0a67 	vmov.f32	s0, s15
 8029808:	9203      	str	r2, [sp, #12]
 802980a:	9102      	str	r1, [sp, #8]
 802980c:	9001      	str	r0, [sp, #4]
 802980e:	f000 fb1d 	bl	8029e4c <sqrtf>
 8029812:	a801      	add	r0, sp, #4
 8029814:	c807      	ldmia	r0, {r0, r1, r2}
 8029816:	e769      	b.n	80296ec <arm_cmplx_mag_f32+0x90>
 8029818:	eeb0 0a67 	vmov.f32	s0, s15
 802981c:	9203      	str	r2, [sp, #12]
 802981e:	9102      	str	r1, [sp, #8]
 8029820:	9001      	str	r0, [sp, #4]
 8029822:	f000 fb13 	bl	8029e4c <sqrtf>
 8029826:	a801      	add	r0, sp, #4
 8029828:	c807      	ldmia	r0, {r0, r1, r2}
 802982a:	e746      	b.n	80296ba <arm_cmplx_mag_f32+0x5e>

0802982c <arm_radix8_butterfly_f32>:
 802982c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029830:	ed2d 8b10 	vpush	{d8-d15}
 8029834:	b09d      	sub	sp, #116	; 0x74
 8029836:	461c      	mov	r4, r3
 8029838:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029b5c <arm_radix8_butterfly_f32+0x330>
 802983c:	921a      	str	r2, [sp, #104]	; 0x68
 802983e:	1d03      	adds	r3, r0, #4
 8029840:	4682      	mov	sl, r0
 8029842:	4689      	mov	r9, r1
 8029844:	468b      	mov	fp, r1
 8029846:	931b      	str	r3, [sp, #108]	; 0x6c
 8029848:	9400      	str	r4, [sp, #0]
 802984a:	469e      	mov	lr, r3
 802984c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8029850:	005a      	lsls	r2, r3, #1
 8029852:	18d6      	adds	r6, r2, r3
 8029854:	18f5      	adds	r5, r6, r3
 8029856:	9203      	str	r2, [sp, #12]
 8029858:	195a      	adds	r2, r3, r5
 802985a:	18d0      	adds	r0, r2, r3
 802985c:	00df      	lsls	r7, r3, #3
 802985e:	1819      	adds	r1, r3, r0
 8029860:	463c      	mov	r4, r7
 8029862:	9701      	str	r7, [sp, #4]
 8029864:	4457      	add	r7, sl
 8029866:	930c      	str	r3, [sp, #48]	; 0x30
 8029868:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802986c:	011b      	lsls	r3, r3, #4
 802986e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8029872:	eb07 0c04 	add.w	ip, r7, r4
 8029876:	9c00      	ldr	r4, [sp, #0]
 8029878:	9302      	str	r3, [sp, #8]
 802987a:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802987e:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8029882:	3204      	adds	r2, #4
 8029884:	3104      	adds	r1, #4
 8029886:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802988a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802988e:	f04f 0800 	mov.w	r8, #0
 8029892:	eddc 7a00 	vldr	s15, [ip]
 8029896:	edd7 6a00 	vldr	s13, [r7]
 802989a:	edd6 3a00 	vldr	s7, [r6]
 802989e:	ed5e aa01 	vldr	s21, [lr, #-4]
 80298a2:	edd5 4a00 	vldr	s9, [r5]
 80298a6:	ed90 2a00 	vldr	s4, [r0]
 80298aa:	ed12 7a01 	vldr	s14, [r2, #-4]
 80298ae:	ed51 0a01 	vldr	s1, [r1, #-4]
 80298b2:	ee77 8a82 	vadd.f32	s17, s15, s4
 80298b6:	ee33 4aa0 	vadd.f32	s8, s7, s1
 80298ba:	ee76 1a87 	vadd.f32	s3, s13, s14
 80298be:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 80298c2:	ee31 6a84 	vadd.f32	s12, s3, s8
 80298c6:	ee33 5a28 	vadd.f32	s10, s6, s17
 80298ca:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80298ce:	ee75 6a06 	vadd.f32	s13, s10, s12
 80298d2:	ee35 5a46 	vsub.f32	s10, s10, s12
 80298d6:	ed4e 6a01 	vstr	s13, [lr, #-4]
 80298da:	ed85 5a00 	vstr	s10, [r5]
 80298de:	ed96 1a01 	vldr	s2, [r6, #4]
 80298e2:	edd7 5a01 	vldr	s11, [r7, #4]
 80298e6:	ed92 aa00 	vldr	s20, [r2]
 80298ea:	ed91 6a00 	vldr	s12, [r1]
 80298ee:	ed9e 9a00 	vldr	s18, [lr]
 80298f2:	ed95 5a01 	vldr	s10, [r5, #4]
 80298f6:	eddc 6a01 	vldr	s13, [ip, #4]
 80298fa:	edd0 9a01 	vldr	s19, [r0, #4]
 80298fe:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8029902:	ee71 2a46 	vsub.f32	s5, s2, s12
 8029906:	ee75 3aca 	vsub.f32	s7, s11, s20
 802990a:	ee37 0a60 	vsub.f32	s0, s14, s1
 802990e:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8029912:	ee37 7a20 	vadd.f32	s14, s14, s1
 8029916:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802991a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802991e:	ee79 3a05 	vadd.f32	s7, s18, s10
 8029922:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8029926:	ee39 5a45 	vsub.f32	s10, s18, s10
 802992a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802992e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8029932:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8029936:	ee31 6a06 	vadd.f32	s12, s2, s12
 802993a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802993e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8029942:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8029946:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802994a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802994e:	ee36 0a88 	vadd.f32	s0, s13, s16
 8029952:	ee75 8a86 	vadd.f32	s17, s11, s12
 8029956:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802995a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802995e:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029962:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8029966:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802996a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802996e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029972:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8029976:	ee75 4a22 	vadd.f32	s9, s10, s5
 802997a:	ee32 5a27 	vadd.f32	s10, s4, s15
 802997e:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029982:	ee33 8a06 	vadd.f32	s16, s6, s12
 8029986:	ee75 2a87 	vadd.f32	s5, s11, s14
 802998a:	ee31 9a28 	vadd.f32	s18, s2, s17
 802998e:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029992:	ee74 0a61 	vsub.f32	s1, s8, s3
 8029996:	ee33 2a80 	vadd.f32	s4, s7, s0
 802999a:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802999e:	ee34 3ac5 	vsub.f32	s6, s9, s10
 80299a2:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80299a6:	ee31 1a68 	vsub.f32	s2, s2, s17
 80299aa:	ee34 4a21 	vadd.f32	s8, s8, s3
 80299ae:	ee73 3ac0 	vsub.f32	s7, s7, s0
 80299b2:	ee74 4a85 	vadd.f32	s9, s9, s10
 80299b6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80299ba:	44d8      	add	r8, fp
 80299bc:	45c1      	cmp	r9, r8
 80299be:	ed8e 9a00 	vstr	s18, [lr]
 80299c2:	ed85 1a01 	vstr	s2, [r5, #4]
 80299c6:	449e      	add	lr, r3
 80299c8:	ed8c 8a00 	vstr	s16, [ip]
 80299cc:	441d      	add	r5, r3
 80299ce:	ed80 6a00 	vstr	s12, [r0]
 80299d2:	edcc 0a01 	vstr	s1, [ip, #4]
 80299d6:	ed80 4a01 	vstr	s8, [r0, #4]
 80299da:	449c      	add	ip, r3
 80299dc:	ed87 2a00 	vstr	s4, [r7]
 80299e0:	4418      	add	r0, r3
 80299e2:	ed41 3a01 	vstr	s7, [r1, #-4]
 80299e6:	ed42 2a01 	vstr	s5, [r2, #-4]
 80299ea:	ed86 7a00 	vstr	s14, [r6]
 80299ee:	ed87 3a01 	vstr	s6, [r7, #4]
 80299f2:	edc1 4a00 	vstr	s9, [r1]
 80299f6:	441f      	add	r7, r3
 80299f8:	edc2 5a00 	vstr	s11, [r2]
 80299fc:	4419      	add	r1, r3
 80299fe:	edc6 6a01 	vstr	s13, [r6, #4]
 8029a02:	441a      	add	r2, r3
 8029a04:	441e      	add	r6, r3
 8029a06:	f63f af44 	bhi.w	8029892 <arm_radix8_butterfly_f32+0x66>
 8029a0a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029a0c:	2907      	cmp	r1, #7
 8029a0e:	4620      	mov	r0, r4
 8029a10:	f240 81e9 	bls.w	8029de6 <arm_radix8_butterfly_f32+0x5ba>
 8029a14:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8029a18:	193e      	adds	r6, r7, r4
 8029a1a:	1935      	adds	r5, r6, r4
 8029a1c:	9c03      	ldr	r4, [sp, #12]
 8029a1e:	9000      	str	r0, [sp, #0]
 8029a20:	4622      	mov	r2, r4
 8029a22:	3201      	adds	r2, #1
 8029a24:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8029a28:	9900      	ldr	r1, [sp, #0]
 8029a2a:	1828      	adds	r0, r5, r0
 8029a2c:	eb00 0e01 	add.w	lr, r0, r1
 8029a30:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029a32:	440a      	add	r2, r1
 8029a34:	eb04 0c01 	add.w	ip, r4, r1
 8029a38:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029a3c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029a40:	9a00      	ldr	r2, [sp, #0]
 8029a42:	940f      	str	r4, [sp, #60]	; 0x3c
 8029a44:	00ed      	lsls	r5, r5, #3
 8029a46:	9511      	str	r5, [sp, #68]	; 0x44
 8029a48:	00d5      	lsls	r5, r2, #3
 8029a4a:	950d      	str	r5, [sp, #52]	; 0x34
 8029a4c:	9d01      	ldr	r5, [sp, #4]
 8029a4e:	3508      	adds	r5, #8
 8029a50:	9516      	str	r5, [sp, #88]	; 0x58
 8029a52:	9d02      	ldr	r5, [sp, #8]
 8029a54:	3508      	adds	r5, #8
 8029a56:	0114      	lsls	r4, r2, #4
 8029a58:	9517      	str	r5, [sp, #92]	; 0x5c
 8029a5a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029a5c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029a5e:	940e      	str	r4, [sp, #56]	; 0x38
 8029a60:	00c0      	lsls	r0, r0, #3
 8029a62:	9010      	str	r0, [sp, #64]	; 0x40
 8029a64:	18aa      	adds	r2, r5, r2
 8029a66:	9207      	str	r2, [sp, #28]
 8029a68:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029a6a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029a6c:	18aa      	adds	r2, r5, r2
 8029a6e:	9208      	str	r2, [sp, #32]
 8029a70:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029a72:	18aa      	adds	r2, r5, r2
 8029a74:	9209      	str	r2, [sp, #36]	; 0x24
 8029a76:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8029a7a:	f10e 0204 	add.w	r2, lr, #4
 8029a7e:	920a      	str	r2, [sp, #40]	; 0x28
 8029a80:	00c9      	lsls	r1, r1, #3
 8029a82:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029a84:	310c      	adds	r1, #12
 8029a86:	00f6      	lsls	r6, r6, #3
 8029a88:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029a8c:	9114      	str	r1, [sp, #80]	; 0x50
 8029a8e:	18a9      	adds	r1, r5, r2
 8029a90:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029a92:	9612      	str	r6, [sp, #72]	; 0x48
 8029a94:	00ff      	lsls	r7, r7, #3
 8029a96:	19ae      	adds	r6, r5, r6
 8029a98:	3008      	adds	r0, #8
 8029a9a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029a9e:	9606      	str	r6, [sp, #24]
 8029aa0:	9019      	str	r0, [sp, #100]	; 0x64
 8029aa2:	18aa      	adds	r2, r5, r2
 8029aa4:	0164      	lsls	r4, r4, #5
 8029aa6:	19ee      	adds	r6, r5, r7
 8029aa8:	f10c 000c 	add.w	r0, ip, #12
 8029aac:	9713      	str	r7, [sp, #76]	; 0x4c
 8029aae:	9604      	str	r6, [sp, #16]
 8029ab0:	9015      	str	r0, [sp, #84]	; 0x54
 8029ab2:	9103      	str	r1, [sp, #12]
 8029ab4:	9205      	str	r2, [sp, #20]
 8029ab6:	f104 0208 	add.w	r2, r4, #8
 8029aba:	9218      	str	r2, [sp, #96]	; 0x60
 8029abc:	f04f 0801 	mov.w	r8, #1
 8029ac0:	2200      	movs	r2, #0
 8029ac2:	f102 0108 	add.w	r1, r2, #8
 8029ac6:	460f      	mov	r7, r1
 8029ac8:	910b      	str	r1, [sp, #44]	; 0x2c
 8029aca:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029acc:	188e      	adds	r6, r1, r2
 8029ace:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029ad0:	188d      	adds	r5, r1, r2
 8029ad2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029ad4:	188c      	adds	r4, r1, r2
 8029ad6:	9919      	ldr	r1, [sp, #100]	; 0x64
 8029ad8:	1888      	adds	r0, r1, r2
 8029ada:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029adc:	eb01 0c02 	add.w	ip, r1, r2
 8029ae0:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029ae2:	440a      	add	r2, r1
 8029ae4:	9903      	ldr	r1, [sp, #12]
 8029ae6:	edd1 fa00 	vldr	s31, [r1]
 8029aea:	9905      	ldr	r1, [sp, #20]
 8029aec:	ed91 fa00 	vldr	s30, [r1]
 8029af0:	9904      	ldr	r1, [sp, #16]
 8029af2:	edd1 ea00 	vldr	s29, [r1]
 8029af6:	9906      	ldr	r1, [sp, #24]
 8029af8:	ed91 ea00 	vldr	s28, [r1]
 8029afc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029afe:	edd1 da00 	vldr	s27, [r1]
 8029b02:	9908      	ldr	r1, [sp, #32]
 8029b04:	ed91 da00 	vldr	s26, [r1]
 8029b08:	9907      	ldr	r1, [sp, #28]
 8029b0a:	edd1 ca00 	vldr	s25, [r1]
 8029b0e:	9903      	ldr	r1, [sp, #12]
 8029b10:	ed91 ca01 	vldr	s24, [r1, #4]
 8029b14:	9905      	ldr	r1, [sp, #20]
 8029b16:	edd1 ba01 	vldr	s23, [r1, #4]
 8029b1a:	9904      	ldr	r1, [sp, #16]
 8029b1c:	edd1 aa01 	vldr	s21, [r1, #4]
 8029b20:	9906      	ldr	r1, [sp, #24]
 8029b22:	ed91 aa01 	vldr	s20, [r1, #4]
 8029b26:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029b28:	edd1 7a01 	vldr	s15, [r1, #4]
 8029b2c:	9908      	ldr	r1, [sp, #32]
 8029b2e:	edcd 7a00 	vstr	s15, [sp]
 8029b32:	edd1 7a01 	vldr	s15, [r1, #4]
 8029b36:	9907      	ldr	r1, [sp, #28]
 8029b38:	edcd 7a01 	vstr	s15, [sp, #4]
 8029b3c:	edd1 7a01 	vldr	s15, [r1, #4]
 8029b40:	eb0a 0e07 	add.w	lr, sl, r7
 8029b44:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029b46:	edcd 7a02 	vstr	s15, [sp, #8]
 8029b4a:	eb0c 010a 	add.w	r1, ip, sl
 8029b4e:	4456      	add	r6, sl
 8029b50:	4455      	add	r5, sl
 8029b52:	4454      	add	r4, sl
 8029b54:	4450      	add	r0, sl
 8029b56:	4452      	add	r2, sl
 8029b58:	46c4      	mov	ip, r8
 8029b5a:	e001      	b.n	8029b60 <arm_radix8_butterfly_f32+0x334>
 8029b5c:	3f3504f3 	.word	0x3f3504f3
 8029b60:	ed96 5a00 	vldr	s10, [r6]
 8029b64:	ed52 9a01 	vldr	s19, [r2, #-4]
 8029b68:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029b6c:	edd0 7a00 	vldr	s15, [r0]
 8029b70:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029b74:	edde 3a00 	vldr	s7, [lr]
 8029b78:	ed94 3a00 	vldr	s6, [r4]
 8029b7c:	ed95 2a00 	vldr	s4, [r5]
 8029b80:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029b84:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029b88:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029b8c:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029b90:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029b94:	ee78 1a04 	vadd.f32	s3, s16, s8
 8029b98:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029b9c:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029ba0:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029ba4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029ba8:	ed8e 6a00 	vstr	s12, [lr]
 8029bac:	edd0 8a01 	vldr	s17, [r0, #4]
 8029bb0:	ed95 9a01 	vldr	s18, [r5, #4]
 8029bb4:	edd1 2a00 	vldr	s5, [r1]
 8029bb8:	ed97 7a00 	vldr	s14, [r7]
 8029bbc:	edd4 0a01 	vldr	s1, [r4, #4]
 8029bc0:	ed96 6a01 	vldr	s12, [r6, #4]
 8029bc4:	edd2 5a00 	vldr	s11, [r2]
 8029bc8:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029bcc:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029bd0:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029bd4:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8029bd8:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029bdc:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029be0:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029be4:	ee79 2a22 	vadd.f32	s5, s18, s5
 8029be8:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029bec:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029bf0:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029bf4:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029bf8:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029bfc:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029c00:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029c04:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029c08:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029c0c:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029c10:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029c14:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029c18:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029c1c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029c20:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029c24:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029c28:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029c2c:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029c30:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029c34:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029c38:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029c3c:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029c40:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029c44:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029c48:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029c4c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029c50:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029c54:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029c58:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029c5c:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029c60:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029c64:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029c68:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029c6c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029c70:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029c74:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029c78:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029c7c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029c80:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029c84:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029c88:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029c8c:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029c90:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029c94:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029c98:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029c9c:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029ca0:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029ca4:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029ca8:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029cac:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029cb0:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029cb4:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029cb8:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029cbc:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029cc0:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029cc4:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029cc8:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029ccc:	ed86 3a00 	vstr	s6, [r6]
 8029cd0:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029cd4:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029cd8:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029cdc:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029ce0:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029ce4:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029ce8:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029cec:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029cf0:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029cf4:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029cf8:	ed9d 4a00 	vldr	s8, [sp]
 8029cfc:	edc6 6a01 	vstr	s13, [r6, #4]
 8029d00:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029d04:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029d08:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029d0c:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029d10:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029d14:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029d18:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029d1c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029d20:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029d24:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8029d28:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029d2c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029d30:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029d34:	ee30 0a68 	vsub.f32	s0, s0, s17
 8029d38:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029d3c:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029d40:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029d44:	44dc      	add	ip, fp
 8029d46:	45e1      	cmp	r9, ip
 8029d48:	ed84 9a00 	vstr	s18, [r4]
 8029d4c:	edc4 3a01 	vstr	s7, [r4, #4]
 8029d50:	449e      	add	lr, r3
 8029d52:	ed02 7a01 	vstr	s14, [r2, #-4]
 8029d56:	edc2 2a00 	vstr	s5, [r2]
 8029d5a:	441e      	add	r6, r3
 8029d5c:	ed85 2a00 	vstr	s4, [r5]
 8029d60:	ed85 8a01 	vstr	s16, [r5, #4]
 8029d64:	441c      	add	r4, r3
 8029d66:	ed47 1a01 	vstr	s3, [r7, #-4]
 8029d6a:	ed87 0a00 	vstr	s0, [r7]
 8029d6e:	441a      	add	r2, r3
 8029d70:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029d74:	edc1 9a00 	vstr	s19, [r1]
 8029d78:	441d      	add	r5, r3
 8029d7a:	edc0 0a00 	vstr	s1, [r0]
 8029d7e:	441f      	add	r7, r3
 8029d80:	ed80 6a01 	vstr	s12, [r0, #4]
 8029d84:	4419      	add	r1, r3
 8029d86:	4418      	add	r0, r3
 8029d88:	f63f aeea 	bhi.w	8029b60 <arm_radix8_butterfly_f32+0x334>
 8029d8c:	9a03      	ldr	r2, [sp, #12]
 8029d8e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029d90:	440a      	add	r2, r1
 8029d92:	9203      	str	r2, [sp, #12]
 8029d94:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029d96:	9a05      	ldr	r2, [sp, #20]
 8029d98:	440a      	add	r2, r1
 8029d9a:	9205      	str	r2, [sp, #20]
 8029d9c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029d9e:	9a04      	ldr	r2, [sp, #16]
 8029da0:	440a      	add	r2, r1
 8029da2:	9204      	str	r2, [sp, #16]
 8029da4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029da6:	9a06      	ldr	r2, [sp, #24]
 8029da8:	440a      	add	r2, r1
 8029daa:	9206      	str	r2, [sp, #24]
 8029dac:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029dae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029db0:	440a      	add	r2, r1
 8029db2:	9209      	str	r2, [sp, #36]	; 0x24
 8029db4:	9910      	ldr	r1, [sp, #64]	; 0x40
 8029db6:	9a08      	ldr	r2, [sp, #32]
 8029db8:	440a      	add	r2, r1
 8029dba:	9208      	str	r2, [sp, #32]
 8029dbc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029dbe:	9a07      	ldr	r2, [sp, #28]
 8029dc0:	440a      	add	r2, r1
 8029dc2:	9207      	str	r2, [sp, #28]
 8029dc4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029dc6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029dc8:	f108 0801 	add.w	r8, r8, #1
 8029dcc:	3208      	adds	r2, #8
 8029dce:	4588      	cmp	r8, r1
 8029dd0:	920a      	str	r2, [sp, #40]	; 0x28
 8029dd2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029dd4:	f47f ae75 	bne.w	8029ac2 <arm_radix8_butterfly_f32+0x296>
 8029dd8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029ddc:	9300      	str	r3, [sp, #0]
 8029dde:	46c3      	mov	fp, r8
 8029de0:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029de4:	e532      	b.n	802984c <arm_radix8_butterfly_f32+0x20>
 8029de6:	b01d      	add	sp, #116	; 0x74
 8029de8:	ecbd 8b10 	vpop	{d8-d15}
 8029dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029df0 <__aeabi_atexit>:
 8029df0:	460b      	mov	r3, r1
 8029df2:	4601      	mov	r1, r0
 8029df4:	4618      	mov	r0, r3
 8029df6:	f000 bef3 	b.w	802abe0 <__cxa_atexit>

08029dfa <_ZdlPvj>:
 8029dfa:	f000 b812 	b.w	8029e22 <_ZdlPv>

08029dfe <__cxa_guard_acquire>:
 8029dfe:	6803      	ldr	r3, [r0, #0]
 8029e00:	07db      	lsls	r3, r3, #31
 8029e02:	d406      	bmi.n	8029e12 <__cxa_guard_acquire+0x14>
 8029e04:	7843      	ldrb	r3, [r0, #1]
 8029e06:	b103      	cbz	r3, 8029e0a <__cxa_guard_acquire+0xc>
 8029e08:	deff      	udf	#255	; 0xff
 8029e0a:	2301      	movs	r3, #1
 8029e0c:	7043      	strb	r3, [r0, #1]
 8029e0e:	4618      	mov	r0, r3
 8029e10:	4770      	bx	lr
 8029e12:	2000      	movs	r0, #0
 8029e14:	4770      	bx	lr

08029e16 <__cxa_guard_release>:
 8029e16:	2301      	movs	r3, #1
 8029e18:	6003      	str	r3, [r0, #0]
 8029e1a:	4770      	bx	lr

08029e1c <__cxa_pure_virtual>:
 8029e1c:	b508      	push	{r3, lr}
 8029e1e:	f000 f80f 	bl	8029e40 <_ZSt9terminatev>

08029e22 <_ZdlPv>:
 8029e22:	f000 be29 	b.w	802aa78 <free>

08029e26 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029e26:	b508      	push	{r3, lr}
 8029e28:	4780      	blx	r0
 8029e2a:	f000 fdf1 	bl	802aa10 <abort>
	...

08029e30 <_ZSt13get_terminatev>:
 8029e30:	4b02      	ldr	r3, [pc, #8]	; (8029e3c <_ZSt13get_terminatev+0xc>)
 8029e32:	6818      	ldr	r0, [r3, #0]
 8029e34:	f3bf 8f5b 	dmb	ish
 8029e38:	4770      	bx	lr
 8029e3a:	bf00      	nop
 8029e3c:	20000120 	.word	0x20000120

08029e40 <_ZSt9terminatev>:
 8029e40:	b508      	push	{r3, lr}
 8029e42:	f7ff fff5 	bl	8029e30 <_ZSt13get_terminatev>
 8029e46:	f7ff ffee 	bl	8029e26 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029e4c <sqrtf>:
 8029e4c:	b508      	push	{r3, lr}
 8029e4e:	ed2d 8b02 	vpush	{d8}
 8029e52:	eeb0 8a40 	vmov.f32	s16, s0
 8029e56:	f000 f8a1 	bl	8029f9c <__ieee754_sqrtf>
 8029e5a:	eeb4 8a48 	vcmp.f32	s16, s16
 8029e5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e62:	d60c      	bvs.n	8029e7e <sqrtf+0x32>
 8029e64:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029e84 <sqrtf+0x38>
 8029e68:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029e6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e70:	d505      	bpl.n	8029e7e <sqrtf+0x32>
 8029e72:	f001 f8d3 	bl	802b01c <__errno>
 8029e76:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029e7a:	2321      	movs	r3, #33	; 0x21
 8029e7c:	6003      	str	r3, [r0, #0]
 8029e7e:	ecbd 8b02 	vpop	{d8}
 8029e82:	bd08      	pop	{r3, pc}
 8029e84:	00000000 	.word	0x00000000

08029e88 <cosf>:
 8029e88:	ee10 3a10 	vmov	r3, s0
 8029e8c:	b507      	push	{r0, r1, r2, lr}
 8029e8e:	4a1e      	ldr	r2, [pc, #120]	; (8029f08 <cosf+0x80>)
 8029e90:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029e94:	4293      	cmp	r3, r2
 8029e96:	dc06      	bgt.n	8029ea6 <cosf+0x1e>
 8029e98:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029f0c <cosf+0x84>
 8029e9c:	b003      	add	sp, #12
 8029e9e:	f85d eb04 	ldr.w	lr, [sp], #4
 8029ea2:	f000 b903 	b.w	802a0ac <__kernel_cosf>
 8029ea6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029eaa:	db04      	blt.n	8029eb6 <cosf+0x2e>
 8029eac:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029eb0:	b003      	add	sp, #12
 8029eb2:	f85d fb04 	ldr.w	pc, [sp], #4
 8029eb6:	4668      	mov	r0, sp
 8029eb8:	f000 f99e 	bl	802a1f8 <__ieee754_rem_pio2f>
 8029ebc:	f000 0003 	and.w	r0, r0, #3
 8029ec0:	2801      	cmp	r0, #1
 8029ec2:	d009      	beq.n	8029ed8 <cosf+0x50>
 8029ec4:	2802      	cmp	r0, #2
 8029ec6:	d010      	beq.n	8029eea <cosf+0x62>
 8029ec8:	b9b0      	cbnz	r0, 8029ef8 <cosf+0x70>
 8029eca:	eddd 0a01 	vldr	s1, [sp, #4]
 8029ece:	ed9d 0a00 	vldr	s0, [sp]
 8029ed2:	f000 f8eb 	bl	802a0ac <__kernel_cosf>
 8029ed6:	e7eb      	b.n	8029eb0 <cosf+0x28>
 8029ed8:	eddd 0a01 	vldr	s1, [sp, #4]
 8029edc:	ed9d 0a00 	vldr	s0, [sp]
 8029ee0:	f000 f942 	bl	802a168 <__kernel_sinf>
 8029ee4:	eeb1 0a40 	vneg.f32	s0, s0
 8029ee8:	e7e2      	b.n	8029eb0 <cosf+0x28>
 8029eea:	eddd 0a01 	vldr	s1, [sp, #4]
 8029eee:	ed9d 0a00 	vldr	s0, [sp]
 8029ef2:	f000 f8db 	bl	802a0ac <__kernel_cosf>
 8029ef6:	e7f5      	b.n	8029ee4 <cosf+0x5c>
 8029ef8:	eddd 0a01 	vldr	s1, [sp, #4]
 8029efc:	ed9d 0a00 	vldr	s0, [sp]
 8029f00:	2001      	movs	r0, #1
 8029f02:	f000 f931 	bl	802a168 <__kernel_sinf>
 8029f06:	e7d3      	b.n	8029eb0 <cosf+0x28>
 8029f08:	3f490fd8 	.word	0x3f490fd8
 8029f0c:	00000000 	.word	0x00000000

08029f10 <sinf>:
 8029f10:	ee10 3a10 	vmov	r3, s0
 8029f14:	b507      	push	{r0, r1, r2, lr}
 8029f16:	4a1f      	ldr	r2, [pc, #124]	; (8029f94 <sinf+0x84>)
 8029f18:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029f1c:	4293      	cmp	r3, r2
 8029f1e:	dc07      	bgt.n	8029f30 <sinf+0x20>
 8029f20:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8029f98 <sinf+0x88>
 8029f24:	2000      	movs	r0, #0
 8029f26:	b003      	add	sp, #12
 8029f28:	f85d eb04 	ldr.w	lr, [sp], #4
 8029f2c:	f000 b91c 	b.w	802a168 <__kernel_sinf>
 8029f30:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029f34:	db04      	blt.n	8029f40 <sinf+0x30>
 8029f36:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029f3a:	b003      	add	sp, #12
 8029f3c:	f85d fb04 	ldr.w	pc, [sp], #4
 8029f40:	4668      	mov	r0, sp
 8029f42:	f000 f959 	bl	802a1f8 <__ieee754_rem_pio2f>
 8029f46:	f000 0003 	and.w	r0, r0, #3
 8029f4a:	2801      	cmp	r0, #1
 8029f4c:	d00a      	beq.n	8029f64 <sinf+0x54>
 8029f4e:	2802      	cmp	r0, #2
 8029f50:	d00f      	beq.n	8029f72 <sinf+0x62>
 8029f52:	b9c0      	cbnz	r0, 8029f86 <sinf+0x76>
 8029f54:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f58:	ed9d 0a00 	vldr	s0, [sp]
 8029f5c:	2001      	movs	r0, #1
 8029f5e:	f000 f903 	bl	802a168 <__kernel_sinf>
 8029f62:	e7ea      	b.n	8029f3a <sinf+0x2a>
 8029f64:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f68:	ed9d 0a00 	vldr	s0, [sp]
 8029f6c:	f000 f89e 	bl	802a0ac <__kernel_cosf>
 8029f70:	e7e3      	b.n	8029f3a <sinf+0x2a>
 8029f72:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f76:	ed9d 0a00 	vldr	s0, [sp]
 8029f7a:	2001      	movs	r0, #1
 8029f7c:	f000 f8f4 	bl	802a168 <__kernel_sinf>
 8029f80:	eeb1 0a40 	vneg.f32	s0, s0
 8029f84:	e7d9      	b.n	8029f3a <sinf+0x2a>
 8029f86:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f8a:	ed9d 0a00 	vldr	s0, [sp]
 8029f8e:	f000 f88d 	bl	802a0ac <__kernel_cosf>
 8029f92:	e7f5      	b.n	8029f80 <sinf+0x70>
 8029f94:	3f490fd8 	.word	0x3f490fd8
 8029f98:	00000000 	.word	0x00000000

08029f9c <__ieee754_sqrtf>:
 8029f9c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8029fa0:	4770      	bx	lr
	...

08029fa4 <ceilf>:
 8029fa4:	ee10 3a10 	vmov	r3, s0
 8029fa8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029fac:	3a7f      	subs	r2, #127	; 0x7f
 8029fae:	2a16      	cmp	r2, #22
 8029fb0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8029fb4:	dc2a      	bgt.n	802a00c <ceilf+0x68>
 8029fb6:	2a00      	cmp	r2, #0
 8029fb8:	da11      	bge.n	8029fde <ceilf+0x3a>
 8029fba:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a020 <ceilf+0x7c>
 8029fbe:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029fc2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029fc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029fca:	dd05      	ble.n	8029fd8 <ceilf+0x34>
 8029fcc:	2b00      	cmp	r3, #0
 8029fce:	db23      	blt.n	802a018 <ceilf+0x74>
 8029fd0:	2900      	cmp	r1, #0
 8029fd2:	bf18      	it	ne
 8029fd4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8029fd8:	ee00 3a10 	vmov	s0, r3
 8029fdc:	4770      	bx	lr
 8029fde:	4911      	ldr	r1, [pc, #68]	; (802a024 <ceilf+0x80>)
 8029fe0:	4111      	asrs	r1, r2
 8029fe2:	420b      	tst	r3, r1
 8029fe4:	d0fa      	beq.n	8029fdc <ceilf+0x38>
 8029fe6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a020 <ceilf+0x7c>
 8029fea:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029fee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029ff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029ff6:	ddef      	ble.n	8029fd8 <ceilf+0x34>
 8029ff8:	2b00      	cmp	r3, #0
 8029ffa:	bfc2      	ittt	gt
 8029ffc:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a000:	fa40 f202 	asrgt.w	r2, r0, r2
 802a004:	189b      	addgt	r3, r3, r2
 802a006:	ea23 0301 	bic.w	r3, r3, r1
 802a00a:	e7e5      	b.n	8029fd8 <ceilf+0x34>
 802a00c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a010:	d3e4      	bcc.n	8029fdc <ceilf+0x38>
 802a012:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a016:	4770      	bx	lr
 802a018:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a01c:	e7dc      	b.n	8029fd8 <ceilf+0x34>
 802a01e:	bf00      	nop
 802a020:	7149f2ca 	.word	0x7149f2ca
 802a024:	007fffff 	.word	0x007fffff

0802a028 <floorf>:
 802a028:	ee10 3a10 	vmov	r3, s0
 802a02c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a030:	3a7f      	subs	r2, #127	; 0x7f
 802a032:	2a16      	cmp	r2, #22
 802a034:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a038:	dc2a      	bgt.n	802a090 <floorf+0x68>
 802a03a:	2a00      	cmp	r2, #0
 802a03c:	da11      	bge.n	802a062 <floorf+0x3a>
 802a03e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a0a0 <floorf+0x78>
 802a042:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a046:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a04a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a04e:	dd05      	ble.n	802a05c <floorf+0x34>
 802a050:	2b00      	cmp	r3, #0
 802a052:	da23      	bge.n	802a09c <floorf+0x74>
 802a054:	4a13      	ldr	r2, [pc, #76]	; (802a0a4 <floorf+0x7c>)
 802a056:	2900      	cmp	r1, #0
 802a058:	bf18      	it	ne
 802a05a:	4613      	movne	r3, r2
 802a05c:	ee00 3a10 	vmov	s0, r3
 802a060:	4770      	bx	lr
 802a062:	4911      	ldr	r1, [pc, #68]	; (802a0a8 <floorf+0x80>)
 802a064:	4111      	asrs	r1, r2
 802a066:	420b      	tst	r3, r1
 802a068:	d0fa      	beq.n	802a060 <floorf+0x38>
 802a06a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a0a0 <floorf+0x78>
 802a06e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a072:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a07a:	ddef      	ble.n	802a05c <floorf+0x34>
 802a07c:	2b00      	cmp	r3, #0
 802a07e:	bfbe      	ittt	lt
 802a080:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a084:	fa40 f202 	asrlt.w	r2, r0, r2
 802a088:	189b      	addlt	r3, r3, r2
 802a08a:	ea23 0301 	bic.w	r3, r3, r1
 802a08e:	e7e5      	b.n	802a05c <floorf+0x34>
 802a090:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a094:	d3e4      	bcc.n	802a060 <floorf+0x38>
 802a096:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a09a:	4770      	bx	lr
 802a09c:	2300      	movs	r3, #0
 802a09e:	e7dd      	b.n	802a05c <floorf+0x34>
 802a0a0:	7149f2ca 	.word	0x7149f2ca
 802a0a4:	bf800000 	.word	0xbf800000
 802a0a8:	007fffff 	.word	0x007fffff

0802a0ac <__kernel_cosf>:
 802a0ac:	ee10 3a10 	vmov	r3, s0
 802a0b0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a0b4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a0b8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a0bc:	da05      	bge.n	802a0ca <__kernel_cosf+0x1e>
 802a0be:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a0c2:	ee17 2a90 	vmov	r2, s15
 802a0c6:	2a00      	cmp	r2, #0
 802a0c8:	d03b      	beq.n	802a142 <__kernel_cosf+0x96>
 802a0ca:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a0ce:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a148 <__kernel_cosf+0x9c>
 802a0d2:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a14c <__kernel_cosf+0xa0>
 802a0d6:	4a1e      	ldr	r2, [pc, #120]	; (802a150 <__kernel_cosf+0xa4>)
 802a0d8:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a0dc:	4293      	cmp	r3, r2
 802a0de:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a154 <__kernel_cosf+0xa8>
 802a0e2:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a0e6:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a158 <__kernel_cosf+0xac>
 802a0ea:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a0ee:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a15c <__kernel_cosf+0xb0>
 802a0f2:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a0f6:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a160 <__kernel_cosf+0xb4>
 802a0fa:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a0fe:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a102:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a106:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a10a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a10e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a112:	dc04      	bgt.n	802a11e <__kernel_cosf+0x72>
 802a114:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a118:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a11c:	4770      	bx	lr
 802a11e:	4a11      	ldr	r2, [pc, #68]	; (802a164 <__kernel_cosf+0xb8>)
 802a120:	4293      	cmp	r3, r2
 802a122:	bfda      	itte	le
 802a124:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a128:	ee07 3a10 	vmovle	s14, r3
 802a12c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a130:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a134:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a138:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a13c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a140:	4770      	bx	lr
 802a142:	eeb0 0a66 	vmov.f32	s0, s13
 802a146:	4770      	bx	lr
 802a148:	ad47d74e 	.word	0xad47d74e
 802a14c:	310f74f6 	.word	0x310f74f6
 802a150:	3e999999 	.word	0x3e999999
 802a154:	b493f27c 	.word	0xb493f27c
 802a158:	37d00d01 	.word	0x37d00d01
 802a15c:	bab60b61 	.word	0xbab60b61
 802a160:	3d2aaaab 	.word	0x3d2aaaab
 802a164:	3f480000 	.word	0x3f480000

0802a168 <__kernel_sinf>:
 802a168:	ee10 3a10 	vmov	r3, s0
 802a16c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a170:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a174:	da04      	bge.n	802a180 <__kernel_sinf+0x18>
 802a176:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a17a:	ee17 3a90 	vmov	r3, s15
 802a17e:	b35b      	cbz	r3, 802a1d8 <__kernel_sinf+0x70>
 802a180:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a184:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a1dc <__kernel_sinf+0x74>
 802a188:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a1e0 <__kernel_sinf+0x78>
 802a18c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a190:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a1e4 <__kernel_sinf+0x7c>
 802a194:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a198:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a1e8 <__kernel_sinf+0x80>
 802a19c:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a1a0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a1ec <__kernel_sinf+0x84>
 802a1a4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a1a8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a1ac:	b930      	cbnz	r0, 802a1bc <__kernel_sinf+0x54>
 802a1ae:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a1f0 <__kernel_sinf+0x88>
 802a1b2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a1b6:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a1ba:	4770      	bx	lr
 802a1bc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a1c0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a1c4:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a1c8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a1cc:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a1f4 <__kernel_sinf+0x8c>
 802a1d0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a1d4:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a1d8:	4770      	bx	lr
 802a1da:	bf00      	nop
 802a1dc:	2f2ec9d3 	.word	0x2f2ec9d3
 802a1e0:	b2d72f34 	.word	0xb2d72f34
 802a1e4:	3638ef1b 	.word	0x3638ef1b
 802a1e8:	b9500d01 	.word	0xb9500d01
 802a1ec:	3c088889 	.word	0x3c088889
 802a1f0:	be2aaaab 	.word	0xbe2aaaab
 802a1f4:	3e2aaaab 	.word	0x3e2aaaab

0802a1f8 <__ieee754_rem_pio2f>:
 802a1f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a1fa:	ee10 6a10 	vmov	r6, s0
 802a1fe:	4b86      	ldr	r3, [pc, #536]	; (802a418 <__ieee754_rem_pio2f+0x220>)
 802a200:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a204:	429d      	cmp	r5, r3
 802a206:	b087      	sub	sp, #28
 802a208:	4604      	mov	r4, r0
 802a20a:	dc05      	bgt.n	802a218 <__ieee754_rem_pio2f+0x20>
 802a20c:	2300      	movs	r3, #0
 802a20e:	ed80 0a00 	vstr	s0, [r0]
 802a212:	6043      	str	r3, [r0, #4]
 802a214:	2000      	movs	r0, #0
 802a216:	e020      	b.n	802a25a <__ieee754_rem_pio2f+0x62>
 802a218:	4b80      	ldr	r3, [pc, #512]	; (802a41c <__ieee754_rem_pio2f+0x224>)
 802a21a:	429d      	cmp	r5, r3
 802a21c:	dc38      	bgt.n	802a290 <__ieee754_rem_pio2f+0x98>
 802a21e:	2e00      	cmp	r6, #0
 802a220:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a420 <__ieee754_rem_pio2f+0x228>
 802a224:	4b7f      	ldr	r3, [pc, #508]	; (802a424 <__ieee754_rem_pio2f+0x22c>)
 802a226:	f025 050f 	bic.w	r5, r5, #15
 802a22a:	dd18      	ble.n	802a25e <__ieee754_rem_pio2f+0x66>
 802a22c:	429d      	cmp	r5, r3
 802a22e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a232:	bf09      	itett	eq
 802a234:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a428 <__ieee754_rem_pio2f+0x230>
 802a238:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a42c <__ieee754_rem_pio2f+0x234>
 802a23c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a240:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a430 <__ieee754_rem_pio2f+0x238>
 802a244:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a248:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a24c:	edc0 6a00 	vstr	s13, [r0]
 802a250:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a254:	edc0 7a01 	vstr	s15, [r0, #4]
 802a258:	2001      	movs	r0, #1
 802a25a:	b007      	add	sp, #28
 802a25c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a25e:	429d      	cmp	r5, r3
 802a260:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a264:	bf09      	itett	eq
 802a266:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a428 <__ieee754_rem_pio2f+0x230>
 802a26a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a42c <__ieee754_rem_pio2f+0x234>
 802a26e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a272:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a430 <__ieee754_rem_pio2f+0x238>
 802a276:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a27a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a27e:	edc0 6a00 	vstr	s13, [r0]
 802a282:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a286:	edc0 7a01 	vstr	s15, [r0, #4]
 802a28a:	f04f 30ff 	mov.w	r0, #4294967295
 802a28e:	e7e4      	b.n	802a25a <__ieee754_rem_pio2f+0x62>
 802a290:	4b68      	ldr	r3, [pc, #416]	; (802a434 <__ieee754_rem_pio2f+0x23c>)
 802a292:	429d      	cmp	r5, r3
 802a294:	dc71      	bgt.n	802a37a <__ieee754_rem_pio2f+0x182>
 802a296:	f000 f8db 	bl	802a450 <fabsf>
 802a29a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a438 <__ieee754_rem_pio2f+0x240>
 802a29e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a2a2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a2a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a2aa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a2ae:	ee17 0a90 	vmov	r0, s15
 802a2b2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a420 <__ieee754_rem_pio2f+0x228>
 802a2b6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a2ba:	281f      	cmp	r0, #31
 802a2bc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a42c <__ieee754_rem_pio2f+0x234>
 802a2c0:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a2c4:	eeb1 6a47 	vneg.f32	s12, s14
 802a2c8:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a2cc:	ee16 2a90 	vmov	r2, s13
 802a2d0:	dc1c      	bgt.n	802a30c <__ieee754_rem_pio2f+0x114>
 802a2d2:	495a      	ldr	r1, [pc, #360]	; (802a43c <__ieee754_rem_pio2f+0x244>)
 802a2d4:	1e47      	subs	r7, r0, #1
 802a2d6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a2da:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a2de:	428b      	cmp	r3, r1
 802a2e0:	d014      	beq.n	802a30c <__ieee754_rem_pio2f+0x114>
 802a2e2:	6022      	str	r2, [r4, #0]
 802a2e4:	ed94 7a00 	vldr	s14, [r4]
 802a2e8:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a2ec:	2e00      	cmp	r6, #0
 802a2ee:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a2f2:	ed84 0a01 	vstr	s0, [r4, #4]
 802a2f6:	dab0      	bge.n	802a25a <__ieee754_rem_pio2f+0x62>
 802a2f8:	eeb1 7a47 	vneg.f32	s14, s14
 802a2fc:	eeb1 0a40 	vneg.f32	s0, s0
 802a300:	ed84 7a00 	vstr	s14, [r4]
 802a304:	ed84 0a01 	vstr	s0, [r4, #4]
 802a308:	4240      	negs	r0, r0
 802a30a:	e7a6      	b.n	802a25a <__ieee754_rem_pio2f+0x62>
 802a30c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a310:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a314:	2908      	cmp	r1, #8
 802a316:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a31a:	dde2      	ble.n	802a2e2 <__ieee754_rem_pio2f+0xea>
 802a31c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a428 <__ieee754_rem_pio2f+0x230>
 802a320:	eef0 6a40 	vmov.f32	s13, s0
 802a324:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a328:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a32c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a330:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a430 <__ieee754_rem_pio2f+0x238>
 802a334:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a338:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a33c:	ee15 2a90 	vmov	r2, s11
 802a340:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a344:	1a5b      	subs	r3, r3, r1
 802a346:	2b19      	cmp	r3, #25
 802a348:	dc04      	bgt.n	802a354 <__ieee754_rem_pio2f+0x15c>
 802a34a:	edc4 5a00 	vstr	s11, [r4]
 802a34e:	eeb0 0a66 	vmov.f32	s0, s13
 802a352:	e7c7      	b.n	802a2e4 <__ieee754_rem_pio2f+0xec>
 802a354:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a440 <__ieee754_rem_pio2f+0x248>
 802a358:	eeb0 0a66 	vmov.f32	s0, s13
 802a35c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a360:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a364:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a444 <__ieee754_rem_pio2f+0x24c>
 802a368:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a36c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a370:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a374:	ed84 7a00 	vstr	s14, [r4]
 802a378:	e7b4      	b.n	802a2e4 <__ieee754_rem_pio2f+0xec>
 802a37a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a37e:	db06      	blt.n	802a38e <__ieee754_rem_pio2f+0x196>
 802a380:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a384:	edc0 7a01 	vstr	s15, [r0, #4]
 802a388:	edc0 7a00 	vstr	s15, [r0]
 802a38c:	e742      	b.n	802a214 <__ieee754_rem_pio2f+0x1c>
 802a38e:	15ea      	asrs	r2, r5, #23
 802a390:	3a86      	subs	r2, #134	; 0x86
 802a392:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a396:	ee07 3a90 	vmov	s15, r3
 802a39a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a39e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a448 <__ieee754_rem_pio2f+0x250>
 802a3a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a3a6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a3aa:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a3ae:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a3b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a3b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a3ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a3be:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a3c2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a3c6:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a3ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a3ce:	edcd 7a05 	vstr	s15, [sp, #20]
 802a3d2:	d11e      	bne.n	802a412 <__ieee754_rem_pio2f+0x21a>
 802a3d4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a3d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a3dc:	bf14      	ite	ne
 802a3de:	2302      	movne	r3, #2
 802a3e0:	2301      	moveq	r3, #1
 802a3e2:	491a      	ldr	r1, [pc, #104]	; (802a44c <__ieee754_rem_pio2f+0x254>)
 802a3e4:	9101      	str	r1, [sp, #4]
 802a3e6:	2102      	movs	r1, #2
 802a3e8:	9100      	str	r1, [sp, #0]
 802a3ea:	a803      	add	r0, sp, #12
 802a3ec:	4621      	mov	r1, r4
 802a3ee:	f000 f89d 	bl	802a52c <__kernel_rem_pio2f>
 802a3f2:	2e00      	cmp	r6, #0
 802a3f4:	f6bf af31 	bge.w	802a25a <__ieee754_rem_pio2f+0x62>
 802a3f8:	edd4 7a00 	vldr	s15, [r4]
 802a3fc:	eef1 7a67 	vneg.f32	s15, s15
 802a400:	edc4 7a00 	vstr	s15, [r4]
 802a404:	edd4 7a01 	vldr	s15, [r4, #4]
 802a408:	eef1 7a67 	vneg.f32	s15, s15
 802a40c:	edc4 7a01 	vstr	s15, [r4, #4]
 802a410:	e77a      	b.n	802a308 <__ieee754_rem_pio2f+0x110>
 802a412:	2303      	movs	r3, #3
 802a414:	e7e5      	b.n	802a3e2 <__ieee754_rem_pio2f+0x1ea>
 802a416:	bf00      	nop
 802a418:	3f490fd8 	.word	0x3f490fd8
 802a41c:	4016cbe3 	.word	0x4016cbe3
 802a420:	3fc90f80 	.word	0x3fc90f80
 802a424:	3fc90fd0 	.word	0x3fc90fd0
 802a428:	37354400 	.word	0x37354400
 802a42c:	37354443 	.word	0x37354443
 802a430:	2e85a308 	.word	0x2e85a308
 802a434:	43490f80 	.word	0x43490f80
 802a438:	3f22f984 	.word	0x3f22f984
 802a43c:	08042898 	.word	0x08042898
 802a440:	2e85a300 	.word	0x2e85a300
 802a444:	248d3132 	.word	0x248d3132
 802a448:	43800000 	.word	0x43800000
 802a44c:	08042918 	.word	0x08042918

0802a450 <fabsf>:
 802a450:	ee10 3a10 	vmov	r3, s0
 802a454:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a458:	ee00 3a10 	vmov	s0, r3
 802a45c:	4770      	bx	lr
	...

0802a460 <scalbnf>:
 802a460:	ee10 3a10 	vmov	r3, s0
 802a464:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a468:	d02b      	beq.n	802a4c2 <scalbnf+0x62>
 802a46a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a46e:	d302      	bcc.n	802a476 <scalbnf+0x16>
 802a470:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a474:	4770      	bx	lr
 802a476:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a47a:	d123      	bne.n	802a4c4 <scalbnf+0x64>
 802a47c:	4b24      	ldr	r3, [pc, #144]	; (802a510 <scalbnf+0xb0>)
 802a47e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a514 <scalbnf+0xb4>
 802a482:	4298      	cmp	r0, r3
 802a484:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a488:	db17      	blt.n	802a4ba <scalbnf+0x5a>
 802a48a:	ee10 3a10 	vmov	r3, s0
 802a48e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a492:	3a19      	subs	r2, #25
 802a494:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a498:	4288      	cmp	r0, r1
 802a49a:	dd15      	ble.n	802a4c8 <scalbnf+0x68>
 802a49c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a518 <scalbnf+0xb8>
 802a4a0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a51c <scalbnf+0xbc>
 802a4a4:	ee10 3a10 	vmov	r3, s0
 802a4a8:	eeb0 7a67 	vmov.f32	s14, s15
 802a4ac:	2b00      	cmp	r3, #0
 802a4ae:	bfb8      	it	lt
 802a4b0:	eef0 7a66 	vmovlt.f32	s15, s13
 802a4b4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a4b8:	4770      	bx	lr
 802a4ba:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a520 <scalbnf+0xc0>
 802a4be:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a4c2:	4770      	bx	lr
 802a4c4:	0dd2      	lsrs	r2, r2, #23
 802a4c6:	e7e5      	b.n	802a494 <scalbnf+0x34>
 802a4c8:	4410      	add	r0, r2
 802a4ca:	28fe      	cmp	r0, #254	; 0xfe
 802a4cc:	dce6      	bgt.n	802a49c <scalbnf+0x3c>
 802a4ce:	2800      	cmp	r0, #0
 802a4d0:	dd06      	ble.n	802a4e0 <scalbnf+0x80>
 802a4d2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a4d6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a4da:	ee00 3a10 	vmov	s0, r3
 802a4de:	4770      	bx	lr
 802a4e0:	f110 0f16 	cmn.w	r0, #22
 802a4e4:	da09      	bge.n	802a4fa <scalbnf+0x9a>
 802a4e6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a520 <scalbnf+0xc0>
 802a4ea:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a524 <scalbnf+0xc4>
 802a4ee:	ee10 3a10 	vmov	r3, s0
 802a4f2:	eeb0 7a67 	vmov.f32	s14, s15
 802a4f6:	2b00      	cmp	r3, #0
 802a4f8:	e7d9      	b.n	802a4ae <scalbnf+0x4e>
 802a4fa:	3019      	adds	r0, #25
 802a4fc:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a500:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a504:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a528 <scalbnf+0xc8>
 802a508:	ee07 3a90 	vmov	s15, r3
 802a50c:	e7d7      	b.n	802a4be <scalbnf+0x5e>
 802a50e:	bf00      	nop
 802a510:	ffff3cb0 	.word	0xffff3cb0
 802a514:	4c000000 	.word	0x4c000000
 802a518:	7149f2ca 	.word	0x7149f2ca
 802a51c:	f149f2ca 	.word	0xf149f2ca
 802a520:	0da24260 	.word	0x0da24260
 802a524:	8da24260 	.word	0x8da24260
 802a528:	33000000 	.word	0x33000000

0802a52c <__kernel_rem_pio2f>:
 802a52c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a530:	ed2d 8b04 	vpush	{d8-d9}
 802a534:	b0d9      	sub	sp, #356	; 0x164
 802a536:	4688      	mov	r8, r1
 802a538:	9002      	str	r0, [sp, #8]
 802a53a:	49b8      	ldr	r1, [pc, #736]	; (802a81c <__kernel_rem_pio2f+0x2f0>)
 802a53c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a53e:	9301      	str	r3, [sp, #4]
 802a540:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a544:	9901      	ldr	r1, [sp, #4]
 802a546:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a548:	f101 3bff 	add.w	fp, r1, #4294967295
 802a54c:	1d11      	adds	r1, r2, #4
 802a54e:	db25      	blt.n	802a59c <__kernel_rem_pio2f+0x70>
 802a550:	1ed0      	subs	r0, r2, #3
 802a552:	bf48      	it	mi
 802a554:	1d10      	addmi	r0, r2, #4
 802a556:	10c0      	asrs	r0, r0, #3
 802a558:	1c45      	adds	r5, r0, #1
 802a55a:	00e9      	lsls	r1, r5, #3
 802a55c:	eba0 070b 	sub.w	r7, r0, fp
 802a560:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802a82c <__kernel_rem_pio2f+0x300>
 802a564:	9103      	str	r1, [sp, #12]
 802a566:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a56a:	eb0a 0c0b 	add.w	ip, sl, fp
 802a56e:	ae1c      	add	r6, sp, #112	; 0x70
 802a570:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a574:	2400      	movs	r4, #0
 802a576:	4564      	cmp	r4, ip
 802a578:	dd12      	ble.n	802a5a0 <__kernel_rem_pio2f+0x74>
 802a57a:	9901      	ldr	r1, [sp, #4]
 802a57c:	ac1c      	add	r4, sp, #112	; 0x70
 802a57e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a582:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a586:	f04f 0c00 	mov.w	ip, #0
 802a58a:	45d4      	cmp	ip, sl
 802a58c:	dc27      	bgt.n	802a5de <__kernel_rem_pio2f+0xb2>
 802a58e:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a592:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802a82c <__kernel_rem_pio2f+0x300>
 802a596:	4627      	mov	r7, r4
 802a598:	2600      	movs	r6, #0
 802a59a:	e016      	b.n	802a5ca <__kernel_rem_pio2f+0x9e>
 802a59c:	2000      	movs	r0, #0
 802a59e:	e7db      	b.n	802a558 <__kernel_rem_pio2f+0x2c>
 802a5a0:	42e7      	cmn	r7, r4
 802a5a2:	bf5d      	ittte	pl
 802a5a4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a5a8:	ee07 1a90 	vmovpl	s15, r1
 802a5ac:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a5b0:	eef0 7a47 	vmovmi.f32	s15, s14
 802a5b4:	ece6 7a01 	vstmia	r6!, {s15}
 802a5b8:	3401      	adds	r4, #1
 802a5ba:	e7dc      	b.n	802a576 <__kernel_rem_pio2f+0x4a>
 802a5bc:	ecfe 6a01 	vldmia	lr!, {s13}
 802a5c0:	ed97 7a00 	vldr	s14, [r7]
 802a5c4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a5c8:	3601      	adds	r6, #1
 802a5ca:	455e      	cmp	r6, fp
 802a5cc:	f1a7 0704 	sub.w	r7, r7, #4
 802a5d0:	ddf4      	ble.n	802a5bc <__kernel_rem_pio2f+0x90>
 802a5d2:	ece9 7a01 	vstmia	r9!, {s15}
 802a5d6:	f10c 0c01 	add.w	ip, ip, #1
 802a5da:	3404      	adds	r4, #4
 802a5dc:	e7d5      	b.n	802a58a <__kernel_rem_pio2f+0x5e>
 802a5de:	a908      	add	r1, sp, #32
 802a5e0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a5e4:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a5e8:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802a828 <__kernel_rem_pio2f+0x2fc>
 802a5ec:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802a824 <__kernel_rem_pio2f+0x2f8>
 802a5f0:	9105      	str	r1, [sp, #20]
 802a5f2:	9304      	str	r3, [sp, #16]
 802a5f4:	4656      	mov	r6, sl
 802a5f6:	00b3      	lsls	r3, r6, #2
 802a5f8:	9306      	str	r3, [sp, #24]
 802a5fa:	ab58      	add	r3, sp, #352	; 0x160
 802a5fc:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a600:	ac08      	add	r4, sp, #32
 802a602:	ab44      	add	r3, sp, #272	; 0x110
 802a604:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a608:	46a4      	mov	ip, r4
 802a60a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a60e:	4637      	mov	r7, r6
 802a610:	2f00      	cmp	r7, #0
 802a612:	f1a0 0004 	sub.w	r0, r0, #4
 802a616:	dc4a      	bgt.n	802a6ae <__kernel_rem_pio2f+0x182>
 802a618:	4628      	mov	r0, r5
 802a61a:	9207      	str	r2, [sp, #28]
 802a61c:	f7ff ff20 	bl	802a460 <scalbnf>
 802a620:	eeb0 8a40 	vmov.f32	s16, s0
 802a624:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a628:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a62c:	f7ff fcfc 	bl	802a028 <floorf>
 802a630:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a634:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a638:	2d00      	cmp	r5, #0
 802a63a:	9a07      	ldr	r2, [sp, #28]
 802a63c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a640:	ee17 9a90 	vmov	r9, s15
 802a644:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a648:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a64c:	dd41      	ble.n	802a6d2 <__kernel_rem_pio2f+0x1a6>
 802a64e:	f106 3cff 	add.w	ip, r6, #4294967295
 802a652:	ab08      	add	r3, sp, #32
 802a654:	f1c5 0e08 	rsb	lr, r5, #8
 802a658:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a65c:	fa47 f00e 	asr.w	r0, r7, lr
 802a660:	4481      	add	r9, r0
 802a662:	fa00 f00e 	lsl.w	r0, r0, lr
 802a666:	1a3f      	subs	r7, r7, r0
 802a668:	f1c5 0007 	rsb	r0, r5, #7
 802a66c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a670:	4107      	asrs	r7, r0
 802a672:	2f00      	cmp	r7, #0
 802a674:	dd3c      	ble.n	802a6f0 <__kernel_rem_pio2f+0x1c4>
 802a676:	f04f 0e00 	mov.w	lr, #0
 802a67a:	f109 0901 	add.w	r9, r9, #1
 802a67e:	4671      	mov	r1, lr
 802a680:	4576      	cmp	r6, lr
 802a682:	dc67      	bgt.n	802a754 <__kernel_rem_pio2f+0x228>
 802a684:	2d00      	cmp	r5, #0
 802a686:	dd03      	ble.n	802a690 <__kernel_rem_pio2f+0x164>
 802a688:	2d01      	cmp	r5, #1
 802a68a:	d074      	beq.n	802a776 <__kernel_rem_pio2f+0x24a>
 802a68c:	2d02      	cmp	r5, #2
 802a68e:	d07b      	beq.n	802a788 <__kernel_rem_pio2f+0x25c>
 802a690:	2f02      	cmp	r7, #2
 802a692:	d12d      	bne.n	802a6f0 <__kernel_rem_pio2f+0x1c4>
 802a694:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a698:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a69c:	b341      	cbz	r1, 802a6f0 <__kernel_rem_pio2f+0x1c4>
 802a69e:	4628      	mov	r0, r5
 802a6a0:	9207      	str	r2, [sp, #28]
 802a6a2:	f7ff fedd 	bl	802a460 <scalbnf>
 802a6a6:	9a07      	ldr	r2, [sp, #28]
 802a6a8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a6ac:	e020      	b.n	802a6f0 <__kernel_rem_pio2f+0x1c4>
 802a6ae:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a6b2:	3f01      	subs	r7, #1
 802a6b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a6b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a6bc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a6c0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a6c4:	ecac 0a01 	vstmia	ip!, {s0}
 802a6c8:	ed90 0a00 	vldr	s0, [r0]
 802a6cc:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a6d0:	e79e      	b.n	802a610 <__kernel_rem_pio2f+0xe4>
 802a6d2:	d105      	bne.n	802a6e0 <__kernel_rem_pio2f+0x1b4>
 802a6d4:	1e70      	subs	r0, r6, #1
 802a6d6:	ab08      	add	r3, sp, #32
 802a6d8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a6dc:	11ff      	asrs	r7, r7, #7
 802a6de:	e7c8      	b.n	802a672 <__kernel_rem_pio2f+0x146>
 802a6e0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a6e4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a6e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6ec:	da30      	bge.n	802a750 <__kernel_rem_pio2f+0x224>
 802a6ee:	2700      	movs	r7, #0
 802a6f0:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a6f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6f8:	f040 809a 	bne.w	802a830 <__kernel_rem_pio2f+0x304>
 802a6fc:	1e74      	subs	r4, r6, #1
 802a6fe:	46a4      	mov	ip, r4
 802a700:	2100      	movs	r1, #0
 802a702:	45d4      	cmp	ip, sl
 802a704:	da47      	bge.n	802a796 <__kernel_rem_pio2f+0x26a>
 802a706:	2900      	cmp	r1, #0
 802a708:	d063      	beq.n	802a7d2 <__kernel_rem_pio2f+0x2a6>
 802a70a:	ab08      	add	r3, sp, #32
 802a70c:	3d08      	subs	r5, #8
 802a70e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a712:	2b00      	cmp	r3, #0
 802a714:	d07f      	beq.n	802a816 <__kernel_rem_pio2f+0x2ea>
 802a716:	4628      	mov	r0, r5
 802a718:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a71c:	f7ff fea0 	bl	802a460 <scalbnf>
 802a720:	1c63      	adds	r3, r4, #1
 802a722:	aa44      	add	r2, sp, #272	; 0x110
 802a724:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802a828 <__kernel_rem_pio2f+0x2fc>
 802a728:	0099      	lsls	r1, r3, #2
 802a72a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a72e:	4623      	mov	r3, r4
 802a730:	2b00      	cmp	r3, #0
 802a732:	f280 80ad 	bge.w	802a890 <__kernel_rem_pio2f+0x364>
 802a736:	4623      	mov	r3, r4
 802a738:	2b00      	cmp	r3, #0
 802a73a:	f2c0 80cb 	blt.w	802a8d4 <__kernel_rem_pio2f+0x3a8>
 802a73e:	aa44      	add	r2, sp, #272	; 0x110
 802a740:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a744:	4e36      	ldr	r6, [pc, #216]	; (802a820 <__kernel_rem_pio2f+0x2f4>)
 802a746:	eddf 7a39 	vldr	s15, [pc, #228]	; 802a82c <__kernel_rem_pio2f+0x300>
 802a74a:	2000      	movs	r0, #0
 802a74c:	1ae2      	subs	r2, r4, r3
 802a74e:	e0b6      	b.n	802a8be <__kernel_rem_pio2f+0x392>
 802a750:	2702      	movs	r7, #2
 802a752:	e790      	b.n	802a676 <__kernel_rem_pio2f+0x14a>
 802a754:	6820      	ldr	r0, [r4, #0]
 802a756:	b949      	cbnz	r1, 802a76c <__kernel_rem_pio2f+0x240>
 802a758:	b118      	cbz	r0, 802a762 <__kernel_rem_pio2f+0x236>
 802a75a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802a75e:	6020      	str	r0, [r4, #0]
 802a760:	2001      	movs	r0, #1
 802a762:	f10e 0e01 	add.w	lr, lr, #1
 802a766:	3404      	adds	r4, #4
 802a768:	4601      	mov	r1, r0
 802a76a:	e789      	b.n	802a680 <__kernel_rem_pio2f+0x154>
 802a76c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802a770:	6020      	str	r0, [r4, #0]
 802a772:	4608      	mov	r0, r1
 802a774:	e7f5      	b.n	802a762 <__kernel_rem_pio2f+0x236>
 802a776:	1e74      	subs	r4, r6, #1
 802a778:	ab08      	add	r3, sp, #32
 802a77a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a77e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802a782:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802a786:	e783      	b.n	802a690 <__kernel_rem_pio2f+0x164>
 802a788:	1e74      	subs	r4, r6, #1
 802a78a:	ab08      	add	r3, sp, #32
 802a78c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a790:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802a794:	e7f5      	b.n	802a782 <__kernel_rem_pio2f+0x256>
 802a796:	ab08      	add	r3, sp, #32
 802a798:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802a79c:	f10c 3cff 	add.w	ip, ip, #4294967295
 802a7a0:	4301      	orrs	r1, r0
 802a7a2:	e7ae      	b.n	802a702 <__kernel_rem_pio2f+0x1d6>
 802a7a4:	3001      	adds	r0, #1
 802a7a6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802a7aa:	2f00      	cmp	r7, #0
 802a7ac:	d0fa      	beq.n	802a7a4 <__kernel_rem_pio2f+0x278>
 802a7ae:	9b06      	ldr	r3, [sp, #24]
 802a7b0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802a7b4:	eb0d 0403 	add.w	r4, sp, r3
 802a7b8:	9b01      	ldr	r3, [sp, #4]
 802a7ba:	18f7      	adds	r7, r6, r3
 802a7bc:	ab1c      	add	r3, sp, #112	; 0x70
 802a7be:	f106 0c01 	add.w	ip, r6, #1
 802a7c2:	3c4c      	subs	r4, #76	; 0x4c
 802a7c4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802a7c8:	4430      	add	r0, r6
 802a7ca:	4560      	cmp	r0, ip
 802a7cc:	da04      	bge.n	802a7d8 <__kernel_rem_pio2f+0x2ac>
 802a7ce:	4606      	mov	r6, r0
 802a7d0:	e711      	b.n	802a5f6 <__kernel_rem_pio2f+0xca>
 802a7d2:	9c05      	ldr	r4, [sp, #20]
 802a7d4:	2001      	movs	r0, #1
 802a7d6:	e7e6      	b.n	802a7a6 <__kernel_rem_pio2f+0x27a>
 802a7d8:	9b04      	ldr	r3, [sp, #16]
 802a7da:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a7de:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802a7e2:	9306      	str	r3, [sp, #24]
 802a7e4:	ee07 3a90 	vmov	s15, r3
 802a7e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a7ec:	2600      	movs	r6, #0
 802a7ee:	ece7 7a01 	vstmia	r7!, {s15}
 802a7f2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a82c <__kernel_rem_pio2f+0x300>
 802a7f6:	46b9      	mov	r9, r7
 802a7f8:	455e      	cmp	r6, fp
 802a7fa:	dd04      	ble.n	802a806 <__kernel_rem_pio2f+0x2da>
 802a7fc:	ece4 7a01 	vstmia	r4!, {s15}
 802a800:	f10c 0c01 	add.w	ip, ip, #1
 802a804:	e7e1      	b.n	802a7ca <__kernel_rem_pio2f+0x29e>
 802a806:	ecfe 6a01 	vldmia	lr!, {s13}
 802a80a:	ed39 7a01 	vldmdb	r9!, {s14}
 802a80e:	3601      	adds	r6, #1
 802a810:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a814:	e7f0      	b.n	802a7f8 <__kernel_rem_pio2f+0x2cc>
 802a816:	3c01      	subs	r4, #1
 802a818:	e777      	b.n	802a70a <__kernel_rem_pio2f+0x1de>
 802a81a:	bf00      	nop
 802a81c:	08042c5c 	.word	0x08042c5c
 802a820:	08042c30 	.word	0x08042c30
 802a824:	43800000 	.word	0x43800000
 802a828:	3b800000 	.word	0x3b800000
 802a82c:	00000000 	.word	0x00000000
 802a830:	9b03      	ldr	r3, [sp, #12]
 802a832:	eeb0 0a48 	vmov.f32	s0, s16
 802a836:	1a98      	subs	r0, r3, r2
 802a838:	f7ff fe12 	bl	802a460 <scalbnf>
 802a83c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802a824 <__kernel_rem_pio2f+0x2f8>
 802a840:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802a844:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a848:	db19      	blt.n	802a87e <__kernel_rem_pio2f+0x352>
 802a84a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802a828 <__kernel_rem_pio2f+0x2fc>
 802a84e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802a852:	aa08      	add	r2, sp, #32
 802a854:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a858:	1c74      	adds	r4, r6, #1
 802a85a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a85e:	3508      	adds	r5, #8
 802a860:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802a864:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a868:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a86c:	ee10 3a10 	vmov	r3, s0
 802a870:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a874:	ee17 3a90 	vmov	r3, s15
 802a878:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802a87c:	e74b      	b.n	802a716 <__kernel_rem_pio2f+0x1ea>
 802a87e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a882:	aa08      	add	r2, sp, #32
 802a884:	ee10 3a10 	vmov	r3, s0
 802a888:	4634      	mov	r4, r6
 802a88a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a88e:	e742      	b.n	802a716 <__kernel_rem_pio2f+0x1ea>
 802a890:	a808      	add	r0, sp, #32
 802a892:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802a896:	9001      	str	r0, [sp, #4]
 802a898:	ee07 0a90 	vmov	s15, r0
 802a89c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a8a0:	3b01      	subs	r3, #1
 802a8a2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a8a6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802a8aa:	ed62 7a01 	vstmdb	r2!, {s15}
 802a8ae:	e73f      	b.n	802a730 <__kernel_rem_pio2f+0x204>
 802a8b0:	ecf6 6a01 	vldmia	r6!, {s13}
 802a8b4:	ecb5 7a01 	vldmia	r5!, {s14}
 802a8b8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a8bc:	3001      	adds	r0, #1
 802a8be:	4550      	cmp	r0, sl
 802a8c0:	dc01      	bgt.n	802a8c6 <__kernel_rem_pio2f+0x39a>
 802a8c2:	4290      	cmp	r0, r2
 802a8c4:	ddf4      	ble.n	802a8b0 <__kernel_rem_pio2f+0x384>
 802a8c6:	a858      	add	r0, sp, #352	; 0x160
 802a8c8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802a8cc:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802a8d0:	3b01      	subs	r3, #1
 802a8d2:	e731      	b.n	802a738 <__kernel_rem_pio2f+0x20c>
 802a8d4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a8d6:	2b02      	cmp	r3, #2
 802a8d8:	dc09      	bgt.n	802a8ee <__kernel_rem_pio2f+0x3c2>
 802a8da:	2b00      	cmp	r3, #0
 802a8dc:	dc2b      	bgt.n	802a936 <__kernel_rem_pio2f+0x40a>
 802a8de:	d044      	beq.n	802a96a <__kernel_rem_pio2f+0x43e>
 802a8e0:	f009 0007 	and.w	r0, r9, #7
 802a8e4:	b059      	add	sp, #356	; 0x164
 802a8e6:	ecbd 8b04 	vpop	{d8-d9}
 802a8ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a8ee:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a8f0:	2b03      	cmp	r3, #3
 802a8f2:	d1f5      	bne.n	802a8e0 <__kernel_rem_pio2f+0x3b4>
 802a8f4:	aa30      	add	r2, sp, #192	; 0xc0
 802a8f6:	1f0b      	subs	r3, r1, #4
 802a8f8:	4413      	add	r3, r2
 802a8fa:	461a      	mov	r2, r3
 802a8fc:	4620      	mov	r0, r4
 802a8fe:	2800      	cmp	r0, #0
 802a900:	f1a2 0204 	sub.w	r2, r2, #4
 802a904:	dc52      	bgt.n	802a9ac <__kernel_rem_pio2f+0x480>
 802a906:	4622      	mov	r2, r4
 802a908:	2a01      	cmp	r2, #1
 802a90a:	f1a3 0304 	sub.w	r3, r3, #4
 802a90e:	dc5d      	bgt.n	802a9cc <__kernel_rem_pio2f+0x4a0>
 802a910:	ab30      	add	r3, sp, #192	; 0xc0
 802a912:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802a82c <__kernel_rem_pio2f+0x300>
 802a916:	440b      	add	r3, r1
 802a918:	2c01      	cmp	r4, #1
 802a91a:	dc67      	bgt.n	802a9ec <__kernel_rem_pio2f+0x4c0>
 802a91c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802a920:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802a924:	2f00      	cmp	r7, #0
 802a926:	d167      	bne.n	802a9f8 <__kernel_rem_pio2f+0x4cc>
 802a928:	edc8 6a00 	vstr	s13, [r8]
 802a92c:	ed88 7a01 	vstr	s14, [r8, #4]
 802a930:	edc8 7a02 	vstr	s15, [r8, #8]
 802a934:	e7d4      	b.n	802a8e0 <__kernel_rem_pio2f+0x3b4>
 802a936:	ab30      	add	r3, sp, #192	; 0xc0
 802a938:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802a82c <__kernel_rem_pio2f+0x300>
 802a93c:	440b      	add	r3, r1
 802a93e:	4622      	mov	r2, r4
 802a940:	2a00      	cmp	r2, #0
 802a942:	da24      	bge.n	802a98e <__kernel_rem_pio2f+0x462>
 802a944:	b34f      	cbz	r7, 802a99a <__kernel_rem_pio2f+0x46e>
 802a946:	eef1 7a47 	vneg.f32	s15, s14
 802a94a:	edc8 7a00 	vstr	s15, [r8]
 802a94e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802a952:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a956:	aa31      	add	r2, sp, #196	; 0xc4
 802a958:	2301      	movs	r3, #1
 802a95a:	429c      	cmp	r4, r3
 802a95c:	da20      	bge.n	802a9a0 <__kernel_rem_pio2f+0x474>
 802a95e:	b10f      	cbz	r7, 802a964 <__kernel_rem_pio2f+0x438>
 802a960:	eef1 7a67 	vneg.f32	s15, s15
 802a964:	edc8 7a01 	vstr	s15, [r8, #4]
 802a968:	e7ba      	b.n	802a8e0 <__kernel_rem_pio2f+0x3b4>
 802a96a:	ab30      	add	r3, sp, #192	; 0xc0
 802a96c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802a82c <__kernel_rem_pio2f+0x300>
 802a970:	440b      	add	r3, r1
 802a972:	2c00      	cmp	r4, #0
 802a974:	da05      	bge.n	802a982 <__kernel_rem_pio2f+0x456>
 802a976:	b10f      	cbz	r7, 802a97c <__kernel_rem_pio2f+0x450>
 802a978:	eef1 7a67 	vneg.f32	s15, s15
 802a97c:	edc8 7a00 	vstr	s15, [r8]
 802a980:	e7ae      	b.n	802a8e0 <__kernel_rem_pio2f+0x3b4>
 802a982:	ed33 7a01 	vldmdb	r3!, {s14}
 802a986:	3c01      	subs	r4, #1
 802a988:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a98c:	e7f1      	b.n	802a972 <__kernel_rem_pio2f+0x446>
 802a98e:	ed73 7a01 	vldmdb	r3!, {s15}
 802a992:	3a01      	subs	r2, #1
 802a994:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a998:	e7d2      	b.n	802a940 <__kernel_rem_pio2f+0x414>
 802a99a:	eef0 7a47 	vmov.f32	s15, s14
 802a99e:	e7d4      	b.n	802a94a <__kernel_rem_pio2f+0x41e>
 802a9a0:	ecb2 7a01 	vldmia	r2!, {s14}
 802a9a4:	3301      	adds	r3, #1
 802a9a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a9aa:	e7d6      	b.n	802a95a <__kernel_rem_pio2f+0x42e>
 802a9ac:	edd2 7a00 	vldr	s15, [r2]
 802a9b0:	edd2 6a01 	vldr	s13, [r2, #4]
 802a9b4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a9b8:	3801      	subs	r0, #1
 802a9ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a9be:	ed82 7a00 	vstr	s14, [r2]
 802a9c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a9c6:	edc2 7a01 	vstr	s15, [r2, #4]
 802a9ca:	e798      	b.n	802a8fe <__kernel_rem_pio2f+0x3d2>
 802a9cc:	edd3 7a00 	vldr	s15, [r3]
 802a9d0:	edd3 6a01 	vldr	s13, [r3, #4]
 802a9d4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a9d8:	3a01      	subs	r2, #1
 802a9da:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a9de:	ed83 7a00 	vstr	s14, [r3]
 802a9e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a9e6:	edc3 7a01 	vstr	s15, [r3, #4]
 802a9ea:	e78d      	b.n	802a908 <__kernel_rem_pio2f+0x3dc>
 802a9ec:	ed33 7a01 	vldmdb	r3!, {s14}
 802a9f0:	3c01      	subs	r4, #1
 802a9f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a9f6:	e78f      	b.n	802a918 <__kernel_rem_pio2f+0x3ec>
 802a9f8:	eef1 6a66 	vneg.f32	s13, s13
 802a9fc:	eeb1 7a47 	vneg.f32	s14, s14
 802aa00:	edc8 6a00 	vstr	s13, [r8]
 802aa04:	ed88 7a01 	vstr	s14, [r8, #4]
 802aa08:	eef1 7a67 	vneg.f32	s15, s15
 802aa0c:	e790      	b.n	802a930 <__kernel_rem_pio2f+0x404>
 802aa0e:	bf00      	nop

0802aa10 <abort>:
 802aa10:	b508      	push	{r3, lr}
 802aa12:	2006      	movs	r0, #6
 802aa14:	f000 fa3a 	bl	802ae8c <raise>
 802aa18:	2001      	movs	r0, #1
 802aa1a:	f7d7 f8af 	bl	8001b7c <_exit>
	...

0802aa20 <__assert_func>:
 802aa20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802aa22:	4614      	mov	r4, r2
 802aa24:	461a      	mov	r2, r3
 802aa26:	4b09      	ldr	r3, [pc, #36]	; (802aa4c <__assert_func+0x2c>)
 802aa28:	681b      	ldr	r3, [r3, #0]
 802aa2a:	4605      	mov	r5, r0
 802aa2c:	68d8      	ldr	r0, [r3, #12]
 802aa2e:	b14c      	cbz	r4, 802aa44 <__assert_func+0x24>
 802aa30:	4b07      	ldr	r3, [pc, #28]	; (802aa50 <__assert_func+0x30>)
 802aa32:	9100      	str	r1, [sp, #0]
 802aa34:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802aa38:	4906      	ldr	r1, [pc, #24]	; (802aa54 <__assert_func+0x34>)
 802aa3a:	462b      	mov	r3, r5
 802aa3c:	f000 f982 	bl	802ad44 <fiprintf>
 802aa40:	f7ff ffe6 	bl	802aa10 <abort>
 802aa44:	4b04      	ldr	r3, [pc, #16]	; (802aa58 <__assert_func+0x38>)
 802aa46:	461c      	mov	r4, r3
 802aa48:	e7f3      	b.n	802aa32 <__assert_func+0x12>
 802aa4a:	bf00      	nop
 802aa4c:	2000017c 	.word	0x2000017c
 802aa50:	08042c68 	.word	0x08042c68
 802aa54:	08042c75 	.word	0x08042c75
 802aa58:	08042ca3 	.word	0x08042ca3

0802aa5c <atexit>:
 802aa5c:	2300      	movs	r3, #0
 802aa5e:	4601      	mov	r1, r0
 802aa60:	461a      	mov	r2, r3
 802aa62:	4618      	mov	r0, r3
 802aa64:	f000 bb16 	b.w	802b094 <__register_exitproc>

0802aa68 <malloc>:
 802aa68:	4b02      	ldr	r3, [pc, #8]	; (802aa74 <malloc+0xc>)
 802aa6a:	4601      	mov	r1, r0
 802aa6c:	6818      	ldr	r0, [r3, #0]
 802aa6e:	f000 b82b 	b.w	802aac8 <_malloc_r>
 802aa72:	bf00      	nop
 802aa74:	2000017c 	.word	0x2000017c

0802aa78 <free>:
 802aa78:	4b02      	ldr	r3, [pc, #8]	; (802aa84 <free+0xc>)
 802aa7a:	4601      	mov	r1, r0
 802aa7c:	6818      	ldr	r0, [r3, #0]
 802aa7e:	f000 bb67 	b.w	802b150 <_free_r>
 802aa82:	bf00      	nop
 802aa84:	2000017c 	.word	0x2000017c

0802aa88 <sbrk_aligned>:
 802aa88:	b570      	push	{r4, r5, r6, lr}
 802aa8a:	4e0e      	ldr	r6, [pc, #56]	; (802aac4 <sbrk_aligned+0x3c>)
 802aa8c:	460c      	mov	r4, r1
 802aa8e:	6831      	ldr	r1, [r6, #0]
 802aa90:	4605      	mov	r5, r0
 802aa92:	b911      	cbnz	r1, 802aa9a <sbrk_aligned+0x12>
 802aa94:	f000 faa0 	bl	802afd8 <_sbrk_r>
 802aa98:	6030      	str	r0, [r6, #0]
 802aa9a:	4621      	mov	r1, r4
 802aa9c:	4628      	mov	r0, r5
 802aa9e:	f000 fa9b 	bl	802afd8 <_sbrk_r>
 802aaa2:	1c43      	adds	r3, r0, #1
 802aaa4:	d00a      	beq.n	802aabc <sbrk_aligned+0x34>
 802aaa6:	1cc4      	adds	r4, r0, #3
 802aaa8:	f024 0403 	bic.w	r4, r4, #3
 802aaac:	42a0      	cmp	r0, r4
 802aaae:	d007      	beq.n	802aac0 <sbrk_aligned+0x38>
 802aab0:	1a21      	subs	r1, r4, r0
 802aab2:	4628      	mov	r0, r5
 802aab4:	f000 fa90 	bl	802afd8 <_sbrk_r>
 802aab8:	3001      	adds	r0, #1
 802aaba:	d101      	bne.n	802aac0 <sbrk_aligned+0x38>
 802aabc:	f04f 34ff 	mov.w	r4, #4294967295
 802aac0:	4620      	mov	r0, r4
 802aac2:	bd70      	pop	{r4, r5, r6, pc}
 802aac4:	20013c14 	.word	0x20013c14

0802aac8 <_malloc_r>:
 802aac8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802aacc:	1ccd      	adds	r5, r1, #3
 802aace:	f025 0503 	bic.w	r5, r5, #3
 802aad2:	3508      	adds	r5, #8
 802aad4:	2d0c      	cmp	r5, #12
 802aad6:	bf38      	it	cc
 802aad8:	250c      	movcc	r5, #12
 802aada:	2d00      	cmp	r5, #0
 802aadc:	4607      	mov	r7, r0
 802aade:	db01      	blt.n	802aae4 <_malloc_r+0x1c>
 802aae0:	42a9      	cmp	r1, r5
 802aae2:	d905      	bls.n	802aaf0 <_malloc_r+0x28>
 802aae4:	230c      	movs	r3, #12
 802aae6:	603b      	str	r3, [r7, #0]
 802aae8:	2600      	movs	r6, #0
 802aaea:	4630      	mov	r0, r6
 802aaec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802aaf0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802abc4 <_malloc_r+0xfc>
 802aaf4:	f000 f868 	bl	802abc8 <__malloc_lock>
 802aaf8:	f8d8 3000 	ldr.w	r3, [r8]
 802aafc:	461c      	mov	r4, r3
 802aafe:	bb5c      	cbnz	r4, 802ab58 <_malloc_r+0x90>
 802ab00:	4629      	mov	r1, r5
 802ab02:	4638      	mov	r0, r7
 802ab04:	f7ff ffc0 	bl	802aa88 <sbrk_aligned>
 802ab08:	1c43      	adds	r3, r0, #1
 802ab0a:	4604      	mov	r4, r0
 802ab0c:	d155      	bne.n	802abba <_malloc_r+0xf2>
 802ab0e:	f8d8 4000 	ldr.w	r4, [r8]
 802ab12:	4626      	mov	r6, r4
 802ab14:	2e00      	cmp	r6, #0
 802ab16:	d145      	bne.n	802aba4 <_malloc_r+0xdc>
 802ab18:	2c00      	cmp	r4, #0
 802ab1a:	d048      	beq.n	802abae <_malloc_r+0xe6>
 802ab1c:	6823      	ldr	r3, [r4, #0]
 802ab1e:	4631      	mov	r1, r6
 802ab20:	4638      	mov	r0, r7
 802ab22:	eb04 0903 	add.w	r9, r4, r3
 802ab26:	f000 fa57 	bl	802afd8 <_sbrk_r>
 802ab2a:	4581      	cmp	r9, r0
 802ab2c:	d13f      	bne.n	802abae <_malloc_r+0xe6>
 802ab2e:	6821      	ldr	r1, [r4, #0]
 802ab30:	1a6d      	subs	r5, r5, r1
 802ab32:	4629      	mov	r1, r5
 802ab34:	4638      	mov	r0, r7
 802ab36:	f7ff ffa7 	bl	802aa88 <sbrk_aligned>
 802ab3a:	3001      	adds	r0, #1
 802ab3c:	d037      	beq.n	802abae <_malloc_r+0xe6>
 802ab3e:	6823      	ldr	r3, [r4, #0]
 802ab40:	442b      	add	r3, r5
 802ab42:	6023      	str	r3, [r4, #0]
 802ab44:	f8d8 3000 	ldr.w	r3, [r8]
 802ab48:	2b00      	cmp	r3, #0
 802ab4a:	d038      	beq.n	802abbe <_malloc_r+0xf6>
 802ab4c:	685a      	ldr	r2, [r3, #4]
 802ab4e:	42a2      	cmp	r2, r4
 802ab50:	d12b      	bne.n	802abaa <_malloc_r+0xe2>
 802ab52:	2200      	movs	r2, #0
 802ab54:	605a      	str	r2, [r3, #4]
 802ab56:	e00f      	b.n	802ab78 <_malloc_r+0xb0>
 802ab58:	6822      	ldr	r2, [r4, #0]
 802ab5a:	1b52      	subs	r2, r2, r5
 802ab5c:	d41f      	bmi.n	802ab9e <_malloc_r+0xd6>
 802ab5e:	2a0b      	cmp	r2, #11
 802ab60:	d917      	bls.n	802ab92 <_malloc_r+0xca>
 802ab62:	1961      	adds	r1, r4, r5
 802ab64:	42a3      	cmp	r3, r4
 802ab66:	6025      	str	r5, [r4, #0]
 802ab68:	bf18      	it	ne
 802ab6a:	6059      	strne	r1, [r3, #4]
 802ab6c:	6863      	ldr	r3, [r4, #4]
 802ab6e:	bf08      	it	eq
 802ab70:	f8c8 1000 	streq.w	r1, [r8]
 802ab74:	5162      	str	r2, [r4, r5]
 802ab76:	604b      	str	r3, [r1, #4]
 802ab78:	4638      	mov	r0, r7
 802ab7a:	f104 060b 	add.w	r6, r4, #11
 802ab7e:	f000 f829 	bl	802abd4 <__malloc_unlock>
 802ab82:	f026 0607 	bic.w	r6, r6, #7
 802ab86:	1d23      	adds	r3, r4, #4
 802ab88:	1af2      	subs	r2, r6, r3
 802ab8a:	d0ae      	beq.n	802aaea <_malloc_r+0x22>
 802ab8c:	1b9b      	subs	r3, r3, r6
 802ab8e:	50a3      	str	r3, [r4, r2]
 802ab90:	e7ab      	b.n	802aaea <_malloc_r+0x22>
 802ab92:	42a3      	cmp	r3, r4
 802ab94:	6862      	ldr	r2, [r4, #4]
 802ab96:	d1dd      	bne.n	802ab54 <_malloc_r+0x8c>
 802ab98:	f8c8 2000 	str.w	r2, [r8]
 802ab9c:	e7ec      	b.n	802ab78 <_malloc_r+0xb0>
 802ab9e:	4623      	mov	r3, r4
 802aba0:	6864      	ldr	r4, [r4, #4]
 802aba2:	e7ac      	b.n	802aafe <_malloc_r+0x36>
 802aba4:	4634      	mov	r4, r6
 802aba6:	6876      	ldr	r6, [r6, #4]
 802aba8:	e7b4      	b.n	802ab14 <_malloc_r+0x4c>
 802abaa:	4613      	mov	r3, r2
 802abac:	e7cc      	b.n	802ab48 <_malloc_r+0x80>
 802abae:	230c      	movs	r3, #12
 802abb0:	603b      	str	r3, [r7, #0]
 802abb2:	4638      	mov	r0, r7
 802abb4:	f000 f80e 	bl	802abd4 <__malloc_unlock>
 802abb8:	e797      	b.n	802aaea <_malloc_r+0x22>
 802abba:	6025      	str	r5, [r4, #0]
 802abbc:	e7dc      	b.n	802ab78 <_malloc_r+0xb0>
 802abbe:	605b      	str	r3, [r3, #4]
 802abc0:	deff      	udf	#255	; 0xff
 802abc2:	bf00      	nop
 802abc4:	20013c10 	.word	0x20013c10

0802abc8 <__malloc_lock>:
 802abc8:	4801      	ldr	r0, [pc, #4]	; (802abd0 <__malloc_lock+0x8>)
 802abca:	f000 ba52 	b.w	802b072 <__retarget_lock_acquire_recursive>
 802abce:	bf00      	nop
 802abd0:	20013d59 	.word	0x20013d59

0802abd4 <__malloc_unlock>:
 802abd4:	4801      	ldr	r0, [pc, #4]	; (802abdc <__malloc_unlock+0x8>)
 802abd6:	f000 ba4d 	b.w	802b074 <__retarget_lock_release_recursive>
 802abda:	bf00      	nop
 802abdc:	20013d59 	.word	0x20013d59

0802abe0 <__cxa_atexit>:
 802abe0:	b510      	push	{r4, lr}
 802abe2:	4c05      	ldr	r4, [pc, #20]	; (802abf8 <__cxa_atexit+0x18>)
 802abe4:	4613      	mov	r3, r2
 802abe6:	b12c      	cbz	r4, 802abf4 <__cxa_atexit+0x14>
 802abe8:	460a      	mov	r2, r1
 802abea:	4601      	mov	r1, r0
 802abec:	2002      	movs	r0, #2
 802abee:	f000 fa51 	bl	802b094 <__register_exitproc>
 802abf2:	bd10      	pop	{r4, pc}
 802abf4:	4620      	mov	r0, r4
 802abf6:	e7fc      	b.n	802abf2 <__cxa_atexit+0x12>
 802abf8:	0802b095 	.word	0x0802b095

0802abfc <std>:
 802abfc:	2300      	movs	r3, #0
 802abfe:	b510      	push	{r4, lr}
 802ac00:	4604      	mov	r4, r0
 802ac02:	e9c0 3300 	strd	r3, r3, [r0]
 802ac06:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802ac0a:	6083      	str	r3, [r0, #8]
 802ac0c:	8181      	strh	r1, [r0, #12]
 802ac0e:	6643      	str	r3, [r0, #100]	; 0x64
 802ac10:	81c2      	strh	r2, [r0, #14]
 802ac12:	6183      	str	r3, [r0, #24]
 802ac14:	4619      	mov	r1, r3
 802ac16:	2208      	movs	r2, #8
 802ac18:	305c      	adds	r0, #92	; 0x5c
 802ac1a:	f000 f906 	bl	802ae2a <memset>
 802ac1e:	4b0d      	ldr	r3, [pc, #52]	; (802ac54 <std+0x58>)
 802ac20:	6263      	str	r3, [r4, #36]	; 0x24
 802ac22:	4b0d      	ldr	r3, [pc, #52]	; (802ac58 <std+0x5c>)
 802ac24:	62a3      	str	r3, [r4, #40]	; 0x28
 802ac26:	4b0d      	ldr	r3, [pc, #52]	; (802ac5c <std+0x60>)
 802ac28:	62e3      	str	r3, [r4, #44]	; 0x2c
 802ac2a:	4b0d      	ldr	r3, [pc, #52]	; (802ac60 <std+0x64>)
 802ac2c:	6323      	str	r3, [r4, #48]	; 0x30
 802ac2e:	4b0d      	ldr	r3, [pc, #52]	; (802ac64 <std+0x68>)
 802ac30:	6224      	str	r4, [r4, #32]
 802ac32:	429c      	cmp	r4, r3
 802ac34:	d006      	beq.n	802ac44 <std+0x48>
 802ac36:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802ac3a:	4294      	cmp	r4, r2
 802ac3c:	d002      	beq.n	802ac44 <std+0x48>
 802ac3e:	33d0      	adds	r3, #208	; 0xd0
 802ac40:	429c      	cmp	r4, r3
 802ac42:	d105      	bne.n	802ac50 <std+0x54>
 802ac44:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802ac48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac4c:	f000 ba10 	b.w	802b070 <__retarget_lock_init_recursive>
 802ac50:	bd10      	pop	{r4, pc}
 802ac52:	bf00      	nop
 802ac54:	0802ada5 	.word	0x0802ada5
 802ac58:	0802adc7 	.word	0x0802adc7
 802ac5c:	0802adff 	.word	0x0802adff
 802ac60:	0802ae23 	.word	0x0802ae23
 802ac64:	20013c18 	.word	0x20013c18

0802ac68 <stdio_exit_handler>:
 802ac68:	4a02      	ldr	r2, [pc, #8]	; (802ac74 <stdio_exit_handler+0xc>)
 802ac6a:	4903      	ldr	r1, [pc, #12]	; (802ac78 <stdio_exit_handler+0x10>)
 802ac6c:	4803      	ldr	r0, [pc, #12]	; (802ac7c <stdio_exit_handler+0x14>)
 802ac6e:	f000 b87b 	b.w	802ad68 <_fwalk_sglue>
 802ac72:	bf00      	nop
 802ac74:	20000124 	.word	0x20000124
 802ac78:	0802b89d 	.word	0x0802b89d
 802ac7c:	20000130 	.word	0x20000130

0802ac80 <cleanup_stdio>:
 802ac80:	6841      	ldr	r1, [r0, #4]
 802ac82:	4b0c      	ldr	r3, [pc, #48]	; (802acb4 <cleanup_stdio+0x34>)
 802ac84:	4299      	cmp	r1, r3
 802ac86:	b510      	push	{r4, lr}
 802ac88:	4604      	mov	r4, r0
 802ac8a:	d001      	beq.n	802ac90 <cleanup_stdio+0x10>
 802ac8c:	f000 fe06 	bl	802b89c <_fflush_r>
 802ac90:	68a1      	ldr	r1, [r4, #8]
 802ac92:	4b09      	ldr	r3, [pc, #36]	; (802acb8 <cleanup_stdio+0x38>)
 802ac94:	4299      	cmp	r1, r3
 802ac96:	d002      	beq.n	802ac9e <cleanup_stdio+0x1e>
 802ac98:	4620      	mov	r0, r4
 802ac9a:	f000 fdff 	bl	802b89c <_fflush_r>
 802ac9e:	68e1      	ldr	r1, [r4, #12]
 802aca0:	4b06      	ldr	r3, [pc, #24]	; (802acbc <cleanup_stdio+0x3c>)
 802aca2:	4299      	cmp	r1, r3
 802aca4:	d004      	beq.n	802acb0 <cleanup_stdio+0x30>
 802aca6:	4620      	mov	r0, r4
 802aca8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802acac:	f000 bdf6 	b.w	802b89c <_fflush_r>
 802acb0:	bd10      	pop	{r4, pc}
 802acb2:	bf00      	nop
 802acb4:	20013c18 	.word	0x20013c18
 802acb8:	20013c80 	.word	0x20013c80
 802acbc:	20013ce8 	.word	0x20013ce8

0802acc0 <global_stdio_init.part.0>:
 802acc0:	b510      	push	{r4, lr}
 802acc2:	4b0b      	ldr	r3, [pc, #44]	; (802acf0 <global_stdio_init.part.0+0x30>)
 802acc4:	4c0b      	ldr	r4, [pc, #44]	; (802acf4 <global_stdio_init.part.0+0x34>)
 802acc6:	4a0c      	ldr	r2, [pc, #48]	; (802acf8 <global_stdio_init.part.0+0x38>)
 802acc8:	601a      	str	r2, [r3, #0]
 802acca:	4620      	mov	r0, r4
 802accc:	2200      	movs	r2, #0
 802acce:	2104      	movs	r1, #4
 802acd0:	f7ff ff94 	bl	802abfc <std>
 802acd4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802acd8:	2201      	movs	r2, #1
 802acda:	2109      	movs	r1, #9
 802acdc:	f7ff ff8e 	bl	802abfc <std>
 802ace0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802ace4:	2202      	movs	r2, #2
 802ace6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802acea:	2112      	movs	r1, #18
 802acec:	f7ff bf86 	b.w	802abfc <std>
 802acf0:	20013d50 	.word	0x20013d50
 802acf4:	20013c18 	.word	0x20013c18
 802acf8:	0802ac69 	.word	0x0802ac69

0802acfc <__sfp_lock_acquire>:
 802acfc:	4801      	ldr	r0, [pc, #4]	; (802ad04 <__sfp_lock_acquire+0x8>)
 802acfe:	f000 b9b8 	b.w	802b072 <__retarget_lock_acquire_recursive>
 802ad02:	bf00      	nop
 802ad04:	20013d5a 	.word	0x20013d5a

0802ad08 <__sfp_lock_release>:
 802ad08:	4801      	ldr	r0, [pc, #4]	; (802ad10 <__sfp_lock_release+0x8>)
 802ad0a:	f000 b9b3 	b.w	802b074 <__retarget_lock_release_recursive>
 802ad0e:	bf00      	nop
 802ad10:	20013d5a 	.word	0x20013d5a

0802ad14 <__sinit>:
 802ad14:	b510      	push	{r4, lr}
 802ad16:	4604      	mov	r4, r0
 802ad18:	f7ff fff0 	bl	802acfc <__sfp_lock_acquire>
 802ad1c:	6a23      	ldr	r3, [r4, #32]
 802ad1e:	b11b      	cbz	r3, 802ad28 <__sinit+0x14>
 802ad20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad24:	f7ff bff0 	b.w	802ad08 <__sfp_lock_release>
 802ad28:	4b04      	ldr	r3, [pc, #16]	; (802ad3c <__sinit+0x28>)
 802ad2a:	6223      	str	r3, [r4, #32]
 802ad2c:	4b04      	ldr	r3, [pc, #16]	; (802ad40 <__sinit+0x2c>)
 802ad2e:	681b      	ldr	r3, [r3, #0]
 802ad30:	2b00      	cmp	r3, #0
 802ad32:	d1f5      	bne.n	802ad20 <__sinit+0xc>
 802ad34:	f7ff ffc4 	bl	802acc0 <global_stdio_init.part.0>
 802ad38:	e7f2      	b.n	802ad20 <__sinit+0xc>
 802ad3a:	bf00      	nop
 802ad3c:	0802ac81 	.word	0x0802ac81
 802ad40:	20013d50 	.word	0x20013d50

0802ad44 <fiprintf>:
 802ad44:	b40e      	push	{r1, r2, r3}
 802ad46:	b503      	push	{r0, r1, lr}
 802ad48:	4601      	mov	r1, r0
 802ad4a:	ab03      	add	r3, sp, #12
 802ad4c:	4805      	ldr	r0, [pc, #20]	; (802ad64 <fiprintf+0x20>)
 802ad4e:	f853 2b04 	ldr.w	r2, [r3], #4
 802ad52:	6800      	ldr	r0, [r0, #0]
 802ad54:	9301      	str	r3, [sp, #4]
 802ad56:	f000 fa71 	bl	802b23c <_vfiprintf_r>
 802ad5a:	b002      	add	sp, #8
 802ad5c:	f85d eb04 	ldr.w	lr, [sp], #4
 802ad60:	b003      	add	sp, #12
 802ad62:	4770      	bx	lr
 802ad64:	2000017c 	.word	0x2000017c

0802ad68 <_fwalk_sglue>:
 802ad68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ad6c:	4607      	mov	r7, r0
 802ad6e:	4688      	mov	r8, r1
 802ad70:	4614      	mov	r4, r2
 802ad72:	2600      	movs	r6, #0
 802ad74:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802ad78:	f1b9 0901 	subs.w	r9, r9, #1
 802ad7c:	d505      	bpl.n	802ad8a <_fwalk_sglue+0x22>
 802ad7e:	6824      	ldr	r4, [r4, #0]
 802ad80:	2c00      	cmp	r4, #0
 802ad82:	d1f7      	bne.n	802ad74 <_fwalk_sglue+0xc>
 802ad84:	4630      	mov	r0, r6
 802ad86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ad8a:	89ab      	ldrh	r3, [r5, #12]
 802ad8c:	2b01      	cmp	r3, #1
 802ad8e:	d907      	bls.n	802ada0 <_fwalk_sglue+0x38>
 802ad90:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802ad94:	3301      	adds	r3, #1
 802ad96:	d003      	beq.n	802ada0 <_fwalk_sglue+0x38>
 802ad98:	4629      	mov	r1, r5
 802ad9a:	4638      	mov	r0, r7
 802ad9c:	47c0      	blx	r8
 802ad9e:	4306      	orrs	r6, r0
 802ada0:	3568      	adds	r5, #104	; 0x68
 802ada2:	e7e9      	b.n	802ad78 <_fwalk_sglue+0x10>

0802ada4 <__sread>:
 802ada4:	b510      	push	{r4, lr}
 802ada6:	460c      	mov	r4, r1
 802ada8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802adac:	f000 f8ee 	bl	802af8c <_read_r>
 802adb0:	2800      	cmp	r0, #0
 802adb2:	bfab      	itete	ge
 802adb4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802adb6:	89a3      	ldrhlt	r3, [r4, #12]
 802adb8:	181b      	addge	r3, r3, r0
 802adba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802adbe:	bfac      	ite	ge
 802adc0:	6563      	strge	r3, [r4, #84]	; 0x54
 802adc2:	81a3      	strhlt	r3, [r4, #12]
 802adc4:	bd10      	pop	{r4, pc}

0802adc6 <__swrite>:
 802adc6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802adca:	461f      	mov	r7, r3
 802adcc:	898b      	ldrh	r3, [r1, #12]
 802adce:	05db      	lsls	r3, r3, #23
 802add0:	4605      	mov	r5, r0
 802add2:	460c      	mov	r4, r1
 802add4:	4616      	mov	r6, r2
 802add6:	d505      	bpl.n	802ade4 <__swrite+0x1e>
 802add8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802addc:	2302      	movs	r3, #2
 802adde:	2200      	movs	r2, #0
 802ade0:	f000 f8c2 	bl	802af68 <_lseek_r>
 802ade4:	89a3      	ldrh	r3, [r4, #12]
 802ade6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802adea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802adee:	81a3      	strh	r3, [r4, #12]
 802adf0:	4632      	mov	r2, r6
 802adf2:	463b      	mov	r3, r7
 802adf4:	4628      	mov	r0, r5
 802adf6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802adfa:	f000 b8fd 	b.w	802aff8 <_write_r>

0802adfe <__sseek>:
 802adfe:	b510      	push	{r4, lr}
 802ae00:	460c      	mov	r4, r1
 802ae02:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae06:	f000 f8af 	bl	802af68 <_lseek_r>
 802ae0a:	1c43      	adds	r3, r0, #1
 802ae0c:	89a3      	ldrh	r3, [r4, #12]
 802ae0e:	bf15      	itete	ne
 802ae10:	6560      	strne	r0, [r4, #84]	; 0x54
 802ae12:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802ae16:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802ae1a:	81a3      	strheq	r3, [r4, #12]
 802ae1c:	bf18      	it	ne
 802ae1e:	81a3      	strhne	r3, [r4, #12]
 802ae20:	bd10      	pop	{r4, pc}

0802ae22 <__sclose>:
 802ae22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae26:	f000 b839 	b.w	802ae9c <_close_r>

0802ae2a <memset>:
 802ae2a:	4402      	add	r2, r0
 802ae2c:	4603      	mov	r3, r0
 802ae2e:	4293      	cmp	r3, r2
 802ae30:	d100      	bne.n	802ae34 <memset+0xa>
 802ae32:	4770      	bx	lr
 802ae34:	f803 1b01 	strb.w	r1, [r3], #1
 802ae38:	e7f9      	b.n	802ae2e <memset+0x4>

0802ae3a <_raise_r>:
 802ae3a:	291f      	cmp	r1, #31
 802ae3c:	b538      	push	{r3, r4, r5, lr}
 802ae3e:	4604      	mov	r4, r0
 802ae40:	460d      	mov	r5, r1
 802ae42:	d904      	bls.n	802ae4e <_raise_r+0x14>
 802ae44:	2316      	movs	r3, #22
 802ae46:	6003      	str	r3, [r0, #0]
 802ae48:	f04f 30ff 	mov.w	r0, #4294967295
 802ae4c:	bd38      	pop	{r3, r4, r5, pc}
 802ae4e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802ae50:	b112      	cbz	r2, 802ae58 <_raise_r+0x1e>
 802ae52:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802ae56:	b94b      	cbnz	r3, 802ae6c <_raise_r+0x32>
 802ae58:	4620      	mov	r0, r4
 802ae5a:	f000 f8bb 	bl	802afd4 <_getpid_r>
 802ae5e:	462a      	mov	r2, r5
 802ae60:	4601      	mov	r1, r0
 802ae62:	4620      	mov	r0, r4
 802ae64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802ae68:	f000 b8a2 	b.w	802afb0 <_kill_r>
 802ae6c:	2b01      	cmp	r3, #1
 802ae6e:	d00a      	beq.n	802ae86 <_raise_r+0x4c>
 802ae70:	1c59      	adds	r1, r3, #1
 802ae72:	d103      	bne.n	802ae7c <_raise_r+0x42>
 802ae74:	2316      	movs	r3, #22
 802ae76:	6003      	str	r3, [r0, #0]
 802ae78:	2001      	movs	r0, #1
 802ae7a:	e7e7      	b.n	802ae4c <_raise_r+0x12>
 802ae7c:	2400      	movs	r4, #0
 802ae7e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802ae82:	4628      	mov	r0, r5
 802ae84:	4798      	blx	r3
 802ae86:	2000      	movs	r0, #0
 802ae88:	e7e0      	b.n	802ae4c <_raise_r+0x12>
	...

0802ae8c <raise>:
 802ae8c:	4b02      	ldr	r3, [pc, #8]	; (802ae98 <raise+0xc>)
 802ae8e:	4601      	mov	r1, r0
 802ae90:	6818      	ldr	r0, [r3, #0]
 802ae92:	f7ff bfd2 	b.w	802ae3a <_raise_r>
 802ae96:	bf00      	nop
 802ae98:	2000017c 	.word	0x2000017c

0802ae9c <_close_r>:
 802ae9c:	b538      	push	{r3, r4, r5, lr}
 802ae9e:	4d06      	ldr	r5, [pc, #24]	; (802aeb8 <_close_r+0x1c>)
 802aea0:	2300      	movs	r3, #0
 802aea2:	4604      	mov	r4, r0
 802aea4:	4608      	mov	r0, r1
 802aea6:	602b      	str	r3, [r5, #0]
 802aea8:	f7d6 fe8a 	bl	8001bc0 <_close>
 802aeac:	1c43      	adds	r3, r0, #1
 802aeae:	d102      	bne.n	802aeb6 <_close_r+0x1a>
 802aeb0:	682b      	ldr	r3, [r5, #0]
 802aeb2:	b103      	cbz	r3, 802aeb6 <_close_r+0x1a>
 802aeb4:	6023      	str	r3, [r4, #0]
 802aeb6:	bd38      	pop	{r3, r4, r5, pc}
 802aeb8:	20013d54 	.word	0x20013d54

0802aebc <_reclaim_reent>:
 802aebc:	4b29      	ldr	r3, [pc, #164]	; (802af64 <_reclaim_reent+0xa8>)
 802aebe:	681b      	ldr	r3, [r3, #0]
 802aec0:	4283      	cmp	r3, r0
 802aec2:	b570      	push	{r4, r5, r6, lr}
 802aec4:	4604      	mov	r4, r0
 802aec6:	d04b      	beq.n	802af60 <_reclaim_reent+0xa4>
 802aec8:	69c3      	ldr	r3, [r0, #28]
 802aeca:	b143      	cbz	r3, 802aede <_reclaim_reent+0x22>
 802aecc:	68db      	ldr	r3, [r3, #12]
 802aece:	2b00      	cmp	r3, #0
 802aed0:	d144      	bne.n	802af5c <_reclaim_reent+0xa0>
 802aed2:	69e3      	ldr	r3, [r4, #28]
 802aed4:	6819      	ldr	r1, [r3, #0]
 802aed6:	b111      	cbz	r1, 802aede <_reclaim_reent+0x22>
 802aed8:	4620      	mov	r0, r4
 802aeda:	f000 f939 	bl	802b150 <_free_r>
 802aede:	6961      	ldr	r1, [r4, #20]
 802aee0:	b111      	cbz	r1, 802aee8 <_reclaim_reent+0x2c>
 802aee2:	4620      	mov	r0, r4
 802aee4:	f000 f934 	bl	802b150 <_free_r>
 802aee8:	69e1      	ldr	r1, [r4, #28]
 802aeea:	b111      	cbz	r1, 802aef2 <_reclaim_reent+0x36>
 802aeec:	4620      	mov	r0, r4
 802aeee:	f000 f92f 	bl	802b150 <_free_r>
 802aef2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802aef4:	b111      	cbz	r1, 802aefc <_reclaim_reent+0x40>
 802aef6:	4620      	mov	r0, r4
 802aef8:	f000 f92a 	bl	802b150 <_free_r>
 802aefc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802aefe:	b111      	cbz	r1, 802af06 <_reclaim_reent+0x4a>
 802af00:	4620      	mov	r0, r4
 802af02:	f000 f925 	bl	802b150 <_free_r>
 802af06:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802af08:	b111      	cbz	r1, 802af10 <_reclaim_reent+0x54>
 802af0a:	4620      	mov	r0, r4
 802af0c:	f000 f920 	bl	802b150 <_free_r>
 802af10:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802af12:	b111      	cbz	r1, 802af1a <_reclaim_reent+0x5e>
 802af14:	4620      	mov	r0, r4
 802af16:	f000 f91b 	bl	802b150 <_free_r>
 802af1a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802af1c:	b111      	cbz	r1, 802af24 <_reclaim_reent+0x68>
 802af1e:	4620      	mov	r0, r4
 802af20:	f000 f916 	bl	802b150 <_free_r>
 802af24:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802af26:	b111      	cbz	r1, 802af2e <_reclaim_reent+0x72>
 802af28:	4620      	mov	r0, r4
 802af2a:	f000 f911 	bl	802b150 <_free_r>
 802af2e:	6a23      	ldr	r3, [r4, #32]
 802af30:	b1b3      	cbz	r3, 802af60 <_reclaim_reent+0xa4>
 802af32:	4620      	mov	r0, r4
 802af34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802af38:	4718      	bx	r3
 802af3a:	5949      	ldr	r1, [r1, r5]
 802af3c:	b941      	cbnz	r1, 802af50 <_reclaim_reent+0x94>
 802af3e:	3504      	adds	r5, #4
 802af40:	69e3      	ldr	r3, [r4, #28]
 802af42:	2d80      	cmp	r5, #128	; 0x80
 802af44:	68d9      	ldr	r1, [r3, #12]
 802af46:	d1f8      	bne.n	802af3a <_reclaim_reent+0x7e>
 802af48:	4620      	mov	r0, r4
 802af4a:	f000 f901 	bl	802b150 <_free_r>
 802af4e:	e7c0      	b.n	802aed2 <_reclaim_reent+0x16>
 802af50:	680e      	ldr	r6, [r1, #0]
 802af52:	4620      	mov	r0, r4
 802af54:	f000 f8fc 	bl	802b150 <_free_r>
 802af58:	4631      	mov	r1, r6
 802af5a:	e7ef      	b.n	802af3c <_reclaim_reent+0x80>
 802af5c:	2500      	movs	r5, #0
 802af5e:	e7ef      	b.n	802af40 <_reclaim_reent+0x84>
 802af60:	bd70      	pop	{r4, r5, r6, pc}
 802af62:	bf00      	nop
 802af64:	2000017c 	.word	0x2000017c

0802af68 <_lseek_r>:
 802af68:	b538      	push	{r3, r4, r5, lr}
 802af6a:	4d07      	ldr	r5, [pc, #28]	; (802af88 <_lseek_r+0x20>)
 802af6c:	4604      	mov	r4, r0
 802af6e:	4608      	mov	r0, r1
 802af70:	4611      	mov	r1, r2
 802af72:	2200      	movs	r2, #0
 802af74:	602a      	str	r2, [r5, #0]
 802af76:	461a      	mov	r2, r3
 802af78:	f7d6 fe2e 	bl	8001bd8 <_lseek>
 802af7c:	1c43      	adds	r3, r0, #1
 802af7e:	d102      	bne.n	802af86 <_lseek_r+0x1e>
 802af80:	682b      	ldr	r3, [r5, #0]
 802af82:	b103      	cbz	r3, 802af86 <_lseek_r+0x1e>
 802af84:	6023      	str	r3, [r4, #0]
 802af86:	bd38      	pop	{r3, r4, r5, pc}
 802af88:	20013d54 	.word	0x20013d54

0802af8c <_read_r>:
 802af8c:	b538      	push	{r3, r4, r5, lr}
 802af8e:	4d07      	ldr	r5, [pc, #28]	; (802afac <_read_r+0x20>)
 802af90:	4604      	mov	r4, r0
 802af92:	4608      	mov	r0, r1
 802af94:	4611      	mov	r1, r2
 802af96:	2200      	movs	r2, #0
 802af98:	602a      	str	r2, [r5, #0]
 802af9a:	461a      	mov	r2, r3
 802af9c:	f7d6 fdf4 	bl	8001b88 <_read>
 802afa0:	1c43      	adds	r3, r0, #1
 802afa2:	d102      	bne.n	802afaa <_read_r+0x1e>
 802afa4:	682b      	ldr	r3, [r5, #0]
 802afa6:	b103      	cbz	r3, 802afaa <_read_r+0x1e>
 802afa8:	6023      	str	r3, [r4, #0]
 802afaa:	bd38      	pop	{r3, r4, r5, pc}
 802afac:	20013d54 	.word	0x20013d54

0802afb0 <_kill_r>:
 802afb0:	b538      	push	{r3, r4, r5, lr}
 802afb2:	4d07      	ldr	r5, [pc, #28]	; (802afd0 <_kill_r+0x20>)
 802afb4:	2300      	movs	r3, #0
 802afb6:	4604      	mov	r4, r0
 802afb8:	4608      	mov	r0, r1
 802afba:	4611      	mov	r1, r2
 802afbc:	602b      	str	r3, [r5, #0]
 802afbe:	f7d6 fdd5 	bl	8001b6c <_kill>
 802afc2:	1c43      	adds	r3, r0, #1
 802afc4:	d102      	bne.n	802afcc <_kill_r+0x1c>
 802afc6:	682b      	ldr	r3, [r5, #0]
 802afc8:	b103      	cbz	r3, 802afcc <_kill_r+0x1c>
 802afca:	6023      	str	r3, [r4, #0]
 802afcc:	bd38      	pop	{r3, r4, r5, pc}
 802afce:	bf00      	nop
 802afd0:	20013d54 	.word	0x20013d54

0802afd4 <_getpid_r>:
 802afd4:	f7d6 bdc8 	b.w	8001b68 <_getpid>

0802afd8 <_sbrk_r>:
 802afd8:	b538      	push	{r3, r4, r5, lr}
 802afda:	4d06      	ldr	r5, [pc, #24]	; (802aff4 <_sbrk_r+0x1c>)
 802afdc:	2300      	movs	r3, #0
 802afde:	4604      	mov	r4, r0
 802afe0:	4608      	mov	r0, r1
 802afe2:	602b      	str	r3, [r5, #0]
 802afe4:	f7d6 fdfa 	bl	8001bdc <_sbrk>
 802afe8:	1c43      	adds	r3, r0, #1
 802afea:	d102      	bne.n	802aff2 <_sbrk_r+0x1a>
 802afec:	682b      	ldr	r3, [r5, #0]
 802afee:	b103      	cbz	r3, 802aff2 <_sbrk_r+0x1a>
 802aff0:	6023      	str	r3, [r4, #0]
 802aff2:	bd38      	pop	{r3, r4, r5, pc}
 802aff4:	20013d54 	.word	0x20013d54

0802aff8 <_write_r>:
 802aff8:	b538      	push	{r3, r4, r5, lr}
 802affa:	4d07      	ldr	r5, [pc, #28]	; (802b018 <_write_r+0x20>)
 802affc:	4604      	mov	r4, r0
 802affe:	4608      	mov	r0, r1
 802b000:	4611      	mov	r1, r2
 802b002:	2200      	movs	r2, #0
 802b004:	602a      	str	r2, [r5, #0]
 802b006:	461a      	mov	r2, r3
 802b008:	f7d6 fdcc 	bl	8001ba4 <_write>
 802b00c:	1c43      	adds	r3, r0, #1
 802b00e:	d102      	bne.n	802b016 <_write_r+0x1e>
 802b010:	682b      	ldr	r3, [r5, #0]
 802b012:	b103      	cbz	r3, 802b016 <_write_r+0x1e>
 802b014:	6023      	str	r3, [r4, #0]
 802b016:	bd38      	pop	{r3, r4, r5, pc}
 802b018:	20013d54 	.word	0x20013d54

0802b01c <__errno>:
 802b01c:	4b01      	ldr	r3, [pc, #4]	; (802b024 <__errno+0x8>)
 802b01e:	6818      	ldr	r0, [r3, #0]
 802b020:	4770      	bx	lr
 802b022:	bf00      	nop
 802b024:	2000017c 	.word	0x2000017c

0802b028 <__libc_init_array>:
 802b028:	b570      	push	{r4, r5, r6, lr}
 802b02a:	4d0d      	ldr	r5, [pc, #52]	; (802b060 <__libc_init_array+0x38>)
 802b02c:	4c0d      	ldr	r4, [pc, #52]	; (802b064 <__libc_init_array+0x3c>)
 802b02e:	1b64      	subs	r4, r4, r5
 802b030:	10a4      	asrs	r4, r4, #2
 802b032:	2600      	movs	r6, #0
 802b034:	42a6      	cmp	r6, r4
 802b036:	d109      	bne.n	802b04c <__libc_init_array+0x24>
 802b038:	4d0b      	ldr	r5, [pc, #44]	; (802b068 <__libc_init_array+0x40>)
 802b03a:	4c0c      	ldr	r4, [pc, #48]	; (802b06c <__libc_init_array+0x44>)
 802b03c:	f000 fd70 	bl	802bb20 <_init>
 802b040:	1b64      	subs	r4, r4, r5
 802b042:	10a4      	asrs	r4, r4, #2
 802b044:	2600      	movs	r6, #0
 802b046:	42a6      	cmp	r6, r4
 802b048:	d105      	bne.n	802b056 <__libc_init_array+0x2e>
 802b04a:	bd70      	pop	{r4, r5, r6, pc}
 802b04c:	f855 3b04 	ldr.w	r3, [r5], #4
 802b050:	4798      	blx	r3
 802b052:	3601      	adds	r6, #1
 802b054:	e7ee      	b.n	802b034 <__libc_init_array+0xc>
 802b056:	f855 3b04 	ldr.w	r3, [r5], #4
 802b05a:	4798      	blx	r3
 802b05c:	3601      	adds	r6, #1
 802b05e:	e7f2      	b.n	802b046 <__libc_init_array+0x1e>
 802b060:	080cc354 	.word	0x080cc354
 802b064:	080cc354 	.word	0x080cc354
 802b068:	080cc354 	.word	0x080cc354
 802b06c:	080cc368 	.word	0x080cc368

0802b070 <__retarget_lock_init_recursive>:
 802b070:	4770      	bx	lr

0802b072 <__retarget_lock_acquire_recursive>:
 802b072:	4770      	bx	lr

0802b074 <__retarget_lock_release_recursive>:
 802b074:	4770      	bx	lr

0802b076 <memcpy>:
 802b076:	440a      	add	r2, r1
 802b078:	4291      	cmp	r1, r2
 802b07a:	f100 33ff 	add.w	r3, r0, #4294967295
 802b07e:	d100      	bne.n	802b082 <memcpy+0xc>
 802b080:	4770      	bx	lr
 802b082:	b510      	push	{r4, lr}
 802b084:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b088:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b08c:	4291      	cmp	r1, r2
 802b08e:	d1f9      	bne.n	802b084 <memcpy+0xe>
 802b090:	bd10      	pop	{r4, pc}
	...

0802b094 <__register_exitproc>:
 802b094:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b098:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b14c <__register_exitproc+0xb8>
 802b09c:	4606      	mov	r6, r0
 802b09e:	f8d8 0000 	ldr.w	r0, [r8]
 802b0a2:	461f      	mov	r7, r3
 802b0a4:	460d      	mov	r5, r1
 802b0a6:	4691      	mov	r9, r2
 802b0a8:	f7ff ffe3 	bl	802b072 <__retarget_lock_acquire_recursive>
 802b0ac:	4b23      	ldr	r3, [pc, #140]	; (802b13c <__register_exitproc+0xa8>)
 802b0ae:	681c      	ldr	r4, [r3, #0]
 802b0b0:	b934      	cbnz	r4, 802b0c0 <__register_exitproc+0x2c>
 802b0b2:	4c23      	ldr	r4, [pc, #140]	; (802b140 <__register_exitproc+0xac>)
 802b0b4:	601c      	str	r4, [r3, #0]
 802b0b6:	4b23      	ldr	r3, [pc, #140]	; (802b144 <__register_exitproc+0xb0>)
 802b0b8:	b113      	cbz	r3, 802b0c0 <__register_exitproc+0x2c>
 802b0ba:	681b      	ldr	r3, [r3, #0]
 802b0bc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b0c0:	6863      	ldr	r3, [r4, #4]
 802b0c2:	2b1f      	cmp	r3, #31
 802b0c4:	dd07      	ble.n	802b0d6 <__register_exitproc+0x42>
 802b0c6:	f8d8 0000 	ldr.w	r0, [r8]
 802b0ca:	f7ff ffd3 	bl	802b074 <__retarget_lock_release_recursive>
 802b0ce:	f04f 30ff 	mov.w	r0, #4294967295
 802b0d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b0d6:	b32e      	cbz	r6, 802b124 <__register_exitproc+0x90>
 802b0d8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b0dc:	b968      	cbnz	r0, 802b0fa <__register_exitproc+0x66>
 802b0de:	4b1a      	ldr	r3, [pc, #104]	; (802b148 <__register_exitproc+0xb4>)
 802b0e0:	2b00      	cmp	r3, #0
 802b0e2:	d0f0      	beq.n	802b0c6 <__register_exitproc+0x32>
 802b0e4:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b0e8:	f7ff fcbe 	bl	802aa68 <malloc>
 802b0ec:	2800      	cmp	r0, #0
 802b0ee:	d0ea      	beq.n	802b0c6 <__register_exitproc+0x32>
 802b0f0:	2300      	movs	r3, #0
 802b0f2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b0f6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b0fa:	6863      	ldr	r3, [r4, #4]
 802b0fc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b100:	2201      	movs	r2, #1
 802b102:	409a      	lsls	r2, r3
 802b104:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b108:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b10c:	4313      	orrs	r3, r2
 802b10e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b112:	2e02      	cmp	r6, #2
 802b114:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b118:	bf02      	ittt	eq
 802b11a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b11e:	4313      	orreq	r3, r2
 802b120:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b124:	6863      	ldr	r3, [r4, #4]
 802b126:	f8d8 0000 	ldr.w	r0, [r8]
 802b12a:	1c5a      	adds	r2, r3, #1
 802b12c:	3302      	adds	r3, #2
 802b12e:	6062      	str	r2, [r4, #4]
 802b130:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b134:	f7ff ff9e 	bl	802b074 <__retarget_lock_release_recursive>
 802b138:	2000      	movs	r0, #0
 802b13a:	e7ca      	b.n	802b0d2 <__register_exitproc+0x3e>
 802b13c:	20013de8 	.word	0x20013de8
 802b140:	20013d5c 	.word	0x20013d5c
 802b144:	08042ca4 	.word	0x08042ca4
 802b148:	0802aa69 	.word	0x0802aa69
 802b14c:	20000180 	.word	0x20000180

0802b150 <_free_r>:
 802b150:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b152:	2900      	cmp	r1, #0
 802b154:	d044      	beq.n	802b1e0 <_free_r+0x90>
 802b156:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b15a:	9001      	str	r0, [sp, #4]
 802b15c:	2b00      	cmp	r3, #0
 802b15e:	f1a1 0404 	sub.w	r4, r1, #4
 802b162:	bfb8      	it	lt
 802b164:	18e4      	addlt	r4, r4, r3
 802b166:	f7ff fd2f 	bl	802abc8 <__malloc_lock>
 802b16a:	4a1e      	ldr	r2, [pc, #120]	; (802b1e4 <_free_r+0x94>)
 802b16c:	9801      	ldr	r0, [sp, #4]
 802b16e:	6813      	ldr	r3, [r2, #0]
 802b170:	b933      	cbnz	r3, 802b180 <_free_r+0x30>
 802b172:	6063      	str	r3, [r4, #4]
 802b174:	6014      	str	r4, [r2, #0]
 802b176:	b003      	add	sp, #12
 802b178:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b17c:	f7ff bd2a 	b.w	802abd4 <__malloc_unlock>
 802b180:	42a3      	cmp	r3, r4
 802b182:	d908      	bls.n	802b196 <_free_r+0x46>
 802b184:	6825      	ldr	r5, [r4, #0]
 802b186:	1961      	adds	r1, r4, r5
 802b188:	428b      	cmp	r3, r1
 802b18a:	bf01      	itttt	eq
 802b18c:	6819      	ldreq	r1, [r3, #0]
 802b18e:	685b      	ldreq	r3, [r3, #4]
 802b190:	1949      	addeq	r1, r1, r5
 802b192:	6021      	streq	r1, [r4, #0]
 802b194:	e7ed      	b.n	802b172 <_free_r+0x22>
 802b196:	461a      	mov	r2, r3
 802b198:	685b      	ldr	r3, [r3, #4]
 802b19a:	b10b      	cbz	r3, 802b1a0 <_free_r+0x50>
 802b19c:	42a3      	cmp	r3, r4
 802b19e:	d9fa      	bls.n	802b196 <_free_r+0x46>
 802b1a0:	6811      	ldr	r1, [r2, #0]
 802b1a2:	1855      	adds	r5, r2, r1
 802b1a4:	42a5      	cmp	r5, r4
 802b1a6:	d10b      	bne.n	802b1c0 <_free_r+0x70>
 802b1a8:	6824      	ldr	r4, [r4, #0]
 802b1aa:	4421      	add	r1, r4
 802b1ac:	1854      	adds	r4, r2, r1
 802b1ae:	42a3      	cmp	r3, r4
 802b1b0:	6011      	str	r1, [r2, #0]
 802b1b2:	d1e0      	bne.n	802b176 <_free_r+0x26>
 802b1b4:	681c      	ldr	r4, [r3, #0]
 802b1b6:	685b      	ldr	r3, [r3, #4]
 802b1b8:	6053      	str	r3, [r2, #4]
 802b1ba:	440c      	add	r4, r1
 802b1bc:	6014      	str	r4, [r2, #0]
 802b1be:	e7da      	b.n	802b176 <_free_r+0x26>
 802b1c0:	d902      	bls.n	802b1c8 <_free_r+0x78>
 802b1c2:	230c      	movs	r3, #12
 802b1c4:	6003      	str	r3, [r0, #0]
 802b1c6:	e7d6      	b.n	802b176 <_free_r+0x26>
 802b1c8:	6825      	ldr	r5, [r4, #0]
 802b1ca:	1961      	adds	r1, r4, r5
 802b1cc:	428b      	cmp	r3, r1
 802b1ce:	bf04      	itt	eq
 802b1d0:	6819      	ldreq	r1, [r3, #0]
 802b1d2:	685b      	ldreq	r3, [r3, #4]
 802b1d4:	6063      	str	r3, [r4, #4]
 802b1d6:	bf04      	itt	eq
 802b1d8:	1949      	addeq	r1, r1, r5
 802b1da:	6021      	streq	r1, [r4, #0]
 802b1dc:	6054      	str	r4, [r2, #4]
 802b1de:	e7ca      	b.n	802b176 <_free_r+0x26>
 802b1e0:	b003      	add	sp, #12
 802b1e2:	bd30      	pop	{r4, r5, pc}
 802b1e4:	20013c10 	.word	0x20013c10

0802b1e8 <__sfputc_r>:
 802b1e8:	6893      	ldr	r3, [r2, #8]
 802b1ea:	3b01      	subs	r3, #1
 802b1ec:	2b00      	cmp	r3, #0
 802b1ee:	b410      	push	{r4}
 802b1f0:	6093      	str	r3, [r2, #8]
 802b1f2:	da08      	bge.n	802b206 <__sfputc_r+0x1e>
 802b1f4:	6994      	ldr	r4, [r2, #24]
 802b1f6:	42a3      	cmp	r3, r4
 802b1f8:	db01      	blt.n	802b1fe <__sfputc_r+0x16>
 802b1fa:	290a      	cmp	r1, #10
 802b1fc:	d103      	bne.n	802b206 <__sfputc_r+0x1e>
 802b1fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b202:	f000 bb73 	b.w	802b8ec <__swbuf_r>
 802b206:	6813      	ldr	r3, [r2, #0]
 802b208:	1c58      	adds	r0, r3, #1
 802b20a:	6010      	str	r0, [r2, #0]
 802b20c:	7019      	strb	r1, [r3, #0]
 802b20e:	4608      	mov	r0, r1
 802b210:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b214:	4770      	bx	lr

0802b216 <__sfputs_r>:
 802b216:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b218:	4606      	mov	r6, r0
 802b21a:	460f      	mov	r7, r1
 802b21c:	4614      	mov	r4, r2
 802b21e:	18d5      	adds	r5, r2, r3
 802b220:	42ac      	cmp	r4, r5
 802b222:	d101      	bne.n	802b228 <__sfputs_r+0x12>
 802b224:	2000      	movs	r0, #0
 802b226:	e007      	b.n	802b238 <__sfputs_r+0x22>
 802b228:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b22c:	463a      	mov	r2, r7
 802b22e:	4630      	mov	r0, r6
 802b230:	f7ff ffda 	bl	802b1e8 <__sfputc_r>
 802b234:	1c43      	adds	r3, r0, #1
 802b236:	d1f3      	bne.n	802b220 <__sfputs_r+0xa>
 802b238:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b23c <_vfiprintf_r>:
 802b23c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b240:	460d      	mov	r5, r1
 802b242:	b09d      	sub	sp, #116	; 0x74
 802b244:	4614      	mov	r4, r2
 802b246:	4698      	mov	r8, r3
 802b248:	4606      	mov	r6, r0
 802b24a:	b118      	cbz	r0, 802b254 <_vfiprintf_r+0x18>
 802b24c:	6a03      	ldr	r3, [r0, #32]
 802b24e:	b90b      	cbnz	r3, 802b254 <_vfiprintf_r+0x18>
 802b250:	f7ff fd60 	bl	802ad14 <__sinit>
 802b254:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b256:	07d9      	lsls	r1, r3, #31
 802b258:	d405      	bmi.n	802b266 <_vfiprintf_r+0x2a>
 802b25a:	89ab      	ldrh	r3, [r5, #12]
 802b25c:	059a      	lsls	r2, r3, #22
 802b25e:	d402      	bmi.n	802b266 <_vfiprintf_r+0x2a>
 802b260:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b262:	f7ff ff06 	bl	802b072 <__retarget_lock_acquire_recursive>
 802b266:	89ab      	ldrh	r3, [r5, #12]
 802b268:	071b      	lsls	r3, r3, #28
 802b26a:	d501      	bpl.n	802b270 <_vfiprintf_r+0x34>
 802b26c:	692b      	ldr	r3, [r5, #16]
 802b26e:	b99b      	cbnz	r3, 802b298 <_vfiprintf_r+0x5c>
 802b270:	4629      	mov	r1, r5
 802b272:	4630      	mov	r0, r6
 802b274:	f000 fb78 	bl	802b968 <__swsetup_r>
 802b278:	b170      	cbz	r0, 802b298 <_vfiprintf_r+0x5c>
 802b27a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b27c:	07dc      	lsls	r4, r3, #31
 802b27e:	d504      	bpl.n	802b28a <_vfiprintf_r+0x4e>
 802b280:	f04f 30ff 	mov.w	r0, #4294967295
 802b284:	b01d      	add	sp, #116	; 0x74
 802b286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b28a:	89ab      	ldrh	r3, [r5, #12]
 802b28c:	0598      	lsls	r0, r3, #22
 802b28e:	d4f7      	bmi.n	802b280 <_vfiprintf_r+0x44>
 802b290:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b292:	f7ff feef 	bl	802b074 <__retarget_lock_release_recursive>
 802b296:	e7f3      	b.n	802b280 <_vfiprintf_r+0x44>
 802b298:	2300      	movs	r3, #0
 802b29a:	9309      	str	r3, [sp, #36]	; 0x24
 802b29c:	2320      	movs	r3, #32
 802b29e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b2a2:	f8cd 800c 	str.w	r8, [sp, #12]
 802b2a6:	2330      	movs	r3, #48	; 0x30
 802b2a8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b45c <_vfiprintf_r+0x220>
 802b2ac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b2b0:	f04f 0901 	mov.w	r9, #1
 802b2b4:	4623      	mov	r3, r4
 802b2b6:	469a      	mov	sl, r3
 802b2b8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b2bc:	b10a      	cbz	r2, 802b2c2 <_vfiprintf_r+0x86>
 802b2be:	2a25      	cmp	r2, #37	; 0x25
 802b2c0:	d1f9      	bne.n	802b2b6 <_vfiprintf_r+0x7a>
 802b2c2:	ebba 0b04 	subs.w	fp, sl, r4
 802b2c6:	d00b      	beq.n	802b2e0 <_vfiprintf_r+0xa4>
 802b2c8:	465b      	mov	r3, fp
 802b2ca:	4622      	mov	r2, r4
 802b2cc:	4629      	mov	r1, r5
 802b2ce:	4630      	mov	r0, r6
 802b2d0:	f7ff ffa1 	bl	802b216 <__sfputs_r>
 802b2d4:	3001      	adds	r0, #1
 802b2d6:	f000 80a9 	beq.w	802b42c <_vfiprintf_r+0x1f0>
 802b2da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b2dc:	445a      	add	r2, fp
 802b2de:	9209      	str	r2, [sp, #36]	; 0x24
 802b2e0:	f89a 3000 	ldrb.w	r3, [sl]
 802b2e4:	2b00      	cmp	r3, #0
 802b2e6:	f000 80a1 	beq.w	802b42c <_vfiprintf_r+0x1f0>
 802b2ea:	2300      	movs	r3, #0
 802b2ec:	f04f 32ff 	mov.w	r2, #4294967295
 802b2f0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b2f4:	f10a 0a01 	add.w	sl, sl, #1
 802b2f8:	9304      	str	r3, [sp, #16]
 802b2fa:	9307      	str	r3, [sp, #28]
 802b2fc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b300:	931a      	str	r3, [sp, #104]	; 0x68
 802b302:	4654      	mov	r4, sl
 802b304:	2205      	movs	r2, #5
 802b306:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b30a:	4854      	ldr	r0, [pc, #336]	; (802b45c <_vfiprintf_r+0x220>)
 802b30c:	f7d4 ffd0 	bl	80002b0 <memchr>
 802b310:	9a04      	ldr	r2, [sp, #16]
 802b312:	b9d8      	cbnz	r0, 802b34c <_vfiprintf_r+0x110>
 802b314:	06d1      	lsls	r1, r2, #27
 802b316:	bf44      	itt	mi
 802b318:	2320      	movmi	r3, #32
 802b31a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b31e:	0713      	lsls	r3, r2, #28
 802b320:	bf44      	itt	mi
 802b322:	232b      	movmi	r3, #43	; 0x2b
 802b324:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b328:	f89a 3000 	ldrb.w	r3, [sl]
 802b32c:	2b2a      	cmp	r3, #42	; 0x2a
 802b32e:	d015      	beq.n	802b35c <_vfiprintf_r+0x120>
 802b330:	9a07      	ldr	r2, [sp, #28]
 802b332:	4654      	mov	r4, sl
 802b334:	2000      	movs	r0, #0
 802b336:	f04f 0c0a 	mov.w	ip, #10
 802b33a:	4621      	mov	r1, r4
 802b33c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b340:	3b30      	subs	r3, #48	; 0x30
 802b342:	2b09      	cmp	r3, #9
 802b344:	d94d      	bls.n	802b3e2 <_vfiprintf_r+0x1a6>
 802b346:	b1b0      	cbz	r0, 802b376 <_vfiprintf_r+0x13a>
 802b348:	9207      	str	r2, [sp, #28]
 802b34a:	e014      	b.n	802b376 <_vfiprintf_r+0x13a>
 802b34c:	eba0 0308 	sub.w	r3, r0, r8
 802b350:	fa09 f303 	lsl.w	r3, r9, r3
 802b354:	4313      	orrs	r3, r2
 802b356:	9304      	str	r3, [sp, #16]
 802b358:	46a2      	mov	sl, r4
 802b35a:	e7d2      	b.n	802b302 <_vfiprintf_r+0xc6>
 802b35c:	9b03      	ldr	r3, [sp, #12]
 802b35e:	1d19      	adds	r1, r3, #4
 802b360:	681b      	ldr	r3, [r3, #0]
 802b362:	9103      	str	r1, [sp, #12]
 802b364:	2b00      	cmp	r3, #0
 802b366:	bfbb      	ittet	lt
 802b368:	425b      	neglt	r3, r3
 802b36a:	f042 0202 	orrlt.w	r2, r2, #2
 802b36e:	9307      	strge	r3, [sp, #28]
 802b370:	9307      	strlt	r3, [sp, #28]
 802b372:	bfb8      	it	lt
 802b374:	9204      	strlt	r2, [sp, #16]
 802b376:	7823      	ldrb	r3, [r4, #0]
 802b378:	2b2e      	cmp	r3, #46	; 0x2e
 802b37a:	d10c      	bne.n	802b396 <_vfiprintf_r+0x15a>
 802b37c:	7863      	ldrb	r3, [r4, #1]
 802b37e:	2b2a      	cmp	r3, #42	; 0x2a
 802b380:	d134      	bne.n	802b3ec <_vfiprintf_r+0x1b0>
 802b382:	9b03      	ldr	r3, [sp, #12]
 802b384:	1d1a      	adds	r2, r3, #4
 802b386:	681b      	ldr	r3, [r3, #0]
 802b388:	9203      	str	r2, [sp, #12]
 802b38a:	2b00      	cmp	r3, #0
 802b38c:	bfb8      	it	lt
 802b38e:	f04f 33ff 	movlt.w	r3, #4294967295
 802b392:	3402      	adds	r4, #2
 802b394:	9305      	str	r3, [sp, #20]
 802b396:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b46c <_vfiprintf_r+0x230>
 802b39a:	7821      	ldrb	r1, [r4, #0]
 802b39c:	2203      	movs	r2, #3
 802b39e:	4650      	mov	r0, sl
 802b3a0:	f7d4 ff86 	bl	80002b0 <memchr>
 802b3a4:	b138      	cbz	r0, 802b3b6 <_vfiprintf_r+0x17a>
 802b3a6:	9b04      	ldr	r3, [sp, #16]
 802b3a8:	eba0 000a 	sub.w	r0, r0, sl
 802b3ac:	2240      	movs	r2, #64	; 0x40
 802b3ae:	4082      	lsls	r2, r0
 802b3b0:	4313      	orrs	r3, r2
 802b3b2:	3401      	adds	r4, #1
 802b3b4:	9304      	str	r3, [sp, #16]
 802b3b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b3ba:	4829      	ldr	r0, [pc, #164]	; (802b460 <_vfiprintf_r+0x224>)
 802b3bc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b3c0:	2206      	movs	r2, #6
 802b3c2:	f7d4 ff75 	bl	80002b0 <memchr>
 802b3c6:	2800      	cmp	r0, #0
 802b3c8:	d03f      	beq.n	802b44a <_vfiprintf_r+0x20e>
 802b3ca:	4b26      	ldr	r3, [pc, #152]	; (802b464 <_vfiprintf_r+0x228>)
 802b3cc:	bb1b      	cbnz	r3, 802b416 <_vfiprintf_r+0x1da>
 802b3ce:	9b03      	ldr	r3, [sp, #12]
 802b3d0:	3307      	adds	r3, #7
 802b3d2:	f023 0307 	bic.w	r3, r3, #7
 802b3d6:	3308      	adds	r3, #8
 802b3d8:	9303      	str	r3, [sp, #12]
 802b3da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b3dc:	443b      	add	r3, r7
 802b3de:	9309      	str	r3, [sp, #36]	; 0x24
 802b3e0:	e768      	b.n	802b2b4 <_vfiprintf_r+0x78>
 802b3e2:	fb0c 3202 	mla	r2, ip, r2, r3
 802b3e6:	460c      	mov	r4, r1
 802b3e8:	2001      	movs	r0, #1
 802b3ea:	e7a6      	b.n	802b33a <_vfiprintf_r+0xfe>
 802b3ec:	2300      	movs	r3, #0
 802b3ee:	3401      	adds	r4, #1
 802b3f0:	9305      	str	r3, [sp, #20]
 802b3f2:	4619      	mov	r1, r3
 802b3f4:	f04f 0c0a 	mov.w	ip, #10
 802b3f8:	4620      	mov	r0, r4
 802b3fa:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b3fe:	3a30      	subs	r2, #48	; 0x30
 802b400:	2a09      	cmp	r2, #9
 802b402:	d903      	bls.n	802b40c <_vfiprintf_r+0x1d0>
 802b404:	2b00      	cmp	r3, #0
 802b406:	d0c6      	beq.n	802b396 <_vfiprintf_r+0x15a>
 802b408:	9105      	str	r1, [sp, #20]
 802b40a:	e7c4      	b.n	802b396 <_vfiprintf_r+0x15a>
 802b40c:	fb0c 2101 	mla	r1, ip, r1, r2
 802b410:	4604      	mov	r4, r0
 802b412:	2301      	movs	r3, #1
 802b414:	e7f0      	b.n	802b3f8 <_vfiprintf_r+0x1bc>
 802b416:	ab03      	add	r3, sp, #12
 802b418:	9300      	str	r3, [sp, #0]
 802b41a:	462a      	mov	r2, r5
 802b41c:	4b12      	ldr	r3, [pc, #72]	; (802b468 <_vfiprintf_r+0x22c>)
 802b41e:	a904      	add	r1, sp, #16
 802b420:	4630      	mov	r0, r6
 802b422:	f3af 8000 	nop.w
 802b426:	4607      	mov	r7, r0
 802b428:	1c78      	adds	r0, r7, #1
 802b42a:	d1d6      	bne.n	802b3da <_vfiprintf_r+0x19e>
 802b42c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b42e:	07d9      	lsls	r1, r3, #31
 802b430:	d405      	bmi.n	802b43e <_vfiprintf_r+0x202>
 802b432:	89ab      	ldrh	r3, [r5, #12]
 802b434:	059a      	lsls	r2, r3, #22
 802b436:	d402      	bmi.n	802b43e <_vfiprintf_r+0x202>
 802b438:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b43a:	f7ff fe1b 	bl	802b074 <__retarget_lock_release_recursive>
 802b43e:	89ab      	ldrh	r3, [r5, #12]
 802b440:	065b      	lsls	r3, r3, #25
 802b442:	f53f af1d 	bmi.w	802b280 <_vfiprintf_r+0x44>
 802b446:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b448:	e71c      	b.n	802b284 <_vfiprintf_r+0x48>
 802b44a:	ab03      	add	r3, sp, #12
 802b44c:	9300      	str	r3, [sp, #0]
 802b44e:	462a      	mov	r2, r5
 802b450:	4b05      	ldr	r3, [pc, #20]	; (802b468 <_vfiprintf_r+0x22c>)
 802b452:	a904      	add	r1, sp, #16
 802b454:	4630      	mov	r0, r6
 802b456:	f000 f879 	bl	802b54c <_printf_i>
 802b45a:	e7e4      	b.n	802b426 <_vfiprintf_r+0x1ea>
 802b45c:	08042ca8 	.word	0x08042ca8
 802b460:	08042cb2 	.word	0x08042cb2
 802b464:	00000000 	.word	0x00000000
 802b468:	0802b217 	.word	0x0802b217
 802b46c:	08042cae 	.word	0x08042cae

0802b470 <_printf_common>:
 802b470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b474:	4616      	mov	r6, r2
 802b476:	4699      	mov	r9, r3
 802b478:	688a      	ldr	r2, [r1, #8]
 802b47a:	690b      	ldr	r3, [r1, #16]
 802b47c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b480:	4293      	cmp	r3, r2
 802b482:	bfb8      	it	lt
 802b484:	4613      	movlt	r3, r2
 802b486:	6033      	str	r3, [r6, #0]
 802b488:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b48c:	4607      	mov	r7, r0
 802b48e:	460c      	mov	r4, r1
 802b490:	b10a      	cbz	r2, 802b496 <_printf_common+0x26>
 802b492:	3301      	adds	r3, #1
 802b494:	6033      	str	r3, [r6, #0]
 802b496:	6823      	ldr	r3, [r4, #0]
 802b498:	0699      	lsls	r1, r3, #26
 802b49a:	bf42      	ittt	mi
 802b49c:	6833      	ldrmi	r3, [r6, #0]
 802b49e:	3302      	addmi	r3, #2
 802b4a0:	6033      	strmi	r3, [r6, #0]
 802b4a2:	6825      	ldr	r5, [r4, #0]
 802b4a4:	f015 0506 	ands.w	r5, r5, #6
 802b4a8:	d106      	bne.n	802b4b8 <_printf_common+0x48>
 802b4aa:	f104 0a19 	add.w	sl, r4, #25
 802b4ae:	68e3      	ldr	r3, [r4, #12]
 802b4b0:	6832      	ldr	r2, [r6, #0]
 802b4b2:	1a9b      	subs	r3, r3, r2
 802b4b4:	42ab      	cmp	r3, r5
 802b4b6:	dc26      	bgt.n	802b506 <_printf_common+0x96>
 802b4b8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b4bc:	1e13      	subs	r3, r2, #0
 802b4be:	6822      	ldr	r2, [r4, #0]
 802b4c0:	bf18      	it	ne
 802b4c2:	2301      	movne	r3, #1
 802b4c4:	0692      	lsls	r2, r2, #26
 802b4c6:	d42b      	bmi.n	802b520 <_printf_common+0xb0>
 802b4c8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b4cc:	4649      	mov	r1, r9
 802b4ce:	4638      	mov	r0, r7
 802b4d0:	47c0      	blx	r8
 802b4d2:	3001      	adds	r0, #1
 802b4d4:	d01e      	beq.n	802b514 <_printf_common+0xa4>
 802b4d6:	6823      	ldr	r3, [r4, #0]
 802b4d8:	6922      	ldr	r2, [r4, #16]
 802b4da:	f003 0306 	and.w	r3, r3, #6
 802b4de:	2b04      	cmp	r3, #4
 802b4e0:	bf02      	ittt	eq
 802b4e2:	68e5      	ldreq	r5, [r4, #12]
 802b4e4:	6833      	ldreq	r3, [r6, #0]
 802b4e6:	1aed      	subeq	r5, r5, r3
 802b4e8:	68a3      	ldr	r3, [r4, #8]
 802b4ea:	bf0c      	ite	eq
 802b4ec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b4f0:	2500      	movne	r5, #0
 802b4f2:	4293      	cmp	r3, r2
 802b4f4:	bfc4      	itt	gt
 802b4f6:	1a9b      	subgt	r3, r3, r2
 802b4f8:	18ed      	addgt	r5, r5, r3
 802b4fa:	2600      	movs	r6, #0
 802b4fc:	341a      	adds	r4, #26
 802b4fe:	42b5      	cmp	r5, r6
 802b500:	d11a      	bne.n	802b538 <_printf_common+0xc8>
 802b502:	2000      	movs	r0, #0
 802b504:	e008      	b.n	802b518 <_printf_common+0xa8>
 802b506:	2301      	movs	r3, #1
 802b508:	4652      	mov	r2, sl
 802b50a:	4649      	mov	r1, r9
 802b50c:	4638      	mov	r0, r7
 802b50e:	47c0      	blx	r8
 802b510:	3001      	adds	r0, #1
 802b512:	d103      	bne.n	802b51c <_printf_common+0xac>
 802b514:	f04f 30ff 	mov.w	r0, #4294967295
 802b518:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b51c:	3501      	adds	r5, #1
 802b51e:	e7c6      	b.n	802b4ae <_printf_common+0x3e>
 802b520:	18e1      	adds	r1, r4, r3
 802b522:	1c5a      	adds	r2, r3, #1
 802b524:	2030      	movs	r0, #48	; 0x30
 802b526:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b52a:	4422      	add	r2, r4
 802b52c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b530:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b534:	3302      	adds	r3, #2
 802b536:	e7c7      	b.n	802b4c8 <_printf_common+0x58>
 802b538:	2301      	movs	r3, #1
 802b53a:	4622      	mov	r2, r4
 802b53c:	4649      	mov	r1, r9
 802b53e:	4638      	mov	r0, r7
 802b540:	47c0      	blx	r8
 802b542:	3001      	adds	r0, #1
 802b544:	d0e6      	beq.n	802b514 <_printf_common+0xa4>
 802b546:	3601      	adds	r6, #1
 802b548:	e7d9      	b.n	802b4fe <_printf_common+0x8e>
	...

0802b54c <_printf_i>:
 802b54c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b550:	7e0f      	ldrb	r7, [r1, #24]
 802b552:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b554:	2f78      	cmp	r7, #120	; 0x78
 802b556:	4691      	mov	r9, r2
 802b558:	4680      	mov	r8, r0
 802b55a:	460c      	mov	r4, r1
 802b55c:	469a      	mov	sl, r3
 802b55e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b562:	d807      	bhi.n	802b574 <_printf_i+0x28>
 802b564:	2f62      	cmp	r7, #98	; 0x62
 802b566:	d80a      	bhi.n	802b57e <_printf_i+0x32>
 802b568:	2f00      	cmp	r7, #0
 802b56a:	f000 80d4 	beq.w	802b716 <_printf_i+0x1ca>
 802b56e:	2f58      	cmp	r7, #88	; 0x58
 802b570:	f000 80c0 	beq.w	802b6f4 <_printf_i+0x1a8>
 802b574:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b578:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b57c:	e03a      	b.n	802b5f4 <_printf_i+0xa8>
 802b57e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b582:	2b15      	cmp	r3, #21
 802b584:	d8f6      	bhi.n	802b574 <_printf_i+0x28>
 802b586:	a101      	add	r1, pc, #4	; (adr r1, 802b58c <_printf_i+0x40>)
 802b588:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b58c:	0802b5e5 	.word	0x0802b5e5
 802b590:	0802b5f9 	.word	0x0802b5f9
 802b594:	0802b575 	.word	0x0802b575
 802b598:	0802b575 	.word	0x0802b575
 802b59c:	0802b575 	.word	0x0802b575
 802b5a0:	0802b575 	.word	0x0802b575
 802b5a4:	0802b5f9 	.word	0x0802b5f9
 802b5a8:	0802b575 	.word	0x0802b575
 802b5ac:	0802b575 	.word	0x0802b575
 802b5b0:	0802b575 	.word	0x0802b575
 802b5b4:	0802b575 	.word	0x0802b575
 802b5b8:	0802b6fd 	.word	0x0802b6fd
 802b5bc:	0802b625 	.word	0x0802b625
 802b5c0:	0802b6b7 	.word	0x0802b6b7
 802b5c4:	0802b575 	.word	0x0802b575
 802b5c8:	0802b575 	.word	0x0802b575
 802b5cc:	0802b71f 	.word	0x0802b71f
 802b5d0:	0802b575 	.word	0x0802b575
 802b5d4:	0802b625 	.word	0x0802b625
 802b5d8:	0802b575 	.word	0x0802b575
 802b5dc:	0802b575 	.word	0x0802b575
 802b5e0:	0802b6bf 	.word	0x0802b6bf
 802b5e4:	682b      	ldr	r3, [r5, #0]
 802b5e6:	1d1a      	adds	r2, r3, #4
 802b5e8:	681b      	ldr	r3, [r3, #0]
 802b5ea:	602a      	str	r2, [r5, #0]
 802b5ec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b5f0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b5f4:	2301      	movs	r3, #1
 802b5f6:	e09f      	b.n	802b738 <_printf_i+0x1ec>
 802b5f8:	6820      	ldr	r0, [r4, #0]
 802b5fa:	682b      	ldr	r3, [r5, #0]
 802b5fc:	0607      	lsls	r7, r0, #24
 802b5fe:	f103 0104 	add.w	r1, r3, #4
 802b602:	6029      	str	r1, [r5, #0]
 802b604:	d501      	bpl.n	802b60a <_printf_i+0xbe>
 802b606:	681e      	ldr	r6, [r3, #0]
 802b608:	e003      	b.n	802b612 <_printf_i+0xc6>
 802b60a:	0646      	lsls	r6, r0, #25
 802b60c:	d5fb      	bpl.n	802b606 <_printf_i+0xba>
 802b60e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b612:	2e00      	cmp	r6, #0
 802b614:	da03      	bge.n	802b61e <_printf_i+0xd2>
 802b616:	232d      	movs	r3, #45	; 0x2d
 802b618:	4276      	negs	r6, r6
 802b61a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b61e:	485a      	ldr	r0, [pc, #360]	; (802b788 <_printf_i+0x23c>)
 802b620:	230a      	movs	r3, #10
 802b622:	e012      	b.n	802b64a <_printf_i+0xfe>
 802b624:	682b      	ldr	r3, [r5, #0]
 802b626:	6820      	ldr	r0, [r4, #0]
 802b628:	1d19      	adds	r1, r3, #4
 802b62a:	6029      	str	r1, [r5, #0]
 802b62c:	0605      	lsls	r5, r0, #24
 802b62e:	d501      	bpl.n	802b634 <_printf_i+0xe8>
 802b630:	681e      	ldr	r6, [r3, #0]
 802b632:	e002      	b.n	802b63a <_printf_i+0xee>
 802b634:	0641      	lsls	r1, r0, #25
 802b636:	d5fb      	bpl.n	802b630 <_printf_i+0xe4>
 802b638:	881e      	ldrh	r6, [r3, #0]
 802b63a:	4853      	ldr	r0, [pc, #332]	; (802b788 <_printf_i+0x23c>)
 802b63c:	2f6f      	cmp	r7, #111	; 0x6f
 802b63e:	bf0c      	ite	eq
 802b640:	2308      	moveq	r3, #8
 802b642:	230a      	movne	r3, #10
 802b644:	2100      	movs	r1, #0
 802b646:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b64a:	6865      	ldr	r5, [r4, #4]
 802b64c:	60a5      	str	r5, [r4, #8]
 802b64e:	2d00      	cmp	r5, #0
 802b650:	bfa2      	ittt	ge
 802b652:	6821      	ldrge	r1, [r4, #0]
 802b654:	f021 0104 	bicge.w	r1, r1, #4
 802b658:	6021      	strge	r1, [r4, #0]
 802b65a:	b90e      	cbnz	r6, 802b660 <_printf_i+0x114>
 802b65c:	2d00      	cmp	r5, #0
 802b65e:	d04b      	beq.n	802b6f8 <_printf_i+0x1ac>
 802b660:	4615      	mov	r5, r2
 802b662:	fbb6 f1f3 	udiv	r1, r6, r3
 802b666:	fb03 6711 	mls	r7, r3, r1, r6
 802b66a:	5dc7      	ldrb	r7, [r0, r7]
 802b66c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b670:	4637      	mov	r7, r6
 802b672:	42bb      	cmp	r3, r7
 802b674:	460e      	mov	r6, r1
 802b676:	d9f4      	bls.n	802b662 <_printf_i+0x116>
 802b678:	2b08      	cmp	r3, #8
 802b67a:	d10b      	bne.n	802b694 <_printf_i+0x148>
 802b67c:	6823      	ldr	r3, [r4, #0]
 802b67e:	07de      	lsls	r6, r3, #31
 802b680:	d508      	bpl.n	802b694 <_printf_i+0x148>
 802b682:	6923      	ldr	r3, [r4, #16]
 802b684:	6861      	ldr	r1, [r4, #4]
 802b686:	4299      	cmp	r1, r3
 802b688:	bfde      	ittt	le
 802b68a:	2330      	movle	r3, #48	; 0x30
 802b68c:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b690:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b694:	1b52      	subs	r2, r2, r5
 802b696:	6122      	str	r2, [r4, #16]
 802b698:	f8cd a000 	str.w	sl, [sp]
 802b69c:	464b      	mov	r3, r9
 802b69e:	aa03      	add	r2, sp, #12
 802b6a0:	4621      	mov	r1, r4
 802b6a2:	4640      	mov	r0, r8
 802b6a4:	f7ff fee4 	bl	802b470 <_printf_common>
 802b6a8:	3001      	adds	r0, #1
 802b6aa:	d14a      	bne.n	802b742 <_printf_i+0x1f6>
 802b6ac:	f04f 30ff 	mov.w	r0, #4294967295
 802b6b0:	b004      	add	sp, #16
 802b6b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b6b6:	6823      	ldr	r3, [r4, #0]
 802b6b8:	f043 0320 	orr.w	r3, r3, #32
 802b6bc:	6023      	str	r3, [r4, #0]
 802b6be:	4833      	ldr	r0, [pc, #204]	; (802b78c <_printf_i+0x240>)
 802b6c0:	2778      	movs	r7, #120	; 0x78
 802b6c2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b6c6:	6823      	ldr	r3, [r4, #0]
 802b6c8:	6829      	ldr	r1, [r5, #0]
 802b6ca:	061f      	lsls	r7, r3, #24
 802b6cc:	f851 6b04 	ldr.w	r6, [r1], #4
 802b6d0:	d402      	bmi.n	802b6d8 <_printf_i+0x18c>
 802b6d2:	065f      	lsls	r7, r3, #25
 802b6d4:	bf48      	it	mi
 802b6d6:	b2b6      	uxthmi	r6, r6
 802b6d8:	07df      	lsls	r7, r3, #31
 802b6da:	bf48      	it	mi
 802b6dc:	f043 0320 	orrmi.w	r3, r3, #32
 802b6e0:	6029      	str	r1, [r5, #0]
 802b6e2:	bf48      	it	mi
 802b6e4:	6023      	strmi	r3, [r4, #0]
 802b6e6:	b91e      	cbnz	r6, 802b6f0 <_printf_i+0x1a4>
 802b6e8:	6823      	ldr	r3, [r4, #0]
 802b6ea:	f023 0320 	bic.w	r3, r3, #32
 802b6ee:	6023      	str	r3, [r4, #0]
 802b6f0:	2310      	movs	r3, #16
 802b6f2:	e7a7      	b.n	802b644 <_printf_i+0xf8>
 802b6f4:	4824      	ldr	r0, [pc, #144]	; (802b788 <_printf_i+0x23c>)
 802b6f6:	e7e4      	b.n	802b6c2 <_printf_i+0x176>
 802b6f8:	4615      	mov	r5, r2
 802b6fa:	e7bd      	b.n	802b678 <_printf_i+0x12c>
 802b6fc:	682b      	ldr	r3, [r5, #0]
 802b6fe:	6826      	ldr	r6, [r4, #0]
 802b700:	6961      	ldr	r1, [r4, #20]
 802b702:	1d18      	adds	r0, r3, #4
 802b704:	6028      	str	r0, [r5, #0]
 802b706:	0635      	lsls	r5, r6, #24
 802b708:	681b      	ldr	r3, [r3, #0]
 802b70a:	d501      	bpl.n	802b710 <_printf_i+0x1c4>
 802b70c:	6019      	str	r1, [r3, #0]
 802b70e:	e002      	b.n	802b716 <_printf_i+0x1ca>
 802b710:	0670      	lsls	r0, r6, #25
 802b712:	d5fb      	bpl.n	802b70c <_printf_i+0x1c0>
 802b714:	8019      	strh	r1, [r3, #0]
 802b716:	2300      	movs	r3, #0
 802b718:	6123      	str	r3, [r4, #16]
 802b71a:	4615      	mov	r5, r2
 802b71c:	e7bc      	b.n	802b698 <_printf_i+0x14c>
 802b71e:	682b      	ldr	r3, [r5, #0]
 802b720:	1d1a      	adds	r2, r3, #4
 802b722:	602a      	str	r2, [r5, #0]
 802b724:	681d      	ldr	r5, [r3, #0]
 802b726:	6862      	ldr	r2, [r4, #4]
 802b728:	2100      	movs	r1, #0
 802b72a:	4628      	mov	r0, r5
 802b72c:	f7d4 fdc0 	bl	80002b0 <memchr>
 802b730:	b108      	cbz	r0, 802b736 <_printf_i+0x1ea>
 802b732:	1b40      	subs	r0, r0, r5
 802b734:	6060      	str	r0, [r4, #4]
 802b736:	6863      	ldr	r3, [r4, #4]
 802b738:	6123      	str	r3, [r4, #16]
 802b73a:	2300      	movs	r3, #0
 802b73c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b740:	e7aa      	b.n	802b698 <_printf_i+0x14c>
 802b742:	6923      	ldr	r3, [r4, #16]
 802b744:	462a      	mov	r2, r5
 802b746:	4649      	mov	r1, r9
 802b748:	4640      	mov	r0, r8
 802b74a:	47d0      	blx	sl
 802b74c:	3001      	adds	r0, #1
 802b74e:	d0ad      	beq.n	802b6ac <_printf_i+0x160>
 802b750:	6823      	ldr	r3, [r4, #0]
 802b752:	079b      	lsls	r3, r3, #30
 802b754:	d413      	bmi.n	802b77e <_printf_i+0x232>
 802b756:	68e0      	ldr	r0, [r4, #12]
 802b758:	9b03      	ldr	r3, [sp, #12]
 802b75a:	4298      	cmp	r0, r3
 802b75c:	bfb8      	it	lt
 802b75e:	4618      	movlt	r0, r3
 802b760:	e7a6      	b.n	802b6b0 <_printf_i+0x164>
 802b762:	2301      	movs	r3, #1
 802b764:	4632      	mov	r2, r6
 802b766:	4649      	mov	r1, r9
 802b768:	4640      	mov	r0, r8
 802b76a:	47d0      	blx	sl
 802b76c:	3001      	adds	r0, #1
 802b76e:	d09d      	beq.n	802b6ac <_printf_i+0x160>
 802b770:	3501      	adds	r5, #1
 802b772:	68e3      	ldr	r3, [r4, #12]
 802b774:	9903      	ldr	r1, [sp, #12]
 802b776:	1a5b      	subs	r3, r3, r1
 802b778:	42ab      	cmp	r3, r5
 802b77a:	dcf2      	bgt.n	802b762 <_printf_i+0x216>
 802b77c:	e7eb      	b.n	802b756 <_printf_i+0x20a>
 802b77e:	2500      	movs	r5, #0
 802b780:	f104 0619 	add.w	r6, r4, #25
 802b784:	e7f5      	b.n	802b772 <_printf_i+0x226>
 802b786:	bf00      	nop
 802b788:	08042cb9 	.word	0x08042cb9
 802b78c:	08042cca 	.word	0x08042cca

0802b790 <__sflush_r>:
 802b790:	898a      	ldrh	r2, [r1, #12]
 802b792:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b796:	4605      	mov	r5, r0
 802b798:	0710      	lsls	r0, r2, #28
 802b79a:	460c      	mov	r4, r1
 802b79c:	d458      	bmi.n	802b850 <__sflush_r+0xc0>
 802b79e:	684b      	ldr	r3, [r1, #4]
 802b7a0:	2b00      	cmp	r3, #0
 802b7a2:	dc05      	bgt.n	802b7b0 <__sflush_r+0x20>
 802b7a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802b7a6:	2b00      	cmp	r3, #0
 802b7a8:	dc02      	bgt.n	802b7b0 <__sflush_r+0x20>
 802b7aa:	2000      	movs	r0, #0
 802b7ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b7b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b7b2:	2e00      	cmp	r6, #0
 802b7b4:	d0f9      	beq.n	802b7aa <__sflush_r+0x1a>
 802b7b6:	2300      	movs	r3, #0
 802b7b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802b7bc:	682f      	ldr	r7, [r5, #0]
 802b7be:	6a21      	ldr	r1, [r4, #32]
 802b7c0:	602b      	str	r3, [r5, #0]
 802b7c2:	d032      	beq.n	802b82a <__sflush_r+0x9a>
 802b7c4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802b7c6:	89a3      	ldrh	r3, [r4, #12]
 802b7c8:	075a      	lsls	r2, r3, #29
 802b7ca:	d505      	bpl.n	802b7d8 <__sflush_r+0x48>
 802b7cc:	6863      	ldr	r3, [r4, #4]
 802b7ce:	1ac0      	subs	r0, r0, r3
 802b7d0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802b7d2:	b10b      	cbz	r3, 802b7d8 <__sflush_r+0x48>
 802b7d4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802b7d6:	1ac0      	subs	r0, r0, r3
 802b7d8:	2300      	movs	r3, #0
 802b7da:	4602      	mov	r2, r0
 802b7dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b7de:	6a21      	ldr	r1, [r4, #32]
 802b7e0:	4628      	mov	r0, r5
 802b7e2:	47b0      	blx	r6
 802b7e4:	1c43      	adds	r3, r0, #1
 802b7e6:	89a3      	ldrh	r3, [r4, #12]
 802b7e8:	d106      	bne.n	802b7f8 <__sflush_r+0x68>
 802b7ea:	6829      	ldr	r1, [r5, #0]
 802b7ec:	291d      	cmp	r1, #29
 802b7ee:	d82b      	bhi.n	802b848 <__sflush_r+0xb8>
 802b7f0:	4a29      	ldr	r2, [pc, #164]	; (802b898 <__sflush_r+0x108>)
 802b7f2:	410a      	asrs	r2, r1
 802b7f4:	07d6      	lsls	r6, r2, #31
 802b7f6:	d427      	bmi.n	802b848 <__sflush_r+0xb8>
 802b7f8:	2200      	movs	r2, #0
 802b7fa:	6062      	str	r2, [r4, #4]
 802b7fc:	04d9      	lsls	r1, r3, #19
 802b7fe:	6922      	ldr	r2, [r4, #16]
 802b800:	6022      	str	r2, [r4, #0]
 802b802:	d504      	bpl.n	802b80e <__sflush_r+0x7e>
 802b804:	1c42      	adds	r2, r0, #1
 802b806:	d101      	bne.n	802b80c <__sflush_r+0x7c>
 802b808:	682b      	ldr	r3, [r5, #0]
 802b80a:	b903      	cbnz	r3, 802b80e <__sflush_r+0x7e>
 802b80c:	6560      	str	r0, [r4, #84]	; 0x54
 802b80e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b810:	602f      	str	r7, [r5, #0]
 802b812:	2900      	cmp	r1, #0
 802b814:	d0c9      	beq.n	802b7aa <__sflush_r+0x1a>
 802b816:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b81a:	4299      	cmp	r1, r3
 802b81c:	d002      	beq.n	802b824 <__sflush_r+0x94>
 802b81e:	4628      	mov	r0, r5
 802b820:	f7ff fc96 	bl	802b150 <_free_r>
 802b824:	2000      	movs	r0, #0
 802b826:	6360      	str	r0, [r4, #52]	; 0x34
 802b828:	e7c0      	b.n	802b7ac <__sflush_r+0x1c>
 802b82a:	2301      	movs	r3, #1
 802b82c:	4628      	mov	r0, r5
 802b82e:	47b0      	blx	r6
 802b830:	1c41      	adds	r1, r0, #1
 802b832:	d1c8      	bne.n	802b7c6 <__sflush_r+0x36>
 802b834:	682b      	ldr	r3, [r5, #0]
 802b836:	2b00      	cmp	r3, #0
 802b838:	d0c5      	beq.n	802b7c6 <__sflush_r+0x36>
 802b83a:	2b1d      	cmp	r3, #29
 802b83c:	d001      	beq.n	802b842 <__sflush_r+0xb2>
 802b83e:	2b16      	cmp	r3, #22
 802b840:	d101      	bne.n	802b846 <__sflush_r+0xb6>
 802b842:	602f      	str	r7, [r5, #0]
 802b844:	e7b1      	b.n	802b7aa <__sflush_r+0x1a>
 802b846:	89a3      	ldrh	r3, [r4, #12]
 802b848:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b84c:	81a3      	strh	r3, [r4, #12]
 802b84e:	e7ad      	b.n	802b7ac <__sflush_r+0x1c>
 802b850:	690f      	ldr	r7, [r1, #16]
 802b852:	2f00      	cmp	r7, #0
 802b854:	d0a9      	beq.n	802b7aa <__sflush_r+0x1a>
 802b856:	0793      	lsls	r3, r2, #30
 802b858:	680e      	ldr	r6, [r1, #0]
 802b85a:	bf08      	it	eq
 802b85c:	694b      	ldreq	r3, [r1, #20]
 802b85e:	600f      	str	r7, [r1, #0]
 802b860:	bf18      	it	ne
 802b862:	2300      	movne	r3, #0
 802b864:	eba6 0807 	sub.w	r8, r6, r7
 802b868:	608b      	str	r3, [r1, #8]
 802b86a:	f1b8 0f00 	cmp.w	r8, #0
 802b86e:	dd9c      	ble.n	802b7aa <__sflush_r+0x1a>
 802b870:	6a21      	ldr	r1, [r4, #32]
 802b872:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802b874:	4643      	mov	r3, r8
 802b876:	463a      	mov	r2, r7
 802b878:	4628      	mov	r0, r5
 802b87a:	47b0      	blx	r6
 802b87c:	2800      	cmp	r0, #0
 802b87e:	dc06      	bgt.n	802b88e <__sflush_r+0xfe>
 802b880:	89a3      	ldrh	r3, [r4, #12]
 802b882:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b886:	81a3      	strh	r3, [r4, #12]
 802b888:	f04f 30ff 	mov.w	r0, #4294967295
 802b88c:	e78e      	b.n	802b7ac <__sflush_r+0x1c>
 802b88e:	4407      	add	r7, r0
 802b890:	eba8 0800 	sub.w	r8, r8, r0
 802b894:	e7e9      	b.n	802b86a <__sflush_r+0xda>
 802b896:	bf00      	nop
 802b898:	dfbffffe 	.word	0xdfbffffe

0802b89c <_fflush_r>:
 802b89c:	b538      	push	{r3, r4, r5, lr}
 802b89e:	690b      	ldr	r3, [r1, #16]
 802b8a0:	4605      	mov	r5, r0
 802b8a2:	460c      	mov	r4, r1
 802b8a4:	b913      	cbnz	r3, 802b8ac <_fflush_r+0x10>
 802b8a6:	2500      	movs	r5, #0
 802b8a8:	4628      	mov	r0, r5
 802b8aa:	bd38      	pop	{r3, r4, r5, pc}
 802b8ac:	b118      	cbz	r0, 802b8b6 <_fflush_r+0x1a>
 802b8ae:	6a03      	ldr	r3, [r0, #32]
 802b8b0:	b90b      	cbnz	r3, 802b8b6 <_fflush_r+0x1a>
 802b8b2:	f7ff fa2f 	bl	802ad14 <__sinit>
 802b8b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b8ba:	2b00      	cmp	r3, #0
 802b8bc:	d0f3      	beq.n	802b8a6 <_fflush_r+0xa>
 802b8be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802b8c0:	07d0      	lsls	r0, r2, #31
 802b8c2:	d404      	bmi.n	802b8ce <_fflush_r+0x32>
 802b8c4:	0599      	lsls	r1, r3, #22
 802b8c6:	d402      	bmi.n	802b8ce <_fflush_r+0x32>
 802b8c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b8ca:	f7ff fbd2 	bl	802b072 <__retarget_lock_acquire_recursive>
 802b8ce:	4628      	mov	r0, r5
 802b8d0:	4621      	mov	r1, r4
 802b8d2:	f7ff ff5d 	bl	802b790 <__sflush_r>
 802b8d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802b8d8:	07da      	lsls	r2, r3, #31
 802b8da:	4605      	mov	r5, r0
 802b8dc:	d4e4      	bmi.n	802b8a8 <_fflush_r+0xc>
 802b8de:	89a3      	ldrh	r3, [r4, #12]
 802b8e0:	059b      	lsls	r3, r3, #22
 802b8e2:	d4e1      	bmi.n	802b8a8 <_fflush_r+0xc>
 802b8e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b8e6:	f7ff fbc5 	bl	802b074 <__retarget_lock_release_recursive>
 802b8ea:	e7dd      	b.n	802b8a8 <_fflush_r+0xc>

0802b8ec <__swbuf_r>:
 802b8ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b8ee:	460e      	mov	r6, r1
 802b8f0:	4614      	mov	r4, r2
 802b8f2:	4605      	mov	r5, r0
 802b8f4:	b118      	cbz	r0, 802b8fe <__swbuf_r+0x12>
 802b8f6:	6a03      	ldr	r3, [r0, #32]
 802b8f8:	b90b      	cbnz	r3, 802b8fe <__swbuf_r+0x12>
 802b8fa:	f7ff fa0b 	bl	802ad14 <__sinit>
 802b8fe:	69a3      	ldr	r3, [r4, #24]
 802b900:	60a3      	str	r3, [r4, #8]
 802b902:	89a3      	ldrh	r3, [r4, #12]
 802b904:	071a      	lsls	r2, r3, #28
 802b906:	d525      	bpl.n	802b954 <__swbuf_r+0x68>
 802b908:	6923      	ldr	r3, [r4, #16]
 802b90a:	b31b      	cbz	r3, 802b954 <__swbuf_r+0x68>
 802b90c:	6823      	ldr	r3, [r4, #0]
 802b90e:	6922      	ldr	r2, [r4, #16]
 802b910:	1a98      	subs	r0, r3, r2
 802b912:	6963      	ldr	r3, [r4, #20]
 802b914:	b2f6      	uxtb	r6, r6
 802b916:	4283      	cmp	r3, r0
 802b918:	4637      	mov	r7, r6
 802b91a:	dc04      	bgt.n	802b926 <__swbuf_r+0x3a>
 802b91c:	4621      	mov	r1, r4
 802b91e:	4628      	mov	r0, r5
 802b920:	f7ff ffbc 	bl	802b89c <_fflush_r>
 802b924:	b9e0      	cbnz	r0, 802b960 <__swbuf_r+0x74>
 802b926:	68a3      	ldr	r3, [r4, #8]
 802b928:	3b01      	subs	r3, #1
 802b92a:	60a3      	str	r3, [r4, #8]
 802b92c:	6823      	ldr	r3, [r4, #0]
 802b92e:	1c5a      	adds	r2, r3, #1
 802b930:	6022      	str	r2, [r4, #0]
 802b932:	701e      	strb	r6, [r3, #0]
 802b934:	6962      	ldr	r2, [r4, #20]
 802b936:	1c43      	adds	r3, r0, #1
 802b938:	429a      	cmp	r2, r3
 802b93a:	d004      	beq.n	802b946 <__swbuf_r+0x5a>
 802b93c:	89a3      	ldrh	r3, [r4, #12]
 802b93e:	07db      	lsls	r3, r3, #31
 802b940:	d506      	bpl.n	802b950 <__swbuf_r+0x64>
 802b942:	2e0a      	cmp	r6, #10
 802b944:	d104      	bne.n	802b950 <__swbuf_r+0x64>
 802b946:	4621      	mov	r1, r4
 802b948:	4628      	mov	r0, r5
 802b94a:	f7ff ffa7 	bl	802b89c <_fflush_r>
 802b94e:	b938      	cbnz	r0, 802b960 <__swbuf_r+0x74>
 802b950:	4638      	mov	r0, r7
 802b952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b954:	4621      	mov	r1, r4
 802b956:	4628      	mov	r0, r5
 802b958:	f000 f806 	bl	802b968 <__swsetup_r>
 802b95c:	2800      	cmp	r0, #0
 802b95e:	d0d5      	beq.n	802b90c <__swbuf_r+0x20>
 802b960:	f04f 37ff 	mov.w	r7, #4294967295
 802b964:	e7f4      	b.n	802b950 <__swbuf_r+0x64>
	...

0802b968 <__swsetup_r>:
 802b968:	b538      	push	{r3, r4, r5, lr}
 802b96a:	4b2a      	ldr	r3, [pc, #168]	; (802ba14 <__swsetup_r+0xac>)
 802b96c:	4605      	mov	r5, r0
 802b96e:	6818      	ldr	r0, [r3, #0]
 802b970:	460c      	mov	r4, r1
 802b972:	b118      	cbz	r0, 802b97c <__swsetup_r+0x14>
 802b974:	6a03      	ldr	r3, [r0, #32]
 802b976:	b90b      	cbnz	r3, 802b97c <__swsetup_r+0x14>
 802b978:	f7ff f9cc 	bl	802ad14 <__sinit>
 802b97c:	89a3      	ldrh	r3, [r4, #12]
 802b97e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b982:	0718      	lsls	r0, r3, #28
 802b984:	d422      	bmi.n	802b9cc <__swsetup_r+0x64>
 802b986:	06d9      	lsls	r1, r3, #27
 802b988:	d407      	bmi.n	802b99a <__swsetup_r+0x32>
 802b98a:	2309      	movs	r3, #9
 802b98c:	602b      	str	r3, [r5, #0]
 802b98e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802b992:	81a3      	strh	r3, [r4, #12]
 802b994:	f04f 30ff 	mov.w	r0, #4294967295
 802b998:	e034      	b.n	802ba04 <__swsetup_r+0x9c>
 802b99a:	0758      	lsls	r0, r3, #29
 802b99c:	d512      	bpl.n	802b9c4 <__swsetup_r+0x5c>
 802b99e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b9a0:	b141      	cbz	r1, 802b9b4 <__swsetup_r+0x4c>
 802b9a2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b9a6:	4299      	cmp	r1, r3
 802b9a8:	d002      	beq.n	802b9b0 <__swsetup_r+0x48>
 802b9aa:	4628      	mov	r0, r5
 802b9ac:	f7ff fbd0 	bl	802b150 <_free_r>
 802b9b0:	2300      	movs	r3, #0
 802b9b2:	6363      	str	r3, [r4, #52]	; 0x34
 802b9b4:	89a3      	ldrh	r3, [r4, #12]
 802b9b6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802b9ba:	81a3      	strh	r3, [r4, #12]
 802b9bc:	2300      	movs	r3, #0
 802b9be:	6063      	str	r3, [r4, #4]
 802b9c0:	6923      	ldr	r3, [r4, #16]
 802b9c2:	6023      	str	r3, [r4, #0]
 802b9c4:	89a3      	ldrh	r3, [r4, #12]
 802b9c6:	f043 0308 	orr.w	r3, r3, #8
 802b9ca:	81a3      	strh	r3, [r4, #12]
 802b9cc:	6923      	ldr	r3, [r4, #16]
 802b9ce:	b94b      	cbnz	r3, 802b9e4 <__swsetup_r+0x7c>
 802b9d0:	89a3      	ldrh	r3, [r4, #12]
 802b9d2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802b9d6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802b9da:	d003      	beq.n	802b9e4 <__swsetup_r+0x7c>
 802b9dc:	4621      	mov	r1, r4
 802b9de:	4628      	mov	r0, r5
 802b9e0:	f000 f840 	bl	802ba64 <__smakebuf_r>
 802b9e4:	89a0      	ldrh	r0, [r4, #12]
 802b9e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b9ea:	f010 0301 	ands.w	r3, r0, #1
 802b9ee:	d00a      	beq.n	802ba06 <__swsetup_r+0x9e>
 802b9f0:	2300      	movs	r3, #0
 802b9f2:	60a3      	str	r3, [r4, #8]
 802b9f4:	6963      	ldr	r3, [r4, #20]
 802b9f6:	425b      	negs	r3, r3
 802b9f8:	61a3      	str	r3, [r4, #24]
 802b9fa:	6923      	ldr	r3, [r4, #16]
 802b9fc:	b943      	cbnz	r3, 802ba10 <__swsetup_r+0xa8>
 802b9fe:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ba02:	d1c4      	bne.n	802b98e <__swsetup_r+0x26>
 802ba04:	bd38      	pop	{r3, r4, r5, pc}
 802ba06:	0781      	lsls	r1, r0, #30
 802ba08:	bf58      	it	pl
 802ba0a:	6963      	ldrpl	r3, [r4, #20]
 802ba0c:	60a3      	str	r3, [r4, #8]
 802ba0e:	e7f4      	b.n	802b9fa <__swsetup_r+0x92>
 802ba10:	2000      	movs	r0, #0
 802ba12:	e7f7      	b.n	802ba04 <__swsetup_r+0x9c>
 802ba14:	2000017c 	.word	0x2000017c

0802ba18 <__swhatbuf_r>:
 802ba18:	b570      	push	{r4, r5, r6, lr}
 802ba1a:	460c      	mov	r4, r1
 802ba1c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ba20:	2900      	cmp	r1, #0
 802ba22:	b096      	sub	sp, #88	; 0x58
 802ba24:	4615      	mov	r5, r2
 802ba26:	461e      	mov	r6, r3
 802ba28:	da0d      	bge.n	802ba46 <__swhatbuf_r+0x2e>
 802ba2a:	89a3      	ldrh	r3, [r4, #12]
 802ba2c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802ba30:	f04f 0100 	mov.w	r1, #0
 802ba34:	bf0c      	ite	eq
 802ba36:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802ba3a:	2340      	movne	r3, #64	; 0x40
 802ba3c:	2000      	movs	r0, #0
 802ba3e:	6031      	str	r1, [r6, #0]
 802ba40:	602b      	str	r3, [r5, #0]
 802ba42:	b016      	add	sp, #88	; 0x58
 802ba44:	bd70      	pop	{r4, r5, r6, pc}
 802ba46:	466a      	mov	r2, sp
 802ba48:	f000 f848 	bl	802badc <_fstat_r>
 802ba4c:	2800      	cmp	r0, #0
 802ba4e:	dbec      	blt.n	802ba2a <__swhatbuf_r+0x12>
 802ba50:	9901      	ldr	r1, [sp, #4]
 802ba52:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802ba56:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802ba5a:	4259      	negs	r1, r3
 802ba5c:	4159      	adcs	r1, r3
 802ba5e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802ba62:	e7eb      	b.n	802ba3c <__swhatbuf_r+0x24>

0802ba64 <__smakebuf_r>:
 802ba64:	898b      	ldrh	r3, [r1, #12]
 802ba66:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802ba68:	079d      	lsls	r5, r3, #30
 802ba6a:	4606      	mov	r6, r0
 802ba6c:	460c      	mov	r4, r1
 802ba6e:	d507      	bpl.n	802ba80 <__smakebuf_r+0x1c>
 802ba70:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802ba74:	6023      	str	r3, [r4, #0]
 802ba76:	6123      	str	r3, [r4, #16]
 802ba78:	2301      	movs	r3, #1
 802ba7a:	6163      	str	r3, [r4, #20]
 802ba7c:	b002      	add	sp, #8
 802ba7e:	bd70      	pop	{r4, r5, r6, pc}
 802ba80:	ab01      	add	r3, sp, #4
 802ba82:	466a      	mov	r2, sp
 802ba84:	f7ff ffc8 	bl	802ba18 <__swhatbuf_r>
 802ba88:	9900      	ldr	r1, [sp, #0]
 802ba8a:	4605      	mov	r5, r0
 802ba8c:	4630      	mov	r0, r6
 802ba8e:	f7ff f81b 	bl	802aac8 <_malloc_r>
 802ba92:	b948      	cbnz	r0, 802baa8 <__smakebuf_r+0x44>
 802ba94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ba98:	059a      	lsls	r2, r3, #22
 802ba9a:	d4ef      	bmi.n	802ba7c <__smakebuf_r+0x18>
 802ba9c:	f023 0303 	bic.w	r3, r3, #3
 802baa0:	f043 0302 	orr.w	r3, r3, #2
 802baa4:	81a3      	strh	r3, [r4, #12]
 802baa6:	e7e3      	b.n	802ba70 <__smakebuf_r+0xc>
 802baa8:	89a3      	ldrh	r3, [r4, #12]
 802baaa:	6020      	str	r0, [r4, #0]
 802baac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bab0:	81a3      	strh	r3, [r4, #12]
 802bab2:	9b00      	ldr	r3, [sp, #0]
 802bab4:	6163      	str	r3, [r4, #20]
 802bab6:	9b01      	ldr	r3, [sp, #4]
 802bab8:	6120      	str	r0, [r4, #16]
 802baba:	b15b      	cbz	r3, 802bad4 <__smakebuf_r+0x70>
 802babc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bac0:	4630      	mov	r0, r6
 802bac2:	f000 f81d 	bl	802bb00 <_isatty_r>
 802bac6:	b128      	cbz	r0, 802bad4 <__smakebuf_r+0x70>
 802bac8:	89a3      	ldrh	r3, [r4, #12]
 802baca:	f023 0303 	bic.w	r3, r3, #3
 802bace:	f043 0301 	orr.w	r3, r3, #1
 802bad2:	81a3      	strh	r3, [r4, #12]
 802bad4:	89a3      	ldrh	r3, [r4, #12]
 802bad6:	431d      	orrs	r5, r3
 802bad8:	81a5      	strh	r5, [r4, #12]
 802bada:	e7cf      	b.n	802ba7c <__smakebuf_r+0x18>

0802badc <_fstat_r>:
 802badc:	b538      	push	{r3, r4, r5, lr}
 802bade:	4d07      	ldr	r5, [pc, #28]	; (802bafc <_fstat_r+0x20>)
 802bae0:	2300      	movs	r3, #0
 802bae2:	4604      	mov	r4, r0
 802bae4:	4608      	mov	r0, r1
 802bae6:	4611      	mov	r1, r2
 802bae8:	602b      	str	r3, [r5, #0]
 802baea:	f7d6 f86d 	bl	8001bc8 <_fstat>
 802baee:	1c43      	adds	r3, r0, #1
 802baf0:	d102      	bne.n	802baf8 <_fstat_r+0x1c>
 802baf2:	682b      	ldr	r3, [r5, #0]
 802baf4:	b103      	cbz	r3, 802baf8 <_fstat_r+0x1c>
 802baf6:	6023      	str	r3, [r4, #0]
 802baf8:	bd38      	pop	{r3, r4, r5, pc}
 802bafa:	bf00      	nop
 802bafc:	20013d54 	.word	0x20013d54

0802bb00 <_isatty_r>:
 802bb00:	b538      	push	{r3, r4, r5, lr}
 802bb02:	4d06      	ldr	r5, [pc, #24]	; (802bb1c <_isatty_r+0x1c>)
 802bb04:	2300      	movs	r3, #0
 802bb06:	4604      	mov	r4, r0
 802bb08:	4608      	mov	r0, r1
 802bb0a:	602b      	str	r3, [r5, #0]
 802bb0c:	f7d6 f862 	bl	8001bd4 <_isatty>
 802bb10:	1c43      	adds	r3, r0, #1
 802bb12:	d102      	bne.n	802bb1a <_isatty_r+0x1a>
 802bb14:	682b      	ldr	r3, [r5, #0]
 802bb16:	b103      	cbz	r3, 802bb1a <_isatty_r+0x1a>
 802bb18:	6023      	str	r3, [r4, #0]
 802bb1a:	bd38      	pop	{r3, r4, r5, pc}
 802bb1c:	20013d54 	.word	0x20013d54

0802bb20 <_init>:
 802bb20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb22:	bf00      	nop
 802bb24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bb26:	bc08      	pop	{r3}
 802bb28:	469e      	mov	lr, r3
 802bb2a:	4770      	bx	lr

0802bb2c <_fini>:
 802bb2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb2e:	bf00      	nop
 802bb30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bb32:	bc08      	pop	{r3}
 802bb34:	469e      	mov	lr, r3
 802bb36:	4770      	bx	lr
